digraph {
find_python_files;
join;
exists;
walk;
endswith;
append;
analyze_imports;
set;
open;
parse;
print;
read;
isinstance;
startswith;
split;
len;
add;
find_top_level_packages;
listdir;
sorted;
isdir;
find_collection_modules;
relpath;
replace;
build_dependency_graph;
items;
list;
main;
dirname;
abspath;
dumps;
req_file;
extend;
map;
readlines;
__call_checker;
announce;
call;
str;
_isort;
_black;
_pass;
_fail;
run;
exit;
get_changed_files;
Repo;
diff;
commit;
command;
option;
dump;
get_init_imports;
copy;
dict;
isfile;
write;
send_slack_notification;
get;
int;
Github;
get_repo;
post;
raise_for_status;
get_pull;
jobs;
get_workflow_run;
setup;
add_css_file;
add_js_file;
gather_mounts;
expanduser;
keys;
open_dict;
info;
check_root_path;
FileNotFoundError;
ValueError;
merge_configs;
masked_copy;
resolve;
merge;
check_missing_values;
hasattr;
check_config_mount_paths;
check_mounted_path;
check_if_mounted;
get_unmounted_filepath;
check_remote_mount_directories;
filepath_check;
update_exp_manager_runtime;
get_execution_script_cmd;
format;
warning;
basename;
getenv;
hydra_runner;
absolute;
add_mount_path;
create_remote_directory;
load;
Experiment;
strftime;
create_remote_config;
to_object;
range;
run_exp;
Path;
add_task;
now;
get_mounted_filepath;
set_grad_enabled;
is_dataclass;
PunctuationCapitalization;
word_error_rate;
structured;
RuntimeError;
is_available;
separate_punctuation;
do_lowercase;
rm_punctuation;
DatasetPunctuationErrorRate;
compute;
compute_metrics_per_sample;
reset;
empty_cache;
loads;
get_base_model;
set_trainer;
restore_from;
is_global_rank_zero;
from_pretrained;
sleep;
check_vocabulary;
update_tokenizer;
change_vocabulary;
state_dict;
load_state_dict;
setup_dataloaders;
convert_model_config_to_dict_config;
setup_training_data;
setup_multiple_validation_data;
setup_multiple_test_data;
Trainer;
exp_manager;
setup_optimization;
fit;
NotImplementedError;
from_config_dict;
resolve_trainer_cfg;
to_yaml;
set_float32_matmul_precision;
setup_model;
eval;
prepare_audio_data;
compute_output_filename;
SimpleTimer;
asarray;
write_transcription;
seed_everything;
device;
to;
set_default_att_context_size;
autocast;
cal_write_wer;
getattr;
change_decoding_strategy;
no_grad;
get_transcribe_config;
restore_transcription_order;
type;
unlink;
parse_multitask_prompt;
next;
start;
transcribe;
stop;
to_container;
parameters;
mean;
total_sec;
std;
match_train_config;
setattr;
_setup_dataloader_from_config;
makedirs;
ASRPredictionWriter;
predict;
close_output_file;
is_initialized;
set_struct;
barrier;
load_from_checkpoint;
from_iterable;
update_encoder_config_to_support_adapter;
get_registered_adapter;
update_model_cfg;
pop;
set_enabled_adapters;
freeze;
test;
calculate_original_scale;
abs;
min;
calculate_adapt_werr;
max;
parse_results;
read_csv;
drop;
apply;
round;
to_csv;
display_analysis_table;
sum;
display_results;
unique;
get_best_config;
sort_values;
upper;
groupby;
analyze_results;
__validate_arg_type;
dtype;
update_model_config_to_support_adapter;
add_global_adapter_cfg;
DictConfig;
update_adapter_cfg;
create;
add_adapter;
is_adapter_available;
train;
unfreeze_enabled_adapters;
save_adapters;
getcwd;
clean_exp_ckpt;
extract_transcriptions;
perform_streaming;
get_initial_cache_state;
iter;
enumerate;
cat;
inference_mode;
size;
numpy;
get_all_audios;
conformer_stream_step;
cpu;
is_buffer_empty;
calc_drop_extra_pre_encoded;
ArgumentParser;
add_argument;
parse_args;
CacheAwareStreamingAudioBuffer;
setup_streaming_params;
append_audio_file;
time;
reset_buffer;
splitext;
deepcopy;
FrameBatchMultiTaskAED;
error;
glob;
get_buffered_pred_feat_multitaskAED;
float;
ceil;
FrameBatchASR;
get_buffered_pred_feat;
get_buffered_pred_feat_rnnt;
BatchedFrameASRRNNT;
LongestCommonSubsequenceBatchedFrameASRRNNT;
floor;
BatchedFrameASRTDT;
EncDecCTCModel;
maybe_init_from_pretrained_checkpoint;
prepare_test;
EncDecCTCModelBPE;
EncDecHybridRNNTCTCBPEModel;
EncDecHybridRNNTCTCModel;
extract_model_ctc;
all;
allclose;
extract_model_rnnt;
EncDecRNNTModel;
EncDecRNNTBPEModel;
mkdir;
prepare_inference_manifest;
profile_fn;
extract_audio_features;
run_vad_inference;
run_asr_inference;
table;
key_averages;
write_manifest;
read_manifest;
is_file;
is_absolute;
setup_test_data;
init_frame_vad_model;
record_fn;
tqdm;
strip;
test_dataloader;
preprocessor;
save;
squeeze;
is_dir;
init_vad_model;
safe_load;
generate_vad_frame_pred;
generate_overlap_vad_seq;
generate_vad_segment_table;
get_vad_stream_status;
softmax;
tolist;
vad_model;
init_asr_model;
DataLoader;
get_bpe_dataset;
get_char_dataset;
forward;
decode_function;
from_asr_config;
ASRWithTTSModel;
validate;
ASRCTMPredictionWriter;
AlignerWrapperModel;
writelines;
SentencePieceTokenizer;
AutoTokenizer;
Popen;
close;
communicate;
Thread;
lower;
text_to_ids;
EncDecK2SeqModelBPE;
EncDecK2RnntSeqModelBPE;
score_with_sctk;
check_output;
strerror;
get_utt_info;
cuda;
EncDecCTCModelConfig;
update_model_config;
asdict;
NemoConfig;
EncDecCTCModelConfigBuilder;
set_labels;
set_optim;
build;
parse_arguments;
assert_args;
export_model_if_required;
export;
resolve_audio_filepaths;
ONNXGreedyBatchedRNNTInfer;
TemporaryDirectory;
_setup_transcribe_dataloader;
zip;
decoding;
decode_hypothesis;
TorchscriptGreedyBatchedRNNTInfer;
set_defaults;
QuantDescriptor;
set_default_quant_desc_input;
named_modules;
compute_amax;
save_to;
disable_quant;
enable_calib;
disable;
asr_model;
load_calib_amax;
initialize;
CTCDecodingConfig;
CTCDecoding;
WER;
evaluate;
export_onnx;
OrderedDict;
pprint;
enable;
ctc_decoder_predictions_tensor;
detach;
get_min_max_input_shape;
build_trt_engine;
Builder;
create_network;
OnnxParser;
create_builder_config;
parse_from_file;
create_optimization_profile;
set_shape;
add_optimization_profile;
build_engine;
serialize;
set_flag;
trt_inference;
set_binding_shape;
pagelocked_empty;
register_host_memory;
memcpy_htod_async;
execute_async_v2;
memcpy_dtoh_async;
synchronize;
argmax;
tuple;
ascontiguousarray;
get_binding_shape;
ravel;
tensor;
Stream;
Runtime;
deserialize_cuda_engine;
create_execution_context;
get_profile_shape;
mem_alloc;
volume;
frame_vad_infer_load_manifest;
debug;
prepare_manifest;
as_posix;
frame_vad_eval_detection_error;
item;
EncDecFrameClassificationModel;
destroy_process_group;
EncDecSpeakerLabelModel;
EncDecClassificationModel;
write_rttm2manifest;
rsplit;
EncDecMultiTaskModel;
import_class_by_path;
build_special_tokenizer;
EncDecDenoiseMaskedTokenPredModel;
SpeechEncDecSelfSupervisedModel;
load_ssl_encoder;
EncDecTransfModelBPE;
get_evaluation_dataloader;
get_audio_to_target_dataset;
get_lhotse_dataloader_from_config;
LhotseAudioToTargetDataset;
cpu_count;
get_metrics;
AudioMetricWrapper;
SignalDistortionRatio;
ScaleInvariantSignalDistortionRatio;
ShortTimeObjectiveIntelligibility;
PerceptualEvaluationSpeechQuality;
SquimMOSMetric;
SquimObjectiveMetric;
defaultdict;
equal;
metric;
get_full_path;
get_model_class;
model_class;
commonpath;
is_relative_to;
rstrip;
process;
stat;
get_args;
llama3_145m;
factory;
Partial;
partial;
Config;
train_config;
AutoConfigurator;
generate_configs;
pretrain;
get_results;
values;
get_chat_template;
make_squad_hf_dataset;
FirstRankPerNode;
apply_chat_template;
HFDatasetDataModulePacked;
HFDatasetDataModule;
insert;
index;
formatting_prompts_func_with_chat_template;
pad_to_seq_length;
fmt_fn_;
tokenizer;
make_strategy;
SingleDeviceStrategy;
DDPStrategy;
make_checkpoint_io;
FSDP2Strategy;
CPUOffloadPolicy;
logger;
ModelCheckpoint;
NeMoLogger;
HFAutoModelForCausalLM;
finetune;
calculate_valid_accumulate_grad_batches;
WandbLogger;
JitConfig;
TEConfig;
AutoResume;
HFMockDataModule;
LoRA;
JitTransform;
te_adam_with_flat_lr;
pytorch_adam_with_flat_lr;
formatting_prompts_func;
bool;
vLLMHFExporter;
DeployPyTriton;
add_lora_models;
deploy;
NemoQueryLLM;
query_llm;
run_forward;
MegatronStrategy;
to_fabric;
load_context;
load_model;
randint;
expand_as;
model;
MegatronMixedPrecision;
ckpt_to_context_subdir;
unsqueeze;
arange;
custom_llama3_8b;
pretrain_recipe;
custom_llama3_70b;
local_executor_torchrun;
LocalExecutor;
slurm_executor;
SlurmExecutor;
SSHTunnel;
GitArchivePackager;
my_slurm_executor;
trainer;
bf16_mixed;
pretrain_performance_optimizations;
default_log;
distributed_fused_adam_with_cosine_annealing;
default_resume;
tensorboard_logger;
multi_dc_recipe;
__init__;
on_train_batch_end;
on_load_checkpoint;
raise_signal;
convert;
AppState;
create_trainer;
initialize_model_parallel;
get_pipeline_model_parallel_rank;
get_tensor_model_parallel_rank;
inject_model_parallel_rank;
NLPSaveRestoreConnector;
MegatronTrainerBuilder;
_set_model_restore_state;
ptl_load_state;
cls;
named_parameters;
named_buffers;
register_artifact;
load_config;
update;
vars;
param_to_weights;
view;
empty;
reshape;
GradScaler;
NLPDDPStrategy;
is_bf16_supported;
MegatronHalfPrecisionPlugin;
PipelineMixedPrecisionPlugin;
safe_open;
get_tensor;
do_inference;
generate;
create_neva_model_and_processor;
TemporalNevaDataset;
quantize;
group_by_media;
lstrip;
__len__;
__getitem__;
image_processor;
video_processor;
forward_loop;
TensorRTMMExporter;
MegatronNevaModel;
merge_cfg_with;
load_adapters;
MegatronLMPPTrainerBuilder;
peft_cfg_cls;
summarize;
iou;
precision_func;
parse_start_end_timestamps;
compile;
finditer;
end;
group;
precision;
request_nvidia_api;
iter_lines;
decode;
convert_time_token;
sub;
get_result;
literal_eval;
b64decode;
BytesIO;
get_eval;
parse_score;
generate_prompt;
flush;
split_list;
get_chunk;
preprocess;
uuid;
eval_model;
first_fit;
chunkify;
parallel_first_fit;
ThreadPoolExecutor;
as_completed;
submit;
result;
first_fit_decreasing;
first_fit_shuffle;
shuffle;
shuffle_and_pack;
array;
pack_sequence;
seed;
packing_fn;
globals;
set_sharing_strategy;
get_nmt_tokenizer;
create_image_processor;
get_bin_path;
IndexedDatasetBuilder;
get_idx_path;
finalize;
make_supervised_data_module;
add_item;
end_document;
match;
IndexedDataset;
permutation;
process_chunk;
set_inference_config;
merge_inference_cfg;
load_adapters_for_inference;
load_audio_encoder_for_inference;
restore_from_pretrained_models;
get_config_and_state_dict_from_nemo;
chdir;
system;
_load_state_dict_from_disk;
_unpack_nemo_file;
get_llm_model_state_dict;
get_lora_state_dict;
get_perception_state_dict;
save_llm_model;
load_state_dict_helper;
save_nemo_weights;
separate_speechllm_model;
AudioPerceptionModule;
perception;
randn;
load_config_and_state_from_nemo;
mapping_hf_state_dict;
load_safetensors;
pl_load;
MegatronLatentDiffusion;
MegatronControlNet;
MegatronDiffusionEngine;
TorchElasticEnvironment;
get_control_input;
imread;
resize;
stack;
rearrange;
from_numpy;
encode_prompt;
encode;
initialize_sampler;
DDIMSampler;
PLMSSampler;
decode_images;
decode_first_stage;
clamp;
torch_to_numpy;
permute;
numpy_to_pil;
astype;
fromarray;
pipeline;
perf_counter;
sample;
current_device;
setup_trainer_and_model_for_inference;
manual_seed;
Generator;
ImageLogger;
MegatronControlNetTrainerBuilder;
_training_strategy;
_plugins;
prepare_reg_data;
destroy_model_parallel;
MegatronDreamBooth;
model_cfg_modifier;
ImagenPipelineConfig;
MegatronImagen;
DiscreteEpsDDPMDenoiser;
CFGDenoiser;
get_learned_conditioning;
get_sigmas;
randn_like;
sample_euler_ancestral;
new;
repeat;
zeros_like;
paste;
mode;
encode_first_stage;
super;
chunk;
inner_model;
MegatronLatentDiffusionEdit;
set_device;
SamplingPipeline;
text_to_image;
refiner;
CUDAGraphCallback;
MegatronStableDiffusionTrainerBuilder;
stream;
backward;
zero_grad;
diffusion_model;
get_dummy_inputs;
get_input_output_names;
get_dynamic_axis;
VAEWrapper;
FrozenCLIPWrapper;
FrozenOpenCLIPWrapper;
ones;
post_quant_conv;
decoder;
transformer;
pad;
encode_with_transformer;
get_input_profile;
perform_save_locally;
do_calibrate;
get_input_profile_unet;
generate_dummy_inputs;
register;
load_calib_prompts;
quantize_lvl;
onnx_export;
get_int8_config;
restore;
NLPDDPStrategyNotebook;
NLPFSDPStrategy;
StableDiffusionXLTRTPipeline;
loadEngines;
activateEngines;
loadResources;
Engine;
calculateMaxDeviceMemory;
cudaMalloc;
activate;
cudaStreamCreate;
allocate_buffers;
cudaEventCreate;
get_shape_dict;
runEngine;
infer;
tokenize;
run_denoiser_engine;
get_sampler_config;
ConcatTimestepEmbedderND;
sampler;
prod;
denoiser;
additional_emb_model;
Tensor;
mapping_openclip_state_dict;
concat;
MegatronCLIPModel;
create_model_and_transforms;
accuracy;
t;
eq;
topk;
torch_dtype_from_precision;
build_imagenet_validation_dataloader;
average_losses_across_data_parallel_group;
text_encoder;
norm;
vision_encoder;
normalize;
zeros;
get_preprocess_fns;
text_transform;
val_image_transform;
_get_autocast_dtype;
image_transform;
sigmoid;
image_transform_fn;
on_train_epoch_start;
on_train_epoch_end;
should_benchmark;
on_train_batch_start;
on_validation_epoch_start;
on_validation_epoch_end;
on_validation_batch_start;
on_validation_batch_end;
on_fit_end;
train_dataloader;
val_dataloader;
get_class;
instantiate;
model_cls;
mesh;
to_img;
to_pil_image;
sqrt;
findall;
load_prompts;
load_model_from_config;
round_to_mult;
remove_padded_prompts;
CustomProgressBar;
timedelta;
to_imgstr;
pil_to_tensor;
RequestDataSet;
lcs;
analyze;
from_lines;
get_html;
get_spans;
find;
get_spans_html;
instantiate_model_and_trainer;
DuplexTextNormalizationModel;
ElectronicNormalizer;
WhitelistNormalizer;
normalize_list;
_get_predictions;
input;
post_process_punct;
_infer;
TextNormalizationTestDataset;
DuplexTaggerModel;
DuplexDecoderModel;
setup_cgs;
setup_validation_data;
get_available_model_names;
list_available_models;
_preprocess_file;
_write_batches_to_tarfiles;
TextNormalizationDecoderDataset;
batchify;
remove;
read_google_data;
inflect_engine;
engine;
process_url;
flatten;
convert2digits;
number_to_words;
convert_fraction;
convert_superscript;
add_space_around_dash;
search;
ignore;
process_file;
include_sentence;
read_data_file;
register_patterns;
lookup_patterns;
update_patterns;
create_pattern;
print_stats;
ClassifyFst;
VerbalizeFinalFst;
TokenParser;
MosesProcessor;
PunctuationFst;
closure;
optimize;
Far;
WordFst;
ElectronicFst;
add_weight;
generator_main;
compose;
VerbalizeFst;
delete;
WhiteListFst;
build_index;
IndexFlatL2;
IndexIVFFlat;
index_cpu_to_all_gpus;
write_index;
File;
index_gpu_to_cpu;
setup_dataloader;
get_index_embeddings;
PCA;
reduce_embedding_dim;
get_num_gpus;
create_dataset;
transform;
EntityLinkingModel;
map_idx_to_ids;
get_query_embedding;
LongTensor;
query_index;
read_index;
zfill;
process_umls_training_dataset;
read_table;
combinations;
random;
process_umls_index_dataset;
iterrows;
update_data_dir;
GLUEModel;
BertDPRModel;
BertJointIRModel;
set_start_method;
MegatronBertTrainerBuilder;
flatten_dict;
use_inference_server;
is_pipeline_first_stage;
MegatronServer;
broadcast;
new_event_loop;
_peft_cfg;
IntentSlotClassificationModel;
update_data_dir_for_testing;
predict_from_examples;
MultiLabelIntentSlotClassificationModel;
optimize_threshold;
BERTLMModel;
get_split_dim;
Exception;
split_tensor_for_tp;
combine_tp_tensors;
force_cpu_model;
restore_model_config;
write_tp_pp_split;
clone;
split_tp_partition_only;
extractall;
merge_partition;
mkdtemp;
getmembers;
MegatronMambaModel;
clear;
extractfile;
MegatronBARTModel;
ModelSummary;
MegatronBertModel;
compute_tp_splits;
compute_tp_merge;
narrow;
debug_log_split_param_diff;
split_partition;
compute_split_index;
compute_splits;
compute_split_offset;
GPTHandler;
T5Handler;
rmtree;
set_virtual_parallel_rank_safely;
NamedTemporaryFile;
seek;
nemo_export;
fake_initialize_model_parallel;
load_distillation_config;
LogitsKLLoss;
all_reduce_autograd;
adjust_distillation_model_for_mcore;
MethodType;
delattr;
_compute_language_model_loss;
ModeloptStateManager;
hide_teacher_model;
_sharded_state_dict;
_teacher_provider;
_merge_model_arch_fields;
get_model_module_list;
is_missing;
DistillationMegatronGPTModel;
model_provider_func;
MCoreGPTModel;
AssertionError;
extend_instance;
get_specs;
get_forward_output_and_loss_func;
get_batch;
get_batch_on_this_context_parallel_rank;
get_pipeline_model_parallel_world_size;
is_pipeline_last_stage;
PackedSeqParams;
get_context_parallel_world_size;
loss_func;
unwrap_model;
compute_kd_loss;
isnan;
all_reduce;
Version;
argmin;
version;
count_nonzero;
get_data_parallel_group;
gather_from_tensor_model_parallel_region;
configure_optimizers;
pre_forward;
post_forward;
contiguous;
transpose;
exp;
expand;
get_tensor_model_parallel_group;
kl_div;
log_softmax;
log;
fwd_output_and_loss_func;
trim_layers;
MCoreTokenizerWrappper;
GPTInferenceWrapper;
SimpleTextGenerationController;
MCoreEngine;
CommonInferenceParams;
ids_to_text;
detokenize;
MegatronGPTModel;
get_calib_data_iter;
load_dataset;
drop_mcore_gpt_layers;
prune;
predict_step;
Quantizer;
modify_model_config;
EnvironmentError;
compute_model_parallel_rank;
NLPMixedPrecisionPlugin;
NLPNativeBfloat16PrecisionPlugin;
NLPPrecisionPlugin;
modify_pretrained_cfg;
install_megatron_dependence;
spec_from_loader;
module_from_spec;
exec;
parse_weights;
add_optimizer_state;
pl_legacy_patch;
load_hparams_from_tags_csv;
load_hparams_from_yaml;
megatron_lm_inject_model_parallel_rank;
uninject_model_parallel_rank;
initialize_model_parallel_for_nemo;
save_checkpoint;
NotImplemented;
build_key_mapping;
MegatronRetrievalModel;
make_base_shapes;
MixedPrecisionPlugin;
is_unitialized;
setup_environment;
launch;
_modify_config;
load_from_nemo;
modify_confg_fn;
MegatronRetroFinetuneModel;
StatelessTimer;
register_optimizer;
AdamWParams;
AdamParams;
MegatronRetroModel;
process_qasample;
process_qaresponse;
evaluate_predictions;
QAExample;
T5RequestDataset;
MegatronT5Model;
MegatronT5TrainerBuilder;
validate_checkpoint_loading_args;
load_from_checkpoint_dir;
TransformerLMModel;
make_moe_config_from_dense;
unwrap;
upcycle;
upcycle_state_dict;
get_forward_loop;
islice;
fwd_bwd_step;
MTBottleneckConfig;
MTBottleneckModel;
MTDataPreproc;
MTEncDecConfig;
MTEncDecModel;
MTFineTuneConfig;
_CheckpointConnector;
MegatronNMTModel;
AttributeError;
translate_text;
prepare_inference_batch;
ensemble_generator;
ids_to_postprocessed_text;
translate;
EnsembleBeamSearchSequenceGenerator;
BeamSearchSequenceGeneratorWithLanguageModel;
BeamSearchSequenceGenerator;
score_fusion;
eval_loss_fn;
lm_model;
IndexError;
replace_beam_with_sampling;
TarredTranslationDataset;
TarredSentenceDataset;
batch_translate;
spawn;
device_count;
load_json;
dump_json;
get_context_from_passages;
convert_msmarco_to_squad_format;
format_answers_into_squad_format;
download;
urlopen;
inference;
from_defaults;
load_index_from_storage;
as_query_engine;
query;
NeMoGPTLLM;
NeMoBertEmbeddings;
load_data;
SentenceSplitter;
from_documents;
persist;
SimpleDirectoryReader;
TarInfo;
addfile;
getbuffer;
SpellcheckingAsrCustomizationModel;
Text2SparqlModel;
download_text2sparql;
if_exist;
Request;
process_text2sparql;
reader;
TextClassificationModel;
classifytext;
process_imdb;
process_sst2;
_read_tsv;
process_chemprot;
process_thucnews;
ThutmoseTaggerModel;
spoken_preprocessing;
fill_alignment_matrix;
check_monotonicity;
readline;
get_targets;
get_targets_from_back;
filter_file;
casefold;
process_file_itn;
get_src_and_dst_for_alignment;
process_line;
get_replacement_vocab;
Counter;
most_common;
filter_by_vocab;
get_labeled_corpus;
prepare_subcorpora_from_data;
subn;
add_mutually_exclusive_group;
load_manifest;
add_punctuation_capitalization;
PunctuationCapitalizationLexicalAudioModel;
update_config_after_restoring_from_checkpoint;
PunctuationCapitalizationLexicalAudioConfig;
PunctuationCapitalizationModel;
PunctuationCapitalizationConfig;
add_predictions;
evaluate_from_file;
TokenClassificationModel;
setup_loss;
check_tar_file_prefix;
check_labels_for_being_unique_before_building_label_ids;
create_tarred_dataset;
build_label_ids_from_list_of_labels;
__extract_file;
__maybe_download_file;
__process_english_sentences;
__split_into_train_dev;
__delete_file;
__convert_data;
ZeroShotIntentModel;
SLURPEvaluator;
run_inference;
format_results;
SLUIntentSlotBPEModel;
unfreeze;
parse_semantics_str2dict;
_parse_entity;
get_instance;
scenario_f1;
action_f1;
intent_f1;
span_f1;
get_metric;
slu_f1;
update_scores_dict;
slurp_inference;
get_verbosity;
set_verbosity;
set_decoding_strategy;
diarize;
ClusteringDiarizer;
ASRDecoderTimeStamps;
set_asr_model;
run_ASR;
OfflineDiarWithASR;
run_diarization;
get_transcript_with_speaker_labels;
gather_eval_results;
print_errors;
write_session_level_result_in_csv;
optuna_suggest_params;
suggest_float;
get_tensor_path;
diarization_objective;
convert_pred_mat_to_segments;
score_labels;
run_optuna_hyperparam_search;
create_study;
getLogger;
setLevel;
addHandler;
enable_propagation;
StreamHandler;
FileHandler;
predlist_to_timestamps;
timestamps_to_pyannote_object;
get_uniqname_from_filepath;
load_postprocessing_from_yaml;
audio_rttm_map;
test_batch;
read_and_maybe_sort_manifest;
EncDecDiarLabelModel;
NeuralDiarizer;
SortformerEncLabelModel;
get_embeddings;
batch_inference;
embedding_normalize;
WaveformFeaturizer;
AudioToSpeechLabelDataset;
matmul;
where;
get_acc;
dot;
speech_to_text_llm_train;
speech_to_text_llm_validate;
collate_matrices;
collate_vectors;
masked_fill;
load_audio;
processor;
init_process_group;
DuplexS2SDataset;
DataModule;
init_module;
DuplexS2SSpeechDecoderModel;
DuplexS2SModel;
sort_by_duration;
word_error_rate_detail;
set_default_dtype;
EnglishTextNormalizer;
guess_parse_cutset;
ToAudio;
DynamicCutSampler;
token_to_id;
normalizer;
SequentialJsonlWriter;
GenerationConfig;
parse_hyp;
nonzero;
numel;
isin;
SALMDataset;
SALM;
load_checkpoint;
save_pretrained;
AlignerModel;
LearningRateMonitor;
LogEpochTimeCallback;
load_and_prepare_audio;
resample;
long;
disambiguate_candidates;
aligner_g2p;
word_tokenize_func;
encode_from_g2p;
general_padding;
aligner;
get_mean_distance_for_word;
embed;
get_dist;
get_durations;
disambiguate_dataset;
text_preprocessing_func;
quit;
AudioCodecModel;
FastPitchModel;
FastPitchModel_SSL;
HifiGanModel;
MagpieTTS_Model;
MagpieTTS_ModelDPO;
MagpieTTS_ModelInference;
MixerTTSModel;
prepare_model_weights;
RadTTSModel;
SpectrogramEnhancerModel;
SSLDisentangler;
Tacotron2Model;
make_parser;
generate_spectrogram;
parser;
convert_spectrogram_to_audio;
trim;
UnivNetModel;
VitsModel;
WaveGlowModel;
disambiguate_manifest;
disambiguate;
HeteronymClassificationModel;
convert_graphemes_to_phonemes;
get_model;
CTCG2PModel;
T5G2PModel;
MegatronT5SpeechLMModel;
ClassificationTransform;
ImageFolder;
ImageFolderDataset;
MegatronVitClassificationModel;
mk_hf_vlm_dataset;
extract_skipped_token_ids;
collate_fn;
find_spec;
exec_module;
process_collection;
process_member;
isclass;
issubclass;
__enter__;
get_rank;
_try_bootstrap_pg;
__exit__;
any;
is_integer;
compute_cross_entropy;
cross_entropy;
chunked_cross_entropy;
_compiled_compute_cross_entropy;
masked_fill_;
fused_linear_cross_entropy;
linear_cross_entropy;
new_is_triton_greater_or_equal;
parse_version;
get_distribution;
new_is_triton_greater_or_equal_3_2_0;
masked_cross_entropy;
write_ctm;
to_ctm_str;
write_on_batch_end;
get_manifest_sample;
get_scale_mapping_list;
get_argmin_mat;
extract_seg_info_from_rttm;
convert_rttm_line;
assign_frame_level_spk_vector;
get_subsegments_to_timestamps;
clip;
extract_frame_info_from_rttm;
get_frame_targets_from_rttm;
_msdd_train_collate_fn;
_msdd_infer_collate_fn;
_eesd_train_collate_fn;
output_types;
NeuralType;
AudioSignal;
LengthsType;
ProbsType;
DiarizationSpeechLabel;
prepare_split_data;
assign_labels_to_longer_segs;
get_diar_target_labels;
parse_rttm_for_ms_targets;
get_uniq_id_with_range;
pow;
get_ms_seg_timestamps;
randperm;
SpectrogramType;
EncodedRepresentation;
parse_rttm_multiscale;
get_diar_target_labels_from_fr_target;
msdd_train_collate_fn;
msdd_infer_collate_fn;
EndtoEndDiarizationSpeechLabel;
parse_rttm_for_targets_and_lens;
get_soft_targets_seg;
get_segment_timestamps;
get_subsegments;
eesd_train_collate_fn;
LabelsType;
AudioSamples;
speaker_to_target;
get_hidden_length_from_sample_length;
repeat_signal;
count_occurence;
_speech_collate_fn;
_fixed_seq_collate_fn;
_vad_frame_seq_collate_fn;
div;
RegressionValuesType;
cache_datastore_manifests;
ASRSpeechLabel;
_collate_fn;
fixed_seq_collate_fn;
vad_frame_seq_collate_fn;
expand_sharded_filepaths;
DataPipeline;
SimpleShardList;
tarfile_to_samples;
rename;
to_tuple;
_filter;
TarredAudioFilter;
_internal_generator;
_build_sample;
__iter__;
_get_label_set;
_label_str_to_tensor;
__next__;
get_classification_label_dataset;
AudioToClassificationLabelDataset;
get_speech_label_dataset;
get_tarred_classification_label_dataset;
convert_to_config_list;
get_chain_dataset;
TarredAudioToClassificationLabelDataset;
get_concat_tarred_speech_label_dataset;
ConcatDataset;
get_tarred_speech_label_dataset;
TarredAudioToSpeechLabelDataset;
get_audio_multi_label_dataset;
AudioToMultiLabelDataset;
process_augmentations;
get_tarred_audio_multi_label_dataset;
TarredAudioToMultiLabelDataset;
braceexpand;
datastore_path_to_webdataset_url;
is_datastore_path;
is_tarred_path;
is_datastore_cache_shared;
cache_data;
DataStoreObject;
Pool;
imap;
shard_manifests_if_needed;
ASRAudioText;
process_text_by_id;
process_text_by_sample;
process_text_by_file_id;
ASRManifestProcessor;
_process_sample;
TokenizerWrapper;
_compute_len;
_loop_offsets;
TarredAudioLoopOffsets;
BucketingIterator;
RandomState;
__call__;
is_dali_supported;
check_lib_version;
Pipeline;
DALIPytorchIterator;
DummyDataset;
ModuleNotFoundError;
nemo_asr;
nonsilent_region;
slice;
shapes;
set_outputs;
spectrogram;
to_decibels;
window_fn;
webdataset;
audio;
get_property;
gpu;
normal;
preemphasis_filter;
mel_filter_bank;
log2;
finfo;
mfcc;
full;
DALIOutputs;
tobytes;
inject_dataloader_value_from_model_config;
get_concat_char_dataset;
AudioToCharDataset;
get_concat_bpe_dataset;
AudioToBPEDataset;
get_concat_tarred_dataset;
get_tarred_dataset;
TarredAudioToCharDataset;
TarredAudioToBPEDataset;
get_code_switched_dataset;
CodeSwitchedDataset;
get_dali_char_dataset;
AudioToCharDALIDataset;
get_dali_bpe_dataset;
AudioToBPEDALIDataset;
get_audio_to_text_char_dataset_from_config;
get_hf_audio_to_text_char_dataset;
isclose;
get_audio_to_text_bpe_dataset_from_config;
get_hf_audio_to_text_bpe_dataset;
ListConfig;
ChainDataset;
calc_bucketing_batch_sizes;
RandomizedChainDataset;
BucketingDataset;
drop_in_memory_data;
as_tensor;
_drop_in_memory_data;
frozenset;
CutSet;
issuperset;
_collate_tokens;
PromptedAudioToTextMiniBatch;
apply_prompt_format_fn;
DataAnnotator;
SpeechSampler;
build_speaker_samples_map;
_check_args;
_init_speaker_permutations;
_init_chunk_count;
hstack;
clean_up;
_get_speaker_dominance;
_increase_speaker_dominance;
_set_speaker_volume;
_get_next_speaker;
uniform;
_get_window;
hamming;
hann;
cosine;
_get_start_buffer_and_window;
_get_end_buffer_and_window;
_check_missing_speakers;
warn;
_add_file;
multiply;
_build_sentence;
negative_binomial;
load_speaker_sample;
get_random_offset_index;
read_audio_from_buffer;
get_split_points_in_alignments;
per_speaker_normalize;
perturb_audio;
_add_silence_or_overlap;
silence_vs_overlap_selector;
sample_from_overlap_model;
is_overlap;
sample_from_silence_model;
get_overlap_range;
_get_session_meta_data;
_get_session_silence_from_rttm;
merge_float_intervals;
_add_sentence_to_array;
_generate_session;
init_annotation_lists;
get_session_silence_mean;
get_session_overlap_mean;
normalize_audio;
is_tensor;
write_annotation_files;
create_new_rttm_entry;
create_new_json_entry;
create_new_ctm_entry;
maximum;
get_background_noise;
generate_sessions;
get_cleaned_base_path;
ProcessPoolExecutor;
read_noise_manifest;
shutdown;
write_filelist_files;
get_speaker_ids;
get_speaker_samples;
sample_noise_manifest;
add_to_filename_lists;
_check_args_rir;
ImportError;
_generate_rir_gpuRIR;
beta_SabineEstimation;
att2t_SabineEstimator;
t2n;
simulateRIR;
vstack;
_generate_rir_pyroomacoustics;
inverse_sabine;
ShoeBox;
CardioidFamily;
add_microphone_array;
compute_rir;
add_source;
DirectionVector;
Material;
_convolve_rir;
convolve;
_get_background;
_feature_collate_fn;
_audio_feature_collate_fn;
_vad_feature_segment_collate_fn;
AcousticEncodedRepresentation;
ASRFeatureSequenceLabel;
ASRFeatureLabel;
ExternalFeatureLoader;
_vad_segment_collate_fn;
get_feature_seq_speakerlabel_dataset;
FeatureToSeqSpeakerLabelDataset;
get_feature_label_dataset;
FeatureToLabelDataset;
get_feature_multi_label_dataset;
FeatureToMultiLabelDataset;
ASRFeatureText;
ASRFeatureManifestProcessor;
process_features_with_rttm;
normalize_feature;
load_speech_segments_from_rttm;
normalize_batch;
FeatureToCharDataset;
FeatureToBPEDataset;
_parse_manifest_item;
KeyError;
_audio_noise_collate_fn;
AudioNoiseBatch;
batch_augmentor;
load_noise_manifest;
load_noise_audio;
from_file;
perturb;
WhiteNoisePerturbation;
sample_noise;
pad_audio;
get_audio_noise_dataset;
AudioNoiseDataset;
get_concat_audio_noise_dataset;
get_tarred_audio_noise_dataset;
TarredAudioNoiseDataset;
get_concat_tarred_audio_noise_dataset;
get_audio_noise_dataset_from_config;
AudioNoiseItem;
_pad_audio;
_asr_text_to_tokens;
_tts_text_to_tokens;
tts_tokenizer_global;
_iterate_manifest;
TextToTextBatch;
pad_sequence;
TextOrAudioToTextBatch;
collect;
tts_parser;
TextToTextItem;
choice;
get_worker_info;
_init_asr_tokenize_process;
_init_tts_tokenize_process;
get_nested_dict_value;
process_text;
isalnum;
isspace;
HFTextProcessor;
concatenate_datasets;
AudioAugmentor;
AudioSegment;
split_dataset_by_node;
HFIterableAudioToBPEDataset;
HFAudioToBPEDataset;
HFIterableAudioToCharDataset;
HFAudioToCharDataset;
input_types;
LogitsType;
LossType;
typecheck;
cos;
acos;
diagonal;
BCELoss;
loss_f;
ones_like;
LogprobsType;
reduce;
K2Loss;
PartialGrad;
update_graph;
_loss;
_partial_loss;
nelement;
isinf;
_warn_unused_additional_kwargs;
_clean_kwargs;
signature;
resolve_rnnt_loss;
RNNTLoss;
RNNTLossNumba;
is_numba_cuda_fp16_supported;
RNNTLossPytorch;
MultiblankRNNTLossNumba;
MultiblankRNNTLossPytorch;
TDTLossNumba;
TDTLossPytorch;
GraphRnntLoss;
GraphWTransducerLoss;
is_contiguous;
compute_forward_prob;
logsumexp;
gather;
Linear;
sample_negatives;
multinomial;
_calculate_similarity;
new_zeros;
target_proj;
quantizer;
unique_consecutive;
scatter_;
sample_from_codebook;
type_as;
cosine_similarity;
set_num_updates;
VoidType;
CTCLoss;
loss;
NLLLoss;
nll_loss;
MLMLoss;
mlm_loss;
move_dimension_to_the_front;
rnnt_decoder_predictions_tensor;
TypeError;
decode_predictions_tensor;
decode_tokens_to_str;
_compute_bleu;
_bleu_score_compute;
get_partial_ref_labels;
get_online_DER_stats;
uem_timeline_from_file;
Timeline;
Segment;
DiarizationErrorRate;
optimal_mapping;
set_option;
labels;
report;
evaluate_der;
calculate_session_cpWER_bruteforce;
permutations;
calculate_session_cpWER;
product;
linear_sum_assignment;
argsort;
concat_perm_word_error_rate;
add_state;
logical_and;
cer;
compute_measures;
word_error_rate_per_utt;
lens_to_mask;
_config_check;
__post_init__;
maybe_update_config_version;
_setup_tokenizer;
prompt_cls;
MultiTaskDecoding;
GlobalAverageLossMetric;
BLEU;
setup_adapters;
Identity;
transformer_weights_init;
get_vocab;
to_config_dict;
NotADirectoryError;
change_prompt;
MultiTaskTranscriptionConfig;
PromptedAudioToTextLhotseDataset;
_update_dataset_config;
ChannelType;
MaskType;
encoder;
encoder_decoder_proj;
spec_augmentation;
transf_encoder;
transf_decoder;
training_step;
get_decoder_inputs_outputs;
validation_pass;
val_loss;
validation_step;
test_step;
_transcribe_on_begin;
_transcribe_input_manifest_processing;
_may_be_make_dict_and_fix_paths;
_transcribe_forward;
get_default_dialog_slots;
encode_dialog;
_transcribe_output_processing;
process_aed_timestamp_outputs;
_transcribe_on_end;
oomptimizer_schema;
multi_validation_epoch_end;
multi_test_epoch_end;
resolve_subclass_pretrained_model_info;
add_auxiliary_losses;
is_access_enabled;
get_module_registry;
reset_registry;
log_dict;
on_after_backward;
disable_cuda_graphs_recursive;
enable_cuda_graphs_recursive;
on_test_epoch_start;
on_predict_epoch_start;
output_names;
get_io_names;
forward_for_export;
dec_fun;
cast_all;
enc_fun;
set_export_config;
_update_decoder_config;
_setup_preprocessor;
_setup_encoder;
_setup_decoder;
_setup_loss;
_setup_metrics;
crop_or_pad;
_setup_feature_label_dataloader;
ClassificationInferConfig;
RegressionInferConfig;
top_k_predicted_labels;
change_labels;
PretrainedModelInfo;
MSELoss;
MeanSquaredError;
MeanAbsoluteError;
_mse;
_mae;
TopKClassificationAccuracy;
Accuracy;
CrossEntropyLoss;
get_label_masks;
reshape_labels;
get_metric_logits_labels;
_accuracy;
_final_state;
amax;
repeat_interleave;
_init_speaker_model;
_init_vad_model;
parse_scale_configs;
_setup_vad_test_data;
_setup_spkr_test_data;
_run_vad;
_vad_model;
_run_segmentation;
segments_manifest_to_subsegments_manifest;
_perform_speech_activity_detection;
validate_vad_manifest;
_extract_embeddings;
get_embs_and_timestamps;
perform_clustering;
path2audio_files_to_manifest;
to_config_file;
_make_nemo_file_from_folder;
get_filtered_logprobs;
compute_confidence;
get_confidence_aggregation_bank;
get_confidence_measure_bank;
aggr_func;
conf_func;
safe_joblib_load;
SecurityError;
catch_warnings;
simplefilter;
find_class;
_validate_joblib_file;
RestrictedUnpickler;
to_confidence_config;
ConfidenceConfig;
ConfidenceMethodConfig;
register_nemo_submodule;
update_decoding_parameters;
change_attention_model;
CTCBPEDecoding;
get_semi_sorted_batch_sampler;
LhotseSpeechToTextBpeDataset;
setup_optimization_flags;
setup_interctc;
is_interctc_enabled;
add_interctc_losses;
set_access_enabled;
finalize_interctc_metrics;
process_timestamp_outputs;
copy_;
_fuse_bn_in_conformer;
replace_bn_with_fused_bn_all;
_check_config;
NeMoBaseException;
ASRModelTypes;
from_asr_model;
get_asr_cls;
from_pretrained_models;
__setattr__;
save_asr_model_to;
on_test_epoch_end;
on_fit_start;
_get_tts_spectrogram;
tts_model;
disable_checks;
_get_batch_spect;
clean_spectrogram_batch;
chain;
tensor_split;
_setup_text_dataset_from_config;
cast;
ConcatMapDataset;
TextToTextIterableDataset;
TextToTextDataset;
set_decoding_type_according_to_loss;
RNNTBPEDecoding;
set_loss;
set_wer;
ctc_decoder;
joint;
ctc_loss;
_init_model_specific;
_init_ctc_alignment_specific;
ViterbiDecoderWithGraph;
_init_rnnt_alignment_specific;
apply_rnnt_prune_ranges;
GraphModuleConfig;
get_uniform_rnnt_prune_ranges;
_rnnt_joint_pruned;
enc;
pred;
prepare_pruned_outputs;
joint_net;
_apply_prob_suppress;
_prepare_ctc_argmax_predictions;
_predict_impl_rnnt_argmax;
decode_ids_to_tokens;
_process_tokens_to_words;
_process_char_with_space_to_words;
FrameCtmUnit;
text_to_tokens;
_results_to_ctmUnits;
_predict_impl_ctc;
align;
_predict_impl_rnnt;
_predict_impl;
_init_k2;
update_k2_modules;
_forward_k2_post_processing;
extract_labels;
__setup_dataloader_from_config;
data_cls;
mse_loss;
evaluation_step;
eval_loss;
pair_evaluation_step;
pair_multi_eval_epoch_end;
roc_curve;
nanargmin;
multi_evaluation_epoch_end;
infer_file;
infer_segment;
get_label;
get_embedding;
verify_speakers;
verify_speakers_batch;
cleanup;
save_hyperparameters;
MultiBinaryAccuracy;
_init_segmentation_info;
add_speaker_model_config;
AudioToSpeechMSDDTrainDataset;
__setup_dataloader_from_config_infer;
AudioToSpeechMSDDInferDataset;
get_ms_emb_seq;
get_cluster_avg_embs_model;
get_ms_mel_feat;
forward_infer;
msdd;
_accuracy_train;
_accuracy_valid;
compute_accuracies;
prepare_cluster_embs_infer;
run_clustering_diarizer;
get_base_clus_label_dict;
get_cluster_avg_embs;
get_scale_map;
load_emb_scale_seq_dict;
load_clustering_labels;
get_scale_mapping_argmat;
check_clustering_labels;
_init_msdd_model;
transfer_diar_params_to_model_params;
ClusterEmbedding;
__make_nemo_file_from_folder;
extract_standalone_speaker_model;
get_pred_mat;
get_integrated_preds_list;
get_id_tup_dict;
get_emb_clus_infer;
run_pairwise_diarization;
run_overlap_aware_eval;
get_range_average;
get_range_clus_avg_emb;
diar_infer;
get_uniq_id_list_from_manifest;
_accuracy_test;
make_rttm_with_overlap;
init_config;
labels_to_pyannote_object;
_initialize_configs;
rttm_to_labels;
timeit;
method;
timed;
_init_online_clustering_module;
OnlineSpeakerClustering;
_init_online_segmentor_module;
OnlineSegmentor;
_init_memory_buffer;
_init_temporal_major_voting_module;
_init_segment_variables;
_init_buffer_frame_timestamps;
_clear_memory;
_temporal_label_major_vote;
save_history_data;
_run_embedding_extractor;
_extract_online_embeddings;
_perform_online_clustering;
split_input_data;
get_scale_interpolated_embs;
_get_interim_output;
generate_cluster_labels;
diarize_step;
_transfer_timestamps_to_segmentor;
run_online_segmentation;
extract_rnnt_loss_cfg;
RNNTDecoding;
setup_optim_normalization;
resolve_rnnt_default_loss_name;
add_;
div_;
decoder_joint;
RNNTDecoderJoint;
SmoothedNLLLoss;
SequenceGenerator;
get_seq_mask;
embedding;
classifier;
get_seq_length;
sequence_generator;
decode_semantics_from_tokens;
concat_and_pad;
_init_loss_weights;
_init_eval_metrics;
script;
_reset_train_metrics;
_reset_valid_metrics;
AudioToSpeechE2ESpkDiarDataset;
LhotseAudioToSpeechE2ESpkDiarDataset;
frontend_encoder;
encoder_proj;
length_to_mask;
transformer_encoder;
forward_speaker_sigmoids;
_diarize_forward;
_diarize_output_processing;
generate_diarization_output_lines;
ts_vad_post_processing;
_setup_diarize_dataloader;
oom_safe_feature_extraction;
process_signal;
forward_streaming;
streaming_input_examples;
rand;
streaming_export;
pre_encode;
concat_and_pad_script;
init_streaming_state;
streaming_feat_loader;
forward_streaming_step;
apply_mask_to_preds;
concat_embs;
streaming_update_async;
streaming_update;
_get_aux_train_evaluations;
get_ats_targets;
get_pil_targets;
_accuracy_train_ats;
_get_aux_validation_evaluations;
_accuracy_valid_ats;
_get_aux_test_batch_evaluations;
_accuracy_test_ats;
ModuleDict;
Dropout;
set_access_cfg;
dropout_features;
dropout_features_q;
decoder_loss_step;
decoder_ssl;
current_loss;
transfer_batch_to_device;
move_data_to_device;
ConvFeatureMaksingWrapper;
set_masking_enabled;
get_current_mask;
get_current_feat;
mask_processor;
inference_pass;
LhotseAudioNoiseDataset;
get_nemo_transformer;
TokenClassifier;
SmoothedCrossEntropyLoss;
TransformerEncoder;
_update_default_values;
adapter;
compute_audio_loss;
transf_loss;
beam_search;
all_gather_object;
SacreBLEUScore;
Hypothesis;
NeuralDiarizerInferenceConfig;
DiarizerConfig;
VADConfig;
MSDDConfig;
matchboxnet_3x1x64;
JasperEncoderConfig;
matchboxnet_3x1x64_vad;
MatchboxNetVADModelConfig;
MatchboxNetModelConfig;
ConvASREncoderConfig;
ConvASRDecoderClassificationConfig;
SpectrogramAugmentationConfig;
encoder_cfg_func;
_finalize_cfg;
qn_15x5;
jasper_10x5_dr;
QuartzNetModelConfig;
set_dataset_normalize;
JasperModelConfig;
ConvASRDecoderConfig;
register_buffer;
get_features;
MelSpectrogramType;
featurizer_class;
input_example;
featurizer;
MFCCSpectrogramType;
MFCC;
SpecCutout;
SpecAugment;
numba_cuda_is_supported;
SpecAugmentNumba;
spec_cutout;
spec_augment_launch_heuristics;
spec_augment_numba;
spec_augment;
PredictionsType;
Scorer;
beam_search_func;
BoolType;
input_types_for_export;
output_types_for_export;
disabled_deployment_input_names;
disabled_deployment_output_names;
_calc_context_sizes;
ModuleList;
set_max_audio_length;
compute_stochastic_depth_drop_probs;
SubsamplingReductionModule;
Parameter;
zeros_;
RelPositionalEncoding;
ConformerLayer;
StackingSubsampling;
ConvSubsampling;
LocalAttRelPositionalEncoding;
PositionalEncoding;
ReLU;
forward_internal;
streaming_post_process;
update_max_seq_length;
pos_enc;
_create_masks;
new_full;
layer;
out_proj;
reduction_subsampling;
choices;
neg;
register_accessible_tensor;
extend_pe;
triu;
tril;
le;
ge;
CacheAwareStreamingConfig;
modules;
get_sampling_frames;
get_streaming_cache_size;
create_tensor;
RelPositionMultiHeadAttention;
RelPositionMultiHeadAttentionLongformer;
MultiHeadAttention;
change_subsampling_conv_chunking_factor;
_update_adapter_cfg_input_dim;
get_enabled_adapters;
update_adapter_cfg_input_dim;
get_accepted_adapter_types;
set_accepted_adapter_types;
update_access_cfg;
aggregator;
_prepare_for_export;
Sequential;
JasperBlock;
init_weights;
update_max_sequence_length;
update_masked_length;
set_max_len;
ParallelBlock;
Conv1d;
forward_enabled_adapters;
decoder_layers;
BatchNorm1d;
ConvTranspose1d;
AdaptiveAvgPool1d;
AdaptiveMaxPool1d;
pooling;
TDNNModule;
TDNNSEModule;
feature_agg;
StatsPoolLayer;
affine_layer;
AttentivePoolLayer;
_pooling;
final;
_TokensWrapper;
load_words;
create_word_dict;
get_index;
KenLM;
Trie;
smear;
LexiconDecoderOptions;
LexiconDecoder;
LexiconFreeDecoderOptions;
LexiconFreeDecoder;
score;
add_entry;
_get_tokens;
filter;
_get_timesteps;
dim;
data_ptr;
stride;
get_entry;
Decoder;
_forward_impl;
decode_func;
_joint_hat_net_modules;
joint_after_projection;
blank_pred;
HATJointOutput;
Tanh;
LogSigmoid;
Sigmoid;
LSTM;
lstm_layer;
linear_layer;
Conv2d;
BatchNorm2d;
cnn;
xavier_uniform_;
fill_;
orthogonal_;
Softmax;
CosineSimilarity;
eye_;
ConvLayer;
core_model;
dropout;
lstm;
hidden_to_spks;
conv_scale_weights;
relu;
attention_scale_weights;
element_wise_product;
bmm;
product_to_emb;
cos_dist;
mul;
dist_to_emb;
W_a;
conv_forward;
conv_to_linear;
leaky_relu;
linear_to_weights;
conv_module;
bn_module;
EmbeddedTextType;
initialize_state;
_predict_modules;
label_collate;
prediction;
StatelessNet;
score_hypothesis;
batch_initialize_states;
batch_select_state;
batch_concat_states;
batch_replace_states_mask;
batch_replace_states_all;
batch_split_states;
batch_score_hypothesis;
ElementType;
Embedding;
rnn;
batch_aggregate_states_beam;
Size;
batch_copy_states;
_joint_net_modules;
project_encoder;
project_prednet;
gt;
is_inference_mode_enabled;
is_grad_enabled;
sampled_joint;
unsqueeze_;
module;
bucketize;
num_classes_with_blank;
num_extra_outputs;
mask_select_states;
rnn_module;
LayerNorm;
first_hidden_to_hidden;
single_hidden_to_spks;
StreamingSortformerState;
_compress_spkcache;
_boost_topk_scores;
_get_silence_profile;
_get_log_pred_scores;
_get_topk_indices;
sort;
remainder;
_gather_spkcache_and_preds;
_get_max_perm_index;
scatter_reduce_;
_disable_low_scores;
_permute_speakers;
SqueezeformerLayer;
TimeReductionModule;
reset_parameters;
make_pad_mask;
pre_ln;
time_reduce_layer;
time_reduce_pos_enc;
time_recovery_layer;
kaiming_normal_;
block;
make_conv;
GELU;
TransposeLast;
GroupNorm;
apply_layers;
conv;
layer_norm;
get_lengths;
post_extract_proj;
normal_;
constant_;
weight_norm;
SamePad;
create_padding_mask;
pos_conv;
apply_transformer;
form_attention_mask;
repeat_noise;
pad_or_trim_noise;
get_noise_segments;
FloatTensor;
forward_with_overlap;
forward_without_overlap;
binomial;
masking;
_forward_for_weighted_sum;
ConformerMultiLayerFeatureExtractor;
feature_extractor;
xavier_normal_;
double;
proj;
einsum;
AttentionBridge;
att_bridge;
hidden_enc;
init_hidden_enc;
TransformerDecoder;
init_cross_att;
cross_att;
self_att;
_build_pooling_module;
MaxPool1d;
AvgPool1d;
TransformerEmbedding;
_embedding;
_encoder;
DECODER_TYPE;
_decoder;
_build_encoder;
BridgeEncoder;
PerceiverEncoder;
PoolingEncoder;
_build_decoder;
PositionWiseFF;
forward_preln;
layer_norm_1;
first_sub_layer;
layer_norm_2;
second_sub_layer;
layer_norm_3;
third_sub_layer;
forward_postln;
TransformerDecoderBlock;
_get_memory_states;
final_layer_norm;
TransformerEncoderBlock;
_init_confidence_method;
_one_step_forward;
with_log_softmax_enabled;
mask_padded_tokens;
_prepare_for_search;
_forward;
full_like;
_get_confidence_tensor;
Categorical;
as_frozen;
scatter;
compute_len_penalty;
ne;
get_init_states;
advance;
_one_step_forward_lm;
_average_probs;
_get_encoder_hidden_states;
_build_pos_enc;
sin;
FixedPositionalEncoding;
token_embedding;
position_embedding;
token_type_embedding;
transpose_for_scores;
query_net;
key_net;
value_net;
attn_dropout;
out_projection;
layer_dropout;
dense_in;
act_fn;
dense_out;
squeeze_;
W2;
act;
W1;
eye;
TransformerDecoderNM;
TransformerEncoderNM;
TransformerBottleneckEncoderNM;
merge_alignment_with_ws_hyps;
ids_to_tokens;
compute_fscore;
align_texts;
ContextState;
add_to_graph;
draw;
"Digraph";
deque;

popleft;

beam_pruning;
find_best_hyps;
get_ctc_word_alignment;
filter_wb_hyps;
run_word_spotter;
state_pruning;
Token;
WSHyp;
LatticeLoss;
make_non_pad_mask;
save_for_backward;
requires_grad_;
func;
arc_sort;
invert;
build_topo;
compose_with_self_loops;
linear_fsa;
invert_;
create_fsa_vec;
intersect_with_self_loops;
RnntEmissionAdapterBuilder;
add_self_loops;
intersect;
_builder;
GraphIntersectDenseConfig;
_decode_impl;
_prepare_emissions_graphs;
intersect_dense_pruned;
intersect_dense;
index_fsa;
_extract_labels_and_probabilities;
dim0;
shortest_path;
invert_permutation;
_prepare_log_probs_and_targets;
CtcTopologyCompiler;
RnntTopologyCompiler;
load_graph;
CtcNumGraphCompiler;
_set_decoder_config;
_set_decoding_mode;
_init_decoder;
__class__;
to_str;
nbest_size;
_nbest_size_setter;
_decoding_mode_setter;
_decode_lattice;
connect;
expand_ragged_attributes;
create_supervision;
DenseFsaVec;
_post_decode;
from_lattice;
index_select;
collapse_tokenword_hypotheses;
row_ids;
get_tot_scores;
WfstNbestHypothesis;
calibrate_lm_weight;
calculate_oracle_wer;
levenshtein_graph_k2;
add_epsilon_self_loops;
remove_epsilon_self_loops;
force_float32_context;
is_autocast_enabled;
nullcontext;
get_composed_lattice;
get_unit_schema;
get_temporal_schema;
get_graphs_batched;
get_grid;
get_batch_indices;
get_logits_indices;
Fsa;
relabel_states;
lt;
get_weighted_graphs;
rnnt_logprobs_triton;
prep_padded_densefsavec;
_maybe_normalize_gradients;
get_arc_weights;
make_non_pad_mask_3d;
cumsum;
_intersect_calc_scores_impl_exact_opt;
_intersect_calc_scores_impl_pruned;
_intersect_calc_scores;
_intersect_calc_scores_impl;
get_tot_objf_and_finite_mask;
create_sparse_wrapped;
to_dense;
shape;
get_arc_post;
coalesce;
compiler;
_prepare_graphs_for_intersection;
rnnt_logprobs_torch;
_rnnt_logprobs_fwd_kernel;
store;
program_id;
_rnnt_logprobs_bwd_kernel;
next_power_of_2;
build_default_topo;
build_compact_topo;
build_shared_blank_topo;
build_minimal_topo;
from_str;
_build_single_adapter;
lru_cache;
ragged_to_tensor_2axes_simple;
from_dict;
create_sparse;
sparse_coo_tensor;
shift_labels_inpl;
reset_properties_fsa;
unpack;
pack;
interpolate;
row_splits;
LastBlankMode;
resolve_adapter_module_name_;
check_valid_model_with_adapter_support_;
_get_global_cfg;
get_value_from_diarization_config;
DiarizeConfig;
InternalDiarizeConfig;
diarize_generator;
_diarize_on_begin;
_diarize_on_end;
_diarize_input_processing;
_input_audio_to_rttm_processing;
_diarize_input_manifest_processing;
_process_config_values;
set_interctc_param;
get_interctc_param;
propagate_model_guid;
_verify_setup_was_called;
set_interctc_enabled;
get_captured_interctc_tensors;
_derive_tokenizer_properties;
_setup_aggregate_tokenizer;
_setup_monolingual_tokenizer;
_cleanup_aggregate_config_and_artifacts_if_needed;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed;
_make_tokenizer;
AggregateTokenizer;
save_tokenizers;
_extract_tokenizer_from_config;
copy2;
get_model_metadata_from_guid;
extract;
isupper;
category;
change_conv_asr_se_context_window;
cache_aware_stream_step;
transcribe_simulate_cache_aware_streaming;
_setup_streaming_transcribe_dataloader;
to_numpy;
self;
get_value_from_transcription_config;
get_item;
TranscribeConfig;
InternalTranscribeConfig;
transcribe_generator;
_transcribe_input_processing;
_transcribe_input_tensor_processing;
_setup_transcribe_tensor_dataloader;
TranscriptionTensorDataset;
rnnt_loss_cpu;
get_workspace_size;
flatten_tensor;
CPURNNT;
score_forward;
cost_and_grad;
rnnt_loss_gpu;
select_device;
GPURNNT;
external_stream;
default_stream;
current_stream;
tdt_loss_gpu;
GPUTDT;
multiblank_rnnt_loss_gpu;
MultiblankGPURNNT;
check_type;
check_contiguous;
check_dim;
certify_inputs;
forward_pass;
logaddexp;
backward_pass;
reversed;
compute_gradient;
transduce;
transduce_batch;
fastemit_regularization;
_assert_no_grad;
rnnt;
rnnt_loss;
multiblank_rnnt_loss;
tdt_loss;
mul_;
log_sum_exp;
jit;
log1p;
div_up;
identity;
negate;
exponential;
log_plus;
fabs;
copy_data_1d;
compute_costs_data;
float32;
setup_probs;
idx;
get_num_threads;
set_num_threads;
cost_and_grad_kernel;
CpuRNNT_index;
CpuRNNT_metadata;
compute_alphas;
compute_betas_and_grads;
as_cuda_array;
reduce_max;
reduce_exp;
compute_cost_and_score;
_prepare_workspace;
logp;
logp_duration;
compute_alphas_kernel;
syncthreads;
compute_betas_kernel;
compute_grad_kernel;
compute_multiblank_alphas_kernel;
compute_multiblank_betas_kernel;
compute_multiblank_grad_kernel;
compute_tdt_alphas_kernel;
compute_tdt_betas_kernel;
compute_tdt_grad_kernel;
CTAReduce;
shfl_down_sync;
_reduce_rows;
_reduce_minus;
ReduceHelper;
spec_augment_kernel;
launch_spec_augment_kernel;
is_current_stream_capturing;
splice_frames;
make_seq_mask_like;
max_augmentation_length;
process_segment;
from_config;
get_seq_len;
Random;
mel;
stft;
log_zero_guard_value_fn;
floor_divide;
view_as_real;
MelSpectrogram;
_resolve_log_zero_guard_value;
_apply_dithering;
_apply_preemphasis;
_compute_output_lengths;
_apply_pad_to;
_apply_log;
_extract_spectrograms;
_mel_spec_extractor;
_apply_normalization;
load_feature_from_file;
_convert_samples_to_float32;
iinfo;
read_one_audiosegment;
register_perturbation;
augmentation_class;
linspace;
istft;
phase_vocoder;
concatenate;
AugmentationDataset;
fftconvolve;
get_one_noise_sample;
perturb_with_input_noise;
is_empty;
gain_db;
subsegment;
perturb_with_foreground_noise;
snr_mixer;
norm_audio_to_db;
concatenate_noise_sample;
ImpulsePerturbation;
NoisePerturbation;
perturbation;
LightningNotInstalledException;
select_channels;
get_samples;
SoundFile;
normalize_db;
__eq__;
__ne__;
__str__;
from_file_list;
get_array_of_samples;
segment_from_file;
samples;
duration;
rms_db;
log10;
offset;
audio_file;
_get_module_by_name;
replace_bn_with_fused_bn;
from_batchnorm;
FusedBatchNorm1d;
update_cache;
post_init;
ConformerFeedForward;
ConformerConvolution;
norm_feed_forward1;
feed_forward1;
norm_self_att;
norm_conv;
norm_feed_forward2;
feed_forward2;
norm_out;
self_attn;
CausalConv1D;
Swish;
InstanceNorm1d;
pointwise_conv1;
depthwise_conv;
activation;
pointwise_conv2;
glu;
pointwise_activation;
batch_norm;
reset_parameters_conv;
uniform_;
linear1;
linear2;
reset_parameters_ff;
pack_hypotheses;
_states_to_device;
pack_wfst_hypotheses;
NBestHypotheses;
HypothesisType;
set_vocabulary;
set_decoding_type;
PyCTCDecodeConfig;
FlashlightConfig;
search_algorithm;
default_beam_search;
BeamSearchDecoderWithLM;
chr;
ord;
_pyctcdecode_beam_search;
build_ctcdecoder;
decode_beams;
flashlight_beam_search;
FlashLightKenLMBeamSearchDecoder;
decoding_algorithm;
_prepare_decoding_lm_wfst;
mkgraph_ctc_ov;
_riva_decoding;
RivaGpuWfstDecoder;
kaldifst_importer;
_k2_decoding;
K2WfstDecoder;
_init_confidence;
GreedyCTCInfer;
GreedyBatchedCTCInfer;
BeamCTCInfer;
WfstCTCInfer;
compute_ctc_timestamps;
_aggregate_token_confidence;
_aggregate_confidence;
_compute_offsets;
_refine_timestamps;
_get_segment_offsets;
_get_word_offsets_chars;
_get_word_offsets_subwords_sentencepiece;
intersection;
preserve_alignments;
compute_timestamps;
preserve_frame_confidence;
_aggregate_token_confidence_chars;
set_tokenizer;
_aggregate_token_confidence_subwords_sentencepiece;
greedy_decode;
_greedy_decode_logprobs;
_get_confidence;
_greedy_decode_labels;
_greedy_decode_labels_batched;
_greedy_decode_logprobs_batched;
create_outer_for_loop_kernel;
run_nvrtc;
create_inner_while_loop_kernel;
check_cuda_python_cuda_graphs_conditional_nodes_supported;
_reinitialize;
CUDAGraph;

cu_call;
_greedy_decode_blank_as_pad_loop_frames;
cudaStreamGetCaptureInfo;
cudaGraphConditionalHandleCreate;
with_conditional_node;
getPtr;
_pred_step;
index_copy_;
logical_or_;
_joint_step;
replay;
get_autocast_gpu_dtype;
tds_uniform_;
_calculate_correct_fan;
tds_normal_;
zero_;
ones_;
kaiming_uniform_;
compute_new_kernel_size;
get_same_padding;
get_asymtric_padding;
_se_pool_step_script_infer;
_se_pool_step_script_train;
_masked_conv_init_lens;
ConstantPad1d;
QuantConv1d;
mask_input;
pad_layer;
change_context_window;
QuantLinear;
_se_pool_step;
fc;
_get_conv_bn_layer;
_get_act_dropout_layer;
SqueezeExcite;
TensorQuantizer;
_get_conv;
MaskedConv1d;
GroupShuffle;
Hardtanh;
mout;
l;
res_layer;
residual_quantizer;
get_dropout_mask;
res_conv;
BeamSearchSequenceGeneratorWithNGramLM;
format_hypotheses;
change_strategy;
TransformerAEDGreedyInfer;
TransformerAEDBeamInfer;
decode_tokens_to_lang;
decode_ids_to_langs;
ids_to_lang;
ids_to_text_and_langs;
GreedySequenceGenerator;
greedy_search;
forward_qkv;
linear_q;
linear_k;
linear_v;
forward_attention;
linear_out;
avoid_float16_autocast_context;
scaled_dot_product_attention;
sdpa_kernel;
rel_shift;
linear_pos;
sliding_chunks_matmul_qk;
new_ones;
_get_global_attn_indices;
_compute_attn_output_with_global_indices;
sliding_chunks_matmul_pv;
_compute_out_global_to_all;
_compute_global_key_attn;
global_q;
global_k;
global_v;
_skew;
_skew2;
_chunk_overlap;
as_strided;
_get_invalid_locations_mask;
flip;
mask_invalid_locations;
new_empty;
create_pe;
dropout_emb;
Model;
sort_nbest;
time_sync_decoding;
align_length_sync_decoding;
recombine_hypotheses;
modified_adaptive_expansion_search;
State;
BeginSentenceWrite;
prefix_search;
resolve_joint_output;
select_k_expansions;
compute_ngram_score;
is_prefix;
BaseScore;
ModifiedALSDBatchedRNNTComputer;
ModifiedAESBatchedRNNTComputer;
_decoding_computer;
to_hyps_list;
to_nbest_hyps_list;
update_joint_fused_batch_size;
GreedyMultiblankRNNTInfer;
GreedyRNNTInfer;
GreedyTDTInfer;
GreedyBatchedMultiblankRNNTInfer;
GreedyBatchedRNNTInfer;
GreedyBatchedTDTInfer;
BeamRNNTInfer;
BeamTDTInfer;
BeamBatchedRNNTInfer;
BeamBatchedTDTInfer;
compute_rnnt_timestamps;
maybe_pre_aggregate;
set_fused_batch_size;
set_fuse_loss_wer;
_compute_offsets_tdt;
_refine_timestamps_tdt;
_joint_step_after_projection;
_greedy_decode;
GreedyBatchedRNNTLoopLabelsComputer;
RNNTGreedyDecodeCudaGraph;
disable_cuda_graphs;
maybe_enable_cuda_graphs;
_greedy_decode_blank_as_pad_loop_labels;
batched_hyps_to_hypotheses;
bitwise_or_;
_greedy_decode_masked;
run_encoder;
_get_initial_states;
run_decoder_joint;
_setup_blank_index;
SessionOptions;
check_model;
InferenceSession;
_setup_encoder_input_output_keys;
_setup_decoder_joint_input_output_keys;
SerializeToString;
_setup_encoder_input_keys;
_setup_decoder_joint_input_keys;
_greedy_decode_blank_as_pad;
bitwise_and_;
GreedyBatchedTDTLoopLabelsComputer;
BatchedHyps;
BatchedAlignments;
force_cuda_graphs_mode;
CudaGraphsMode;
reset_cuda_graphs_state;
loop_labels_torch;
empty_like;
minimum;
less;
add_results_masked_;
add_results_masked_no_checks_;
loop_labels_cuda_graphs;
need_reinit;
_graph_reinitialize;
_before_outer_loop;
_before_inner_loop_get_decoder_output;
_before_inner_loop_get_joint_output;
_after_inner_loop;
_inner_loop_code;
_create_outer_while_loop_kernel;
_create_inner_while_loop_kernel;
LoopLabelsState;
_warmup_for_cuda_graphs;
_full_graph_compile;
_partial_graphs_compile;
wait_stream;
SeparateGraphsLoopLabels;
clear_;
greater;
PruningMode;
BlankLMScoreMode;
batched_modified_adaptive_expansion_search_torch;
BatchedBeamHyps;
recombine_prefixes;
combine_scores;
remove_duplicates;
add_results_;
topk_lm;
modified_alsd_torch;
recombine_hyps;
add_results_no_checks_;
modified_alsd_cuda_graphs;
_before_loop;
_loop_body;
_loop_update_decoder;
_create_loop_body_kernel;
MALSDState;
SeparateGraphsMALSD;
less_equal;
_forward_vectorized;
_forward_legacy;
_apply_masks;
ScaleBiasLayer;
self_attn_scale;
feed_forward1_scale;
conv_scale;
feed_forward2_scale;
get_codebook_indices;
weight_proj;
gumbel_softmax;
calc_length;
proj_out;
pre_norm;
MaxPool2d;
CausalConv2D;
out;
conv_split_by_batch;
conv_split_by_channel;
channel_chunked_conv;
conv2d;
dw_conv;
pw_conv;
reduction_enc;
get_statistics_with_mask;
conv_layer;
bn;
se_layer;
MaskedSEModule;
group_tdnn_block;
attention_layer;
masked_where;
merge_duplicate_hypotheses;
cartesian_prod;
ModifiedALSDBatchedTDTComputer;
MultiLayerPerceptron;
mlp;
dense;
riva_decoder_importer;
_riva_config_to_dict;
__dir__;
_fill_inner_riva_config_;
replace_unit_;
BatchedMappedDecoderCudaConfig;
WfstNbestUnit;
decoding_mode;
beam_size;
_beam_size_setter;
lm_weight;
_lm_weight_setter;
RivaDecoderConfig;
write_text;
BatchedMappedDecoderCuda;
_release_gpu_memory;
_decode_nbest;
decode_nbest;
_decode_mbr;
decode_mbr;
decode_write_lattice;
_load_word_lattice;
_decode;
edit_distance;
__del__;
forward_single_enabled_adapter_;
adapter_strategy;
compute_output;
compute_auxiliary_losses;
apply_stochastic_depth;
setup_adapter_strategy;
get_default_strategy_config;
MHAResidualAddAdapterStrategyConfig;
ReturnResultAdapterStrategyConfig;
get_train_list;
setup_tokenizer;
iter_files;
read_train_file;
tokenize_text;
set_description;
tokenize_str;
Parallel;
parallel;
write_dataset;
delayed;
_log_10_to_e;
get_init_state;
advance_single;
score_sentence;
get_final_single;
score_sentences;
get_final;
_add_unigrams;
_find_state;
_add_ngrams_next_order;
_start_adding_ngrams_for_order;
_add_ngram;
_add_ngram_max_order;
_end_adding_ngrams_for_order;
_end_adding_ngrams_max_order;
sanity_check;
from_nemo;
_resolve_final;
from_arpa;
from_suffix_tree;
_read_header;
SuffixTreeStorage;
_read_ngrams;
dummy_unigram_lm;
NGramGPULanguageModel;
NGramLMConfig;
_init_from_suffix_tree_np;
_line_to_ngram;
escape;
NGram;
_advance_pytorch;
_advance_triton;
unbind;
_get_final_pytorch;
ngram_advance_triton_kernel;
debug_barrier;
snake;
reciprocal;
convert_adapter_cfg_to_dict_config;
SemiSortBatchSampler;
_calculate_local_num_batches;
_make_batches;
get_correct_marks;
get_token_targets_with_confidence;
get_word_targets_with_confidence;
run_confidence_benchmark;
auc_yc;
ece;
save_confidence_hist;
save_roc_curve;
save_pr_curve;
save_nt_curve;
save_custom_confidence_curve;
auc_roc;
auc_pr;
auc_nt;
nce;
apply_confidence_parameters;
entropy_gibbs_lin_baseline;
entropy_gibbs_exp_baseline;
entropy_gibbs_exp;
entropy_tsallis_exp;
neg_entropy_gibbs;
neg_entropy_alpha_gibbs;
neg_entropy_alpha;
_confidence_measure;
nan_to_num;
_update_se_context_window;
find_first_nonzero;
find_best_permutation;
reconstruct_labels;
find_segments_from_rttm;
with_offset;
get_mask_from_segments;
get_soft_mask;
from_rttm;
seen_add;
roc_auc_score;
average_precision_score;
log_loss;
hist;
title;
xlabel;
ylabel;
savefig;
clf;
plot;
RocCurveDisplay;
precision_recall_curve;
PrecisionRecallDisplay;
xlim;
ylim;
isabs;
binary_search_alignments;
get_subset_of_audio_manifest;
get_power_of_audio_file;
get_scaled_audio_signal;
get_desired_avg_power_noise;
add_silence_to_alignments;
_init_file_write;
_init_filelist_lists;
get_ctm_line;
labels_to_rttmfile;
_init_silence_params;
_init_overlap_params;
_mean_var_to_a_and_b;
rvs;
beta;
gamma;
get_wer_feat_logit;
read_audio_file_and_return;
transcribe_with_ts;
CTCBPEDecodingConfig;
ctc_decoder_predictions_tensor_with_ts;
decode_tokens_to_str_with_ts;
get_ts_from_decoded_prediction;
decode_ids_to_tokens_with_ts;
AudioFeatureIterator;
set_frame_reader;
_get_batch_preds;
infer_logits;
greedy_merge;
if_none_get_default;
load_LM_for_CTC_decoder;
run_ASR_QuartzNet_CTC;
WER_TS;
align_decoder_delay;
run_pyctcdecode;
clean_trans_and_TS;
_get_spaces;
get_word_ts_from_spaces;
run_ASR_CitriNet_CTC;
WERBPE_TS;
set_buffered_infer_params;
run_ASR_BPE_CTC;
FrameBatchASRLogits;
clear_buffer;
get_word_ts_from_wordframes;
dump_json_to_file;
write_txt;
convert_ctm_to_text;
convert_word_dict_seq_to_text;
convert_word_dict_seq_to_ctm;
get_total_result_dict;
get_audacity_label;
get_num_of_spk_from_labels;
make_file_lists;
get_color_palette;
get_csv_columns;
_load_realigning_LM;
loadf;
_init_session_trans_dict;
od;
_init_session_gecko_dict;
_save_VAD_labels_list;
get_speech_labels_from_decoded_prediction;
get_str_speech_labels;
_get_frame_level_VAD;
_get_the_closest_silence_start;
_compensate_word_ts_list;
get_word_level_json_list;
_make_json_output;
realign_words_with_lm;
_get_word_timestamp_anchor;
_write_and_log;
_get_realignment_ranges;
log_s;
DictWriter;
writeheader;
writerow;
_break_lines;
print_sentences;
fromtimestamp;
flatten_dict_config;
get_hydra_override_from_config;
strip_spaces_before_punctuations;
remove_punctuations;
clean_label;
convert_num_to_words;
isdigit;
cal_write_text_metric;
metric_calculator;
SpeakerClustering;
check_input;
unpack_labels;
get_div_ceil_count;
long_forward_infer;
getCosAffinityMatrix;
forward_unit_infer;
is_scripting;
split_embs_to_windows;
get_merge_quantity;
run_reducer;
get_rounded_str_float;
rreplace;
get_uniq_id_with_period;
get_subsegment_dict;
get_subsegments_scriptable;
get_input_manifest_dict;
write_truncated_subsegments;
write_file;
read_file;
get_dict_from_wavlist;
get_dict_from_list;
get_path_dict;
create_segment_manifest;
create_manifest;
get_duration;
angle;
_phase_vocoder_kernel;
mod;
cos_similarity;
mm;
fill_diagonal_;
ScalerMinMax;
getEuclideanDistance;
kmeans_plusplus_torch;
searchsorted;
kmeans_torch;
getTheLargestComponent;
logical_or;
isGraphFullyConnected;
getKneighborsConnections;
half;
getAffinityGraphMat;
getMinimumConnection;
getRepeatedList;
tile;
getMultiScaleCosAffinityMatrix;
getLaplacian;
diag_embed;
eigDecompose;
eigh;
eigValueSh;
eigvalsh;
getLamdaGaplist;
is_complex;
real;
addAnchorEmb;
diag;
getEnhancedSpeakerCount;
NMESC;
estimateNumofSpeakers;
clusterSpectralEmbeddings;
getSpectralEmbeddings;
getPvalueList;
subsampleAffinityMat;
fork;
wait;
getEigRatio;
SpectralClustering;
get_lsa_speaker_mapping;
get_minimal_indices;
stitch_cluster_labels;
calculate_removable_counts;
bincount;
merge_vectors;
get_closest_embeddings;
get_first_arg_index;
onlineNMEanalysis;
speaker_counter_buffer;
limit_frames_per_speaker;
online_spk_num_estimation;
prepare_embedding_update;
make_constant_length_emb;
update_speaker_history_buffer;
get_reduced_mat;
match_labels;
unravel_index;
LinearSumAssignmentSolver;
_step1;
_step2;
_step3;
_step4;
_step5;
_step6;
_reset_uncovered_mat;
_allocate_more;
hash_text;
flatten_sort_;
non_blank_frame_confidence;
words;
TopKSequenceGenerator;
generator;
decode_ids;
get_uniq_id_from_manifest_line;
get_uniq_id_with_dur;
get_timestamps;
get_contiguous_stamps;
merge_stamps;
Annotation;
string_to_float;
write_cluster_labels;
LongFormSpeakerClustering;
get_vad_out_from_rttm_line;
get_offset_and_duration;
write_overlap_segments;
read_rttm_lines;
merge_int_intervals;
fl2int;
int2fl;
get_sub_range_list;
get_target_sig;
check_ranges;
tensor_to_list;
get_speech_labels_for_update;
get_new_cursor_for_update;
get_online_segments_from_slices;
get_online_subsegments_from_buffer;
get_overlap_stamps;
generate_speaker_timestamps;
get_adaptive_threshold;
extract_timestamps;
get_uem_object;
write_rttm;
expand_dims;
print_alignment;
write_lcs_alignment_to_pickle;
longest_common_subsequence_merge;
lcs_alignment_merge_buffer;
inplace_buffer_merge;
speech_collate_fn;
_add_chunk_to_buffer;
_update_feature_buffer;
get_normalized_feature_buffer;
_convert_buffer_to_features;
raw_preprocessor;
update_feature_buffer;
get_batch_frames;
get_frame_buffers;
get_norm_consts_per_frame;
normalize_frame_buffers;
get_buffers_batch;
FeatureFrameBufferer;
AudioBuffersDataLayer;
read_audio_file;
set_signal;
BatchedFeatureFrameBufferer;
_alignment_decoder;
extract_preprocessor;
get_model_device;
append_audio;
preprocess_audio;
append_processed_signal;
get_input_tokens;
_join_hypotheses;
_join_text;
_join_y_sequence;
_join_timestamp;
extract_words_with_timestamps;
segments_offset_to_time;
process_hypothesis;
process_timestamp;
wrap_transcription;
normalize_timestamp_output;
OccurancePunctuationErrorRate;
PostProcessingParams;
write_vad_infer_manifest;
write_vad_infer_manifest_star;
load_tensor_from_file;
generate_overlap_vad_seq_per_file;
generate_overlap_vad_seq_per_file_star;
generate_overlap_vad_seq_per_tensor;
nanquantile;
merge_overlap_segment;
percentile;
cal_vad_onset_offset;
binarization;
remove_segments;
logical_not;
get_gap_segments;
column_stack;
filtering;
filter_short_segments;
prepare_gen_segment_table;
generate_vad_segment_table_per_tensor;
generate_vad_segment_table_per_file;
generate_vad_segment_table_per_file_star;
vad_construct_pyannote_object_per_file;
get_parameter_grid;
ParameterGrid;
vad_tune_threshold_on_dev;
pred_rttm_map;
DetectionErrorRate;
check_if_param_valid;
splitlines;
figure;
subplot;
set_xlim;
tick_params;
set_ylabel;
set_ylim;
twinx;
legend;
set_xticks;
Audio;
gen_pred_from_speech_segments;
stitch_segmented_asr_output;
construct_manifest_eval;
load_rttm_file;
merge_intervals;
load_speech_overlap_segments_from_rttm;
get_nonspeech_segments;
get_frame_labels;
plot_sample_from_rttm;
set_title;
show;
align_labels_to_frames;
read_rttm_as_pyannote_object;
convert_labels_to_speech_segments;
frame_vad_construct_pyannote_object_per_file;
_kaldifst_maybe_raise;
_graphviz_maybe_raise;
graphviz_importer;
_kaldilm_maybe_raise;
kaldilm_importer;
arpa2fst;
arcsort;
SymbolTable;
add_symbol;
add_tokenwords_;
available_key;
add_arc;
StdArc;
ArcIterator;
generate_lexicon_sentencepiece;
LexiconUnit;
Lexicon;
piece_to_id;
add_disambig_symbols;
make_lexicon_fst_no_silence;
StdVectorFst;
set_final;
StateIterator;
determinize_star;
minimize_encoded;
from_openfst;
remove_epsilon;
as_dict;
_is_notebook;
get_ipython;
_svg_srcdoc_resize;
levenshtein_graph_kaldi;
properties;
load_word_lattice;
Lattice;
KaldiWordLattice;
LatticeArc;
LatticeWeight;
token_ids;
kaldi_symbols2dict;
namedtuple;
LatticeProperties;
get_linear_symbol_sequence;
make_linear_acceptor;
Source;
render;
move;
HTML;
_audio_collate_fn;
sample_rate;
sync_setup;
async_setup;
embedding_setup;
process_audio;
load_sync_signals;
load_async_signals;
load_embedding;
get_samples_synchronized;
get_samples_from_file;
get_segment_from_file;
list_to_multichannel;
load_embedding_vector;
num_channels;
output_type;
AudioCollection;
ASRAudioProcessor;
SignalSetup;
AudioToTargetDataset;
get_audio_to_target_with_reference_dataset;
AudioToTargetWithReferenceDataset;
get_audio_to_target_with_embedding_dataset;
AudioToTargetWithEmbeddingDataset;
_key_available;
create_recording;
Recording;
AudioSource;
create_array;
Array;
convert_manifest_nemo_to_lhotse;
open_writer;
load_jsonl;
truncate;
_as_relative;
to_cut;
with_channels;
with_custom;
collate_audio;
from_cuts;
collate_custom_field;
check_angle;
isscalar;
wrap_to_180;
convert_placement_to_range;
simulate_room_kwargs;
simulate_room;
save_rir_simulation;
convert_numpy_to_serializable;
spherical_relative_to_array;
convert_rir_to_multichannel;
rt60_theory;
measure_rt60;
create_group;
load_rir_simulation;
plot_rir_manifest_info;
tight_layout;
grid;
convolve_rir;
calculate_drr;
pow2db;
normalize_max;
db2mag;
simultaneously_active_rms;
rms;
scaled_disturbance;
prepare_source_signal;
check_min_sample_rate;
generate_approximate_noise_field;
get_samplerate;
simulate_room_mix;
load_rir;
get_early_rir;
mag2db;
save_audio;
simulate_room_mix_helper;
plot_mix_manifest_info;
internal_positions;
radius;
get_rotation;
from_euler;
rotate;
new_rotated_array;
ArrayGeometry;
arctan2;
arcsin;
printoptions;
add_subplot;
quiver;
view_init;
set_zlim;
set_xlabel;
set_zlabel;
text;
set_aspect;
check_cfg;
generate_room_params;
generate_array;
generate_source_position;
default_rng;
generate_target;
select_target_source;
generate_interference;
integers;
generate_mix;
calculate_mean;
scale_invariant_target;
convolution_invariant_target;
rfft;
irfft;
toeplitz;
solve;
conj;
calculate_sdr_batch;
calculate_mse_batch;
calculate_mae_batch;
restore_asr_model_from_cloud;
joinpath;
hexdigest;
maybe_download_from_cloud;
resolve_cache_dir;
md5;
hann_window;
L1Loss;
spectral_loss;
mel_transform;
mae_loss;
asr_loss;
loss_fn;
sisnr_loss;
cal_si_snr_with_pit;
get_mask;
new_tensor;
reorder_source;
_trim_inputs;
_batch_reduction;
_select_channel;
_metric;
__repr__;
repr;
Resample;
_squim_mos_metric_model;
_squim_mos_metric_resampler;
_squim_objective_metric_model;
_squim_objective_metric_resampler;
_get_num_dataloaders;
on_validation_start;
on_test_start;
_setup_process_dataloader;
match_batch_length;
configure_callbacks;
SpeechEnhancementLoggingCallback;
mask_estimator;
mixture_consistency;
channel_augmentation;
estimator;
_step;
generate_time;
perturb_kernel_params;
forward_eval;
ssl_pretrain_masking;
vector_field;
get_alphas;
loss_encoded;
loss_time;
GRU;
bn0;
bn1;
feature_gru1;
bn2;
feature_gru2;
bn3;
feature_gru0;
denoise_gru;
denoise_gru_1;
denoise_gru_2;
denoise_gru_3;
mask_act;
inv_conv;
inv_conv_activation;
conv1d;
conv1d_out1;
conv1d_out2;
conv1d_out3;
denoise_mask;
apply_weight_norm;
apply_weight_norm_lstm;
remove_weight_norm;
remove_weight_norm_lstm;
_Seasr;
_apply_weight_norm;
_remove_weight_norm;
get_mean_time_channel;
get_mean_std_time_channel;
std_mean;
normalize_mean;
normalize_mean_var;
wrap_to_pi;
SpectrogramToMultichannelFeatures;
FloatType;
features;
input_projection;
flatten_parameters;
pad_packed_sequence;
output_projection;
output_nonlinearity;
pack_padded_sequence;
ChannelAveragePool;
ConformerEncoder;
ChannelAttentionPool;
TransformAverageConcatenate;
TransformAttendConcatenate;
channel_reduction;
output_layer;
vector_norm;
update_masks;
update_weights;
update_pdf;
ParametricMultichannelWienerFilter;
WPEFilter;
get_output_length;
cfloat;
context_size;
view_as_complex;
conformer;
prior_sampling;
discretize;
coefficients;
log_std_ratio;
perturb_kernel_mean;
perturb_kernel_std;
mask_sequence_tensor;
OrnsteinUhlenbeckVarianceExplodingSDE;
score_estimator;
ReverseStochasticDifferentialEquation;
ReverseDiffusionPredictor;
AnnealedLangevinDynamics;
corrector;
predictor;
_broadcast_time;
flow;
transform_average;
transform_channel;
transform_attend;
attention;
ReferenceChannelEstimatorSNR;
trace;
apply_diag_reg;
apply_filter;
apply_ban;
cdouble;
covariance_matrix;
ref_estimator;
convtensor;
estimate_correlations;
estimate_filter;
unfold;
permute_convtensor;
NoiseConditionalScoreNetworkPlusPlus;
ncsnpp;
Upsample;
init_weights_;
GaussianFourierProjection;
ResnetBlockBigGANPlusPlus;
pad_input;
time_embedding;
projection;
downsample;
upsample;
Rearrange;
input_block;
middle_conv;
output_block;
residual_projection;
diffusion_step_projection;
alpha_t_max;
alpha;
sigma_t_max;
sigma;
alpha_bar_from_alpha;
sigma_bar_from_sigma;
f;
g;
SBNoiseScheduleVE;
SBNoiseScheduleVP;
time_max;
time_min;
num_steps;
estimator_time;
get_feedforward_layer;
GEGLU;
dw_conv1d;
to_gamma;
to_beta;
gelu;
init_alibi;
RMSNorm;
rmsnorm_class;
MultiheadAttention;
get_slopes;
get_alibi_bias;
final_norm;
attn_prenorm;
attn;
ff_prenorm;
skip_combiner;
ff;
ConvPositionEmbed;
TransformerUNet;
LearnedSinusoidalPosEmb;
SiLU;
_get_key_padding_mask;
proj_in;
transformerunet;
conv_embed;
sinu_pos_emb;
sinc_unnormalized;
sinc;
theoretical_coherence;
squareform;
pdist;
estimated_coherence;
conjugate;
transform_to_match_coherence;
corrcoef;
fill_diagonal;
cholesky;
swapaxes;
eig;
get_segment_start;
correlate;
calculate_sdr_numpy;
scale_invariant_target_numpy;
convolution_invariant_target_numpy;
convmtx_numpy;
convmtx_mc_numpy;
_get_logger;
_log_audio;
add_audio;
gcd;
_get_sinc_resample_kernel;
_apply_sinc_resample_kernel;
clamp_;
i0;
is_floating_point;
log_metrics;
ema_update;
_foreach_mul_;
_foreach_add_;
run_ema_update_cpu;
MisconfigurationException;
EMAOptimizer;
_should_validate_ema_weights;
swap_model_weights;
on_validation_end;
on_test_end;
_ema_initialized;
switch_main_parameter_weights;
save_ema_model;
save_original_optimizer_state;
rank_zero_info;
step;
_should_update_at_step;
all_parameters;
swap_tensors;
swap_ema_weights;
__getattr__;
add_param_group;
get_iterable;
index_generator;
Subset;
temperature_generator;
power;
round_robin_generator;
random_generator;
get_iterable_by_lang;
build_single_CS_sample;
get_sample_from_language;
trim_zeros;
prep_underlying_datasets;
get_prompt_format_fn;
mro;
fn;
fields;
read_cutset_from_config;
read_dataset_config;
read_nemo_manifest;
read_lhotse_manifest;
IncompleteConfigError;
get_known_config_data_types;
data_type_parser;
parse_and_combine_datasets;
parse_group;
get_parser_fn;
parser_fn;
read_txt_paths;
LhotseTextAdapter;
read_txt_pair_paths;
LhotseTextPairAdapter;
read_nemo_sft_jsonl;
NeMoSFTJsonlAdapter;
read_multimodal_conversation_jsonl;
NeMoMultimodalConversationJsonlAdapter;
attach_tags;
mux;
from_shar;
_resolve_shar_inputs;
read_lhotse_as_conversation;
NeMoMultimodalConversation;
AudioTurn;
TextTurn;
resolve_relative_paths;
resolve_recording;
resolve_array;
LazyNeMoTarredIterator;
LazyNeMoIterator;
to_shards;
infinite_mux;
make_structured_with_schema_warnings;
from_dotlist;
_decorator;
cut_to_conversation;
maybe_set_cuda_expandable_segments;
get_lhotse_dataloader_from_multi_config;
get_lhotse_dataloader_from_single_config;
resolve_seed;
fix_random_seed;
get_lhotse_sampler_from_config;
IterableDatasetWrapper;
make_worker_init_fn;
gather_shared_opts;
ZipSampler;
RoundRobinSampler;
determine_use_iterable_dataset;
determine_bucket_duration_bins;
determine_sampling_constraint;
LazyFlattener;
mix;
cut_into_windows;
DurationFilter;
TokenCountFilter;
DynamicBucketingSampler;
perturb_speed;
TokenPerSecondFilter;
TokenPerTokenFilter;
CutConcatenate;
ReverbWithImpulseResponse;
MultimodalFixedBucketBatchSizeConstraint2D;
MultimodalSamplingConstraint;
FixedBucketBatchSizeConstraint2D;
TimeConstraint;
BucketingFilter;
discard;
callable;
tokenize_with_prompt;
_normalize_loudness;
normalize_loudness;
_merge_supervisions;
merge_supervisions;
_flatten_alt_text;
move_to_memory;
map_supervisions;
fastcopy;
_set_allocator_settings;
make_cut_with_subset_inmemory_recording;
LibsndfileBackend;
getvalue;
validate_extra_fields;
is_supported;
supported_types;
_expand_sharded_filepaths;
_to_custom_attr_dict;
LazyJsonlIterator;
LazyIteratorChain;
_create_cut;
SupervisionSegment;
attach_to;
__add__;
_create_recording;
ifnone;
MonoCut;
compute_num_samples;
_validate;
shard_ids;
_iter_sequential;
open_best;
__init_subclass__;
_maybe_init;
find_smallest_bucket;
bisect_left;
_measure_tokens;
_measure_tps;
TokenConstraint;
measure_length;
exceeded;
close_to_exceeding;
has_custom;
bucketing_2d_enabled;
select_bucket;
default_text_example_prompt_format_fn;
registered_prompt_format_fn;
default_src_tgt_prompt_format_fn;
default_sft_prompt_format_fn;
_compute_num_audio_tokens;
default_multimodal_conversation_prompt_format_fn;
apply_prompt_format;
TextExample;
SourceTargetTextExample;
NeMoSFTExample;
to_dict;
input_length;
output_length;
total_length;
has_audio_turns;
has_text_turns;
list_cuts;
_iter_tar;
_iter_jsonl;
TarIterator;
_reset;
_setup_writers;
_maybe_increment_shard;
with_suffix;
JsonlShardWriter;
AudioTarWriter;
is_valid_url;
loss_fct;
compute_topk_accuracy;
top_k;
f1_score;
white_space_fix;
remove_articles;
remove_punc;
FLOPSConfig;
on_train_end;
read_tb_log;
eval_tflops_per_sec_per_gpu;
add_scalar;
eval_model_flops;
perplexity;
punctuation_error_rate;
compute_rates;
punctuation_rates;
compute_operation_amounts;
mask_punct_tokens;
count;
sum_amounts;
DataFrame;
tabulate;
is_config;
ResidualAddAdapterStrategyConfig;
adapter_unfreeze;
__mask_text__;
convert_tokens_to_ids;
last_linear_layer;
get_tunnel;
get_mounts_from_config;
LocalTunnel;
EventAccumulator;
Reload;
Scalars;
getmtime;
LSTMDropout;
BNRNNSum;
ln_lstm;
StackedLSTM;
init_stacked_lstm;
OverLastDim;
rnn_type;
_flatten_parameters;
RNNLayer;
_parse_hidden_state;
cell;
layernorm_i;
layernorm_h;
tanh;
layernorm_c;
rnn_layer;
register_external_repo;
get_unmounted_path;
get_exp_handles;
_get_handles;
from_title;
status;
from_id;
get_timeout;
strptime;
get_free_port;
get_reward_server_command;
get_server_command;
get_ray_server_cmd;
read_config;
get_cluster_config;
set_nemorun_home;
cwd;
_get_tunnel_cached;
progress_callback;
cluster_download;
open_sftp;
OutputWatcher;
cluster_upload;
put;
get_git_repo_path;
get_packager;
get_registered_external_repo;
PatternPackager;
HybridPackager;
get_env_variables;
get_token;
get_executor;
DockerExecutor;
CustomJobDetails;
temporary_env_update;
Script;
get_sandox_command;
get_packaging_job_key;
quote;
tunnel_hash;
stdout;
srun_stdout;
stderr;
srun_stderr;
ls_term;
_compute_softmax;
flatten_iterable;
apply_rope_scaling;
Snake;
LeakyReLU;
snake_act;
lrelu;
clean_text;
warn_common_chars;
unidecode;
clean_numbers;
clean_abbreviations;
clean_punctuations;
NumberCleaner;
format_final_number;
clean;
convert_to_word;
__parse_texts;
item_iter;
_get_len;
SpeechLLMAudioTextEntity;
__parse_item;
relative_speaker_parser;
_parse_item;
split_rttm_line;
__parse_item_rttm;
get_audio_file;
parse_func;
is_tarred_dataset;
get_datastore_object;
parser_type;
_tokenize;
_normalize;
__make_trans_table;
maketrans;
map_manifest_values_to_special_tokens;
canary;
get_slots;
_validate_slot_values;
encode_turn;
canary2;
matches;
_validate_defaults;
get_roles;
get_template;
_mangled;
_get_default_for_role;
_apply_tokenizer;
get_eos;
get_bos;
gemma1;
llama2;
llama2_src_tgt_text_example;
llama2_sft_text_example;
llama3;
plain;
t5nmt;
t5nmt_src_tgt_text_example;
DummyTokenizer;
_calculate_offsets;
tokens_to_text;
decode_pieces;
ids_to_words_and_langs;
tokens_to_ids;
langs;
_impl;
_call_agg_tokenizer;
_call_tokenizer;
_call_parser;
_tokenizer;
bytes;
id_to_token;
_map_canary1_to_canary2_lang;
_text_with_timestamps_to_ids;
_tokenize_special_prompt;
_text_to_ids_maybe_with_timestamps;
spl_token_to_id;
create_spt_model;
fromkeys;
eos_id;
bos_id;
nospeech_id;
pad_id;
update_special_tokens_dict;
check_special_tokens_to_remove_while_decoding;
check_special_token_name;
check_token_from_file;
check_special_tokens_dict_from_file;
check_special_tokens_dict_for_duplicate_values;
has_value;
check_special_token_id_getting;
unk_id;
mask_id;
sep_id;
cls_id;
create_special_tokens_dict;
check_characters_to_exclude_from_vocabulary;
check_text_and_text_file_name;
build_vocab;
is_template_var;
extract_template_parts;
strip_template_wrap;
render_chat_turn;
encode_string_with_special_token;
tokenize_with_chat_template;
is_chat_input;
extract_turns;
explode_chat_template_input;
OpenCC;
spacing;
cut;
compute_code;
array_convert_to_int;
convert_to_int;
code_range;
reverse_convert_to_int;
PowerTransformer;
QuantileTransformer;
RobustScaler;
fit_transform;
inverse_transform;
get_column_codes;
coder;
MosesTokenizer;
MosesDetokenizer;
MosesPunctNormalizer;
Tagger;
get_unicode_categories;
tokenize_en;
offsets;
_update_cache;
_compile_regex;
vocab_size;
token_to_ids;
_get_regex_vocab_files;
save_tokenizer;
load_tokenizer;
build_vocab_from_csv;
build_vocab_from_text;
Train;
SentencePieceProcessor;
Load;
get_piece_size;
add_special_tokens;
encode_as_pieces;
_text_to_ids;
_text_to_ids_extra_space;
encode_as_ids;
id_to_piece;
NameError;
additional_special_tokens_ids;
vocab;
add_phone_tokens_to_special_tokens;
find_index_of;
reload_mergeable_ranks;
Encoding;
decode_single_token_bytes;
encode_single_token;
name;
unique_identifiers;
sep;
eod;
bos;
eos;
mask;
BPE;
subword_to_id;
id_to_subword;
_initialize_tokenizer;
convert_tokens_to_string;
convert_ids_to_tokens;
inv_vocab;
save_vocabulary;
validate_locale;
get_grapheme_character_set;
get_ipa_character_set;
get_ipa_punctuation_list;
english_text_preprocessing;
unicode;
any_locale_text_preprocessing;
normalize_unicode_text;
is_normalized;
_word_tokenize;
english_word_tokenize;
any_locale_word_tokenize;
spanish_text_preprocessing;
italian_text_preprocessing;
french_text_preprocessing;
vietnamese_text_preprocessing;
japanese_text_preprocessing;
EnglishG2p;
EnglishPhonemesTokenizer;
g2p;
set_phone_prob;
replace_symbols;
get_tokenizer_config;
load_pytorch_model;
load_jit_model;
get_hf_token;
hf_hub_download;
autoencode;
_full_model;
_enc_model;
_dec_model;
pad_video_batch;
numpy2tensor;
tensor2numpy;
unpad_video_batch;
VaeWrapper;
trt_compile;
model_wrapper;
save_jit_model;
get_filepaths;
get_output_filepath;
read_image;
read_video;
resize_image;
resize_video;
write_image;
write_video;
pad_image_batch;
unpad_image_batch;
get_pytorch_model;
value;
encoder_jit;
decoder_jit;
groups;
Normalize;
norm1;
nonlinearity;
conv1;
norm2;
conv2;
nin_shortcut;
q;
k;
v;
Patcher;
Module;
ResnetBlock;
AttnBlock;
Downsample;
patcher;
block_1;
attn_1;
block_2;
conv_out;
conv_in;
UnPatcher;
unpatcher;
cast_tuple;
Conv3d;
is_odd;
_replication_pad;
conv3d;
CausalConv3d;
replication_pad;
conv3;
avg_pool3d;
CausalNormalize;
time2batch;
batch2time;
space2batch;
batch2space;
CausalResnetBlock3d;
CausalAttnBlock;
CausalDownsample3d;
patcher3d;
CausalUpsample3d;
unpatcher3d;
Patcher3D;
CausalResnetBlockFactorized3d;
CausalTemporalAttnBlock;
CausalHybridDownsample3d;
UnPatcher3D;
CausalHybridUpsample3d;
_haar;
_arrange;
_dwt;
_ihaar;
_iarrange;
_idwt;
conv_transpose2d;
conv_transpose3d;
FSQuantizer;
indices_to_codes;
cumprod;
default;
bound;
atanh;
round_ste;
codes_to_indices;
_scale_and_shift;
_scale_and_shift_inverse;
project_out;
project_in;
pack_one;
unpack_one;
remap_to_used;
unmap_to_all;
get_codebook_entry;
entropy;
divisible_by;
quant_conv;
distribution;
NetworkEval;
InvQuantizerJit;
decode_code;
datasets_provider;
get_train_dataset;
get_savable_loader;
default_worker_config;
get_data_parallel_rank;
get_data_parallel_world_size;
WorkerConfig;
generate_pos_id;
meshgrid;
get_pos_id_3d;
default_collate;
MegatronDataSampler;
DiTVideoLatentFakeDataset;
_create_dataloader;
_MockT2IDataset;
cook;
basic_sample_keys;
pad_divisible;
concat_pad;
cook_raw_images;
__radd__;
__lt__;
encode_sample;
stateless;
DiffusionSample;
SkipSample;
select_samples_to_pack;
pack_selected_samples;
batch;
initialize_text_encoder;
encode_for_batch;
batch_encode_plus;
EncodedSample;
generate_t5_embed;
butterfly_process_func;
autoencoder;
prepare;
get_world_size;
get_start_end_idx_for_this_rank;
ShardWriter;
process_func;
prepare_butterfly_dataset;
_enable_lora;
T5EncoderModel;
dit_forward_step;
dit_data_step;
get_batch_on_this_cp_rank;
get_context_parallel_rank;
dynamic_import;
import_module;
configure_model;
configure_vae;
EDMPipeline;
DiTConfig;
data_step;
data_step_fn;
forward_step;
generate_samples_from_batch;
get_data_parallel_src_rank;
gather_object;
Video;
training_loss_reduction;
MaskedTokenLossReduction;
validation_loss_reduction;
DummyLossReduction;
on_validation_model_zero_grad;
build_module;
_split_qkv;
SplitAlongDim;
get_query_key_value_tensors;
linear_qkv;
run_realtime_tests;
q_layernorm;
k_layernorm;
get_added_query_key_value_tensors;
added_linear_qkv;
added_q_layernorm;
added_k_layernorm;
_adjust_key_value_for_inference;
linear_proj;
added_linear_proj;
apply_rotary_pos_emb;
_checkpointed_attention_forward;
core_attention;
get_pos_emb_on_this_cp_rank;
fork_rng;
get_3d_sincos_pos_embed;
pos_embedding;
customize_init_param;
init_method;
emb_w;
emb_t;
emb_h;
get_stdit_adaln_block_with_transformer_engine_spec;
ModuleSpec;
STDiTWithAdaLNSubmodules;
SelfAttentionSubmodules;
CrossAttentionSubmodules;
MLPSubmodules;
get_dit_adaln_block_with_transformer_engine_spec;
DiTWithAdaLNSubmodules;
get_official_dit_adaln_block_with_transformer_engine_spec;
get_mm_dit_block_with_transformer_engine_spec;
TransformerLayerSubmodules;
JointSelfAttentionSubmodules;
get_flux_single_transformer_engine_spec;
get_flux_double_transformer_engine_spec;
_norm;
rsqrt;
ColumnParallelLinear;
adaLN_modulation;
modulated_layernorm;
modulate;
layernorm;
scaled_modulated_layernorm;
scale_add;
_replace_no_cp_submodules;
AdaLN;
adaLN;
spatial_self_attention;
full_self_attention;
cross_attention;
temporal_self_attention;
make_viewless_tensor;
self_attention;
CudaGraphManager;
AdaLNContinuous;
adaln;
adaln_context;
context_mlp;
cudagraph_manager;
linear;
norm_final;
transformer_decoder_layer_spec;
TransformerBlock;
Timesteps;
ParallelTimestepEmbedding;
pos_embedder;
fps_embedder;
affline_norm;
final_layer_linear;
x_embedder;
scatter_to_sequence_parallel_region;
gather_from_sequence_parallel_region;
t_embedder;
set_input_tensor;
sharded_state_dict;
_set_embedder_weights_replica_id;
make_sharded_tensor_for_checkpoint;
_get_mlp_module_spec;
MoESubmodules;
get_dit_llama_spec;
rope;
get_timestep_embedding;
out_layer;
silu;
in_layer;
MLPEmbedder;
time_proj;
time_embedder;
flux_data_step;
import_double_block_qkv;
state_transform;
_import_qkv;
import_double_block_qkv_bias;
_import_qkv_bias;
import_added_qkv;
import_added_qkv_bias;
import_single_block_qkv;
import_single_block_qkv_bias;
transform_single_proj_out;
Flux;
EmbedND;
TimeStepEmbedder;
load_from_pretrained;
MMDiTLayer;
FluxSingleTransformerBlock;
get_fp8_context;
DelayedScaling;
model_parallel_is_initialized;
fp8_autocast;
get_amax_reduction_group;
img_embed;
txt_embed;
timestep_embedding;
pos_embed;
vector_embedding;
guidance_embedding;
removeprefix;
flux_transformer_converter;
save_safetensors;
named_children;
_get_layer_offset;
replace_prefix_for_sharding;
sharded_state_dict_default;
MegatronOptimizerModule;
OptimizerConfig;
configure_scheduler;
configure_text_encoders;
FlowMatchEulerDiscreteScheduler;
AutoEncoder;
FrozenCLIPEmbedder;
FrozenT5Embedder;
prepare_image_latent;
_unpack_latents;
t5;
compute_density_for_timestep_sampling;
_prepare_latent_image_ids;
_pack_latents;
init;
MegatronFluxModel;
nemo_setup;
convert_state;
nemo_save;
teardown;
config;
FluxConfig;
FluxModelParams;
apply_transforms;
encoder_prompt;
t5_encoder;
clip_encoder;
prepare_latents;
_generate_rand_latents;
denormalize;
_calculate_shift;
set_timesteps;
FluxControlNet;
pil_to_numpy;
numpy_to_pt;
prepare_image;
flux_controlnet;
zero_module;
flux_controlnet_data_step;
ControlNetConditioningEmbedding;
load_from_flux_transformer;
input_hint_block;
controlnet_x_embedder;
control_block;
flux;
FluxControlnetForwardWrapper;
forward_wrapper;
FluxControlNetInferencePipeline;
pipe;
flux_mock_datamodule;
MockDataModule;
unit_test_recipe;
common_broadcast;
batch_add;
batch_mul;
batch_sub;
batch_div;
cat_outputs_cp;
all_gather;
NormalDist;
sample_t;
inv_cdf;
x0_fn;
EDMSDE;
EDMSampler;
EDMScaling;
_initialize_generators;
get_data_and_condition;
draw_training_sigma_and_epsilon;
compute_loss_with_epsilon_and_sigma;
denoise;
scaling;
net;
marginal_prob;
get_per_sigma_loss_weights;
get_condition_uncondition;
get_x0_fn_from_batch;
get_context_parallel_group;
random_dropout_input;
bernoulli;
scale_noise;
index_for_timestep;
time_shift;
_sigma_to_t;
_init_step_index;
initialize_distributed;
set_world_size;
make_attn;
Encoder;
DiagonalGaussian;
reg;
load_sft;
_generate_input;
_count_parameters;
_generate_all_combinations;
_assign_attributes;
_load_base_json_skeleton;
_sort_data_in_place;
_print_table;
search_for_target_vae;
_search_space_8x1024;
reset_peak_memory_stats;
max_memory_allocated;
_search_space_16x1024;
profile;
LinAttnBlock;
conv_shortcut;
temb_proj;
avg_pool2d;
to_qkv;
to_out;
LPIPS;
NLayerDiscriminator;
calculate_adaptive_weight;
grad;
kl;
perceptual_loss;
adopt_weight;
discriminator;
disc_loss;
setUp;
VAEGenerator;
test_initialization_valid;
assertEqual;
test_initialization_invalid;
assertRaises;
test_generate_input;
test_count_parameters;
test_load_base_json_skeleton;
test_generate_all_combinations;
assertIn;
test_assign_attributes;
test_search_space_16x1024;
assertTrue;
test_sort_data_in_place;
test_search_for_target_vae_invalid;
train_vae;
LPIPSWithDiscriminator;
vae_loss;
TransformerConfig;
VAE;
Image;
make_grid;
AvgLossReduction;
crop_image;
validate_vae;
entrypoint;
_load_model_from_path;
_setup;
set_modelopt_spec_if_exists_in_ckpt;
_validate_config;
setup_trainer_and_restore_model_with_modelopt_spec;
prune_gpt_model;
save_pruned_model;
Console;
distill;
DistillationGPTModel;
ptq;
QuantizationConfig;
MegatronLLMDeployableNemo2;
unset_environment_variables;
get_trtllm_deployable;
serve;
generate_other_ranks;
EvaluationConfig;
wait_for_fastapi_server;
evaluate_accuracy;
model_dump;
_legacy_evaluate;
find_framework;
MisconfigurationError;
import_ckpt;
_build_directory_tree;
FileExistsError;
load_connector_from_trainer_ckpt;
exporter;
export_ckpt;
setup_model_and_tokenizer;
_use_tokenizer;
_set_with_io;
configure_no_restart_validation_training_loop;
ModelTransform;
Tree;
iterdir;
task;
masked_token_with_zero;
sentence_order_prediction_loss;
cross_entropy_loss;
_gather_global_in_batch_representations;
all_gather_no_backprop;
all_gather_with_backprop;
get_dataset_root;
create_sft_dataset;
BertEmbeddingDataset;
_JSONLMemMapDataset;
_build_samples_mapping;
_get_samples_mapping;
_process_example;
_maybe_cast_to_list;
_collate_item;
_create_attention_mask2;
_ceil_to_nearest;
compute_consumed_samples;
update_num_microbatches;
_create_dataset;
WrappedDataLoader;
_extract_tokenizer_model_name;
hash;
_MockBERTDataset;
reconfigure_limit_batches;
_reconfigure_limit_batches;
get_num_microbatches;
_get_text;
get_blend_from_list;
BlendedMegatronDatasetBuilder;
bert_dataset_config;
BERTMaskedWordPieceDatasetConfig;
prepare_data;
_download_data;
_preprocess_and_split_data;
train_test_split;
bert_data_step;
bert_forward_step;
get_packed_seq_params;
default_layer_spec;
get_bert_layer_local_spec_postln;
get_bert_layer_with_transformer_engine_spec_postln;
MCoreBertModelWrapperWithPostLNSupport;
transformer_layer_spec;
get_vocab_size;
TransformerBlockWithPostLNSupport;
Pooler;
setup_embeddings_and_output_layer;
MCoreBertLMHead;
mcore_get_linear_layer;
lm_head;
compute_language_model_loss;
shared_embedding_or_output_weight;
pooler;
binary_head;
get_tensor_model_parallel_world_size;
get_vocab_range;
input_layernorm;
post_att_layernorm;
pre_cross_attn_layernorm;
pre_mlp_layernorm;
post_mlp_layernorm;
bias_dropout_add_exec_handler;
self_attn_bda;
cross_attn_bda;
mlp_bda;
FusedLayerNorm;
initial_layernorm;
forward_step_fn;
BERTLossReduction;
_import_embedding;
_import_output_bias;
_import_qkv_2;
_import_qkv_bias_2;
_import_embedding_2;
_export_qkv;
_export_qkv_bias;
_export_embedding;
BertConfig;
HuggingFaceBertModel;
save_hf_tokenizer_assets;
HuggingFaceBertConfig;
no_init_weights;
_from_config;
nemo_load;
HFBertConfig;
TransformerLayerSubmodulesWithPostLNSupport;
bert_embedding_data_step;
bert_embedding_forward_step;
BertEmbeddingHead;
embedding_head;
BERTInBatchExclusiveHardNegativesRankingLoss;
BertEmbeddingModel;
unset_vars_with_prefix;
TensorRTLLM;
wait_for_server_ready;
ModelClient;
_iter_namespace;
iter_modules;
get_available_evaluations;
NeMoFWLMEval;
simple_evaluate;
_generate_tokens_logits;
tokenizer_type;
loglikelihood;
generate_until;
gelu_impl;
openai_gelu;
quick_gelu;
squared_relu;
_map_module_list;
_map_module;
_map_module_dict;
forall;
apply_predicate;
_get_func_kwargs;
id;
_create_list_wrapper;
mock;
squad;
SquadDataModule;
dolly;
DollyDataModule;
hf_dataset;
GPTSFTPackedDataset;
GPTSFTChatDataset;
GPTSFTDataset;
_load_dataset;
_maybe_validate_prompt_template;
issubset;
_OnlineSampleMapping;
_separate_template;
_multiple_truncation;
_truncation;
_build_loss_mask;
_create_attention_mask;
IntTensor;
_preprocess;
_chat_preprocess;
validate_batch_size_for_packed_sequence;
prepare_packed_sequence_data;
default_pack_path;
pack_metadata;
train_path_packed;
validation_path_packed;
clean_split;
make_dataset_splits;
has_dist_env_init_or_rank_env_var;
extract_key_from_dicts;
pad_within_micro;
_make_dataloader;
HFDatasetPackedSequenceHelper;
preprocess_dataset;
process_doc;
capitalize;
select_columns;
_MockGPTDataset;
preprocess_batch;
create_block_causal_mask;
block_diag;
packed_block_causal_mask;
_should_stop_packing;
_add_pack;
_split_and_add_pack;
_convert_to_tensors;
_pad_pack;
tokenize_dataset;
create_hist;
create_packing_strategy;
fill_packing_strategy;
is_number_tryexcept;
is_zipped_list;
validate_dataset_asset_accessibility;
access;
PermissionError;
build_pretraining_datamodule;
gpt_dataset_config;
GPTDatasetConfig;
from_list;
build_index_from_memdata;
memmap;
build_index_files;
get_context;
handle_index;
lightning_prepare_data;
build_mapping;
_deallocate_indexed_dataset_memory;
_make_indexed_dataset_compatibility;
get_pipeline_model_parallel_group;
_get_header_conversation_type_mask_role;
_mask_targets;
_convert_to_openai_messages;
BoolTensor;
_identify_start_index_of_subsequence;
_add_speaker_and_signal;
_response_value_formater;
_build_memmap_index_files;
_index_fn;
_index_file_exists;
build_index_fn;
issubdtype;
load_file;
digitize;
_fetch_sample_from_memmap;
_build_data_from_text;
get_sample_block;
__reduce_ex__;
__reduce__;
infer_global_batch_size;
parse_dataset_config;
Evo2BlendedDatasetConfig;
validate_dataset_prefix;
model_validator;
_get_gpt_batch;
_modify_gpt_batch;
mask_phylogenetic_tags;
make_upper_case;
region_all_valid_or_control;
unflatten;
Baichuan2Config;
Baichuan2Model;
make_vocab_size_divisible_by;
dtype_from_hf;
register_for_auto_class;
torch_dtype_from_mcore_config;
gpt_data_step;
gpt_forward_step;
transformer_engine_layer_spec;
get_gpt_layer_with_transformer_engine_spec;
transformer_engine_full_layer_spec;
get_gpt_full_te_layer_autocast_spec;
local_layer_spec;
get_gpt_layer_local_spec;
mtp_block_spec;
get_gpt_mtp_block_spec;
model_init_device_context;
set_tensor_parallel_group;
set_context_parallel_group;
get_context_parallel_global_ranks;
ExitStack;
enter_context;
get_inference_wrapper;
InferenceWrapperConfig;
_import_qkv_weight;
_export_qkv_weight;
ChatGLMConfig;
ChatGLMModel;
DeepSeekV2Config;
DeepSeekModel;
_verify_source;
_modify_source_state;
_ModelState;
_add_mtp_to_source;
DeepSeekConfig;
_detect_hf_deepseek_version;
ckpt_load;
load_distributed_model_weights;
torch_dtype_from_dict_config;
HFDeepseekV3Config;
GemmaConfig;
GemmaModel;
HFGemmaConfig;
gemma2_layer_spec;
logit_softcapping;
get_swa;
Gemma2Config;
Gemma2Model;
divide;
FusedScaleMaskSoftmax;
baddbmm;
scale_mask_softmax;
attention_dropout;
get_global_memory_buffer;
get_cuda_rng_tracker;
TENorm;
post_layernorm;
gemma3_layer_spec;
_is_local_attn_layer;
Gemma3RotaryEmbedding;
Gemma3LanguageModelEmbedding;
Gemma3Config;
RotaryEmbedding;
Gemma3Model;
Gemma3Config1B;
Gemma3Config4B;
Gemma3Config12B;
Gemma3Config27B;
HFGemma3TextConfig;
count_tail_padding;
configure_tokenizer;
_configure_model;
BitsAndBytesConfig;
safe_import;
te_accelerate;
model_transform;
gradient_checkpointing_enable;
_apply_liger_kernel_to_instance;
_remove_extra_batch_keys;
create_context_parallel_ctx;
get_train_context;
train_context;
view_as;
get_output_embeddings;
full_tensor;
on_before_optimizer_step;
optimizers;
reduce_item;
get_group;
get_backend;
pop_fqn_prefix;
load_pretrained;
HFCheckpointIO;
_has_lora_adapter;
pool;
get_llama_bidirectional_hf_model;
Pooling;
LlamaBidirectionalHFAdapter;
_update_causal_mask;
_prepare_4d_attention_mask;
LlamaBidirectionalModel;
SequenceClassifierOutputWithPast;
BCEWithLogitsLoss;
pooling_module;
hyena_forward_step;
MCoreHyenaModel;
__new__;
HyenaModel;
get_source_model;
ModelState;
transform_source_dict;
adjust_medium_filter;
HyenaConfig;
split_moe;
LlamaConfig;
LlamaModel;
_modify_llama4_source_state;
is_llama4;
HFLlamaConfig;
create_llama4_config;
HFLlama4TextConfig;
dict_to_obj;
get_peft_model;
ckpt_to_weights_subdir;
peft_config;
LoraConfig;
chunkify_cu_seqlens;
get_llama4_layer_spec;
get_gpt_decoder_block_spec;
get_transformer_layer_offset;
deprecate_inference_params;
is_dynamic_batching;
is_decode_only;
flash_decode;
is_fa_min_version;
is_static_batching;
cu_query_lengths;
cu_kv_lengths;
flash_decode_and_prefill;
apply_rotary_emb_query;
_local_layer_spec;
_transformer_engine_layer_spec;
get_nv_embedding_layer_spec;
nv_embedding_data_step;
nv_embedding_forward_step;
_average_pool;
LlamaEmbeddingModel;
Llama32EmbeddingConfig1B;
LlamaBidirectionalConfig;
heterogeneous_layer_spec;
get_gpt_heterogeneous_layer_spec;
Llama31NemotronNano8BConfig;
LlamaNemotronModel;
to_json_string;
MistralConfig7B;
MistralModel;
HfMistralConfig;
_import_lm_head;
MixtralConfig8x7B;
MixtralModel;
config_cls;
HfMixtralConfig;
NemotronConfig;
NemotronModel;
HFNemotronConfig;
Phi3Config;
Phi3Model;
HFPhi3Config;
Qwen2Config;
Qwen2Model;
HFQwen2Config;
Qwen3Config;
Qwen3Model;
qwen3_config_cls;
hf_config_cls;
ssm_forward_step;
dist_ckpt_handler;
load_plain_tensors;
_export_head;
MCoreMambaModel;
mamba_stack_spec;
SSMConfig;
MambaModel;
NemotronHConfig8B;
NemotronHConfig47B;
NemotronHConfig56B;
StarcoderConfig;
StarcoderModel;
HFStarcoderConfig;
Starcoder2Config;
Starcoder2Model;
HFStarcoder2Config;
allocate_layers;
_select_layers_for_pipeline_parallel;
_checkpointed_forward;
te_checkpoint;
checkpoint;
checkpoint_handler;
_get_layer;
custom;
TEDelayedScaling;
custom_forward;
_allocate_override;
log_single_rank;
set_layer_number;
mixer;
hyena_bda;
_raise_te_import_error;
set_format_recipe;
ParallelCausalDepthwiseConv1d;
ParallelShortHyenaOperator;
ParallelHyenaOperator;
_maybe_use_fp8;
hyena_proj_conv;
Format;
__getattribute__;
has_config_logger_enabled;
get_init_method;
log_config_to_disk;
LanguageModelEmbedding;
locals;
reweighted_cross_entropy;
get_rotary_seq_len;
rotary_pos_emb;
_get_zigzag_indices;
_get_inverse_zigzag_indices;
all_to_all_single_fn;
all_to_all_single;
zigzag_get_overlapping_patches;
hyena_no_weight_decay_cond;
fftconv_func;
small_init_init_method;
wang_init_method;
ensure_divisibility;
initialize_affine_weight_gpu;
get_groups_and_group_sizes;
get_process_group_ranks;
irecv;
isend;
get_t;
compute_filter;
make_sharded_tensors_for_checkpoint;
logspace;
init_;
ExplicitSingleDecayFilter;
conv_init_method;
ImplicitModalFilter;
_save_to_state_dict;
short_conv_class;
short_conv;
causal_conv1d_fn;
_setup_trainer_and_restore_model;
setup_megatron_parallel;
selective_restore;
RestoreConfig;
peft;
load_model_state_dict;
EncoderDecoderTextGenerationController;
TextGenerationController;
setup_mcore_engine;
_set_gpt_modelopt_spec;
get_gpt_layer_modelopt_spec;
_set_gpt_mamba_modelopt_spec;
get_tokenizer;
_projection;
cosine_embedding_loss;
_fit;
_init_weights;
_masked_token_loss;
_distillation_loss_fn;
_DistillationLossReduction;
core_module;
LogitsAndIntermediatesLossBalancer;
DistillationConfig;
ProjectionLayer;
_adjust_layer_index_for_pp;
HiddenStateCosineLoss;
get_tensor_and_context_parallel_rank;
teacher_provider;
parse_strict_flag;
_teacher_model;
only_student_forward;
get_tensor_shapes_adjust_fn_for_distillation;
get_model_config;
get_model_type;
get_model_xattn;
get_tensor_shapes;
set_student_input_tensor_shape;
get_virtual_pipeline_model_parallel_world_size;
_set_input_tensor;
adjust_tensor_shapes;
io_dump;
from_trainer;
create_data_iterator_getter;
unwrap_for_modelopt_operations;
get_modelopt_decoder_type;
_get_decoder_type;
_generate_sample;
_get_forward_loop;
create_megatron_forward_loop;
get_dataloader;
_get_quant_cfg;
load_quant_cfg;
postprocess_amax;
print_quant_summary;
pformat;
get_forward_backward_func;
forward_backward_func;
_validate_quantized_checkpoint;
_save_tokenizer;
copytree;
remove_hook_from_module;
export_tensorrt_llm_checkpoint;
export_hf_checkpoint;
export_mcore_gpt_to_hf;
_get_iterator;
forward_step_func;
loop;
huggingface_forward_loop;
_mock_loss_function;
get_quant_cfg_choices;
standardize_json_config;
maybe_cast_to_type;
distillation_recipe;
prune_recipe;
gpt_lora;
export_lora;
merge_lora;
_load_base_model_and_lora;
_setup_trainer_and_restore_model_and_adapter;
LoRAMerge;
lora_merge;
_save_merged_weight;
lora;
megatron_cpu_init_context;
base_linear_forward;
adapter_q;
adapter_k;
adapter_v;
adapter_gate;
adapter_up;
get_adapter_attributes_from_linear;
LinearAdapter;
ParallelLinearAdapter;
LoRALinear;
LoRALinearSplitQKV;
LoRALinearSplitFC1UpGate;
is_expert_linear;
init_weight_magnitude;
make_tp_sharded_tensor_for_checkpoint;
_get_weight_norm;
get_weight_magnitude;
ParallelLinearDoRAAdapter;
DoRALinear;
patch_linear_module;
_init_adapter;
lora_b;
fwd;
lora_a;
lora_cls;
wildcard_match;
init_method_normal;
init_method_kaiming_uniform;
init_method_const;
pad_seq_to_mult;
unpad_seq_to_mult;
all2all_hp2sp;
all_to_all;
ModelParallelConfig;
RowParallelLinear;
bfloat16;
ReturnResultAdapterStrategy;
_get_init_fn;
linear_in;
apply_swiglu_sharded_factory;
pretrain_recipe_performance;
finetune_recipe;
default_finetune_recipe;
bert_model;
bert_trainer;
fp16_mixed;
bert_embedding_model;
finetune_performance_optimizations;
default_finetune_trainer;
default_finetune_log;
nemo_resume;
PackedSequenceSpecs;
dora;
gemma2_model;
gemma2_trainer;
gemma3_trainer;
pytorch_adam_with_cosine_annealing;
tokenizer_recipe;
model_recipe;
pretrain_recipe_creater;
trainer_recipe;
bf16_with_fp8_mixed;
blended_dataset_config_recipe;
wandb_logger;
nemotron_model;
nemotron_trainer;
nemotron_h_bf16_with_fp8_current_scaling_mixed;
performance_optimizations;
qwen2_model;
qwen2_trainer;
qwen3_model;
qwen3_trainer;
starcoder2_model;
starcoder2_trainer;
starcoder_trainer;
straggler_det_callback;
get_global_step_from_global_checkpoint_path;
normpath;
te_adam_with_cosine_annealing;
pytorch_sgd_with_cosine_annealing;
pytorch_sgd_with_flat_lr;
fp16_with_fp8_mixed;
bf16_with_mxfp8_mixed;
fp16_with_mxfp8_mixed;
bf16_with_fp8_current_scaling_mixed;
fp16_with_fp8_current_scaling_mixed;
bf16_with_fp8_subchannel_scaling_mixed;
fp16_with_fp8_subchannel_scaling_mixed;
torchrun;
T5SFTDataset;
_process_src;
_process_tgt;
_MockT5Dataset;
t5_dataset_config;
T5MaskedWordPieceDatasetConfig;
t5_data_step;
t5_forward_step;
get_t5_encoder_with_transformer_engine_block_spec;
get_t5_decoder_with_transformer_engine_block_spec;
get_t5_encoder_with_local_block_spec;
get_t5_decoder_with_local_block_spec;
_import_encoder_qkv;
_import_decoder_qkv;
_import_decoder_kv;
_import_encoder_linear_fc1;
_import_decoder_linear_fc1;
_export_encoder_qkv;
_export_decoder_qkv;
_export_decoder_kv;
_export_encoder_linear_fc1;
_export_decoder_linear_fc1;
MCoreT5Model;
T5InferenceWrapper;
T5Model;
T5Config;
T5ForConditionalGeneration;
HFT5Config;
round_up_to_divisible;
generic_base_config;
generate_grid_search_configs;
_get_model_type;
_get_model_size;
_get_message;
_calculate_model_size;
calculate_model_size;
_estimate_model_size;
_estimate_training_time;
find_tb_logs;
get_config;
find_error;
scandir;
calculate_tflops;
_calculate_tp_pp_mbs_grid;
_set_activations_checkpoint_params;
modify_cfg;
search_class;
init_params;
ModelSizeParams;
get_preprocess_fns_params;
tuple_to_dict;
transform_fn;
img_transform;
build_train_valid_datasets;
WebDatasetCommon;
custom_collate;
build_imagenet_validation_dataloader_params;
MegatronPretrainingSampler;
ImagenetClassnameDataset;
template;
_convert_to_rgb;
AugmentationCfg;
Compose;
setdefault;
create_transform;
ResizeMaxSize;
Resize;
CenterCrop;
ToTensor;
RandomResizedCrop;
Value;
SharedEpoch;
set_value;
get_value;
get_collate_fn;
collate_fn_with_tokenize;
pil_loader;
_get_webdataset_and_epoch;
client;
detshuffle2;
pytorch_worker_info;
with_epoch;
select;
WDSUrlsRandomSampler;
WebDatasetS3;
WebDataset;
_shuffle;
gopen;
urlparse;
handler;
ConnectionError;
get_object;
url_opener;
tarfile_samples;
tar_file_expander;
group_by_keys;
cached_tarfile_to_samples;
MultiShardSample;
ResampledShards;
detshuffle;
construct_image_augmentations;
ControlNetSyntheticDataset;
build_train_valid_precached_datasets;
cache_latents;
RandomCrop;
get_image;
image_transforms;
MultiModalSampleConfig;
SequentialMegatronSampler;
MultiModalTaskEncoder;
io_init;
find_node_traverser;
track_io;
save_state_global;
get_expert_model_parallel_rank;
restore_state_global;
process_image;
compute_loss_mask;
apply_prompt_template;
compute_labels;
process_answer_str;
_find_pattern_indices;
VQASampleEncoder;
InterleavedSampleEncoder;
SimilarityInterleavedEncoder;
ImageTextSample;
PackedImageTextRawBatch;
batch_list;
batch_pad_stack;
ImageTextRawBatch;
encode_batch;
greedy_knapsack;
predict_seq_len;
convert_to_packed;
PackedImageTextSample;
_build_functions_with_pickles;
PickleTransform;
pickle_transform;
_build_functions_no_pickles;
ImagenSyntheticDataset;
ImagePyramidNoCorruptions;
obtain_image_pyramid;
build_resolution_filter;
_pad_and_resize;
RandomHorizontalFlip;
crop;
compute_projection_matrix;
compute_intrinsics;
tan;
deg2rad;
PinholeCamera;
circle_poses;
compute_look_at_vectors;
construct_poses;
get_view_direction;
get_rays;
inverse;
linear_normalization;
rand_poses;
radians;
sample_uniform_sphere;
sample_orbit;
rad2deg;
rand_like;
atan2;
update_step;
progressive_view_update_step;
generate_samples;
cross;
non_uniform_sampling;
get_prompt;
wrap_inst;
wrap_sys;
wrap_user;
wrap_assistant;
append_message;
get_images;
expand2square;
b64encode;
to_gradio_chatbot;
Conversation;
get_tokens_ids;
preprocess_multimodal;
preprocess_llama_3;
roll;
preprocess_llama_2;
preprocess_yi_34b;
preprocess_v1;
preprocess_interleaved_prompt;
preprocess_nvgpt;
preprocess_nv_dpo;
preprocess_plain;
preprocess_conversations;
NevaDataset;
open_image;
open_video;
VideoReader;
flatten_frames;
asnumpy;
TarOrFolderImageLoader;
TarOrFolderVideoLoader;
get_ltor_masks_and_position_ids;
encode_interleaved;
encode_pretrain;
encode_captioning;
encode_similarity_interleaved;
encode_sft;
process_images;
get_masks_and_position_ids;
ImageTaskSample;
calculate_token_length;
pad_images;
remove_excess_image_tokens;
ImageTaskBatch;
build_dataset;
DirectoryBasedDataset;
_get_files;
_transform;
SDSyntheticDataset;
build_train_valid_precached_clip_datasets;
build_sdxl_train_valid_datasets;
build_sdxl_precached_text_train_valid_datasets;
AddOriginalImageSizeAsTupleAndCropToSquare;
construct_clip_augmentations;
_convert_image_to_rgb;
gather_features;
neighbour_exchange;
P2POp;
batch_isend_irecv;
neighbour_exchange_bidir;
neighbour_exchange_with_grad;
neighbour_exchange_bidir_with_grad;
get_ground_truth;
get_logits;
logsigmoid;
divmod;
skip_fp8_load;
LocalNonpersistentObject;
backbone;
init_vision;
replace_media_embeddings;
_apply_reduce_scatter;
encode_vision_x;
get_adapter_module;
vision_connector;
add_lita_layer;
create_vision_encoder_and_processor;
load_llm_weights;
freeze_llm;
init_lita;
FrozenCLIPVisionTransformer;
load_vision_encoder_weights;
_load_model_weights;
dict_list_map_inplace;
load_nemo_model_weights;
pad_word_embeddings;
set_media;
init_neva_adapter;
_get_all_keys;
MultimodalProjectorAdapterConfig;
_check_and_add_adapter;
MCoreNevaModel;
NevaModel;
setup_optimizer_param_groups;
get_iterator_k_split;
fwd_bwd_function;
_make_data_iterator_list;
get_forward_output_only_func;
InferenceParams;
get_last_rank;
test_epoch_end;
_get_total_params_across_model_parallel_groups_gpt_bert;
_extract_consumed_samples_from_ckpt;
setup_transformer_engine_tp_groups;
build_train_valid_test_datasets_energon;
build_train_valid_test_datasets;
sync_initial_word_embeddings;
build_train_valid_test_datasets_blend;
get_datasets_weights_and_num_samples;
BlendableDataset;
NevaPackedSeqDatatset;
build_pretraining_data_loader;
DataCollatorForSupervisedDataset;
MegatronVisionPretrainingRandomSampler;
get_val_datasets;
LimitDataset;
TaskEncoder;
RepeatDataset;
restore_state_rank;
get_loader;
ShardedObject;
get_keys_to_keep;
critical;
on_save_checkpoint;
save_state_rank;
should_save_dataloader_state;
save_dataloader_state;
state_dict_for_save_checkpoint;
get_inference_config;
get_computeprob_response;
megatron_neva_generate;
get_default_sampling_params;
get_default_length_params;
fwd_output_only_func;
is_module_updatable;
NormalConsistencyLoss;
LaplacianSmoothLoss;
train_step;
normal_consistency_loss_fn;
laplacian_smooth_loss_fn;
square;
_shared_predict;
imwrite;
cvtColor;
mimwrite;
renderer;
ptp;
get_optimizer;
optimizer;
build_renderer;
build_guidance;
prepare_embeddings;
get_text_embeds;
time_embed;
middle_block;
get_input;
apply_model;
control_model;
get_unconditional_conditioning;
log_images;
log_txt_as_img;
sample_log;
_get_denoise_row_from_list;
q_sample;
low_vram_shift;
TimestepEmbedSequential;
make_zero_conv;
conv_nd;
ResBlock;
load_from_unet;
AttentionBlock;
SpatialTransformer;
middle_block_out;
zero_conv;
_validate_trainer;
get_module_list;
ControlLDM;
allreduce_sequence_parallel_gradients;
allreduce_main_grads;
allreduce_gradients;
_append_sequence_parallel_module_grads;
process_batch;
get_model_parallel_group;
log_local;
log_img;
check_frequency;
instantiate_text_encoder;
instantiate_vae;
instantiate_unet;
get_noise_scheduler;
noise_scheduler;
unet;
DiagonalGaussianDistribution;
DreamBooth;
DreamBoothDataset;
MegatronPretrainingRandomSampler;
apply_step;
register_schedule;
make_beta_schedule;
to_torch;
extract_into_tensor;
UNetModel;
ContinousDDPMPrecond;
DDPMSampler;
EfficientUNetModel;
EDMPrecond;
setup_rng;
set_rng;
timestamp;
get_text_encoder;
T5Encoder;
random_dropout;
compute_loss;
sample_image;
Imagen;
_finish_bucket_grad_sync;
_load_model;
set_inference_mode;
_load_customized_model;
setup_trainer_and_models_for_inference;
ImagenPipeline;
get_text_encodings;
forward_with_cond_scale;
GaussianDiffusionContinuousTimes;
sample_time;
sample_random_times;
get_xt;
get_condition;
init_from_ckpt;
get_first_stage_encoding;
LatentDiffusionEdit;
EditDataset;
_init_first_stage;
get_obj_from_str;
instantiate_from_config;
LitEma;
buffers;
differentiable_decode_first_stage;
shared_step;
on_train_start;
model_ema;
ema_scope;
copy_to;
instantiate_optimizer_from_config;
LambdaLR;
log_conditionings;
DiffusionEngine;
build_dataset_cls;
VectorQuantizer;
encode_to_prequant;
embed_code;
get_last_layer;
_validation_step;
Adam;
to_rgb;
_load_pretrained_model;
_state_key_mapping;
_find_mismatched_keys;
_load_state_dict_into_model;
_load_from_state_dict;
uniform_on_device;
DiffusionWrapper;
count_params;
q_mean_variance;
predict_start_from_noise;
predict_start_from_z_and_v;
predict_eps_from_z_and_v;
q_posterior;
p_mean_variance;
p_sample;
noise_like;
p_sample_loop;
get_v;
get_loss;
p_losses;
_get_rows_from_list;
intersect1d;
instantiate_first_stage;
instantiate_cond_stage;
make_cond_schedule;
cond_stage_model;
delta_border;
get_weighting;
get_fold_unfold;
Unfold;
Fold;
fold;
compute_latent_shifts;
_rescale_annotations;
rescale_bbox;
_crop_encoder;
_predict_eps_from_xstart;
_prior_bpd;
normal_kl;
mean_flat;
modify_score;
DeprecationWarning;
progressive_denoising;
callback;
img_callback;
ismap;
isimage;
LatentDiffusion;
get_pipeline_model_parallel_last_rank;
non_cuda_graph_capturable;
_modify_state_dict;
_get_config_and_state_dict_from_nemo;
make_schedule;
make_ddim_timesteps;
make_ddim_sampling_parameters;
sampling_fn;
dpm_sampling_fn;
para_ddim_sampling_fn;
p_sampling_fn;
single_ddim_denoise_step;
grad_p_sampling_fn;
_get_model_output;
_get_x_prev_and_pred_x0;
stochastic_encode;
p_sample_ddim;
get_model_input_time;
enable_grad;
classifier_fn;
noise_pred_fn;
cond_grad_fn;
marginal_std;
marginal_alpha;
atan;
marginal_log_mean_coeff;
interpolate_fn;
log_alpha_fn;
marginal_lambda;
inverse_lambda;
t_fn;
arccos;
model_fn;
noise_prediction_fn;
data_prediction_fn;
quantile;
get_time_steps;
denoise_to_zero_fn;
dpm_solver_first_update;
expm1;
multistep_dpm_solver_second_update;
multistep_dpm_solver_third_update;
multistep_dpm_solver_update;
append_zero;
append_dims;
get_sigmas_karras;
get_sigmas_exponential;
get_sigmas_polyexponential;
get_sigmas_vp;
to_d;
get_ancestral_step;
default_noise_sampler;
sample_euler;
trange;
noise_sampler;
sample_heun;
sample_dpm_2;
lerp;
sample_dpm_2_ancestral;
linear_multistep_coeff;
quad;
sample_lms;
log_likelihood;
odeint;
randint_like;
log_prob;
Normal;
sample_dpm_fast;
DPMSolver;
dpm_solver_fast;
sample_dpm_adaptive;
dpm_solver_adaptive;
sample_dpmpp_2s_ancestral;
sigma_fn;
sample_dpmpp_sde;
BrownianTreeNoiseSampler;
sample_dpmpp_2m;
BrownianTree;
tree;
BatchedBrownianTree;
ode_fn;
limiter;
propose_step;
eps;
eps_callback;
dpm_solver_1_step;
dpm_solver_2_step;
dpm_solver_3_step;
info_callback;
PIDStepSizeController;
t_to_sigma;
sigma_to_t;
frac;
get_eps;
get_scalings;
_get_x_prev;
prepare_tensor;
NoiseScheduleVP;
_load_concept_list;
CLIPVisionTransformer;
CLIPTextTransformer;
initialize_concept_embeddings;
mlp_similarity;
nn_classifier;
broadcast_tensors;
mlp_similarity_model;
build_model;
Float16Module;
ContentFilteringModel;
binary_cross_entropy_with_logits;
get_forward_embedding_func;
DistributedSampler;
VitBackbone;
scaled_init_method_normal;
head;
get_language_model;
initialize_word_embeddings;
build_attention_mask;
triu_;
language_model;
SiglipMHAPoolingHead;
final_layernorm;
vision_module;
text_module;
build_transformer_config;
mcore_supports_moe;
_wrap_model_for_O2;
build_model_context;
te_version;
CLIPModel;
get_params_for_weight_decay_optimization;
get_all_params_for_weight_decay_optimization;
setup_mcore_distributed_parallel;
DistributedDataParallelConfig;
McoreDDP;
get_expert_data_parallel_group;
reverse;
initialize_ub_func;
initialize_ub;
megatron_timer_start;
megatron_timer_stop;
_compute_consumed_samples_after_training_step;
allreduce_fsdp_sharding_omitted_gradients;
allreduce_first_last_embeddings;
max_memory_reserved;
drain_embedding_wgrad_compute;
send;
recv;
_flatten_dense_tensors;
_unflatten_dense_tensors;
SigLipLoss;
ClipLoss;
zero_shot_classifier;
zero_shot_eval;
build_model_parallel_config;
activation_to_func;
count_flops_attn;
DoubleTensor;
_softmax_backward_data;
count_flops;
nan_to_num_;
W;
check_cuda;
get_device_properties;
normalization;
upsample_fn;
emb_layers;
in_rest;
h_upd;
x_upd;
in_conv;
in_layers;
out_rest;
out_layers;
skip_connection;
out_norm;
shortcut;
EfficientResBlock;
attention_fn;
ConvTranspose2d;
QKVStableMaskedAttention;
QKVMaskedAttention;
kv_self;
norm_context;
kv_context;
norm_self;
flash_attn_varlen_kvpacked_func;
QKVStableAttention;
QKVAttention;
qkv;
flash_attn_varlen_func;
kv;
SelfAttentionBlock;
CrossAttentionBlock;
FeedForward;
self_attention_block;
cross_attention_block;
avg_pool_nd;
AvgPool2d;
AvgPool3d;
update_ema;
scale_module;
ConvTranspose3d;
op;
ConditionalSequential;
UnLearnedSinusoidalPosEmb;
SelfAttentionPooling;
text_to_cond;
to_text_non_attn_cond;
lowres_time_embed;
attention_pooling;
DBlock;
UBlock;
init_conv;
from_json_file;
d;
maybe;
wraps;
right_pad_dims_to;
beta_linear_log_snr;
alpha_cosine_log_snr;
log_snr_to_alpha_sigma;
inner;
get_times;
get_sampling_timesteps;
log_snr;
q_sample_from_to;
predict_start_from_v;
thresholding_x0;
thresholding_derivative;
forward_net;
Network;
exp2;
background_net;
get_encoder;
MLP;
_create_triangle_table;
_create_num_triangles_table;
_create_base_tet_edges;
_sort_edges;
build_layer;
block_builder;
skip;
forward_density_features;
normal_finite_differences;
forward_density;
forward_features;
sigma_net;
trunc_exp;
softplus;
density_blob;
features_net;
batch_process;
marching_cubes;
Trimesh;
remove_unreferenced_vertices;
remove_infinite_values;
remove_duplicate_faces;
sigma_tcnn;
features_tcnn;
sigma_mlp;
features_mlp;
_get_precision_type;
encode_imgs;
add_noise;
image_encoder;
set_beta_schedule;
load_vae_from_checkpoint;
set_engine;
clip_encode;
device_view;
LatentDiffusionWrapper;
laplacian_uniform;
compute_edge_to_face_mapping;
get_vertices_and_triangles;
dmtet;
namedtuple_map;
render_image_with_occgrid;
nerf;
sampling;
rendering;
density;
render_image_with_occgrid_test;
ray_aabb_intersect;
traverse_grids;
rgb_sigma_fn;
render_weight_from_density;
accumulate_along_rays_;
clamp_min;
OccGridEstimator;
update_every_n_steps;
_render;
Rays;
occ_eval_fn;
DeepMarchingTetrahedra;
register_parameter;
RasterizeCudaContext;
init_tet;
scatter_add_;
rasterize;
material;
background;
antialias;
packbits;
morton3D;
near_far_from_aabb;
march_rays_train;
composite_rays_train;
march_rays;
composite_rays;
flatten_rays;
custom_fwd;
DeviceView;
noise;
free;
engine_from_bytes;
bytes_from_path;
get_bindings_per_profile;
nptype;
binding_is_input;
get_binding_dtype;
get_active_profile_bindings;
FreqEncoder_torch;
FreqEncoder;
SHEncoder;
GridEncoder;
p_fn;
freq_encode_forward;
freq_encode_backward;
freq_encode;
grid_encode_forward;
grid_encode_backward;
grid_encode;
grad_total_variation;
grad_weight_decay;
sph_from_ray;
morton3D_invert;
composite_rays_train_forward;
composite_rays_train_backward;
sh_encode_forward;
sh_encode_backward;
sh_encode;
uniq;
isfunction;
max_neg_value;
rearrange_heads_outer;
rearrange_heads_inner;
LinearWrapper;
geglu;
LayerNormMLP;
get_adapter_cfg;
lora_linear_adapter;
LayerNormLinear;
FlashSelfAttention;
FlashCrossAttention;
DotProductAttention;
to_k;
to_v;
_attention;
norm_to_q;
to_q;
te_dpa;
flash_attn;
CrossAttention;
attn1;
attn2;
BasicTransformerBlock;
w;
weighting;
possibly_quantize_sigma;
possibly_quantize_c_noise;
network;
discretization_config;
sigma_to_idx;
idx_to_sigma;
generate_roughly_equally_spaced_steps;
scale_schedule;
dyn_thresh;
prepare_inputs;
conditioner;
sigma_sampler;
LatentRescaler;
rescaler;
instantiate_pretrained;
encode_with_pretrained;
proj_norm;
submodel;
downmodel;
convert_module_to_dtype;
convert_module_to_fp16;
convert_module_to_fp32;
convert_module_to_fp8;
te_Linear;
_set_module;
qkv_proj;
c_proj;
up;
QKVAttentionLegacy;
build_timestep_embedding;
convert_to_fp16;
te_fp8_key_mapping;
Timestep;
_input_blocks_mapping;
_mid_blocks_mapping;
_other_blocks_mapping;
_output_blocks_mapping;
_sdxl_embedding_mapping;
_legacy_unet_ckpt_mapping;
_strip_unet_key_prefix;
id_predictor;
label_emb;
AdaptiveAvgPool2d;
Flatten;
AttentionPool2d;
prepare_sampling_loop;
discretization;
guider;
get_sigma_gen;
sampler_step;
euler_step;
possible_correction_step;
get_gamma;
ancestral_euler_step;
ancestral_step;
get_variables;
to_neg_log_sigma;
get_mult;
to_sigma;
betas_for_alpha_bar;
alpha_bar;
get_idx;
run_function;
nll;
add_module;
LoraWrapper;
possibly_get_ucg_val;
embedding_context;
embedder;
expand_dims_like;
TransformerWrapper;
BERTTokenizer;
tknz_fn;
interpolator;
channel_mapper;
target_forward;
text_transformer_forward;
ln_final;
r;
build_tokenizer;
_vocab_size_with_padding;
word_embeddings;
timestep;
pick_and_pop;
group_dict_by_key;
cond;
string_begins_with;
group_by_key_prefix;
groupby_prefix_and_trim;
emb;
GRUCell;
gru;
reshape_as;
GLU;
attn_fn;
Intermediates;
rel_pos;
sinusoidal_emb;
always;
FixedPositionalEmbedding;
Attention;
branch_fn;
GRUGating;
Residual;
equals;
not_equals;
norm_fn;
Scale;
residual_fn;
LayerIntermediates;
AbsolutePositionalEmbedding;
token_emb;
pos_emb;
emb_dropout;
project_emb;
attn_layers;
to_logits;
get_geglu_ext;
geglu_fprop;
custom_op;
geglu_fprop_fake;
geglu_bprop;
geglu_bwd;
geglu_bprop_fake;
setup_context;
reduce_amax;
refit;
Refitter;
get_all_weights;
Weights;
set_named_weights;
refit_cuda_engine;
Profile;
network_from_onnx_path;
engine_from_network;
save_engine;
ModifyNetworkOutputs;
CreateConfig;
create_execution_context_without_device_memory;
set_tensor_address;
execute_async_v3;
CUASSERT;
cudaGraphLaunch;
cudaStreamSynchronize;
cudaStreamBeginCapture;
cudaStreamEndCapture;
cudaGraphInstantiate;
filter_func;
rescale_zero_terminal_snr;
_threshold_sample;
_get_variance;
randn_tensor;
get_velocity;
getattr_recursive;
setattr_recursive;
apply_with_stopping_condition;
stopping_condition;
apply_condition;
children;
apply_fn;
_inject_model_parallel_rank_for_ckpt;
model_provider;
schedule;
find_in_interval;
DPMSolverSampler;
ParaDDIMSampler;
pad_with_zeros;
DataParallelWrapper;
get_unique_embedder_keys_from_conditioner;
do_sample;
get_input_image_tensor;
do_img2img;
get_discretization_config;
get_guider_config;
EulerEDMSampler;
HeunEDMSampler;
EulerAncestralSampler;
DPMPP2SAncestralSampler;
DPMPP2MSampler;
LinearMultistepSampler;
image_to_image;
Img2ImgDiscretizationWrapper;
Draw;
reload;
_do_parallel_data_prefetch;
parallel_data_prefetch;
Queue;
proc;
terminate;
array_split;
_video_speech_collate_fn;
VideoSignal;
VSRManifestProcessor;
VideoFeaturizer;
ASRVideoText;
get_video_to_text_bpe_dataset_from_config;
get_video_to_text_char_dataset_from_config;
VideoToBPEDataset;
VideoToCharDataset;
TarredVideoToBPEDataset;
video_preprocessor;
video_augmentation;
video_front_end;
get_circle_indices;
BatchNorm3d;
MaxPool3d;
ResNet;
front_end;
VideoFrameMasking;
SpatialVideoMasking;
augment;
Permute;
ConvertImageDtype;
ResizeVideo;
NormalizeVideo;
Grayscale;
GlobalAvgPool2d;
ResNetBottleneckBlock;
ResNetBlock;
stem;
_pair;
joined_post_act;
layers;
residual;
maybe_cast_to_list;
_speechllm_audio_text_collate_fn;
build_loss_mask;
ceil_to_nearest;
_speechllm_multi_audio_text_collate_fn;
get_tarred_audio_text_dataset;
TarredAudioTextDataset;
get_concat_tarred_audio_text_dataset;
get_tarred_audio_text_dataset_from_config;
get_audio_text_dataset_from_config;
get_num_samples_from_files;
SpeechLLMAudioTextCollection;
build_speechllm_dataset;
PromptFormatterTextProcessing;
LhotseAudioQuestionAnswerDataset;
build_speechllm_dataloader;
MegatronPretrainingBatchSampler;
collate_vectors_lhotse;
collate_text_data;
get_max_len;
setup_perception_modules;
imported_cls;
MultiAudioPerceptionModule;
_concat_features;
_concat_multi_features;
inject_perception_input;
build_position_ids;
position_embeddings;
_shift_labels_by_emb_len;
_get_text_embeddings;
prepare_llm_input;
_gpt_forward;
get_micro_batch_size;
_build_dataset;
build_data_loader;
_modify_audio_encoder_config;
get_pretraind_audio_model;
get_speaker_model_and_config;
get_audio_encoder_models_and_configs;
load_pretrained_audio_weights;
_build_vocab;
get_peft_state_dict;
union;
reconfigure_num_microbatches_calculator;
setup_metric;
metric_cls;
inference_step;
_reconfigure_and_process_inference_batch;
inference_epoch_end;
_restore_activation_checkpointing_args;
_determine_log_key;
write_predictions_to_file;
metric_fn;
corpus_bleu;
setup_eval_dataloader;
setup_predict_dataloader;
maybe_build_test;
maybe_setup_test;
configure_sharded_model;
find_frozen_submodules;
_setup_model;
perception_cross_attn;
load_frozen_model;
init_model;
_concat_embs;
enc_dec_model;
load_audio_model;
setup_training_dataloader;
_metrics_require_string2category_map;
get_current_global_batch_size;
_validation_step_internal;
ConcatPooling;
MultiFeatureAggregator;
maybe_preprocess_audio;
modality_adapter;
_have_same_length;
align_feat_seq_list;
torch;
forward_speaker;
xattn_decoder;
output_proj;
input_proj1;
input_proj2;
switch;
model_inference_strategy_dispatcher;
CrossAttendAudioToTextGenerationStrategy;
AudioToTextGenerationStrategy;
init_batch;
shift_tokens_by_multi_audios;
clip_max_len;
prepare_batch_at_step;
end_of_generation_condition;
send_generate_info;
get_model_parallel_src_rank;
frombuffer;
receive_generate_info;
synced_generate;
sample_sequence_batch;
get_embedding_group;
post_generation_process;
tokenize_batch;
bytearray;
byte;
post_process;
ByteTensor;
repetition_penalty;
top_k_logits;
replace_prefix;
get_text_processor_from_cfg;
TextProcessing;
_find_substring_indices;
prompt_format_fn;
smart_resize;
make_builder;
text_tokenizer;
_load_tiktoken_bpe;
__getstate__;
__setstate__;
_add_tokens;
_convert_id_to_token;
_convert_token_to_id;
_check_files_exist;
_get_examples;
_get_sample;
get_samples_mapping;
TextMemMapDataset;
_get_indexed_dataset;
get_indexed_dataset_;
normalize_chinese_answer;
separate_char;
normalize_answer;
get_label_stats;
get_multi_label_stats;
partition_data;
write_files;
write_data;
write_vocab;
get_dataset;
get_data;
partition;
map_entities;
get_entities;
reverse_dict;
get_intent_labels;
get_stats;
median;
is_whitespace;
get_labels_to_labels_id_mapping;
remove_punctuation_from_sentence;
dataset_to_ids;
get_envint;
get_freq_weights;
get_freq_weights_bce_with_logits_loss;
fill_class_weights;
find_newlines;
load_data_indices;
rfind;
get_train_examples;
get_dev_examples;
get_labels;
deprecated_warning;
get_dialog_examples;
convert_slot_position_to_slot_ids;
truncate_and_pad;
get_lm_samples;
preprocess_feature;
get_n_tokens_in_sentence;
default_encode;
linearize_slots;
format_target;
format_prompt;
remove_invalid_samples;
find_max_n_candidates;
_create_examples;
format_actions;
load_features;
process_features;
save_features;
bert_process_one_sample;
_naive_tokenize;
SGDInputExample;
get_service_schema;
make_copy;
add_utterance_features;
add_intents;
add_requested_slots;
add_categorical_slots;
_find_subword_indices;
add_noncategorical_slots;
get_categorical_slot_values;
make_copy_of_non_categorical_features;
make_copy_of_categorical_features;
CategoricalValuesType;
convert_examples_to_features;
InputExample;
_truncate_seq_pair;
InputFeatures;
open_file;
map_bio_format_slots_to_unified_slots;
normalize_zero_shot_intent;
get_continuous_slots;
DialogueInputExample;
get_test_examples;
get_relevant_idxs;
open_csv;
open_json;
Schema;
get_dialogue_files;
load_dialogues;
save_dialog_examples;
_generate_dialog_examples;
getsize;
_create_examples_from_dialog;
_create_examples_from_turn;
_get_state_update;
convert_camelcase_to_lower;
preprocess_intent;
get_service_id;
truncate_seq_pair;
readable_summary;
get_intent_from_id;
get_categorical_slot_value_from_id;
get_non_categorical_slot_from_id;
get_categorical_slot_from_id;
get_categorical_slot_value_id;
get_service_set;
get_in_domain_services;
get_dataset_as_dict;
get_active_intent_accuracy;
get_slot_tagging_f1;
get_requested_slots_f1;
get_average_and_joint_goal_accuracy;
set_cat_slot;
set_noncat_slot;
get_predicted_dialog;
get_predicted_intent;
get_requested_slot;
state_slots;
ServiceSchema;
save_to_file;
get_examples;
label2string;
get_t5_prompted_query;
make_history_mask_3d;
convert_xnli_examples_to_features;
JSONLMemMapDataset;
parse_npz;
savez;
parse_pkl;
preprocess_line;
construct_input;
preprocess_bert;
_psgid2tokens;
preprocess_dpr;
psgid2tokens_npz;
parse_query_to_passages;
_preprocess_fn;
label2idx;
intent_slot_dicts;
load_h5;
randrange;
get_document;
match_target_seq_length;
mask_ids;
BertPretrainingPreprocessedDataset;
pack_data_into_batches;
pad_batches;
_build_index_from_memdata;
_lightning_prepare_data;
create_masked_lm_predictions;
pad_and_convert_to_numpy;
get_train_valid_test_split_;
find_subsequence_location;
_insert_virtual_token_placeholders;
_truncate_input;
_add_leading_space;
_input_sanity_checks;
pad_taskname_ids;
build_training_sample;
truncate_segments;
create_tokens_and_tokentypes;
get_a_and_b_segments;
build_blending_indices;
compile_helper;
create_data_mmap;
get_ds_sample_idx;
test_index_blending;
ion;
MemoryEfficientBlendableDataset;
DS;
is_start_piece;
MaskedLmInstance;
geometric;
_truncate_to_nearest;
create_extreme_masked_lm_predictions;
T5Dataset;
BertDataset;
T5LMAdaptedDataset;
BARTDataset;
UL2Dataset;
get_doc_idx;
set_doc_idx;
MockT5Dataset;
_build_train_valid_test_datasets;
print_split_stats;
make_indexed_dataset;
make_indexed_dataset_compatibility;
deallocate_indexed_dataset_memory;
_get_padding_indices;
get_start_end_idx;
GPTDataset;
MockGPTDataset;
_create_ltor_masks_and_position_ids;
_build_index_mappings;
_num_tokens;
_num_epochs;
broadcast_object_list;
_build_doc_idx;
build_sample_idx;
_build_shuffle_idx;
_build_sample_idx;
_query_document_sample_shuffle_indices;
argwhere;
nditer;
_fim_split_and_permute_sequence;
_fim_permute_sequence;
_permute;
_insert_text_in_template;
_find_answer_start;
pad_batch_and_build_loss_mask;
inference_collate_fn;
get_prompt_template_example;
identify_start_index_of_subsequence;
response_value_formater;
OnlineSampleMapping;
infer_dataset_impl;
index_file_path;
MMapIndexedDatasetBuilder;
MMapRetrievalIndexedDatasetBuilder;
__best_fitting_dtype;
make_dataset;
CSVMemMapDataset;
IndexedCachedDataset;
MMapIndexedDataset;
MMapRetrievalIndexedDataset;
dataset_exists;
read_longs;
readinto;
write_longs;
code;
create_doc_idx;
_warmup_mmap_file;
read_data;
data_file_path;
check_index;
indices;
accumulate;
prefetch;
copyto;
merge_file_;
_do_init;
Index;
_create_data_mmap;
memoryview;
copyfileobj;
writer;
_Writer;
_get_pointers;
tell;
_dtype;
merge_knn_files;
KNNIndex;
get_KNN_chunk_ids;
get_chunk_id;
from_chunk_id_to_doc_id;
get_chunk_address;
_get_chunk_id_and_address;
get_prefix_lm_sample;
update_global_batch_size;
global_batch_size;
mask_prompt;
gpt_train_valid_test_datasets_provider;
get_retro_datasets;
RETRODataset;
MultiSplitGPTDatasetConfig;
is_dataset_built_on_rank;
build_mock_train_valid_test_datasets;
MockRETRODataset;
_validate_pad_id;
_get_chunks;
_determine_tokenizer_type;
_build;
convert_data_file_format;
get_r_masking_training_sample;
_prepend_mask_type_token;
get_s_masking_training_sample;
get_x_masking_training_sample;
build_extreme_masking_training_sample;
build_training_sample_bert;
get_example;
create_sample;
clean_src_and_target;
get_enc_dec_tokenizers;
train_tokenizers;
preprocess_parallel_dataset;
tar_files_to_string;
get_monolingual_tokenizer;
_get_lines_partition;
_get_num_lines;
_process_fragment;
write_parallel_batches_to_tarfiles;
preprocess_monolingual_dataset;
write_monolingual_batches_to_tarfiles;
TranslationDataset;
SentenceDataset;
_set_cached_features_filename;
load_features_from_cache;
_convert_examples_to_features;
BERTQAInputExample;
dump_features_to_cache;
get_doc_tokens_and_offset_from_context_id;
get_docspans;
keep_relevant_docspans;
check_if_sufficient_memory;
improve_answer_span;
check_is_max_context;
virtual_memory;
get_best_span_index;
_DocSpan;
get_average_dist_to_tok_start_and_end;
split_into_words;
GPTQAInputExample;
_prep_query;
_prep_answer;
_prep_context;
_encode_all_context_spans;
_get_truncated_sentence_and_len;
update_labels_for_no_pad_loss;
S2SQAInputExample;
_encode_answer;
_check_is_max_context;
SquadProcessor;
_improve_answer_span;
get_predictions;
get_best_indexes;
_PrelimPrediction;
get_final_text;
_NbestPrediction;
get_raw_scores;
apply_no_ans_threshold;
make_eval_dict;
merge_eval;
find_all_best_thresh;
exact_match_score;
check_chinese_char;
BasicTokenizer;
_strip_spaces;
_find_best_thresh;
SquadExample;
build_bert_example;
_get_input_features;
_map_characters_to_subwords;
BertExample;
_get_fragment_indices;
_get_spans;
_split_to_wordpieces;
_split_to_wordpieces_with_labels;
read_input_file;
collate_train_dataset;
collate_test_dataset;
IntType;
replace_diacritics;
load_ngram_mappings;
load_ngram_mappings_for_dp;
get_alignment_by_dp;
DpInfo;
load_index;
search_in_index;
get_all_candidates_coverage;
get_candidates;
read_spellmapper_predictions;
substitute_replacements_in_text;
apply_replacements_to_text;
check_banned_replacements;
update_manifest_with_spellmapper_corrections;
extract_and_split_text_from_manifest;
convert_label_ids;
StringType;
StringLabel;
calc_class_weights;
list2str;
__process_raw_entries;
__tokenize_samples;
DecoderDataInstance;
encode_tags;
TaggerDataInstance;
word_ids;
is_same;
normalize_str;
remove_puncts;
compute_sent_accuracy;
compute_class_accuracy;
input_preprocessing;
yield_sources_and_targets;
pad_to_max_length;
get_token_labels;
EditingTask;
_truncate_list;
_compute_tags;
Tag;
is_begin;
is_end;
get_token_list;
realize_output;
read_label_map;
read_semiotic_classes;
split_text_by_isalpha;
isalpha;
is_sorted;
legacy_data_config_to_new_data_config;
_check_number_of_labels;
_show_prog;
_get_features;
Progress;
finish;
get_queues;
starmap;
TokenizeCreateMasksClipWorker;
create_masks_and_segment_ids;
not_equal;
create_label_ids;
load_label_ids;
save_label_ids;
raise_not_equal_labels_error;
Manager;
Process;
_maybe_clip;
_check_constructor_parameters;
_get_path_to_pkl_features;
_read_dataset;
mkstemp;
_check_label_ids_loaded_from_pkl;
_calculate_and_save_label_frequencies;
_pack_into_batches;
_form_batches;
_check_label_ids_vs_unique_labels;
fdopen;
calc_batch_seq_length;
_adjust_number_of_batches;
_mark_up_batches;
repack_batches_with_shuffle;
save_labels_and_get_file_paths;
get_features_infer;
_check_max_seq_length_and_margin_and_step;
_get_subtokens_and_subtokens_mask;
count_lines_and_get_fragment_starting_positions;
get_fragment_start_bytes;
process_fragment;
TarWriter;
BertPunctuationCapitalizationDataset;
remove_unexpected_files_and_dirs;
collect_unique_labels_from_fragment;
create_label_dictionaries;
check_label_ids;
process_error;
error_class_or_function;
get_label_dictionaries;
decode_pyd;
repack_tar_files_with_not_enough_batches;
handle_extension;
create_metadata_file;
_check_pad_label;
check_for_label_consistency_with_model_config;
remove_punctuation;
create_text_and_labels;
get_label_ids;
calc_class_weights_from_dataloader;
tensor2list;
ZeroShotIntentProcessor;
_helper;
_cross_entropy_bin;
_cross_entropy;
true_divide;
save_predictions;
_get_one_f1;
get_f1;
get_bleu;
split_label_and_slots;
get_slot_filling_metrics;
get_score;
corpus_score;
RougeScorer;
_get_normalized_tokens;
get_one_f1;
get_one_exact_match;
convert_dict_outputs_to_lists;
get_exact_match_and_f1;
merge_eval_dicts;
dump_predicted_answers_to_file;
dump_nbest_predictions_to_file;
compute_f1;
F1Scores;
fuzzy_string_match;
token_sort_ratio;
noncat_slot_value_match;
compare_slot_values;
get_megatron_pretrained_bert_models;
get_lm_model;
register_bert_model;
to_json_file;
_register_vocab_from_tokenizer;
is_model_parallel_initialized;
ClassificationReport;
resize_token_embeddings;
MegatronGPTPromptLearningModel;
get_binary_score_labels;
eval_step_helper;
eval_epoch_end;
classification_report;
get_prompt_token_labels_for_megatron_gpt;
get_virtual_prompt_ids_for_megatron_gpt;
unreduced_loss_fct;
mask_and_reduce_loss;
mask_and_reduce_loss_per_sample;
binary_score_candidates;
process_into_structured_fields;
rank_candidates;
generate_candidates;
megatron_gpt_generate;
batch_decode;
process_ground_truth_field;
DialogueSGDDataProcessor;
DialogueAssistantDataProcessor;
DialogueDesignDataProcessor;
init_prompt_encoder;
update_data_dirs;
DialogueGPTClassificationDataset;
init_new_prompts;
prepare_megatron_generation;
post_process_megatron_generation;
complete;
DialogueMSMarcoDataProcessor;
DialogueMellonQADataProcessor;
DialogueGPTGenerationDataset;
DialogueNearestNeighbourDataset;
mean_pooling;
DialogueS2SGenerationDataset;
DialogueZeroShotIntentDataset;
nli_model;
create_loss_module;
_setup_infer_dataloader;
ZeroShotIntentInferenceDataset;
_reconfigure_classifier;
_set_defaults_data_desc;
_set_data_desc_to_cfg;
IntentSlotDataDesc;
_save_label_ids;
SequenceTokenClassifier;
AggregatorLoss;
update_data_dir_for_training;
intent_loss;
slot_loss;
total_loss;
get_utterance_tokens;
get_unified_metrics;
convert_intent_ids_to_intent_names;
mask_unused_subword_slots;
DialogueBERTDataset;
DialogueIntentSlotInferenceDataset;
SGDEncoder;
SGDDecoder;
SGDDialogueStateLoss;
fmod;
get_device;
multi_eval_epoch_end_helper;
get_str_example_id;
combine_predictions_in_example;
get_seen_services;
DialogueSGDBERTDataset;
format_turn_id;
NormalizerWithAudio;
_generate_predictions;
get_formatted_string;
TarredTextNormalizationDecoderDataset;
DataCollatorForSeq2Seq;
decode_tag_preds;
BatchEncoding;
_postprocess_tag_preds;
has_numbers;
TextNormalizationTaggerDataset;
DataCollatorForTokenClassification;
average;
MultiSimilarityLoss;
EntityLinkingDataset;
_is_model_being_restored;
SequenceRegression;
SequenceClassifier;
compute_metrics;
GLUEDataset;
acc_and_f1;
mcc;
matthews_corrcoef;
pearson_and_spearman;
pearsonr;
spearmanr;
get_lm_model_with_padded_embedding;
calculate_mean_reciprocal_rank;
compute_scores_and_loss;
BertInformationRetrievalDataset;
q_encoder;
p_encoder;
get_config_dict;
sim_score_regressor;
listify;
MCoreBertEmbeddingModel;
NeMoBertEmbeddingModel;
sync_embeddings;
build_LDDL_data;
get_seqlen;
gather_and_maybe_write_predictions;
write_embeddings_to_file;
inference_loss_func;
_gather_global_inbatch_representations;
GPTEmbeddingDataset;
training_step_fwd_bwd_step_call;
inference_step_validation_call;
local_validation_step;
constrastive_scores;
GPTRerankerDataset;
IntentSlotClassificationDataset;
IntentSlotInferenceDataset;
MultiLabelIntentSlotDataDesc;
MultiLabelClassificationReport;
MultiLabelIntentSlotClassificationDataset;
prediction_probabilities;
precision_score;
recall_score;
BertPretrainingTokenClassifier;
Perplexity;
mlm_classifier;
nsp_classifier;
_compute_losses;
nsp_loss;
agg_loss;
_parse_forward_outputs;
validation_perplexity;
_setup_preprocessed_dataloader;
_setup_dataloader;
BertPretrainingPreprocessedDataloader;
BertPretrainingDataset;
_validate_cfg;
_build_train_valid_test_datasets_kwargs;
_enable_nvidia_optimizations;
_validate_and_override_config;
Timers;
_build_tokenizer;
setup_transformer_engine_cp_groups;
Float16Wrapper;
extract_module;
fullmatch;
is_official_release_version;
_jit_set_profiling_executor;
_jit_set_profiling_mode;
_jit_override_can_fuse_on_cpu;
_jit_override_can_fuse_on_gpu;
_jit_set_texpr_fuser_enabled;
_jit_set_nvfuser_enabled;
_debug_set_autodiff_subgraph_inlining;
transformer_config_cls;
get_parameters_with_grad;
configure_gradient_clipping;
clip_grad_norm_distributed_optimizer;
clip_grad_norm_fp32;
reduce_overlap_gradients;
try_grad_sync;
sync_overlap_parameters;
_try_start_bucket_param_sync;
get_all_timers_string;
_optim_config_copy;
get_config_arg;
str_to_dtype;
_get_max_steps;
MainParamsOptimizerWrapper;
prepare_lr_scheduler;
init_params_bucket;
init_param_buffer;
is_data_parallel_rank_zero;
word_embeddings_weight;
_get_total_params_across_model_parallel_groups_enc_dec;
is_pipeline_stage_before_split;
is_pipeline_stage_after_split;
is_pipeline_stage_at_split;
encoder_relative_position_embeddings_weight;
decoder_relative_position_embeddings_weight;
position_embeddings_weight;
_val_iterator_done;
megatron_timers;
optimizer_step;
get_pseudo_tokens;
VirtualPromptStyle;
load_task_templates;
first_stage_of_pipeline;
AccuracyScore;
BLEUScore;
ROUGEScores;
PromptEncoderType;
PromptEncoder;
freeze_existing_word_embeddings;
embed_input;
prompt_encoder;
build_virtual_prompt_dataset;
_reconfigure_batch_sizes;
NeMoBertModel;
CachingIterator;
make_proxy;
get_nowait;
Proxy;
get_bert_pretrain_data_loader;
get_bert_module_list;
average_pool;
TextToTextXNLIDataset;
TextToTextGLUEDataset;
ParallelLinearAdapterConfig;
LinearAdapterConfig;
MLPInfusedAdapterConfig;
InfusedAdapterConfig;
get_falcon_layer_spec;
get_gemma2_layer_spec;
get_gpt_layer_with_te_and_hyena_spec;
drop_layers;
mcore_model_customize;
noop_forward_patch;
filterwarnings;
GPTModel;
is_float8tensor;
make_parameter_bucket;
memory_allocated;
zero_grad_buffer;
thd_get_partitioned_indices;
is_te_min_version;
PkgVersion;
GPTFIMDatasetConfig;
data_sampler;
initialize_last_rank_embeddings;
mgpt_wrapper;
MegatronGPTExportableModel;
_reset_activation_checkpointing_args;
_reset_sequence_parallelism_args;
_restore_sequence_parallelism_args;
GPTPromptLearningDataset;
dataset_cls;
finish_param_sync;
cast_for_metric;
GriffinModel;
is_rank_in_embedding_group;
is_rank_in_position_embedding_group;
get_pipeline_model_parallel_split_rank;
is_rank_in_encoder_relative_position_embedding_group;
is_rank_in_decoder_relative_position_embedding_group;
decoder_cross_attention_relative_position_embeddings_weight;
_handle_bias_activation_fusion_args;
_populate_encoder_decoder_configs_for_backward_compatibility;
MegatronTokenLevelEncoderDecoderModule;
_execute_fwd_bwd_function;
allreduce_word_and_position_embeddings;
max_decoder_seq_length;
get_position_embedding_group;
get_encoder_relative_position_embedding_group;
get_decoder_relative_position_embedding_group;
_process_batch;
_kwargs_to_arg_idx;
getfullargspec;
_build_forward_args_from_kwargs;
_get_forward_output_only_func;
_test_validation_step;
_test_validation_epoch_end;
process_micro_batch;
_process_global_batch_without_megatron_batch_sampler;
sync_initial_position_embeddings;
sync_initial_encoder_relative_position_embeddings;
sync_initial_decoder_relative_position_embeddings;
sync_initial_decoder_cross_attention_relative_position_embeddings;
get_t5_module_list;
fwd_bwd_func;
get_sampling_token_fn;
sample_token_fn;
compute_beam_search_len_penalty;
index_fill;
id_func;
set_base_shapes;
MegatronRetrievalTokenLevelEncoderDecoderModule;
build_all_datasets;
RetroQAFineTuneDataset;
load_retro_config;
get_retro_config_path;
SimpleNamespace;
get_retro_data_dir;
build_retro_config;
MCoreRetroModel;
get_retro_decoder_block_spec;
T0Dataset;
compute_accuracy;
_get_component_cfg;
_add_adapters_to_component;
_get_adapter_cfg;
LoraKQVAdapterConfig;
LoraKVAdapterConfig;
LoraQAdapterConfig;
_component_state_dict;
_load_component_state_dict;
add_special_tokens_to_tokenizer;
_add_sentinel_tokens;
_add_base_special_tokens;
T5PromptLearningDataset;
on_predict_epoch_end;
ExactStringPerCategoryMatchMetric;
metric_class;
setup_eval_data;
_build_train_dataset;
SequenceToSequenceDataset;
_build_eval_dataset;
get_transformer;
SequencePerplexity;
eval_step;
eval_ppl;
RandomSampler;
SequentialSampler;
get_num_layers_to_build;
TransformerBlockSubmodules;
AutocastTransformerLayer;
get_virtual_pipeline_model_parallel_rank;
post_language_model_processing;
parallel_lm_logits;
vocab_parallel_cross_entropy;
bert_extended_attention_mask;
set_tensor_model_parallel_attributes;
get_linear_layer;
get_layer_norm;
BertLMHead;
post_self_attn_layernorm;
get_griffin_layers;
create_block;
GriffinStack;
allocate_inference_cache;
griffin_position_ids;
embedding_forward;
_embedding_decode_;
recurrent_layer;
recurrent_bda;
_scan_preprocess_;
rnn_scan;
scan;
rnn_param_init;
_fused_permute_add_;
_fused_permute_mult_;
w_init_;
_fused_pre_reshape_;
_post_add_reshape_sigmoid_;
BlockDiagonalLinear;
a_param_init;
_fused_pst_gates_;
input_gate;
a_gate;
bias_gelu_impl;
conv_1d;
rg_lru;
_determine_multilingual_training_type;
_setup_multilingual_special_tokens;
setup_enc_dec_tokenizers;
setup_multilingual_ids_and_processors;
setup_pre_and_post_processing_utils;
process_global_batch_for_text_translation_datasets;
postprocess_outputs;
_setup_eval_dataloader_from_config;
_log_multilingual_bleu_and_loss;
_setup_megatron_dataloader_from_config;
_setup_eval_dataset_from_config;
build_memmap_dataset_from_config;
_instantiate_memmap_dataset;
BinarizedMemmapSequenceToSequenceDataset;
BinarizedMemmapCrossLingualMLMAndTranslationDataset;
TextMemmapSequenceToSequenceDataset;
TextMemmapCrossLingualMLMAndTranslationDataset;
NamedTimer;
itn_translate_tn;
GlobalBatchDataFetcher;
EncEmb;
DecEmb;
TokensHeadEmb;
build_linear_or_identity;
encode_latent;
hidden2latent_mean;
hidden2latent_logv;
recon_loss_fn;
latent2hidden;
test_encoder_ids;
test_decoder_ids;
_validate_encoder_decoder_hidden_size;
log_param_stats;
add_histogram;
add_scalars;
_setup_dataset_from_config;
ByteLevelProcessor;
EnJaProcessor;
JaMecabProcessor;
ChineseProcessor;
IndicProcessor;
filter_predicted_ids;
setup_inference_data;
_get_per_sample_perplexity;
SpanningLoss;
_get_best_indexes;
_get_final_text;
QAProcessor;
BERTQADataset;
_generate_candidates;
_inference;
GPTQADataset;
_asdict;
_prep_inference_labels;
_get_answers_from_generated_tokens;
SquadDataset;
S2SQADataset;
_aget_query_embedding;
_get_query_embedding;
_aget_text_embedding;
_get_text_embedding;
_construct_forward_input;
metadata;
LLMMetadata;
llm_completion_callback;
CompletionResponse;
stream_complete;
BertExampleBuilder;
logits;
tag_classification_report;
take_along_dim;
TarredSpellcheckingAsrCustomizationDataset;
SpellcheckingAsrCustomizationDataset;
SpellcheckingAsrCustomizationTestDataset;
from_encoder_decoder_pretrained;
setup_dataloader_from_config;
Text2SparqlDataset;
TextClassificationDataset;
semiotic_logits;
tag_multiword_classification_report;
semiotic_classification_report;
ThutmoseTaggerDataset;
ThutmoseTaggerTestDataset;
legacy_model_config_to_new_model_config;
PunctuationCapitalizationModelConfig;
CommonDatasetParametersConfig;
HeadConfig;
_make_step;
loss_punct;
loss_capit;
audio_proj;
fusion;
punct_classifier;
capit_classifier;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs;
_move_acc_probs_to_token_preds;
_get_labels;
_apply_punct_capit_predictions;
_update_accumulated_probabilities;
is_legacy_model_config;
_set_label_ids;
_multi_eval_epoch_end;
_check_label_config_parameters;
_get_eval_metrics_kwargs;
_setup_metrics_dictionary;
_extract_label_vocab_files_from_config;
BertPunctuationCapitalizationTarredDataset;
BertPunctuationCapitalizationInferDataset;
_remove_margins;
BertTokenClassificationDataset;
BertTokenClassificationInferDataset;
plot_confusion_matrix;
get_classification_report;
ZeroShotIntentDataset;
restore_weights;
Markdown;
_process_chat_messages;
get_mimetype;
postprocess;
style;
pad_batch;
get_pretrained_lm_models_list;
get_huggingface_pretrained_lm_models_list;
get_huggingface_lm_model;
get_huggingface_transformer;
check_gradio_import;
create_gen_function;
text_generation;
get_demo;
set_event_loop;
Blocks;
Row;
Column;
Number;
Textbox;
Checkbox;
Dropdown;
Slider;
change;
Button;
click;
queue;
get_chatbot_demo;
then;
Accordion;
CheckboxGroup;
Chatbot;
get_value_str;
get_generation;
get_retro_generation;
update_weight;
convert_retrieved_to_md;
request_data;
add_doc;
reset_index;
run_demo;
Label;
set_sampling;
on_submit;
user;
bot;
clear_fun;
change_visibility;
clear_prompt_embedding_weights;
set_prompt_embedding_weights;
prompt_embeddings;
PromptEmbedding;
set_prompt_table;
get_prompt_table;
clear_prompt_table;
first;
fused_bias_gelu;
second;
InferenceTable;
TPMLP;
set_inference_table;
clear_inference_table;
get_inference_table;
mlp_head;
lstm_head;
tpmlp;
FileStore;
ComboRetrievalService;
update_neighbors;
neighbors;
tokenize_batch_with_context_and_completion;
_store_retrieved;
get_knn;
intent_mlp;
slot_mlp;
send_do_generate;
convert_messages;
completion;
jsonify;
uuid4;
chat_completion;
get_json;
Flask;
Api;
add_resource;
neva_process_prompts;
GriffinModelTextGenerationStrategy;
GPTModelTextGenerationStrategy;
NevaModelTextGenerationStrategy;
PromptLearningModelTextGenerationStrategy;
RetroModelTextGenerationStrategy;
McoreRetroModelTextGenerationStrategy;
RetroQAModelTextGenerationStrategy;
RetroFileQAModelTextGenerationStrategy;
get_prefix_tokens;
_get_end_of_generation_tokens_and_strings;
Warning;
tokenize_neighbors_batch;
decode_time_tokens;
encode_time_str;
time_to_string;
tab_logits;
tab_sample_sequence_batch;
get_range;
sample_token_greedy;
sample_token_topk;
sample_token_topk_beam_search;
repl;
get_tokenizer_list;
get_megatron_tokenizer;
get_megatron_vocab_file;
get_megatron_merges_file;
TiktokenTokenizer;
WordTokenizer;
CharTokenizer;
RegExTokenizer;
ByteLevelTokenizer;
TabularTokenizer;
NullTokenizer;
config_class;
fftconv_fwd;
fftconv_bwd;
auto_assign_attrs;
FlashFFTConv;
_safari_fft;
safari_fftconv_fn;
_flash_fft;
flashfftconv;
fftconv_fn;
HyenaOperatorSubmodules;
SingleHeadHyenaConv;
MultiHeadHyenaConv;
in_proj;
conv_fwd_fn;
short_filter;
conv_single_head;
long_conv;
conv_multi_head;
FlashFFTConvImpl;
HyenaFilterSubmodules;
modulation;
get_hyena_layer_with_transformer_engine_spec;
safe_divide;
CoreAttention;
_allocate_memory;
_transpose_last_dim;
query_key_value;
split_tensor_along_last_dim;
_cast_if_autocast_enabled;
flash_attn_with_kvcache;
key_value;
lora_dense_adapter;
lora_kqv_adapter;
lora_q_adapter;
lora_kv_adapter;
key_infused_adapter;
value_infused_adapter;
ParallelAttention;
MatchedScaleMaskSoftmax;
XPOSPositionEmbedding;
xpos;
torch_attention_with_prior;
torch_attention;
flash_attention;
flash_attention_triton;
flash_attention_cuda;
flash_attn_func;
unpad_input;
flash_attn_unpadded_func;
flash_attn_func_triton;
set_defaults_if_not_set_tensor_model_parallel_attributes;
_calc_number_of_params;
DistributedDataParallel;
param_is_not_shared;
param_is_not_tensor_parallel_duplicate;
multi_tensor_applier;
count_zeros_fp32;
grad_norm;
clip_grad_norm;
dropout_add;
bias_dropout_add;
bias_dropout_add_fused_train_;
bias_dropout_add_fused_train;
bias_dropout_add_fused_inference_;
bias_dropout_add_fused_inference;
bias_geglu;
bias_gelu;
bias_geglu_back;
bias_gelu_back;
fused_bias_geglu;
symbolic;
FastLayerNorm;
MixedFusedLayerNorm;
forward_torch_softmax;
mask_func;
build_relative_position;
build_slopes;
TransformerLanguageModel;
VocabParallelEmbedding;
zero_parameters;
add_tokentype_embeddings;
embedding_dropout;
tokentype_embeddings;
ParallelTransformer;
ALiBiRelativePositionEmbedding;
KERPLERelativePositionEmbedding;
SandwichRelativePositionEmbedding;
get_position_embedding_on_this_context_parallel_rank;
encoder_relative_position_embedding;
ptuning_adapter;
_fast_layer_norm;
get_decoder_model;
MegatronTransformerDecoderModule;
MegatronRetrievalTransformerDecoderModule;
get_encoder_model;
MegatronTransformerEncoderModule;
MultiMegatronTransformerEncoderModule;
MegatronRetrievalTransformerEncoderModule;
MegatronPerceiverEncoderModule;
get_hiddens_mask;
apply_hidden_transforms;
decoder_embedding;
rpe;
encoder_embedding;
set_tensor_model_parallel_world_size;
set_tensor_model_parallel_rank;
set_expert_model_parallel_world_size;
set_expert_model_parallel_rank;
set_pipeline_model_parallel_world_size;
set_pipeline_model_parallel_split_rank;
set_pipeline_model_parallel_rank;
initialize_rng_tracker;
_set_random_seed;
set_logging_level;
init_num_microbatches_calculator;
model_parallel_cuda_manual_seed;
set_jit_fusion_options;
RankGenerator;
generator_wrapper;
get_ranks;
cycle;
MixedFusedRMSNorm;
_build_cross_attn_layer;
_build_self_attn_layer;
attn_mask_postprocess;
build_attention_mask_3d;
get_megatron_lm_models_list;
get_megatron_config;
_check_megatron_name;
_download;
get_megatron_checkpoint;
is_lower_cased_megatron;
LayerNorm1P;
dense_h_to_4h;
dense_4h_to_h;
infused_adapter;
lora_dense_h_to_4h_adapter;
dense_h_to_4h_2;
lora_dense_4h_to_h_adapter;
activation_func;
ParallelMLP;
router;
expert;
route_algo;
sinkhorn;
conversion_helper;
conversion;
fp32_to_float16;
float16_converter;
float16_to_fp32;
half_conversion;
float_conversion;
MuReadout;
pre_decoder;
post_decoder;
tokens_head;
encoder_embeddingload_state_dict;
_calculate_dec_att_mask;
get_hiddens_module;
MegatronTransformerEncoderDecoderModule;
T5RelativePositionEmbedding;
MegatronTokenLevelHead;
_validate_enc_dec_hidden_size;
_validate_perceiver_config;
_validate_kv_channels;
decoder_relative_position_embedding;
decoder_cross_attention_relative_position_embedding;
apply_loss_transforms;
get_decoder_embeddings;
forward_sum_loss;
isfinite;
get_bias_dropout_add;
get_dropout_add;
remove_bias_from_layernorm;
_bias_dropout_add;
_dropout_add;
SwitchMLP;
ParallelChunkedCrossAttention;
LPLayerNorm;
_get_bias_droput_add_func;
bias_dropout_add_func;
post_inter_attention_layernorm;
post_attention_layernorm;
post_attention_normformer_norm;
inter_attention;
post_inter_attention_normformer_norm;
adapter_2;
adapter_1;
get_num_layers;
LayerType;
ParallelTransformerLayer;
ApproxGELUActivation;
linear_with_grad_accumulation_and_async_allreduce;
copy_to_tensor_model_parallel_region;
attention_mask_func;
erf_gelu;
erf;
enc_dec_extended_attention_mask;
make_inference_attention_mask_3d;
make_attention_mask_3d;
make_inference_history_mask_3d;
build_attention_mask_3d_padding;
build_attention_mask_3d_causal;
listify_model;
is_expert;
get_autocast_cpu_dtype;
swap_mcore_mixin;
mcore_register_adapters;
mlp_head_adapter;
lora_unfused_kqv_adapter;
lora_linear_proj_adapter;
linear_fc1;
linear_fc2;
lora_adapter;
lora_fc2_adapter;
lora_moe_fc1_adapter;
bias_geglu_impl;
bias_swiglu_impl;
lora_moe_fc2_adapter;
gate_adapter;
up_adapter;
q_adapter;
k_adapter;
v_adapter;
inner_forward;
tie_weights;
set_position;
flat_square;
DownSampleBlock;
mm_projector;
nf4_quantize;
NF4Weight;
qlora_load_model;
replace_linear;
get_target_modules;
NF4LinearWrapper;
NF4LayerNormLinearWrapper;
_make_subclass;
_nf4_quantizer;
dequantize;
_parse_to;
_create_layer_norm_fn;
safe_import_from;
layer_norm_fn;
get_registered_hiddens;
register_hidden_loss;
register_hidden_transform;
MegatronHiddensModule;
isdisjoint;
hidden_outputs;
loss_inputs;
_validate_inputs;
input_names;
_input_names;
hiddens_to_mean_logvar;
zip_infshape;
InfShape;
InfDim;
width_mult;
fanin_fanout;
fanin_fanout_mult_ratio;
ninf;
deserialize;
from_base_shape;
constant_std_init_;
sampler_;
_no_grad_uniform_;
_no_grad_normal_;
_no_grad_fill_;
_inf_fan_adjust_xavier;
_calculate_fan_in_and_fan_out;
_inf_fan_adjust_kaiming;
calculate_gain;
trunc_normal_;
_no_grad_trunc_normal_;
rescale_linear_bias;
process_param_groups;
MuAdam;
impl;
new_group;
MuAdamW;
MuSGD;
get_shapes;
get_infshapes;
save_base_shapes;
base_shape;
load_base_shapes;
_dataparallel_hack;
_extract_shapes;
_zip_infshape_dict;
zip_infshapes;
clear_dims;
apply_infshapes;
assert_hidden_size_inf;
_rescale_parameters;
get_slopes_power_of_2;
_rotate_half;
_relative_position_bucket;
_compute_relative_position_bucket;
_compute_relative_position_bias;
relative_position_embedding;
fixed_pos_embedding;
rotate_every_two;
duplicate_interleave;
start_sentence_bert_server;
SentenceBertServer;
get_sentence_embedding_dimension;
get_emb;
encode_multi_process;
SentenceTransformer;
start_multi_process_pool;
add_docs_to_index;
FaissRetrievalService;
DynamicFaissRetrievalService;
DType;
ChunkStore;
GpuMultipleClonerOptions;
json;
gather_grad_values;
gather_reset_training_mode_values;
reset_grad_values;
HuggingFaceEncoderModule;
HuggingFaceDecoderModule;
get_megatron_transformer;
utterance_proj;
layer1;
projection_module;
_get_intents;
_get_requested_slots;
_get_categorical_slot_goals;
_get_noncategorical_slot_goals;
intent_layer;
requested_slots_layer;
slot_status_layer;
cat_slot_value_layer;
noncat_layer1;
noncat_activation;
noncat_layer2;
_get_negative_logits;
dropout1;
dropout2;
_grad_scaler;
AsyncFinalizableCheckpointIO;
FSDPMixedPrecisionPlugin;
_callbacks;
AsyncFinalizerCallback;
FLOPsMeasurementCallback;
init_model_parallel;
_get_sharded_state_dict_context;
ShardedStateDictConfig;
ShardedOptimStateDictConfig;
state_dict_type;
_get_full_state_dict_context;
FullOptimStateDictConfig;
FullStateDictConfig;
model_to_device;
setup_precision_plugin;
setup_distributed;
total_seconds;
configure_ddp;
register_comm_hook;
optimizer_sharded_state_dict;
init_optimizer_states;
get_param_id_to_sharded_param_map;
optim_state_to_sharding_state;
make_sharded_optimizer_tensor;
get_safe;
ckpt_to_dir;
save_sharded_modelopt_state;
_fix_tensors_device;
dict_list_map_outplace;
_check_param_groups_mismatch;
load_common_state_dict;
_get_param_group;
_fix_param_groups;
get_filesystem;
monotonic;
restore_sharded_modelopt_state;
_integrate_original_checkpoint_data;
CheckpointingException;
dump_checkpoint;
remove_checkpoint;
use_distributed_checkpointing;
TorchCheckpointIO;
distributed_sampler_kwargs;
unwrapped_checkpoint_io;
_set_mixed_precision_recipe;
MixedPrecision;
lightning_module_state_dict;
state_dict_context;
optimizer_state;
optim_state_dict;
load_optimizer_state_dict;
_get_osd;
optim_state_dict_to_load;
_optimizer_to_device;
shard_full_optim_state_dict;
summon_full_params;
rekey_optim_state_dict;
load_with_process_group;
_save_state_dict_to_disk;
_handle_artifacts;
_update_artifact_paths;
modify_state_dict;
should_process;
load_config_and_state_dict;
load_instance_with_state_dict;
_filtered_tar_info;
set_autocast_gpu_dtype;
_lazy_init_scale_growth_tracker;
_unscale_grads_;
unscale_grads;
_maybe_opt_step;
_check_scale_growth_tracker;
update_scale_hysteresis;
_amp_update_scale_;
get_scale;
_get_growth_tracker;
copy_model_grads_to_main_grads;
unscale_;
_after_closure;
_fetch_next_batch;
on_fetch_start;
on_fetch_end;
init_train_tqdm;
get_current_epoch_step;
_should_update;
_update_n;
set_postfix;
_fix_device;
_calculate_kv_channels;
MLPHeadAdapterConfig;
_create_lora_config;
adapter_cfg_cls;
PromptEncoderAdapterConfig;
ParallelLinearAdapterWeightTyingConfig;
_plot_confusion_matrix;
confusion_matrix;
matshow;
set_yticks;
set_xticklabels;
set_yticklabels;
colorbar;
is_last_rank;
_check_and_add_peft_cfg;
set_tunable_base_params;
_unwrap_model;
_unwrap_model_list;
_unwrap_layers_model_list;
_get_layers_from_model;
filter_state_dict;
data_cfg;
get_text_processor;
MultimodalConversationTextProcessor;
SpeechLMDataSampler;
MultimodalConversationDataset;
_parse_lhotse_data_name;
_create_nemo_dataloader;
_create_lhotse_dataloader;
predict_dataloader;
transform_dataloader;
process_sample;
TextProcessorOutput;
text_processor;
collate_audio_data;
_get_metadata;
_process_cut;
_process_multimodal_conversation;
_convert_cut_sample;
pad_or_trim_to_max_length;
estimate_encoded_max_length;
_set_model_guid;
freeze_module;
unfreeze_module;
setup_multi_validation_data;
setup_multi_test_data;
register_model_guid;
recursively_propagate_guid;
validation_step_outputs;
test_step_outputs;
get_validation_dataloader_prefix;
get_test_dataloader_prefix;
MaskedTokenLossReductionWithLossMask;
MixedPrecisionPolicy;
parallelize_fn;
fsdp2_strategy_parallelize;
speech_to_text_llm_data_step;
speech_to_text_llm_forward_step;
_freeze_module;
_maybe_load_pretrained_llm;
check_is_distributed_checkpoint;
llm_model_cls;
_maybe_load_asr_and_modality_adapter;
load_distributed_ckpt;
_propagate_model_configs;
MCoreSpeechToTextLLM;
get_nested_attr;
_get_llm_input_for_context_parallel;
speech_model;
freeze_speech;
freeze_modality_adapter;
unfreeze_llm;
unfreeze_speech;
unfreeze_modality_adapter;
trainable_parameters;
clean_end_string;
get_inference_strategy;
text_generation_strategy;
configure_nemo_asr_model;
to_dict_config;
configure_hf_auto_model;
HFWrappedPreprocessor;
HFWrappedEncoder;
MCoreASRModule;
MCoreModalityAdapterModule;
dump_config;
build_components;
set_typecheck_enabled;
SpeechToTextLLMConfig;
SpeechToTextLLM;
AudioToTextDataModule;
get_object_list_from_config;
PipelineComponents;
prepare_pretrained_llm_dist_ckpt;
TimingCallback;
SpeechToTextLLMPEFT;
ASRModuleConfig;
ModalityAdapterConfig;
PreemptionCallback;
speech_to_text_llm_generate;
importer;
on_import_ckpt;
FileSystemReader;
read_metadata;
get_wrappped_io;
_transform_module;
freeze_model;
set_params_to_save;
_load_checkpoint;
_maybe_get_adapter_path;
AdapterPath;
get_trainer_ckpt_path;
get_weights_path;
_find_trainer_ckpt_path;
SpeechToTextGenerationStrategy;
_get_dp_rank;
_get_world_size;
_build_test_dataloader;
CombinedLoader;
get_coordinate;
collate_token_channel;
get_pad_id;
build_token_channel;
compute_num_frames;
_strip_timestamps;
transform_text;
replace_control_speech_codes;
tokens_to_str;
setup_audio_codec;
maybe_install_lora;
setup_speech_encoder;
load_pretrained_hf;
text_pad_id;
llm;
audio_head;
embed_tokens;
fp32_precision;
is_frozen;
loss_parallel;
ASRBLEU;
offline_inference;
_get_bos_embedding;
DynamicCache;
parallelize_module;
fully_shard;
PrepareModuleInput;
SequenceParallel;
ColwiseParallel;
RowwiseParallel;
Replicate;
Shard;
TransformerARSpeechDecoder;
speech_generation;
reset_input_and_kv_cache;
replace_placeholders_and_build_targets;
audio_locator_tag_id;
move_embedding;
Transformer;
final_proj;
all_logits_to_each_codebooks_logits;
input_proj;
embed_audio_tokens;
t5_decoder;
sample_codes_from_logits;
_init_cache;
reset_cache;
_from_pretrained;
cached_file;
cudaProfilerStart;
cudart;
emit_nvtx;
cudaProfilerStop;
freeze_and_subset;
_exclude;
_must_keep;
get_default_dtype;
load_pretrained_nemo;
sentence_bleu;
filter_files;
get_base_dir;
text_normalizer_call;
add_log_mel;
add_durations;
add_align_prior_matrix;
BetaBinomialInterpolator;
add_pitch;
note_to_hz;
add_voiced_mask;
add_p_voiced;
add_energy;
add_reference_audio;
get_spec;
get_log_mel;
pitch_shift;
_pad_wav_to_multiple;
pyin;
get_reference_for_sample;
relative_to;
__setitem__;
beta_binomial_interpolator;
beta_binomial_prior_distribution;
join_data;
general_collate_fn;
_albert;
add_lm_tokens;
_get_wav_from_filepath;
get_ssl_features;
get_pitch_contour;
get_mel_spectrogram;
pad_collate_fn;
_create_buckets;
_bisect;
DatasetMeta;
_preprocess_manifest;
get_sampler;
get_weighted_sampler;
filter_dataset_by_duration;
DatasetSample;
samples_to_frames;
stack_tensors;
get_num_audio_samples_to_slice;
_read_audio;
text_conditioning_tokenizer;
audio_collate_fn;
preprocess_manifest;
sample_audio;
FilteredIterator;
get_full_list_puncts;
_get_default_text_tokenizer_conf;
EnglishIpaG2pConfig;
EnglishIpaTextTokenizer;
EnglishIpaTextTokenizerConfig;
G2PConfig;
TextTokenizer;
TextTokenizerConfig;
pad_text_to_speech_dims;
english_g2p;
spanish_g2p;
mandarin_g2p;
german_g2p;
_insert_data_in_template;
list_to_tensor;
_truncate_input_speech;
_get_element_len;
_get_text_tokens;
_get_phoneme_tokens;
_load_audio;
convert_audio;
get_codec;
get_quantizer_codebook;
_get_speech_tokens;
get_position_ids;
get_mask_from_lengths;
InstructionTuningAudioText;
InstructionTuningManifestProcessor;
read_wordids;
get_wordid_to_phonemes;
get_heteronym_spans;
set_grapheme_case;
tokenizer_graphemes;
_prepare_sample;
setup_heteronym_model;
set_wordid_to_phonemes;
setup_grapheme_tokenizer;
CTCG2PBPEDataset;
TokenIndex;
_parse_as_cmu_dict;
_parse_file_by_lines;
is_unique_in_phoneme_dict;
parse_one_word;
apply_to_oov_word;
make_step;
_process_sentence;
_disambiguate;
HeteronymClassificationDataset;
_parse_phoneme_dict;
_normalize_dict;
replace_dict;
_prepend_prefix_for_one_word;
_parse_ja_phoneme_dict;
Tokenizer;
word_segmenter;
T5G2PDataset;
_parse_as_pinyin_dict;
pkuseg;
_lazy_pinyin;
LogSoftmax;
MaskedMAELoss;
MaskedMSELoss;
FilterbankFeatures;
mel_feature;
l1_loss_fn;
l2_loss_fn;
_compute_spectrogram;
STFTLoss;
TokenLogDurationType;
TokenDurationType;
mask_from_lens;
compute_flow_loss;
compute_regression_loss;
ForwardSumLoss;
AttributePredictionLoss;
attn_ctc_loss;
torch_grad;
l1_loss;
SpectralConvergenceLoss;
LogSTFTMagnitudeLoss;
spectral_convergence_loss;
log_stft_magnitude_loss;
NormalDistributionSamplesType;
_setup_normalizer;
BinLoss;
g2p_backward_compatible_support;
alignment_encoder;
_metrics;
binarize_attention;
bin_loss;
plot_alignment_to_numpy;
fliplr;
rot90;
_loader;
MultiResolutionMelLoss;
MultiResolutionSTFTLoss;
TimeDomainLoss;
SISDRLoss;
GaussianDropout;
RelativeFeatureMatchingLoss;
ResNetSpeakerEncoder;
FeatureMatchingLoss;
get_speaker_embedding;
speaker_encoder;
encode_audio;
audio_encoder;
decode_audio;
audio_decoder;
encoder_noise;
vector_quantizer;
should_update_disc;
mel_loss_fn;
manual_backward;
update_lr;
disc_loss_fn;
stft_loss_fn;
time_domain_loss_fn;
si_sdr_loss_fn;
gen_loss_fn;
feature_loss_fn;
phoneme_asr_model;
_setup_train_dataloader;
_setup_test_dataloader;
max_steps;
compute_max_steps;
get_num_workers;
get_batch_size;
lr_schedulers;
LoggingCallback;
__subclasses__;
nemo_infer;
temp_mode;
check_children_attributes;
yet_another_patch;
complex;
update_bias_spect;
MelLoss;
PitchLoss;
DurationLoss;
EnergyLoss;
FastPitchModule;
tb_logger;
fastpitch;
duration_loss_fn;
pitch_loss_fn;
energy_loss_fn;
forward_sum_loss_fn;
add_image;
bin_loss_fn;
plot_spectrogram_to_numpy;
sample_tts_input;
batch_from_ragged;
interpolate_speaker;
speaker_emb;
FastPitchSSLModule;
vocode_spectrogram;
compute_encoding;
content_projection_layer;
speaker_projection_layer;
dataset_embedding_layer;
mel_loss;
duration_loss;
pitch_loss;
plot_multipitch_to_numpy;
generate_wav;
average_features;
MultiPeriodDiscriminator;
MultiScaleDiscriminator;
DiscriminatorLoss;
GeneratorLoss;
get_warmup_steps;
trg_melspec_fn;
mpd;
discriminator_loss;
msd;
feature_loss;
generator_loss;
audio_to_melspec_precessor;
_bias_denoise;
setup_tokenizers;
AggregatedTTSTokenizer;
worker_init_fn;
_setup_tokenizers;
audio_to_codes;
codes_to_audio;
get_speaker_embeddings;
logits_to_audio_codes;
log_attention_probs;
log_train_val_example;
scale_prior;
compute_alignment_loss;
alignment_loss;
prepare_context_tensors;
text_embedding;
context_text_embedding;
context_encoder;
prepare_dummy_cond_for_cfg;
infer_batch;
transcribe_with_whisper;
get_decoder_prompt_ids;
whisper_processor;
get_speaker_embeddings_from_filepaths;
_get_batch_logps;
preference_loss;
process_batch_dpo;
_get_lm_embeddings;
_get_lm_padding_value;
_get_lm_model_tokenizer;
run_aligner;
symbol_emb;
binarize_attention_parallel;
duration_predictor;
pitch_predictor;
regulate_len;
lm_embeddings;
self_attention_module;
pitch_emb;
plot_pitch_to_numpy;
RADTTSLoss;
AttentionBinarizationLoss;
batch_dict;
criterion;
attention_kl_loss;
RAdam;
remove_norms;
HingeLoss;
ConsistencyLoss;
GradientPenaltyLoss;
move_to_correct_device;
to_device_recursive;
normalize_spectrograms;
unnormalize_spectrograms;
generate_zs;
generate_noise;
pad_spectrograms;
forward_with_custom_noise;
style_mapping;
consistency_loss;
gradient_penalty_loss;
log_illustration;
log_image;
EnglishCharsTokenizer;
AngularSoftmaxLoss;
GreedyCTCDecoder;
TTSDataset;
WarmupPolicy;
preprocessor_disentangler;
sv_linear;
content_linear;
sv_loss;
Tacotron2Loss;
SequenceToSequenceAlignmentType;
postnet;
tacotron2_log_to_tb_func;
tacotron2_log_to_wandb_func;
convert_mel_spectrogram_to_linear;
tensordot;
griffin_lim;
MultiResolutionDiscriminator;
mrd;
mrstft_loss;
KlLoss;
ExponentialLR;
CosineAnnealing;
audio_to_melspec_processor;
slice_segments;
clip_grad_value_;
net_g;
net_d;
feat_matching_loss;
gen_loss;
kl_loss;
DistributedBucketSampler;
convert_text_to_waveform;
WaveGlowLoss;
waveglow;
remove_weightnorm;
waveglow_log_to_tb_func;
LogDeterminantType;
build_virtual_prompt_tarred_dataset;
_reconfigure_microbatch_calculator;
SentencePieceSpeechLLMTTSTokenizer;
MegatronTokenLevelEncoderDecoderSpeechLLMModule;
decode_wav_from_codec_model;
get_embeddings_and_combine;
MegatronT5OverrideModel;
convert_tokens_to_range;
add_text;
plot_alignment_to_numpy_for_speechllm;
T5SpeechLMDataset;
T5SpeechLMTarredDataset;
wavlm_sv_extractor;
plot_codec_to_numpy;
wavlm_sv_model;
squim_mos_model;
ConditionalInput;
ConvNorm;
_apply_mask;
query_proj;
key_proj;
dist_fn;
get_euclidean_dist;
get_cosine_dist;
get_mean_dist_by_durations;
cond_input;
get_attribute_prediction_model;
DAP;
projection_fn;
BottleneckLayerLayer;
FFTransformer;
ConvLSTMLinear;
bottleneck_layer;
feat_pred_fn;
get_padding_2d;
get_padding;
zero_mean_unit_var_norm;
var;
load_fsspec;
ssl_model;
SSLModel;
norm_f;
pre;
conv_post;
slm_model;
avg_pool;
SELayer;
se;
create_layer;
_init_layers;
get_torch_mel_spectrogram_class;
new_parameter;
layer2;
layer3;
layer4;
torch_spec;
instancenorm;
PreEmphasis;
ELU;
HalfSnake;
_get_extra_padding_for_conv1d;
_pad1d;
get_up_sample_padding;
Conv2dNorm;
PeriodDiscriminator;
DiscriminatorSTFT;
compute_stft;
disc;
MultiBandDiscriminatorSTFT;
codebook_size;
codes;
compress;
inputs_to_codes;
codes_to_nonnegative;
nonnegative_to_codes;
FiniteScalarQuantizer;
fsq_group;
CodecActivation;
Conv1dNorm;
CausalConv1dNorm;
input_activation;
input_conv;
skip_activation;
skip_conv;
ResidualBlock;
res_block;
HiFiGANResBlock;
HiFiGANResLayer;
pre_conv;
post_activation;
post_conv;
down_sample_conv;
get_down_sample_padding;
CausalConvTranspose1dNorm;
ClampActivation;
out_activation;
up_sample_conv;
ConvTranspose1dNorm;
AudioToMelSpectrogramPreprocessor;
mel_processor;
validate_mel_bands;
ResNetEncoder;
fused_add_tanh_sigmoid_multiply;
get_radtts_encoder;
LinearNorm;
lstm_norm_fn_pntr;
lstm_sorted;
bilstm;
sort_tensor;
unsort_tensor;
lstm_nocast;
is_tracing;
BiLSTM;
qr;
lu_unpack;
det;
lu;
logdet;
last_layer;
Softplus;
non_linearity;
SimpleConvNet;
param_predictor;
spline_fn;
inv_spline_fn;
WN;
get_scaling_and_logs;
affine_param_predictor;
Invertible1x1ConvLUS;
_ema_inplace;
_laplace_smoothing;
_compute_distances;
_sample_vectors;
_k_means;
_mask_3d;
pre_activation;
res_conv1;
res_conv2;
SEANetRNN;
SEANetResnetBlock;
_init_codes;
_expire_codes;
_update_codes;
one_hot;
_quantize;
_dequantize;
EuclideanCodebook;
codebook;
commit_loss_fn;
ResidualVectorQuantizer;
num_codebooks_per_group;
codebook_dim_per_group;
rvq_group;
log_to_duration;
ConditionalLayerNorm;
ConvReLUNorm;
word_emb;
energy_emb;
energy_predictor;
c1;
c2;
c;
resblock;
conv_pre;
upsample_layer;
DiscriminatorP;
DiscriminatorS;
create_channel_mix_layer;
SameLensMaskedLinear;
create_time_mix_layer;
SameLensMaskedConv1d;
first_mix_layer;
drop_1;
second_mix_layer;
drop_2;
PreNormResidual;
Mix;
time_mix;
channel_mix;
MixerTTSBlock;
to_embed;
PositionalEmbedding;
text_pos_emb;
lm_pos_emb;
value_proj;
pad_dur;
pad_energy_avg_and_f0;
adjust_f0;
AffineTransformationLayer;
Invertible1x1Conv;
affine_tfn;
invtbl_conv;
ConvAttention;
FlowStep;
ExponentialClass;
encode_speaker;
speaker_embedding;
encode_text;
preprocess_context;
context_lstm;
unfold_mod;
mas_width1;
get_first_order_features;
apply_voice_mask_to_text;
unvoiced_bias_module;
dur_pred_layer;
f0_pred_module;
energy_pred_module;
flow_step;
v_pred_module;
transpose_;
infer_f0;
infer_energy;
remove_spectral_norm;
filter2d;
EqualLinear;
Conv2DModulated;
Blur;
to_style;
_get_same_padding;
RGBBlock;
to_style1;
to_style2;
to_noise1;
to_noise2;
conv_res;
StyleMapping;
GeneratorBlock;
add_scaled_condition;
upsample_factor;
initial_conv;
DiscriminatorBlock;
final_conv;
to_logit;
check_support_condition_types;
masked_instance_norm;
_conv_forward;
conv_fn;
location_conv;
location_dense;
LocationLayer;
get_alignment_energies;
query_layer;
location_layer;
Variable;
cond_layer;
init_parameters;
cond_weight;
cond_bias;
concat_proj;
add_proj;
mha;
calculate_post_conv_lengths;
Conv2DReLUNorm;
lengths_to_masks;
StyleAttention;
reference_encoder;
style_attention;
overwrite_precomputed_emb;
lookup_module;
gst_module;
Prenet;
LSTMCell;
train_forward;
get_go_frame;
initialize_decoder_states;
memory_layer;
parse_decoder_inputs;
parse_decoder_outputs;
attention_rnn;
decoder_rnn;
linear_projection;
gate_layer;
prenet;
CoreNet;
dropatt;
o_net;
qkv_net;
MultiHeadAttn;
PositionwiseConvFF;
dec_attn;
pos_ff;
TransformerLayer;
ConvolutionLayer;
attn_naive;
compute_qkv_and_mask;
q_net;
kv_net;
SelfAttention;
norm_xattn_query;
norm_pos_ff;
norm_xattn_memory;
_init_weights_gpt2;
_get_layer_inputs;
dropout_out;
kernel_conv;
bias_conv;
residual_conv;
KernelPredictor;
convt_pre;
kernel_predictor;
location_variable_convolution;
LVCBlock;
DiscriminatorR;
relu_drop;
DDSConv;
convs;
piecewise_rational_quadratic_transform;
Log;
ElementwiseAffine;
ConvFlow;
Flip;
post_pre;
post_convs;
log_flow;
post_proj;
conv_1;
norm_1;
conv_2;
norm_2;
AttentionEncoder;
ResidualCouplingLayer;
TextEncoder;
PosteriorEncoder;
ResidualCouplingBlock;
StochasticDurationPredictor;
DurationPredictor;
enc_p;
enc_q;
rand_slice_segments;
dec;
dp;
emb_g;
maximum_path;
generate_path;
voice_conversion;
FFN;
conv_q;
conv_k;
conv_v;
conv_o;
_get_relative_embeddings;
_matmul_with_relative_keys;
_relative_position_to_absolute_position;
_absolute_position_to_relative_position;
_matmul_with_relative_values;
_attention_bias_proximal;
convert_pad_shape;
padding;
_causal_padding;
_same_padding;
WaveNet;
norm_dist_to_audio;
audio_to_normal_dist;
split_view;
maximum_path_c;
maximum_path_each;
prange;
adapter_module_names;
get_start_and_end_of_speech_frames;
pad_sample_indices;
trim_audio;
_signal_to_frame_nonsilent;
frames_to_samples;
normalize_volume;
_detect_speech;
frame;
_scale_sample_indices;
_get_feature_filepath;
get_audio_filepaths;
_features_exists;
_save_feature;
_load_feature;
_get_frame_indices;
time_to_frames;
_collate_feature;
compute_mel_spec;
compute_energy;
compute_pitch;
_clamp_guard;
guard_fn;
_load_vocoder;
create_id;
_log_image;
create_plot;
_log_artifacts;
generate_artifacts;
AudioArtifact;
_generate_audio;
_generate_images;
ImageArtifact;
_create_ground_truth_artifacts;
_generate_gta_predictions;
_is_distributed;
_is_complex_or_float;
mas;
b_mas;
magphase;
log_audio_to_tb;
plot_gate_outputs_to_numpy;
imshow;
save_figure_to_numpy;
subplots;
hlines;
get_xticks;
get_yticks;
heatmap;
buffer_rgba;
index_put_;
clamp_max;
deprecated;
rank_zero_only;
wrapped_fn;
piecewise_linear_transform;
third_dimension_softmax;
AvertedCUDARuntimeError;
piecewise_linear_inverse_transform;
unbounded_piecewise_quadratic_transform;
piecewise_quadratic_transform;
weighted_softmax;
unconstrained_rational_quadratic_spline;
rational_quadratic_spline;
get_abs_rel_paths;
logbeta;
gammaln;
logcombinations;
logbetabinom;
common_path;
WeightedRandomSampler;
print_exc;
_segment_audio;
zoom;
bank;
SubPolicy;
composite;
rotate_with_fill;
enhance;
posterize;
solarize;
autocontrast;
equalize;
Color;
Contrast;
Sharpness;
Brightness;
operation1;
operation2;
set_epoch;
has_file_allowed_extension;
is_image_file;
is_valid_file;
accimage_loader;
default_loader;
get_image_backend;
_find_classes;
target_transform;
loader;
_to_torch_data_type;
RandomSeedDataset;
InpaintingTransform;
DinoTransform;
GaussianBlur;
ColorJitter;
ImageNetPolicy;
gen_mask;
RandomApply;
RandomGrayscale;
Solarization;
global_transform1;
global_transform2;
local_transform;
VitMlpHead;
VitClassificationModel;
floor_;
DropPath;
LayerScale;
drop_path;
post_mlp_layerscale;
post_attention_layerscale;
ParallelVisionTransformerLayer;
isPerfectSquare;
twod_interpolate_position_embeddings_hook;
ParallelVisionTransformer;
DropPatch;
_register_load_state_dict_pre_hook;
interpolate_pos_encoding;
drop_patch;
preprocess_layernorm;
get_layer_spec;
get_mlp_module_spec;
get_layer_spec_te;
get_norm_mlp_module_spec_te;
cook_raw_iamges;
ToPILImage;
_MockClipDataset;
clip_forward_step;
clip_data_step;
CLIPViTModel;
CLIPTextModel;
MCoreClipModel;
vision_model;
text_model;
ClipMegatronLoss;
import_qkv;
_import_vision_qkv;
_import_vision_qkv_bias;
_import_language_qkv_bias;
_import_language_qkv;
_import_cls_token;
CLIPTextModelConfig;
CLIPViTConfig;
CLIPConfig;
dir;
DataBatch;
generic_batch;
encode_vqa_sample;
DataSample;
search_for_fit;
bisect;
predict_seq_len_with_padding;
prepare_image_inputs;
moveaxis;
Gemma3ImageProcessor;
_Qwen2VLMockDataset;
gemma3vl_data_step;
gemma3vl_forward_step;
MCoreGemma3VLModel;
restore_model_weights;
_preprocess_data;
_process_sequence_parallel;
vision_projection;
_compute_attention_mask;
masked_scatter;
rank;
_vision_projector_permute;
_export_language_qkv;
export_qkv;
_export_vision_qkv;
_export_vision_qkv_bias;
export_qkv_bias;
Gemma3VLModel;
Gemma3VLVisionConfig;
Gemma3VLMultimodalProjectorConfig;
Gemma3VLConfig;
HFGemma3VisionConfig;
HFGemma3Config;
Gemma3VLMultimodalProjector;
mm_soft_embed_norm;
mk_hf_vlm_dataset_fineweb_edu;
mk_hf_vlm_dataset_rdr;
json2token;
mk_hf_vlm_dataset_cord_v2;
train_collate_fn;
fmt;
get_data_sampler;
configure_processor;
setup_inference_wrapper;
wrapper_cls;
MLlamaConfig11BInstruct;
MLlamaModel;
VLMTextGenerationController;
VLMEngine;
prep_inference_input;
forward_pass_without_pipeline_parallel;
create_vision_mask_tensor;
run_engine;
tokenize_prompt;
add_request;
MockLlama4Dataset;
hf_processor;
llama4_data_step;
llama4_forward_step;
Llama4OmniBaseModel;
_process_embedding_token_parallel;
_export_cls_token;
Llama4OmniModel;
Llama4TextConfig;
Llama4VisionConfig;
MultimodalProjectorConfig;
Llama4OmniConfig;
HFLlama4VisionConfig;
HFLlama4Config;
pixel_shuffle_op;
Llama4ViTModel;
PixelShuffle;
pixel_shuffle;
ColumnParallelConv2dPatch;
PixelShuffleMLP;
get_rope_emb;
get_rope_freqs;
compute_rope_freqs;
_encode;
ln_pre;
ln_post;
image_size_to_num_patches;
select_best_resolution;
HFLlavaNextConfig;
get_number_of_features;
_MockLlavaNextDataset;
LlavaNextConfig;
flatten_if_nested;
LlavaNextSampleEncoder;
LlavaNextSimilarityInterleavedSampleEncoder;
PackedLlavaNextTextRawBatch;
LlavaNextTextRawBatch;
convert_to_packed_llava_next;
PackedLlavaNextTextSample;
llava_next_data_step;
llava_next_forward_step;
MCoreLlavaNextModel;
pack_image_features;
_export_language_linear_fc1;
_export_language_head;
LlavaNextModel;
HFCLIPVisionConfig;
LlavaNextForConditionalGeneration;
HFLlavaConfig;
unpad_image;
get_anyres_image_grid_shape;
get_unpadded_features;
_MockMLlamaDataset;
standard_normal;
_apply_prompt_templates;
_tokenize_and_label;
_process_images;
MLlamaDataset;
pad_or_truncate;
Llama3SampleEncoder;
LlamaImageTextRawBatch;
mllama_data_step;
mllama_forward_step;
max_aspect_ratio_id;
CrossAttentionVisionModel;
_init_fusion_schedule;
CrossAttentionTextModel;
MLlamaBaseModel;
MultimodalProjector;
VisionEncoder;
compute_xattn_caches_masks;
_pad_attention_masks;
_generate_cross_attention_mask;
compute_xattn_kv_cache;
get_partially_trainable_embedding;
CrossAttentionTransformerBlock;
learnable_embedding;
DummyCrossAttentionTransformerLayer;
MLlamaCrossAttentionSubmodules;
xattn_layer;
group_prefetch_offload_commit_async;
_compute_xattn_kv_cache;
get_key_value_tensors;
linear_kv;
get_query_tensor;
_rename_xattn_layer_nums_hf;
_import_embedding_hf;
_import_patch_embedding_hf;
_merge_qkv;
_import_text_qkv;
_import_text_kv;
_merge_kv;
_import_simple_concat;
_split_kv;
_export_patch_embedding_hf;
_export_text_kv;
_export_text_qkv;
_export_simple_split;
_export_embedding_hf;
local_path;
MLlamaModelConfig;
_language_model_config;
_vision_model_config;
CrossAttentionTextConfig;
_calculate_num_layers;
CrossAttentionVisionConfig;
_modify_mllama_source_state;
MllamaVisionConfig;
MllamaTextConfig;
HFMllamaConfig;
convert_layer_num;
_get_full_row_masked_out_mask;
to_2tuple;
build_encoder_attention_mask;
get_image_transformer_layer_spec;
forward_with_return_intermediate;
TEColumnParallelLinear;
_unfold;
LayerNormImpl;
PrecomputedTilePositionEmbedding;
apply_positional_embedding;
gated_tile_positional_embedding;
apply_class_embedding;
pre_tile_pos_embed;
post_tile_pos_embed;
global_transformer;
process_chat_template;
_MockNevaDataset;
tokenize_special_token;
find_pattern_indices;
_fix_roles;
_get_crop_size;
custom_on_megatron_step_start;
neva_data_step;
neva_forward_step;
_get_shard_factor;
_import_linear_fc1;
LlavaConfig;
LlavaModel;
process_vision;
infer_seqlen;
extract_dialogue_pairs;
truncate_tokens;
_process_vision;
_normalize_vision_paths;
normalize_paths;
_fetch_vision_content;
fetch_image;
fetch_video;
Qwen2VLDataset;
convert_to_qwen2vl_content;
span;
cook_chatml_sample;
ChatMLSample;
Qwen2VLTaskSample;
Qwen2VLTaskBatch;
qwen2vl_2b;
Qwen2VLModel;
Qwen2VLConfig2B;
qwen2vl_7b;
Qwen2VLConfig7B;
qwen2vl_72b;
Qwen2VLConfig72B;
qwen2vl_data_step;
qwen2vl_forward_step;
Qwen2VisionModel;
MCoreQwen2VLModel;
get_image_sequence_length;
get_rope_index;
_export_language_qkv_bias;
_export_linear_fc1;
Qwen2VLVisionConfig;
Qwen2VLConfig;
HFQwen2VLConfig;
HFQwen2VLVisionConfig;
outer;
VisionRotaryEmbedding;
rot_pos_emb;
MCoreMultimodalProjector;
CLIPVisionModel;
BaseCLIPViTModel;
CLIPViTL_14_336_Config;
_bias_dropout_add_func_internvit;
bias_dropout_add_unfused_internvit;
get_bias_dropout_add_internvit;
get_internvit_layer_spec;
_import_position_embedding;
_gather_var;
InternViTModel;
InternViTConfig;
SigLIPViTModel;
SigLIPViT400M_14_384_Config;
_validate_input_types;
TypecheckMetadata;
is_semantic_typecheck_enabled;
compare;
__check_neural_type;
_attach_and_validate_output_types;
__attach_neural_type;
_inspect_signature_for_trainer;
format_exc;
from_config_file;
__hash__;
SaveRestoreConnector;
_get_hf_hub_pretrained_model_info;
_get_ngc_pretrained_model_info;
HfApi;
file_exists;
try_to_load_from_cache;
repo_info;
snapshot_download;
generate_model_card;
_get_hf_model_card;
wrapped_call;
decorator;
wrapped;
disable_semantic_checks;
set_semantic_check_enabled;
enable_wrapping;
list_export_subnets;
get_export_subnet;
augment_filename;
_export;
get_export_format;
wrap_forward_method;
_export_teardown;
optimized_execution;
_jit_is_scripting;
parse_input_example;
trace_module;
verify_torchscript;
dynamic_shapes_for_export;
verify_runtime;
monkeypatched;
ExportOptions;
dynamo_export;
rename_onnx_io;
run_decompositions;
element_size;
replace_for_export;
get_dynamic_axes;
get_export_config;
wrap_training_step;
_setup_profiling;
_setup_chakra_profiling;
register_debug_hooks;
has_artifacts;
has_native_or_submodules_artifacts;
has_nemo_submodules;
named_nemo_modules;
is_multistorageclient_url;
maybe_make_save_dir;
update_save_restore_connector;
import_multistorageclient;
resolve_validation_dataloaders;
resolve_test_dataloaders;
setup_megatron_optimization;
parse_optimizer_args;
optimizer_cls;
get_megatron_optimizer;
McoreDistributedOptimizer;
load_part_of_state_dict;
extract_state_dict_from;
num_weights;
cfg;
_set_hparams;
hparams;
ExecutionTraceObserver;
register_callback;
_record_memory_history;
export_chrome_trace;
unregister_callback;
_dump_snapshot;
_cleanup_on_execution_end;
on_predict_end;
_num_weights;
access_cfg;
register_adapter;
AdapterRegistryInfo;
_prepare_default_adapter_config;
update_module_class_with_adapter_class;
inplace_recursive_walk_dict;
check_supported_adapter_type_;
replace_adapter_compatible_modules;
bernoulli_;
get_hf_model_filter;
search_huggingface_models;
list_models;
push_to_hf_hub;
create_repo;
SoftTemporaryDirectory;
upload_folder;
ModelCardData;
ModelCard;
_get_gpu_name;
nvmlInit;
nvmlDeviceGetHandleByIndex;
nvmlDeviceGetCudaComputeCapability;
nvmlShutdown;
task_function;
get_args_parser;
_run_hydra;
instance;
wrapper;
WrappedOptimConfig;
WrappedSchedConfig;
register_optimizer_params;
get_optimizer_config;
scheduler_params;
register_scheduler_params;
get_scheduler_config;
_update_subconfigs;
ArtifactItem;
_filtered_recursive_walk;
_make_nemo_file_from_folder_with_multistorageclient;
upload_file;
_is_safe_path;
commonprefix;
issym;
islnk;
_safe_extract;
realpath;
_tar_open;
filter_fn;
_unpack_nemo_file_with_multistorageclient;
download_file;
check_artifact_and_query_basename_match;
t_with_string;
_init_internal;
__check_sanity;
AxisType;
__compare_axes;
compare_and_raise_error;
NeuralPortNmTensorMismatchError;
_get_lr;
_get_options;
_rms;
_approx_sq_grad;
rsqrt_;
_single_tensor_adan;
addcmul_;
addcdiv_;
_multi_tensor_adan;
_foreach_addcmul_;
_foreach_sqrt;
_foreach_div_;
_foreach_zero_;
_foreach_addcdiv_;
_fused_adan_multi_tensor;
MultiTensorApply;
_fused_adan_single_tensor;
adan_single_tensor;
restart_opt;
quantize_param_fragment;
_quantize_param_fragment_impl;
get_fp8_scale_and_amax;
_get_fp8_scale_and_amax_impl;
create_distribute_within_nodes_pgs;
Float8Tensor;
update_quantized;
acquire;
is_mxfp8tensor;
release;
_make_post_backward_hook;
_lock_with_timeout;
_init_param_state;
_grad_copy;
_try_start_bucket_grad_sync;
ParameterFragment;
add_param_to_bucket;
_multi_tensor_copy;
dtypes;
nccl_mem;
storage_offset;
_disable_pre_forward_hook;
grad_buffer_view;
_local_grad_norm;
_param_copy_fragments;
parameter;
_reset_caches;
_check_params_shard_dtypes;
cast_to_fp8;
hook;
is_grad_copy_enabled;
rename_fp32_params;
lock_with_timeout;
_squareroot_annealing;
_square_annealing;
_cosine_annealing;
_linear_warmup_with_cosine_annealing;
_poly_decay;
_noam_hold_annealing;
register_scheduler;
get_scheduler;
scheduler_cls;
scheduler_params_cls;
_round;
get_lr;
_get_warmup_lr;
_get_constant_lr;
_get_linear_warmup_with_cosine_annealing_lr;
_noam_annealing;
reload_model_params;
_filter_empty_common_step;
nvtx_range_push;
nvtx_range_pop;
_get_state;
save_parameter_state;
load_parameter_state;
_get_param_groups;
disable_pre_hook;
enable_pre_hook;
_get_scale_async;
_check_inf_per_device;
_check_valid_opt_params;
optimizer_params_cls;
_zero_grad_group_helper;
detach_;
_multi_tensor_copy_this_to_that;
_get_grad_data_group;
zero;
allreduce_buffer;
update_chunk_info;
GradBucket;
register_hook;
copy_tensor_model_parallel_attributes;
_make_param_hook;
allreduce_grads;
get_allreduce_tensor;
_make_nccl_premul_sum;
_get_model_and_main_params_data_float16;
_set_overflow_buffer;
_copy_main_params_to_model_params;
_copy_model_params_to_main_params;
_get_defaults;
param_hook;
cuDriverGetVersion;
cuGetErrorString;
skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
assert_drv;
cuLaunchKernel;
CUgraphNodeParams;
set_stream;
cuCtxGetCurrent;
cuGraphAddNode;
cudaStreamUpdateCaptureDependencies;
cudaStreamBeginCaptureToGraph;
CUgraph;
nvrtcCreateProgram;
nvrtcCompileProgram;
nvrtcGetProgramLogSize;
nvrtcGetProgramLog;
nvrtcGetPTXSize;
nvrtcGetPTX;
cuModuleLoadData;
cuModuleGetFunction;
extract_dynamic_axes;
unpack_nested_neural_type;
Dim;
with_numba_compat_strictness;
is_numba_compat_strict;
set_numba_compat_strictness;
numba_cpu_is_supported;
is_supported_version;
skip_numba_cuda_test_if_unsupported;
is_lib_available;
_lib_required;
function_stub_with_error_decorator;
execute_job;
setup_globals;
set_state;
load_sweep_config;
set_config;
JobReturn;
sha256;
configure_log;
get_state;
filter_overrides;
poll;
_init_nemo_model;
_is_model_deployable;
get_module_and_class;
rindex;
TritonConfig;
Triton;
bind;
ModelConfig;
typedict2tensor;
get_origin;
_map_type;
_get_tensor_params;
get_type_hints;
nemo_checkpoint_version;
TarPath;
str_list2numpy;
str_ndarray2list;
ndarray2img;
cast_output;
broadcast_list;
setup_media;
frame_len;
get_subsampled_frames;
_load;
get_triton_input;
get_triton_output;
triton_infer_fn;
noop_decorator;
get_deployable;
Template;
remove_eos_token;
str_to_dict;
first_value;
query_llm_streaming;
DecoupledModelClient;
health_check;
check_triton_health;
HTTPException;
convert_numpy;
_helper_fun;
NemoQueryLLMPyTorch;
query_llm_async;
get_event_loop;
run_in_executor;
completions_v1;
dict_to_str;
chat_completions_v1;
set_greedy_params;
_load_runtime;
is_nemo2_checkpoint;
_load_hf_model;
get_inputs;
get_outputs;
_export_to_onnx;
get_example_inputs;
get_model_device_type;
export_onnx_to_trt;
Logger;
build_serialized_network;
write_bytes;
_override_layernorm_precision_to_fp32;
_override_layers_to_fp32;
validate_fp8_network;
get_error;
_override_layer_precision_to_fp32;
set_output_type;
get_layer;
get_output_type;
output_type_is_set;
bos_token_id;
eos_token_id;
unpack_tarball;
__truediv__;
suffix;
getmember;
isreg;
fnmatch;
rglob;
__contains__;
__delitem__;
get_profile_shapes;
scale_batch_size;
cuassert;
make_tensor;
unroll_input;
parse_groups;
trt_forward;
wrap;
TrtCompiler;
find_sub;
trt_to_torch_dtype_dict;
get_tensor_mode;
get_tensor_dtype;
get_tensor_shape;
set_inputs;
infer_shapes;
try_set_inputs;
set_input_shape;
set_optimization_profile_async;
_inputs_to_dict;
_load_engine;
TRTEngine;
old_forward;
_build_and_save;
_onnx_to_trt;
engine_bytes_from_network;
add_casts_around_norms;
convert_method_to_trt_engine;
Input;
get_torch_trt_input;
fold_constants;
save_onnx;
onnx_from_path;
add_profile;
prepare_directory_for_export;
is_rank;
is_qnemo_checkpoint;
_export_to_nim_format;
mpi_world_size;
mpi_barrier;
qnemo_to_tensorrt_llm;
load_nemo_model;
get_weights_dtype;
determine_quantization_settings;
get_transformer_config;
TRTLLMHelper;
ExportConfig;
get_trtllm_pretrained_config_and_model_weights;
model_to_trtllm_ckpt;
build_and_save_engine;
export_hf_model;
PluginConfig;
check_max_num_tokens;
get_hf_model_dtype;
enable_paged_kv_cache;
Mapping;
from_hugging_face;
build_trtllm;
convert_to_safe_tensors;
mpi_rank;
save_file;
numpy_to_torch;
gather_and_reshard_model;
get_pipeline_model_parallel_first_rank;
get_tensor_if_available;
_get_layer_index;
rename_layer_num;
get_layer_num;
get_nemo_to_trtllm_conversion_dict;
get_layer_prefix;
init_model_parallel_from_nemo;
load_distributed;
get_input_dtype;
dist_model_to_trt_llm_ckpt;
_get_prompt_embedding_table;
generate_streaming;
add_prompt_table;
_prep_ptuning_table;
remove_prompt_table;
_pad_logits;
triton_infer_fn_streaming;
_load_prompt_tables;
_get_prompt_embedding_table_ckpt;
is_nemo_tarfile;
str_dtype_to_torch;
_load_config_file;
unload_engine;
build_mllama_engine;
build_trtllm_engine;
build_perception_engine;
build_visual_engine;
extract_lora_ckpt;
load_test_data;
load_test_media;
get_input_media_tensors;
TRTLLMRunner;
MultimodalModelRunner;
SpeechllmModelRunner;
DeviceConfig;
NemoModelConfig;
ParallelConfig;
CacheConfig;
SchedulerConfig;
LoadConfig;
_prepare_lora_checkpoints;
LLMEngine;
convert_and_store_nemo_weights;
initialize_ray_cluster;
get_sliding_window;
VllmConfig;
ObservabilityConfig;
LoRAConfig;
convert_lora_nemo_to_canonical;
_add_request_to_engine;
SamplingParams;
LoRARequest;
_forward_regular;
_forward_streaming;
_add_triton_request_to_engine;
LLM;
build_mllama_trtllm_engine;
export_visual_wrapper_onnx;
export_perception_wrapper_onnx;
save_config;
build_neva_engine;
connector;
VisionEncoderWrapper;
build_video_neva_engine;
load_perception_model;
PerceptionWrapper;
build_mllama_visual_engine;
MLLaMAVisionWrapper;
convert_mllama_nemo_to_hf;
MllamaForConditionalGeneration;
split_qkv_weight;
split_kv_weight;
split_gate_weight;
convert_mllama_config;
MllamaConfig;
convert_vision_qkv_weight;
convert_patch_embeding;
convert_language_qkv_weight;
convert_gate;
convert_embedding;
trt_dtype_to_torch;
init_tokenizer;
init_llm;
init_image_encoder;
init_vision_preprocessor;
HFTokenizerInterface;
return_obj;
from_serialized_engine;
from_dir;
video_preprocess;
insert_tokens_by_index;
setup_fake_prompts;
get_visual_features;
tokenizer_image_token;
split_prompt_by_images;
setup_fake_prompts_vila;
preprocess_lita_visual;
insert_separator;
TensorInfo;
str_dtype_to_trt;
ptuning_setup;
expand2square_pt;
load_video;
preprocess_frames;
set_bridge;
get_num_sample_frames;
process_lita_video;
process_vila_img;
setup_inputs;
print_result;
msec_per_batch;
elapsed_time_in_sec;
init_speech_preprocessor;
init_modality_encoder;
get_modality_encoder_features;
torch_dtype_to_trt;
_sample_output;
temporary_directory;
save_artifacts;
set_level;
optimize_model;
preprocess_weights;
_read_config;
from_quant_algo;
QuantMode;
SamplingConfig;
TensorrtLLMHostContext;
MPIPoolExecutor;
parse_file;
from_buffer;
from_engine;
maybe_cast_to_trt_dtype;
get_weights_prototype;
prepare_input_tensors;
to_word_list_format;
unload;
TensorrtLLMWorkerContext;
prompt_convert;
convert_model_to_trt_llm_ckpt;
non_gated_version;
pp_layers;
is_first_pp_rank;
is_last_pp_rank;
pad_vocab_size;
extract_layers_with_prefix;
get_layer_name;
rename_key;
rename_key_dist_ckpt;
load_scaling_factors;
is_scaling_factor;
save_scaling_factor;
create_export_dir;
handle_model_level_weights;
split_and_save_weight;
try_get_model_level_weight;
get_remove_vocab_padding;
save_val;
broadcast_item;
vocab_range_from_global_vocab_size;
save_split;
save_expert_split;
generate_int8;
broadcast_to;
to_i8;
write_int8;
get_suffix;
get_trt_llm_prefix;
any_word_in_key;
sequential_key_map;
get_trt_llm_infix;
get_trt_llm_keyname;
get_scaling_factor_keys;
cast_val_datatype;
split_val_gate;
Split;
mpi_comm;
load_extra_state_from_bytes;
preprocess_scaling_factors_for_local_export;
rename_extra_states;
isnumeric;
torch_to_numpy_state_dict;
update_tokenizer_paths;
_update_config_entry;
get_tokenizer_file_path;
copy_tokenizer_files;
get_tokenizer_from_nemo2_context;
GPT2Tokenizer;
load_nemo_config;
UnpackedNemoCheckpointDir;
load_model_weights;
nemo_to_path;
cpu_map_location;
gpu_map_location;
model_config;
get_checkpoints_paths;
_inject_parallel_ranks;
checkpoint_name;
replace_number_add_offset;
rename_qkv_keys;
reformat_module_names_to_hf;
convert_lora_weights_to_canonical;
add_offset;
load_sharded_metadata_torch_dist;
TarFileSystemReader;
load_sharded_pickle_extra_state_scale;
contains_extra_states;
load_sharded_metadata_zarr;
add_safe_globals;
ZarrPathStore;
nemo_weights_directory;
_mock_import;
DummyModule;
_get_encoder_config;
_init_pooler_config;
get_model_converter;
get_hf_text_config;
_get_and_verify_dtype;
_get_and_verify_max_len;
_init_attention_free;
_init_has_inner_state;
_init_has_noops;
_verify_tokenizer_mode;
_verify_quantization;
_verify_cuda_graph;
_change_paths_to_absolute_paths;
_load_hf_arguments;
convert_config;
for_model;
get_architecture;
is_cuda;
get_hf_config_sliding_window;
try_get_generation_config;
convert_weights;
_load_nemo_checkpoint_state;
set_default_torch_dtype;
_standardize_nemo2_naming;
load_weights;
_initialize_model;
_teardown;
get_objects;
idempotent_path_append;
with_name;
create_dataloader;
setup_microbatch_calculator;
add_megatron_sampler;
_IndexBatchSamplerWrapper;
default_data_step;
default_forward_step;
extract_ddp_funcs;
getattr_proxy;
_calc_number_of_trainable_params;
is_list_of_iterators;
masked_token_loss;
moe_loss_tracker_ctx;
reduce_aux_losses_tracker_across_ranks;
clear_aux_losses_tracker;
aggregate_moe_loss_stats;
get_moe_layer_wise_logging_tracker;
CallbackConnector;
reinit;
transform_event;
event;
wrapped_forward_step;
_loss_reduction;
from_data_step;
from_forward_step;
from_loss_reduction;
_data_step;
_forward_step;
_setup_module;
loss_reduction;
convert_input;
convert_output;
apply_convert_module_fn;
init_ddp;
convert_module_fn;
FunctionType;
init_ddp_context;
FullyShardedDataParallel;
DDP;
get_data_modulo_expert_parallel_group;
teardown_ddp;
_call_module;
function;
_module_sharded_state_dict;
enable_forward_pre_hook;
disable_forward_pre_hook;
force_param_sync;
start_param_sync;
_get_abs_string_index;
_ModuleStepFunction;
attr;
callback_method;
__iadd__;
infer_micro_batch_size;
infer_seq_length;
infer_num_microbatches;
get_data_iterator_and_seq_length;
to_data_iterator_list;
adjust_tensor_shapes_fn;
has_global_batch_sampler;
register_forward_pre_hook;
wrapped_forward_step_func;
_setup_files_to_move;
_setup_file_logging;
_handle_task_config;
_setup_trainer_loggers;
_setup_trainer_model_checkpoint;
configure_logger;
save_config_img;
get_envbool;
add_handlers_to_mcore_logger;
add_file_handler;
_try_restore_tokenizer;
_extract_path;
get_context_path;
_get_base_model_path_for_adapter;
_filter_out_unfinished_checkpoints;
NotFoundError;
lstat;
init_parallel_ranks;
get_expert_tensor_parallel_rank;
set_model_parallel_attributes;
megatron_lazy_init_context;
original;
enable_nvidia_optimizations;
_sync_from_last_pipeline_stage;
setup_megatron_optimizer;
McoreOpt;
_get_extra_te_kwargs_meta;
_is_slurm_interactive_mode;
job_name;
_ddp_converter;
_fsdp_converter;
FSDPStrategy;
_mixed_precision_converter;
_fsdp_precision_converter;
FSDPPrecision;
setup_module;
import_model;
import_from;
setup_datamodule;
process_datamodule;
_convert_megatron_mixed_precision;
FabricMegatronMixedPrecision;
DtypeConfig;
update_config_with_dtype_overrides;
convert_module;
convert_optimizer;
get_optim_config;
convert_megatron_strategy;
FabricMegatronStrategy;
_setup_distributed;
_set_world_ranks;
local_rank;
world_size;
global_rank;
process_dataloader;
_MegatronDataLoaderIterDataFetcher;
setup_optimizer;
MegatronParallel;
module_init_context;
megatron_context;
_convert_stateful_objects_in_state;
_validate_keys_for_strict_loading;
load_module_state_dict;
checkpoint_io;
MegatronCheckpointIO;
parallelism;
ParallelismConfig;
_DataFetcherWrapper;
model_importer;
register_importer;
model_exporter;
register_exporter;
load_connector;
capture;
to_capture;
type_factory;
NewType;
FileLock;
is_in_cache;
maybe_finalize_save_checkpoint;
_make_torch_importable;
SingleImportable;
_make_torch_nn_importable;
is_torch_tensor;
convert_torch_tensor_to_cst;
Call;
Attribute;
Arg;
kwarg_to_cst;
convert_child;
Name;
register_exact_value;
register_import_alias;
register_py_val_to_cst_converter;
register_immutable;
register_constant;
register_function_with_immutable_return_value;
_original_serialize;
_pyref;
to_config;
_modified_serialize;
is_rank_0;
nemo_to_hf;
hf_to_nemo;
_save_adapter_weights_only;
OSError;
_load_adapter_weights_only;
rm;
_ordered_arguments_with_default;
ordered_arguments;
_is_default_factory;
getmodule;
get_callable;
default_factory;
_config_representer_with_defaults;
represent_data;
_partial_representer_with_defaults;
_safe_object_representer;
_process_module;
_io_wrap_init;
_io_register_serialization;
_add_io_to_class;
_is_defined_in_module_or_submodules;
_io_transform_args;
bind_partial;
convert_dataclasses_to_configs;
_io_init;
original_init;
io_transform_args;
register_node_traverser;
_io_flatten_object;
__flatten__;
_io_unflatten_object;
__unflatten__;
pickle_load;
_io_path_elements_fn;
__path_elements__;
IdentityElement;
_artifact_transform_save;
_artifact_transform_load;
drop_unexpected_params;
Deserialization;
locate;
object;
_io_dump_yaml;
add_representer;
add_multi_representer;
YamlSerializer;
_get_connector;
wrapped_init;
is_distributed_ckpt;
_get_iteration_from_checkpoint;
construct_extra;
add_finalize_fn;
TensorStoreLoadShardedStrategy;
FullyParallelLoadStrategyWrapper;
get_default_load_sharded_strategy;
adjust_non_strict_load;
_determine_dist_ckpt_save_strategy;
TorchDistSaveShardedStrategy;
get_default_save_sharded_strategy;
FullyParallelSaveStrategyWrapper;
save_sharded_strategy;
load_tensors_metadata;
extract_matching_values;
iter_finalize_fn;
should_remove_missing_sharded_base;
extract_dtypes;
TransformCTX;
StateDictTransform;
_match_keys;
ndenumerate;
call_transform;
split_qkv;
split_qkv_bias;
merge_qkv;
merge_qkv_bias;
merge_fc1;
split_fc1;
handle_partial;
register_class;
predicate;
pathize;
copy_file;
from_pretrained_kwargs;
handle_hf_pretrained;
file_path;
update_trainer_local_checkpoint_io;
LocalCheckpointManager;
MCoreHierarchicalCheckpointIO;
LazyCliqueReplicationStrategy;
gethostname;
to_tensor_aware_state_dict;
from_state_dict;
from_tensor_aware_state_dict;
to_state_dict;
to_cpu;
NoValOnRestartTrainingLoop;
_should_check_val_fx;
add_io;
Fabric;
dtype_from_str;
is_trainer_attached;
get_automodel_from_trainer;
_apply_basic_module_replacement;
apply_fp8_autocast;
is_te_accelerated;
_contextual_fp8_autocast;
to_kwargs;
model_forward;
pl_has_dist_opt_with_ovelap;
pl_check_param_hashes_across_dp_replicas;
check_param_hashes_across_dp_replicas;
get_data_parallel_group_gloo;
collect_precision;
collect_precision_and_shape;
_apply_user_funcs;
find_grad_tensor;
PrettyTable;
add_column;
get_string;
extract_module_attr_name;
get_modules_from_selector;
_get_name;
compile_module;
NvtxProfileTransform;
ThunderCompiler;
_CommOverlapConfig;
_get_model_comm_overlap_cfgs;
_override_user_cfgs;
_get_optimizer_overlap_cfgs;
_apply_cfgs;
_check_num_cuda_device_max_connections;
get_device_capability;
_init_te_userbuffers;
on_predict_start;
warn_tensor_cycles;
enable_on_rank;
_wrap_func;
_get_param_type;
nemo_topk_check_previous_run;
get_git_hash;
add_err_file_handler;
add_filehandlers_to_pl_logger;
get_git_diff;
_has_ema_ckpts;
_del_model_without_trainer;
_ema_format_filepath;
_is_ema_filepath;
_remove_invalid_entries_from_topk;
removesuffix;
__is_ckpt_ok;
is_checkpoint_unfinished;
_remove_unfinished_checkpoints;
_monitor_candidates;
format_checkpoint_name;
_save_last_checkpoint;
_ema_callback;
format_checkpoint_unfinished_marker_path;
set_checkpoint_unfinished_marker;
touch;
remove_checkpoint_unfinished_marker;
_link_checkpoint;
_save_checkpoint;
_get_finalize_save_checkpoint_callback;
finalize_fn;
_remove_checkpoint;
after_save_checkpoint;
proxy;
_saved_checkpoint_paths;
_should_remove_checkpoint;
_is_local_file_protocol;
_cb;
_call_counter;
_maybe_apply_transform;
apply_transform;
_set_cfgs;
_rank_is_active;
create_checkpoint_io;
restore_automodel;
setup_optimizers;
should_restore_optimizer_states;
automodel_setup_optimizers;
adapter_key_filter;
to_wrap;
_create_lora_hf_config;
extract_matched_module_names;
_preemption_handler;
_check_preemption_support;
getsignal;
signal;
preemption_supported;
interrupted;
master_handler;
ignoring_handler;
calculate_data_parallel_groups;
format_string;
average_metrics_dict;
should_log;
log_megatron_timers;
has_dataloader_changed;
on_test_batch_start;
on_test_batch_end;
trace_handler;
_stop_profiler;
scheduler;
lr_scheduler;
custom_configure_optimizers;
WarmupHoldPolicy;
SquareAnnealing;
SquareRootAnnealing;
NoamAnnealing;
NoamHoldAnnealing;
WarmupAnnealing;
InverseSquareRootAnnealing;
T5InverseSquareRootAnnealing;
PolynomialDecayAnnealing;
PolynomialHoldDecayAnnealing;
finalize_model_grads;
finalize_model_grads_func;
_extract_model_params_for_optim;
no_weight_decay_cond;
optimizer_fn;
on_megatron_step_start;
on_megatron_step_end;
num_microbatches;
current_global_batch_size;
clip_gradients;
_load_optimizer_state_dict;
set_optimizer_state_dict;
setup_device;
init_device_mesh;
_flatten;
parallelize;
reset_seed;
set_world_ranks;
_get_process_group_backend;
_get_loss_reduction;
_step_proxy;
_forward_redirection;
val_step_context;
test_step_context;
predict_step_context;
current_epoch_step;
islink;
name_has_lora;
distribute_tensor;
setup_parallel_ranks;
setup_data_sampler;
fix_progress_bar;
train_step_context;
pyt_to_mcore_state_dict;
get_optimizer_state_dict;
mcore_to_pyt_sharded_state_dict;
set_state_dict;
StateDictOptions;
_data_fetcher_wrapper;
_DataLoaderIterDataFetcher;
pipeline_dtype;
_MegatronAutomaticOptimization;
_enable_model_averaging;
broadcast_params;
get_global_rank;
_register_ddp_hooks;
_optimizers_to_device;
model_sharded_context;
_update_step_kwargs;
_get_data_step;
_get_forward_step;
is_converted;
hide_loss_modules;
from_group;
from_local;
ProgressPrinter;
wrapping_ckpt_io;
sharded_tensor_to_torch_sharded_tensor;
_convert;
validate_metadata_integrity;
_mcore_to_pyt_dtensor;
_mcore_to_pyt_sharded_tensor;
to_local;
from_rank_offsets;
local_shards;
is_replicate;
_get_extra_state_offsets;
_dtensor_to_mcore_sharded_tensor;
get_local_rank;
_torch_to_mcore_sharded_tensor;
_torch_to_mcore_sharded_object;
parallelize_helper;
get_hf_tp_shard_plan;
translate_to_torch_parallel_style;
_destroy_dist_connection;
context_parallel;
maybe_enable_compiled_autograd;
context;
_merge_callbacks;
FaultTolerance;
get_launcher;
logger_fn;
ZlibJSONSerializer;
nproc_per_node;
get_vboost_srun_cmd;
Lock;
model_restore_path;
ModelMetadataRegistry;
reset_model_guid_registry;
add_optimizer_args;
add_scheduler_args;
add_asr_args;
add_nlp_args;
avoid_bfloat16_autocast_context;
cast_tensor;
type_;
home;
initialize_sagemaker;
_patch_torch_metrics;
_install_system_libraries;
cluster_environment;
LightningEnvironment;
__new_hash__;
_update_subconfig;
_add_subconfig_keys;
assert_dataclass_signature_match;
ais_cache_base;
ais_endpoint;
bucket_and_object_from_uri;
PurePath;
ais_endpoint_to_dir;
ais_binary;
which;
datastore_path_to_local_path;
list2cmdline;
check_call;
datastore_object_get;
get_forward_hook;
get_backward_hook;
get_tensor_hook;
get_parameter;
register_forward_hook;
register_full_backward_hook;
forward_hook;
backward_hook;
tensor_hook;
gather_objects;
webdataset_split_by_workers;
_missing_;
_get_env;
coerce;
CoercionError;
RequiredSettingMissingError;
_bool;
_int;
_float;
_decimal;
Decimal;
_dict;
_datetime;
_date;
date;
get_env;
get_envfloat;
get_envdecimal;
get_envdate;
get_envdatetime;
get_envlist;
get_envdict;
forward_method;
to_onnxrt_input;
run_ts_and_compare;
run_ort_and_compare;
ts_model;
simple_replace;
DestT;
replace_MatchedScaleMaskSoftmax;
wrap_module;
swap_modules;
replace_modules;
script_module;
replace_FusedLayerNorm;
replace_MixedFusedRMSNorm;
TorchRMSNorm;
replace_ParallelLinear;
LinearWithBiasSkip;
replace_FusedScaleMaskSoftmax;
expansion_fn;
error_checks;
get_log_dir;
check_resume;
configure_loggers;
DeltaTimingCallback;
EMA;
EarlyStopping;
configure_checkpointing;
StragglerDetectionCallback;
FaultToleranceCallback;
initialized;
LoggerMisconfigurationError;
get_original_cwd;
check_slurm;
is_s3_url;
s3_path_exists;
find_files_with_suffix;
check_explicit_log_dir;
TensorBoardLogger;
MLFlowLogger;
DLLogger;
ClearMLLogger;
NeptuneLogger;
NeMoModelCheckpoint;
CheckpointMisconfigurationError;
SkipResumeTrainingValidationLoop;
_on_batch_start;
is_active;
_on_batch_end;
on_before_backward;
_on_epoch_start;
resume_start;
_check_time_remaining;
_TunerExitException;
neva_projection;
deepseekv3;
hyena;
_hyena_layer_count;
null_decorator;
is_unavailable;
UnavailableMeta;
gpu_only_import;
gpu_only_import_from;
UnavailableError;
__gt__;
__le__;
__ge__;
__abs__;
__floordiv__;
__rfloordiv__;
__ifloordiv__;
__lshift__;
__rlshift__;
__mul__;
__rmul__;
__imul__;
__ilshift__;
__pow__;
__rpow__;
__ipow__;
__rshift__;
__rrshift__;
__irshift__;
__sub__;
__rsub__;
__isub__;
__rtruediv__;
__itruediv__;
__divmod__;
__rdivmod__;
__neg__;
__invert__;
__index__;
__get__;
__delete__;
add_memory_handlers_to_pl_logger;
MemoryHandler;
addFilter;
setTarget;
detect_prefix;
getnames;
resolve_dataset_name_from_cfg;
parse_dataset_as_name;
unique_names_check;
_convert_config;
__import__;
recursive_subclass_walk;
operator;
model_file_handler;
_define_logger;
remove_stream_handlers;
setFormatter;
captureWarnings;
getLogRecordFactory;
setLogRecordFactory;
add_stream_handlers;
formatter;
old_factory;
removeHandler;
reset_stream_handler;
getEffectiveLevel;
patch_stderr_handler;
patch_stdout_handler;
temp_verbosity;
_showwarning;
formatwarning;
_warning_is_ignored;
_logged_once;
isEnabledFor;
_log;
record_factory;
build_manifest;
download_an4;
_nvtx_enabled;
range_push;
range_pop;
_scan_objects_with_retry;
is_slow_down_error;
_download_fileobj_with_retry;
retry;
download_fileobj;
wait_exponential;
stop_after_delay;
retry_if_exception;
before_sleep_log;
_download_file_with_retry;
_upload_fileobj_with_retry;
upload_fileobj;
_upload_file_with_retry;
parse_s3_url;
_get_s3_resource;
list_objects_v2;
remove_object;
delete_object;
download_s3_file_to_stream;
TransferConfig;
download_s3_file_to_path;
upload_file_stream_to_s3;
Bucket;
build_s3_url;
resource;
Session;
parse_prefix_with_step;
find_first_bin_that_fits;
_reduction_fn;
active_timers;
perf_counter_ns;
HalfPrecisionForAudio;
struct_copy_one;
struct_copy_two;
__orig_get_lr__;
__orig_zero_grad__;
to_tensor;
get_optimizer_step;
is_param_in_hook_signature;
from_training_step_output;
__orig_optimizer_step__;
get_training_step;
__orig_training_step__;
get_amp_autocast_init;
__orig_init__;
get_ddp_init;
amp_autocast_init;
CUDAGraphState;
StaticBufferLoader;
_debug_time;
AsyncCallsQueue;
schedule_async_request;
maybe_finalize_async_calls;
get_num_unfinalized_calls;
_get_checkpoint_io;
_format_nemo_checkpoint_name;
_backup_existing_nemo_ckpt;
_drop_optimizer_states;
_get_checkpoints_list;
_load_current_state_dict;
_call_lightning_module_hook;
_clean_up_conflicting_checkpoint;
_upload_file_to_s3;
_upload_bytes_to_s3;
dummy_func;
get_start_method;
_serialize_checkpoint_to_shm;
_serialize_checkpoint_to_bytes;
_check_uploading_results_so_far;
done;
experimental;
_normalize_docstring;
expandtabs;
add_port_docs;
decorated;
check_color_support;
formatTime;
getMessage;
to_unicode;
formatException;
code_to_chars;
clear_screen;
clear_line;
UP;
DOWN;
FORWARD;
BACK;
POS;
OutputModel;
log_hyperparams;
apply_to_collection;
update_design;
log_table;
report_table;
_log_model;
mark_completed;
mark_failed;
mark_stopped;
set_all_metadata;
_get_default_report_storage_uri;
JSONStreamBackend;
StdOutBackend;
_sanitize_callable_params;
_flatten_dict;
_convert_params;
construct_negatives;
TrainerConfig;
decoding_step;
ContextGraphCTC;
__build_dataset_from_text;
__tokenize_str;
__tokenize_text;
__create_chunk;
__write_tarred_tokenized_text_dataset;
basicConfig;
linear_search_wer;
compute_wer;
BeamScoresDataset;
beam_search_eval;
Words;
AddCount;
CountsForHistory;
AddRawCountsFromLine;
AddRawCountsFromStandardInput;
ApplyBackoff;
GetNumNgrams;
Print;
GetHistToStateMap;
GetProb;
PruneEmptyStates;
EnsureStructurallyNeededNgramsExist;
PrintAsFst;
GetProtectedNgrams;
PruneNgram;
PruningLogprobChange;
GetLikeChangeFromPruningNgram;
PruneToIntermediateTarget;
GetNumExtraNgrams;
PruneToFinalTarget;
IntToString;
PrintAsArpa;
farcompile;
make_kenlm;
make_symbol_list;
NgramMerge;
make_arpa;
test_perplexity;
_parse_args;
ngrammerge;
arpa2mod;
process_config;
replace_hf_weights;
adjust_nemo_config;
create_rename_keys;
rename_model_keys;
BertModel;
hf_tokenizer;
hf_model;
nemo_model;
convert_state_dict;
get_new_key;
load_falcon_config;
get_original_key;
verify;
_set_global_memory_buffer;
param_remapper;
nest_params;
from_params;
load_params;
device_get;
verify_forward;
replace_hf_weights_and_tokenizer;
convert_slow_tokenizer;
GemmaTokenizerFast;
_set_default_tensor_type;
pyt_model;
get_config_for_2b;
get_config_for_7b;
CausalLM;
get_dtype;
get_mcore_model_from_nemo_file;
print_mcore_parameter_names;
restore_model;
run_sanity_checks;
MegatronGriffinModel;
LlamaTokenizerFast;
reverse_adjust_tensor_shapes;
restore_model_from_checkpoint;
load_mistral_ckpt;
LazyStateDict;
parse_precision;
make_trainer;
is_dict;
md5_checksum;
save_to_nemo;
make_token_name;
load_hf_model_args;
load_mixtral_ckpt;
get_tokenizer_path;
make_sentencepiece_tokenizer;
init_spm;
ParseDict;
ModelProto;
SentencePiece;
load_fp8_config;
get_nemo2_model;
convert_hf_config;
convert_tiktoken;
extract_nemotron_tokenizer;
PreTrainedTokenizerFast;
converted;
TikTokenConverter;
LlamaConverter;
Qwen2TokenizerFast;
hf_text_model;
hf_vision_model;
filter_keys;
rule;
map_keys;
split_name;
numdots;
model_to_tree;
SegTree;
load_hf_ckpt;
dup_convert_name_recursive;
hf_to_nemo_mapping;
convert_input_keys;
map_resnet_block;
map_attention_block;
clean_convert_names;
check_att_type;
is_leaf;
convert_cond_keys;
convert_middle_keys;
convert_output_keys;
convert_finalout_keys;
convert_encoder;
convert_decoder;
load_sc2_ckpt;
corrupt_linear_weight_;
map_target_modules_to_canonical;
reformat_module_names_to_canonical;
convert_lora;
fix_for_O2;
calculate_score;
train_model_selection;
make_pipeline;
StandardScaler;
LogisticRegression;
subsample_manifest;
cleanup_subsampled_manifests;
compute_all_confidences;
ConfidenceSpec;
find_best_confidence;
BuildEnsembleConfig;
ConfidenceEnsembleModel;
get_grid_size;
test_confidence_ensemble;
parametrize;
TextProcessingConfig;
get_out_dir_name;
process_row;
__convert_audio;
__process_set;
__retrieve_with_progress;
__extract_all_files;
extract_file;
__process_data;
process_files;
DictReader;
rate;
channels;
ThreadPool;
urlretrieve;
unpack_archive;
__create_manifest;
__process_transcript;
ZipFile;
__get_vocab;
__write_sample;
__partition_name;
__normalize;
__process_utterance;
__process_one_file;
get_utt_id;
convert_utterances;
create_wavs;
process_transcripts;
StmUtterance;
_replace;
write_one_segment;
segment_audio;
attrgetter;
download_slurp;
process_raw_annotations;
decode_resample_slurp;
process_map;
__construct_filepaths;
__construct_silence_set;
__rebalance_files;
__prepare_metadata;
__get_mp_chunksize;
split_train_val_test;
process_google_speech_train;
load_list_write_manifest;
rebalance_json;
generate_variety_noise;
convert_arp_to_ipa;
syllabify;
_get_arpabet_to_ipa_mapping;
convert_cmu_arpabet_to_ipa;
read_wikihomograph_file;
correct_wikihomograph_data;
convert_wikihomograph_data_to_manifest;
convert_cpp_data_to_manifest;
destress;
process_data;
gen_file;
copy_input_files;
get_intents;
get_intent_queries;
get_slot_queries;
process_assistant;
augment_nemo_data;
convert_atis_multi_label;
convert_intent_dictionary;
ids2text;
process_atis;
copyfile;
process_snips;
process_jarvis_datasets;
process_data_for_prompt_learning;
extract_questions;
__process_flac_audio;
__remove_tarred_files;
StratifiedShuffleSplit;
write_wav;
_generate_manifest;
get_audio;
get_text;
_compute_stats;
_get_sup_data_filepath;
get_pitch_stats;
preprocess_ds_for_fastpitch_align;
preprocess_ds_for_mixer_tts_x;
__load_wav;
__generate_mels;
_process_entry;
available_formats;
chunks;
zip_longest;
prepare_paired_mel_spectrograms;
TTSDatasetResynthesizer;
resynthesized_batches;
argument_parser;
resynthesize_batch;
Normalizer;
normalizer_call;
__save_json;
__text_normalization;
from_records;
add_normalized_text;
get_trt_deployable;
nemo_deploy;
run_benchmark;
print_benchmark_results;
benchmark;
setup_torch_dist;
hf_deploy;
HuggingFaceLLMDeploy;
get_parser;
str_to_bool;
UsageError;
store_args_to_json;
IsADirectoryError;
get_nemo_deployable;
MegatronLLMDeployable;
get_vllm_deployable;
vLLMExporter;
NemoQueryLLMHF;
load_lora;
multimodal_datamodule;
DiffusionDataModule;
simple_datamodule;
EnergonMultiModalDataModule;
multimodal_fake_datamodule;
VideoLatentFakeDataModule;
pretrain_xl;
pretrain_l;
train_mock;
mock_ditllama5b_8k;
mock_dit7b_8k;
pretrain_7b;
pretrain_7b_pack;
pretrain_7b_256p_joint;
pretrain_7b_256p_joint_pack;
pretrain_ditllama5b;
pretrain_ditllama30b;
pretrain_ditllama30b_stage2_mock;
pretrain_ditllama30b_stage3_mock;
pretrain_ditllama5b_stage3_mock_with_pp;
pretrain_ditllama30b_stage3_mock_with_pp;
pretrain_ditllama1b;
pretrain_ditllama3b;
pretrain_ecditllama1b;
dreambooth;
symlink;
ArgumentTypeError;
nemo_export_trt_llm;
get_clip_score;
encode_image;
plot_fid_vs_clip;
annotate;
flux_datamodule;
flux_controlnet_training;
convergence_test;
fp8_test;
convergence_tp2;
full_model_tp2_dp4_mock;
unit_test;
flux_training;
initialize_oauth;
unpickle_object;
OAuth2Session;
authorization_url;
fetch_token;
pickle_object;
instantiate_session;
HTTPAdapter;
mount;
refresh_token;
is_resource_limited;
prepare_client;
set_token;
get_text_query_with_resource_limit_checks;
text_search;
with_traceback;
get_resource_with_auto_refresh;
download_song;
get_songs_by_category;
next_page;
resample_file;
set_output_format;
set_input_format;
parallelCCompile;
_setup_compile;
_get_cc_args;
_compile;
compile_test;
_single_compile;
dryrun;
CosineAnnealingScheduler;
get_data_module;
data_module_cls;
PruningConfig;
read_chat_template;
find_audio_files;
create_chosen_rejected_records;
filter_best_and_worst_records;
normalize_rejected_rewards;
pareto_rank;
is_dominated;
standard_normal_cdf;
create_audio_context_record;
create_text_context_record;
calculate_rouge;
BootstrapAggregator;
aggregate;
add_scores;
load_ref;
load_preds;
metric_max_over_ground_truths;
RTLConverter;
generate_question_answers;
rewrite_dense_caption;
generate_one;
Message;
wrapped_generate;
batch_generate;
imap_unordered;
read_text;
convert_single_parquet_to_tar;
read_parquet;
generate_wdinfo;
YAML;
nemo_convert;
read_batch;
tokenize_line;
line_len;
get_lang;
get_edges_in_1_file;
get_edges_and_num_lines;
filter_pairs;
get_lock;
filter_singles;
filter_by_lang;
_cat_results;
cat_results;
map_async;
ready;
filter_by_length_and_ratio;
plot_timing;
xticks;
yticks;
tokenize_normalize;
aug_switch_near_letters;
aug_drop_letter;
simulate_typos;
build_map;
njit;
_dedup;
dedup;
calculate_start_end;
process_sentence_chunks;
get_sentence_chunks;
calculate_embedding;
_get_model_type_block_layer;
package_into_nemo_file;
pre_pad_dataset;
PackingArgs;
add_argument_group;
initializer;
IdentitySplitter;
PunktSentenceTokenizer;
CustomLanguageVars;
fix_text;
remove_newline_and_detokenize;
write_dataset_to_file;
proc_func;
process_folder;
ComboRetrievalServer;
DynamicRetrievalServer;
RetrievalServer;
RetroDemoWebApp;
calculate_key;
Worker;
process_result;
request;
req;
data_clean;
encode_labels;
parse_conversations;
get_data_records;
merge_train_folder;
_feature_config;
FixedLenFeature;
FixedLenSequenceFeature;
write_train_val_test_dataset_to_file;
TFRecordDataset;
parse_single_example;
process_all_folders;
find_task_splits_and_features_dict;
parse_cli_args;
get_nemorun_home;
bool_arg;
list_of_strings;
get_user_configs;
set_primary_perf_configs;
get_comm_overlap_callback_idx;
set_exp_logging_configs;
import_ckpt_experiment;
isfile_train_pack_metadata;
override_recipe_configs;
mlperf_lora_llama2_70b_recipe;
TransformerLayerTPOverlapCfg;
RingExchangeOverlapCfg;
PipelineOverlapCfg;
BulkOverlapCfg;
get_seg_info_from_ctm_line;
get_unaligned_files;
load_librispeech_alignment;
create_librispeech_ctm_alignments;
create_manifest_with_alignments;
split_into_pairwise_rttm;
generate_manifest_entry;
get_pyannote_objs_from_rttms;
make_meta_dict;
make_trans_info_dict;
read_file_path;
filter_manifest_line;
count_and_consider_only;
run_multispeaker_data_analysis;
suptitle;
histplot;
visualize_multispeaker_data;
estimate_token_buckets;
fromarrays;
_estimate_output_token_buckets;
describe;
Series;
apply_tokenizer;
RejectionsCounter;
print_report;
argument;
NeMoMultimodalConversationTarWriter;
oomptimizer;
set_per_process_memory_fraction;
echo;
get_max_seq_lens;
ProfilingBatchGenerator;
secho;
_determine_lens_for_bucket;
gen_;
gen;
reset_max_memory_allocated;
type_cast_value;
BadParameter;
prepare_output_dirs;
infer_dataset_segments;
prepare_audio_filepath;
build_map_dataset_to_nemo_func;
convert_offline_dataset_to_nemo;
convert_streaming_dataset_to_nemo;
process_dataset;
cast_column;
rename_column;
map_dataset_to_nemo;
create_tar_datasets;
ASRTarredDatasetBuilder;
ASRTarredDatasetMetadata;
ASRTarredDatasetConfig;
configure;
create_new_dataset;
setup_history;
create_concatenated_dataset;
DALITarredIndexConfig;
get_current_datetime;
_read_manifest;
estimate_dynamic_bucketing_duration_bins;
estimate_duration_buckets;
_write_to_tar;
_create_shard;
process_index_path;
IndexCreator;
create_index;
estimate_data_weights;
parse_temperature;
aggregate_group_weights;
reweight;
Choice;
quick_iter_options;
temperature_reweighting;
duration_ok;
sort_two_arrays;
_estimate_token_buckets;
find_non_outliers_z_score;
tokcls;
filter_tarred;
set_dill_enabled;
read_cutset;
bg_load;
to_shar;
export_to_nemo_tarred;
attach_custom;
select_shards;
create_shards;
next_multiple_of_64;
combine_manifests;
create_cs_data;
create_cs_manifest;
get_experiment_params;
RNNTDecodingConfig;
get_input_manifest;
maybe_save_features;
extract_features;
FeatureExtractor;
segment_wav;
segment_batch;
load_wav;
save_pitch_contour;
compute_pitch_stats;
_is_valid_pitch;
AudioDataset;
get_ssl_features_disentangled;
edit_spt_model;
ParseFromString;
LoadFromSerializedProto;
worker;
__build_document_from_manifests;
BertWordPieceTokenizer;
save_model;
dropna;
load_image;
model_hf;
ClipTaskEncoder;
CLIPConfigB32;
ClipMockDataModule;
add_handlers;
Gemma3VLMockDataModule;
gemma3_forward_step;
SingleBatchIterator;
Llama2Config7B;
LlavaNextTaskEncoder;
LlavaNextMockDataModule;
LlavaNextConfig7B;
configure_recipe;
run_pretraining;
run_finetuning;
ImageToken;
ImageDataConfig;
MLlamaPreloadedDataModule;
MLlamaMockDataModule;
MLlamaTemplateConfig;
LlamaTaskEncoder;
vlm_generate;
run_training;
NevaConfig;
NevaPreloadedDataModule;
NevaMockDataModule;
MegatronCommOverlapCallback;
LLaVATemplateConfig;
NevaTokenizer;
legacy_generate;
Llava15Config7B;
get_gpt_modelopt_spec;
Qwen2VLImageProcessor;
llm_config_class;
Qwen2VLDataConfig;
Qwen2VLPreloadedDataModule;
Qwen2VLMockDataModule;
Qwen2VLTaskEncoder;
process_vision_info;
Llama4ScoutExperts16Config;
Llama4TaskEncoder;
EnergonDataModule;
Llama4MockDataModule;
NsysCallback;
Llama4TaskEncoderConfig;
loadtxt;
get_top_comments;
today;
pytest_addoption;
addoption;
getoption;
run_only_on_device_fixture;
fixture;
get_closest_marker;
downloads_weights;
run_nightly_test_for_qa;
cleanup_local_folder;
reset_singletons;
reset_env_vars;
test_data_dir;
extract_data_from_tar;
k2_is_appropriate;
exception;
k2_cuda_is_enabled;
pytest_configure;
addinivalue_line;
testclass_downloads;
test_test_data_dir;
fresh_dummy_dist;
test_single_gpu;
delenv;
test_auto_bootstrap;
setenv;
test_preinitialised_rank0;
test_exception_path;
raises;
test_count_tail_padding;
test_compute_cross_entropy_basic;
test_compute_cross_entropy_ignore_index;
test_chunked_cross_entropy_matches_compute_cross_entropy;
test_chunked_cross_entropy_ignore_index_and_mask;
test_fused_cross_entropy;
skipif;
test_masked_cross_entropy_no_mask;
test_masked_cross_entropy_with_mask;
test_masked_cross_entropy_gpu;
rnnt_test_helper;
rnn_loss_sample_data;
fast_conformer_transducer_model;
fast_conformer_ctc_model;
fast_conformer_hybrid_model;
canary_1b_flash;
wrap_and_call;
get_sample_small;
RnntLossSampleData;
get_sample_small_blank_last;
get_sample_medium;
get_sample_small_random;
get_sample_medium_random_var_size;
speech_classification_model;
frame_classification_model;
test_constructor;
test_forward;
test_vocab_change;
test_transcription;
test_EncDecClassificationDatasetConfig_for_AudioToSpeechLabelDataset;
test_reshape_labels;
test_EncDecClassificationDatasetConfig_for_AudioToMultiSpeechLabelDataset;
conformer_ctc_bpe_model;
test_graph_building;
test_run_word_spotter;
test_merge_alignment_with_ws_hyps;
test_compute_fscore;
test_predict_step;
DummyManifest;
test_decoding_change;
test_change_conv_asr_se_context_window;
test_change_conv_asr_se_context_window_no_config_update;
test_dataclass_instantiation;
test_ASRDatasetConfig_for_AudioToCharDataset;
test_ASRDatasetConfig_for_TarredAudioToCharDataset;
with_downloads;
test_save_restore_artifact;
test_save_restore_artifact_spe;
test_save_restore_artifact_agg;
test_ASRDatasetConfig_for_AudioToBPEDataset;
test_ASRDatasetConfig_for_TarredAudioToBPEDataset;
decode_chars;
decode_subwords;
test_tarred_dataset;
test_tarred_dataset_filter;
test_mismatch_in_model_dataloader_config;
test_tarred_bpe_dataset;
test_dali_char_dataset;
test_dali_bpe_dataset;
test_dali_char_vs_ref_dataset;
ref_preprocessor;
test_tarred_dali_char_dataset;
test_dali_tarred_char_vs_ref_dataset;
test_feature_to_text_char_dataset;
test_feature_to_text_bpe_dataset;
test_feature_with_rttm_to_text_char_dataset;
test_feature_with_rttm_to_text_bpe_dataset;
test_cache_datastore_manifests;
patch;
cmp;
fake_get;
speaker_label_model;
citrinet_model;
citrinet_rnnt_model;
conformer_model;
squeezeformer_model;
test_EncDecCTCModel_export_to_onnx;
run_only_on;
test_EncDecClassificationModel_export_to_onnx;
test_EncDecSpeakerLabelModel_export_to_onnx;
test_EncDecCitrinetModel_export_to_onnx;
test_ConformerModel_export_to_onnx;
test_SqueezeformerModel_export_to_onnx;
test_EncDecCitrinetModel_limited_SE_export_to_onnx;
test_EncDecRNNTModel_export_to_onnx;
test_EncDecRNNTModel_export_to_ts;
test_EncDecCTCModel_adapted_export_to_onnx;
setup_method;
test_seq_len;
fb_module;
test_random_stft_sizes;
test_random_stft_sizes_exact_pad;
hybrid_asr_model;
test_decoding_type_change;
test_GreedyRNNTInferConfig;
test_GreedyBatchedRNNTInferConfig;
test_BeamRNNTInferConfig;
test_greedy_decoding;
RNNTDecoder;
RNNTJoint;
greedy_class;
greedy;
test_greedy_multi_decoding;
test_greedy_decoding_stateless_decoder;
StatelessTransducerDecoder;
test_greedy_multi_decoding_stateless_decoder;
test_greedy_decoding_preserve_alignment;
test_beam_decoding;
beam;
test_beam_decoding_preserve_alignments;
test_greedy_decoding_SampledRNNTJoint;
SampledRNNTJoint;
test_beam_decoding_SampledRNNTJoint;
jasper_encoder_config;
conformer_encoder_config;
squeezeformer_encoder_config;
mktemp;
test_lhotse_asr_dataset;
test_lhotse_asr_dataset_metadata;
getattr2;
test_change_save_restore;
test_train;
build_char_tokenizer_with_vocabulary;
Mock;
StringIO;
__string_to_ctc_tensor;
__reference_string_to_tensor;
get_wer;
wer;
test_wer_function;
test_wer_metric_simple;
get_wer_ctc;
test_wer_metric_randomized;
__random_string;
test_wer_metric_decode;
test_wer_metric_return_hypothesis;
test_wer_metric_subword_return_hypothesis;
decode_token_to_str_with_vocabulary_mock;
get_wer_rnnt;
test_rnnt_wer_metric_simple;
test_rnnt_wer_metric_randomized;
test_char_decoding_logprobs;
test_subword_decoding_logprobs;
test_char_decoding_labels;
test_subword_decoding_labels;
test_AudioToMelSpectrogramPreprocessor_config;
test_AudioToMelSpectrogramPreprocessor_batch;
instance1;
test_AudioToMelSpectrogramPreprocessor_gpu;
instance0;
test_SpectrogramAugmentationr_legacy;
SpectrogramAugmentation;
test_SpectrogramAugmentationr_vectorized;
test_SpectrogramAugmentationr_numba_kernel;
test_SpectrogramAugmentationr_config;
test_CropOrPadSpectrogramAugmentation;
CropOrPadSpectrogramAugmentation;
test_CropOrPadSpectrogramAugmentation_config;
test_MaskedPatchAugmentation;
MaskedPatchAugmentation;
test_MaskedPatchAugmentation_config;
test_RNNTDecoder;
test_RNNTJoint;
jointnet;
test_HATJoint;
test_prompted_dataset;
CanaryPromptFormatter;
canary2_tokenizer;
CanaryTokenizer;
test_prompted_dataset_canary2;
Canary2PromptFormatter;
test_aed_timestamp_processing;
test_training_step;
dummy_cut;
test_validation_step;
test_prompt_change;
test_prompt_change_subclass;
test_transcribe_single_file;
test_transcribe_single_file_translation;
test_transcribe_return_hypothesis;
test_transcribe_tensor;
test_build_tokenizer;
test_FrameBatchMultiTaskAED;
test_FrameBatchMultiTaskAED_with_timestamps;
approx;
test_from_batchnorm;
fused_bn;
test_replace_bn_with_fused_bn;
test_replace_bn_with_fused_bn_all;
speech_regression_model;
EncDecRegressionModel;
max_symbols_setup;
DummyRNNTDecoder;
DummyRNNTJoint;
joint_type;
test_multiblank_rnnt_greedy_decoding;
test_greedy_decoding_preserve_frame_confidence;
test_greedy_decoding_max_symbols_alignment;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols;
test_greedy_decoding_max_symbols_confidence;
test_save_restore_nested_model;
NestedRNNTModel;
test_ssb_sampler;
test_model_creation_2models;
test_model_creation_5models;
test_stochastic_depth_model_creation;
test_stochastic_depth_forward;
test_bypass_pre_encode_forward;
test_error_shape_invalid_bypass_pre_encode_forward;
special_tokenizer_path;
lang_tokenizer_path;
test_canary_tokenizer_build_special_tokenizer;
IdToPiece;
test_canary_tokenizer_init_from_cfg;
DummyModel;
fastpitch_model;
fastpitch_model_path;
conformer_ctc_bpe_bn_model;
conformer_ctc_bpe_bn_model_path;
conformer_rnnt_bpe_bn_model;
conformer_rnnt_bpe_bn_model_path;
asr_model_ctc_bpe_config;
asr_tts_ctc_bpe_model;
test_from_pretrained_ctc_model;
test_from_pretrained_rnnt_model;
test_from_asr_config;
test_save_restore;
test_save_restore_asr;
test_from_pretrained_ctc_model_fused_bn;
jasper_base_config;
check_module_exists;
test_basic_block;
test_residual_block;
test_basic_block_repeat;
test_basic_block_repeat_stride;
test_basic_block_repeat_stride_last;
test_basic_block_repeat_separable;
test_basic_block_stride;
test_residual_block_stride;
test_residual_block_activations;
test_residual_block_normalizations;
test_residual_block_se;
test_residual_block_asymmetric_pad_future_contexts;
test_residual_block_asymmetric_pad_future_context_fallback;
test_padding_size_conv1d;
contrust_jasper_block;
test_blocks_with_same_input_output_channels_sum_residual;
test_blocks_with_different_input_output_channels_sum_residual;
test_blocks_with_same_input_output_channels_conv_residual;
test_blocks_with_different_input_output_channels_conv_residual;
test_single_block;
test_tower_dropout;
assert_close;
_traverse;
test_tarred_dataset_duplicate_name;
test_feat_seqlabel_dataset;
test_feat_label_dataset;
test_audio_multilabel_dataset;
n_gpu_lm;
kenlm_wrapper;
test_load;
test_initial_states;
test_triton_vs_pytorch_random_states;
test_final;
test_sentences;
test_save_load_nemo;
test_save_load_from_file;
test_single_channel_input;
test_multi_channel_input;
test_select_more_channels_than_available;
test_init_single_channel;
test_from_file;
test_noise_perturb_channels;
test_silence_perturb;
SilencePerturbation;
test_audio_segment_from_file;
test_audio_segment_multichannel_with_list;
test_audio_segment_trim_match;
TrimSetup;
hanning;
denoise_mlm_ssl_model;
test_contr_nonquant;
test_contr_mlm;
test_contr_mlm_multi;
test_forward_masked;
set_multiprocessing_method;
speakers_path;
textonly_manifest_path;
textonly_unnormalized_manifest_path;
tts_normalizer;
asr_tokenizer;
tts_tokenizer;
field;
TextTokenizerCfg;
test_text_to_text_dataset;
test_text_to_text_dataset_unnormalized;
test_text_to_text_iterable_dataset;
conformer_rnnt_bpe_model;
audio_and_texts;
test_run_confidence_benchmark;
test_deprecated_config_args;
GreedyBatchedRNNTInferConfig;
GreedyCTCInferConfig;
test_metric_main;
test_metric_all_correct;
test_metric_all_incorrect;
test_metric_auc_yc_aux;
test_save_confidence_hist;
test_save_simple_confidence_curve;
plot_func;
test_save_custom_confidence_curve;
get_measure_parametrize_ranges;
get_aggregation_parametrize_ranges;
test_measure_bank;
test_confidence_measures_one;
measure;
test_confidence_measures_zero;
test_confidence_measures_partial_order;
test_aggregation_bank;
test_confidence_agregation_simple;
aggregation;
an4_val_manifest_corrected;
an4_train_manifest_corrected;
assert_nested_lists_approx;
assert_hyps_sequence_equal;
assert_hyps_timestamps_equal;
avoid_sync_operations;
set_sync_debug_mode;
test_rnnt_instantiate;
test_rnnt_instantiate_incorrect_batch_size;
test_rnnt_instantiate_incorrect_beam_size;
test_rnnt_instantiate_incorrect_init_length;
test_rnnt_add_results;
test_rnnt_add_multiple_results;
test_rnnt_add_with_invalid_results;
test_tdt_instantiate;
test_tdt_instantiate_incorrect_batch_size;
test_tdt_instantiate_incorrect_beam_size;
test_tdt_instantiate_incorrect_init_length;
test_tdt_add_results;
test_tdt_add_multiple_results;
test_tdt_add_with_invalid_results;
test_rnnt_flatten_sort;
test_rnnt_flatten_sort_norm;
test_rnnt_to_hyps_list;
test_rnnt_to_nbest_hyps_list;
test_tdt_flatten_sort;
test_tdt_flatten_sort_norm;
test_tdt_to_hyps_list;
test_tdt_to_nbest_hyps_list;
test_instantiate;
test_instantiate_incorrect_batch_size;
test_instantiate_incorrect_init_length;
test_add_results;
test_add_multiple_results;
test_add_results_masked;
test_add_results_masked_no_checks;
test_add_multiple_results_masked;
test_torch_jit_compatibility_add_results;
hyps_add_wrapper;
test_torch_jit_compatibility_add_results_masked;
test_torch_jit_compatibility;
alignments_add_wrapper;
test_convert_to_hypotheses;
test_convert_to_hypotheses_with_alignments;
test_audio_filenames;
rnnt_model;
tdt_model;
get_rnnt_encoder_output;
get_model_encoder_output;
get_tdt_encoder_output;
kenlm_model_path;
print_unit_test_info;
check_res_best_hyps;
print_res_best_hyps;
check_res_nbest_hyps;
print_res_nbest_hyps;
decode_text_from_hypotheses;
decode_text_from_nbest_hypotheses;
test_rnnt_beam_decoding_return_best_hypothesis;
test_rnnt_beam_decoding_return_nbest;
test_rnnt_beam_decoding_kenlm;
test_tdt_beam_decoding_return_best_hypothesis;
test_tdt_beam_decoding_return_nbest;
test_tdt_beam_decoding_kenlm;
test_stated_stateless;
test_stated_stateless_bf16;
tmp_tokenizer;
_TmpASRBPE;
check_char_timestamps;
check_subword_timestamps;
char_vocabulary;
test_constructor_subword;
test_char_decoding_greedy_forward;
test_char_decoding_greedy_forward_hypotheses;
test_subword_decoding_greedy_forward;
test_subword_decoding_greedy_forward_hypotheses;
test_batched_decoding_logprobs;
param;
test_batched_decoding_labels;
stt_en_fastconformer_transducer_xlarge;
stt_en_fastconformer_transducer_xxlarge;
stt_en_fastconformer_transducer_large;
stt_en_fastconformer_tdt_large;
test_cuda_graph_rnnt_greedy_decoder;
getfixturevalue;
xfail;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode;
test_loop_labels_cuda_graph_ddp_mixed_precision;
test_change_devices;
deterministic_rng;
get_rng_state;
set_rng_state;
decoder_nm;
nnet;
inputs;
test_temperature_sampling_decoding;
test_beam_decoding_beam_scores_false;
test_beam_decoding_beam_scores_true;
test_beam_decoding_beam_scores_true_with_lm;
prompted_inputs;
test_transformer_aed_beam_infer_strips_prompt;
test_transformer_aed_greedy_infer_strips_prompt;
stt_en_conformer_transducer_small_model;
get_rnnt_alignments;
TranscriptionConfig;
test_rnnt_alignments;
get_rnnt_decoder;
get_rnnt_joint;
decode_text_from_greedy_hypotheses;
check_beam_decoding;
check_tdt_greedy_decoding;
decoding_algo;
test_greedy_decoding_preserve_alignments;
test_batched_greedy_decoding_preserve_alignments;
search_algo;
etalon_search_algo;
test_rnnt_beam_decoding_preserve_alignments;
test_subword_decoding_compute_timestamps;
test_char_decoding_compute_timestamps;
test_tdt_greedy_decoding;
test_tdt_beam_decoding;
test_tdt_beam_decoding_with_kenlm;
importorskip;
init_k2_ctc;
CtcLoss;
ctc;
skip_test_if_unsupported;
test_case_small;
test_case_small_blank_last;
test_case_small_random;
CTCLoss_Pytorch;
test_case_big_tensor;
test_case_large_random;
test_temporal_schema;
is_rand_equivalent;
test_unit_schema;
test_grid_schema;
test_small_compose_transducer;
test_small_grid_transducer;
test_medium_grid_transducer;
test_medium_random_var_size;
RNNTLoss_Numpy;
test_small_random_grid_compose_equivalent;
test_rnnt_logprobs_random;
init_k2_rnnt;
RnntLoss;
test_small_grid_transducer_inf_penalty;
audio_files;
dummy_model;
TranscribableDummy;
test_constructor_non_instance;
test_transcribe;
test_transcribe_generator;
test_transcribe_generator_explicit_stop_check;
test_transcribe_check_flags;
test_transribe_override_config_incorrect;
OverrideConfig;
test_transribe_override_config_correct;
test_transcribe_multiple_tensor;
test_transcribe_dataloader;
test_transcribe_return_nbest_rnnt;
test_transcribe_return_nbest_canary;
test_timestamps_with_transcribe;
test_timestamps_with_transcribe_hybrid;
test_timestamps_with_transcribe_hybrid_ctc_head;
test_timestamps_with_transcribe_canary_flash;
conformer_ctc_adapter;
squeezeformer_ctc_adapter;
multitask_model;
MultiHeadAttentionAdapterConfig;
TransformerMultiHeadAttentionAdapterConfig;
RelPositionMultiHeadAttentionAdapterConfig;
test_class_paths_are_correct;
test_asr_model_constructor;
test_asr_model_constructor_mha_adapter;
test_conformer_constructor_mha_adapter;
test_squeezeformer_constructor_mha_adapter;
test_asr_model_constructor_encoder_module;
test_asr_model_constructor_decoder_module;
test_asr_model_constructor_joint_module_ctc_skip;
test_asr_model_constructor_joint_module_rnnt;
test_asr_multiple_adapter;
test_asr_forward_linear_pre;
test_asr_forward_linear_post;
test_conformer_forward_mha;
test_squeezeformer_forward_mha;
test_canary_forward_mha;
test_canary_forward_mha_decoder_fails_without_support;
test_asr_multi_adapter_forward;
test_asr_multi_adapter_partial_forward;
test_asr_forward_unfrozen_adapters;
test_constructor_pretrained;
test_constructor_pretrained_rnnt;
test_asr_model_adapter_loss;
test_mha_adapter_config;
test_relpos_mha_adapter_config;
test_abs_pos_encoding_adapter_config;
test_rel_pos_encoding_adapter_config;
test_transformer_mha_adapter_config;
test_mha_adapter_init;
MultiHeadAttentionAdapter;
test_relmha_adapter_init;
RelPositionMultiHeadAttentionAdapter;
RelPositionalEncodingAdapter;
relpos_enc;
test_relmha_adapter_with_torch_sdpa;
adapter_torch_sdpa;
test_mha_adapter_with_torch_sdpa;
test_abspos_encoding_init;
PositionalEncodingAdapter;
test_relpos_encoding_init;
test_transformer_mha_adapter_init;
TransformerMultiHeadAttentionAdapter;
test_mha_adapter_strategy;
test_relpos_mha_adapter_strategy;
test_abspos_encoding_adapter_strategy;
test_relpos_encoding_adapter_strategy;
test_transformer_mha_adapter_strategy;
test_case_small_random_fastemit_reg;
test_case_small_clamp;
test_case_small_fastemit_clamp;
test_case_small_random_accumulated;
test_case_randomized_act_label;
test_case_randomized_act_label_no_0_duration;
test_case_fixed_case_act_label;
log_softmax_grad;
test_compute_alphas_kernel;
test_compute_betas_kernel;
test_compute_grads_kernel;
test_compute_grads_kernel_fastemit;
test_compute_grads_kernel_clamp;
test_reduce_max;
to_device;
copy_to_host;
test_reduce_exp;
test_log_sum_exp;
threads_per_block;
test_log_sum_exp_neg_inf;
test_div_up;
test_add;
test_maximum;
test_identity;
test_negate;
test_exponential;
test_log_plus;
test_compute_costs_data;
_kernel;
get_cfg;
launch_kernel;
freq_mask_check;
time_mask_check;
test_spec_aug_kernel;
test_spec_aug_kernel_large_batch;
test_spec_aug_kernel_mask_value;
test_spec_aug_kernel_grad;
test_spec_aug_kernel_no_freq_mask;
test_spec_aug_kernel_no_time_mask;
test_spec_aug_kernel_no_freq_time_mask;
annotator;
get_data_simulation_configs;
generate_words_and_alignments;
test_wrong_type_conf_values;
test_valid_conf_values;
test_invalid_conf_ranges;
test_valid_start_time_duration_with_precision;
test_valid_input;
test_invalid_types_for_time_duration;
test_invalid_conf_values;
test_default_values;
test_binary_search_alignments;
test_normalize_audio;
test_get_cleaned_base_path;
rmdir;
test_get_split_points_in_alignments;
test_add_silence_to_alignments;
test_init;
test_create_new_rttm_entry;
test_create_new_json_entry;
test_create_new_ctm_entry;
test_init_overlap_params;
test_init_silence_params;
test_get_session_silence_mean_pass;
test_get_session_silence_mean_fail;
test_get_session_overlap_mean_pass;
test_get_session_overlap_mean_fail;
test_sample_from_overlap_model;
test_sample_from_silence_model;
test_sample_noise_manifest;
test_silence_vs_overlap_selector;
get_simple_rttm_without_overlap;
get_simple_rttm_with_overlap;
get_simple_rttm_with_silence;
test_align_label_logits;
test_load_speech_segments_from_rttm;
test_load_speech_overlap_segments_from_rttm;
test_get_nonspeech_segments;
test_get_frame_labels;
test_convert_labels_to_speech_segments;
test_read_rttm_as_pyannote_object;
test_frame_vad_construct_pyannote_object_per_file;
test_list_to_multichannel;
test_processor_process_audio;
test_audio_collate_fn;
test_audio_to_target_dataset;
test_audio_to_target_dataset_with_target_list;
test_audio_to_target_dataset_for_inference;
test_audio_to_target_with_reference_dataset;
test_audio_to_target_with_embedding_dataset;
test_check_angle;
test_wrap_to_180;
test_placement_range;
test_convert_rir_to_mc;
test_array_geometry;
test_simulate_room_mix;
test_calculate_mean;
test_calculate_sdr_scale_and_convolution_invariant;
test_calculate_mse_input_and_mask;
test_calculate_mse_invalid_dimensions;
test_calculate_mae_input_and_mask;
test_calculate_mae_invalid_dimensions;
test_sdr;
SDRLoss;
sdr_loss;
test_sdr_weighted;
test_sdr_input_length;
test_sdr_scale_invariant;
test_sdr_binary_mask;
test_sdr_max;
test_target_calculation;
test_sdr_convolution_invariant;
test_sdr_scale_and_convolution_invariant;
test_sdr_length_and_mask;
test_sdr_invalid_weight;
test_sdr_invalid_reduction;
test_mse;
test_mse_weighted;
test_mse_input_length;
test_mse_invalid_weight;
test_mse_invalid_reduction;
test_mse_invalid_ndim;
test_mae;
MAELoss;
test_mae_weighted;
test_mae_input_length;
test_mae_invalid_weight;
test_mae_invalid_reduction;
test_mae_invalid_ndim;
test_maxine_combined_loss;
fromfile;
CombinedLoss;
maxine_model_fixture;
BNR2;
test_forward_infer;
test_metric_full_batch;
SignalNoiseRatio;
wrapped_metric;
ref_metric;
test_input_length;
test_channel;
test_squim_mos;
calculate_squim_mos;
resampler;
test_squim_objective;
squim_objective_model;
calculate_squim_objective;
convert_to_dictconfig;
flow_matching_base_config;
test_flow_matching_model_init;
FlowMatchingAudioToAudioModel;
mock_dataset_config;
flow_matching_model;
flow_matching_model_with_trainer_and_mock_dataset;
test_flow_matching_model_forward;
test_flow_matching_model_step;
test_flow_matching_model_training;
mask_model_rnn_params;
mask_model_rnn;
EncMaskDecAudioToAudioModel;
mask_model_rnn_with_trainer_and_mock_dataset;
mask_model_flexarray;
bf_model_flexarray;
test_model_training;
predictive_model_ncsn;
PredictiveAudioToAudioModel;
predictive_model_conformer;
predictive_model_streaming_conformer;
predictive_model_transformer_unet_params_base;
predictive_model_transformer_unet_params;
predictive_model_transformer_unet;
predictive_model_transformer_unet_with_trainer_and_mock_dataset;
test_adaptive_rms_ebabled_fails;
schroedinger_bridge_model_ncsn_params;
schroedinger_bridge_model_ncsn;
SchroedingerBridgeAudioToAudioModel;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset;
test_score_based_model_init;
ScoreBasedGenerativeAudioToAudioModel;
score_based_model;
score_based_model_with_trainer_and_mock_dataset;
test_score_based_model_forward;
test_score_based_model_step;
test_score_based_model_training;
test_magnitude;
AudioToSpectrogram;
audio2spec;
spec2feat;
test_ipd;
test_num_channels;
test_num_features;
test_unsupported_norm;
uut;
test_mask_reference_channel;
MaskReferenceChannel;
test_wpe_convtensor;
test_wpe_filter;
test_mask_based_dereverb_init;
MaskBasedDereverbWPE;
dereverb;
test_flex_channels;
MaskEstimatorFlexChannels;
test_gss;
MaskEstimatorGSS;
test_masking;
SSLPretrainWithMaskedPatch;
test_unsupported_initialization;
test_mixture_consistency;
MixtureConsistencyProjection;
test_unsupported_weighting;
test_unsupported_inputs;
test_audio_to_spec;
test_spec_to_audio;
SpectrogramToAudio;
spec2audio;
test_audio_to_spectrogram_reconstruction;
test_match_reference_implementation;
audio2spec_ref;
spec2audio_ref;
test_invalid_length;
test_invalid_compression;
test_invalid_spec_to_audio_input;
s2a;
spectrogram_ncsnpp;
SpectrogramNoiseConditionalScoreNetworkPlusPlus;
spectrogram_transformerunet;
SpectrogramTransformerUNet;
spectrogram_conformer;
SpectrogramConformer;
mock_input_3d;
mock_input_4d;
test_ncsnpp_forward;
test_transformerunet_forward;
test_spectrogram_ncsnpp_forward;
test_spectrogram_transformerunet_forward;
test_spectrogram_conformer_forward;
test_euler_sampler_nfe;
IdentityEstimator;
ForwardCounterHook;
ConditionalFlowMatchingEulerSampler;
test_time_generation_bounds_optimal_transport;
OptimalTransportFlow;
test_time_generation_bounds_optimal_transport_negative_examples;
test_channel_selection;
ChannelAugment;
test_average;
test_attend;
test_attention;
test_theoretical_coherence_matrix;
test_generate_approximate_noise_field;
fft_frequencies;
test_rms;
test_db_conversion;
test_get_segment_start;
test_calculate_sdr_numpy;
test_calculate_sdr_numpy_scale_invariant;
test_convmtx_mc;
test_toeplitz;
test_calculate_covariance_matrix_vs_psd;
PSD;
psd_ref;
test_calculate_covariance_matrix;
test_mismatch_dimensions;
setup_ddp;
_class_test;
sk_metric;
_functional_test;
reference_perplexity_func;
_perplexity_class_test;
logits_to_probs;
reference_loss_func;
_loss_class_test;
loss_metric;
setup_class;
teardown_class;
run_functional_metric_test;
run_class_metric_test;
run_class_perplexity_test;
run_class_loss_test;
make_cut;
cuts;
test_2d_bucketing_expected_bucket_allocation;
test_2d_bucketing_filter_lenient;
filter_2d;
test_2d_bucketing_filter_strict;
test_2d_bucketing_filter_strict_max_ratio;
test_2d_bucketing_strict_mode_flag_works;
to_file;
_Identity;
test_chat_template;
test_throws_chat_template;
test_move_data_to_device;
_Batch;
extract_ema_weights;
extract_weights;
RandomDataset;
l1;
SGD;
test_ema_value;
test_ema_saved_state;
ExampleModel;
TerminateCallback;
CheckStateCallback;
test_exp_manager_ema_weights;
test_exp_manager_ema_weights_topk;
test_exp_manager_ema_weights_topk_resume;
test_ema_run_cuda;
run_training_test;
test_ema_run_cpu;
EMAAssertCallback;
EMAValidationAssertCallback;
test_ema_run_with_save_best_model;
cutset_path;
save_audios;
cutset_shar_path;
cutset_shar_path_other;
modify_ids;
nemo_manifest_path;
save_to_jsonl;
nemo_manifest_with_skipme_path;
mc_cutset_path;
MultiCut;
nemo_tarred_manifest_path;
nemo_tarred_manifest_with_skipme_path;
nemo_tarred_manifest_path_multi;
nemo_tarred_manifest_subset_path;
test_dataloader_from_lhotse_cuts;
UnsupervisedAudioDataset;
test_dataloader_from_lhotse_cuts_truncate;
test_dataloader_from_lhotse_cuts_cut_into_windows;
test_dataloader_from_lhotse_cuts_pad_min_duration;
test_dataloader_from_lhotse_cuts_channel_selector;
test_dataloader_from_lhotse_shar_cuts;
test_dataloader_from_lhotse_shar_cuts_via_fields;
test_dataloader_from_lhotse_shar_cuts_add_new_field;
test_dataloader_from_nemo_manifest;
test_dataloader_from_nemo_manifest_has_custom_fields;
test_dataloader_from_tarred_nemo_manifest;
test_dataloader_from_tarred_nemo_manifest_weighted_combination;
test_dataloader_from_tarred_nemo_manifest_multi;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams;
test_dataloader_from_tarred_nemo_manifest_concat;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted;
test_dataloader_from_nemo_manifest_with_text_field;
TextDataset;
test_dataloader_from_nemo_manifest_with_lang_field;
LangDataset;
test_lazy_nemo_iterator_with_offset_field;
assert_equal;
assert_allclose;
test_lazy_nemo_iterator_with_relative_paths;
test_lhotse_cuts_resolve_relative_paths;
NumpyFilesWriter;
store_array;
load_target_recording;
load_some_array;
test_extended_data_input_cfg;
test_extended_data_input_cfg_subgroup;
almost;
test_extended_data_input_cfg_yaml_path;
save_to_yaml;
txt_en_path;
txt_es_path;
questions_path;
test_text_file_input;
test_text_file_pairs_input;
txt_pair_paths_shards;
test_text_file_pairs_shards_input;
en_es_tokenizer;
test_multimodal_text_audio_dataloading;
test_multimodal_text_audio_dataloading_zip_strategy;
test_multimodal_text_audio_dataloading_round_robin_strategy;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy;
test_dataloader_with_noise_nemo_json;
test_dataloader_with_noise_lhotse_jsonl;
test_dataloader_with_noise_nemo_tar;
test_dataloader_with_synth_rir;
test_dataloader_bucket_batch_size;
test_dataloader_2d_bucketing;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample;
nemo_tarred_manifest_path_with_offset;
dummy_recording;
audio_path;
test_dataloader_from_tarred_nemo_manifest_with_offset;
test_force_iterable_dataset;
test_force_map_dataset;
test_dataloader_from_tarred_nemo_subset_manifest;
test_dataloader_from_nemo_manifest_with_skipme;
test_dataloader_from_tarred_nemo_manifest_with_skipme;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme;
multimodal_conversations_path;
test_multimodal_conversation_input;
test_multimodal_conversation_input_with_prompt;
test_text_only_conversation_length_measurement;
Llama2PromptFormatter;
test_audio_only_conversation_length_measurement;
test_multimodal_conversation_length_measurement;
test_multimodal_conversation_tarred_format;
test_multimodal_conversation_tarred_format_sharding_works;
test_dataloader_multiple_ranks_deterministic_rng;
test_dataloader_multiple_ranks_trng;
test_lazy_nemo_iterator;
nemo_offset_manifest_path;
test_lazy_nemo_iterator_with_offset;
test_lazy_nemo_iterator_with_offset_metadata_only;
cuts_path;
getbasetemp;
src_tgt_example;
nemo_sft_example;
test_prompt_format_cut;
test_prompt_format_cut_filtered_out;
test_prompt_format_cut_max_tokens_has_no_filtering_effect;
test_prompt_format_src_tgt;
test_prompt_format_src_tgt_filtered_out;
test_prompt_format_src_tgt_2d;
test_prompt_format_nemo_sft;
test_prompt_format_nemo_sft_filtered_out;
test_cut_duration_filter;
test_cut_token_per_second_filter;
test_cut_passes_by_token_count_and_tpt_filter;
test_src_tgt_token_filter_requires_prompt_formatting;
test_src_tgt_passes_by_duration_filter;
test_src_tgt_token_filter;
test_nemo_sft_token_filter_requires_prompt_formatting;
test_nemo_sft_passes_by_duration_filter;
test_nemo_sft_token_filter;
test_top_1_accuracy;
test_top_1_2_accuracy;
test_top_1_accuracy_distributed;
test_top_1_accuracy_distributed_uneven_batch;
test_loss;
test_punctuation_error_rate;
test_OccurancePunctuationErrorRate;
test_DatasetPunctuationErrorRate;
MockClassWithCudaGraphs;
test_module_toggle_cuda_graphs;
MockModuleWithCudaGraphs;
test_module_toggle_cuda_graphs_by_path;
MockModuleWithCudaGraphsByPath;
test_eval_tflops_per_sec_per_gpu;
test_add_special_tokens;
test_text_to_tokens;
test_tokens_to_text;
test_text_to_ids;
test_ids_to_text;
test_tokens_to_ids;
test_ids_to_tokens;
test_flatten;
test_mask_sequence_tensor;
test_get_full_path_local;
create_files;
test_get_full_path_ais;
test_get_full_path_ais_no_cache;
test_get_full_path_audio_file_len_limit;
rand_name;
test_get_full_path_invalid_type;
test_get_full_path_invalid_relative_path;
test_is_tarred_dataset;
datastore_path_to_cache_path_in_tmpdir;
num_params;
test_get_accepted_adapter_types;
CommonModuleAdapter;
test_set_accepted_adapter_types_reset_types;
test_set_accepted_adapter_types_invalid_class;
get_classpath;
test_linear_adapter_config;
test_linear_adapter_init;
test_linear_adapter_dropout;
test_linear_adapter_norm_position;
test_linear_adapter_strategy;
bpe_tokenizer;
canary_tokenizer;
test_canary_prompt_formatter_training;
test_canary_prompt_formatter_inference;
test_gemma_prompt_formatter_training;
GemmaPromptFormatter;
test_gemma_prompt_formatter_inference;
test_gemma_prompt_formatter_training_bos_eos_inserted_only_once_in_multiturn;
test_llama2_prompt_formatter_training;
test_llama2_prompt_formatter_inference;
test_llama2_prompt_formatter_training_with_system;
test_llama2_prompt_formatter_inference_with_system;
test_mistral_prompt_formatter_training;
MistralPromptFormatter;
test_mistral_prompt_formatter_inference;
test_prompt_formatter_empty_dialog_exception;
_DummyPromptFormatter;
test_prompt_formatter_inference;
test_prompt_formatter_inference_using_content;
test_prompt_formatter_training;
test_prompt_formatter_training_using_content;
test_prompt_formatter_missing_role;
test_prompt_formatter_missing_slots;
test_prompt_formatter_aggregate_tokenizer;
test_prompt_formatter_aggregate_tokenizer_missing_prompt_language;
test_prompt_formatter_preamble_inference;
_DummyPreamblePromptFormatter;
test_prompt_formatter_premble_training;
test_prompt_formatter_explicit_preamble;
test_prompt_formatter_wrong_preamble_excpetions;
test_english_word_tokenize;
_create_expected_output;
test_english_word_tokenize_with_punctuation;
test_english_word_tokenize_with_contractions;
test_english_word_tokenize_with_compound_words;
test_english_word_tokenize_with_escaped;
test_any_locale_word_tokenize;
test_any_locale_word_tokenize_with_accents;
test_any_locale_word_tokenize_with_numbers;
test_any_locale_word_tokenize_fr;
test_any_locale_word_tokenize_with_accents_fr;
_parse_text;
test_english_chars_tokenizer;
test_english_chars_tokenizer_unknown_token;
test_english_chars_tokenizer_accented_character;
test_german_chars_tokenizer;
GermanCharsTokenizer;
test_italian_chars_tokenizer;
ItalianCharsTokenizer;
test_spanish_chars_tokenizer;
SpanishCharsTokenizer;
test_vietnamese_chars_tokenizer;
VietnameseCharsTokenizer;
test_french_chars_tokenizer;
FrenchCharsTokenizer;
test_ipa_tokenizer;
IpaG2p;
IPATokenizer;
test_ipa_tokenizer_unsupported_locale;
test_ipa_tokenizer_de_de;
test_ipa_tokenizer_it_it;
test_ipa_tokenizer_en_us;
test_ipa_tokenizer_es_es;
test_ipa_tokenizer_fr_fr;
test_ipa_tokenizer_fixed_vocab;
test_japanese_phoneme_tokenizer;
JapaneseG2p;
JapanesePhonemeTokenizer;
test_cook_raw_images;
test_flux_12b;
test_flux_535m;
train_data;
small_llama_cfg;
verify_distcp_dir;
verify_ckpt_dir;
_check_attrs;
walk_fn;
ParameterDebugger;
MiscAttributeValidator;
AssertOptimizerParamGroupsHaveAtLeastTwoWeightDecays;
precision_recipe;
MCoreModelAttributeValidator;
PytorchProfilerCallback;
StopBeforeEnd;
create_verify_precision;
mixtral_8x7b;
OrdTokenizer;
get_mixtral_expected_ckpt;
mistral_7b;
get_mistral_expected_ckpt;
make_lora;
load_dcp;
PreTrainingDataModule;
MixtralConfig8x3B;
MegatronOptim;
McoreDDPConfig;
reset_configs;
test_model_validation;
test_data_validation;
test_trainer_validatiopn;
test_output_path_exists_no_overwrite;
Llama32Config1B;
FaultTolerancePlugin;
get_trainer;
get_megatron_strategy;
get_my_local_ckpt_node_dir;
find_latest_local_ckpt_step;
run_test;
Namespace;
Llama3Config145M;
LocalCheckpointCallback;
CrashCallback;
CheckResumeStepCallback;
CrashException;
some_first;
get_dtype_device;
batch_collator;
_reset_megatron_parallel_state;
reset_megatron_parallel_state;
test_train_mnist_litautoencoder_with_megatron_strategy_single_gpu;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu;
LitAutoEncoder;
MNISTDataModule;
ExampleConfig;
MSELossReduction;
test_loss_reduction;
predict_loss_reduction;
PassthroughLossReduction;
linear3;
relu2;
linear4;
MNISTCustom;
random_split;
test_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu;
TorchAdam;
align_labels;
TransformerEncoderLayer;
test_calculate_model_size;
test_calculate_train_time;
test_modify_cfg;
test_calculate_model_size_utils;
test_model_size_params;
test_gpt_grid_search;
GPT3GridSearch;
test_bert_grid_search;
BertGridSearch;
test_t5_grid_search;
T5GridSearch;
get_auto_configs;
test_llama_model;
test_mistral_model;
test_mixtral_model;
test_gemma_model;
test_nemotron_model;
test_finetune_lora;
test_finetune_dora;
test_finetune;
mock_average_losses;
mock_distributed;
test_hard_negative_ranking_loss;
HardNegativeRankingLoss;
test_average_losses_mock;
test_bert_in_batch_negatives_loss;
test_bert_loss_with_sop;
test_bert_loss_forward_with_sop;
test_bert_in_batch_negatives_init;
test_bert_in_batch_forward_validation;
test_sentence_order_prediction;
create_temp_dataset_files;
temp_dataset_dir;
basic_datamodule;
BERTPreTrainingDataModule;
test_initialization_with_weighted_paths;
test_initialization_with_dict_paths;
test_rampup_batch_size;
test_state_dict_and_load_state_dict;
MagicMock;
assert_called_once_with;
test_reconfigure_limit_batches;
temp_jsonl_file;
test_get_dataset_root;
test_bert_embedding_dataset_train;
MockTokenizer;
test_bert_embedding_dataset_query;
test_bert_embedding_dataset_doc;
test_create_sft_dataset;
test_truncation_methods;
test_collate_fn_all_data_types;
test_collate_fn_attention_mask;
test_collate_fn_batch_size_handling;
test_collate_fn_metadata_handling;
dataset_root;
mock_tokenizer;
FineTuningDataModule;
test_init_default_values;
test_create_dataset;
assert_called_once;
test_train_dataloader;
test_setup_with_max_train_samples;
test_consumed_samples_calculation;
test_tokenizer_initialization;
test_val_dataloader;
test_test_dataloader;
test_extract_tokenizer_model_name;
configure_mock;
create_mock_tokenizer;
mock_data_module;
BERTMockDataModule;
test_mock_bert_dataset_length;
test_mock_bert_dataset_item_shapes;
test_data_module_train_dataloader;
test_data_module_val_dataloader;
test_data_module_test_dataloader;
test_mock_bert_dataset_deterministic;
test_data_module_batch_sizes;
mock_trainer;
mock_sampler;
sample_specter_dataset;
DatasetDict;
specter_data_module;
SpecterDataModule;
test_preprocess_and_split_data;
test_force_redownload;
test_delete_raw;
test_huggingface_bert_base_config;
HuggingFaceBertBaseConfig;
test_huggingface_bert_large_config;
HuggingFaceBertLargeConfig;
test_megatron_bert_base_config;
MegatronBertBaseConfig;
test_megatron_bert_large_config;
MegatronBertLargeConfig;
mock_ctx;
MockConfig;
test_import_qkv;
test_import_qkv_bias;
test_import_embedding;
test_import_output_bias;
test_export_qkv;
test_export_qkv_bias;
test_export_embedding;
sample_batch;
sample_packed_batch;
basic_config;
test_get_batch_on_this_cp_rank_no_cp;
test_get_packed_seq_params;
test_bert_model_initialization;
test_bert_forward_step;
test_bert_forward_step_with_tokentypes;
test_bert_forward_step_with_packed_seqs;
test_bert_model_training_step;
test_bert_model_validation_step;
test_get_batch_with_context_parallel;
setup_parallel_state;
mock_config;
mock_submodules_config;
test_bert_embedding_data_step;
test_bert_embedding_data_step_tuple_input;
test_bert_embedding_forward_step;
test_training_loss_reduction_initialization;
BertEmbeddingMiniConfig;
test_validation_loss_reduction_initialization;
test_embedding_head_forward;
test_embedding_head_masked_tokens;
test_large_config;
BertEmbeddingLargeConfig;
test_mini_config;
mock_cuda;
compare_ckpts;
remove_module_from_key;
remove_module_from_dict_keys;
count_parameters;
add_row;
input_tensor;
larger_input_tensor;
test_openai_gelu;
test_quick_gelu;
test_squared_relu;
test_activation_shapes;
test_gelu_implementation_equivalence;
paper_gelu;
test_squared_relu_0;
test_gradient_flow;
add_relu;
add_relu_named;
add_relu_first;
test_map_identity;
test_map_transform;
test_walk_custom_module;
CustomMLP;
test_walk_shared_module;
SharedMLP;
test_leaf_only;
test_walk_module_container;
module_container;
test_walk_module_container_with_kwargs;
test_walk_module_container_with_recursion;
test_walk_module_dict_identity;
test_walk_module_dict_transform;
double_linear;
is_linear;
MockModule;
test_forall_true;
test_forall_false;
test_map;
test_walk;
test_freeze;
test_unfreeze;
sample_alpaca_dataset;
alpaca_data_module;
AlpacaDataModule;
test_prepare_data;
test_dataloaders;
sample_chat_dataset;
chat_data_module;
ChatDataModule;
test_create_dataset_with_hf_template;
test_nemo_format;
test_messages_format;
test_mask_no_assistant;
test_multi_turn;
test_tool_calling;
test_gpt_sft_dataset_initialization;
test_dataset_getitem;
test_dataset_collate_fn;
test_dataset_truncation;
test_dataset_padding;
temp_chat_jsonl_file;
temp_npy_file;
test_multiple_truncation;
test_separate_template;
test_chat_dataset;
test_packed_dataset;
test_packed_dataset_no_pad_cu_seqlens;
test_packed_dataset_invalid_data;
test_virtual_tokens;
test_ceil_to_power_2;
test_attention_mask_from_fusion;
test_output_original_text;
test_negative_indexing;
test_special_tokens;
sample_dolly_dataset;
dolly_data_module;
test_validate_batch_size_for_packed_sequence;
packed_files;
test_packed_sequence_paths;
test_create_dataset_with_different_modes;
test_default_pack_path;
test_pack_metadata_paths;
test_pad_cu_seqlens_property;
test_load_single_split;
test_load_single_split_with_subset;
test_load_nonexistent_split;
test_load_multiple_split;
test_load_multiple_split_with_subset;
test_validate_dataset_asset_accessibility_file_does_not_exist;
test_validate_dataset_asset_accessibility_file_is_none;
sample_dataset;
data_module;
squad_data_module;
SquadHFDataModule;
test_formatting_prompts_func;
test_make_dataset_splits_single_dataset;
test_make_dataset_splits_dataset_dict;
test_make_dataset_splits_invalid_split;
test_make_dataset_splits_with_list;
test_collate_fn;
test_batchify;
test_extract_key_from_dicts;
test_pad_within_micro;
test_squad_data_module_no_download;
test_squad_data_module_with_pth_dataloader_init;
SquadDataModuleWithPthDataloader;
sample_hf_dataset;
sample_hf_dataset_dict;
test_single_dataset_str_split;
test_dataset_dict_splits;
test_list_dataset_splits;
test_single_dataset_with_plus_sign;
test_single_dataset_with_bracket;
test_invalid_split_type_raises;
test_no_alias_match_raises;
test_basic_packing;
test_split_across_pack;
test_position_ids_padding;
test_error_handling;
test_dataloader_integration;
test_preprocess;
test_process_doc;
test_preprocess_dataset;
assert_called;
test_mock_gpt_dataset_length;
test_mock_gpt_dataset_item_shapes;
sample_govreport_dataset;
govreport_data_module;
MLPerfGovReportDataModule;
test_invalid_packed_sequence_size;
test_mock_gpt_dataset_with_attention_mask;
sample_data_file;
test_tokenize_dataset;
test_prepare_packed_sequence_data;
test_packed_sequence_specs;
test_packed_sequence_specs_invalid_paths;
test_is_number_tryexcept;
test_is_zipped_list;
test_validate_dataset_asset_accessibility;
test_build;
test_build_with_custom_samples;
test_create_dataloader;
test_validate_dataset_asset_accessibility_errors;
test_build_pretraining_datamodule;
test_single_data_distribution;
test_multiple_data_distributions;
temp_data_files;
test_initialization;
CustomRetrievalDataModule;
test_multiple_data_roots;
test_different_split_ratios;
test_invalid_data_path;
sample_squad_dataset;
sample_jsonl_file;
test_mask_targets;
test_get_header_conversation_type_mask_role;
test_add_speaker_and_signal;
test_response_value_formater;
test_build_index_files;
test_build_memmap_index_files;
test_online_sample_mapping_variations;
test_online_sample_mapping_cache;
assert_array_equal;
_TextMemMapDataset;
test_getitem;
test_load_file;
test_multiple_files;
test_build_data_from_text;
test_invalid_json;
change_dir;
temp_dataset_config;
tmp_dataset;
test_valid_absolute_path;
test_valid_relative_path;
test_invalid_relative_path_without_base;
test_valid_relative_path_without_base;
test_nonexistent_parent_path;
test_nonexistent_dataset_file;
test_path_resolution;
test_parse_dataset_config;
test_infer_global_batch_size_validation;
test_infer_global_batch_size_calculation;
test_mask_phylogenetic_tags_with_eod;
test_mask_phylogenetic_tags_middle;
test_mask_partial_tag_start;
test_mask_partial_tag_end;
test_standalone_tag;
test_sequence_starting_with_tag;
test_sequence_ending_with_tag;
test_mask_multiple_tags;
test_mask_dna_after_pipe;
test_ambiguous_dna_char_followed_by_tag_start;
test_dna_followed_by_unambiguous_tag_start;
test_double_partial_tags_with_dna_middle;
test_packed_partial_tag_subsequence_predna;
test_packed_partial_tag_subsequence_pretag;
test_packed_partial_tag_subsequence_predna_middletag;
test_packed_partial_tag_subsequence_pretag_middletag;
test_packed_partial_tag_subsequence_pretag_middletag_bs2;
test_packed_partial_tag_subsequence_pretag_middletag_bs3;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda;
test_multiple_packed_tags;
test_multiple_eods;
test_multiple_eods_prefix_no_suffix;
test_no_eods_with_batch;
test_no_eods_one_tag_with_batch_bs2;
test_packed_partial_tag_subsequence_predna_with_control;
test_packed_partial_tag_subsequence_predna_with_control2;
_construct_taxonomy_token;
mask_phylogenetic_tags_old;
benchmark_phylo_tag_masking;
test_phylo_tag_masking_speed;
test_evo2_dataset_getitem;
MockIndexedDataset;
Evo2Dataset;
test_baichuan2_config;
test_baichuan2_config_7b;
Baichuan2Config7B;
test_gpt_config_126m;
GPTConfig126M;
test_gpt_config_5b;
GPTConfig5B;
test_gpt_config_7b;
GPTConfig7B;
test_gpt_config_20b;
GPTConfig20B;
test_gpt_config_40b;
GPTConfig40B;
test_gpt_config_175b;
GPTConfig175B;
test_chatglm_config;
test_chatglm2_config_6b;
ChatGLM2Config6B;
test_chatglm3_config_6b;
ChatGLM3Config6B;
test_hyena_base_config;
test_hyena_7b_config;
Hyena7bConfig;
test_hyena_nv_7b_config;
HyenaNV7bConfig;
test_hyena_1b_config;
Hyena1bConfig;
test_hyena_nv_1b_config;
HyenaNV1bConfig;
test_hyena_40b_config;
Hyena40bConfig;
test_hyena_nv_40b_config;
HyenaNV40bConfig;
test_hyena_7b_arc_long_context_config;
Hyena7bARCLongContextConfig;
test_hyena_40b_arc_long_context_config;
Hyena40bARCLongContextConfig;
test_hyena_test_config;
HyenaTestConfig;
test_hyena_nv_test_config;
HyenaNVTestConfig;
test_convert_hyena;
HuggingFaceSavannaHyenaImporter;
test_gemma_config;
test_gemma_config_2b;
GemmaConfig2B;
test_gemma_config_7b;
GemmaConfig7B;
test_code_gemma_config_2b;
CodeGemmaConfig2B;
test_code_gemma_config_7b;
CodeGemmaConfig7B;
test_gemma3_1b_config;
test_gemma3_4b_config;
test_gemma3_12b_config;
test_gemma3_27b_config;
sample_hidden_states;
sample_attention_mask;
test_pool_avg;
test_pool_cls;
test_pool_last;
test_pool_invalid;
test_get_llama_bidirectional_hf_model;
test_pooling_avg;
test_pooling_cls;
test_batch_size_one;
mock_model;
LlamaBidirectionalForSequenceClassification;
test_model_initialization;
test_forward_classification;
test_forward_regression;
test_forward_multi_label;
test_different_pooling_types;
test_forward_without_labels;
test_temperature_scaling;
test_return_dict_option;
RichModelSummary;
DdpParityChecker;
GarbageCollectionCallback;
_munge_sharded_tensor_key_megatron_to_nemo2;
_munge_key_megatron_to_nemo2;
_key_in_filter;
_teardown_apex_megatron_cuda;
_reset_microbatch_calculator;
_initialize_distributed_parallel_state;
distributed_model_parallel_state;
get_states;
set_states;
load_weights_sharded_inplace_nemo2_to_mcore;
test_golden_values;
init_parallel_state;
zigzag_split_across_group_ranks;
zigzag_gather_from_group_ranks;
functional_all_gather;
HyenaMixer;
test_llama_config;
test_llama3_config;
Llama3Config;
test_llama2_config_7b;
test_llama2_config_13b;
Llama2Config13B;
test_llama2_config_70b;
Llama2Config70B;
test_llama3_config_8b;
Llama3Config8B;
test_llama3_config_70b;
Llama3Config70B;
test_llama31_config;
Llama31Config;
test_llama31_config_8b;
Llama31Config8B;
test_llama31_config_70b;
Llama31Config70B;
test_llama31_config_405b;
Llama31Config405B;
test_codellama_config_7b;
CodeLlamaConfig7B;
test_codellama_config_13b;
CodeLlamaConfig13B;
test_codellama_config_34b;
CodeLlamaConfig34B;
test_codellama_config_70b;
CodeLlamaConfig70B;
test_llama31_nemotron_nano_8b_config;
test_llama31_nemotron_70b_config;
Llama31Nemotron70BConfig;
test_llama33_nemotron_super_49b_config;
Llama33NemotronSuper49BConfig;
test_llama33_nemotron_ultra_253b_config;
Llama31NemotronUltra253BConfig;
test_mistral_config7b;
test_mistral_nemo_config_12b;
MistralNeMoConfig12B;
test_mistral_nemo_config_123b;
MistralNeMoConfig123B;
test_mixtral_config;
MixtralConfig;
test_mixtral_config_8x3b;
test_mixtral_config_8x7b;
test_mixtral_config_8x22b;
MixtralConfig8x22B;
strip_digits_from_end;
get_modulename_from_config_name;
generate_twolayer_checkpoints;
to_empty;
import_from_hf;
test_nemotron_config;
test_nemotron3_config_4b;
Nemotron3Config4B;
test_nemotron3_config_8b;
Nemotron3Config8B;
test_nemotron3_config_22b;
Nemotron3Config22B;
test_nemotron4_config_15b;
Nemotron4Config15B;
test_nemotron4_config_340b;
Nemotron4Config340B;
add_test_args;
megatron_model_provider;
print_rank_0;
core_transformer_config_from_args;
test_Phi3_config;
test_phi3configmini;
Phi3ConfigMini;
test_qwen2_config;
test_qwen2_config_500m;
Qwen2Config500M;
test_qwen2_config_1p5b;
Qwen2Config1P5B;
test_qwen2_config_7b;
Qwen2Config7B;
test_qwen2_config_72b;
Qwen2Config72B;
test_ssm_config;
test_base_mamba_config_130m;
BaseMambaConfig130M;
test_base_mamba_config_370m;
BaseMambaConfig370M;
test_base_mamba_config_780m;
BaseMambaConfig780M;
test_base_mamba_config_1_3b;
BaseMambaConfig1_3B;
test_base_mamba_config_2_7b;
BaseMambaConfig2_7B;
test_nvidia_mamba_config_8b;
NVIDIAMambaConfig8B;
test_nvidia_mamba_hybrid_config_8b;
NVIDIAMambaHybridConfig8B;
test_nemotronh_config_8b;
test_nemotronh_config_47b;
test_nemotronh_config_56b;
test_starcoder_config;
test_starcoder_config_15b;
StarcoderConfig15B;
test_starcoder2_config;
test_starcoder2_config_3b;
Starcoder2Config3B;
test_starcoder2_config_7b;
Starcoder2Config7B;
test_starcoder2_config_15b;
Starcoder2Config15B;
get_latest_checkpoint;
verify_peft_checkpoint_structure;
load_adapter;
ValidateCheckpointRestoreCallback;
verify_sft_checkpoint_structure;
configure_module;
get_torch_version_str;
test_no_mask;
loss_function;
test_with_mask;
test_all_masked_out;
test_valid_config_stays_same;
test_config_updates;
test_nested_config_updates;
test_load_quant_cfg;
recipe_module;
test_model;
test_trainer;
test_pretrain_recipe;
test_finetune_recipe;
test_pretrain_recipe_with_different_configurations;
test_pretrain_performance_optimizations;
test_trainer_parallelism_options;
test_finetune_recipe_without_peft;
test_finetune_recipe_with_invalid_peft;
test_bert_embedding_model_110m;
test_bert_embedding_model_340m;
test_bert_embedding_model_invalid_version;
test_bert_trainer_default_settings;
test_bert_trainer_custom_settings;
test_bert_trainer_with_callbacks;
test_bert_trainer_ddp_settings;
test_finetune_recipe_with_custom_values;
test_finetune_recipe_with_different_configurations;
test_finetune_recipe_with_peft;
test_torchrun_with_explicit_devices;
test_torchrun_raises_error_without_cuda;
test_finetune_recipe_with_packed_sequence;
test_trainer_default_settings;
test_trainer_custom_settings;
test_trainer_with_callbacks;
test_pretrain_recipe_default_settings;
test_pretrain_recipe_custom_settings;
test_pretrain_recipe_with_performance_mode;
test_tokenizer;
test_model_default;
test_model_with_parameters;
test_pretrain_recipe_default;
test_pretrain_recipe_with_parameters;
test_finetune_recipe_with_parameters;
test_tokenizer_recipe;
test_invalid_model_size;
test_wandb_logger;
test_callbacks;
test_nsys_profiling;
test_finetune_performance_optimizations;
test_finetune_performance_optimizations_without_peft;
test_finetune_performance_optimizations_with_peft;
test_finetune_model_types;
test_invalid_model_type;
test_invalid_peft_scheme;
test_finetune_sequence_length_settings;
test_valid_peft_schemes;
test_finetune_recipe_no_peft;
test_finetune_recipe_lora;
test_finetune_recipe_dora;
test_finetune_recipe_invalid_peft;
test_model_config_parameters;
test_valid_trainer_parallelism;
test_finetune_peft_options;
test_packed_sequence_options;
test_bf16_mixed_config;
test_fp16_mixed_config;
test_bf16_with_fp8_mixed_config;
test_fp16_with_fp8_mixed_config;
test_bf16_with_mxfp8_mixed_config;
test_fp16_with_mxfp8_mixed_config;
test_bf16_with_fp8_current_scaling_mixed_config;
test_fp16_with_fp8_current_scaling_mixed_config;
test_bf16_with_fp8_subchannel_scaling_mixed_config;
test_fp16_with_fp8_subchannel_scaling_mixed_config;
test_nemotron_trainer;
test_trainer_with_different_gpu_configs;
test_trainer_with_different_parallelism_options;
test_model_config;
test_finetune_recipe_with_dora;
test_finetune_recipe_insufficient_nodes;
disabled;
test_audio_example_with_prompt_emmett_t5;
nmt_paths;
test_text_example_with_prompt_emmett_t5;
test_speechllm_dataset;
llama_tokenizer;
test_speechllm_dataset_prompt_template;
test_speechllm_dataset_tokens_to_generate_increases_seq_len;
llm_model_config;
trainer_config;
set_default_device;
perception_model_config;
test_init_and_train;
test_prepare_llm_input;
test_concat_multi_features;
test_shift_tokens_by_multi_audios;
test_correctness;
geglu_compile;
setUpClass;
create_vqa_test_dataset;
tearDown;
decode_vqa_tokens_to_text;
test_data_module;
assertIsInstance;
assertRegex;
prepare_dataset;
BaseSampleEncoder;
test_process_image;
test_compute_loss_mask;
test_apply_prompt_template;
VQASample;
test_tokenize_with_special_token;
test_tokenize_with_only_special_token;
test_compute_labels;
test_encode;
assertIsNotNone;
test_tokenize_with_interleaving_images_after_text;
SimilarityInterleavedSample;
test_tokenize_with_interleaving_images_before_text;
test_tokenize_with_text_and_images;
InterleavedSample;
test_encode_function;
test_register_encoder;
register_encoder;
test_encode_sample_vqa;
test_encode_sample_interleaved;
test_encode_sample_similarity_interleaved;
test_encode_batch;
is_rttm_length_too_long;
test_e2e_speaker_diar_dataset;
msdd_model;
get_train_ds_config;
get_validation_ds_config;
get_test_ds_config;
test_e2e_speaker_diar_lhotse_dataset;
word_count;
permuted_input_test;
test_cpwer_oneword;
calculate_wer_count;
test_cpwer_perfect;
test_cpwer_spk_counfusion_and_asr_error;
test_cpwer_undercount;
test_cpwer_overcount;
test_get_partial_ref_labels;
test_get_online_DER_stats;
test_msdd_diar_inference;
diarizer;
itersegments;
sortformer_model;
test_ecapa_enc_dec;
test_titanet_enc_dec;
test_pretrained_titanet_embeddings;
test_pretrained_ambernet_logits;
test_pretrained_ambernet_logits_batched;
DiarizableDummy;
test_diarize;
test_diarize_generator;
test_diarize_generator_explicit_stop_check;
test_diarize_check_flags;
check_range_values;
check_labels;
matrix;
generate_orthogonal_embs;
svd;
generate_toy_data;
set_trace;
test_minimal_index_ex2;
test_minimal_index_same;
test_stitch_cluster_labels_label_switch;
test_stitch_cluster_labels_label_many_to_one;
test_stitch_cluster_labels_label_one_to_many;
test_stitch_cluster_labels_one_label_replaced;
test_stitch_cluster_labels_confusion_error;
test_stitch_cluster_labels_speaker_more_speakers;
test_stitch_cluster_labels_speaker_longer_sequence;
test_embedding_merger;
test_cosine_affinity_calculation;
test_cosine_affinity_calculation_scale_interpol;
test_embedding_reducer;
test_merge_scheduler_2clus;
test_merge_scheduler_3clus;
test_merge_scheduler_4clus_shuff;
test_merge_scheduler_3clus_repeat;
test_online_segmentor_class_export;
_OnlineSegmentor;
test_online_segmentor_instance_export;
test_online_speaker_clustering_instance_export;
test_get_subsegments;
test_min_subsegment_duration_filtering;
test_zero_duration;
test_edge_case_short_slice;
test_merge_int_intervals_ex1;
test_merge_int_intervals_ex2;
test_merge_int_intervals_edge_test;
test_is_overlap_true;
test_is_overlap_false;
test_fl2int;
test_int2fl;
test_merge_float_intervals_edge_margin_test;
test_merge_float_overlaps;
test_get_speech_labels_for_update;
test_get_online_subsegments_from_buffer;
test_get_new_cursor_for_update_mulsegs_ex1;
test_tensor_to_list;
test_get_online_segments_from_slices;
test_get_k_neighbors_connections;
test_unpack_labels;
test_offline_clus_script_save_load;
test_online_clus_script_save_load;
test_offline_speaker_clustering;
test_offline_speaker_clustering_cpu;
test_offline_speaker_clustering_very_short_cpu;
test_offline_speaker_clustering_very_short_gpu;
test_longform_speaker_clustering_cpu;
test_longform_speaker_clustering_gpu;
test_online_speaker_clustering;
test_online_speaker_clustering_cpu;
test_lsa_solver_export_test;
test_linear_sum_assignment_algorithm_cost_matrix;
nemo_linear_sum_assignment;
scipy_linear_sum_assignment;
test_linear_sum_assignment_algorithm_random_matrix;
reconstruct_labels_forloop;
test_find_first_nonzero;
test_find_best_permutation;
test_reconstruct_labels_with_forloop_ver;
test_reconstruct_labels;
test_get_ats_targets;
test_get_pil_targets;
test_various_cases;
test_default_parameters;
test_edge_cases;
test_real_life_examples;
test_replace_placeholders;
data_config;
_assign;
test_datamodule_train_dataloader;
test_datamodule_validation_dataloader;
_inner;
resolve_pretrained_models;
dataset;
training_cutset_batch;
test_s2s_dataset;
test_s2s_training_step;
test_s2s_validation_step;
test_s2s_offline_generation;
test_s2s_speech_decoder_training_step;
test_s2s_speech_decoder_validation_step;
test_s2s_speech_decoder_offline_generation;
test_freezing_params;
test_keeping_unfrozen_params;
test_configure_optimizers;
test_configure_optimizers_with_lr_scheduler;
test_bleu;
prompt_formatter;
test_salm_dataset;
test_salm_training_step;
test_salm_validation_step;
test_salm_generation;
language_specific_text_example;
supported_languages;
get_language_id_from_pretrained_model_name;
fail;
mel_spec_example;
audio_text_pair_example_english;
sample_duration_input;
test_sort_unsort;
test_regulate_len;
enhancer_config;
enhancer;
enhancer_with_fastpitch;
sample_input;
test_pad_spectrograms;
test_spectrogram_norm_unnorm;
test_spectrogram_unnorm_norm;
test_spectrogram_norm_unnorm_dont_look_at_padding;
test_spectrogram_unnorm_norm_dont_look_at_padding;
test_generator_pass_keeps_size;
test_discriminator_pass;
test_nemo_save_load;
test_dataset;
test_raise_exception_on_not_supported_sup_data_types;
test_raise_exception_on_not_supported_window;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced;
test_save_voiced_items_if_pt_file_not_exist;
hifigan_model;
radtts_model;
test_FastPitchModel_export_to_onnx;
test_HifiGanModel_export_to_onnx;
test_RadTTSModel_export_to_torchscript;
test_RadTTSModel_export_to_onnx;
taco2wg;
test_export_to_onnx;
_create_g2p;
test_normalize_dict_with_phonemes;
test_normalize_dict_with_graphemes_and_phonemes;
test_replace_symbols;
test_forward_call;
test_forward_call_with_file_or_object_dict_type;
g2p_file;
g2p_dict;
test_forward_call_with_oov_word;
test_forward_call_with_oov_func;
test_forward_call_with_uppercase_grapheme_only;
test_forward_call_with_lowercase_grapheme_only;
test_forward_call_with_mixed_case_grapheme_only;
test_forward_call_with_uppercase_grapheme_and_get_phoneme_only;
test_forward_call_with_lowercase_grapheme_and_get_phoneme_only;
test_forward_call_with_mixed_case_grapheme_and_get_phoneme_only;
test_forward_call_with_escaped_characters;
test_instantiate_unsupported_locale;
test_forward_call_de_de;
test_forward_call_en_us;
test_forward_call_es_es;
test_get_heteronym_spans;
test_masked_loss_l1;
test_masked_loss_l2;
test_si_sdr_loss;
sdr_fn;
test_si_sdr_loss_batch;
si_sdr_fn;
pretrained_model;
test_inference;
test_conv1d;
test_conv1d_downsample;
test_conv1d_transpose_upsample;
test_hifigan_decoder;
HiFiGANDecoder;
test_resnet_encoder;
res_net;
test_multiband_mel_encoder;
MelSpectrogramProcessor;
MultiBandMelEncoder;
test_rvq_eval;
rvq;
test_group_rvq_eval;
GroupResidualVectorQuantizer;
grvq;
test_snake;
test_fsq_eval;
fsq;
test_fsq_output;
test_group_fsq_eval;
GroupFiniteScalarQuantizer;
gfsq;
test_conditional_layer_norm;
ln;
cln;
set_seed;
manual_seed_all;
test_non_causal_forward;
test_causal_forward;
test_forward_causal_self_attn_and_has_xattn;
test_forward_causal_self_attn_and_no_xattn;
test_get_start_and_end_of_speech_frames_frames;
test_get_start_and_end_of_speech_frames_not_frames_found;
test_pad_sample_indices;
test_pad_sample_indices_boundaries;
_compute_start_end_frames;
_create_test_dir;
test_compute_mel_spectrogram;
MelSpectrogramFeaturizer;
test_save_and_load_mel_spectrogram;
test_compute_pitch;
PitchFeaturizer;
test_compute_pitch_batched;
test_save_and_load_pitch;
test_save_and_load_pitch_segments;
test_compute_energy;
EnergyFeaturizer;
test_save_and_load_energy;
test_save_and_load_energy_segments;
_write_test_dict;
test_feature_scalar;
FeatureScaler;
test_log_compression;
LogCompression;
test_log_compression_clamp;
test_mean_variance_normalization;
MeanVarianceNormalization;
test_mean_variance_normalization_masked;
test_mean_variance_speaker_normalization;
MeanVarianceSpeakerNormalization;
test_mean_variance_speaker_normalization_masked;
test_get_abs_rel_paths_input_abs;
test_get_abs_rel_paths_input_rel;
test_get_audio_paths;
test_load_audio;
assert_array_almost_equal;
test_load_audio_with_offset;
test_normalize_volume;
test_normalize_volume_negative_peak;
test_normalize_volume_zero;
test_normalize_volume_max;
test_normalize_volume_zeros;
test_normalize_volume_empty;
test_normalize_volume_out_of_range;
test_stack_tensors;
test_stack_tensors_3d;
test_filter_dataset_by_duration;
mock_image_processor;
test_mock_clip_dataset_length;
test_mock_clip_dataset_item_shapes;
test_data_module_state_dict;
test_data_module_with_task_encoder;
test_data_module_without_processors;
test_mock_clip_dataset_seed_consistency;
test_data_module_batch_collation;
mock_hf_calls;
HFAutoModelForImageTextToText;
test_configure_model;
test_forward_pass;
test_loading_flags;
test_save_pretrained;
simple_dataset;
simple_dataset_dict;
test_clean_split_no_brackets;
test_clean_split_with_brackets;
test_clean_split_with_plus_sign;
test_make_dataset_splits_single_dataset_alias;
test_make_dataset_splits_single_dataset_plus_sign;
test_make_dataset_splits_list_of_splits;
test_hfdatamodule_init_from_dataset;
test_hfdatamodule_init_from_datasetdict;
test_hfdatamodule_collate_fn;
test_hfdatamodule_map;
add_one;
compare_parameters;
compare_model_outputs;
original_model;
exported_model;
run_conversion_pipeline;
test_encode_image_following_text;
LlavaNextTextSample;
assertGreater;
test_encode_image_before_text;
test_select_samples_to_pack;
test_pack_selected_samples;
basic_conversation;
test_conversation_initialization;
test_get_prompt_single_style;
test_get_prompt_two_style;
test_get_prompt_mistral_vila;
test_get_prompt_nvgpt;
test_get_prompt_plain;
test_get_prompt_v0;
test_get_prompt_v1;
test_get_prompt_mistral_orca;
test_get_prompt_mistral_zephyr;
test_get_prompt_mistral_direct;
test_get_prompt_chatml_direct;
test_get_prompt_mpt;
test_get_prompt_qwen;
test_get_prompt_gemma;
test_get_prompt_nv_dpo;
test_process_image_pad;
test_process_image_resize;
test_process_image_default;
test_process_image_base64;
test_get_images;
test_get_images_return_path;
test_to_gradio_chatbot;
test_copy;
test_dict;
test_dict_with_images;
test_process_chat_template;
test_invalid_sep_style;
test_invalid_image_process_mode;
test_pretrain_recipe_different_configurations;
test_finetune_recipe_default;
test_finetune_recipe_peft_lora;
test_finetune_recipe_different_configurations;
test_pretrain_recipe_performance_mode;
test_finetune_recipe_peft_none;
test_finetune_recipe_configurations;
test_parameterized_configurations;
test_recipe_different_configurations;
test_trainer_config;
test_finetune_recipe_performance_mode;
test_siglip_config_error;
test_all_args_exist;
test_all_args_dont_exist;
test_extra_args_exist;
test_extra_args_exist_but_is_ignored;
test_args_exist_but_is_remapped;
test_ptl_config;
test_early_stopping_config;
_get_last_checkpoint_dir;
_get_nlp_strategy_without_optimizer_state;
test_dist_ckpt_io_called_for_mcore_models;
MockDistributedCheckpointIO;
ExampleMCoreModel;
test_dist_ckpt_path_not_executed_for_non_core_models;
MockTorchCheckpointIO;
test_async_save_produces_same_checkpoints_as_sync;
DistributedCheckpointIO;
OnesDataset;
MyTestOptimizer;
DoNothingOptimizer;
test_omegaconf;
test_trainer_loggers;
test_trainer_neptune_logger;
test_checkpoint_configurations;
test_default_log_dir;
test_log_dir_overrides;
test_resume;
test_nemo_checkpoint_save_best_model_1;
test_nemo_checkpoint_save_best_model_2;
test_nemo_checkpoint_always_save_nemo;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts;
test_nemo_checkpoint_make_checkpoint_dir;
test_nemo_checkpoint_restore_model;
DoNothingModel;
test_base_checkpoints_are_not_overwritten;
with_stem;
_get_versioned_name;
test_last_checkpoint_saved;
TestModel;
AssertCallback;
test_resume_checkpoint_skip_validation;
test_warning_validation_skipping_when_custom_epoch_loop;
CustomLoop;
warns;
_write_fake_checkpoint;
test_skipped_unfinished_checkpoints_when_restoring;
test_skipped_unfinished_dist_checkpoints_when_restoring;
test_incomplete_checkpoints_cleanup;
test_incomplete_dist_checkpoints_cleanup;
test_incomplete_checkpoints_marker_path;
test_invalid_checkpoints_removed_from_topk;
test_doesnt_silently_start_from_scratch;
test_doesnt_silently_start_from_scratch_dist;
test_save_nemo_not_comp_with_model_parallel;
test_fault_tol_callback_not_created_by_default;
test_fault_tol_callback_created;
test_to_from_config_file;
array_equal;
test_save_restore_from_nemo_file;
test_eff_save_restore_from_nemo_file_encrypted;
set_encryption_key;
test_save_restore_from_nemo_file_with_override;
test_save_model_level_pt_ckpt;
test_save_module_level_pt_ckpt;
test_num_weights;
TempModule;
test_as_frozen;
test_partial_unfreeze;
test_short_vs_long_version;
test_parameterized_type_audio_sampling_frequency;
test_transpose_same_1;
test_transpose_same_2;
test_inheritance_spec_augment_example;
test_singletone;
test_list_of_lists;
test_void;
test_big_void;
test_unspecified_dimensions;
test_any_axis;
test_struct;
BoundingBox;
BadBoundingBox;
OptCounter;
assert_counts;
test_get_optimizer;
TempModel;
opt_cls;
test_register_optimizer;
test_optim_config_parse_bypass;
test_optim_config_parse_arg_by_name;
test_optim_config_parse_arg_by_target;
SGDParams;
NovogradParams;
test_get_scheduler;
Novograd;
sched_cls;
test_register_scheduler;
test_sched_config_parse_simple;
test_sched_config_parse_from_cls;
test_sched_config_parse_reduce_on_plateau;
test_WarmupPolicy;
get_last_lr;
test_WarmupHoldPolicy;
test_WarmupAnnealing;
test_SquareAnnealing;
test_SquareRootAnnealing;
test_CosineAnnealing;
test_NoamAnnealing;
test_PolynomialDecayAnnealing;
test_PolynomialHoldDecayAnnealing;
test_InverseSquareRootAnnealing;
test_CosineAnnealing_with_noop_steps;
test_max_step_computation;
Callback;
test_max_step_computation_with_sched_no_ops;
SchedulerNoOpCallback;
set_env;
get_dir_size;
get_size;
_is_json_serializable;
_mock_model_config;
classpath;
_mock_model_with_children_config;
_mock_model_with_child_encdecctcbpe_config;
_mock_model_with_child_custom_config_path_config;
_mock_model_incorrect_with_nemo_artifact_config;
setup_data_from_file;
MockModel;
MockModelWithChildren;
__test_restore_elsewhere;
test_EncDecCTCModel;
test_EncDecCTCModelBPE;
test_EncDecCTCModelBPE_v2;
test_EncDecCTCModelBPE_v3;
test_EncDecCTCModelBPE_HF;
test_PunctuationCapitalization;
test_mock_save_to_restore_from;
test_mock_restore_from_config_only;
test_mock_restore_from_config_override_with_OmegaConf;
test_mock_restore_from_config_override_with_yaml;
test_mock_save_to_restore_from_with_target_class;
test_mock_save_to_restore_from_multiple_models;
test_mock_save_to_restore_from_multiple_models_inverted_order;
test_mock_save_to_restore_chained;
save_copy;
test_mock_save_to_multiple_times;
test_multiple_model_save_restore_connector;
MySaveRestoreConnector;
test_restore_from_save_restore_connector;
test_restore_from_save_restore_connector_return_config;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction;
test_restore_from_save_restore_connector_unpacked_file;
test_mock_model_model_collision;
test_mock_model_nested;
change_stub_number;
test_mock_model_nested_with_resources;
test_mock_model_nested_with_resources_multiple_passes;
test_mock_model_nested_double_with_resources;
test_mock_model_nested_child_from_pretrained;
MockModelWithChildEncDecCTCBPE;
test_mock_model_nested_custom_config_field;
MockModelWithChildCustomConfigPath;
test_using_nemo_checkpoint_as_artifact_disallowed;
MockModelIncorrectWithNemoArtifact;
test_restore_from_save_restore_connector_extracted_dir;
test_hf_model_filter;
test_hf_model_info;
test_hf_model_info_with_card_data;
pleasefixme;
test_hf_model_info_with_limited_results;
test_filtering_methods;
utime;
filter_method;
filter_even_children;
test_from_config_dict_with_cls;
test_from_config_dict_without_cls;
test_config_updated;
test_base_class_instantiation;
get_class_path;
test_self_class_instantiation;
test_sub_class_instantiation;
test_prints_perf_scores;
get_all_neural_types;
test_simple_linear;
SimpleLinear;
test_simple_linear_exportable;
SimpleLinearExportable;
test_simple_linear_with_adapter_mixin;
SimpleLinearWithAdapterMixin;
test_simple_linear_with_types;
SimpleLinearWithTypes;
test_element_compilable;
neural_type;
test_dummy_module_with_io_types;
DummyModuleWithIOTypes;
test_chain_with_types;
dummy_module;
recursive_assert_shape;
recursive_assert_homogeneous_type;
test_no_types_passthrough;
NoTypes;
obj;
test_input_output_types;
InputOutputTypes;
test_input_types_only;
InputTypes;
test_multiple_input_types_only;
test_output_types_only;
OutputTypes;
test_multiple_output_types_only;
MultipleOutputTypes;
test_multiple_output_types_only_namedtuple;
MultipleOutputTypesWithNamedTuple;
NamedTupleOutputType;
test_multiple_mixed_output_types_only;
MultipleMixedOutputTypes;
test_multiple_mixed_output_types_only_namedtuple;
test_multiple_mixed_output_types_only_mismatched;
test_multiple_mixed_output_types_only_namedtuple_mismatched;
test_incorrect_inheritance;
IncorrectInheritance;
test_port_definition_rejection;
InputPortDefinitionRejection;
OutputPortDefinitionRejection;
test_port_shape_rejection;
InputPortShapeRejection;
OutputPortShapeRejection;
test_positional_args;
InputPositional;
OutputPositionalPassthrough;
test_optional_types;
InputOptionalTypes;
test_input_output_neural_types;
NodeA;
NodeB;
nodeA;
nodeB;
test_nested_input_output_neural_types;
NestedNodeA;
NestedNodeB;
test_nested_input_output_neural_types_ignore_collections;
test_nested_mixed_input_output_neural_types;
NestedMixedNodeA;
NestedMixedNodeB;
test_multi_forward_type;
AdaptiveTypeCheck;
eval_forward;
infer_forward;
test_input_type_override;
InputTypesOverride;
test_output_type_override;
test_multi_type_override;
test_disable_typecheck;
test_nested_shape_mismatch;
NestedShapeMismatch;
bb;
test_nested_mixed_shape_mismatch;
NestedMixedShapeMismatch;
test_input_container_neural_types;
test_input_container_neural_types_incorrect;
test_output_container_neural_types_incorrect;
test_output_container_neural_types_no_tuple_wrap;
test_output_container_neural_types_explicit_tuple_wrap;
test_disable_semantic_types_input_output;
test_module_registered_adapter_by_class_path;
test_module_registered_adapter_by_class;
test_module_registered_adapter_by_adapter_class;
test_single_adapter;
DefaultModuleAdapter;
test_multiple_adapter;
test_forward_linear_pre;
test_forward_linear_post;
test_multi_adapter_forward;
test_multi_adapter_partial_forward;
test_forward_unfrozen_adapters;
test_forward_linear_no_strategy;
test_forward_linear_replaced_strategy;
MultiplyAdapterStrategy;
update_adapter_global_cfg;
default_adapter_module_name;
test_base_model_no_support_for_adapters;
DefaultAdapterModel;
test_base_model_replace_adapter_compatible_modules;
test_single_encoder_module_adapter;
test_single_decoder_module_adapter;
test_single_adapter_default_metaconfig;
test_all_disabled_adapters;
test_set_enabled_all_adapters_with_no_name;
test_set_enabled_all_adapters_with_no_name_only_decoder;
test_enc_dec_enabled_adapters;
test_multiple_adapter_non_unique_adapter_name;
test_multi_adapter_partial_forward_global_module_different;
test_multi_adapter_partial_forward_global_module_same_output;
test_save_adapter_with_no_adapters_added;
test_single_decoder_save_load_adapter_only_exact_name;
test_single_decoder_save_load_adapter_only_global_name;
test_multiple_decoder_save_load_adapter_only_exact_name;
test_multiple_save_load_adapter_with_multiple_load;
test_multiple_decoder_save_load_adapter_dual_name;
test_single_decoder_save_load_adapter_only_partial_name;
test_ResidualAddAdapterStrategyConfig;
test_strategy_default;
ResidualAddAdapterStrategy;
test_strategy_stochasic_depth;
test_strategy_l2_lambda;
instantiate_multinode_ddp_if_possible;
ExpManagerConfig;
get_rank_info;
check_model_ranks;
run_checks;
process_args;
_build_import_path;
_get_class_from_path;
_test_domain_module_imports;
test_domain_asr;
test_domain_nlp;
test_domain_tts;
test_domain;
load_model_from_unpacked_hf_dir;
upload_model_as_single_nemo_file;
upload_model_as_unpacked_files;
check_repo_exists;
delete_repo;
CallbackParams;
test_stateless_timer;
get_accuracy_with_lambada;
run_in_framework_inference;
run_trt_llm_inference;
test_cpp_runtime;
run_inference_tests;
TestClient;
mock_triton_settings;
rest_client;
mock_rest_triton_settings;
TritonSettings;
test_custom_values;
CompletionRequest;
test_greedy_params;
test_health_check;
test_convert_numpy;
test_dict_to_str;
test_helper_fun;
test_query_llm_async;
run_until_complete;
test_completions_v1;
test_chat_completions_v1;
RestTritonSettings;
RestCompletionRequest;
test_triton_health_success;
test_completions_success;
test_completions_standard_format;
test_completions_error_handling;
deploy_base;
MockDeployable;
test_initialization_with_checkpoint;
test_initialization_without_model_or_checkpoint;
test_get_module_and_class;
test_is_model_deployable_valid;
MockTritonDeployable;
test_is_model_deployable_invalid;
deploy_pytriton;
test_deploy_success;
test_deploy_streaming_success;
test_deploy_failure;
test_serve_success;
test_serve_failure;
test_run_success;
test_run_failure;
test_stop_success;
test_stop_failure;
test_nemo_deploy_query;
test_typedict2tensor_basic;
test_typedict2tensor_with_overwrite;
test_typedict2tensor_list_types;
test_nemo2_checkpoint_dir;
test_nemo1_checkpoint_dir;
test_nemo2_checkpoint_tar;
test_nemo1_checkpoint_tar;
test_str_list2numpy;
test_str_ndarray2list;
test_str_conversion_roundtrip;
test_ndarray2img;
test_cast_tensor;
test_cast_numpy;
test_cast_string;
test_cast_1d_to_2d;
test_broadcast_list_no_distributed;
test_broadcast_list_distributed;
mock_peft_model;
mock_torch_cuda;
test_initialization_invalid_task;
test_initialization_no_model;
test_initialization_with_model_and_tokenizer;
test_initialization_with_model_path;
test_initialization_with_peft_model;
test_triton_input_output_config;
test_generate_without_model;
test_generate_with_model;
test_generate_with_output_logits_and_scores;
test_triton_infer_fn;
MockRequest;
test_triton_infer_fn_with_error;
test_hf_generate;
test_hf_multigpu_generate;
_run_generate;
_hf_generate_ranks;
mock_model_and_tokenizer;
deployable;
test_generate;
test_apply_chat_template;
test_remove_eos_token;
test_str_to_dict;
test_triton_input_output;
test_base_initialization;
NemoQueryLLMBase;
test_query_llm_basic;
test_query_llm_with_logprobs;
test_query_llm_with_logits;
test_query_llm_openai_format;
test_query_llm_streaming;
test_query_llm_with_stop_words;
test_query_llm_with_bad_words;
query_multimodal;
NemoQueryMultimodal;
mock_image;
mock_video;
mock_audio;
test_setup_media_image_local;
test_setup_media_image_url;
test_frame_len;
test_get_subsampled_frames;
test_query;
test_setup_media_video;
test_setup_media_audio;
mock_deployable;
test_get_triton_input;
test_get_triton_output;
test_abstract_class_instantiation;
ITritonDeployable;
httpserver_listen_address;
test_configuration;
test_default_none_tokenizer;
test_evaluation;
respond_with_json;
EvaluationTarget;
expect_request;
ConfigParams;
test_evaluate_success;
test_evaluate_nemo_checkpoint_path_none;
assert_not_called;
test_evaluate_import_error;
run_deploy;
AccuracyResult;
check_model_outputs;
FunctionalResult;
optional_bool_to_pass_fail;
export_onnx_trt;
OnnxLLMExporter;
test_mock_import_existing_module;
test_mock_import_non_existing_module;
test_model_loading;
temp_dir;
dummy_tokenizer;
test_init_with_model_and_tokenizer;
test_init_with_model_and_model_path_raises_error;
basic_quantization_config;
basic_export_config;
test_init_valid_configs;
test_init_invalid_algorithm;
test_init_invalid_dtype;
test_null_algorithm;
test_quantize_method;
test_modify_model_config;
test_export_method;
tearDownClass;
assertNotEqual;
test_batch_decode;
test_token_to_id;
test_legacy_mode;
test_properties;
test_vocab_property;
test_convert_ids_to_tokens;
test_convert_tokens_to_string;
test_len;
test_is_fast;
test_get_added_vocab;
assertIsNone;
get_added_vocab;
sample_tar;
test_tar_path_initialization;
test_path_operations;
test_file_operations;
test_directory_operations;
SimpleModel;
test_get_profile_shapes;
test_get_dynamic_axes;
test_trt_compile_basic;
test_trt_compile_no_tensorrt;
assertFalse;
test_trt_compiler_initialization;
test_trt_compiler_invalid_precision;
test_trt_compiler_invalid_method;
test_trt_compile_with_submodule;
NestedModel;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model;
test_get_nemo_to_trtllm_conversion_dict_on_mcore_model;
test_tensorrt_llm_initialization;
test_tensorrt_llm_supported_models;
test_tensorrt_llm_input_dtype;
test_tensorrt_llm_hidden_size;
test_tensorrt_llm_triton_io;
test_tensorrt_llm_pad_logits;
model_dir;
mock_runner;
test_init_invalid_modality;
test_export_mllama;
test_export_neva;
test_forward_without_loading;
test_forward_with_all_params;
test_get_input_media_tensors_vision;
test_get_input_media_tensors_audio;
test_export_with_invalid_model_type;
test_export_with_existing_files;
sample_vocab_file;
test_reload_mergeable_ranks;
test_encode_decode;
test_special_token_handling;
test_empty_decode;
test_batch_decode_numpy_tensor;
test_torch_trt;
PReLU;
test_profiles;
ListAdd;
test_lists;
mock_llm;
test_export;
test_export_with_lora;
test_add_lora_models;
test_forward_without_model;
test_forward_with_lora_not_added;
test_forward_with_invalid_lora;
test_triton_infer_fn_error_handling;
test_build_trtllm_engine;
test_build_mllama_trtllm_engine;
test_split_qkv_weight;
test_split_kv_weight;
test_split_gate_weight;
test_nemo2_convert_to_safe_tensors;
test_nemo2_convert_to_export;
test_any_word_in_key;
test_get_trt_llm_keyname;
test_is_scaling_factor;
test_get_scaling_factor_keys;
test_split;
test_generate_int8;
test_determine_quantization_settings;
test_prompt_convert_task_templates;
test_prompt_convert_direct_embeddings;
test_rename_key;
test_rename_key_dist_ckpt;
test_get_layer_prefix;
test_rename_layer_num;
test_get_layer_num;
test_create_export_dir;
test_is_nemo2_checkpoint;
test_prepare_directory_for_export;
test_is_nemo_tarfile;
test_torch_dtype_from_precision;
test_get_example_inputs;
test_replace_number_add_offset;
test_rename_qkv_keys;
test_reformat_module_names_to_hf;
test_convert_lora_weights_to_canonical;
mock_checkpoint_dir;
test_nemo_to_path;
test_tar_file_system_reader;
test_load_sharded_metadata_zarr;
test_nemo_weights_directory;
test_load_model_weights;
reset_mock;
my_app;
test_no_config;
test_config1;
test_config1_invalid;
test_config2;
test_config2_invalid;
test_config2_filepath_schema;
reconfigure_num_microbatches_calculator_manager;
test_finetuning_module;
test_dolly_module;
test_squad_module;
wrap_config;
make_byzantine_model_wrapper;
test_failing;
test_working;
make_trainer_optim;
_get_strategy;
get_model_and_data;
GPTConfig;
test_sharded_strategies;
mock_pipeline;
mock_precision_plugin;
mock_callbacks;
mock_data_step;
mock_forward_step;
mock_loss_reduction;
test_init_with_defaults;
test_init_with_custom_parameters;
test_add_callbacks;
TestCallback;
test_event;
test_add_connector;
test_contains;
test_add_count_callback;
CountCallback;
test_event_trigger_with_count_callback;
test_loggers;
test_explicit_log_dir;
test_custom_version;
test_file_logging_setup;
test_model_checkpoint_setup;
PTLModelCheckpoint;
setup_data;
setup_model_optim;
setup_trainer_and_logger;
replace_first;
extract_model_keys;
prepend_exp_avg;
prepend_exp_avg_sq;
has_all_keys;
test_resume_optim_state;
test_recipes_with_nemo_run;
ConfigValidationPlugin;
PreemptionPlugin;
WandbPlugin;
NsysPlugin;
Packager;
global_defaults;
test_precision_plugin_fp8_passed;
TrainerHook;
test_precision_plugin_precision_params_override;
make_model_optim;
run_train_from_scratch;
ValidateOptStateScratchInit;
ValidateModelScratchInit;
run_resume_train;
ValidateOptStateRestoration;
ValidateModelRestoration;
test_optim_state_restoration;
test_set_model_parallel_attributes;
test_init_parallel_ranks;
destroy_num_microbatches_calculator;
test_init_model_parallel;
_mpu_tp_2;
test_init_model_parallel_with_tp_pp_dp;
WithCopy;
optimizer_module;
PytorchOptimizerModule;
test_optimizer_module_initialization;
test_optimizer_creation;
test_connect_method;
test_simple_conversion;
test_flops_measurement_callback_bert;
test_extract_module_attr_name_with_module;
test_extract_module_attr_name_with_model;
test_extract_module_attr_name_raises;
test_listify_non_list;
test_listify_list;
test_get_modules_from_selector_none_selector;
test_get_modules_from_selector_empty_string;
test_get_modules_from_selector_star;
test_get_modules_from_selector_exact_path;
test_get_modules_from_selector_non_existent_attr;
test_get_modules_from_selector_attr_is_not_module;
test_get_modules_from_selector_wildcard_children;
test_jit_config_assertion;
test_compile_module_torch;
test_compile_module_none;
test_jit_transform_no_config;
test_jit_transform_already_compiled;
test_jit_transform_compile_once;
setup_test;
get_final_checkpoint;
DummyConfig;
PassThroughLossReduction;
test_link_ckpt;
test_link_ckpt_async;
test_restore_async;
pl_module;
MockLightningModule;
test_setup_stores_transform;
setup_mocks;
mock_pl_module;
test_init_valid_params;
test_init_invalid_params;
test_on_train_batch_start_profiling;
test_on_train_batch_start_no_profiling;
test_on_train_batch_end_profiling;
test_on_train_batch_end_no_profiling;
test_non_cuda_device;
test_rank_not_in_profile_ranks;
test_profiling_range;
test_single_profile_range;
test_peft_call;
DummyPEFT;
test_linear_adapter;
test_linear_adapter_monkey_patch;
test_peft_setup;
test_peft_on_train_epoch_start_with_adapter;
assert_has_calls;
test_params_to_save;
test_params_to_save_batchnorm;
test_custom_signal;
test_on_train_batch_start_distributed_init;
test_interrupted_property;
test_on_train_start;
test_on_train_end;
test_on_train_batch_end;
property;
mock_mixed_precision_policy;
mock_device_mesh;
mock_lightning_module;
strategy;
test_load_optimizer_state_dict;
test_setup;
test_parallelize;
test_checkpoint_io;
Dummy;
test_remove_checkpoint;
test_save_checkpoint;
test_load_checkpoint;
test_test_step;
mock_transformer_layer;
mock_checkpoint_io;
test_process_dataloader;
test_ddp_strategy_conversion;
test_fsdp_strategy_conversion;
test_mixed_precision_plugin_conversion;
test_fsdp_precision_plugin_conversion;
test_unsupported_object_conversion;
UnsupportedObject;
test_megatron_strategy_conversion;
test_megatron_precision_conversion;
partial_function_with_pos_and_key_args;
test_reload_ckpt;
TrainerContext;
loaded_func;
adapter_checkpoint_io;
save_and_load_checkpoint;
test_save_and_load_checkpoint;
test_save_and_load_checkpoint_adapter_only;
test_reinit;
DummyClass;
single_transform;
multiple_outputs_transform;
mock_multi_target_ctx;
test_transform_with_single_source_single_target;
test_transform_with_multiple_sources;
test_transform_with_multiple_mapped_sources;
test_transform_with_variable_arguments;
test_transform_with_no_matching_source;
test_transform_with_multiple_targets;
test_transform_with_multiple_sources_multiple_wildcards;
test_transform_with_multiple_targets_multiple_wildcards;
test_transform_with_no_matching_target;
test_transform_with_invalid_transform_function;
test_single_transform;
test_multiple_outputs_transform;
create_sample_jsonl;
create_sample_lambada;
get_hf_model_class;
create_hf_model;
test_incorrect_value;
ASRModelType;
test_correct_value;
test_str;
test_get_envint_returns_int_value;
test_get_envint_with_default;
test_get_envint_required_missing;
test_get_envint_coercion_error;
test_get_envint_negative_value;
test_get_envfloat_returns_float_value;
test_get_envfloat_with_integer_string;
test_get_envfloat_with_default;
test_get_envfloat_required_missing;
test_get_envfloat_coercion_error;
test_get_envfloat_scientific_notation;
test_get_envfloat_negative_value;
test_get_envbool_true_values;
test_get_envbool_false_values;
test_get_envbool_with_default;
test_get_envbool_required_missing;
test_get_envbool_non_boolean_value;
test_get_envdecimal_returns_decimal_value;
test_get_envdecimal_with_integer_string;
test_get_envdecimal_with_default;
test_get_envdecimal_required_missing;
test_get_envdecimal_coercion_error;
test_get_envdecimal_negative_value;
test_get_envdecimal_high_precision;
test_get_envdate_returns_date_value;
test_get_envdate_with_different_formats;
test_get_envdate_with_default;
test_get_envdate_required_missing;
test_get_envdate_coercion_error;
test_get_envdatetime_returns_datetime_value;
datetime;
test_get_envdatetime_with_different_formats;
test_get_envdatetime_with_default;
test_get_envdatetime_required_missing;
test_get_envdatetime_coercion_error;
test_get_envdatetime_with_timezone;
test_get_envlist_returns_list_value;
test_get_envlist_with_custom_separator;
test_get_envlist_with_default;
test_get_envlist_required_missing;
test_get_envlist_empty_string;
test_get_envlist_multiple_words;
test_get_envdict_returns_dict_value;
test_get_envdict_with_default;
test_get_envdict_required_missing;
test_get_envdict_coercion_error;
test_get_envdict_complex_dict;
flops_config;
test_gpt3;
gpt3;
test_llama2;
test_llama3;
test_nemotron;
nemotron;
test_mixtral;
mixtral;
test_bert;
bert;
test_hyena;
test_transformer;
test_transformer_no_moe;
test_default_behavior;
test_with_pytorch_rank_0;
test_with_pytorch_rank_nonzero;
test_with_slurm_rank_0;
test_with_slurm_rank_nonzero;
test_with_mpi_rank_0;
test_with_mpi_rank_nonzero;
test_with_node_rank_0_local_rank_0;
test_with_node_rank_0_local_rank_nonzero;
test_with_node_rank_nonzero;
test_with_group_rank_fallback;
test_env_var_precedence;
test_not_distributed;
test_distributed_not_global_rank_zero;
test_distributed_global_rank_zero;
test_distributed;
test_metaclass_creation;
test_custom_error_message;
TestClass;
test_call_raises_error;
test_attribute_access_raises_error;
test_arithmetic_operations_raise_error;
test_comparison_operations_raise_error;
comp;
test_container_operations_raise_error;
test_descriptor_operations_raise_error;
test_successful_import;
test_failed_import;
test_import_with_custom_message;
test_import_with_alternative;
test_unavailable_module_raises_error_when_used;
test_successful_import_from;
test_failed_import_from_nonexistent_module;
test_failed_import_from_nonexistent_symbol;
test_import_from_with_custom_message;
symbol;
test_import_from_with_alternative;
test_fallback_module;
test_fallback_module_both_fail;
side_effect;
test_resolve_trainer_cfg_strategy;
test_resolve_cache_dir;
test_is_datastore_path;
test_bucket_and_object_from_uri;
test_ais_endpoint_to_dir;
test_ais_binary;
test_datastore_path_to_webdataset_url;
cal_target_metadata_wer;
run_offline_inference;
run_chunked_inference;
process_alignment;
_calculate;
_apply_filters;
split_text;
additional_split;
difference;
_split;
num2words;
get_segments;
CtcSegmentationParameters;
_print;
ctc_segmentation;
determine_utterance_segments;
write_output;
write_labels_for_audacity;
_prepare_tokenized_text_for_bpe_model;
prepare_text;
_get_blank_spans;
_compute_time;
float64;
load_file_into_df;
fillna;
read_json;
read_excel;
recommend_hyperparameters_human_readable;
recommend_hyperparameters;
estimating_customization_job_time;
memory_usage;
warn_completion_is_not_empty;
isnull;
warn_imbalanced_completion;
get_common_suffix;
nunique;
warn_missing_suffix;
validate_template;
parse_template;
warn_duplicated_rows;
duplicated;
drop_duplicated_rows;
drop_duplicates;
template_mapper;
drop_unrequired_fields;
convert_into_template;
convert_into_prompt_completion_only;
warn_and_drop_long_samples;
warn_low_n_samples;
show_first_example_in_df;
get_prepared_filename;
split_into_train_validation;
write_df_to_jsonl;
to_json;
print_select_messages;
print_all_messages;
test_recommend_hyperparameters;
test_warn_completion_is_not_empty;
test_warn_imbalanced_completion;
test_get_common_suffix;
test_warn_missing_suffix;
test_parse_template;
test_validate_template;
test_warn_duplicated_rows;
test_drop_duplicated_rows;
test_template_mapper;
test_drop_unrequired_fields;
test_convert_into_template;
test_convert_into_prompt_completion_only;
get_indexes_of_long_examples;
test_warn_and_drop_long_samples;
test_warn_low_n_samples;
test_show_first_example_in_df;
test_get_prepared_filename;
test_split_into_train_validation;
get_batch_starts_ends;
is_entry_in_all_lines;
is_entry_in_any_lines;
get_manifest_lines_batch;
get_batch_variables;
viterbi_decoding;
add_t_start_end_to_utt_obj;
write_manifest_out_line;
make_ctm_files;
make_ass_files;
test_add_t_start_end_to_utt_obj;
get_utt_obj_pp_string;
register_pretty;
pretty_call;
test_token_info;
get_utt_obj;
pretty_utterance;
test_restore_token_case;
restore_token_case;
_get_utt_id;
get_char_tokens;
is_sub_or_superscript_pair;
Utterance;
Word;
seconds_to_ass_format;
make_word_level_ass_file;
make_token_level_ass_file;
resegment_utt_obj;
_get_word_n_chars;
_get_segment_n_chars;
rgb_list_to_hex_bgr;
make_ctm;
listen_print_loop;
TranslateTextRequest;
TranslateText;
readframes;
StreamingRecognizeRequest;
batches;
server;
RivaTranslateServicer;
add_RivaTranslateServicer_to_server;
add_insecure_port;
wait_for_termination;
_load_puncutation_model;
TranslateTextResponse;
set_code;
set_details;
Translation;
method_handlers_generic_handler;
add_generic_rpc_handlers;
unary_unary_rpc_method_handler;
unary_unary;
get_translation;
route;
RIRCorpusGenerator;
RIRMixGenerator;
split_filter_part;
eval_bandwidth;
power_to_db;
append_data;
SequenceMatcher;
set_seqs;
get_matching_blocks;
absolute_audio_filepath;
plot_histogram;
histogram;
update_layout;
plot_word_accuracy;
Figure;
Bar;
download_vocabulary;
send_file;
Output;
update_wordstable;
real_select_click;
draw_table_with_metrics;
add_shape;
update_traces;
update_datatable;
show_item;
show_diff;
diff_match_patch;
diff_linesToChars;
diff_main;
diff_charsToLines;
diff_prettyHtml;
plot_signal;
make_subplots;
add_trace;
update_xaxes;
update_yaxes;
Scatter;
Heatmap;
update_player;
_wer_;
distance;
write_metrics;
draw_vocab;
query_input_output;
write_query;
read_query;
display_query;
Details;
Summary;
Div;
show_hide_element;
nav_click;
RIRMultiSpeakerSimulator;
MultiSpeakerSimulator;
get_token_cnt_spm;
from_generator;
Reader;
extend_tokenizer;
extend_tokenizer_llama;
extend_tokenizer_high_freq_tokens;
myFunc;
binary_search;
binary_search2;
get_high_freq_tokens;
check_parent_directory_exists;
get_token_cnt;
train_tokenizer;
train_new_from_iterator;
analyze_token_usage;
check_directory_exists;
merge_embed;
docker_executor;
run_data_pipeline;
download_slimpajama;
approve_source;
_split_shards;
_get_shard_list;
_extract_single_zst_file;
ZstdDecompressor;
read_to_iter;
_extract_single_shard;
_run_extraction_on_shard;
run_extraction;
_execute_cmd;
preprocess_data;
find_python_files -> join;
find_python_files -> exists;
find_python_files -> walk;
find_python_files -> endswith;
find_python_files -> append;
join -> synchronize;
join -> join;
exists -> exists;
exists -> index_file_path;
exists -> data_file_path;
exists -> getmember;
exists -> join;
walk -> map;
walk -> isinstance;
walk -> walk;
analyze_imports -> set;
analyze_imports -> walk;
analyze_imports -> open;
analyze_imports -> parse;
analyze_imports -> print;
analyze_imports -> read;
analyze_imports -> isinstance;
analyze_imports -> startswith;
analyze_imports -> split;
analyze_imports -> len;
analyze_imports -> add;
analyze_imports -> join;
analyze_imports -> exists;
analyze_imports -> find_top_level_packages;
analyze_imports -> get_init_imports;
open -> NotImplementedError;
open -> extractfile;
open -> FileNotFoundError;
open -> join;
parse -> isinstance;
parse -> to;
parse -> warning;
parse -> text_normalizer_call;
parse -> nullcontext;
parse -> hasattr;
parse -> parser;
parse -> set_phone_prob;
parse -> long;
parse -> unsqueeze_;
parse -> tensor;
parse -> encode;
parse -> unsqueeze;
parse -> print;
parse -> cuda;
parse -> len;
print -> str;
print -> info;
print -> warning;
print -> DataFrame;
print -> tabulate;
print -> round;
split -> is_tensor;
split -> ascontiguousarray;
split -> contiguous;
split -> len;
split -> split;
split -> size;
add -> jit;
add -> measure_length;
add -> add;
add -> isinstance;
add -> dir;
add -> items;
add -> startswith;
add -> extend;
add -> hasattr;
add -> callable;
add -> append;
add -> getattr;
add -> split_name;
add -> SegTree;
add -> get;
find_top_level_packages -> join;
find_top_level_packages -> listdir;
find_top_level_packages -> sorted;
find_top_level_packages -> exists;
find_top_level_packages -> print;
find_top_level_packages -> isdir;
find_top_level_packages -> append;
find_top_level_packages -> startswith;
find_collection_modules -> join;
find_collection_modules -> listdir;
find_collection_modules -> exists;
find_collection_modules -> print;
find_collection_modules -> isdir;
find_collection_modules -> walk;
find_collection_modules -> sorted;
find_collection_modules -> startswith;
find_collection_modules -> endswith;
find_collection_modules -> relpath;
find_collection_modules -> replace;
find_collection_modules -> append;
build_dependency_graph -> find_top_level_packages;
build_dependency_graph -> print;
build_dependency_graph -> find_python_files;
build_dependency_graph -> items;
build_dependency_graph -> relpath;
build_dependency_graph -> split;
build_dependency_graph -> len;
build_dependency_graph -> analyze_imports;
build_dependency_graph -> startswith;
build_dependency_graph -> sorted;
build_dependency_graph -> set;
build_dependency_graph -> endswith;
build_dependency_graph -> list;
build_dependency_graph -> add;
build_dependency_graph -> copy;
build_dependency_graph -> join;
build_dependency_graph -> exists;
build_dependency_graph -> walk;
build_dependency_graph -> dict;
build_dependency_graph -> replace;
build_dependency_graph -> listdir;
build_dependency_graph -> append;
build_dependency_graph -> isfile;
build_dependency_graph -> isdir;
build_dependency_graph -> find_collection_modules;
main -> dirname;
main -> build_dependency_graph;
main -> print;
main -> abspath;
main -> dumps;
main -> command;
main -> option;
main -> get_changed_files;
main -> list;
main -> set;
main -> open;
main -> dump;
main -> sorted;
main -> extend;
main -> write;
main -> hydra_runner;
main -> absolute;
main -> gather_mounts;
main -> add_mount_path;
main -> check_root_path;
main -> get;
main -> create_remote_directory;
main -> load;
main -> merge_configs;
main -> update_exp_manager_runtime;
main -> check_config_mount_paths;
main -> join;
main -> Experiment;
main -> strftime;
main -> get_execution_script_cmd;
main -> create_remote_config;
main -> isinstance;
main -> to_object;
main -> info;
main -> range;
main -> run_exp;
main -> Path;
main -> ValueError;
main -> len;
main -> warning;
main -> add_task;
main -> now;
main -> get_mounted_filepath;
main -> set_grad_enabled;
main -> is_dataclass;
main -> PunctuationCapitalization;
main -> word_error_rate;
main -> structured;
main -> RuntimeError;
main -> exists;
main -> FileNotFoundError;
main -> main;
main -> is_available;
main -> separate_punctuation;
main -> do_lowercase;
main -> rm_punctuation;
main -> DatasetPunctuationErrorRate;
main -> compute;
main -> compute_metrics_per_sample;
main -> reset;
main -> open_dict;
main -> empty_cache;
main -> loads;
main -> append;
main -> Trainer;
main -> exp_manager;
main -> get_base_model;
main -> check_vocabulary;
main -> setup_dataloaders;
main -> setup_optimization;
main -> fit;
main -> hasattr;
main -> NotImplementedError;
main -> from_config_dict;
main -> resolve_trainer_cfg;
main -> to_yaml;
main -> set_float32_matmul_precision;
main -> setup_model;
main -> set_trainer;
main -> eval;
main -> prepare_audio_data;
main -> compute_output_filename;
main -> SimpleTimer;
main -> asarray;
main -> write_transcription;
main -> seed_everything;
main -> device;
main -> to;
main -> set_default_att_context_size;
main -> autocast;
main -> cal_write_wer;
main -> getattr;
main -> change_decoding_strategy;
main -> no_grad;
main -> get_transcribe_config;
main -> restore_transcription_order;
main -> type;
main -> unlink;
main -> parse_multitask_prompt;
main -> next;
main -> start;
main -> transcribe;
main -> stop;
main -> to_container;
main -> parameters;
main -> mean;
main -> total_sec;
main -> std;
main -> endswith;
main -> match_train_config;
main -> _setup_dataloader_from_config;
main -> makedirs;
main -> ASRPredictionWriter;
main -> predict;
main -> close_output_file;
main -> is_initialized;
main -> is_global_rank_zero;
main -> restore_from;
main -> set_struct;
main -> int;
main -> barrier;
main -> load_from_checkpoint;
main -> from_pretrained;
main -> from_iterable;
main -> format;
main -> readlines;
main -> update_model_cfg;
main -> setup_multiple_test_data;
main -> set_enabled_adapters;
main -> freeze;
main -> test;
main -> update_encoder_config_to_support_adapter;
main -> pop;
main -> setup_training_data;
main -> add_adapter;
main -> is_adapter_available;
main -> train;
main -> unfreeze_enabled_adapters;
main -> update_model_config_to_support_adapter;
main -> setup_multiple_validation_data;
main -> save_adapters;
main -> keys;
main -> add_global_adapter_cfg;
main -> getcwd;
main -> str;
main -> clean_exp_ckpt;
main -> ArgumentParser;
main -> add_argument;
main -> parse_args;
main -> CacheAwareStreamingAudioBuffer;
main -> setup_streaming_params;
main -> append_audio_file;
main -> perform_streaming;
main -> time;
main -> enumerate;
main -> reset_buffer;
main -> round;
main -> splitext;
main -> basename;
main -> deepcopy;
main -> FrameBatchMultiTaskAED;
main -> error;
main -> glob;
main -> get_buffered_pred_feat_multitaskAED;
main -> float;
main -> ceil;
main -> FrameBatchASR;
main -> get_buffered_pred_feat;
main -> get_buffered_pred_feat_rnnt;
main -> BatchedFrameASRRNNT;
main -> LongestCommonSubsequenceBatchedFrameASRRNNT;
main -> floor;
main -> BatchedFrameASRTDT;
main -> EncDecCTCModel;
main -> maybe_init_from_pretrained_checkpoint;
main -> prepare_test;
main -> EncDecCTCModelBPE;
main -> EncDecHybridRNNTCTCBPEModel;
main -> EncDecHybridRNNTCTCModel;
main -> EncDecRNNTModel;
main -> EncDecRNNTBPEModel;
main -> mkdir;
main -> prepare_inference_manifest;
main -> profile_fn;
main -> extract_audio_features;
main -> run_vad_inference;
main -> run_asr_inference;
main -> table;
main -> key_averages;
main -> resolve;
main -> from_asr_config;
main -> ASRWithTTSModel;
main -> validate;
main -> ASRCTMPredictionWriter;
main -> AlignerWrapperModel;
main -> writelines;
main -> SentencePieceTokenizer;
main -> AutoTokenizer;
main -> split;
main -> Popen;
main -> close;
main -> communicate;
main -> Thread;
main -> lower;
main -> text_to_ids;
main -> EncDecK2SeqModelBPE;
main -> EncDecK2RnntSeqModelBPE;
main -> read_manifest;
main -> get_utt_info;
main -> cuda;
main -> score_with_sctk;
main -> EncDecCTCModelConfig;
main -> update_model_config;
main -> asdict;
main -> NemoConfig;
main -> EncDecCTCModelConfigBuilder;
main -> set_labels;
main -> set_optim;
main -> build;
main -> parse_arguments;
main -> export_model_if_required;
main -> ONNXGreedyBatchedRNNTInfer;
main -> resolve_audio_filepaths;
main -> TemporaryDirectory;
main -> _setup_transcribe_dataloader;
main -> tqdm;
main -> zip;
main -> preprocessor;
main -> decoding;
main -> decode_hypothesis;
main -> TorchscriptGreedyBatchedRNNTInfer;
main -> set_defaults;
main -> QuantDescriptor;
main -> set_default_quant_desc_input;
main -> setup_test_data;
main -> named_modules;
main -> test_dataloader;
main -> replace;
main -> compute_amax;
main -> save_to;
main -> disable_quant;
main -> enable_calib;
main -> disable;
main -> asr_model;
main -> initialize;
main -> dict;
main -> CTCDecodingConfig;
main -> CTCDecoding;
main -> WER;
main -> evaluate;
main -> export_onnx;
main -> OrderedDict;
main -> pprint;
main -> items;
main -> enable;
main -> frame_vad_infer_load_manifest;
main -> init_frame_vad_model;
main -> generate_vad_segment_table;
main -> write_manifest;
main -> debug;
main -> prepare_manifest;
main -> generate_vad_frame_pred;
main -> generate_overlap_vad_seq;
main -> as_posix;
main -> frame_vad_eval_detection_error;
main -> item;
main -> is_file;
main -> EncDecFrameClassificationModel;
main -> destroy_process_group;
main -> EncDecSpeakerLabelModel;
main -> EncDecClassificationModel;
main -> init_vad_model;
main -> write_rttm2manifest;
main -> rsplit;
main -> strip;
main -> EncDecMultiTaskModel;
main -> import_class_by_path;
main -> build_special_tokenizer;
main -> EncDecDenoiseMaskedTokenPredModel;
main -> SpeechEncDecSelfSupervisedModel;
main -> load_ssl_encoder;
main -> EncDecTransfModelBPE;
main -> get_metrics;
main -> get_evaluation_dataloader;
main -> defaultdict;
main -> isdir;
main -> min;
main -> equal;
main -> metric;
main -> get_full_path;
main -> isfile;
main -> get_model_class;
main -> model_class;
main -> commonpath;
main -> is_relative_to;
main -> rstrip;
main -> process;
main -> setattr;
main -> stat;
main -> is_absolute;
main -> get_args;
main -> train_config;
main -> HFAutoModelForCausalLM;
main -> make_strategy;
main -> finetune;
main -> calculate_valid_accumulate_grad_batches;
main -> WandbLogger;
main -> JitConfig;
main -> TEConfig;
main -> AutoResume;
main -> HFMockDataModule;
main -> make_squad_hf_dataset;
main -> LoRA;
main -> JitTransform;
main -> te_adam_with_flat_lr;
main -> pytorch_adam_with_flat_lr;
main -> logger;
main -> bool;
main -> vLLMHFExporter;
main -> export;
main -> DeployPyTriton;
main -> add_lora_models;
main -> forward;
main -> deploy;
main -> run;
main -> NemoQueryLLM;
main -> query_llm;
main -> create;
main -> create_trainer;
main -> NLPSaveRestoreConnector;
main -> MegatronTrainerBuilder;
main -> create_neva_model_and_processor;
main -> TemporalNevaDataset;
main -> DataLoader;
main -> do_inference;
main -> quantize;
main -> TensorRTMMExporter;
main -> MegatronNevaModel;
main -> merge_cfg_with;
main -> load_adapters;
main -> MegatronLMPPTrainerBuilder;
main -> peft_cfg_cls;
main -> summarize;
main -> convert_time_token;
main -> get_result;
main -> set_sharing_strategy;
main -> get_nmt_tokenizer;
main -> create_image_processor;
main -> listdir;
main -> pack_sequence;
main -> get_bin_path;
main -> IndexedDatasetBuilder;
main -> get_idx_path;
main -> finalize;
main -> make_supervised_data_module;
main -> add_item;
main -> end_document;
main -> match;
main -> IndexedDataset;
main -> sum;
main -> permutation;
main -> group;
main -> tensor;
main -> cat;
main -> set_inference_config;
main -> merge_inference_cfg;
main -> load_adapters_for_inference;
main -> load_audio_encoder_for_inference;
main -> setup;
main -> exit;
main -> restore_from_pretrained_models;
main -> setup_trainer_and_model_for_inference;
main -> manual_seed;
main -> pipeline;
main -> Generator;
main -> MegatronControlNet;
main -> ImageLogger;
main -> MegatronControlNetTrainerBuilder;
main -> destroy_model_parallel;
main -> MegatronDreamBooth;
main -> prepare_reg_data;
main -> NLPDDPStrategy;
main -> MegatronLatentDiffusion;
main -> model_cfg_modifier;
main -> TorchElasticEnvironment;
main -> save;
main -> merge;
main -> ImagenPipelineConfig;
main -> MegatronImagen;
main -> compile;
main -> DiscreteEpsDDPMDenoiser;
main -> CFGDenoiser;
main -> get_learned_conditioning;
main -> convert;
main -> randint;
main -> max;
main -> get_sigmas;
main -> randn_like;
main -> sample_euler_ancestral;
main -> decode_first_stage;
main -> clamp;
main -> new;
main -> repeat;
main -> zeros_like;
main -> rearrange;
main -> fromarray;
main -> size;
main -> paste;
main -> mode;
main -> numpy;
main -> encode_first_stage;
main -> cpu;
main -> array;
main -> MegatronLatentDiffusionEdit;
main -> set_device;
main -> SamplingPipeline;
main -> text_to_image;
main -> refiner;
main -> astype;
main -> CUDAGraphCallback;
main -> MegatronStableDiffusionTrainerBuilder;
main -> stream;
main -> randn;
main -> Stream;
main -> backward;
main -> zero_grad;
main -> diffusion_model;
main -> get_dummy_inputs;
main -> get_input_output_names;
main -> get_dynamic_axis;
main -> VAEWrapper;
main -> FrozenCLIPWrapper;
main -> FrozenOpenCLIPWrapper;
main -> ones;
main -> __init__;
main -> post_quant_conv;
main -> decoder;
main -> transformer;
main -> pad;
main -> encode_with_transformer;
main -> build_engine;
main -> super;
main -> get_input_profile;
main -> perform_save_locally;
main -> register;
main -> load_calib_prompts;
main -> quantize_lvl;
main -> generate_dummy_inputs;
main -> onnx_export;
main -> get_int8_config;
main -> do_calibrate;
main -> restore;
main -> get_input_profile_unet;
main -> MegatronDiffusionEngine;
main -> StableDiffusionXLTRTPipeline;
main -> loadEngines;
main -> activateEngines;
main -> loadResources;
main -> torch_dtype_from_precision;
main -> build_imagenet_validation_dataloader;
main -> average_losses_across_data_parallel_group;
main -> stack;
main -> text_encoder;
main -> norm;
main -> vision_encoder;
main -> normalize;
main -> accuracy;
main -> zeros;
main -> get_preprocess_fns;
main -> softmax;
main -> unsqueeze;
main -> text_transform;
main -> val_image_transform;
main -> MegatronCLIPModel;
main -> image_transform;
main -> _get_autocast_dtype;
main -> sigmoid;
main -> model;
main -> image_transform_fn;
main -> get_class;
main -> instantiate;
main -> model_cls;
main -> mesh;
main -> load_model_from_config;
main -> generate;
main -> load_prompts;
main -> round_to_mult;
main -> remove_padded_prompts;
main -> to_img;
main -> CustomProgressBar;
main -> timedelta;
main -> RequestDataSet;
main -> instantiate_model_and_trainer;
main -> DuplexTextNormalizationModel;
main -> ElectronicNormalizer;
main -> WhitelistNormalizer;
main -> normalize_list;
main -> _get_predictions;
main -> input;
main -> post_process_punct;
main -> _infer;
main -> TextNormalizationTestDataset;
main -> process_file;
main -> read_data_file;
main -> print_stats;
main -> search;
main -> values;
main -> load_model;
main -> build_index;
main -> map_idx_to_ids;
main -> read_index;
main -> query_index;
main -> zfill;
main -> EntityLinkingModel;
main -> update_data_dir;
main -> GLUEModel;
main -> BertDPRModel;
main -> BertJointIRModel;
main -> set_start_method;
main -> MegatronBertTrainerBuilder;
main -> flatten_dict;
main -> update;
main -> use_inference_server;
main -> inject_model_parallel_rank;
main -> _peft_cfg;
main -> IntentSlotClassificationModel;
main -> update_data_dir_for_testing;
main -> predict_from_examples;
main -> MultiLabelIntentSlotClassificationModel;
main -> optimize_threshold;
main -> BERTLMModel;
main -> DDPStrategy;
main -> AppState;
main -> mkdtemp;
main -> getmembers;
main -> MegatronMambaModel;
main -> restore_model_config;
main -> clear;
main -> force_cpu_model;
main -> is_bf16_supported;
main -> GradScaler;
main -> merge_partition;
main -> MegatronHalfPrecisionPlugin;
main -> PipelineMixedPrecisionPlugin;
main -> extractfile;
main -> split_tp_partition_only;
main -> state_dict;
main -> named_parameters;
main -> read;
main -> MegatronBARTModel;
main -> ModelSummary;
main -> MegatronBertModel;
main -> cls;
main -> rmtree;
main -> set_virtual_parallel_rank_safely;
main -> split_partition;
main -> load_state_dict;
main -> NamedTemporaryFile;
main -> seek;
main -> _merge_model_arch_fields;
main -> DistillationMegatronGPTModel;
main -> initialize_model_parallel;
main -> get_pipeline_model_parallel_rank;
main -> get_tensor_model_parallel_rank;
main -> trim_layers;
main -> is_pipeline_first_stage;
main -> MegatronServer;
main -> LongTensor;
main -> broadcast;
main -> new_event_loop;
main -> partial;
main -> MCoreTokenizerWrappper;
main -> GPTInferenceWrapper;
main -> SimpleTextGenerationController;
main -> MCoreEngine;
main -> CommonInferenceParams;
main -> ids_to_text;
main -> fake_initialize_model_parallel;
main -> MegatronGPTModel;
main -> load_config;
main -> get_calib_data_iter;
main -> drop_mcore_gpt_layers;
main -> prune;
main -> predict_step;
main -> Quantizer;
main -> modify_model_config;
main -> EnvironmentError;
main -> compute_model_parallel_rank;
main -> NLPMixedPrecisionPlugin;
main -> NLPNativeBfloat16PrecisionPlugin;
main -> NLPPrecisionPlugin;
main -> modify_pretrained_cfg;
main -> MegatronRetrievalModel;
main -> make_base_shapes;
main -> MixedPrecisionPlugin;
main -> is_unitialized;
main -> setup_environment;
main -> launch;
main -> load_from_nemo;
main -> MegatronRetroFinetuneModel;
main -> StatelessTimer;
main -> register_optimizer;
main -> AdamWParams;
main -> AdamParams;
main -> MegatronRetroModel;
main -> evaluate_predictions;
main -> process_qasample;
main -> process_qaresponse;
main -> QAExample;
main -> T5RequestDataset;
main -> MegatronT5Model;
main -> MegatronT5TrainerBuilder;
main -> validate_checkpoint_loading_args;
main -> load_from_checkpoint_dir;
main -> TransformerLMModel;
main -> get_model_module_list;
main -> get_forward_loop;
main -> train_dataloader;
main -> MTBottleneckConfig;
main -> MTBottleneckModel;
main -> MTDataPreproc;
main -> MTEncDecConfig;
main -> MTEncDecModel;
main -> MTFineTuneConfig;
main -> _CheckpointConnector;
main -> MegatronNMTModel;
main -> AttributeError;
main -> EnsembleBeamSearchSequenceGenerator;
main -> BeamSearchSequenceGeneratorWithLanguageModel;
main -> BeamSearchSequenceGenerator;
main -> translate_text;
main -> translate;
main -> prepare_inference_batch;
main -> tolist;
main -> score_fusion;
main -> eval_loss_fn;
main -> lm_model;
main -> all;
main -> IndexError;
main -> argmax;
main -> view;
main -> spawn;
main -> device_count;
main -> load_json;
main -> convert_msmarco_to_squad_format;
main -> dump_json;
main -> inference;
main -> from_defaults;
main -> load_index_from_storage;
main -> as_query_engine;
main -> query;
main -> NeMoGPTLLM;
main -> NeMoBertEmbeddings;
main -> load_data;
main -> SentenceSplitter;
main -> from_documents;
main -> persist;
main -> SimpleDirectoryReader;
main -> BytesIO;
main -> TarInfo;
main -> addfile;
main -> getbuffer;
main -> infer;
main -> Text2SparqlModel;
main -> TextClassificationModel;
main -> classifytext;
main -> spoken_preprocessing;
main -> fill_alignment_matrix;
main -> check_monotonicity;
main -> readline;
main -> get_targets;
main -> get_targets_from_back;
main -> sub;
main -> add;
main -> filter_file;
main -> startswith;
main -> get_replacement_vocab;
main -> filter_by_vocab;
main -> get_labeled_corpus;
main -> Counter;
main -> load_manifest;
main -> add_punctuation_capitalization;
main -> PunctuationCapitalizationLexicalAudioModel;
main -> update_config_after_restoring_from_checkpoint;
main -> PunctuationCapitalizationLexicalAudioConfig;
main -> get_available_model_names;
main -> list_available_models;
main -> PunctuationCapitalizationModel;
main -> PunctuationCapitalizationConfig;
main -> add_predictions;
main -> evaluate_from_file;
main -> TokenClassificationModel;
main -> setup_validation_data;
main -> setup_loss;
main -> create_tarred_dataset;
main -> build_label_ids_from_list_of_labels;
main -> ZeroShotIntentModel;
main -> SLURPEvaluator;
main -> run_inference;
main -> format_results;
main -> SLUIntentSlotBPEModel;
main -> unfreeze;
main -> diarize;
main -> ClusteringDiarizer;
main -> ASRDecoderTimeStamps;
main -> set_asr_model;
main -> run_ASR;
main -> OfflineDiarWithASR;
main -> run_diarization;
main -> get_transcript_with_speaker_labels;
main -> gather_eval_results;
main -> print_errors;
main -> write_session_level_result_in_csv;
main -> load_postprocessing_from_yaml;
main -> get_tensor_path;
main -> audio_rttm_map;
main -> test_batch;
main -> run_optuna_hyperparam_search;
main -> convert_pred_mat_to_segments;
main -> score_labels;
main -> read_and_maybe_sort_manifest;
main -> EncDecDiarLabelModel;
main -> NeuralDiarizer;
main -> SortformerEncLabelModel;
main -> get_embeddings;
main -> WaveformFeaturizer;
main -> AudioToSpeechLabelDataset;
main -> batch_inference;
main -> matmul;
main -> where;
main -> squeeze;
main -> speech_to_text_llm_train;
main -> speech_to_text_llm_validate;
main -> sort_by_duration;
main -> word_error_rate_detail;
main -> set_default_dtype;
main -> EnglishTextNormalizer;
main -> perf_counter;
main -> guess_parse_cutset;
main -> ToAudio;
main -> DynamicCutSampler;
main -> token_to_id;
main -> normalizer;
main -> SequentialJsonlWriter;
main -> GenerationConfig;
main -> parse_hyp;
main -> load_checkpoint;
main -> save_pretrained;
main -> AlignerModel;
main -> LearningRateMonitor;
main -> LogEpochTimeCallback;
main -> disambiguate_dataset;
main -> quit;
main -> AudioCodecModel;
main -> FastPitchModel;
main -> FastPitchModel_SSL;
main -> HifiGanModel;
main -> MagpieTTS_Model;
main -> MagpieTTS_ModelDPO;
main -> MagpieTTS_ModelInference;
main -> MixerTTSModel;
main -> prepare_model_weights;
main -> RadTTSModel;
main -> SpectrogramEnhancerModel;
main -> SSLDisentangler;
main -> Tacotron2Model;
main -> make_parser;
main -> generate_spectrogram;
main -> set_verbosity;
main -> parse;
main -> parser;
main -> convert_spectrogram_to_audio;
main -> trim;
main -> UnivNetModel;
main -> VitsModel;
main -> WaveGlowModel;
main -> disambiguate_manifest;
main -> remove;
main -> disambiguate;
main -> HeteronymClassificationModel;
main -> convert_graphemes_to_phonemes;
main -> get_model;
main -> MegatronT5SpeechLMModel;
main -> ClassificationTransform;
main -> ImageFolder;
main -> ImageFolderDataset;
main -> MegatronVitClassificationModel;
main -> find_spec;
main -> module_from_spec;
main -> exec_module;
main -> process_collection;
main -> process_member;
main -> VaeWrapper;
main -> trt_compile;
main -> model_wrapper;
main -> autoencode;
main -> current_device;
main -> make_builder;
main -> joinpath;
main -> smart_resize;
main -> encode;
main -> to_imgstr;
main -> tokenizer;
main -> IntTensor;
main -> pil_to_tensor;
main -> load_dataset;
main -> resize;
main -> pad_video_batch;
main -> numpy2tensor;
main -> reshape;
main -> text_tokenizer;
main -> construct_negatives;
main -> ParameterGrid;
main -> ContextGraphCTC;
main -> add_to_graph;
main -> decoding_step;
main -> compute_fscore;
main -> ctc_decoder;
main -> __write_tarred_tokenized_text_dataset;
main -> basicConfig;
main -> get_tokenizer;
main -> __tokenize_text;
main -> BeamScoresDataset;
main -> compute_wer;
main -> flatten;
main -> linear_search_wer;
main -> getfullargspec;
main -> log_softmax;
main -> argmin;
main -> gather;
main -> beam_search_eval;
main -> ctc_decoder_predictions_tensor;
main -> NgramMerge;
main -> make_arpa;
main -> make_kenlm;
main -> make_symbol_list;
main -> test_perplexity;
main -> get_train_list;
main -> setup_tokenizer;
main -> iter_files;
main -> wait;
main -> from_arpa;
main -> rename;
main -> convert_manifest_nemo_to_lhotse;
main -> dtype;
main -> copy;
main -> copytree;
main -> process_config;
main -> insert;
main -> globals;
main -> import_module;
main -> filter;
main -> get_nemo2_model;
main -> connect;
main -> dict_list_map_inplace;
main -> save_checkpoint;
main -> io_dump;
main -> sharded_state_dict;
main -> is_dir;
main -> ckpt_to_weights_subdir;
main -> maybe_finalize_save_checkpoint;
main -> ckpt_to_context_subdir;
main -> MegatronStrategy;
main -> megatron_cpu_init_context;
main -> configure_model;
main -> LocalNonpersistentObject;
main -> _unpack_nemo_file;
main -> from_trainer;
main -> bf16_mixed;
main -> setLevel;
main -> BuildEnsembleConfig;
main -> find_best_confidence;
main -> train_model_selection;
main -> ConfidenceEnsembleModel;
main -> getLogger;
main -> DictConfig;
main -> subsample_manifest;
main -> compute_all_confidences;
main -> compute_confidence;
main -> add_noise;
main -> create_manifest;
main -> __process_set;
main -> __maybe_download_file;
main -> __extract_all_files;
main -> __process_data;
main -> extractall;
main -> process_files;
main -> __extract_file;
main -> __create_manifest;
main -> upper;
main -> read_csv;
main -> to_dict;
main -> __get_vocab;
main -> build_manifest;
main -> create_wavs;
main -> process_transcripts;
main -> segment_audio;
main -> split_train_val_test;
main -> load_list_write_manifest;
main -> generate_variety_noise;
main -> NameError;
main -> rebalance_json;
main -> process_data;
main -> seed;
main -> process_assistant;
main -> shuffle;
main -> process_data_for_prompt_learning;
main -> __remove_tarred_files;
main -> extract_file;
main -> _generate_manifest;
main -> download;
main -> Parallel;
main -> delayed;
main -> _compute_stats;
main -> get_base_dir;
main -> _get_sup_data_filepath;
main -> sort;
main -> __generate_mels;
main -> available_formats;
main -> iterdir;
main -> from_records;
main -> sort_values;
main -> to_csv;
main -> __save_json;
main -> __text_normalization;
main -> Random;
main -> load_lora;
main -> load_context;
main -> symlink;
main -> parallel;
main -> finetune_recipe;
main -> configure_tokenizer;
main -> Config;
main -> slurm_executor;
main -> local_executor_torchrun;
main -> get_parser;
main -> dryrun;
main -> Partial;
main -> clone;
main -> to_fabric;
main -> import_model;
main -> batch_decode;
main -> MegatronMixedPrecision;
main -> apply_chat_template;
main -> arange;
main -> MockDataModule;
main -> Gemma3Config1B;
main -> Gemma3Model;
main -> OptimizerConfig;
main -> CosineAnnealingScheduler;
main -> MegatronOptimizerModule;
main -> ModelCheckpoint;
main -> TensorBoardLogger;
main -> NeMoLogger;
main -> pretrain;
main -> DistributedDataParallelConfig;
main -> TimingCallback;
main -> PruningConfig;
main -> get_data_module;
main -> QuantizationConfig;
main -> ExportConfig;
main -> ptq;
main -> find_audio_files;
main -> create_chosen_rejected_records;
main -> filter_best_and_worst_records;
main -> normalize_rejected_rewards;
main -> choice;
main -> create_audio_context_record;
main -> create_text_context_record;
main -> RougeScorer;
main -> metric_max_over_ground_truths;
main -> score;
main -> RTLConverter;
main -> batch_generate;
main -> generate_question_answers;
main -> rewrite_dense_caption;
main -> generate_one;
main -> YAML;
main -> get_edges_and_num_lines;
main -> Value;
main -> cat_results;
main -> cpu_count;
main -> Pool;
main -> map_async;
main -> ready;
main -> sleep;
main -> get_lock;
main -> setup_pre_and_post_processing_utils;
main -> tokenize_normalize;
main -> ImportError;
main -> aug_switch_near_letters;
main -> aug_drop_letter;
main -> map;
main -> simulate_typos;
main -> build_index_files;
main -> on_train_end;
main -> from_config;
main -> tokenize_dataset;
main -> create_hist;
main -> create_packing_strategy;
main -> fill_packing_strategy;
main -> PackingArgs;
main -> Encoder;
main -> imap;
main -> fix_for_O2;
main -> start_sentence_bert_server;
main -> ComboRetrievalServer;
main -> DynamicRetrievalServer;
main -> RetrievalServer;
main -> RetroDemoWebApp;
main -> run_demo;
main -> Worker;
main -> process_result;
main -> calculate_key;
main -> get_prompt;
main -> get_data_records;
main -> create_manifest_with_alignments;
main -> create_librispeech_ctm_alignments;
main -> rreplace;
main -> segments_manifest_to_subsegments_manifest;
main -> get_subsegment_dict;
main -> write_truncated_subsegments;
main -> split_into_pairwise_rttm;
main -> get_input_manifest_dict;
main -> make_meta_dict;
main -> get_pyannote_objs_from_rttms;
main -> evaluate_der;
main -> read_file_path;
main -> make_trans_info_dict;
main -> get_csv_columns;
main -> process_map;
main -> write_file;
main -> read_file;
main -> count_and_consider_only;
main -> StratifiedShuffleSplit;
main -> abs;
main -> read_cutset_from_config;
main -> RejectionsCounter;
main -> estimate_token_buckets;
main -> print_report;
main -> set_option;
main -> load_tokenizer;
main -> from_dotlist;
main -> prefetch;
main -> TokenCountFilter;
main -> TokenPerTokenFilter;
main -> islice;
main -> literal_eval;
main -> prepare_output_dirs;
main -> process_dataset;
main -> format_exc;
main -> create_tar_datasets;
main -> vars;
main -> process_index_path;
main -> estimate_duration_buckets;
main -> warn;
main -> DurationFilter;
main -> create_shards;
main -> argument;
main -> next_multiple_of_64;
main -> split_list;
main -> combine_manifests;
main -> create_cs_manifest;
main -> get_experiment_params;
main -> flush;
main -> run_confidence_benchmark;
main -> RNNTDecodingConfig;
main -> apply_confidence_parameters;
main -> AudioDataset;
main -> compute_pitch_stats;
main -> forward_for_export;
main -> get_mel_spectrogram;
main -> segment_batch;
main -> long;
main -> detach;
main -> t;
main -> exp;
main -> mel;
main -> get_ssl_features_disentangled;
main -> get_speaker_embedding;
main -> generate_wav;
main -> get_pitch_contour;
main -> load_wav;
main -> system;
main -> __build_document_from_manifests;
main -> get_column_codes;
main -> unique;
main -> dropna;
main -> load_image;
main -> processor;
main -> model_hf;
main -> vision_model;
main -> text_model;
main -> ClipTaskEncoder;
main -> CLIPModel;
main -> EnergonMultiModalDataModule;
main -> CLIPConfigB32;
main -> ClipMockDataModule;
main -> RestoreConfig;
main -> expand_as;
main -> decode;
main -> _setup_trainer_and_restore_model;
main -> get_rank;
main -> get_forward_backward_func;
main -> SingleBatchIterator;
main -> fwd_bwd_function;
main -> is_pipeline_last_stage;
main -> get_tensor_model_parallel_world_size;
main -> all_gather;
main -> get_last_rank;
main -> get_tensor_model_parallel_group;
main -> export_ckpt;
main -> Llama2Config7B;
main -> HFCLIPVisionConfig;
main -> MultimodalProjectorConfig;
main -> LlavaNextConfig;
main -> LlavaNextModel;
main -> MultiModalSampleConfig;
main -> LlavaNextTaskEncoder;
main -> LlavaNextMockDataModule;
main -> LlavaNextConfig7B;
main -> ImageToken;
main -> MLlamaModel;
main -> ImageDataConfig;
main -> MLlamaPreloadedDataModule;
main -> MLlamaMockDataModule;
main -> MLlamaTemplateConfig;
main -> LlamaTaskEncoder;
main -> MLlamaConfig11BInstruct;
main -> NevaConfig;
main -> NevaModel;
main -> NevaPreloadedDataModule;
main -> NevaMockDataModule;
main -> MegatronCommOverlapCallback;
main -> LLaVATemplateConfig;
main -> MultiModalTaskEncoder;
main -> Llava15Config7B;
main -> LlavaModel;
main -> legacy_generate;
main -> get_gpt_modelopt_spec;
main -> Qwen2VLImageProcessor;
main -> llm_config_class;
main -> Qwen2VLVisionConfig;
main -> Qwen2VLConfig;
main -> Qwen2VLModel;
main -> Qwen2VLDataConfig;
main -> Qwen2VLPreloadedDataModule;
main -> Qwen2VLMockDataModule;
main -> Qwen2VLTaskEncoder;
main -> process_vision_info;
main -> Qwen2VLConfig2B;
main -> Llama4ScoutExperts16Config;
main -> Llama4OmniModel;
main -> Llama4TaskEncoder;
main -> EnergonDataModule;
main -> Llama4MockDataModule;
main -> NsysCallback;
main -> Llama4TaskEncoderConfig;
main -> walk;
main -> loadtxt;
main -> rglob;
main -> get_top_comments;
main -> today;
main -> pretrain_recipe;
main -> ParameterDebugger;
main -> MiscAttributeValidator;
main -> verify_ckpt_dir;
main -> small_llama_cfg;
main -> train_data;
main -> AssertOptimizerParamGroupsHaveAtLeastTwoWeightDecays;
main -> precision_recipe;
main -> MCoreModelAttributeValidator;
main -> PytorchProfilerCallback;
main -> StopBeforeEnd;
main -> create_verify_precision;
main -> PreTrainingDataModule;
main -> MixtralConfig8x3B;
main -> MegatronOptim;
main -> MixtralModel;
main -> load_dcp;
main -> access;
main -> McoreDDPConfig;
main -> Size;
main -> LocalExecutor;
main -> FaultTolerancePlugin;
main -> straggler_det_callback;
main -> scaled_init_method_normal;
main -> MixtralConfig8x7B;
main -> init_method_normal;
main -> HyenaModel;
main -> parse_dataset_config;
main -> RichModelSummary;
main -> FLOPsMeasurementCallback;
main -> PreemptionCallback;
main -> DdpParityChecker;
main -> GarbageCollectionCallback;
main -> MambaModel;
main -> SquadDataModule;
main -> get_latest_checkpoint;
main -> verify_peft_checkpoint_structure;
main -> load_adapter;
main -> ValidateCheckpointRestoreCallback;
main -> verify_sft_checkpoint_structure;
main -> fill_;
main -> skip;
main -> make_trainer_optim;
main -> test_failing;
main -> test_working;
main -> Repo;
main -> cal_write_text_metric;
main -> cal_target_metadata_wer;
main -> get_batch_starts_ends;
main -> is_entry_in_all_lines;
main -> is_entry_in_any_lines;
main -> change_attention_model;
main -> get_manifest_lines_batch;
main -> get_batch_variables;
main -> viterbi_decoding;
main -> add_t_start_end_to_utt_obj;
main -> write_manifest_out_line;
main -> make_ctm_files;
main -> make_ass_files;
main -> RIRCorpusGenerator;
main -> RIRMixGenerator;
main -> generate_sessions;
main -> RIRMultiSpeakerSimulator;
main -> MultiSpeakerSimulator;
req_file -> isinstance;
req_file -> open;
req_file -> extend;
req_file -> join;
req_file -> list;
req_file -> map;
req_file -> readlines;
map -> hasattr;
map -> map;
map -> isinstance;
map -> pop;
map -> all;
map -> _map_module_list;
map -> _map_module;
map -> _map_module_dict;
map -> keys;
map -> ValueError;
map -> enumerate;
map -> split;
map -> append;
readlines -> open;
readlines -> readlines;
__call_checker -> list;
__call_checker -> append;
__call_checker -> announce;
__call_checker -> call;
__call_checker -> extend;
__call_checker -> str;
__call_checker -> join;
_isort -> __call_checker;
_isort -> split;
_black -> __call_checker;
_black -> split;
_pass -> announce;
_fail -> announce;
run -> _isort;
run -> _black;
run -> _pass;
run -> _fail;
run -> exit;
run -> tolist;
run -> get_sampler_config;
run -> manual_seed;
run -> inference_mode;
run -> autocast;
run -> Runtime;
run -> synchronize;
run -> perf_counter;
run -> encode_prompt;
run -> ConcatTimestepEmbedderND;
run -> items;
run -> randn;
run -> sampler;
run -> decode_images;
run -> clamp;
run -> print;
run -> perform_save_locally;
run -> reshape;
run -> repeat;
run -> cat;
run -> prod;
run -> denoiser;
run -> map;
run -> additional_emb_model;
run -> int;
run -> Tensor;
run -> to;
run -> isinstance;
run -> Random;
run -> seed;
run -> _shuffle;
run -> get_value;
run -> is_initialized;
run -> get_data_parallel_rank;
run -> run;
run -> start;
run -> Thread;
run -> Exception;
run -> setup_inputs;
run -> generate;
run -> range;
run -> print_result;
run -> super;
get_changed_files -> Repo;
get_changed_files -> diff;
get_changed_files -> join;
get_changed_files -> commit;
get_changed_files -> append;
get_changed_files -> print;
get_changed_files -> exit;
get_changed_files -> dirname;
dump -> copy_file;
dump -> str;
dump -> exists;
dump -> Config;
dump -> pathize;
dump -> makedirs;
dump -> iterdir;
dump -> is_dir;
dump -> dump;
dump -> super;
dump -> save_pretrained;
dump -> Path;
dump -> file_path;
dump -> open;
get_init_imports -> add;
get_init_imports -> join;
get_init_imports -> exists;
get_init_imports -> walk;
get_init_imports -> open;
get_init_imports -> parse;
get_init_imports -> print;
get_init_imports -> read;
get_init_imports -> isinstance;
get_init_imports -> startswith;
get_init_imports -> split;
get_init_imports -> get_init_imports;
copy -> OrnsteinUhlenbeckVarianceExplodingSDE;
copy -> ReverseStochasticDifferentialEquation;
copy -> copy;
copy -> SBNoiseScheduleVE;
copy -> SBNoiseScheduleVP;
copy -> Conversation;
copy -> WithCopy;
dict -> asdict;
dict -> len;
dict -> get_images;
dict -> type;
write -> _maybe_increment_shard;
write -> to_dict;
write -> write;
write -> list_cuts;
write -> load_audio;
write -> with_suffix;
write -> Path;
write -> _get_pointers;
write -> array;
write -> pack;
write -> tobytes;
write -> len;
write -> _get_chunk_id_and_address;
write -> code;
write -> int;
send_slack_notification -> get;
send_slack_notification -> int;
send_slack_notification -> Github;
send_slack_notification -> get_repo;
send_slack_notification -> print;
send_slack_notification -> post;
send_slack_notification -> raise_for_status;
send_slack_notification -> get_pull;
send_slack_notification -> jobs;
send_slack_notification -> replace;
send_slack_notification -> get_workflow_run;
send_slack_notification -> join;
send_slack_notification -> split;
get -> getattr;
get -> frombuffer;
get -> dtype;
get -> view;
get -> numel;
get -> min;
get -> get_datastore_object;
get -> get;
get -> _reduction_fn;
get -> ones;
post -> get_json;
post -> completion;
post -> chat_completion;
post -> RuntimeError;
setup -> add_css_file;
setup -> add_js_file;
setup -> DiTVideoLatentFakeDataset;
setup -> _MockT2IDataset;
setup -> MegatronDataSampler;
setup -> int;
setup -> ceil;
setup -> _MockBERTDataset;
setup -> build;
setup -> hasattr;
setup -> isinstance;
setup -> BlendedMegatronDatasetBuilder;
setup -> setup;
setup -> map;
setup -> super;
setup -> _MockGPTDataset;
setup -> _MockT5Dataset;
setup -> _get_total_params_across_model_parallel_groups_gpt_bert;
setup -> info;
setup -> get;
setup -> _extract_consumed_samples_from_ckpt;
setup -> format;
setup -> get_pipeline_model_parallel_world_size;
setup -> setup_transformer_engine_tp_groups;
setup -> build_train_valid_test_datasets_energon;
setup -> build_train_valid_test_datasets;
setup -> setup_training_data;
setup -> setup_validation_data;
setup -> setup_test_data;
setup -> enumerate;
setup -> get_pipeline_model_parallel_rank;
setup -> get_tensor_model_parallel_rank;
setup -> ImportError;
setup -> sync_initial_word_embeddings;
setup -> manual_seed;
setup -> cuda;
setup -> all_reduce;
setup -> get_num_microbatches;
setup -> sum;
setup -> tensor;
setup -> get_model_parallel_group;
setup -> get_data_parallel_rank;
setup -> nelement;
setup -> parameters;
setup -> setup_rng;
setup -> build_imagenet_validation_dataloader;
setup -> setup_training_dataloader;
setup -> setup_eval_dataloader;
setup -> init_prompt_encoder;
setup -> ValueError;
setup -> init_new_prompts;
setup -> sync_embeddings;
setup -> build_LDDL_data;
setup -> barrier;
setup -> first_stage_of_pipeline;
setup -> freeze_existing_word_embeddings;
setup -> get_model_module_list;
setup -> freeze;
setup -> summarize;
setup -> update_num_microbatches;
setup -> _reconfigure_limit_batches;
setup -> initialize_last_rank_embeddings;
setup -> setup_transformer_engine_cp_groups;
setup -> maybe_setup_test;
setup -> _get_total_params_across_model_parallel_groups_enc_dec;
setup -> sync_initial_position_embeddings;
setup -> sync_initial_encoder_relative_position_embeddings;
setup -> sync_initial_decoder_relative_position_embeddings;
setup -> sync_initial_decoder_cross_attention_relative_position_embeddings;
setup -> model_to_device;
setup -> setup_precision_plugin;
setup -> get_text_processor;
setup -> SpeechLMDataSampler;
setup -> _create_dataset;
setup -> propagate_model_guid;
setup -> setup_multi_validation_data;
setup -> setup_multi_test_data;
setup -> open_dict;
setup -> setup_metric;
setup -> get_inference_config;
setup -> set_inference_config;
setup -> ModuleList;
setup -> _MockClipDataset;
setup -> _Qwen2VLMockDataset;
setup -> has_dist_env_init_or_rank_env_var;
setup -> MockLlama4Dataset;
setup -> warning;
setup -> _MockLlavaNextDataset;
setup -> _MockMLlamaDataset;
setup -> len;
setup -> MLlamaDataset;
setup -> _MockNevaDataset;
setup -> NevaDataset;
setup -> Qwen2VLDataset;
setup -> setup_multiple_validation_data;
setup -> setup_multiple_test_data;
setup -> train_dataloader;
setup -> val_dataloader;
setup -> test_dataloader;
setup -> AppState;
setup -> makedirs;
setup -> _setup_files_to_move;
setup -> _setup_file_logging;
setup -> is_global_rank_zero;
setup -> _handle_task_config;
setup -> _setup_trainer_loggers;
setup -> _setup_trainer_model_checkpoint;
setup -> error;
setup -> exists;
setup -> Path;
setup -> str;
setup -> cwd;
setup -> strftime;
setup -> get_trainer_ckpt_path;
setup -> NotImplementedError;
setup -> getattr;
setup -> _try_restore_tokenizer;
setup -> _extract_path;
setup -> get_context_path;
setup -> is_dir;
setup -> _check_num_cuda_device_max_connections;
setup -> _get_model_comm_overlap_cfgs;
setup -> _apply_cfgs;
setup -> _get_optimizer_overlap_cfgs;
setup -> is_initialized;
setup -> enable_on_rank;
setup -> _record_memory_history;
setup -> debug;
setup -> _remove_unfinished_checkpoints;
setup -> _call_counter;
setup -> _set_cfgs;
setup -> get_wrappped_io;
setup -> create_checkpoint_io;
setup -> get_automodel_from_trainer;
setup -> type;
setup -> filter;
setup -> setup_microbatch_calculator;
setup -> parallelize;
setup -> to;
setup -> setup_optimizers;
setup -> setup_data_sampler;
setup -> fix_progress_bar;
setup -> setup_megatron_parallel;
setup -> apply;
setup -> _data_fetcher_wrapper;
setup -> configure_ddp;
setup -> _MegatronAutomaticOptimization;
setup -> selective_restore;
setup -> any;
setup -> _enable_model_averaging;
setup -> broadcast_params;
setup -> append;
setup -> broadcast;
setup -> AsyncFinalizerCallback;
setup -> get_expert_data_parallel_group;
setup -> get_data_parallel_group;
setup -> get_global_rank;
setup -> _merge_callbacks;
setup -> FaultTolerance;
setup -> Config;
setup -> all;
setup -> dir;
setup -> get_launcher;
setup -> logger_fn;
setup -> safe_load;
setup -> serialize;
setup -> join;
setup -> YamlSerializer;
setup -> ZlibJSONSerializer;
setup -> list;
setup -> deserialize;
setup -> keys;
setup -> nproc_per_node;
setup -> split;
setup -> get_vboost_srun_cmd;
setup -> get_amp_autocast_init;
setup -> get_ddp_init;
setup -> MNISTCustom;
setup -> random_split;
setup -> ToTensor;
setup -> Generator;
gather_mounts -> get;
gather_mounts -> list;
gather_mounts -> expanduser;
gather_mounts -> keys;
gather_mounts -> open_dict;
gather_mounts -> info;
gather_mounts -> startswith;
gather_mounts -> append;
keys -> iterdir;
keys -> keys;
info -> isEnabledFor;
info -> _log;
info -> _logged_once;
check_root_path -> str;
check_root_path -> replace;
check_root_path -> exists;
check_root_path -> FileNotFoundError;
check_root_path -> startswith;
check_root_path -> ValueError;
merge_configs -> set;
merge_configs -> masked_copy;
merge_configs -> resolve;
merge_configs -> merge;
merge_configs -> check_missing_values;
merge_configs -> keys;
merge_configs -> open_dict;
merge_configs -> hasattr;
merge_configs -> ValueError;
merge_configs -> list;
merge_configs -> items;
resolve -> RuntimeError;
resolve -> join;
resolve -> keys;
merge -> info;
merge -> join;
merge -> ngrammerge;
merge -> str;
merge -> arpa2mod;
merge -> split;
merge -> isinstance;
merge -> is_dict;
merge -> merge;
merge -> Exception;
merge -> keys;
merge -> replace;
merge -> print;
merge -> range;
merge -> warning;
merge -> float;
merge -> type_as;
merge -> cat;
merge -> to;
check_missing_values -> hasattr;
check_missing_values -> items;
check_missing_values -> check_missing_values;
check_missing_values -> ValueError;
check_config_mount_paths -> check_mounted_path;
check_config_mount_paths -> startswith;
check_config_mount_paths -> hasattr;
check_config_mount_paths -> info;
check_config_mount_paths -> check_if_mounted;
check_config_mount_paths -> get_unmounted_filepath;
check_config_mount_paths -> check_remote_mount_directories;
check_config_mount_paths -> items;
check_config_mount_paths -> isinstance;
check_config_mount_paths -> filepath_check;
check_mounted_path -> hasattr;
check_mounted_path -> items;
check_mounted_path -> check_mounted_path;
check_mounted_path -> isinstance;
check_mounted_path -> filepath_check;
check_if_mounted -> ValueError;
check_if_mounted -> get_mounts_from_config;
check_if_mounted -> startswith;
check_if_mounted -> split;
get_unmounted_filepath -> split;
get_unmounted_filepath -> startswith;
get_unmounted_filepath -> ValueError;
get_unmounted_filepath -> len;
check_remote_mount_directories -> isinstance;
check_remote_mount_directories -> ValueError;
check_remote_mount_directories -> get;
check_remote_mount_directories -> LocalTunnel;
check_remote_mount_directories -> run;
check_remote_mount_directories -> join;
check_remote_mount_directories -> FileNotFoundError;
check_remote_mount_directories -> get_tunnel;
check_remote_mount_directories -> append;
check_remote_mount_directories -> len;
check_remote_mount_directories -> getcwd;
filepath_check -> startswith;
filepath_check -> info;
filepath_check -> check_if_mounted;
filepath_check -> get_unmounted_filepath;
filepath_check -> check_remote_mount_directories;
update_exp_manager_runtime -> open_dict;
update_exp_manager_runtime -> info;
update_exp_manager_runtime -> ValueError;
get_execution_script_cmd -> get;
get_execution_script_cmd -> dict;
get_execution_script_cmd -> format;
get_execution_script_cmd -> warning;
get_execution_script_cmd -> dirname;
get_execution_script_cmd -> basename;
get_execution_script_cmd -> getenv;
get_execution_script_cmd -> ValueError;
format -> formatTime;
format -> replace;
format -> getMessage;
format -> isinstance;
format -> to_unicode;
format -> extend;
format -> join;
format -> formatException;
format -> rstrip;
format -> split;
warning -> isEnabledFor;
warning -> _log;
warning -> _logged_once;
basename -> group;
basename -> ifnone;
basename -> match;
hydra_runner -> wraps;
hydra_runner -> task_function;
hydra_runner -> get_args_parser;
hydra_runner -> parse_args;
hydra_runner -> append;
hydra_runner -> _run_hydra;
hydra_runner -> instance;
hydra_runner -> store;
hydra_runner -> split;
hydra_runner -> write;
hydra_runner -> exit;
add_mount_path -> ValueError;
add_mount_path -> get_mounts_from_config;
add_mount_path -> split;
add_mount_path -> append;
add_mount_path -> info;
create_remote_directory -> isinstance;
create_remote_directory -> ValueError;
create_remote_directory -> get;
create_remote_directory -> LocalTunnel;
create_remote_directory -> run;
create_remote_directory -> info;
create_remote_directory -> get_tunnel;
load -> _load_from_state_dict;
load -> items;
load -> load;
load -> print;
load -> engine_from_bytes;
load -> bytes_from_path;
load -> _get_frame_indices;
load -> _load_feature;
load -> join;
load -> TensorrtLLMHostContext;
load -> open;
load -> _load;
load -> mpi_world_size;
load -> mpi_barrier;
load -> MPIPoolExecutor;
load -> range;
load -> submit;
load -> append;
load -> result;
load -> Path;
load -> _artifact_transform_load;
load -> drop_unexpected_params;
load -> build;
load -> hasattr;
load -> is_dir;
load -> is_file;
load -> FileNotFoundError;
load -> loads;
load -> warning;
load -> Deserialization;
load -> get;
load -> all;
load -> find_node_traverser;
load -> track_io;
load -> read;
load -> map;
load -> locate;
load -> file_path;
create_remote_config -> isinstance;
create_remote_config -> ValueError;
create_remote_config -> endswith;
create_remote_config -> create;
create_remote_config -> get;
create_remote_config -> LocalTunnel;
create_remote_config -> join;
create_remote_config -> run;
create_remote_config -> info;
create_remote_config -> get_tunnel;
create_remote_config -> to_yaml;
run_exp -> run;
run_exp -> get_tunnel;
run_exp -> isinstance;
run_exp -> tunnel_hash;
add_task -> isinstance;
add_task -> get_free_port;
add_task -> get_server_command;
add_task -> get_executor;
add_task -> append;
add_task -> enumerate;
add_task -> copy;
add_task -> get_tunnel;
add_task -> len;
add_task -> add;
add_task -> get_exp_handles;
add_task -> extend;
add_task -> bool;
add_task -> ValueError;
add_task -> zip;
add_task -> temporary_env_update;
add_task -> Script;
add_task -> warning;
add_task -> get;
add_task -> startswith;
add_task -> get_sandox_command;
add_task -> info;
add_task -> get_packaging_job_key;
add_task -> pop;
add_task -> quote;
add_task -> tuple;
add_task -> tunnel_hash;
add_task -> from_id;
add_task -> debug;
add_task -> from_title;
get_mounted_filepath -> split;
get_mounted_filepath -> startswith;
get_mounted_filepath -> ValueError;
get_mounted_filepath -> len;
word_error_rate -> zip;
word_error_rate -> len;
word_error_rate -> ValueError;
word_error_rate -> eval;
word_error_rate -> float;
word_error_rate -> format;
word_error_rate -> list;
word_error_rate -> split;
separate_punctuation -> strip;
separate_punctuation -> sub;
do_lowercase -> lower;
rm_punctuation -> strip;
rm_punctuation -> sub;
compute -> get_metric;
compute -> slu_f1;
compute -> dict;
compute -> update_scores_dict;
compute -> compute;
compute -> super;
compute -> float;
compute -> detach;
compute -> clone;
compute -> isnan;
compute -> warn;
compute -> ValueError;
compute -> compute_topk_accuracy;
compute -> len;
compute -> getattr;
compute -> eq;
compute -> tensor;
compute -> compute_operation_amounts;
compute -> compute_rates;
compute -> info;
compute -> tqdm;
compute -> sum_amounts;
compute -> zip;
compute -> append;
compute -> items;
compute -> keys;
compute -> sum;
compute -> size;
compute -> true_divide;
compute -> format;
compute -> range;
compute -> nonzero;
compute -> mean;
compute -> clear;
compute -> empty_cache;
compute -> stack;
compute -> corpus_bleu;
compute -> list;
compute -> values;
compute_metrics_per_sample -> len;
compute_metrics_per_sample -> AssertionError;
compute_metrics_per_sample -> open;
compute_metrics_per_sample -> readlines;
compute_metrics_per_sample -> info;
compute_metrics_per_sample -> tqdm;
compute_metrics_per_sample -> OccurancePunctuationErrorRate;
compute_metrics_per_sample -> loads;
compute_metrics_per_sample -> append;
compute_metrics_per_sample -> word_error_rate;
compute_metrics_per_sample -> round;
compute_metrics_per_sample -> compute;
compute_metrics_per_sample -> dumps;
compute_metrics_per_sample -> writelines;
compute_metrics_per_sample -> strip;
compute_metrics_per_sample -> join;
reset -> get_instance;
reset -> reset;
reset -> int;
reset -> _init_segment_variables;
reset -> _init_online_clustering_module;
reset -> _init_online_segmentor_module;
reset -> _init_memory_buffer;
reset -> _init_temporal_major_voting_module;
reset -> _init_buffer_frame_timestamps;
reset -> zeros;
reset -> ones;
reset -> AudioBuffersDataLayer;
reset -> DataLoader;
reset -> super;
reset -> range;
reset -> enumerate;
reset -> request_data;
reset -> empty_cache;
reset -> disable_cuda_graphs_recursive;
reset -> fp32_precision;
reset -> eval;
reset -> load_pretrained_nemo;
get_base_model -> get;
get_base_model -> set_trainer;
get_base_model -> ValueError;
get_base_model -> restore_from;
get_base_model -> is_global_rank_zero;
get_base_model -> from_pretrained;
get_base_model -> int;
get_base_model -> info;
get_base_model -> sleep;
set_trainer -> set_world_size;
restore_from -> getcwd;
restore_from -> TemporaryDirectory;
restore_from -> _unpack_nemo_file;
restore_from -> chdir;
restore_from -> load;
restore_from -> exists;
restore_from -> join;
restore_from -> set_struct;
restore_from -> cls;
restore_from -> info;
restore_from -> isdir;
restore_from -> restore_from;
restore_from -> NLPSaveRestoreConnector;
restore_from -> isinstance;
restore_from -> get;
restore_from -> super;
restore_from -> load_config_and_state_dict;
restore_from -> modify_state_dict;
restore_from -> load_instance_with_state_dict;
restore_from -> is_initialized;
restore_from -> setup_environment;
restore_from -> sharded_state_dict;
restore_from -> from_config;
restore_from -> load_checkpoint;
restore_from -> on_load_checkpoint;
restore_from -> hasattr;
restore_from -> launch;
restore_from -> _filtered_tar_info;
restore_from -> splitext;
restore_from -> restore_sharded_modelopt_state;
restore_from -> values;
restore_from -> setup_transformer_engine_tp_groups;
restore_from -> get_model_module_list;
restore_from -> replace;
restore_from -> NotImplementedError;
restore_from -> is_multistorageclient_url;
restore_from -> AppState;
restore_from -> update_save_restore_connector;
restore_from -> SaveRestoreConnector;
restore_from -> import_multistorageclient;
restore_from -> FileNotFoundError;
restore_from -> abspath;
restore_from -> expanduser;
is_global_rank_zero -> get_envint;
from_pretrained -> setLevel;
from_pretrained -> init_config;
from_pretrained -> cls;
from_pretrained -> get_hf_token;
from_pretrained -> hf_hub_download;
from_pretrained -> str;
from_pretrained -> DictConfig;
from_pretrained -> Path;
from_pretrained -> _load_customized_model;
from_pretrained -> print;
from_pretrained -> get_text_encoder;
from_pretrained -> ImagenPipeline;
from_pretrained -> len;
from_pretrained -> half;
from_pretrained -> restore_from;
from_pretrained -> SaveRestoreConnector;
from_pretrained -> _get_hf_hub_pretrained_model_info;
from_pretrained -> isdir;
from_pretrained -> _get_ngc_pretrained_model_info;
from_pretrained -> getattr;
from_pretrained -> from_pretrained;
check_vocabulary -> hasattr;
check_vocabulary -> ValueError;
check_vocabulary -> update_tokenizer;
check_vocabulary -> change_vocabulary;
check_vocabulary -> warning;
check_vocabulary -> info;
update_tokenizer -> state_dict;
update_tokenizer -> hasattr;
update_tokenizer -> info;
update_tokenizer -> change_vocabulary;
update_tokenizer -> ValueError;
update_tokenizer -> warning;
update_tokenizer -> load_state_dict;
change_vocabulary -> isinstance;
change_vocabulary -> _setup_tokenizer;
change_vocabulary -> get_vocab;
change_vocabulary -> to_config_dict;
change_vocabulary -> state_dict;
change_vocabulary -> from_config_dict;
change_vocabulary -> items;
change_vocabulary -> load_state_dict;
change_vocabulary -> apply;
change_vocabulary -> structured;
change_vocabulary -> create;
change_vocabulary -> merge;
change_vocabulary -> MultiTaskDecoding;
change_vocabulary -> info;
change_vocabulary -> ceil;
change_vocabulary -> open_dict;
change_vocabulary -> to_container;
change_vocabulary -> ValueError;
change_vocabulary -> isdir;
change_vocabulary -> NotADirectoryError;
change_vocabulary -> lower;
change_vocabulary -> warning;
change_vocabulary -> transformer_weights_init;
change_vocabulary -> deepcopy;
change_vocabulary -> len;
change_vocabulary -> CTCLoss;
change_vocabulary -> CTCBPEDecoding;
change_vocabulary -> WER;
change_vocabulary -> ListConfig;
change_vocabulary -> format;
change_vocabulary -> list;
change_vocabulary -> get;
change_vocabulary -> keys;
change_vocabulary -> CTCDecoding;
change_vocabulary -> RNNTLoss;
change_vocabulary -> set_decoding_type_according_to_loss;
change_vocabulary -> RNNTBPEDecoding;
change_vocabulary -> hasattr;
change_vocabulary -> set_loss;
change_vocabulary -> set_wer;
change_vocabulary -> change_vocabulary;
change_vocabulary -> super;
change_vocabulary -> update_k2_modules;
change_vocabulary -> extract_rnnt_loss_cfg;
change_vocabulary -> RNNTDecoding;
state_dict -> state_dict;
state_dict -> super;
state_dict -> keys;
state_dict -> join;
state_dict -> list;
state_dict -> all_parameters;
state_dict -> compute_consumed_samples;
state_dict -> warning;
state_dict -> info;
state_dict -> save_state_global;
state_dict -> get_context_parallel_rank;
state_dict -> get_pipeline_model_parallel_rank;
state_dict -> get_tensor_model_parallel_rank;
state_dict -> get_expert_model_parallel_rank;
state_dict -> get_keys_to_keep;
state_dict -> update;
state_dict -> get_peft_state_dict;
state_dict -> get;
state_dict -> items;
state_dict -> startswith;
state_dict -> first_stage_of_pipeline;
state_dict -> ValueError;
state_dict -> named_modules;
state_dict -> isinstance;
state_dict -> is_adapter_available;
state_dict -> set_enabled_adapters;
state_dict -> get_adapter_module;
state_dict -> _component_state_dict;
state_dict -> hasattr;
state_dict -> get_scale;
state_dict -> _get_growth_tracker;
state_dict -> any;
state_dict -> get_rank;
state_dict -> get_model_parallel_src_rank;
load_state_dict -> join;
load_state_dict -> load_state_dict;
load_state_dict -> tuple;
load_state_dict -> to;
load_state_dict -> deepcopy;
load_state_dict -> warning;
load_state_dict -> super;
load_state_dict -> update_num_microbatches;
load_state_dict -> rank_zero_info;
load_state_dict -> replace;
load_state_dict -> items;
load_state_dict -> info;
load_state_dict -> restore_state_global;
load_state_dict -> error;
load_state_dict -> ValueError;
load_state_dict -> keys;
load_state_dict -> train_dataloader;
load_state_dict -> len;
load_state_dict -> critical;
load_state_dict -> get;
load_state_dict -> set;
load_state_dict -> union;
load_state_dict -> print;
load_state_dict -> all;
load_state_dict -> endswith;
load_state_dict -> first_stage_of_pipeline;
load_state_dict -> init_prompt_encoder;
load_state_dict -> named_modules;
load_state_dict -> isinstance;
load_state_dict -> is_adapter_available;
load_state_dict -> set_enabled_adapters;
load_state_dict -> get_adapter_module;
load_state_dict -> _load_component_state_dict;
load_state_dict -> state_dict;
load_state_dict -> split;
load_state_dict -> encoder_embeddingload_state_dict;
load_state_dict -> hasattr;
load_state_dict -> RuntimeError;
load_state_dict -> fill_;
load_state_dict -> tensor;
load_state_dict -> list;
load_state_dict -> int;
load_state_dict -> range;
load_state_dict -> update;
load_state_dict -> _filter_empty_common_step;
load_state_dict -> zip;
load_state_dict -> copy_;
load_state_dict -> _remove_invalid_entries_from_topk;
setup_dataloaders -> convert_model_config_to_dict_config;
setup_dataloaders -> setup_training_data;
setup_dataloaders -> setup_multiple_validation_data;
setup_dataloaders -> hasattr;
setup_dataloaders -> setup_multiple_test_data;
convert_model_config_to_dict_config -> to_container;
convert_model_config_to_dict_config -> create;
convert_model_config_to_dict_config -> error;
convert_model_config_to_dict_config -> exit;
convert_model_config_to_dict_config -> is_dataclass;
convert_model_config_to_dict_config -> structured;
convert_model_config_to_dict_config -> isinstance;
convert_model_config_to_dict_config -> ValueError;
convert_model_config_to_dict_config -> type;
setup_training_data -> _update_dataset_config;
setup_training_data -> _setup_dataloader_from_config;
setup_training_data -> isinstance;
setup_training_data -> int;
setup_training_data -> warning;
setup_training_data -> ceil;
setup_training_data -> len;
setup_training_data -> hasattr;
setup_training_data -> DictConfig;
setup_training_data -> range;
setup_training_data -> setup_training_data;
setup_training_data -> getattr;
setup_training_data -> get_audio_to_text_bpe_dataset_from_config;
setup_training_data -> DataLoader;
setup_training_data -> get;
setup_training_data -> _setup_text_dataset_from_config;
setup_training_data -> cast;
setup_training_data -> dict;
setup_training_data -> merge;
setup_training_data -> ConcatDataset;
setup_training_data -> ConcatMapDataset;
setup_training_data -> structured;
setup_training_data -> RuntimeError;
setup_training_data -> extract_labels;
setup_training_data -> __setup_dataloader_from_config;
setup_training_data -> set_struct;
setup_training_data -> open_dict;
setup_training_data -> NotImplementedError;
setup_training_data -> compute_consumed_samples;
setup_training_data -> info;
setup_training_data -> DreamBoothDataset;
setup_training_data -> MegatronPretrainingRandomSampler;
setup_training_data -> ValueError;
setup_training_data -> get_data_parallel_rank;
setup_training_data -> get_data_parallel_world_size;
setup_training_data -> partial;
setup_training_data -> build_pretraining_data_loader;
setup_training_data -> endswith;
setup_training_data -> get_collate_fn;
setup_training_data -> build_dataset;
setup_training_data -> DistributedSampler;
setup_training_data -> prepare_data;
setup_training_data -> create_loss_module;
setup_training_data -> calc_class_weights_from_dataloader;
setup_training_data -> setup_dataloader;
setup_training_data -> _setup_preprocessed_dataloader;
setup_training_data -> _setup_dataloader;
setup_training_data -> build_virtual_prompt_dataset;
setup_training_data -> min;
setup_training_data -> build_data_loader;
setup_training_data -> AttributeError;
setup_training_data -> _setup_megatron_dataloader_from_config;
setup_training_data -> _setup_dataset_from_config;
setup_training_data -> setup_dataloader_from_config;
setup_training_data -> calc_class_weights;
setup_training_data -> copy;
setup_training_data -> create;
setup_training_data -> register_artifact;
setup_training_data -> is_initialized;
setup_training_data -> get_rank;
setup_training_data -> save_labels_and_get_file_paths;
setup_training_data -> str;
setup_training_data -> expanduser;
setup_training_data -> Path;
setup_training_data -> join;
setup_training_data -> get_label_ids;
setup_training_data -> _loader;
setup_training_data -> _setup_train_dataloader;
setup_training_data -> instantiate;
setup_training_data -> build_virtual_prompt_tarred_dataset;
setup_multiple_validation_data -> setup_multiple_validation_data;
setup_multiple_validation_data -> setup_validation_data;
setup_multiple_validation_data -> super;
setup_multiple_validation_data -> _update_dataset_config;
setup_multiple_validation_data -> resolve_validation_dataloaders;
setup_multiple_validation_data -> type;
setup_multiple_validation_data -> format;
setup_multiple_validation_data -> range;
setup_multiple_validation_data -> len;
setup_multiple_test_data -> setup_multiple_test_data;
setup_multiple_test_data -> setup_test_data;
setup_multiple_test_data -> super;
setup_multiple_test_data -> _update_dataset_config;
setup_multiple_test_data -> resolve_test_dataloaders;
setup_multiple_test_data -> type;
setup_multiple_test_data -> format;
setup_multiple_test_data -> range;
setup_multiple_test_data -> len;
exp_manager -> int;
exp_manager -> structured;
exp_manager -> is_global_rank_zero;
exp_manager -> isinstance;
exp_manager -> create;
exp_manager -> merge;
exp_manager -> error_checks;
exp_manager -> get_log_dir;
exp_manager -> check_resume;
exp_manager -> AppState;
exp_manager -> makedirs;
exp_manager -> info;
exp_manager -> get_envbool;
exp_manager -> add_handlers_to_mcore_logger;
exp_manager -> get;
exp_manager -> error;
exp_manager -> to_container;
exp_manager -> warning;
exp_manager -> ValueError;
exp_manager -> configure_loggers;
exp_manager -> DeltaTimingCallback;
exp_manager -> insert;
exp_manager -> EMA;
exp_manager -> append;
exp_manager -> EarlyStopping;
exp_manager -> configure_checkpointing;
exp_manager -> configure_no_restart_validation_training_loop;
exp_manager -> enumerate;
exp_manager -> get_git_hash;
exp_manager -> add_err_file_handler;
exp_manager -> add_filehandlers_to_pl_logger;
exp_manager -> add_file_handler;
exp_manager -> TimingCallback;
exp_manager -> dict;
exp_manager -> StragglerDetectionCallback;
exp_manager -> FaultToleranceCallback;
exp_manager -> open;
exp_manager -> write;
exp_manager -> sleep;
exp_manager -> StatelessTimer;
exp_manager -> copy;
exp_manager -> join;
exp_manager -> Path;
exp_manager -> get_git_diff;
exp_manager -> type;
setup_optimization -> freeze;
setup_optimization -> setup_optimization;
setup_optimization -> super;
setup_optimization -> dict;
setup_optimization -> pop;
setup_optimization -> get_optimizer;
setup_optimization -> optimizer;
setup_optimization -> parameters;
setup_optimization -> _optim_config_copy;
setup_optimization -> copy;
setup_optimization -> get_config_arg;
setup_optimization -> str_to_dtype;
setup_optimization -> get;
setup_optimization -> open_dict;
setup_optimization -> _get_max_steps;
setup_optimization -> ValueError;
setup_optimization -> hasattr;
setup_optimization -> setup_optimizer_param_groups;
setup_optimization -> create;
setup_optimization -> to_container;
setup_optimization -> prepare_lr_scheduler;
setup_optimization -> info;
setup_optimization -> warning;
setup_optimization -> isclass;
setup_optimization -> parse_optimizer_args;
setup_optimization -> deepcopy;
setup_optimization -> update;
setup_optimization -> isinstance;
setup_optimization -> AppState;
setup_optimization -> lower;
setup_optimization -> optimizer_cls;
setup_optimization -> setup_megatron_optimization;
setup_optimization -> get_megatron_optimizer;
setup_optimization -> McoreDistributedOptimizer;
setup_optimization -> str;
setup_optimization -> instantiate;
setup_optimization -> error;
setup_optimization -> split;
setup_optimization -> format;
from_config_dict -> isinstance;
from_config_dict -> maybe_update_config_version;
from_config_dict -> instantiate;
from_config_dict -> hasattr;
from_config_dict -> to_container;
from_config_dict -> create;
from_config_dict -> set_struct;
from_config_dict -> import_class_by_path;
from_config_dict -> issubclass;
from_config_dict -> _inspect_signature_for_trainer;
from_config_dict -> imported_cls;
from_config_dict -> format_exc;
from_config_dict -> debug;
from_config_dict -> cls;
from_config_dict -> error;
resolve_trainer_cfg -> to_container;
resolve_trainer_cfg -> get;
resolve_trainer_cfg -> pop;
resolve_trainer_cfg -> isinstance;
resolve_trainer_cfg -> instantiate;
resolve_trainer_cfg -> HalfPrecisionForAudio;
resolve_trainer_cfg -> append;
setup_model -> restore_from;
setup_model -> import_class_by_path;
setup_model -> info;
setup_model -> from_pretrained;
setup_model -> hasattr;
setup_model -> change_attention_model;
setup_model -> splitext;
setup_model -> basename;
setup_model -> get;
setup_model -> ExampleModel;
setup_model -> predict;
setup_model -> CallbackParams;
setup_model -> Trainer;
setup_model -> ExpManagerConfig;
setup_model -> exp_manager;
setup_model -> fit;
setup_model -> structured;
eval -> makedirs;
eval -> print;
eval -> join;
eval -> precision_func;
eval -> defaultdict;
eval -> open;
eval -> load;
eval -> parse_start_end_timestamps;
eval -> append;
eval -> dump;
eval -> sum;
eval -> len;
prepare_audio_data -> list;
prepare_audio_data -> get;
prepare_audio_data -> glob;
prepare_audio_data -> error;
prepare_audio_data -> open;
prepare_audio_data -> NamedTemporaryFile;
prepare_audio_data -> read_and_maybe_sort_manifest;
prepare_audio_data -> join;
prepare_audio_data -> stat;
prepare_audio_data -> strip;
prepare_audio_data -> loads;
prepare_audio_data -> get_full_path;
prepare_audio_data -> append;
prepare_audio_data -> write;
prepare_audio_data -> ValueError;
prepare_audio_data -> dumps;
compute_output_filename -> dirname;
compute_output_filename -> replace;
compute_output_filename -> join;
write_transcription -> isinstance;
write_transcription -> mkdir;
write_transcription -> info;
write_transcription -> open;
write_transcription -> enumerate;
write_transcription -> Path;
write_transcription -> write;
write_transcription -> append;
write_transcription -> strip;
write_transcription -> loads;
write_transcription -> dumps;
write_transcription -> pop;
write_transcription -> keys;
write_transcription -> item;
write_transcription -> normalize_timestamp_output;
write_transcription -> numpy;
device -> getoption;
to -> to;
to -> super;
to -> setattr;
to -> get;
to -> items;
to -> warning;
to -> split;
to -> _parse_to;
to -> NF4Weight;
to -> quantize;
set_default_att_context_size -> setup_streaming_params;
set_default_att_context_size -> warning;
cal_write_wer -> word_error_rate_detail;
cal_write_wer -> open;
cal_write_wer -> readlines;
cal_write_wer -> len;
cal_write_wer -> strip;
cal_write_wer -> loads;
cal_write_wer -> append;
cal_write_wer -> dump;
cal_write_wer -> write;
cal_write_wer -> flush;
cal_write_wer -> clean_label;
cal_write_wer -> remove_punctuations;
cal_write_wer -> lower;
cal_write_wer -> info;
cal_write_wer -> strip_spaces_before_punctuations;
change_decoding_strategy -> structured;
change_decoding_strategy -> create;
change_decoding_strategy -> merge;
change_decoding_strategy -> MultiTaskDecoding;
change_decoding_strategy -> info;
change_decoding_strategy -> to_container;
change_decoding_strategy -> open_dict;
change_decoding_strategy -> to_yaml;
change_decoding_strategy -> update_decoding_parameters;
change_decoding_strategy -> range;
change_decoding_strategy -> getattr;
change_decoding_strategy -> isinstance;
change_decoding_strategy -> change_decoding_strategy;
change_decoding_strategy -> CTCBPEDecoding;
change_decoding_strategy -> WER;
change_decoding_strategy -> get;
change_decoding_strategy -> CTCDecoding;
change_decoding_strategy -> set_decoding_type_according_to_loss;
change_decoding_strategy -> RNNTBPEDecoding;
change_decoding_strategy -> set_loss;
change_decoding_strategy -> set_wer;
change_decoding_strategy -> ValueError;
change_decoding_strategy -> hasattr;
change_decoding_strategy -> super;
change_decoding_strategy -> RNNTDecoding;
get_transcribe_config -> MultiTaskTranscriptionConfig;
get_transcribe_config -> ClassificationInferConfig;
get_transcribe_config -> TranscribeConfig;
restore_transcription_order -> isinstance;
restore_transcription_order -> enumerate;
restore_transcription_order -> open;
restore_transcription_order -> all;
restore_transcription_order -> list;
restore_transcription_order -> len;
restore_transcription_order -> tuple;
restore_transcription_order -> sorted;
restore_transcription_order -> zip;
restore_transcription_order -> map;
restore_transcription_order -> loads;
restore_transcription_order -> strip;
parse_multitask_prompt -> any;
parse_multitask_prompt -> pop;
parse_multitask_prompt -> isinstance;
parse_multitask_prompt -> dict;
parse_multitask_prompt -> all;
parse_multitask_prompt -> len;
parse_multitask_prompt -> items;
next -> __next__;
start -> get;
start -> time;
start -> RuntimeError;
start -> is_initialized;
start -> synchronize;
start -> perf_counter_ns;
transcribe -> no_grad;
transcribe -> transcribe;
transcribe -> MultiTaskTranscriptionConfig;
transcribe -> isinstance;
transcribe -> ValueError;
transcribe -> super;
transcribe -> str;
transcribe -> type;
transcribe -> ClassificationInferConfig;
transcribe -> RegressionInferConfig;
transcribe -> float;
transcribe -> range;
transcribe -> array;
transcribe -> predict;
transcribe -> getattr;
transcribe -> append;
transcribe -> list;
transcribe -> len;
transcribe -> zip;
transcribe -> compute_confidence;
transcribe -> info;
transcribe -> change_decoding_strategy;
transcribe -> open_dict;
transcribe -> get;
transcribe -> next;
transcribe -> min;
transcribe -> eval;
transcribe -> freeze;
transcribe -> hasattr;
transcribe -> get_verbosity;
transcribe -> set_verbosity;
transcribe -> _setup_transcribe_dataloader;
transcribe -> tqdm;
transcribe -> train;
transcribe -> parameters;
transcribe -> to;
transcribe -> unfreeze;
transcribe -> cpu_count;
transcribe -> predict_step;
transcribe -> inference_mode;
transcribe -> TranscribeConfig;
transcribe -> InternalTranscribeConfig;
transcribe -> transcribe_generator;
transcribe -> extend;
transcribe -> items;
transcribe -> NotImplementedError;
transcribe -> tuple;
transcribe -> enumerate;
transcribe -> RuntimeError;
transcribe -> infer_logits;
transcribe -> greedy_merge;
transcribe -> concat;
transcribe -> tolist;
transcribe -> _alignment_decoder;
transcribe -> inplace_buffer_merge;
transcribe -> lcs_alignment_merge_buffer;
transcribe -> join;
transcribe -> makedirs;
transcribe -> _join_hypotheses;
transcribe -> print;
transcribe -> TemporaryDirectory;
transcribe -> open;
transcribe -> forward;
transcribe -> write;
transcribe -> ctc_decoder_predictions_tensor;
transcribe -> dumps;
transcribe -> numpy;
transcribe -> cpu;
transcribe -> ctc_decoder;
transcribe -> rnnt_decoder_predictions_tensor;
stop -> stop;
stop -> Exception;
stop -> get;
stop -> RuntimeError;
stop -> is_initialized;
stop -> synchronize;
stop -> time;
stop -> pop;
stop -> perf_counter_ns;
parameters -> list;
parameters -> parameters;
parameters -> isinstance;
parameters -> from_iterable;
parameters -> info;
parameters -> append;
parameters -> chain;
parameters -> named_parameters;
match_train_config -> get;
match_train_config -> is_dataclass;
match_train_config -> structured;
match_train_config -> hasattr;
match_train_config -> setattr;
match_train_config -> getattr;
_setup_dataloader_from_config -> get;
_setup_dataloader_from_config -> get_lhotse_dataloader_from_config;
_setup_dataloader_from_config -> PromptedAudioToTextLhotseDataset;
_setup_dataloader_from_config -> set_struct;
_setup_dataloader_from_config -> WaveformFeaturizer;
_setup_dataloader_from_config -> DataLoader;
_setup_dataloader_from_config -> process_augmentations;
_setup_dataloader_from_config -> get_tarred_classification_label_dataset;
_setup_dataloader_from_config -> hasattr;
_setup_dataloader_from_config -> warning;
_setup_dataloader_from_config -> info;
_setup_dataloader_from_config -> get_speech_label_dataset;
_setup_dataloader_from_config -> get_classification_label_dataset;
_setup_dataloader_from_config -> get_tarred_audio_multi_label_dataset;
_setup_dataloader_from_config -> get_audio_multi_label_dataset;
_setup_dataloader_from_config -> ValueError;
_setup_dataloader_from_config -> get_audio_to_text_bpe_dataset_from_config;
_setup_dataloader_from_config -> isinstance;
_setup_dataloader_from_config -> get_semi_sorted_batch_sampler;
_setup_dataloader_from_config -> RuntimeError;
_setup_dataloader_from_config -> LhotseSpeechToTextBpeDataset;
_setup_dataloader_from_config -> type;
_setup_dataloader_from_config -> inject_dataloader_value_from_model_config;
_setup_dataloader_from_config -> get_audio_to_text_char_dataset_from_config;
_setup_dataloader_from_config -> make_parser;
_setup_dataloader_from_config -> is_available;
_setup_dataloader_from_config -> get_dali_bpe_dataset;
_setup_dataloader_from_config -> get_tarred_dataset;
_setup_dataloader_from_config -> get_bpe_dataset;
_setup_dataloader_from_config -> get_dali_char_dataset;
_setup_dataloader_from_config -> get_char_dataset;
_setup_dataloader_from_config -> get_audio_noise_dataset_from_config;
_setup_dataloader_from_config -> LhotseAudioNoiseDataset;
_setup_dataloader_from_config -> _update_default_values;
_setup_dataloader_from_config -> get_audio_to_target_dataset;
_setup_dataloader_from_config -> NotImplementedError;
_setup_dataloader_from_config -> LhotseAudioToTargetDataset;
_setup_dataloader_from_config -> get_video_to_text_bpe_dataset_from_config;
_setup_dataloader_from_config -> get_video_to_text_char_dataset_from_config;
_setup_dataloader_from_config -> DialogueGPTClassificationDataset;
_setup_dataloader_from_config -> exists;
_setup_dataloader_from_config -> FileNotFoundError;
_setup_dataloader_from_config -> DialogueGPTGenerationDataset;
_setup_dataloader_from_config -> DialogueNearestNeighbourDataset;
_setup_dataloader_from_config -> DialogueAssistantDataProcessor;
_setup_dataloader_from_config -> DialogueDesignDataProcessor;
_setup_dataloader_from_config -> DialogueSGDDataProcessor;
_setup_dataloader_from_config -> DialogueS2SGenerationDataset;
_setup_dataloader_from_config -> DialogueZeroShotIntentDataset;
_setup_dataloader_from_config -> DialogueBERTDataset;
_setup_dataloader_from_config -> DialogueSGDBERTDataset;
_setup_dataloader_from_config -> TarredTextNormalizationDecoderDataset;
_setup_dataloader_from_config -> TextNormalizationDecoderDataset;
_setup_dataloader_from_config -> DataCollatorForSeq2Seq;
_setup_dataloader_from_config -> open;
_setup_dataloader_from_config -> load;
_setup_dataloader_from_config -> join;
_setup_dataloader_from_config -> append;
_setup_dataloader_from_config -> dirname;
_setup_dataloader_from_config -> items;
_setup_dataloader_from_config -> perf_counter;
_setup_dataloader_from_config -> TextNormalizationTaggerDataset;
_setup_dataloader_from_config -> DataCollatorForTokenClassification;
_setup_dataloader_from_config -> GLUEDataset;
_setup_dataloader_from_config -> BertInformationRetrievalDataset;
_setup_dataloader_from_config -> IntentSlotClassificationDataset;
_setup_dataloader_from_config -> readlines;
_setup_dataloader_from_config -> len;
_setup_dataloader_from_config -> MultiLabelIntentSlotClassificationDataset;
_setup_dataloader_from_config -> strip;
_setup_dataloader_from_config -> TarredSentenceDataset;
_setup_dataloader_from_config -> SentenceDataset;
_setup_dataloader_from_config -> RandomSampler;
_setup_dataloader_from_config -> SequentialSampler;
_setup_dataloader_from_config -> QAProcessor;
_setup_dataloader_from_config -> BERTQADataset;
_setup_dataloader_from_config -> GPTQADataset;
_setup_dataloader_from_config -> SquadDataset;
_setup_dataloader_from_config -> S2SQADataset;
_setup_dataloader_from_config -> TarredSpellcheckingAsrCustomizationDataset;
_setup_dataloader_from_config -> SpellcheckingAsrCustomizationDataset;
_setup_dataloader_from_config -> TextClassificationDataset;
_setup_dataloader_from_config -> ThutmoseTaggerDataset;
_setup_dataloader_from_config -> _check_label_config_parameters;
_setup_dataloader_from_config -> _set_label_ids;
_setup_dataloader_from_config -> BertPunctuationCapitalizationTarredDataset;
_setup_dataloader_from_config -> check_for_label_consistency_with_model_config;
_setup_dataloader_from_config -> BertPunctuationCapitalizationDataset;
_setup_dataloader_from_config -> Path;
_setup_dataloader_from_config -> _extract_label_vocab_files_from_config;
_setup_dataloader_from_config -> joinpath;
_setup_dataloader_from_config -> warn;
_setup_dataloader_from_config -> resolve;
_setup_dataloader_from_config -> expanduser;
_setup_dataloader_from_config -> BertTokenClassificationDataset;
_setup_dataloader_from_config -> ZeroShotIntentDataset;
_setup_dataloader_from_config -> instantiate;
predict -> generate;
predict -> b64decode;
predict -> open;
predict -> image_processor;
predict -> BytesIO;
predict -> encoder;
predict -> transpose;
predict -> get_seq_mask;
predict -> sequence_generator;
predict -> decode_semantics_from_tokens;
predict -> ValueError;
predict -> preprocessor;
predict -> spec_augmentation;
predict -> next;
predict -> parameters;
predict -> prediction;
predict -> zeros;
predict -> contiguous;
predict -> to;
predict -> size;
predict -> cat;
predict -> is_adapter_available;
predict -> forward_enabled_adapters;
predict -> initialize_state;
predict -> NotImplementedError;
predict -> isinstance;
predict -> len;
predict -> eval;
predict -> _setup_infer_dataloader;
predict -> concatenate;
predict -> reshape;
predict -> range;
predict -> train;
predict -> is_available;
predict -> forward;
predict -> append;
predict -> list;
predict -> numpy;
predict -> exp;
predict -> sum;
predict -> reversed;
predict -> argsort;
predict -> tolist;
predict -> cpu;
predict -> detach;
predict -> expand;
predict -> one_hot;
predict -> tensor;
close_output_file -> close;
barrier -> is_initialized;
barrier -> barrier;
barrier -> RuntimeError;
load_from_checkpoint -> warning;
load_from_checkpoint -> _set_model_restore_state;
load_from_checkpoint -> OrderedDict;
load_from_checkpoint -> parse_weights;
load_from_checkpoint -> print;
load_from_checkpoint -> get;
load_from_checkpoint -> copy;
load_from_checkpoint -> update;
load_from_checkpoint -> add_optimizer_state;
load_from_checkpoint -> pl_legacy_patch;
load_from_checkpoint -> format;
load_from_checkpoint -> pop;
load_from_checkpoint -> hasattr;
load_from_checkpoint -> getattr;
load_from_checkpoint -> pl_load;
load_from_checkpoint -> split;
load_from_checkpoint -> lower;
load_from_checkpoint -> load_hparams_from_tags_csv;
load_from_checkpoint -> load_hparams_from_yaml;
load_from_checkpoint -> ValueError;
load_from_checkpoint -> find;
load_from_checkpoint -> len;
load_from_checkpoint -> view;
load_from_checkpoint -> contiguous;
load_from_checkpoint -> size;
load_from_checkpoint -> transpose;
load_from_checkpoint -> load_sft;
load_from_checkpoint -> load_state_dict;
load_from_checkpoint -> list;
load_from_checkpoint -> keys;
load_from_checkpoint -> ptl_load_state;
load_from_checkpoint -> replace;
load_from_checkpoint -> isdir;
load_from_checkpoint -> join;
load_from_checkpoint -> sharded_state_dict;
load_from_checkpoint -> load;
load_from_checkpoint -> on_load_checkpoint;
load_from_checkpoint -> is_initialized;
load_from_checkpoint -> setup_environment;
load_from_checkpoint -> items;
load_from_checkpoint -> setup_transformer_engine_tp_groups;
load_from_checkpoint -> register_artifact;
load_from_checkpoint -> launch;
load_from_checkpoint -> load_from_checkpoint;
load_from_checkpoint -> super;
update_encoder_config_to_support_adapter -> open_dict;
update_encoder_config_to_support_adapter -> get_registered_adapter;
get_registered_adapter -> isinstance;
get_registered_adapter -> hasattr;
get_registered_adapter -> import_class_by_path;
update_model_cfg -> open_dict;
update_model_cfg -> list;
update_model_cfg -> merge;
update_model_cfg -> keys;
update_model_cfg -> pop;
update_model_cfg -> print;
set_enabled_adapters -> set_enabled_adapters;
set_enabled_adapters -> resolve_adapter_module_name_;
set_enabled_adapters -> split;
set_enabled_adapters -> ValueError;
set_enabled_adapters -> super;
set_enabled_adapters -> hasattr;
set_enabled_adapters -> getattr;
set_enabled_adapters -> enumerate;
set_enabled_adapters -> is_adapter_available;
set_enabled_adapters -> items;
set_enabled_adapters -> check_valid_model_with_adapter_support_;
set_enabled_adapters -> open_dict;
set_enabled_adapters -> update_adapter_cfg;
set_enabled_adapters -> keys;
set_enabled_adapters -> info;
set_enabled_adapters -> isinstance;
freeze -> parameters;
freeze -> eval;
freeze -> range;
freeze -> isinstance;
freeze -> list;
freeze -> info;
freeze -> train;
freeze -> append;
freeze -> named_parameters;
freeze -> hasattr;
freeze -> update;
calculate_original_scale -> abs;
calculate_original_scale -> min;
calculate_adapt_werr -> max;
parse_results -> read_csv;
parse_results -> drop;
parse_results -> replace;
parse_results -> apply;
parse_results -> round;
parse_results -> to_csv;
parse_results -> calculate_original_scale;
parse_results -> calculate_adapt_werr;
read_csv -> open;
read_csv -> reader;
read_csv -> append;
apply -> from_pretrained;
apply -> init;
apply -> nemo_setup;
apply -> convert_state;
apply -> print;
apply -> nemo_save;
apply -> teardown;
apply -> str;
apply -> info;
apply -> nemo_load;
apply -> cpu;
apply -> save_pretrained;
apply -> torch_dtype_from_mcore_config;
apply -> _verify_source;
apply -> ckpt_load;
apply -> warning;
apply -> _detect_hf_deepseek_version;
apply -> torch_dtype_from_dict_config;
apply -> get_source_model;
apply -> to;
apply -> ModelState;
apply -> transform_source_dict;
apply -> items;
apply -> list;
apply -> adjust_medium_filter;
apply -> split;
apply -> named_parameters;
apply -> keys;
apply -> range;
apply -> pop;
apply -> search;
apply -> int;
apply -> group;
apply -> sub;
apply -> HyenaConfig;
apply -> getattr;
apply -> is_llama4;
apply -> state_dict;
apply -> load_context;
apply -> isinstance;
apply -> ValueError;
apply -> _ModelState;
apply -> dist_ckpt_handler;
apply -> load;
apply -> _rename_xattn_layer_nums_hf;
apply -> dtype_from_hf;
apply -> NotImplementedError;
round -> round;
round -> detach;
round -> max;
round -> int;
display_analysis_table -> print;
display_analysis_table -> range;
display_analysis_table -> max;
display_analysis_table -> join;
display_analysis_table -> len;
display_analysis_table -> sum;
display_analysis_table -> append;
display_analysis_table -> apply;
display_analysis_table -> map;
display_results -> print;
display_results -> unique;
display_results -> append;
display_results -> len;
display_results -> ValueError;
display_results -> mean;
get_best_config -> list;
get_best_config -> drop;
get_best_config -> unique;
get_best_config -> set;
get_best_config -> mean;
get_best_config -> sort_values;
get_best_config -> print;
get_best_config -> range;
get_best_config -> upper;
get_best_config -> display_analysis_table;
get_best_config -> min;
get_best_config -> display_results;
get_best_config -> len;
get_best_config -> groupby;
analyze_results -> print;
analyze_results -> get_best_config;
analyze_results -> len;
__validate_arg_type -> dtype;
update_model_config_to_support_adapter -> open_dict;
update_model_config_to_support_adapter -> get;
update_model_config_to_support_adapter -> get_registered_adapter;
add_global_adapter_cfg -> is_dataclass;
add_global_adapter_cfg -> structured;
add_global_adapter_cfg -> isinstance;
add_global_adapter_cfg -> DictConfig;
add_global_adapter_cfg -> open_dict;
add_global_adapter_cfg -> update_adapter_cfg;
add_global_adapter_cfg -> create;
update_adapter_cfg -> modules;
update_adapter_cfg -> isinstance;
add_adapter -> _update_adapter_cfg_input_dim;
add_adapter -> add_adapter;
add_adapter -> super;
add_adapter -> set_accepted_adapter_types;
add_adapter -> get_accepted_adapter_types;
add_adapter -> resolve_adapter_module_name_;
add_adapter -> split;
add_adapter -> ValueError;
add_adapter -> open_dict;
add_adapter -> hasattr;
add_adapter -> getattr;
add_adapter -> get;
add_adapter -> info;
add_adapter -> set;
add_adapter -> isinstance;
add_adapter -> _get_all_keys;
add_adapter -> _check_and_add_peft_cfg;
add_adapter -> len;
add_adapter -> first_stage_of_pipeline;
add_adapter -> tie_weights;
add_adapter -> set_tunable_base_params;
add_adapter -> summarize;
add_adapter -> replace;
add_adapter -> freeze;
add_adapter -> enumerate;
add_adapter -> check_supported_adapter_type_;
add_adapter -> is_dataclass;
add_adapter -> DictConfig;
add_adapter -> structured;
add_adapter -> ModuleDict;
add_adapter -> create;
add_adapter -> pop;
add_adapter -> instantiate;
add_adapter -> list;
add_adapter -> keys;
add_adapter -> _prepare_default_adapter_config;
add_adapter -> update_adapter_cfg;
add_adapter -> check_valid_model_with_adapter_support_;
is_adapter_available -> any;
is_adapter_available -> is_adapter_available;
is_adapter_available -> super;
is_adapter_available -> hasattr;
is_adapter_available -> isinstance;
is_adapter_available -> getattr;
is_adapter_available -> enumerate;
is_adapter_available -> len;
is_adapter_available -> check_valid_model_with_adapter_support_;
is_adapter_available -> update_adapter_cfg;
is_adapter_available -> get_enabled_adapters;
is_adapter_available -> print;
train -> hydra_runner;
train -> resolve;
train -> init_process_group;
train -> set_float32_matmul_precision;
train -> Trainer;
train -> exp_manager;
train -> save;
train -> DuplexS2SDataset;
train -> DataModule;
train -> fit;
train -> get;
train -> init_module;
train -> DuplexS2SSpeechDecoderModel;
train -> resolve_trainer_cfg;
train -> to_container;
train -> DuplexS2SModel;
train -> SALMDataset;
train -> SALM;
train -> train;
train -> eval;
train -> super;
train -> entrypoint;
train -> _load_model_from_path;
train -> _setup;
train -> set_modelopt_spec_if_exists_in_ckpt;
train -> compute_max_steps;
train -> ExampleModel;
train -> append;
train -> Callback;
train -> SchedulerNoOpCallback;
train -> makedirs;
train -> setup_data;
train -> reconfigure_num_microbatches_calculator_manager;
train -> setup_model_optim;
train -> setup_trainer_and_logger;
train -> _teardown;
unfreeze_enabled_adapters -> set;
unfreeze_enabled_adapters -> modules;
unfreeze_enabled_adapters -> named_modules;
unfreeze_enabled_adapters -> info;
unfreeze_enabled_adapters -> isinstance;
unfreeze_enabled_adapters -> hasattr;
unfreeze_enabled_adapters -> is_adapter_available;
unfreeze_enabled_adapters -> items;
unfreeze_enabled_adapters -> eval;
unfreeze_enabled_adapters -> requires_grad_;
unfreeze_enabled_adapters -> train;
unfreeze_enabled_adapters -> adapter_unfreeze;
unfreeze_enabled_adapters -> add;
save_adapters -> isinstance;
save_adapters -> save;
save_adapters -> AttributeError;
save_adapters -> keys;
save_adapters -> hasattr;
save_adapters -> ValueError;
save_adapters -> resolve_adapter_module_name_;
save_adapters -> modules;
save_adapters -> get_adapter_module;
save_adapters -> state_dict;
save_adapters -> items;
save_adapters -> append;
clean_exp_ckpt -> str;
clean_exp_ckpt -> info;
clean_exp_ckpt -> glob;
clean_exp_ckpt -> join;
clean_exp_ckpt -> remove;
extract_transcriptions -> isinstance;
extract_transcriptions -> append;
perform_streaming -> len;
perform_streaming -> get_initial_cache_state;
perform_streaming -> iter;
perform_streaming -> enumerate;
perform_streaming -> extract_transcriptions;
perform_streaming -> info;
perform_streaming -> cat;
perform_streaming -> inference_mode;
perform_streaming -> size;
perform_streaming -> numpy;
perform_streaming -> get_all_audios;
perform_streaming -> no_grad;
perform_streaming -> conformer_stream_step;
perform_streaming -> cpu;
perform_streaming -> is_buffer_empty;
perform_streaming -> calc_drop_extra_pre_encoded;
perform_streaming -> sum;
get_initial_cache_state -> create_tensor;
get_initial_cache_state -> randint;
get_initial_cache_state -> range;
get_initial_cache_state -> zeros;
get_initial_cache_state -> next;
get_initial_cache_state -> len;
get_initial_cache_state -> min;
get_initial_cache_state -> parameters;
cat -> cat;
cat -> getattr;
get_all_audios -> normalize_batch;
get_all_audios -> tensor;
conformer_stream_step -> cache_aware_stream_step;
conformer_stream_step -> tuple;
conformer_stream_step -> NotImplementedError;
conformer_stream_step -> isinstance;
conformer_stream_step -> info;
conformer_stream_step -> hasattr;
conformer_stream_step -> decoder;
conformer_stream_step -> argmax;
conformer_stream_step -> enumerate;
conformer_stream_step -> rnnt_decoder_predictions_tensor;
conformer_stream_step -> append;
conformer_stream_step -> cat;
conformer_stream_step -> len;
conformer_stream_step -> ctc_decoder_predictions_tensor;
conformer_stream_step -> type;
conformer_stream_step -> unsqueeze;
is_buffer_empty -> size;
parse_args -> ArgumentParser;
parse_args -> add_argument;
parse_args -> parse_args;
parse_args -> float;
parse_args -> add_mutually_exclusive_group;
parse_args -> sorted;
parse_args -> keys;
parse_args -> print;
parse_args -> dirname;
parse_args -> info;
setup_streaming_params -> CacheAwareStreamingConfig;
setup_streaming_params -> hasattr;
setup_streaming_params -> isinstance;
setup_streaming_params -> modules;
setup_streaming_params -> get_sampling_frames;
setup_streaming_params -> get_streaming_cache_size;
setup_streaming_params -> ValueError;
setup_streaming_params -> warning;
append_audio_file -> get_samples;
append_audio_file -> append_audio;
error -> isEnabledFor;
error -> _log;
error -> _logged_once;
glob -> getmembers;
glob -> fnmatch;
glob -> startswith;
glob -> TarPath;
glob -> join;
glob -> len;
get_buffered_pred_feat_multitaskAED -> from_config_dict;
get_buffered_pred_feat_multitaskAED -> to;
get_buffered_pred_feat_multitaskAED -> wrap_transcription;
get_buffered_pred_feat_multitaskAED -> ValueError;
get_buffered_pred_feat_multitaskAED -> info;
get_buffered_pred_feat_multitaskAED -> tqdm;
get_buffered_pred_feat_multitaskAED -> reset;
get_buffered_pred_feat_multitaskAED -> read_audio_file;
get_buffered_pred_feat_multitaskAED -> transcribe;
get_buffered_pred_feat_multitaskAED -> append;
get_buffered_pred_feat_multitaskAED -> open;
get_buffered_pred_feat_multitaskAED -> list;
get_buffered_pred_feat_multitaskAED -> len;
get_buffered_pred_feat_multitaskAED -> readlines;
get_buffered_pred_feat_multitaskAED -> strip;
get_buffered_pred_feat_multitaskAED -> loads;
get_buffered_pred_feat_multitaskAED -> get_full_path;
get_buffered_pred_feat -> from_config_dict;
get_buffered_pred_feat -> to;
get_buffered_pred_feat -> wrap_transcription;
get_buffered_pred_feat -> ValueError;
get_buffered_pred_feat -> tqdm;
get_buffered_pred_feat -> get;
get_buffered_pred_feat -> reset;
get_buffered_pred_feat -> read_audio_file;
get_buffered_pred_feat -> transcribe;
get_buffered_pred_feat -> append;
get_buffered_pred_feat -> open;
get_buffered_pred_feat -> len;
get_buffered_pred_feat -> print;
get_buffered_pred_feat -> zip;
get_buffered_pred_feat -> strip;
get_buffered_pred_feat -> loads;
get_buffered_pred_feat -> get_full_path;
get_buffered_pred_feat_rnnt -> wrap_transcription;
get_buffered_pred_feat_rnnt -> ValueError;
get_buffered_pred_feat_rnnt -> inference_mode;
get_buffered_pred_feat_rnnt -> get;
get_buffered_pred_feat_rnnt -> open;
get_buffered_pred_feat_rnnt -> print;
get_buffered_pred_feat_rnnt -> autocast;
get_buffered_pred_feat_rnnt -> tqdm;
get_buffered_pred_feat_rnnt -> len;
get_buffered_pred_feat_rnnt -> zip;
get_buffered_pred_feat_rnnt -> strip;
get_buffered_pred_feat_rnnt -> loads;
get_buffered_pred_feat_rnnt -> get_full_path;
get_buffered_pred_feat_rnnt -> append;
get_buffered_pred_feat_rnnt -> range;
get_buffered_pred_feat_rnnt -> reset;
get_buffered_pred_feat_rnnt -> read_audio_file;
get_buffered_pred_feat_rnnt -> transcribe;
get_buffered_pred_feat_rnnt -> extend;
get_buffered_pred_feat_rnnt -> clear;
maybe_init_from_pretrained_checkpoint -> sum;
maybe_init_from_pretrained_checkpoint -> ValueError;
maybe_init_from_pretrained_checkpoint -> open_dict;
maybe_init_from_pretrained_checkpoint -> isinstance;
maybe_init_from_pretrained_checkpoint -> restore_from;
maybe_init_from_pretrained_checkpoint -> load_state_dict;
maybe_init_from_pretrained_checkpoint -> info;
maybe_init_from_pretrained_checkpoint -> pop;
maybe_init_from_pretrained_checkpoint -> from_pretrained;
maybe_init_from_pretrained_checkpoint -> load;
maybe_init_from_pretrained_checkpoint -> state_dict;
maybe_init_from_pretrained_checkpoint -> values;
maybe_init_from_pretrained_checkpoint -> TypeError;
maybe_init_from_pretrained_checkpoint -> hasattr;
maybe_init_from_pretrained_checkpoint -> get;
maybe_init_from_pretrained_checkpoint -> load_part_of_state_dict;
maybe_init_from_pretrained_checkpoint -> enumerate;
prepare_test -> set_trainer;
prepare_test -> hasattr;
prepare_test -> info;
prepare_test -> warning;
extract_model_ctc -> to_container;
extract_model_ctc -> deepcopy;
extract_model_ctc -> create;
extract_model_ctc -> restore_from;
extract_model_ctc -> all;
extract_model_ctc -> load_state_dict;
extract_model_ctc -> isinstance;
extract_model_ctc -> keys;
extract_model_ctc -> state_dict;
extract_model_ctc -> device;
extract_model_ctc -> allclose;
extract_model_ctc -> split;
extract_model_rnnt -> to_container;
extract_model_rnnt -> deepcopy;
extract_model_rnnt -> create;
extract_model_rnnt -> restore_from;
extract_model_rnnt -> all;
extract_model_rnnt -> isinstance;
extract_model_rnnt -> keys;
extract_model_rnnt -> device;
extract_model_rnnt -> allclose;
extract_model_rnnt -> state_dict;
extract_model_rnnt -> split;
prepare_inference_manifest -> str;
prepare_inference_manifest -> write_manifest;
prepare_inference_manifest -> glob;
prepare_inference_manifest -> Path;
prepare_inference_manifest -> read_manifest;
prepare_inference_manifest -> append;
prepare_inference_manifest -> is_file;
prepare_inference_manifest -> expanduser;
prepare_inference_manifest -> len;
prepare_inference_manifest -> is_absolute;
prepare_inference_manifest -> absolute;
extract_audio_features -> str;
extract_audio_features -> is_file;
extract_audio_features -> mkdir;
extract_audio_features -> set_grad_enabled;
extract_audio_features -> device;
extract_audio_features -> to;
extract_audio_features -> eval;
extract_audio_features -> setup_test_data;
extract_audio_features -> info;
extract_audio_features -> write_manifest;
extract_audio_features -> Path;
extract_audio_features -> open;
extract_audio_features -> readlines;
extract_audio_features -> init_frame_vad_model;
extract_audio_features -> from_pretrained;
extract_audio_features -> record_fn;
extract_audio_features -> enumerate;
extract_audio_features -> loads;
extract_audio_features -> append;
extract_audio_features -> is_available;
extract_audio_features -> tqdm;
extract_audio_features -> strip;
extract_audio_features -> len;
extract_audio_features -> test_dataloader;
extract_audio_features -> autocast;
extract_audio_features -> preprocessor;
extract_audio_features -> cpu;
extract_audio_features -> join;
extract_audio_features -> save;
extract_audio_features -> squeeze;
extract_audio_features -> absolute;
run_vad_inference -> info;
run_vad_inference -> device;
run_vad_inference -> to;
run_vad_inference -> eval;
run_vad_inference -> Path;
run_vad_inference -> DictConfig;
run_vad_inference -> setup_test_data;
run_vad_inference -> is_dir;
run_vad_inference -> items;
run_vad_inference -> glob;
run_vad_inference -> read_manifest;
run_vad_inference -> range;
run_vad_inference -> str;
run_vad_inference -> write_manifest;
run_vad_inference -> init_vad_model;
run_vad_inference -> is_file;
run_vad_inference -> ValueError;
run_vad_inference -> open;
run_vad_inference -> safe_load;
run_vad_inference -> mkdir;
run_vad_inference -> time;
run_vad_inference -> generate_vad_frame_pred;
run_vad_inference -> generate_overlap_vad_seq;
run_vad_inference -> generate_vad_segment_table;
run_vad_inference -> len;
run_vad_inference -> init_frame_vad_model;
run_vad_inference -> is_available;
run_vad_inference -> absolute;
run_asr_inference -> info;
run_asr_inference -> init_asr_model;
run_asr_inference -> device;
run_asr_inference -> to;
run_asr_inference -> eval;
run_asr_inference -> get;
run_asr_inference -> hasattr;
run_asr_inference -> DataLoader;
run_asr_inference -> time;
run_asr_inference -> read_manifest;
run_asr_inference -> range;
run_asr_inference -> write_manifest;
run_asr_inference -> ValueError;
run_asr_inference -> get_bpe_dataset;
run_asr_inference -> get_char_dataset;
run_asr_inference -> autocast;
run_asr_inference -> len;
run_asr_inference -> join;
run_asr_inference -> split;
run_asr_inference -> word_error_rate;
run_asr_inference -> is_available;
run_asr_inference -> change_decoding_strategy;
run_asr_inference -> replace;
run_asr_inference -> Path;
run_asr_inference -> no_grad;
run_asr_inference -> append;
run_asr_inference -> record_fn;
run_asr_inference -> tqdm;
run_asr_inference -> forward;
run_asr_inference -> decode_function;
run_asr_inference -> isinstance;
run_asr_inference -> run_offline_inference;
run_asr_inference -> run_chunked_inference;
run_asr_inference -> set_struct;
run_asr_inference -> open_dict;
write_manifest -> open;
write_manifest -> dump;
write_manifest -> write;
write_manifest -> join;
write_manifest -> exists;
write_manifest -> info;
write_manifest -> mkdir;
write_manifest -> zip;
write_manifest -> load;
write_manifest -> get_duration;
write_manifest -> flush;
write_manifest -> append;
write_manifest -> print;
write_manifest -> format;
write_manifest -> len;
write_manifest -> dumps;
read_manifest -> DataStoreObject;
read_manifest -> readlines;
read_manifest -> close;
read_manifest -> str;
read_manifest -> open;
read_manifest -> strip;
read_manifest -> append;
read_manifest -> error;
read_manifest -> RuntimeError;
read_manifest -> get;
read_manifest -> Exception;
read_manifest -> loads;
read_manifest -> len;
is_file -> isreg;
is_file -> getmember;
is_file -> join;
setup_test_data -> _update_dataset_config;
setup_test_data -> _setup_dataloader_from_config;
setup_test_data -> hasattr;
setup_test_data -> _setup_feature_label_dataloader;
setup_test_data -> DictConfig;
setup_test_data -> setup_test_data;
setup_test_data -> RuntimeError;
setup_test_data -> get;
setup_test_data -> __setup_dataloader_from_config;
setup_test_data -> __setup_dataloader_from_config_infer;
setup_test_data -> info;
setup_test_data -> DataLoader;
setup_test_data -> len;
setup_test_data -> build_pretraining_data_loader;
setup_test_data -> prepare_data;
setup_test_data -> setup_eval_dataloader;
setup_test_data -> build_virtual_prompt_dataset;
setup_test_data -> setup_eval_data;
setup_test_data -> _setup_eval_dataloader_from_config;
setup_test_data -> _setup_eval_dataset_from_config;
setup_test_data -> range;
setup_test_data -> setattr;
setup_test_data -> GlobalAverageLossMetric;
setup_test_data -> setup_dataloader_from_config;
setup_test_data -> _get_eval_metrics_kwargs;
setup_test_data -> append;
setup_test_data -> create;
setup_test_data -> merge;
setup_test_data -> _setup_metrics_dictionary;
setup_test_data -> ClassificationReport;
setup_test_data -> structured;
setup_test_data -> type;
setup_test_data -> join;
setup_test_data -> get_label_ids;
setup_test_data -> _setup_test_dataloader;
setup_test_data -> build_virtual_prompt_tarred_dataset;
setup_test_data -> NotImplementedError;
init_frame_vad_model -> endswith;
init_frame_vad_model -> info;
init_frame_vad_model -> restore_from;
init_frame_vad_model -> load_from_checkpoint;
init_frame_vad_model -> from_pretrained;
test_dataloader -> DataLoader;
test_dataloader -> _create_dataloader;
test_dataloader -> hasattr;
test_dataloader -> setup;
test_dataloader -> _create_dataset;
test_dataloader -> _make_dataloader;
test_dataloader -> str;
test_dataloader -> warning;
test_dataloader -> get;
test_dataloader -> _create_lhotse_dataloader;
test_dataloader -> isinstance;
test_dataloader -> len;
test_dataloader -> _create_nemo_dataloader;
test_dataloader -> _build_test_dataloader;
test_dataloader -> RandomDataset;
test_dataloader -> format;
test_dataloader -> range;
save -> compute_mel_spec;
save -> _save_feature;
save -> _features_exists;
save -> compute_energy;
save -> compute_pitch;
save -> flush;
save -> open;
save -> write;
save -> dumps;
is_dir -> isdir;
is_dir -> getmember;
is_dir -> join;
init_vad_model -> endswith;
init_vad_model -> info;
init_vad_model -> restore_from;
init_vad_model -> load_from_checkpoint;
init_vad_model -> from_pretrained;
generate_vad_frame_pred -> int;
generate_vad_frame_pred -> info;
generate_vad_frame_pred -> get_vad_stream_status;
generate_vad_frame_pred -> open;
generate_vad_frame_pred -> readlines;
generate_vad_frame_pred -> record_fn;
generate_vad_frame_pred -> enumerate;
generate_vad_frame_pred -> append;
generate_vad_frame_pred -> tqdm;
generate_vad_frame_pred -> split;
generate_vad_frame_pred -> len;
generate_vad_frame_pred -> test_dataloader;
generate_vad_frame_pred -> to;
generate_vad_frame_pred -> autocast;
generate_vad_frame_pred -> softmax;
generate_vad_frame_pred -> tolist;
generate_vad_frame_pred -> join;
generate_vad_frame_pred -> vad_model;
generate_vad_frame_pred -> squeeze;
generate_vad_frame_pred -> loads;
generate_vad_frame_pred -> cpu;
generate_vad_frame_pred -> write;
generate_vad_frame_pred -> debug;
generate_vad_frame_pred -> range;
generate_vad_frame_pred -> format;
generate_overlap_vad_seq -> glob;
generate_overlap_vad_seq -> join;
generate_overlap_vad_seq -> exists;
generate_overlap_vad_seq -> mkdir;
generate_overlap_vad_seq -> tqdm;
generate_overlap_vad_seq -> Pool;
generate_overlap_vad_seq -> zip;
generate_overlap_vad_seq -> list;
generate_overlap_vad_seq -> generate_overlap_vad_seq_per_file;
generate_overlap_vad_seq -> str;
generate_overlap_vad_seq -> repeat;
generate_overlap_vad_seq -> imap;
generate_overlap_vad_seq -> len;
generate_vad_segment_table -> join;
generate_vad_segment_table -> exists;
generate_vad_segment_table -> mkdir;
generate_vad_segment_table -> tqdm;
generate_vad_segment_table -> listdir;
generate_vad_segment_table -> endswith;
generate_vad_segment_table -> Pool;
generate_vad_segment_table -> zip;
generate_vad_segment_table -> list;
generate_vad_segment_table -> generate_vad_segment_table_per_file;
generate_vad_segment_table -> str;
generate_vad_segment_table -> repeat;
generate_vad_segment_table -> imap;
generate_vad_segment_table -> len;
get_vad_stream_status -> range;
get_vad_stream_status -> len;
softmax -> exp;
softmax -> reshape;
softmax -> max;
softmax -> sum;
init_asr_model -> endswith;
init_asr_model -> info;
init_asr_model -> restore_from;
init_asr_model -> load_from_checkpoint;
init_asr_model -> from_pretrained;
get_bpe_dataset -> AudioToBPEDataset;
get_bpe_dataset -> get;
get_bpe_dataset -> FeatureToBPEDataset;
get_bpe_dataset -> VideoToBPEDataset;
get_char_dataset -> AudioToCharDataset;
get_char_dataset -> warning;
get_char_dataset -> get;
get_char_dataset -> FeatureToCharDataset;
get_char_dataset -> VideoToCharDataset;
forward -> repeat;
forward -> chunk;
forward -> cat;
forward -> inner_model;
forward -> post_quant_conv;
forward -> decoder;
forward -> transformer;
forward -> pad;
forward -> encode_with_transformer;
forward -> pre_forward;
forward -> post_forward;
forward -> float;
forward -> max;
forward -> all_reduce;
forward -> sum;
forward -> all_reduce_autograd;
forward -> unsqueeze;
forward -> exp;
forward -> detach;
forward -> expand;
forward -> get_tensor_model_parallel_group;
forward -> kl_div;
forward -> view;
forward -> log_softmax;
forward -> softmax;
forward -> log;
forward -> clone;
forward -> typecheck;
forward -> cos;
forward -> mean;
forward -> acos;
forward -> enumerate;
forward -> clamp;
forward -> diagonal;
forward -> transpose;
forward -> to;
forward -> loss_f;
forward -> range;
forward -> tensor;
forward -> zeros_like;
forward -> expand_as;
forward -> ones_like;
forward -> long;
forward -> forward;
forward -> reduce;
forward -> super;
forward -> _loss;
forward -> any;
forward -> min;
forward -> append;
forward -> _partial_loss;
forward -> nelement;
forward -> isnan;
forward -> isinf;
forward -> is_numba_cuda_fp16_supported;
forward -> contiguous;
forward -> is_contiguous;
forward -> warning;
forward -> narrow;
forward -> compute_forward_prob;
forward -> div;
forward -> reshape;
forward -> _calculate_similarity;
forward -> new_zeros;
forward -> cross_entropy;
forward -> numel;
forward -> int;
forward -> target_proj;
forward -> size;
forward -> isinstance;
forward -> quantizer;
forward -> sample_negatives;
forward -> ceil;
forward -> unique_consecutive;
forward -> scatter_;
forward -> sample_from_codebook;
forward -> Tensor;
forward -> loss;
forward -> nll_loss;
forward -> mlm_loss;
forward -> encoder;
forward -> permute;
forward -> encoder_decoder_proj;
forward -> ValueError;
forward -> preprocessor;
forward -> spec_augmentation;
forward -> transf_encoder;
forward -> transf_decoder;
forward -> lens_to_mask;
forward -> crop_or_pad;
forward -> argmax;
forward -> _forward_k2_post_processing;
forward -> get_ms_mel_feat;
forward -> train;
forward -> get_ms_emb_seq;
forward -> get_cluster_avg_embs_model;
forward -> msdd;
forward -> no_grad;
forward -> eval;
forward -> forward_for_export;
forward -> len;
forward -> zeros;
forward -> get_seq_mask;
forward -> embedding;
forward -> classifier;
forward -> get_seq_length;
forward -> sequence_generator;
forward -> process_signal;
forward -> forward_streaming;
forward -> frontend_encoder;
forward -> forward_infer;
forward -> is_access_enabled;
forward -> hasattr;
forward -> reset_registry;
forward -> list;
forward -> dropout_features;
forward -> dropout_features_q;
forward -> values;
forward -> set_access_enabled;
forward -> logical_and;
forward -> pow;
forward -> set_masking_enabled;
forward -> get_current_mask;
forward -> get_current_feat;
forward -> mask_processor;
forward -> pre_encode;
forward -> adapter;
forward -> get_features;
forward -> spec_cutout;
forward -> spec_augment_launch_heuristics;
forward -> spec_augment_numba;
forward -> spec_augment;
forward -> sample;
forward -> randint;
forward -> beam_search_func;
forward -> forward_internal;
forward -> update_max_seq_length;
forward -> update_access_cfg;
forward -> update;
forward -> aggregator;
forward -> getattr;
forward -> get_module_registry;
forward -> RuntimeError;
forward -> startswith;
forward -> update_max_sequence_length;
forward -> is_adapter_available;
forward -> forward_enabled_adapters;
forward -> decoder_layers;
forward -> pooling;
forward -> feature_agg;
forward -> layer;
forward -> _pooling;
forward -> squeeze;
forward -> final;
forward -> parameters;
forward -> normalize;
forward -> dim;
forward -> decode;
forward -> cpu;
forward -> data_ptr;
forward -> from_numpy;
forward -> stride;
forward -> _get_tokens;
forward -> _get_timesteps;
forward -> get_entry;
forward -> _forward_impl;
forward -> zip;
forward -> full;
forward -> lstm_layer;
forward -> linear_layer;
forward -> cnn;
forward -> core_model;
forward -> label_collate;
forward -> predict;
forward -> joint;
forward -> compute;
forward -> reset;
forward -> is_inference_mode_enabled;
forward -> is_grad_enabled;
forward -> sampled_joint;
forward -> new_full;
forward -> get_lengths;
forward -> apply_layers;
forward -> post_extract_proj;
forward -> layer_norm;
forward -> apply;
forward -> create_padding_mask;
forward -> pos_conv;
forward -> apply_transformer;
forward -> new;
forward -> forward_with_overlap;
forward -> forward_without_overlap;
forward -> masking;
forward -> _forward_for_weighted_sum;
forward -> feature_extractor;
forward -> proj;
forward -> einsum;
forward -> argmin;
forward -> norm;
forward -> arange;
forward -> att_bridge;
forward -> ones;
forward -> hidden_enc;
forward -> init_hidden_enc;
forward -> init_cross_att;
forward -> cross_att;
forward -> self_att;
forward -> type_as;
forward -> _embedding;
forward -> _encoder;
forward -> _decoder;
forward -> forward_preln;
forward -> forward_postln;
forward -> form_attention_mask;
forward -> _get_memory_states;
forward -> final_layer_norm;
forward -> token_embedding;
forward -> position_embedding;
forward -> dropout;
forward -> token_type_embedding;
forward -> query_net;
forward -> key_net;
forward -> value_net;
forward -> transpose_for_scores;
forward -> matmul;
forward -> attn_dropout;
forward -> out_projection;
forward -> layer_dropout;
forward -> dense_in;
forward -> act_fn;
forward -> dense_out;
forward -> squeeze_;
forward -> W2;
forward -> act;
forward -> W1;
forward -> eye;
forward -> make_non_pad_mask;
forward -> save_for_backward;
forward -> requires_grad_;
forward -> func;
forward -> backward;
forward -> get_weighted_graphs;
forward -> get_tot_scores;
forward -> _prepare_graphs_for_intersection;
forward -> _intersect_calc_scores;
forward -> next_power_of_2;
forward -> get_graphs_batched;
forward -> force_float32_context;
forward -> nullcontext;
forward -> index_select;
forward -> get_logits_indices;
forward -> flatten;
forward -> transduce_batch;
forward -> FloatTensor;
forward -> numpy;
forward -> _assert_no_grad;
forward -> certify_inputs;
forward -> rnnt;
forward -> loss_func;
forward -> unsqueeze_;
forward -> NotImplementedError;
forward -> split;
forward -> launch_spec_augment_kernel;
forward -> get_seq_len;
forward -> view_as_real;
forward -> sqrt;
forward -> masked_fill;
forward -> autocast;
forward -> stft;
forward -> splice_frames;
forward -> normalize_batch;
forward -> randn_like;
forward -> random;
forward -> type;
forward -> log_zero_guard_value_fn;
forward -> _compute_output_lengths;
forward -> _apply_dithering;
forward -> _apply_preemphasis;
forward -> _extract_spectrograms;
forward -> _apply_log;
forward -> _apply_normalization;
forward -> _apply_pad_to;
forward -> update_cache;
forward -> norm_feed_forward1;
forward -> feed_forward1;
forward -> norm_self_att;
forward -> norm_conv;
forward -> conv;
forward -> norm_feed_forward2;
forward -> feed_forward2;
forward -> norm_out;
forward -> self_attn;
forward -> get;
forward -> register_accessible_tensor;
forward -> pointwise_conv1;
forward -> depthwise_conv;
forward -> activation;
forward -> pointwise_conv2;
forward -> glu;
forward -> pointwise_activation;
forward -> batch_norm;
forward -> linear1;
forward -> linear2;
forward -> inference_mode;
forward -> search_algorithm;
forward -> pack_hypotheses;
forward -> decoding_algorithm;
forward -> pack_wfst_hypotheses;
forward -> empty;
forward -> copy_;
forward -> greedy_decode;
forward -> device;
forward -> _greedy_decode_labels_batched;
forward -> _greedy_decode_logprobs_batched;
forward -> mask_input;
forward -> pad_layer;
forward -> update_masked_length;
forward -> mout;
forward -> get_enabled_adapters;
forward -> l;
forward -> res_layer;
forward -> residual_quantizer;
forward -> ImportError;
forward -> get_dropout_mask;
forward -> block;
forward -> stack;
forward -> res_conv;
forward -> beam_search;
forward -> format_hypotheses;
forward -> Hypothesis;
forward -> NBestHypotheses;
forward -> greedy_search;
forward -> is_autocast_enabled;
forward -> avoid_float16_autocast_context;
forward -> forward_qkv;
forward -> linear_out;
forward -> forward_attention;
forward -> scaled_dot_product_attention;
forward -> all;
forward -> sdpa_kernel;
forward -> rel_shift;
forward -> linear_pos;
forward -> masked_fill_;
forward -> sliding_chunks_matmul_qk;
forward -> new_ones;
forward -> _get_global_attn_indices;
forward -> _compute_attn_output_with_global_indices;
forward -> sliding_chunks_matmul_pv;
forward -> _compute_out_global_to_all;
forward -> _compute_global_key_attn;
forward -> global_q;
forward -> global_k;
forward -> global_v;
forward -> dropout_emb;
forward -> _decoding_computer;
forward -> to_hyps_list;
forward -> to_nbest_hyps_list;
forward -> _greedy_decode;
forward -> _forward_vectorized;
forward -> _forward_legacy;
forward -> self_attn_scale;
forward -> feed_forward1_scale;
forward -> conv_scale;
forward -> feed_forward2_scale;
forward -> weight_proj;
forward -> gumbel_softmax;
forward -> concat;
forward -> proj_out;
forward -> pre_norm;
forward -> calc_length;
forward -> out;
forward -> conv_split_by_batch;
forward -> conv_split_by_channel;
forward -> dw_conv;
forward -> pw_conv;
forward -> reduction_enc;
forward -> make_seq_mask_like;
forward -> std;
forward -> sub;
forward -> conv_layer;
forward -> bn;
forward -> se_layer;
forward -> group_tdnn_block;
forward -> get_statistics_with_mask;
forward -> attention_layer;
forward -> mlp;
forward -> dense;
forward -> compute_output;
forward -> compute_auxiliary_losses;
forward -> apply_stochastic_depth;
forward -> keys;
forward -> score_sentences;
forward -> snake;
forward -> item;
forward -> clusterSpectralEmbeddings;
forward -> getPvalueList;
forward -> getAffinityGraphMat;
forward -> subsampleAffinityMat;
forward -> isGraphFullyConnected;
forward -> getMinimumConnection;
forward -> mode;
forward -> fork;
forward -> wait;
forward -> getEigRatio;
forward -> calculate_sdr_batch;
forward -> calculate_mse_batch;
forward -> calculate_mae_batch;
forward -> where;
forward -> spectral_loss;
forward -> next;
forward -> sisnr_loss;
forward -> asr_loss;
forward -> _select_channel;
forward -> _metric;
forward -> _trim_inputs;
forward -> _batch_reduction;
forward -> mask_estimator;
forward -> match_batch_length;
forward -> mixture_consistency;
forward -> estimator;
forward -> amax;
forward -> abs;
forward -> sampler;
forward -> relu;
forward -> bn0;
forward -> leaky_relu;
forward -> bn1;
forward -> feature_gru1;
forward -> bn2;
forward -> feature_gru2;
forward -> bn3;
forward -> feature_gru0;
forward -> denoise_gru;
forward -> denoise_gru_1;
forward -> denoise_gru_2;
forward -> denoise_gru_3;
forward -> mask_act;
forward -> inv_conv;
forward -> inv_conv_activation;
forward -> conv1d;
forward -> conv1d_out1;
forward -> conv1d_out2;
forward -> conv1d_out3;
forward -> denoise_mask;
forward -> format;
forward -> normalize_mean;
forward -> normalize_mean_var;
forward -> wrap_to_pi;
forward -> angle;
forward -> features;
forward -> input_projection;
forward -> flatten_parameters;
forward -> rnn;
forward -> pad_packed_sequence;
forward -> output_projection;
forward -> output_nonlinearity;
forward -> pack_padded_sequence;
forward -> fc;
forward -> channel_reduction;
forward -> disable_checks;
forward -> output_layer;
forward -> repeat_interleave;
forward -> is_complex;
forward -> update_weights;
forward -> update_pdf;
forward -> update_masks;
forward -> concatenate;
forward -> filter;
forward -> tolist;
forward -> rearrange;
forward -> get_output_length;
forward -> cfloat;
forward -> istft;
forward -> view_as_complex;
forward -> conformer;
forward -> prior_sampling;
forward -> linspace;
forward -> mask_sequence_tensor;
forward -> corrector;
forward -> predictor;
forward -> NeuralType;
forward -> SpectrogramType;
forward -> tuple;
forward -> LengthsType;
forward -> discretize;
forward -> VoidType;
forward -> FloatType;
forward -> perturb_kernel_std;
forward -> score_estimator;
forward -> shuffle;
forward -> transform_average;
forward -> transform_channel;
forward -> transform_attend;
forward -> attention;
forward -> cdouble;
forward -> double;
forward -> covariance_matrix;
forward -> apply_filter;
forward -> solve;
forward -> apply_ban;
forward -> apply_diag_reg;
forward -> trace;
forward -> ref_estimator;
forward -> log10;
forward -> scatter;
forward -> conj;
forward -> convtensor;
forward -> estimate_correlations;
forward -> estimate_filter;
forward -> ncsnpp;
forward -> pad_input;
forward -> iter;
forward -> time_embedding;
forward -> reversed;
forward -> projection;
forward -> downsample;
forward -> upsample;
forward -> interpolate;
forward -> LongTensor;
forward -> sin;
forward -> input_block;
forward -> middle_conv;
forward -> output_block;
forward -> residual_projection;
forward -> diffusion_step_projection;
forward -> get_alphas;
forward -> get_sigmas;
forward -> dw_conv1d;
forward -> to_gamma;
forward -> to_beta;
forward -> gelu;
forward -> get_alibi_bias;
forward -> dict;
forward -> final_norm;
forward -> attn_prenorm;
forward -> attn;
forward -> ff_prenorm;
forward -> skip_combiner;
forward -> ff;
forward -> pop;
forward -> proj_in;
forward -> _get_key_padding_mask;
forward -> transformerunet;
forward -> conv_embed;
forward -> sinu_pos_emb;
forward -> _apply_sinc_resample_kernel;
forward -> sorted;
forward -> add;
forward -> t;
forward -> cuda;
forward -> info;
forward -> eq;
forward -> lt;
forward -> ne;
forward -> gt;
forward -> gather;
forward -> clamp_;
forward -> CrossEntropyLoss;
forward -> loss_fct;
forward -> module;
forward -> lstm;
forward -> _parse_hidden_state;
forward -> unbind;
forward -> cell;
forward -> layernorm_i;
forward -> layernorm_h;
forward -> sigmoid;
forward -> tanh;
forward -> layernorm_c;
forward -> mm;
forward -> rnn_layer;
forward -> snake_act;
forward -> lrelu;
forward -> tqdm;
forward -> pad_video_batch;
forward -> numpy2tensor;
forward -> autoencode;
forward -> tensor2numpy;
forward -> unpad_video_batch;
forward -> norm1;
forward -> nonlinearity;
forward -> conv1;
forward -> norm2;
forward -> conv2;
forward -> nin_shortcut;
forward -> q;
forward -> k;
forward -> v;
forward -> bmm;
forward -> patcher;
forward -> block_1;
forward -> attn_1;
forward -> block_2;
forward -> conv_out;
forward -> conv_in;
forward -> unpatcher;
forward -> _replication_pad;
forward -> conv3d;
forward -> replication_pad;
forward -> conv3;
forward -> avg_pool3d;
forward -> time2batch;
forward -> batch2time;
forward -> space2batch;
forward -> tril;
forward -> batch2space;
forward -> patcher3d;
forward -> unpatcher3d;
forward -> _haar;
forward -> _arrange;
forward -> _ihaar;
forward -> _iarrange;
forward -> project_in;
forward -> quantize;
forward -> codes_to_indices;
forward -> project_out;
forward -> pack_one;
forward -> unpack_one;
forward -> remap_to_used;
forward -> entropy;
forward -> indices_to_codes;
forward -> encode;
forward -> NetworkEval;
forward -> tokenizer;
forward -> current_device;
forward -> get_query_key_value_tensors;
forward -> get_added_query_key_value_tensors;
forward -> _adjust_key_value_for_inference;
forward -> linear_proj;
forward -> added_linear_proj;
forward -> apply_rotary_pos_emb;
forward -> _checkpointed_attention_forward;
forward -> core_attention;
forward -> pos_embedding;
forward -> emb_w;
forward -> emb_t;
forward -> emb_h;
forward -> _norm;
forward -> adaLN_modulation;
forward -> adaLN;
forward -> modulated_layernorm;
forward -> spatial_self_attention;
forward -> scaled_modulated_layernorm;
forward -> full_self_attention;
forward -> cross_attention;
forward -> temporal_self_attention;
forward -> scale_add;
forward -> make_viewless_tensor;
forward -> self_attention;
forward -> adaln;
forward -> adaln_context;
forward -> context_mlp;
forward -> modulate;
forward -> linear;
forward -> norm_final;
forward -> fps_embedder;
forward -> affline_norm;
forward -> final_layer_linear;
forward -> x_embedder;
forward -> scatter_to_sequence_parallel_region;
forward -> gather_from_sequence_parallel_region;
forward -> pos_embedder;
forward -> t_embedder;
forward -> rope;
forward -> out_layer;
forward -> silu;
forward -> in_layer;
forward -> get_timestep_embedding;
forward -> time_proj;
forward -> time_embedder;
forward -> img_embed;
forward -> txt_embed;
forward -> timestep_embedding;
forward -> pos_embed;
forward -> vector_embedding;
forward -> guidance_embedding;
forward -> get_fp8_context;
forward -> input_hint_block;
forward -> controlnet_x_embedder;
forward -> control_block;
forward -> flux_controlnet;
forward -> flux;
forward -> forward_wrapper;
forward -> x0_fn;
forward -> conv_shortcut;
forward -> temb_proj;
forward -> avg_pool2d;
forward -> to_qkv;
forward -> to_out;
forward -> kl;
forward -> perceptual_loss;
forward -> adopt_weight;
forward -> discriminator;
forward -> disc_loss;
forward -> calculate_adaptive_weight;
forward -> vae_loss;
forward -> get_context_parallel_world_size;
forward -> average_losses_across_data_parallel_group;
forward -> sentence_order_prediction_loss;
forward -> masked_token_with_zero;
forward -> cross_entropy_loss;
forward -> _gather_global_in_batch_representations;
forward -> multiply;
forward -> lm_head;
forward -> compute_language_model_loss;
forward -> shared_embedding_or_output_weight;
forward -> pooler;
forward -> binary_head;
forward -> get_tensor_model_parallel_rank;
forward -> get_tensor_model_parallel_world_size;
forward -> get_vocab_range;
forward -> input_layernorm;
forward -> post_att_layernorm;
forward -> pre_cross_attn_layernorm;
forward -> pre_mlp_layernorm;
forward -> post_mlp_layernorm;
forward -> bias_dropout_add_exec_handler;
forward -> self_attn_bda;
forward -> cross_attn_bda;
forward -> mlp_bda;
forward -> initial_layernorm;
forward -> embedding_head;
forward -> get_tensor;
forward -> baddbmm;
forward -> logit_softcapping;
forward -> scale_mask_softmax;
forward -> get_swa;
forward -> attention_dropout;
forward -> get_global_memory_buffer;
forward -> get_cuda_rng_tracker;
forward -> post_layernorm;
forward -> lru_cache;
forward -> _is_local_attn_layer;
forward -> model;
forward -> signature;
forward -> pool;
forward -> score;
forward -> SequenceClassifierOutputWithPast;
forward -> MSELoss;
forward -> BCEWithLogitsLoss;
forward -> pooling_module;
forward -> bool;
forward -> deprecate_inference_params;
forward -> is_dynamic_batching;
forward -> is_decode_only;
forward -> flash_decode;
forward -> is_fa_min_version;
forward -> deepcopy;
forward -> chunkify_cu_seqlens;
forward -> chunkify;
forward -> is_static_batching;
forward -> cu_query_lengths;
forward -> cu_kv_lengths;
forward -> flash_decode_and_prefill;
forward -> apply_rotary_emb_query;
forward -> TEDelayedScaling;
forward -> model_parallel_is_initialized;
forward -> fp8_autocast;
forward -> get_amax_reduction_group;
forward -> _checkpointed_forward;
forward -> mixer;
forward -> hyena_bda;
forward -> _maybe_use_fp8;
forward -> hyena_proj_conv;
forward -> get_context_parallel_group;
forward -> make_upper_case;
forward -> reweighted_cross_entropy;
forward -> get_rotary_seq_len;
forward -> rotary_pos_emb;
forward -> all_to_all_single_fn;
forward -> get_process_group_ranks;
forward -> irecv;
forward -> isend;
forward -> fftconv_func;
forward -> get_rank;
forward -> short_conv;
forward -> get_context_parallel_rank;
forward -> zigzag_get_overlapping_patches;
forward -> causal_conv1d_fn;
forward -> mse_loss;
forward -> cosine_embedding_loss;
forward -> new_tensor;
forward -> _fit;
forward -> _masked_token_loss;
forward -> _distillation_loss_fn;
forward -> base_linear_forward;
forward -> adapter_q;
forward -> adapter_k;
forward -> adapter_v;
forward -> adapter_gate;
forward -> adapter_up;
forward -> get_weight_magnitude;
forward -> _get_weight_norm;
forward -> lora_b;
forward -> fwd;
forward -> lora_a;
forward -> all_to_all;
forward -> empty_like;
forward -> linear_in;
forward -> pad_seq_to_mult;
forward -> unpad_seq_to_mult;
forward -> all2all_hp2sp;
forward -> resize;
forward -> round;
forward -> gather_features;
forward -> neighbour_exchange;
forward -> neighbour_exchange_bidir;
forward -> divmod;
forward -> neighbour_exchange_bidir_with_grad;
forward -> neighbour_exchange_with_grad;
forward -> backbone;
forward -> replace_media_embeddings;
forward -> _apply_reduce_scatter;
forward -> is_pipeline_first_stage;
forward -> set_media;
forward -> renderer;
forward -> time_embed;
forward -> middle_block;
forward -> middle_block_out;
forward -> zero_conv;
forward -> noise_scheduler;
forward -> unet;
forward -> DiagonalGaussianDistribution;
forward -> apply_step;
forward -> default;
forward -> extract_into_tensor;
forward -> random_dropout;
forward -> compute_loss;
forward -> get_condition;
forward -> batch_mul;
forward -> get_xt;
forward -> loss_fn;
forward -> training_step;
forward -> p_losses;
forward -> get_learned_conditioning;
forward -> q_sample;
forward -> diffusion_model;
forward -> get_eps;
forward -> append_dims;
forward -> sigma_to_t;
forward -> get_scalings;
forward -> cosine_similarity;
forward -> mlp_similarity;
forward -> nn_classifier;
forward -> vision_encoder;
forward -> head;
forward -> language_model;
forward -> final_layernorm;
forward -> text_encoder;
forward -> nan_to_num_;
forward -> W;
forward -> checkpoint;
forward -> _forward;
forward -> net;
forward -> op;
forward -> text_to_cond;
forward -> to_text_non_attn_cond;
forward -> lowres_time_embed;
forward -> attention_pooling;
forward -> init_conv;
forward -> str;
forward -> get_sampling_timesteps;
forward -> p_sample;
forward -> print;
forward -> forward_with_cond_scale;
forward -> thresholding_derivative;
forward -> forward_net;
forward -> rand;
forward -> skip;
forward -> nan_to_num;
forward -> forward_density_features;
forward -> enable_grad;
forward -> normal_finite_differences;
forward -> grad;
forward -> laplacian_uniform;
forward -> compute_edge_to_face_mapping;
forward -> _render;
forward -> init_tet;
forward -> custom_fwd;
forward -> p_fn;
forward -> freq_encode_forward;
forward -> freq_encode;
forward -> log2;
forward -> grid_encode_forward;
forward -> zero_;
forward -> grid_encode;
forward -> near_far_from_aabb;
forward -> get_backend;
forward -> sph_from_ray;
forward -> morton3D;
forward -> morton3D_invert;
forward -> packbits;
forward -> flatten_rays;
forward -> march_rays_train;
forward -> composite_rays_train_forward;
forward -> march_rays;
forward -> composite_rays;
forward -> sh_encode_forward;
forward -> sh_encode;
forward -> geglu;
forward -> get_adapter_cfg;
forward -> get_adapter_module;
forward -> lora_linear_adapter;
forward -> to_k;
forward -> to_v;
forward -> _attention;
forward -> norm_to_q;
forward -> to_q;
forward -> rescaler;
forward -> encode_with_pretrained;
forward -> proj_norm;
forward -> submodel;
forward -> downmodel;
forward -> qkv_proj;
forward -> c_proj;
forward -> up;
forward -> run_function;
forward -> embedding_context;
forward -> embedder;
forward -> possibly_get_ucg_val;
forward -> expand_dims_like;
forward -> bernoulli;
forward -> tknz_fn;
forward -> interpolator;
forward -> channel_mapper;
forward -> target_forward;
forward -> tokenize;
forward -> text_transform;
forward -> timestep;
forward -> emb;
forward -> fn;
forward -> gru;
forward -> reshape_as;
forward -> exists;
forward -> map;
forward -> max_neg_value;
forward -> attn_fn;
forward -> Intermediates;
forward -> rel_pos;
forward -> topk;
forward -> sinusoidal_emb;
forward -> copy;
forward -> residual_fn;
forward -> LayerIntermediates;
forward -> token_emb;
forward -> pos_emb;
forward -> emb_dropout;
forward -> project_emb;
forward -> attn_layers;
forward -> to_logits;
forward -> video_preprocessor;
forward -> video_augmentation;
forward -> video_front_end;
forward -> front_end;
forward -> augment;
forward -> transform;
forward -> stem;
forward -> joined_post_act;
forward -> layers;
forward -> residual;
forward -> prepare_llm_input;
forward -> _gpt_forward;
forward -> _create_attention_mask;
forward -> items;
forward -> enc_dec_model;
forward -> preprocess;
forward -> maybe_preprocess_audio;
forward -> modality_adapter;
forward -> _have_same_length;
forward -> align_feat_seq_list;
forward -> torch;
forward -> forward_speaker;
forward -> xattn_decoder;
forward -> output_proj;
forward -> input_proj1;
forward -> input_proj2;
forward -> _helper;
forward -> _cross_entropy_bin;
forward -> _cross_entropy;
forward -> unreduced_loss_fct;
forward -> get_virtual_prompt_ids_for_megatron_gpt;
forward -> get_prompt_token_labels_for_megatron_gpt;
forward -> mask_and_reduce_loss;
forward -> mask_and_reduce_loss_per_sample;
forward -> tile;
forward -> array;
forward -> bert_model;
forward -> nli_model;
forward -> q_encoder;
forward -> p_encoder;
forward -> sim_score_regressor;
forward -> mlm_classifier;
forward -> nsp_classifier;
forward -> is_pipeline_last_stage;
forward -> is_tensor;
forward -> average_pool;
forward -> onnx_export;
forward -> catch_warnings;
forward -> filterwarnings;
forward -> first_stage_of_pipeline;
forward -> embed_input;
forward -> position_embeddings;
forward -> post_language_model_processing;
forward -> word_embeddings_weight;
forward -> layernorm;
forward -> parallel_lm_logits;
forward -> bert_extended_attention_mask;
forward -> build_position_ids;
forward -> post_self_attn_layernorm;
forward -> embedding_forward;
forward -> _embedding_decode_;
forward -> recurrent_layer;
forward -> recurrent_bda;
forward -> _fused_pre_reshape_;
forward -> _post_add_reshape_sigmoid_;
forward -> bias_gelu_impl;
forward -> _fused_permute_add_;
forward -> _fused_permute_mult_;
forward -> checkpoint_handler;
forward -> conv_1d;
forward -> rg_lru;
forward -> encode_latent;
forward -> latent2hidden;
forward -> test_encoder_ids;
forward -> test_decoder_ids;
forward -> start;
forward -> stop;
forward -> _get_per_sample_perplexity;
forward -> logits;
forward -> semiotic_logits;
forward -> audio_proj;
forward -> fusion;
forward -> punct_classifier;
forward -> capit_classifier;
forward -> make_pad_mask;
forward -> prompt_embeddings;
forward -> first;
forward -> fused_bias_gelu;
forward -> second;
forward -> get_inference_table;
forward -> clear_inference_table;
forward -> set_inference_table;
forward -> intent_mlp;
forward -> slot_mlp;
forward -> rfft;
forward -> fftconv_fwd;
forward -> fftconv_fn;
forward -> safari_fftconv_fn;
forward -> in_proj;
forward -> conv_fwd_fn;
forward -> out_proj;
forward -> short_filter;
forward -> modulation;
forward -> _allocate_memory;
forward -> query_key_value;
forward -> split_tensor_along_last_dim;
forward -> query;
forward -> _cast_if_autocast_enabled;
forward -> flash_attn_with_kvcache;
forward -> _transpose_last_dim;
forward -> key_value;
forward -> lora_dense_adapter;
forward -> lora_kqv_adapter;
forward -> lora_q_adapter;
forward -> lora_kv_adapter;
forward -> key_infused_adapter;
forward -> value_infused_adapter;
forward -> lower;
forward -> xpos;
forward -> torch_attention_with_prior;
forward -> bias_geglu;
forward -> bias_gelu;
forward -> build_relative_position;
forward -> word_embeddings;
forward -> embedding_dropout;
forward -> tokentype_embeddings;
forward -> get_position_embedding_on_this_context_parallel_rank;
forward -> encoder_relative_position_embedding;
forward -> ptuning_adapter;
forward -> _fast_layer_norm;
forward -> get_hiddens_mask;
forward -> decoder_embedding;
forward -> rpe;
forward -> encoder_embedding;
forward -> attn_mask_postprocess;
forward -> build_attention_mask_3d;
forward -> dense_h_to_4h;
forward -> dense_4h_to_h;
forward -> infused_adapter;
forward -> normalization;
forward -> lora_dense_h_to_4h_adapter;
forward -> dense_h_to_4h_2;
forward -> lora_dense_4h_to_h_adapter;
forward -> fused_bias_geglu;
forward -> activation_func;
forward -> router;
forward -> nonzero;
forward -> expert;
forward -> route_algo;
forward -> fp32_to_float16;
forward -> float16_to_fp32;
forward -> pre_decoder;
forward -> set_input_tensor;
forward -> post_decoder;
forward -> tokens_head;
forward -> vocab_parallel_cross_entropy;
forward -> _calculate_dec_att_mask;
forward -> decoder_relative_position_embedding;
forward -> decoder_cross_attention_relative_position_embedding;
forward -> apply_loss_transforms;
forward -> get_decoder_embeddings;
forward -> debug;
forward -> forward_sum_loss;
forward -> gather_from_tensor_model_parallel_region;
forward -> count_nonzero;
forward -> Exception;
forward -> isfinite;
forward -> _get_bias_droput_add_func;
forward -> bias_dropout_add_func;
forward -> post_inter_attention_layernorm;
forward -> post_attention_layernorm;
forward -> post_attention_normformer_norm;
forward -> inter_attention;
forward -> post_inter_attention_normformer_norm;
forward -> adapter_2;
forward -> adapter_1;
forward -> _get_layer;
forward -> get_pipeline_model_parallel_world_size;
forward -> get_pipeline_model_parallel_rank;
forward -> view_as;
forward -> div_;
forward -> mlp_head_adapter;
forward -> lora_linear_proj_adapter;
forward -> linear_fc1;
forward -> linear_fc2;
forward -> lora_adapter;
forward -> lora_fc2_adapter;
forward -> lora_moe_fc1_adapter;
forward -> bias_geglu_impl;
forward -> bias_swiglu_impl;
forward -> lora_moe_fc2_adapter;
forward -> cumsum;
forward -> gate_adapter;
forward -> up_adapter;
forward -> q_adapter;
forward -> k_adapter;
forward -> v_adapter;
forward -> inner_forward;
forward -> flat_square;
forward -> mm_projector;
forward -> dequantize;
forward -> layer_norm_fn;
forward -> Version;
forward -> insert;
forward -> width_mult;
forward -> _compute_relative_position_bucket;
forward -> _compute_relative_position_bias;
forward -> fixed_pos_embedding;
forward -> _build_pos_enc;
forward -> utterance_proj;
forward -> layer1;
forward -> _get_intents;
forward -> _get_requested_slots;
forward -> _get_categorical_slot_goals;
forward -> _get_noncategorical_slot_goals;
forward -> dropout1;
forward -> dropout2;
forward -> perception;
forward -> inject_perception_input;
forward -> _get_llm_input_for_context_parallel;
forward -> _shift_labels_by_emb_len;
forward -> llm;
forward -> audio_head;
forward -> speech_generation;
forward -> reset_input_and_kv_cache;
forward -> final_proj;
forward -> all_logits_to_each_codebooks_logits;
forward -> input_proj;
forward -> embed_audio_tokens;
forward -> t5_decoder;
forward -> ctc_loss;
forward -> mel_feature;
forward -> l1_loss_fn;
forward -> l2_loss_fn;
forward -> _compute_spectrogram;
forward -> get_mask_from_lengths;
forward -> mask_from_lens;
forward -> compute_flow_loss;
forward -> compute_regression_loss;
forward -> attn_ctc_loss;
forward -> l1_loss;
forward -> spectral_convergence_loss;
forward -> log_stft_magnitude_loss;
forward -> floor;
forward -> f;
forward -> binary_cross_entropy_with_logits;
forward -> alignment_encoder;
forward -> embed;
forward -> encode_audio;
forward -> decode_audio;
forward -> AudioSignal;
forward -> EncodedRepresentation;
forward -> fastpitch;
forward -> TokenIndex;
forward -> TokenDurationType;
forward -> RegressionValuesType;
forward -> Index;
forward -> MelSpectrogramType;
forward -> ProbsType;
forward -> generator;
forward -> duration_predictor;
forward -> pitch_predictor;
forward -> regulate_len;
forward -> run_aligner;
forward -> lm_embeddings;
forward -> self_attention_module;
forward -> pitch_emb;
forward -> average_features;
forward -> TokenLogDurationType;
forward -> LogprobsType;
forward -> forward_with_custom_noise;
forward -> BoolType;
forward -> preprocessor_disentangler;
forward -> sv_linear;
forward -> content_linear;
forward -> postnet;
forward -> audio_to_melspec_precessor;
forward -> text_embedding;
forward -> infer;
forward -> IntType;
forward -> waveglow;
forward -> get_embeddings_and_combine;
forward -> query_proj;
forward -> key_proj;
forward -> dist_fn;
forward -> _apply_mask;
forward -> cond_input;
forward -> projection_fn;
forward -> bottleneck_layer;
forward -> feat_pred_fn;
forward -> ssl_model;
forward -> avg_pool;
forward -> se;
forward -> layer2;
forward -> layer3;
forward -> layer4;
forward -> torch_spec;
forward -> instancenorm;
forward -> _get_extra_padding_for_conv1d;
forward -> _pad1d;
forward -> conv_post;
forward -> compute_stft;
forward -> disc;
forward -> inputs_to_codes;
forward -> fsq_group;
forward -> input_activation;
forward -> input_conv;
forward -> skip_activation;
forward -> skip_conv;
forward -> res_block;
forward -> pre_conv;
forward -> post_activation;
forward -> post_conv;
forward -> down_sample_conv;
forward -> out_activation;
forward -> up_sample_conv;
forward -> mel_processor;
forward -> is_tracing;
forward -> lstm_nocast;
forward -> bilstm;
forward -> triu;
forward -> diag;
forward -> inverse;
forward -> logdet;
forward -> last_layer;
forward -> end;
forward -> non_linearity;
forward -> param_predictor;
forward -> denormalize;
forward -> spline_fn;
forward -> inv_spline_fn;
forward -> get_scaling_and_logs;
forward -> affine_param_predictor;
forward -> normal;
forward -> pre_activation;
forward -> res_conv1;
forward -> res_conv2;
forward -> _init_codes;
forward -> _quantize;
forward -> _dequantize;
forward -> _mask_3d;
forward -> _expire_codes;
forward -> _update_codes;
forward -> codebook;
forward -> commit_loss_fn;
forward -> rvq_group;
forward -> get_speaker_embedding;
forward -> log_to_duration;
forward -> word_emb;
forward -> aligner;
forward -> binarize_attention_parallel;
forward -> energy_emb;
forward -> energy_predictor;
forward -> c1;
forward -> c2;
forward -> c;
forward -> conv_pre;
forward -> upsample_layer;
forward -> resblock;
forward -> d;
forward -> first_mix_layer;
forward -> drop_1;
forward -> second_mix_layer;
forward -> drop_2;
forward -> time_mix;
forward -> channel_mix;
forward -> to_embed;
forward -> text_pos_emb;
forward -> lm_pos_emb;
forward -> value_proj;
forward -> affine_tfn;
forward -> invtbl_conv;
forward -> encode_speaker;
forward -> encode_text;
forward -> unvoiced_bias_module;
forward -> preprocess_context;
forward -> dur_pred_layer;
forward -> f0_pred_module;
forward -> energy_pred_module;
forward -> binarize_attention;
forward -> unfold;
forward -> flow_step;
forward -> v_pred_module;
forward -> get_first_order_features;
forward -> apply_voice_mask_to_text;
forward -> filter2d;
forward -> to_style;
forward -> _get_same_padding;
forward -> conv2d;
forward -> rsqrt;
forward -> to_style1;
forward -> to_style2;
forward -> to_rgb;
forward -> to_noise1;
forward -> to_noise2;
forward -> conv_res;
forward -> initial_conv;
forward -> add_scaled_condition;
forward -> final_conv;
forward -> to_logit;
forward -> join;
forward -> masked_instance_norm;
forward -> _conv_forward;
forward -> mul;
forward -> location_conv;
forward -> location_dense;
forward -> get_alignment_energies;
forward -> Variable;
forward -> fill_;
forward -> Conv1d;
forward -> cond_layer;
forward -> fused_add_tanh_sigmoid_multiply;
forward -> cond_weight;
forward -> cond_bias;
forward -> concat_proj;
forward -> add_proj;
forward -> mha;
forward -> calculate_post_conv_lengths;
forward -> lengths_to_masks;
forward -> reference_encoder;
forward -> style_attention;
forward -> table;
forward -> lookup_module;
forward -> gst_module;
forward -> train_forward;
forward -> dec_attn;
forward -> pos_ff;
forward -> drop;
forward -> o_net;
forward -> attn_naive;
forward -> norm_xattn_query;
forward -> norm_self;
forward -> norm_pos_ff;
forward -> norm_xattn_memory;
forward -> _get_layer_inputs;
forward -> dropout_out;
forward -> kernel_conv;
forward -> bias_conv;
forward -> residual_conv;
forward -> convt_pre;
forward -> kernel_predictor;
forward -> location_variable_convolution;
forward -> randn;
forward -> spectrogram;
forward -> relu_drop;
forward -> IntTensor;
forward -> clamp_min;
forward -> flip;
forward -> enc;
forward -> pre;
forward -> post;
forward -> convs;
forward -> piecewise_rational_quadratic_transform;
forward -> post_pre;
forward -> post_convs;
forward -> log_flow;
forward -> cond;
forward -> post_proj;
forward -> flow;
forward -> logsigmoid;
forward -> conv_1;
forward -> norm_1;
forward -> conv_2;
forward -> norm_2;
forward -> enc_p;
forward -> enc_q;
forward -> rand_slice_segments;
forward -> dec;
forward -> dp;
forward -> emb_g;
forward -> maximum_path;
forward -> conv_q;
forward -> conv_k;
forward -> conv_v;
forward -> conv_o;
forward -> padding;
forward -> norm_dist_to_audio;
forward -> audio_to_normal_dist;
forward -> floor_;
forward -> mul_;
forward -> drop_path;
forward -> post_mlp_layerscale;
forward -> post_attention_layerscale;
forward -> locals;
forward -> drop_patch;
forward -> preprocess_layernorm;
forward -> interpolate_pos_encoding;
forward -> vision_model;
forward -> text_model;
forward -> _preprocess_data;
forward -> _process_sequence_parallel;
forward -> vision_projection;
forward -> mm_soft_embed_norm;
forward -> _process_embedding_token_parallel;
forward -> masked_scatter;
forward -> token_to_id;
forward -> pixel_shuffle_op;
forward -> pixel_shuffle;
forward -> _encode;
forward -> pack_image_features;
forward -> compute_xattn_caches_masks;
forward -> get_partially_trainable_embedding;
forward -> finfo;
forward -> xattn_layer;
forward -> group_prefetch_offload_commit_async;
forward -> get_query_tensor;
forward -> _unfold;
forward -> pre_tile_pos_embed;
forward -> apply_class_embedding;
forward -> apply_positional_embedding;
forward -> ln_pre;
forward -> build_encoder_attention_mask;
forward -> ln_post;
forward -> post_tile_pos_embed;
forward -> global_transformer;
forward -> get_rope_index;
forward -> outer;
forward -> rot_pos_emb;
forward -> get_packed_seq_params;
forward -> extend;
forward -> _gather_var;
forward -> run;
forward -> warn;
forward -> old_forward;
forward -> _inputs_to_dict;
forward -> _load_engine;
forward -> empty_cache;
forward -> Stream;
forward -> set_inputs;
forward -> allocate_buffers;
forward -> wait_stream;
forward -> _build_and_save;
forward -> unroll_input;
forward -> current_stream;
forward -> parse_groups;
forward -> _get_prompt_embedding_table;
forward -> generate;
forward -> generate_streaming;
forward -> is_initialized;
forward -> mpi_world_size;
forward -> load_test_data;
forward -> load_test_media;
forward -> _add_request_to_engine;
forward -> _forward_streaming;
forward -> _forward_regular;
forward -> SamplingParams;
forward -> LoRARequest;
forward -> connector;
forward -> submit;
forward -> result;
forward -> transform_event;
forward -> event;
forward -> step;
forward -> wrapped_forward_step;
forward -> _loss_reduction;
forward -> masked_token_loss;
forward -> model_forward;
forward -> cast_all;
forward -> l1;
forward -> get_dtype_device;
forward -> linear3;
forward -> relu2;
forward -> linear4;
forward -> callable;
forward -> w;
forward -> CategoricalValuesType;
forward -> run_only_on;
forward -> uniform;
from_asr_config -> ASRModelTypes;
from_asr_config -> DictConfig;
from_asr_config -> deepcopy;
from_asr_config -> cls;
from_asr_config -> dict;
from_asr_config -> open_dict;
from_asr_config -> pop;
validate -> entrypoint;
validate -> _setup;
validate -> validate;
validate -> isinstance;
close -> close;
lower -> lower;
text_to_ids -> text_to_ids;
text_to_ids -> list;
text_to_ids -> encode;
text_to_ids -> _map_canary1_to_canary2_lang;
text_to_ids -> endswith;
text_to_ids -> _text_to_ids_maybe_with_timestamps;
text_to_ids -> _tokenize_special_prompt;
text_to_ids -> len;
text_to_ids -> text_to_tokens;
text_to_ids -> tokens_to_ids;
text_to_ids -> isinstance;
text_to_ids -> _text_to_ids;
text_to_ids -> apply_chat_template;
text_to_ids -> ValueError;
text_to_ids -> type;
text_to_ids -> tokenizer;
text_to_ids -> strip;
text_to_ids -> map;
text_to_ids -> max;
text_to_ids -> ord;
score_with_sctk -> join;
score_with_sctk -> exists;
score_with_sctk -> check_output;
score_with_sctk -> FileNotFoundError;
score_with_sctk -> strerror;
score_with_sctk -> open;
score_with_sctk -> run;
score_with_sctk -> basename;
get_utt_info -> open;
get_utt_info -> loads;
get_utt_info -> append;
cuda -> to;
cuda -> cuda;
cuda -> super;
update_model_config -> is_dataclass;
update_model_config -> _update_subconfig;
update_model_config -> _add_subconfig_keys;
update_model_config -> merge;
update_model_config -> error;
update_model_config -> exit;
update_model_config -> ValueError;
update_model_config -> isinstance;
update_model_config -> create;
update_model_config -> structured;
update_model_config -> open_dict;
update_model_config -> pop;
set_optim -> lower;
set_optim -> WrappedOptimConfig;
set_optim -> replace;
set_optim -> WrappedSchedConfig;
set_optim -> vars;
build -> build;
build -> super;
build -> int;
build -> isinstance;
build -> BlendedMegatronDatasetBuilder;
build -> print;
build -> Profile;
build -> network_from_onnx_path;
build -> engine_from_network;
build -> save_engine;
build -> items;
build -> ModifyNetworkOutputs;
build -> add;
build -> CreateConfig;
build -> len;
build -> _finalize_cfg;
build -> init_model_parallel_from_nemo;
build -> build_tokenizer;
build -> barrier;
build -> Path;
build -> load_distributed;
build -> mpi_rank;
build -> get_rank;
build -> join;
build -> torch_dtype_from_precision;
build -> gather_and_reshard_model;
build -> get_transformer_config;
build -> getattr;
build -> get_nemo_to_trtllm_conversion_dict;
build -> TRTLLMHelper;
build -> get_input_dtype;
build -> get_trtllm_pretrained_config_and_model_weights;
build -> build_and_save_engine;
build -> model_to_trtllm_ckpt;
build -> open;
build -> dump;
build -> Mapping;
build -> to_dict;
build -> get;
parse_arguments -> ArgumentParser;
parse_arguments -> add_argument;
parse_arguments -> parse_args;
assert_args -> ValueError;
assert_args -> int;
export_model_if_required -> export;
export_model_if_required -> save;
export -> isinstance;
export -> is_global_rank_zero;
export -> save_checkpoint;
export -> barrier;
export -> _save_tokenizer;
export -> info;
export -> io_dump;
export -> exists;
export -> unwrap_for_modelopt_operations;
export -> ckpt_to_context_subdir;
export -> inference_mode;
export -> remove_hook_from_module;
export -> export_tensorrt_llm_checkpoint;
export -> _validate_quantized_checkpoint;
export -> from_trainer;
export -> export_hf_checkpoint;
export -> load_context;
export -> exporter;
export -> Path;
export -> TemporaryDirectory;
export -> save_pretrained;
export -> export_mcore_gpt_to_hf;
export -> _get_decoder_type;
export -> ckpt_to_weights_subdir;
export -> str;
export -> list_export_subnets;
export -> get_export_subnet;
export -> augment_filename;
export -> _export;
export -> append;
export -> format;
export -> _export_to_onnx;
export -> _load_runtime;
export -> prepare_directory_for_export;
export -> is_rank;
export -> warn;
export -> is_qnemo_checkpoint;
export -> join;
export -> cleanup;
export -> _export_to_nim_format;
export -> mpi_world_size;
export -> mpi_barrier;
export -> _load;
export -> isdir;
export -> qnemo_to_tensorrt_llm;
export -> load_nemo_model;
export -> copy;
export -> unpack_tarball;
export -> warning;
export -> get_nmt_tokenizer;
export -> get_tokenizer;
export -> get_model_type;
export -> ValueError;
export -> get_weights_dtype;
export -> get;
export -> determine_quantization_settings;
export -> get_transformer_config;
export -> getattr;
export -> TRTLLMHelper;
export -> ExportConfig;
export -> get_trtllm_pretrained_config_and_model_weights;
export -> zip;
export -> model_to_trtllm_ckpt;
export -> build_and_save_engine;
export -> glob;
export -> items;
export -> mkdir;
export -> build_mllama_engine;
export -> build_trtllm_engine;
export -> listdir;
export -> build_perception_engine;
export -> build_visual_engine;
export -> len;
export -> Exception;
export -> extract_lora_ckpt;
export -> rmtree;
export -> remove;
export -> DeviceConfig;
export -> NemoModelConfig;
export -> ParallelConfig;
export -> CacheConfig;
export -> SchedulerConfig;
export -> LoadConfig;
export -> _prepare_lora_checkpoints;
export -> LLMEngine;
export -> convert_and_store_nemo_weights;
export -> initialize_ray_cluster;
export -> open;
export -> dump;
export -> getmtime;
export -> get_sliding_window;
export -> VllmConfig;
export -> to_dict;
export -> ObservabilityConfig;
export -> LLM;
export -> torch_dtype_from_precision;
export -> _sample_output;
export -> unwrap_model;
export -> temporary_directory;
export -> nullcontext;
export -> get_rank;
export -> save_artifacts;
export -> makedirs;
export -> dirname;
export -> add;
export -> fn;
export -> load;
export -> create_trainer;
export -> restore_from;
export -> hf_tokenizer;
export -> eval;
export -> tuple;
export -> export;
export -> cuda;
export -> MegatronTrainerBuilder;
export -> command;
export -> argument;
export -> option;
export -> NeMoMultimodalConversationTarWriter;
export -> NeMoMultimodalConversationJsonlAdapter;
export -> shuffle;
export -> write;
export -> CutSet;
export -> Random;
resolve_audio_filepaths -> info;
resolve_audio_filepaths -> list;
resolve_audio_filepaths -> glob;
resolve_audio_filepaths -> open;
resolve_audio_filepaths -> join;
resolve_audio_filepaths -> loads;
resolve_audio_filepaths -> append;
resolve_audio_filepaths -> len;
_setup_transcribe_dataloader -> _setup_dataloader_from_config;
_setup_transcribe_dataloader -> join;
_setup_transcribe_dataloader -> min;
_setup_transcribe_dataloader -> get;
_setup_transcribe_dataloader -> len;
_setup_transcribe_dataloader -> DictConfig;
_setup_transcribe_dataloader -> cpu_count;
_setup_transcribe_dataloader -> to_container;
_setup_transcribe_dataloader -> DummyDataset;
_setup_transcribe_dataloader -> DataLoader;
_setup_transcribe_dataloader -> view;
_setup_transcribe_dataloader -> tensor;
_setup_transcribe_dataloader -> float;
decode_hypothesis -> range;
decode_hypothesis -> len;
decode_hypothesis -> enumerate;
decode_hypothesis -> tolist;
decode_hypothesis -> decode_tokens_to_str;
decode_hypothesis -> sub;
decode_hypothesis -> type;
decode_hypothesis -> append;
decode_hypothesis -> numpy;
decode_hypothesis -> decode_ids_to_tokens;
decode_hypothesis -> decode_hypothesis;
decode_hypothesis -> isinstance;
decode_hypothesis -> super;
decode_hypothesis -> warning;
decode_hypothesis -> decode_tokens_to_lang;
decode_hypothesis -> decode_ids_to_langs;
decode_hypothesis -> deepcopy;
compute_amax -> named_modules;
compute_amax -> isinstance;
compute_amax -> cuda;
compute_amax -> print;
compute_amax -> load_calib_amax;
compute_amax -> int;
compute_amax -> min;
compute_amax -> range;
compute_amax -> vstack;
save_to -> TemporaryDirectory;
save_to -> join;
save_to -> to_config_file;
save_to -> save_to;
save_to -> _make_nemo_file_from_folder;
save_to -> __make_nemo_file_from_folder;
save_to -> get;
save_to -> open_dict;
save_to -> super;
save_to -> AppState;
save_to -> dirname;
save_to -> is_initialized;
save_to -> hasattr;
save_to -> ckpt_to_dir;
save_to -> sharded_state_dict;
save_to -> from_config;
save_to -> save_checkpoint;
save_to -> barrier;
save_to -> is_global_rank_zero;
save_to -> setup_environment;
save_to -> isinstance;
save_to -> save_sharded_modelopt_state;
save_to -> _save_state_dict_to_disk;
save_to -> launch;
save_to -> get_model_module_list;
save_to -> state_dict;
save_to -> move;
save_to -> _handle_artifacts;
save_to -> _update_artifact_paths;
save_to -> listdir;
save_to -> str;
save_to -> range;
save_to -> product;
save_to -> makedirs;
save_to -> NotImplementedError;
save_to -> is_multistorageclient_url;
save_to -> resolve;
save_to -> maybe_make_save_dir;
save_to -> exists;
save_to -> mkdir;
save_to -> expanduser;
save_to -> type;
save_to -> ValueError;
save_to -> Path;
save_to -> _update_subconfigs;
save_to -> has_native_or_submodules_artifacts;
save_to -> replace;
asr_model -> fixture;
asr_model -> DictConfig;
asr_model -> EncDecCTCModel;
asr_model -> EncDecCTCModelBPE;
asr_model -> join;
asr_model -> EncDecMultiTaskModel;
asr_model -> configure_optimizers;
asr_model -> EncDecRNNTModel;
asr_model -> dict;
asr_model -> ListConfig;
asr_model -> EncDecRNNTBPEModel;
initialize -> info;
initialize -> is_available;
initialize -> open;
initialize -> load;
initialize -> items;
initialize -> ValueError;
initialize -> startswith;
initialize -> from_pretrained;
initialize -> restore_from;
initialize -> cuda;
evaluate -> test_dataloader;
evaluate -> word_error_rate;
evaluate -> range;
evaluate -> autocast;
evaluate -> asr_model;
evaluate -> ctc_decoder_predictions_tensor;
evaluate -> numpy;
evaluate -> join;
evaluate -> append;
evaluate -> cuda;
evaluate -> detach;
evaluate -> cpu;
evaluate -> Stream;
evaluate -> build_trt_engine;
evaluate -> len;
evaluate -> open;
evaluate -> Runtime;
evaluate -> deserialize_cuda_engine;
evaluate -> create_execution_context;
evaluate -> get_profile_shape;
evaluate -> print;
evaluate -> mem_alloc;
evaluate -> read;
evaluate -> format;
evaluate -> volume;
evaluate -> preprocessor;
evaluate -> trt_inference;
evaluate -> enumerate;
evaluate -> concat_perm_word_error_rate;
evaluate -> zip;
evaluate -> get_uniqname_from_filepath;
evaluate -> convert_ctm_to_text;
evaluate -> ValueError;
evaluate -> convert_word_dict_seq_to_text;
evaluate -> entrypoint;
evaluate -> EvaluationConfig;
evaluate -> split;
evaluate -> wait_for_fastapi_server;
evaluate -> evaluate_accuracy;
evaluate -> model_dump;
evaluate -> info;
evaluate -> _legacy_evaluate;
evaluate -> find_framework;
evaluate -> import_module;
evaluate -> RuntimeError;
evaluate -> dump;
evaluate -> MisconfigurationError;
evaluate -> ImportError;
evaluate -> get_dataset_as_dict;
evaluate -> get_metrics;
evaluate -> load;
evaluate -> close;
evaluate -> sorted;
evaluate -> items;
evaluate -> get_predictions;
evaluate -> evaluate_predictions;
evaluate -> int;
evaluate -> tqdm;
evaluate -> ceil;
evaluate -> perf_counter;
evaluate -> _infer;
evaluate -> extend;
evaluate -> compute_sent_accuracy;
evaluate -> compute_class_accuracy;
evaluate -> average;
evaluate -> isinstance;
evaluate -> is_same;
evaluate -> get_formatted_string;
evaluate -> write;
evaluate -> tokenize;
evaluate -> _get_predictions;
evaluate -> NotImplementedError;
export_onnx -> endswith;
export_onnx -> info;
export_onnx -> export;
export_onnx -> replace;
pprint -> join;
enable -> register_exact_value;
enable -> register_import_alias;
enable -> register_py_val_to_cst_converter;
enable -> register_immutable;
enable -> split;
enable -> register_constant;
enable -> register_function_with_immutable_return_value;
enable -> isinstance;
enable -> _original_serialize;
enable -> _pyref;
enable -> to_config;
enable -> str;
ctc_decoder_predictions_tensor -> isinstance;
ctc_decoder_predictions_tensor -> move_dimension_to_the_front;
ctc_decoder_predictions_tensor -> hasattr;
ctc_decoder_predictions_tensor -> info;
ctc_decoder_predictions_tensor -> inference_mode;
ctc_decoder_predictions_tensor -> decoding;
ctc_decoder_predictions_tensor -> decode_hypothesis;
ctc_decoder_predictions_tensor -> Hypothesis;
ctc_decoder_predictions_tensor -> append;
ctc_decoder_predictions_tensor -> get;
ctc_decoder_predictions_tensor -> range;
ctc_decoder_predictions_tensor -> compute_confidence;
ctc_decoder_predictions_tensor -> len;
ctc_decoder_predictions_tensor -> compute_ctc_timestamps;
get_min_max_input_shape -> test_dataloader;
get_min_max_input_shape -> preprocessor;
get_min_max_input_shape -> cuda;
get_min_max_input_shape -> numpy;
get_min_max_input_shape -> cpu;
build_trt_engine -> format;
build_trt_engine -> exists;
build_trt_engine -> get_min_max_input_shape;
build_trt_engine -> Builder;
build_trt_engine -> int;
build_trt_engine -> create_network;
build_trt_engine -> OnnxParser;
build_trt_engine -> create_builder_config;
build_trt_engine -> parse_from_file;
build_trt_engine -> create_optimization_profile;
build_trt_engine -> set_shape;
build_trt_engine -> add_optimization_profile;
build_trt_engine -> build_engine;
build_trt_engine -> serialize;
build_trt_engine -> set_flag;
build_trt_engine -> open;
build_trt_engine -> write;
build_trt_engine -> log;
build_trt_engine -> rmtree;
build_trt_engine -> max;
build_trt_engine -> get_input;
build_trt_engine -> isinstance;
build_trt_engine -> time;
build_trt_engine -> build_serialized_network;
build_trt_engine -> save_config;
build_trt_engine -> dump;
build_trt_engine -> range;
build_trt_engine -> RuntimeError;
build_trt_engine -> split;
build_trt_engine -> parse;
build_trt_engine -> read;
build_trt_engine -> abspath;
build_trt_engine -> len;
build_trt_engine -> ValueError;
build_trt_engine -> str;
build_trt_engine -> get_error;
build_engine -> print;
build_engine -> Profile;
build_engine -> engine_from_network;
build_engine -> save_engine;
build_engine -> items;
build_engine -> network_from_onnx_path;
build_engine -> add;
build_engine -> CreateConfig;
build_engine -> len;
serialize -> append;
trt_inference -> print;
trt_inference -> set_binding_shape;
trt_inference -> pagelocked_empty;
trt_inference -> register_host_memory;
trt_inference -> memcpy_htod_async;
trt_inference -> execute_async_v2;
trt_inference -> memcpy_dtoh_async;
trt_inference -> synchronize;
trt_inference -> argmax;
trt_inference -> format;
trt_inference -> tuple;
trt_inference -> ascontiguousarray;
trt_inference -> get_binding_shape;
trt_inference -> ravel;
trt_inference -> tensor;
trt_inference -> int;
trt_inference -> numpy;
trt_inference -> cpu;
frame_vad_infer_load_manifest -> set;
frame_vad_infer_load_manifest -> as_posix;
frame_vad_infer_load_manifest -> open;
frame_vad_infer_load_manifest -> readlines;
frame_vad_infer_load_manifest -> absolute;
frame_vad_infer_load_manifest -> loads;
frame_vad_infer_load_manifest -> get_full_path;
frame_vad_infer_load_manifest -> str;
frame_vad_infer_load_manifest -> append;
frame_vad_infer_load_manifest -> strip;
frame_vad_infer_load_manifest -> Path;
frame_vad_infer_load_manifest -> ValueError;
frame_vad_infer_load_manifest -> add;
frame_vad_infer_load_manifest -> get;
frame_vad_infer_load_manifest -> load_speech_segments_from_rttm;
frame_vad_infer_load_manifest -> get_frame_labels;
frame_vad_infer_load_manifest -> float;
frame_vad_infer_load_manifest -> split;
debug -> isEnabledFor;
debug -> _log;
debug -> _logged_once;
prepare_manifest -> exists;
prepare_manifest -> type;
prepare_manifest -> info;
prepare_manifest -> remove;
prepare_manifest -> open;
prepare_manifest -> join;
prepare_manifest -> readlines;
prepare_manifest -> ValueError;
prepare_manifest -> get;
prepare_manifest -> Pool;
prepare_manifest -> zip;
prepare_manifest -> list;
prepare_manifest -> write_vad_infer_manifest;
prepare_manifest -> append;
prepare_manifest -> Path;
prepare_manifest -> repeat;
prepare_manifest -> tqdm;
prepare_manifest -> dump;
prepare_manifest -> write;
prepare_manifest -> flush;
prepare_manifest -> loads;
prepare_manifest -> imap;
prepare_manifest -> strip;
prepare_manifest -> len;
frame_vad_eval_detection_error -> DetectionErrorRate;
frame_vad_eval_detection_error -> list;
frame_vad_eval_detection_error -> tqdm;
frame_vad_eval_detection_error -> roc_auc_score;
frame_vad_eval_detection_error -> report;
frame_vad_eval_detection_error -> glob;
frame_vad_eval_detection_error -> align_labels_to_frames;
frame_vad_eval_detection_error -> extend;
frame_vad_eval_detection_error -> frame_vad_construct_pyannote_object_per_file;
frame_vad_eval_detection_error -> metric;
frame_vad_eval_detection_error -> len;
frame_vad_eval_detection_error -> open;
frame_vad_eval_detection_error -> readlines;
frame_vad_eval_detection_error -> Path;
frame_vad_eval_detection_error -> strip;
frame_vad_eval_detection_error -> append;
frame_vad_eval_detection_error -> float;
write_rttm2manifest -> open;
write_rttm2manifest -> read_rttm_lines;
write_rttm2manifest -> get_offset_and_duration;
write_rttm2manifest -> merge_float_intervals;
write_rttm2manifest -> get_vad_out_from_rttm_line;
write_rttm2manifest -> append;
write_rttm2manifest -> len;
write_rttm2manifest -> warning;
write_rttm2manifest -> get_sub_range_list;
write_rttm2manifest -> write_overlap_segments;
import_class_by_path -> lru_cache;
import_class_by_path -> split;
import_class_by_path -> join;
import_class_by_path -> __import__;
import_class_by_path -> getattr;
build_special_tokenizer -> compile;
build_special_tokenizer -> list;
build_special_tokenizer -> Path;
build_special_tokenizer -> mkdir;
build_special_tokenizer -> join;
build_special_tokenizer -> write_text;
build_special_tokenizer -> create_spt_model;
build_special_tokenizer -> SentencePieceTokenizer;
build_special_tokenizer -> info;
build_special_tokenizer -> fromkeys;
build_special_tokenizer -> str;
build_special_tokenizer -> exists;
build_special_tokenizer -> remove;
build_special_tokenizer -> len;
build_special_tokenizer -> match;
load_ssl_encoder -> OrderedDict;
load_ssl_encoder -> items;
load_ssl_encoder -> load_state_dict;
load_ssl_encoder -> info;
load_ssl_encoder -> get;
load_ssl_encoder -> startswith;
load_ssl_encoder -> load;
load_ssl_encoder -> restore_from;
load_ssl_encoder -> state_dict;
load_ssl_encoder -> from_pretrained;
get_evaluation_dataloader -> get;
get_evaluation_dataloader -> get_audio_to_target_dataset;
get_evaluation_dataloader -> DataLoader;
get_evaluation_dataloader -> get_lhotse_dataloader_from_config;
get_evaluation_dataloader -> LhotseAudioToTargetDataset;
get_evaluation_dataloader -> min;
get_evaluation_dataloader -> cpu_count;
get_audio_to_target_dataset -> AudioToTargetDataset;
get_audio_to_target_dataset -> get;
get_lhotse_dataloader_from_config -> maybe_set_cuda_expandable_segments;
get_lhotse_dataloader_from_config -> get;
get_lhotse_dataloader_from_config -> isinstance;
get_lhotse_dataloader_from_config -> create;
get_lhotse_dataloader_from_config -> get_lhotse_dataloader_from_multi_config;
get_lhotse_dataloader_from_config -> get_lhotse_dataloader_from_single_config;
get_metrics -> dict;
get_metrics -> sorted;
get_metrics -> set;
get_metrics -> lower;
get_metrics -> AudioMetricWrapper;
get_metrics -> SignalDistortionRatio;
get_metrics -> ScaleInvariantSignalDistortionRatio;
get_metrics -> ShortTimeObjectiveIntelligibility;
get_metrics -> PerceptualEvaluationSpeechQuality;
get_metrics -> SquimMOSMetric;
get_metrics -> SquimObjectiveMetric;
get_metrics -> ValueError;
get_metrics -> values;
get_metrics -> word_error_rate;
get_metrics -> info;
get_metrics -> open;
get_metrics -> enumerate;
get_metrics -> zip;
get_metrics -> index;
get_metrics -> pop;
get_metrics -> extend;
get_metrics -> loads;
get_metrics -> append;
get_metrics -> items;
get_metrics -> min;
get_metrics -> len;
get_metrics -> defaultdict;
get_metrics -> issubset;
get_metrics -> debug;
get_metrics -> keys;
get_metrics -> format;
get_metrics -> error;
get_metrics -> get_active_intent_accuracy;
get_metrics -> get_slot_tagging_f1;
get_metrics -> get_requested_slots_f1;
get_metrics -> get_average_and_joint_goal_accuracy;
get_metrics -> update;
get_metrics -> round;
get_metrics -> split;
get_metrics -> float;
get_metrics -> mean;
get_metrics -> readlines;
get_metrics -> Parallel;
get_metrics -> write;
get_metrics -> delayed;
get_metrics -> tqdm;
get_metrics -> dumps;
metric -> _wer_;
metric -> distance;
metric -> len;
metric -> round;
metric -> float;
get_full_path -> isinstance;
get_full_path -> get_full_path;
get_full_path -> is_tarred_dataset;
get_full_path -> ValueError;
get_full_path -> warning;
get_full_path -> join;
get_full_path -> is_datastore_path;
get_full_path -> isfile;
get_full_path -> expanduser;
get_full_path -> len;
get_full_path -> isabs;
get_full_path -> dirname;
get_full_path -> abspath;
get_full_path -> get_datastore_object;
get_full_path -> type;
get_model_class -> ValueError;
is_relative_to -> relative_to;
process -> from_file;
process -> process_segment;
process -> load_feature_from_file;
process -> load_audio;
process -> process_audio;
process -> no_grad;
process -> min;
process -> next;
process -> eval;
process -> freeze;
process -> get_verbosity;
process -> set_verbosity;
process -> train;
process -> len;
process -> parameters;
process -> TemporaryDirectory;
process -> join;
process -> _setup_process_dataloader;
process -> tqdm;
process -> unfreeze;
process -> cpu_count;
process -> open;
process -> isdir;
process -> makedirs;
process -> forward;
process -> range;
process -> write;
process -> unsqueeze;
process -> size;
process -> numpy;
process -> append;
process -> get_duration;
process -> to;
process -> relpath;
process -> basename;
process -> dumps;
process -> dirname;
process -> cpu;
process -> info;
process -> ValueError;
process -> guard_fn;
process -> log;
process -> strip;
process -> duration;
process -> splitext;
process -> getsize;
process -> warning;
process -> exists;
process -> Transformer;
process -> rate;
process -> channels;
process -> build;
process -> lower;
process -> Path;
process -> str;
process -> load;
process -> isinstance;
process -> is_absolute;
process -> sub;
process -> float;
process -> int;
process -> format;
process -> round;
process -> time_to_string;
process -> group;
get_args -> ArgumentParser;
get_args -> add_argument;
get_args -> parse_args;
get_args -> getenv;
get_args -> join;
get_args -> dirname;
get_args -> isinstance;
get_args -> add_mutually_exclusive_group;
get_args -> error;
get_args -> setattr;
get_args -> getattr;
get_args -> expanduser;
get_args -> list_available_models;
get_args -> check_tar_file_prefix;
get_args -> check_labels_for_being_unique_before_building_label_ids;
get_args -> cpu_count;
get_args -> len;
get_args -> range;
get_args -> set;
get_args -> Path;
get_args -> float;
get_args -> str_to_bool;
get_args -> lower;
get_args -> UsageError;
get_args -> ArgumentTypeError;
get_args -> set_defaults;
get_args -> ValueError;
get_args -> get_quant_cfg_choices;
get_args -> isfile;
get_args -> add_argument_group;
get_args -> startswith;
get_args -> print;
get_args -> str;
llama3_145m -> factory;
llama3_145m -> Partial;
llama3_145m -> partial;
llama3_145m -> Config;
factory -> factory;
train_config -> AutoConfigurator;
train_config -> generate_configs;
train_config -> list;
train_config -> build;
train_config -> pretrain;
train_config -> get_results;
train_config -> print;
train_config -> partial;
train_config -> values;
train_config -> keys;
train_config -> ValueError;
generate_configs -> generic_base_config;
generate_configs -> generate_grid_search_configs;
generate_configs -> items;
generate_configs -> deepcopy;
generate_configs -> get;
generate_configs -> join;
generate_configs -> Partial;
pretrain -> entrypoint;
pretrain -> _load_model_from_path;
pretrain -> _validate_config;
pretrain -> train;
pretrain -> factory;
pretrain -> Partial;
pretrain -> Config;
pretrain -> multimodal_datamodule;
pretrain -> NeMoLogger;
pretrain -> int;
pretrain -> MegatronMixedPrecision;
pretrain -> get;
pretrain -> WandbLogger;
get_results -> abspath;
get_results -> find_tb_logs;
get_results -> zip;
get_results -> sort;
get_results -> print;
get_results -> enumerate;
get_results -> makedirs;
get_results -> DataFrame;
get_results -> to_csv;
get_results -> get_config;
get_results -> find_error;
get_results -> EventAccumulator;
get_results -> Reload;
get_results -> join;
get_results -> scandir;
get_results -> is_dir;
get_results -> append;
get_results -> Scalars;
get_results -> round;
get_results -> calculate_tflops;
get_results -> len;
get_results -> min;
get_results -> sum;
values -> values;
get_chat_template -> getattr;
make_squad_hf_dataset -> FirstRankPerNode;
make_squad_hf_dataset -> get_chat_template;
make_squad_hf_dataset -> isinstance;
make_squad_hf_dataset -> map;
make_squad_hf_dataset -> max;
make_squad_hf_dataset -> list;
make_squad_hf_dataset -> getattr;
make_squad_hf_dataset -> dict;
make_squad_hf_dataset -> apply_chat_template;
make_squad_hf_dataset -> HFDatasetDataModulePacked;
make_squad_hf_dataset -> HFDatasetDataModule;
make_squad_hf_dataset -> strip;
make_squad_hf_dataset -> insert;
make_squad_hf_dataset -> append;
make_squad_hf_dataset -> index;
make_squad_hf_dataset -> formatting_prompts_func_with_chat_template;
make_squad_hf_dataset -> pad_to_seq_length;
make_squad_hf_dataset -> len;
make_squad_hf_dataset -> items;
make_squad_hf_dataset -> fmt_fn_;
make_squad_hf_dataset -> next;
make_squad_hf_dataset -> tokenizer;
make_squad_hf_dataset -> iter;
make_squad_hf_dataset -> values;
make_squad_hf_dataset -> text_to_ids;
make_squad_hf_dataset -> format;
apply_chat_template -> tokenize_with_chat_template;
apply_chat_template -> NotImplementedError;
apply_chat_template -> apply_chat_template;
apply_chat_template -> render;
apply_chat_template -> Template;
apply_chat_template -> ValueError;
formatting_prompts_func_with_chat_template -> apply_chat_template;
formatting_prompts_func_with_chat_template -> isinstance;
formatting_prompts_func_with_chat_template -> dict;
formatting_prompts_func_with_chat_template -> index;
formatting_prompts_func_with_chat_template -> strip;
formatting_prompts_func_with_chat_template -> tokenizer;
formatting_prompts_func_with_chat_template -> len;
formatting_prompts_func_with_chat_template -> getattr;
pad_to_seq_length -> max;
pad_to_seq_length -> len;
pad_to_seq_length -> items;
pad_to_seq_length -> next;
pad_to_seq_length -> iter;
pad_to_seq_length -> values;
tokenizer -> AutoTokenizer;
tokenizer -> save_hf_tokenizer_assets;
tokenizer -> str;
tokenizer -> load_context;
tokenizer -> configure_tokenizer;
tokenizer -> get_nmt_tokenizer;
tokenizer -> from_pretrained;
tokenizer -> factory;
tokenizer -> tokenizer_recipe;
tokenizer -> Config;
tokenizer -> fixture;
tokenizer -> mktemp;
tokenizer -> write_text;
tokenizer -> create_spt_model;
tokenizer -> SentencePieceTokenizer;
tokenizer -> join;
tokenizer -> map;
tokenizer -> range;
tokenizer -> ord;
tokenizer -> Mock;
tokenizer -> load_jsonl;
tokenizer -> chr;
tokenizer -> MockTokenizer;
tokenizer -> disabled;
make_strategy -> SingleDeviceStrategy;
make_strategy -> DDPStrategy;
make_strategy -> make_checkpoint_io;
make_strategy -> print;
make_strategy -> FSDP2Strategy;
make_strategy -> NotImplementedError;
make_strategy -> CPUOffloadPolicy;
make_checkpoint_io -> HFCheckpointIO;
logger -> ModelCheckpoint;
logger -> NeMoLogger;
finetune -> entrypoint;
finetune -> _load_model_from_path;
finetune -> _validate_config;
finetune -> train;
calculate_valid_accumulate_grad_batches -> any;
calculate_valid_accumulate_grad_batches -> int;
calculate_valid_accumulate_grad_batches -> ValueError;
calculate_valid_accumulate_grad_batches -> is_integer;
te_adam_with_flat_lr -> Config;
te_adam_with_flat_lr -> Partial;
pytorch_adam_with_flat_lr -> Config;
pytorch_adam_with_flat_lr -> Partial;
formatting_prompts_func -> list;
formatting_prompts_func -> getattr;
formatting_prompts_func -> dict;
formatting_prompts_func -> strip;
formatting_prompts_func -> map;
formatting_prompts_func -> insert;
formatting_prompts_func -> append;
formatting_prompts_func -> len;
formatting_prompts_func -> isinstance;
formatting_prompts_func -> tokenizer;
formatting_prompts_func -> format;
deploy -> entrypoint;
deploy -> str;
deploy -> MegatronLLMDeployableNemo2;
deploy -> is_initialized;
deploy -> ValueError;
deploy -> unset_environment_variables;
deploy -> get_trtllm_deployable;
deploy -> info;
deploy -> stop;
deploy -> get_rank;
deploy -> DeployPyTriton;
deploy -> deploy;
deploy -> run;
deploy -> serve;
deploy -> generate_other_ranks;
deploy -> error;
deploy -> type;
deploy -> _init_nemo_model;
deploy -> TritonConfig;
deploy -> Triton;
deploy -> bind;
deploy -> print;
deploy -> ModelConfig;
query_llm -> str_list2numpy;
query_llm -> full;
query_llm -> ModelClient;
query_llm -> infer_batch;
query_llm -> keys;
query_llm -> decode;
query_llm -> astype;
query_llm -> int;
query_llm -> time;
query_llm -> encode;
query_llm -> len;
query_llm -> NemoQueryLLMPyTorch;
query_llm -> query_llm;
query_llm -> info;
query_llm -> NemoQueryLLMHF;
run_forward -> MegatronStrategy;
run_forward -> Trainer;
run_forward -> to_fabric;
run_forward -> load_context;
run_forward -> load_model;
run_forward -> eval;
run_forward -> randint;
run_forward -> expand_as;
run_forward -> no_grad;
run_forward -> model;
run_forward -> print;
run_forward -> MegatronMixedPrecision;
run_forward -> ckpt_to_context_subdir;
run_forward -> unsqueeze;
run_forward -> arange;
run_forward -> size;
to_fabric -> NotImplementedError;
to_fabric -> lower;
to_fabric -> type;
to_fabric -> hasattr;
to_fabric -> Fabric;
to_fabric -> isinstance;
to_fabric -> to_fabric;
to_fabric -> build;
load_context -> isinstance;
load_context -> Path;
load_context -> load;
load_model -> _set_model_restore_state;
load_model -> ptl_load_state;
load_model -> cls;
load_model -> named_parameters;
load_model -> named_buffers;
load_model -> len;
load_model -> RuntimeError;
load_model -> register_artifact;
load_model -> pop;
load_model -> print;
load_model -> keys;
load_model -> size;
load_model -> to;
load_model -> restore_from;
load_model -> EntityLinkingModel;
load_model -> _vocab_size_with_padding;
load_model -> CLIPModel;
load_model -> items;
load_model -> load_state_dict;
load_model -> get;
load_model -> ModelParallelConfig;
load_model -> isinstance;
load_model -> _load_nemo_checkpoint_state;
load_model -> eval;
load_model -> set_default_torch_dtype;
load_model -> _standardize_nemo2_naming;
load_model -> convert_weights;
load_model -> load_weights;
load_model -> device;
load_model -> _initialize_model;
load_model -> launch;
load_model -> Path;
load_model -> setup_module;
load_model -> load;
load_model -> load_context;
load_model -> ckpt_to_context_subdir;
load_model -> tuple;
load_model -> list;
load_model -> any;
load_model -> endswith;
load_model -> load_from_checkpoint;
load_model -> ValueError;
load_model -> isfile;
load_model -> info;
load_model -> from_pretrained;
model -> factory;
model -> Config;
model -> bert_model;
model -> bert_embedding_model;
model -> gemma2_model;
model -> model_recipe;
model -> model;
model -> tokenizer;
model -> nemotron_model;
model -> qwen2_model;
model -> qwen3_model;
model -> starcoder2_model;
model -> fixture;
model -> DictConfig;
model -> EncDecCTCModel;
model -> BertEmbeddingModel;
model -> configure_model;
model -> LlamaBidirectionalForSequenceClassification;
model -> DuplexS2SModel;
model -> is_available;
model -> resolve_pretrained_models;
model -> to;
model -> DuplexS2SSpeechDecoderModel;
model -> SALM;
ckpt_to_context_subdir -> ckpt_to_dir;
ckpt_to_context_subdir -> idempotent_path_append;
custom_llama3_8b -> pretrain_recipe;
pretrain_recipe -> factory;
pretrain_recipe -> Partial;
pretrain_recipe -> pretrain_performance_optimizations;
pretrain_recipe -> model;
pretrain_recipe -> trainer;
pretrain_recipe -> Config;
pretrain_recipe -> default_log;
pretrain_recipe -> distributed_fused_adam_with_cosine_annealing;
pretrain_recipe -> default_resume;
pretrain_recipe -> tensorboard_logger;
pretrain_recipe -> flux_mock_datamodule;
pretrain_recipe -> bert_trainer;
pretrain_recipe -> append;
pretrain_recipe -> gemma2_trainer;
pretrain_recipe -> gemma3_trainer;
pretrain_recipe -> pytorch_adam_with_cosine_annealing;
pretrain_recipe -> pretrain_recipe_creater;
pretrain_recipe -> NotImplementedError;
pretrain_recipe -> pretrain_recipe;
pretrain_recipe -> tokenizer;
pretrain_recipe -> nemotron_trainer;
pretrain_recipe -> performance_optimizations;
pretrain_recipe -> qwen2_trainer;
pretrain_recipe -> qwen3_trainer;
pretrain_recipe -> starcoder2_trainer;
pretrain_recipe -> starcoder_trainer;
pretrain_recipe -> bf16_mixed;
custom_llama3_70b -> pretrain_recipe;
local_executor_torchrun -> LocalExecutor;
slurm_executor -> SlurmExecutor;
slurm_executor -> RuntimeError;
slurm_executor -> extend;
slurm_executor -> SSHTunnel;
slurm_executor -> GitArchivePackager;
slurm_executor -> copy;
slurm_executor -> get_nemorun_home;
slurm_executor -> append;
slurm_executor -> len;
slurm_executor -> error;
slurm_executor -> exit;
slurm_executor -> update;
slurm_executor -> range;
slurm_executor -> join;
slurm_executor -> LocalTunnel;
my_slurm_executor -> slurm_executor;
trainer -> Config;
trainer -> bf16_mixed;
trainer -> lower;
trainer -> str;
trainer -> trainer;
trainer -> factory;
trainer -> nemotron_h_bf16_with_fp8_current_scaling_mixed;
trainer -> MegatronStrategy;
trainer -> Trainer;
trainer -> max;
trainer -> MegatronMixedPrecision;
trainer -> MagicMock;
bf16_mixed -> Config;
pretrain_performance_optimizations -> append;
pretrain_performance_optimizations -> Config;
pretrain_performance_optimizations -> extend;
pretrain_performance_optimizations -> hasattr;
default_log -> factory;
default_log -> Config;
distributed_fused_adam_with_cosine_annealing -> Config;
default_resume -> factory;
default_resume -> Config;
tensorboard_logger -> Config;
multi_dc_recipe -> pretrain_recipe;
__init__ -> info;
__init__ -> group_by_media;
__init__ -> __init__;
__init__ -> super;
__init__ -> get;
__init__ -> from_pretrained;
__init__ -> to;
__init__ -> from_config_dict;
__init__ -> split;
__init__ -> lcs;
__init__ -> get_spans;
__init__ -> enumerate;
__init__ -> len;
__init__ -> append;
__init__ -> ClassifyFst;
__init__ -> VerbalizeFinalFst;
__init__ -> TokenParser;
__init__ -> MosesProcessor;
__init__ -> makedirs;
__init__ -> join;
__init__ -> exists;
__init__ -> PunctuationFst;
__init__ -> closure;
__init__ -> optimize;
__init__ -> Far;
__init__ -> WordFst;
__init__ -> ElectronicFst;
__init__ -> add_weight;
__init__ -> insert;
__init__ -> generator_main;
__init__ -> compose;
__init__ -> VerbalizeFst;
__init__ -> delete;
__init__ -> basename;
__init__ -> WhiteListFst;
__init__ -> to_yaml;
__init__ -> get_instance;
__init__ -> ValueError;
__init__ -> glob;
__init__ -> upper;
__init__ -> DiarizationSpeechLabel;
__init__ -> int;
__init__ -> prepare_split_data;
__init__ -> EndtoEndDiarizationSpeechLabel;
__init__ -> round;
__init__ -> AudioSamples;
__init__ -> isinstance;
__init__ -> cache_datastore_manifests;
__init__ -> ASRSpeechLabel;
__init__ -> range;
__init__ -> debug;
__init__ -> format;
__init__ -> sorted;
__init__ -> count_occurence;
__init__ -> expand_sharded_filepaths;
__init__ -> DataPipeline;
__init__ -> SimpleShardList;
__init__ -> shuffle;
__init__ -> tarfile_to_samples;
__init__ -> rename;
__init__ -> to_tuple;
__init__ -> map;
__init__ -> WaveformFeaturizer;
__init__ -> _get_label_set;
__init__ -> _internal_generator;
__init__ -> ASRAudioText;
__init__ -> ASRManifestProcessor;
__init__ -> type;
__init__ -> make_parser;
__init__ -> hasattr;
__init__ -> text_to_ids;
__init__ -> TokenizerWrapper;
__init__ -> extend;
__init__ -> shard_manifests_if_needed;
__init__ -> _compute_len;
__init__ -> RandomState;
__init__ -> list;
__init__ -> reshape;
__init__ -> Pipeline;
__init__ -> time;
__init__ -> build;
__init__ -> DALIPytorchIterator;
__init__ -> DummyDataset;
__init__ -> ModuleNotFoundError;
__init__ -> ones;
__init__ -> tolist;
__init__ -> max;
__init__ -> nemo_asr;
__init__ -> nonsilent_region;
__init__ -> slice;
__init__ -> shapes;
__init__ -> pad;
__init__ -> set_outputs;
__init__ -> spectrogram;
__init__ -> to_decibels;
__init__ -> normalize;
__init__ -> window_fn;
__init__ -> ceil;
__init__ -> webdataset;
__init__ -> audio;
__init__ -> get_property;
__init__ -> RuntimeError;
__init__ -> gpu;
__init__ -> normal;
__init__ -> preemphasis_filter;
__init__ -> mel_filter_bank;
__init__ -> numpy;
__init__ -> log2;
__init__ -> finfo;
__init__ -> float;
__init__ -> mfcc;
__init__ -> log;
__init__ -> open;
__init__ -> DataAnnotator;
__init__ -> SpeechSampler;
__init__ -> read_manifest;
__init__ -> build_speaker_samples_map;
__init__ -> _check_args;
__init__ -> _init_speaker_permutations;
__init__ -> _init_chunk_count;
__init__ -> is_available;
__init__ -> device;
__init__ -> process_augmentations;
__init__ -> keys;
__init__ -> _check_args_rir;
__init__ -> ASRFeatureSequenceLabel;
__init__ -> ASRFeatureLabel;
__init__ -> ExternalFeatureLoader;
__init__ -> ASRFeatureText;
__init__ -> ASRFeatureManifestProcessor;
__init__ -> load_noise_manifest;
__init__ -> set;
__init__ -> asarray;
__init__ -> collect;
__init__ -> Path;
__init__ -> tqdm;
__init__ -> warning;
__init__ -> dict;
__init__ -> update;
__init__ -> _iterate_manifest;
__init__ -> deepcopy;
__init__ -> ProcessPoolExecutor;
__init__ -> NotImplementedError;
__init__ -> expanduser;
__init__ -> _asr_text_to_tokens;
__init__ -> _tts_text_to_tokens;
__init__ -> read;
__init__ -> HFTextProcessor;
__init__ -> concatenate_datasets;
__init__ -> AudioAugmentor;
__init__ -> open_dict;
__init__ -> load_dataset;
__init__ -> split_dataset_by_node;
__init__ -> tensor;
__init__ -> BCELoss;
__init__ -> K2Loss;
__init__ -> PartialGrad;
__init__ -> resolve_rnnt_loss;
__init__ -> Linear;
__init__ -> CTCLoss;
__init__ -> NLLLoss;
__init__ -> MLMLoss;
__init__ -> RNNTLoss;
__init__ -> rnnt_decoder_predictions_tensor;
__init__ -> ctc_decoder_predictions_tensor;
__init__ -> TypeError;
__init__ -> decode_predictions_tensor;
__init__ -> add_state;
__init__ -> convert_model_config_to_dict_config;
__init__ -> maybe_update_config_version;
__init__ -> _config_check;
__init__ -> _setup_tokenizer;
__init__ -> resolve;
__init__ -> prompt_cls;
__init__ -> apply;
__init__ -> MultiTaskDecoding;
__init__ -> GlobalAverageLossMetric;
__init__ -> WER;
__init__ -> BLEU;
__init__ -> setup_adapters;
__init__ -> Identity;
__init__ -> structured;
__init__ -> transformer_weights_init;
__init__ -> to_container;
__init__ -> _update_decoder_config;
__init__ -> _setup_preprocessor;
__init__ -> _setup_encoder;
__init__ -> _setup_decoder;
__init__ -> _setup_loss;
__init__ -> _setup_metrics;
__init__ -> _init_speaker_model;
__init__ -> _init_vad_model;
__init__ -> register_artifact;
__init__ -> ConfidenceConfig;
__init__ -> safe_joblib_load;
__init__ -> getattr;
__init__ -> import_class_by_path;
__init__ -> register_nemo_submodule;
__init__ -> endswith;
__init__ -> update_decoding_parameters;
__init__ -> change_decoding_strategy;
__init__ -> model_class;
__init__ -> restore_from;
__init__ -> str;
__init__ -> get_vocab;
__init__ -> CTCBPEDecoding;
__init__ -> ListConfig;
__init__ -> CTCDecoding;
__init__ -> setup_optimization_flags;
__init__ -> setup_interctc;
__init__ -> _check_config;
__init__ -> freeze;
__init__ -> pop;
__init__ -> ASRModelTypes;
__init__ -> from_asr_model;
__init__ -> _fuse_bn_in_conformer;
__init__ -> setup_optimization;
__init__ -> setup_training_data;
__init__ -> setup_multiple_validation_data;
__init__ -> setup_test_data;
__init__ -> NeMoBaseException;
__init__ -> FastPitchModel;
__init__ -> SpectrogramEnhancerModel;
__init__ -> get_asr_cls;
__init__ -> set_decoding_type_according_to_loss;
__init__ -> RNNTBPEDecoding;
__init__ -> create;
__init__ -> set_loss;
__init__ -> set_wer;
__init__ -> _init_model_specific;
__init__ -> _init_k2;
__init__ -> TopKClassificationAccuracy;
__init__ -> Accuracy;
__init__ -> instantiate;
__init__ -> set_struct;
__init__ -> sum;
__init__ -> save_hyperparameters;
__init__ -> MultiBinaryAccuracy;
__init__ -> _init_segmentation_info;
__init__ -> add_speaker_model_config;
__init__ -> ClusteringDiarizer;
__init__ -> _init_msdd_model;
__init__ -> transfer_diar_params_to_model_params;
__init__ -> ClusterEmbedding;
__init__ -> audio_rttm_map;
__init__ -> manual_seed;
__init__ -> reset;
__init__ -> eval;
__init__ -> mkdir;
__init__ -> extract_rnnt_loss_cfg;
__init__ -> RNNTDecoding;
__init__ -> setup_optim_normalization;
__init__ -> SmoothedNLLLoss;
__init__ -> SequenceGenerator;
__init__ -> seed;
__init__ -> _init_loss_weights;
__init__ -> _init_eval_metrics;
__init__ -> script;
__init__ -> permutations;
__init__ -> items;
__init__ -> ModuleDict;
__init__ -> Dropout;
__init__ -> set_access_cfg;
__init__ -> ConvFeatureMaksingWrapper;
__init__ -> get_nemo_transformer;
__init__ -> TokenClassifier;
__init__ -> BeamSearchSequenceGenerator;
__init__ -> SmoothedCrossEntropyLoss;
__init__ -> TransformerEncoder;
__init__ -> MatchboxNetVADModelConfig;
__init__ -> MatchboxNetModelConfig;
__init__ -> ConvASREncoderConfig;
__init__ -> ConvASRDecoderClassificationConfig;
__init__ -> SpectrogramAugmentationConfig;
__init__ -> encoder_cfg_func;
__init__ -> QuartzNetModelConfig;
__init__ -> set_dataset_normalize;
__init__ -> JasperModelConfig;
__init__ -> ConvASRDecoderConfig;
__init__ -> register_buffer;
__init__ -> featurizer_class;
__init__ -> MFCC;
__init__ -> error;
__init__ -> SpecCutout;
__init__ -> SpecAugment;
__init__ -> numba_cuda_is_supported;
__init__ -> SpecAugmentNumba;
__init__ -> Scorer;
__init__ -> _calc_context_sizes;
__init__ -> ModuleList;
__init__ -> set_max_audio_length;
__init__ -> setup_streaming_params;
__init__ -> compute_stochastic_depth_drop_probs;
__init__ -> sqrt;
__init__ -> SubsamplingReductionModule;
__init__ -> Parameter;
__init__ -> zeros_;
__init__ -> RelPositionalEncoding;
__init__ -> ConformerLayer;
__init__ -> StackingSubsampling;
__init__ -> ConvSubsampling;
__init__ -> Tensor;
__init__ -> LocalAttRelPositionalEncoding;
__init__ -> PositionalEncoding;
__init__ -> ReLU;
__init__ -> Sequential;
__init__ -> JasperBlock;
__init__ -> init_weights;
__init__ -> ParallelBlock;
__init__ -> set_accepted_adapter_types;
__init__ -> Conv1d;
__init__ -> BatchNorm1d;
__init__ -> ConvTranspose1d;
__init__ -> AdaptiveAvgPool1d;
__init__ -> AdaptiveMaxPool1d;
__init__ -> TDNNModule;
__init__ -> TDNNSEModule;
__init__ -> lower;
__init__ -> zip;
__init__ -> StatsPoolLayer;
__init__ -> affine_layer;
__init__ -> AttentivePoolLayer;
__init__ -> token_to_id;
__init__ -> _TokensWrapper;
__init__ -> load_words;
__init__ -> create_word_dict;
__init__ -> get_index;
__init__ -> KenLM;
__init__ -> Trie;
__init__ -> start;
__init__ -> smear;
__init__ -> LexiconDecoderOptions;
__init__ -> LexiconDecoder;
__init__ -> LexiconFreeDecoderOptions;
__init__ -> LexiconFreeDecoder;
__init__ -> score;
__init__ -> add_entry;
__init__ -> text_to_tokens;
__init__ -> print;
__init__ -> strip;
__init__ -> Decoder;
__init__ -> _joint_hat_net_modules;
__init__ -> LSTM;
__init__ -> Conv2d;
__init__ -> BatchNorm2d;
__init__ -> Softmax;
__init__ -> CosineSimilarity;
__init__ -> eye_;
__init__ -> ConvLayer;
__init__ -> _predict_modules;
__init__ -> _joint_net_modules;
__init__ -> rnn_module;
__init__ -> LayerNorm;
__init__ -> SqueezeformerLayer;
__init__ -> TimeReductionModule;
__init__ -> reset_parameters;
__init__ -> kaiming_normal_;
__init__ -> block;
__init__ -> make_conv;
__init__ -> GELU;
__init__ -> TransposeLast;
__init__ -> GroupNorm;
__init__ -> normal_;
__init__ -> constant_;
__init__ -> weight_norm;
__init__ -> SamePad;
__init__ -> FloatTensor;
__init__ -> ConformerMultiLayerFeatureExtractor;
__init__ -> xavier_normal_;
__init__ -> double;
__init__ -> randn;
__init__ -> AttentionBridge;
__init__ -> TransformerDecoder;
__init__ -> empty;
__init__ -> _build_pooling_module;
__init__ -> TransformerEmbedding;
__init__ -> DECODER_TYPE;
__init__ -> _build_encoder;
__init__ -> _build_decoder;
__init__ -> MultiHeadAttention;
__init__ -> PositionWiseFF;
__init__ -> TransformerDecoderBlock;
__init__ -> TransformerEncoderBlock;
__init__ -> _init_confidence_method;
__init__ -> from_file;
__init__ -> _build_pos_enc;
__init__ -> Embedding;
__init__ -> FixedPositionalEncoding;
__init__ -> ContextState;
__init__ -> arc_sort;
__init__ -> invert;
__init__ -> build_topo;
__init__ -> invert_;
__init__ -> create_fsa_vec;
__init__ -> intersect_with_self_loops;
__init__ -> detach;
__init__ -> RnntEmissionAdapterBuilder;
__init__ -> GraphIntersectDenseConfig;
__init__ -> CtcTopologyCompiler;
__init__ -> RnntTopologyCompiler;
__init__ -> load_graph;
__init__ -> update_graph;
__init__ -> LastBlankMode;
__init__ -> setup_probs;
__init__ -> abs;
__init__ -> get_num_threads;
__init__ -> set_num_threads;
__init__ -> min;
__init__ -> cpu_count;
__init__ -> as_cuda_array;
__init__ -> unsqueeze;
__init__ -> get_seq_len;
__init__ -> Random;
__init__ -> no_grad;
__init__ -> mel;
__init__ -> MelSpectrogram;
__init__ -> linspace;
__init__ -> AugmentationDataset;
__init__ -> iter;
__init__ -> RandomizedChainDataset;
__init__ -> randint;
__init__ -> ImpulsePerturbation;
__init__ -> NoisePerturbation;
__init__ -> LightningNotInstalledException;
__init__ -> _convert_samples_to_float32;
__init__ -> transpose;
__init__ -> resample;
__init__ -> trim;
__init__ -> normalize_db;
__init__ -> select_channels;
__init__ -> zeros;
__init__ -> ConformerFeedForward;
__init__ -> ConformerConvolution;
__init__ -> RelPositionMultiHeadAttention;
__init__ -> RelPositionMultiHeadAttentionLongformer;
__init__ -> CausalConv1D;
__init__ -> Swish;
__init__ -> InstanceNorm1d;
__init__ -> FusedBatchNorm1d;
__init__ -> startswith;
__init__ -> replace;
__init__ -> PyCTCDecodeConfig;
__init__ -> FlashlightConfig;
__init__ -> is_dataclass;
__init__ -> _init_confidence;
__init__ -> GreedyCTCInfer;
__init__ -> GreedyBatchedCTCInfer;
__init__ -> BeamCTCInfer;
__init__ -> WfstCTCInfer;
__init__ -> set_vocabulary;
__init__ -> set_decoding_type;
__init__ -> category;
__init__ -> set_tokenizer;
__init__ -> check_cuda_python_cuda_graphs_conditional_nodes_supported;
__init__ -> ConstantPad1d;
__init__ -> QuantConv1d;
__init__ -> ImportError;
__init__ -> change_context_window;
__init__ -> set_max_len;
__init__ -> QuantLinear;
__init__ -> copy;
__init__ -> get_same_padding;
__init__ -> get_asymtric_padding;
__init__ -> _get_conv_bn_layer;
__init__ -> compute_new_kernel_size;
__init__ -> _get_act_dropout_layer;
__init__ -> SqueezeExcite;
__init__ -> TensorQuantizer;
__init__ -> MaskedConv1d;
__init__ -> BeamSearchSequenceGeneratorWithNGramLM;
__init__ -> change_strategy;
__init__ -> GreedySequenceGenerator;
__init__ -> Model;
__init__ -> ModifiedALSDBatchedRNNTComputer;
__init__ -> ModifiedAESBatchedRNNTComputer;
__init__ -> update_joint_fused_batch_size;
__init__ -> GreedyMultiblankRNNTInfer;
__init__ -> GreedyRNNTInfer;
__init__ -> GreedyTDTInfer;
__init__ -> GreedyBatchedMultiblankRNNTInfer;
__init__ -> GreedyBatchedRNNTInfer;
__init__ -> GreedyBatchedTDTInfer;
__init__ -> BeamRNNTInfer;
__init__ -> BeamTDTInfer;
__init__ -> BeamBatchedRNNTInfer;
__init__ -> BeamBatchedTDTInfer;
__init__ -> GreedyBatchedRNNTLoopLabelsComputer;
__init__ -> RNNTGreedyDecodeCudaGraph;
__init__ -> SessionOptions;
__init__ -> load;
__init__ -> check_model;
__init__ -> InferenceSession;
__init__ -> _setup_encoder_input_output_keys;
__init__ -> _setup_decoder_joint_input_output_keys;
__init__ -> _setup_blank_index;
__init__ -> SerializeToString;
__init__ -> _setup_encoder_input_keys;
__init__ -> _setup_decoder_joint_input_keys;
__init__ -> GreedyBatchedTDTLoopLabelsComputer;
__init__ -> arange;
__init__ -> zeros_like;
__init__ -> BatchedHyps;
__init__ -> BatchedAlignments;
__init__ -> maybe_enable_cuda_graphs;
__init__ -> PruningMode;
__init__ -> BlankLMScoreMode;
__init__ -> full;
__init__ -> clone;
__init__ -> BatchedBeamHyps;
__init__ -> expand;
__init__ -> ScaleBiasLayer;
__init__ -> uniform_;
__init__ -> calc_length;
__init__ -> MaxPool2d;
__init__ -> CausalConv2D;
__init__ -> MaxPool1d;
__init__ -> Sigmoid;
__init__ -> MaskedSEModule;
__init__ -> Tanh;
__init__ -> index;
__init__ -> argmin;
__init__ -> masked_where;
__init__ -> array;
__init__ -> ModifiedALSDBatchedTDTComputer;
__init__ -> Exception;
__init__ -> MultiLayerPerceptron;
__init__ -> post_init;
__init__ -> riva_decoder_importer;
__init__ -> BatchedMappedDecoderCudaConfig;
__init__ -> _riva_config_to_dict;
__init__ -> WfstNbestUnit;
__init__ -> _set_decoding_mode;
__init__ -> _set_decoder_config;
__init__ -> _init_decoder;
__init__ -> setup_adapter_strategy;
__init__ -> cast;
__init__ -> iinfo;
__init__ -> _calculate_local_num_batches;
__init__ -> _init_file_write;
__init__ -> _init_filelist_lists;
__init__ -> CTCBPEDecodingConfig;
__init__ -> CTCDecodingConfig;
__init__ -> make_file_lists;
__init__ -> get_color_palette;
__init__ -> get_csv_columns;
__init__ -> SpeakerClustering;
__init__ -> fill_;
__init__ -> ones_like;
__init__ -> TopKSequenceGenerator;
__init__ -> preprocessor;
__init__ -> squeeze;
__init__ -> unsqueeze_;
__init__ -> from_numpy;
__init__ -> FeatureFrameBufferer;
__init__ -> BatchedFeatureFrameBufferer;
__init__ -> extract_preprocessor;
__init__ -> get_sampling_frames;
__init__ -> compile;
__init__ -> defaultdict;
__init__ -> match;
__init__ -> LexiconUnit;
__init__ -> values;
__init__ -> _kaldifst_maybe_raise;
__init__ -> kaldi_symbols2dict;
__init__ -> namedtuple;
__init__ -> AudioCollection;
__init__ -> ASRAudioProcessor;
__init__ -> SignalSetup;
__init__ -> mean;
__init__ -> eye;
__init__ -> check_cfg;
__init__ -> any;
__init__ -> isclose;
__init__ -> hann_window;
__init__ -> L1Loss;
__init__ -> restore_asr_model_from_cloud;
__init__ -> get_model;
__init__ -> Resample;
__init__ -> GRU;
__init__ -> AssertionError;
__init__ -> _Seasr;
__init__ -> apply_weight_norm;
__init__ -> SpectrogramToMultichannelFeatures;
__init__ -> ChannelAveragePool;
__init__ -> ConformerEncoder;
__init__ -> ChannelAttentionPool;
__init__ -> TransformAverageConcatenate;
__init__ -> TransformAttendConcatenate;
__init__ -> db2mag;
__init__ -> ParametricMultichannelWienerFilter;
__init__ -> WPEFilter;
__init__ -> ReverseDiffusionPredictor;
__init__ -> AnnealedLangevinDynamics;
__init__ -> ReverseStochasticDifferentialEquation;
__init__ -> ReferenceChannelEstimatorSNR;
__init__ -> NoiseConditionalScoreNetworkPlusPlus;
__init__ -> Upsample;
__init__ -> init_weights_;
__init__ -> reversed;
__init__ -> GaussianFourierProjection;
__init__ -> ResnetBlockBigGANPlusPlus;
__init__ -> Rearrange;
__init__ -> ones_;
__init__ -> init_alibi;
__init__ -> RMSNorm;
__init__ -> partial;
__init__ -> rmsnorm_class;
__init__ -> MultiheadAttention;
__init__ -> get_feedforward_layer;
__init__ -> ConvPositionEmbed;
__init__ -> TransformerUNet;
__init__ -> LearnedSinusoidalPosEmb;
__init__ -> SiLU;
__init__ -> _get_logger;
__init__ -> gcd;
__init__ -> _get_sinc_resample_kernel;
__init__ -> MisconfigurationException;
__init__ -> permutation;
__init__ -> choice;
__init__ -> power;
__init__ -> add;
__init__ -> validate_extra_fields;
__init__ -> LazyJsonlIterator;
__init__ -> LazyIteratorChain;
__init__ -> _validate;
__init__ -> groupby;
__init__ -> search;
__init__ -> group;
__init__ -> ifnone;
__init__ -> _reset;
__init__ -> _setup_writers;
__init__ -> is_tensor;
__init__ -> FLOPSConfig;
__init__ -> OccurancePunctuationErrorRate;
__init__ -> setattr;
__init__ -> GradScaler;
__init__ -> named_parameters;
__init__ -> nelement;
__init__ -> OverLastDim;
__init__ -> LSTMDropout;
__init__ -> rnn_type;
__init__ -> RNNLayer;
__init__ -> cell;
__init__ -> init_stacked_lstm;
__init__ -> Snake;
__init__ -> LeakyReLU;
__init__ -> parser;
__init__ -> output_type;
__init__ -> __parse_texts;
__init__ -> splitext;
__init__ -> sort;
__init__ -> item_iter;
__init__ -> _get_len;
__init__ -> SpeechLLMAudioTextEntity;
__init__ -> readlines;
__init__ -> Counter;
__init__ -> relative_speaker_parser;
__init__ -> tuple;
__init__ -> split_rttm_line;
__init__ -> combinations;
__init__ -> __make_trans_table;
__init__ -> _validate_defaults;
__init__ -> DummyTokenizer;
__init__ -> _calculate_offsets;
__init__ -> update_special_tokens_dict;
__init__ -> check_special_tokens_to_remove_while_decoding;
__init__ -> readline;
__init__ -> check_special_token_name;
__init__ -> check_token_from_file;
__init__ -> tokens_to_ids;
__init__ -> loads;
__init__ -> check_special_tokens_dict_from_file;
__init__ -> decode;
__init__ -> encode;
__init__ -> OpenCC;
__init__ -> PowerTransformer;
__init__ -> QuantileTransformer;
__init__ -> RobustScaler;
__init__ -> MosesTokenizer;
__init__ -> MosesDetokenizer;
__init__ -> MosesPunctNormalizer;
__init__ -> Tagger;
__init__ -> _update_cache;
__init__ -> _compile_regex;
__init__ -> SentencePieceProcessor;
__init__ -> Load;
__init__ -> get_piece_size;
__init__ -> piece_to_id;
__init__ -> add_special_tokens;
__init__ -> encode_as_pieces;
__init__ -> reload_mergeable_ranks;
__init__ -> Encoding;
__init__ -> BPE;
__init__ -> vocab;
__init__ -> _initialize_tokenizer;
__init__ -> EnglishG2p;
__init__ -> EnglishPhonemesTokenizer;
__init__ -> get_grapheme_character_set;
__init__ -> english_text_preprocessing;
__init__ -> product;
__init__ -> validate_locale;
__init__ -> text_preprocessing_func;
__init__ -> replace_symbols;
__init__ -> get_ipa_punctuation_list;
__init__ -> get_tokenizer_config;
__init__ -> load_pytorch_model;
__init__ -> load_jit_model;
__init__ -> Normalize;
__init__ -> Patcher;
__init__ -> Module;
__init__ -> ResnetBlock;
__init__ -> AttnBlock;
__init__ -> Downsample;
__init__ -> UnPatcher;
__init__ -> cast_tuple;
__init__ -> Conv3d;
__init__ -> is_odd;
__init__ -> CausalConv3d;
__init__ -> CausalNormalize;
__init__ -> CausalResnetBlock3d;
__init__ -> CausalAttnBlock;
__init__ -> CausalDownsample3d;
__init__ -> CausalUpsample3d;
__init__ -> Patcher3D;
__init__ -> CausalResnetBlockFactorized3d;
__init__ -> CausalTemporalAttnBlock;
__init__ -> CausalHybridDownsample3d;
__init__ -> UnPatcher3D;
__init__ -> CausalHybridUpsample3d;
__init__ -> parameters;
__init__ -> item;
__init__ -> FSQuantizer;
__init__ -> cumprod;
__init__ -> default;
__init__ -> indices_to_codes;
__init__ -> prod;
__init__ -> value;
__init__ -> numel;
__init__ -> generate_pos_id;
__init__ -> MegatronDataSampler;
__init__ -> _enable_lora;
__init__ -> T5EncoderModel;
__init__ -> EDMPipeline;
__init__ -> DiTConfig;
__init__ -> build_module;
__init__ -> get_pipeline_model_parallel_world_size;
__init__ -> fork_rng;
__init__ -> get_3d_sincos_pos_embed;
__init__ -> rearrange;
__init__ -> customize_init_param;
__init__ -> norm;
__init__ -> ColumnParallelLinear;
__init__ -> _replace_no_cp_submodules;
__init__ -> AdaLN;
__init__ -> CudaGraphManager;
__init__ -> AdaLNContinuous;
__init__ -> transformer_decoder_layer_spec;
__init__ -> TransformerBlock;
__init__ -> Timesteps;
__init__ -> ParallelTimestepEmbedding;
__init__ -> pos_embedder;
__init__ -> MLPEmbedder;
__init__ -> EmbedND;
__init__ -> TimeStepEmbedder;
__init__ -> load_from_pretrained;
__init__ -> MMDiTLayer;
__init__ -> FluxSingleTransformerBlock;
__init__ -> get_flux_double_transformer_engine_spec;
__init__ -> get_flux_single_transformer_engine_spec;
__init__ -> connect;
__init__ -> MegatronOptimizerModule;
__init__ -> OptimizerConfig;
__init__ -> FlowMatchEulerDiscreteScheduler;
__init__ -> FrozenCLIPEmbedder;
__init__ -> FrozenT5Embedder;
__init__ -> AutoEncoder;
__init__ -> Flux;
__init__ -> FluxControlNet;
__init__ -> zero_module;
__init__ -> ControlNetConditioningEmbedding;
__init__ -> configure_model;
__init__ -> load_from_flux_transformer;
__init__ -> NormalDist;
__init__ -> EDMSDE;
__init__ -> EDMSampler;
__init__ -> EDMScaling;
__init__ -> make_attn;
__init__ -> Encoder;
__init__ -> DiagonalGaussian;
__init__ -> load_from_checkpoint;
__init__ -> LPIPS;
__init__ -> NLayerDiscriminator;
__init__ -> state_dict;
__init__ -> load_state_dict;
__init__ -> LPIPSWithDiscriminator;
__init__ -> VAEGenerator;
__init__ -> from_config;
__init__ -> TransformerConfig;
__init__ -> MaskedTokenLossReduction;
__init__ -> CrossEntropyLoss;
__init__ -> _JSONLMemMapDataset;
__init__ -> _build_samples_mapping;
__init__ -> get_nmt_tokenizer;
__init__ -> get_blend_from_list;
__init__ -> warn;
__init__ -> get_dataset_root;
__init__ -> TransformerBlockWithPostLNSupport;
__init__ -> Pooler;
__init__ -> setup_embeddings_and_output_layer;
__init__ -> MCoreBertLMHead;
__init__ -> mcore_get_linear_layer;
__init__ -> FusedLayerNorm;
__init__ -> BertConfig;
__init__ -> _load_dataset;
__init__ -> _maybe_validate_prompt_template;
__init__ -> validate_batch_size_for_packed_sequence;
__init__ -> make_dataset_splits;
__init__ -> collate_fn;
__init__ -> preprocess_dataset;
__init__ -> tril;
__init__ -> validate_dataset_asset_accessibility;
__init__ -> cumsum;
__init__ -> is_initialized;
__init__ -> build_index_files;
__init__ -> barrier;
__init__ -> load_file;
__init__ -> lightning_prepare_data;
__init__ -> get_rank;
__init__ -> AppState;
__init__ -> timedelta;
__init__ -> lru_cache;
__init__ -> Baichuan2Config;
__init__ -> ChatGLMConfig;
__init__ -> DeepSeekV2Config;
__init__ -> GemmaConfig;
__init__ -> Gemma2Config;
__init__ -> get_tensor_model_parallel_world_size;
__init__ -> divide;
__init__ -> FusedScaleMaskSoftmax;
__init__ -> TENorm;
__init__ -> Gemma3Config;
__init__ -> RotaryEmbedding;
__init__ -> _is_local_attn_layer;
__init__ -> LlamaBidirectionalModel;
__init__ -> transform_source_dict;
__init__ -> LlamaConfig;
__init__ -> Llama31NemotronNano8BConfig;
__init__ -> MistralConfig7B;
__init__ -> MixtralConfig8x7B;
__init__ -> NemotronConfig;
__init__ -> Phi3Config;
__init__ -> Qwen2Config;
__init__ -> Qwen3Config;
__init__ -> SSMConfig;
__init__ -> StarcoderConfig;
__init__ -> Starcoder2Config;
__init__ -> allocate_layers;
__init__ -> _select_layers_for_pipeline_parallel;
__init__ -> set_layer_number;
__init__ -> ParallelCausalDepthwiseConv1d;
__init__ -> ParallelShortHyenaOperator;
__init__ -> ParallelHyenaOperator;
__init__ -> HyenaConfig;
__init__ -> has_config_logger_enabled;
__init__ -> get_init_method;
__init__ -> log_config_to_disk;
__init__ -> LanguageModelEmbedding;
__init__ -> is_pipeline_first_stage;
__init__ -> locals;
__init__ -> zero_;
__init__ -> view;
__init__ -> fork;
__init__ -> get_cuda_rng_tracker;
__init__ -> rand;
__init__ -> cuda;
__init__ -> current_device;
__init__ -> get_tensor_model_parallel_rank;
__init__ -> repeat;
__init__ -> exp;
__init__ -> logspace;
__init__ -> get_groups_and_group_sizes;
__init__ -> ExplicitSingleDecayFilter;
__init__ -> conv_init_method;
__init__ -> ImplicitModalFilter;
__init__ -> short_conv_class;
__init__ -> initialize_affine_weight_gpu;
__init__ -> get_context_parallel_world_size;
__init__ -> torch_dtype_from_precision;
__init__ -> EnvironmentError;
__init__ -> init_weight_magnitude;
__init__ -> _get_weight_norm;
__init__ -> copy_;
__init__ -> _init_adapter;
__init__ -> ModelParallelConfig;
__init__ -> RowParallelLinear;
__init__ -> bfloat16;
__init__ -> ReturnResultAdapterStrategy;
__init__ -> _get_init_fn;
__init__ -> jit;
__init__ -> half;
__init__ -> FileNotFoundError;
__init__ -> _get_model_type;
__init__ -> _get_model_size;
__init__ -> _get_message;
__init__ -> template;
__init__ -> text_transform;
__init__ -> Value;
__init__ -> SharedEpoch;
__init__ -> get_world_size;
__init__ -> get_data_parallel_world_size;
__init__ -> _get_webdataset_and_epoch;
__init__ -> Config;
__init__ -> client;
__init__ -> detshuffle2;
__init__ -> pytorch_worker_info;
__init__ -> with_epoch;
__init__ -> from_iterable;
__init__ -> select;
__init__ -> cached_tarfile_to_samples;
__init__ -> safe_load;
__init__ -> MultiShardSample;
__init__ -> ResampledShards;
__init__ -> detshuffle;
__init__ -> Compose;
__init__ -> iterdir;
__init__ -> Resize;
__init__ -> ToTensor;
__init__ -> cache_latents;
__init__ -> CenterCrop;
__init__ -> RandomCrop;
__init__ -> MultiModalSampleConfig;
__init__ -> SequentialMegatronSampler;
__init__ -> MultiModalTaskEncoder;
__init__ -> VQASampleEncoder;
__init__ -> InterleavedSampleEncoder;
__init__ -> SimilarityInterleavedEncoder;
__init__ -> floor;
__init__ -> PinholeCamera;
__init__ -> build_index;
__init__ -> TarOrFolderImageLoader;
__init__ -> TarOrFolderVideoLoader;
__init__ -> finditer;
__init__ -> sub;
__init__ -> isfile;
__init__ -> IndexedDataset;
__init__ -> _get_files;
__init__ -> get_data_parallel_rank;
__init__ -> create_vision_encoder_and_processor;
__init__ -> load_llm_weights;
__init__ -> freeze_llm;
__init__ -> init_vision;
__init__ -> extend_instance;
__init__ -> init_lita;
__init__ -> init_neva_adapter;
__init__ -> NormalConsistencyLoss;
__init__ -> LaplacianSmoothLoss;
__init__ -> build_renderer;
__init__ -> TimestepEmbedSequential;
__init__ -> make_zero_conv;
__init__ -> all;
__init__ -> linear;
__init__ -> conv_nd;
__init__ -> ResBlock;
__init__ -> load_from_unet;
__init__ -> AttentionBlock;
__init__ -> SpatialTransformer;
__init__ -> _validate_trainer;
__init__ -> model_provider_func;
__init__ -> instantiate_text_encoder;
__init__ -> instantiate_vae;
__init__ -> instantiate_unet;
__init__ -> get_noise_scheduler;
__init__ -> Generator;
__init__ -> register_schedule;
__init__ -> UNetModel;
__init__ -> ContinousDDPMPrecond;
__init__ -> DDPMSampler;
__init__ -> EfficientUNetModel;
__init__ -> EDMPrecond;
__init__ -> NotImplemented;
__init__ -> GaussianDiffusionContinuousTimes;
__init__ -> _init_first_stage;
__init__ -> get_obj_from_str;
__init__ -> instantiate_from_config;
__init__ -> LitEma;
__init__ -> buffers;
__init__ -> VectorQuantizer;
__init__ -> init_from_ckpt;
__init__ -> _load_pretrained_model;
__init__ -> load_safetensors;
__init__ -> DiffusionWrapper;
__init__ -> count_params;
__init__ -> instantiate_first_stage;
__init__ -> instantiate_cond_stage;
__init__ -> bool;
__init__ -> getenv;
__init__ -> cos;
__init__ -> atan;
__init__ -> BrownianTree;
__init__ -> BatchedBrownianTree;
__init__ -> transform;
__init__ -> as_tensor;
__init__ -> to_torch;
__init__ -> _load_concept_list;
__init__ -> CLIPVisionTransformer;
__init__ -> CLIPTextTransformer;
__init__ -> build_model;
__init__ -> Float16Module;
__init__ -> VitBackbone;
__init__ -> scaled_init_method_normal;
__init__ -> init_method_normal;
__init__ -> get_language_model;
__init__ -> initialize_word_embeddings;
__init__ -> build_attention_mask;
__init__ -> SiglipMHAPoolingHead;
__init__ -> TransformerLayerSubmodules;
__init__ -> ModuleSpec;
__init__ -> CrossAttentionSubmodules;
__init__ -> MLPSubmodules;
__init__ -> get_specs;
__init__ -> vision_module;
__init__ -> text_module;
__init__ -> build_transformer_config;
__init__ -> _wrap_model_for_O2;
__init__ -> build_model_context;
__init__ -> te_version;
__init__ -> DelayedScaling;
__init__ -> normalization;
__init__ -> upsample_fn;
__init__ -> EfficientResBlock;
__init__ -> attention_fn;
__init__ -> ConvTranspose2d;
__init__ -> QKVStableMaskedAttention;
__init__ -> QKVMaskedAttention;
__init__ -> QKVStableAttention;
__init__ -> QKVAttention;
__init__ -> GEGLU;
__init__ -> SelfAttentionBlock;
__init__ -> CrossAttentionBlock;
__init__ -> FeedForward;
__init__ -> ConvTranspose3d;
__init__ -> avg_pool_nd;
__init__ -> ConditionalSequential;
__init__ -> UnLearnedSinusoidalPosEmb;
__init__ -> SelfAttentionPooling;
__init__ -> DBlock;
__init__ -> UBlock;
__init__ -> dirname;
__init__ -> from_json_file;
__init__ -> Network;
__init__ -> exp2;
__init__ -> get_encoder;
__init__ -> MLP;
__init__ -> _create_triangle_table;
__init__ -> _create_num_triangles_table;
__init__ -> _create_base_tet_edges;
__init__ -> build_layer;
__init__ -> _get_precision_type;
__init__ -> load_config_and_state_from_nemo;
__init__ -> LatentDiffusion;
__init__ -> set_beta_schedule;
__init__ -> Stream;
__init__ -> load_vae_from_checkpoint;
__init__ -> Engine;
__init__ -> set_engine;
__init__ -> LatentDiffusionWrapper;
__init__ -> OccGridEstimator;
__init__ -> DeepMarchingTetrahedra;
__init__ -> register_parameter;
__init__ -> unique;
__init__ -> RasterizeCudaContext;
__init__ -> OrderedDict;
__init__ -> LinearWrapper;
__init__ -> LayerNormMLP;
__init__ -> LayerNormLinear;
__init__ -> FlashSelfAttention;
__init__ -> FlashCrossAttention;
__init__ -> DotProductAttention;
__init__ -> CrossAttention;
__init__ -> BasicTransformerBlock;
__init__ -> discretization_config;
__init__ -> make_beta_schedule;
__init__ -> LatentRescaler;
__init__ -> instantiate_pretrained;
__init__ -> QKVAttentionLegacy;
__init__ -> build_timestep_embedding;
__init__ -> convert_to_fp16;
__init__ -> convert_module_to_fp8;
__init__ -> te_fp8_key_mapping;
__init__ -> Timestep;
__init__ -> AdaptiveAvgPool2d;
__init__ -> Flatten;
__init__ -> AttentionPool2d;
__init__ -> randn_like;
__init__ -> discretization;
__init__ -> parse;
__init__ -> chunk;
__init__ -> clamp;
__init__ -> KeyError;
__init__ -> TransformerWrapper;
__init__ -> BERTTokenizer;
__init__ -> create_model_and_transforms;
__init__ -> build_tokenizer;
__init__ -> load_model;
__init__ -> init_;
__init__ -> GRUCell;
__init__ -> GLU;
__init__ -> groupby_prefix_and_trim;
__init__ -> always;
__init__ -> FixedPositionalEmbedding;
__init__ -> filter;
__init__ -> Attention;
__init__ -> branch_fn;
__init__ -> GRUGating;
__init__ -> Residual;
__init__ -> equals;
__init__ -> not_equals;
__init__ -> norm_fn;
__init__ -> Scale;
__init__ -> AbsolutePositionalEmbedding;
__init__ -> t;
__init__ -> rescale_zero_terminal_snr;
__init__ -> astype;
__init__ -> betas_for_alpha_bar;
__init__ -> VSRManifestProcessor;
__init__ -> VideoFeaturizer;
__init__ -> ASRVideoText;
__init__ -> get_circle_indices;
__init__ -> BatchNorm3d;
__init__ -> MaxPool3d;
__init__ -> ResNet;
__init__ -> VideoFrameMasking;
__init__ -> SpatialVideoMasking;
__init__ -> RandomHorizontalFlip;
__init__ -> Permute;
__init__ -> ConvertImageDtype;
__init__ -> ResizeVideo;
__init__ -> NormalizeVideo;
__init__ -> Grayscale;
__init__ -> GlobalAvgPool2d;
__init__ -> ResNetBottleneckBlock;
__init__ -> ResNetBlock;
__init__ -> _pair;
__init__ -> SpeechLLMAudioTextCollection;
__init__ -> WebDataset;
__init__ -> setup_perception_modules;
__init__ -> summarize;
__init__ -> setup_metric;
__init__ -> setup_optimizer_param_groups;
__init__ -> ConcatPooling;
__init__ -> AvgPool1d;
__init__ -> MultiFeatureAggregator;
__init__ -> EncDecSpeakerLabelModel;
__init__ -> get_prompt_format_fn;
__init__ -> _load_tiktoken_bpe;
__init__ -> _check_files_exist;
__init__ -> _get_examples;
__init__ -> deprecated_warning;
__init__ -> get_dialog_examples;
__init__ -> get_features;
__init__ -> convert_slot_position_to_slot_ids;
__init__ -> get_lm_samples;
__init__ -> preprocess_feature;
__init__ -> remove_invalid_samples;
__init__ -> find_max_n_candidates;
__init__ -> _create_examples;
__init__ -> load_features;
__init__ -> process_features;
__init__ -> save_features;
__init__ -> convert_examples_to_features;
__init__ -> open_file;
__init__ -> map_bio_format_slots_to_unified_slots;
__init__ -> normalize_zero_shot_intent;
__init__ -> Schema;
__init__ -> is_global_rank_zero;
__init__ -> get_dialogue_files;
__init__ -> load_dialogues;
__init__ -> save_dialog_examples;
__init__ -> ServiceSchema;
__init__ -> close;
__init__ -> get_service_id;
__init__ -> load_data_indices;
__init__ -> find_newlines;
__init__ -> dump;
__init__ -> get_labels;
__init__ -> get_examples;
__init__ -> get_dev_examples;
__init__ -> get_train_examples;
__init__ -> convert_xnli_examples_to_features;
__init__ -> JSONLMemMapDataset;
__init__ -> parse_pkl;
__init__ -> parse_query_to_passages;
__init__ -> label2idx;
__init__ -> fill_class_weights;
__init__ -> if_exist;
__init__ -> get_label_stats;
__init__ -> get_freq_weights;
__init__ -> get_labels_to_labels_id_mapping;
__init__ -> get_multi_label_stats;
__init__ -> get_freq_weights_bce_with_logits_loss;
__init__ -> dataset_to_ids;
__init__ -> braceexpand;
__init__ -> repr;
__init__ -> isdir;
__init__ -> load_h5;
__init__ -> pack_data_into_batches;
__init__ -> pad_batches;
__init__ -> clean;
__init__ -> _lightning_prepare_data;
__init__ -> load_data;
__init__ -> get_samples_mapping;
__init__ -> build_blending_indices;
__init__ -> compile_helper;
__init__ -> _build_index_mappings;
__init__ -> deallocate_indexed_dataset_memory;
__init__ -> read_index;
__init__ -> _do_init;
__init__ -> memmap;
__init__ -> memoryview;
__init__ -> frombuffer;
__init__ -> unpack;
__init__ -> tell;
__init__ -> _warmup_mmap_file;
__init__ -> _dtype;
__init__ -> update_global_batch_size;
__init__ -> mask_prompt;
__init__ -> _validate_pad_id;
__init__ -> _determine_tokenizer_type;
__init__ -> _build;
__init__ -> get_enc_dec_tokenizers;
__init__ -> TemporaryDirectory;
__init__ -> train_tokenizers;
__init__ -> cleanup;
__init__ -> preprocess_parallel_dataset;
__init__ -> system;
__init__ -> _set_cached_features_filename;
__init__ -> trange;
__init__ -> load_features_from_cache;
__init__ -> _convert_examples_to_features;
__init__ -> BERTQAInputExample;
__init__ -> dump_features_to_cache;
__init__ -> GPTQAInputExample;
__init__ -> S2SQAInputExample;
__init__ -> SquadProcessor;
__init__ -> InputFeatures;
__init__ -> read_input_file;
__init__ -> get_envint;
__init__ -> __process_raw_entries;
__init__ -> read_data_file;
__init__ -> __tokenize_samples;
__init__ -> write;
__init__ -> tokenize;
__init__ -> tokenizer;
__init__ -> encode_tags;
__init__ -> TaggerDataInstance;
__init__ -> get_token_list;
__init__ -> build_bert_example;
__init__ -> Manager;
__init__ -> Process;
__init__ -> Queue;
__init__ -> _check_constructor_parameters;
__init__ -> _get_path_to_pkl_features;
__init__ -> load_label_ids;
__init__ -> _read_dataset;
__init__ -> _get_features;
__init__ -> mkstemp;
__init__ -> _check_label_ids_loaded_from_pkl;
__init__ -> _calculate_and_save_label_frequencies;
__init__ -> _pack_into_batches;
__init__ -> _form_batches;
__init__ -> _check_label_ids_vs_unique_labels;
__init__ -> create_label_ids;
__init__ -> fdopen;
__init__ -> sleep;
__init__ -> put;
__init__ -> is_file;
__init__ -> rstrip;
__init__ -> get_features_infer;
__init__ -> _check_pad_label;
__init__ -> is_absolute;
__init__ -> handle_extension;
__init__ -> ZeroShotIntentProcessor;
__init__ -> InputExample;
__init__ -> BCEWithLogitsLoss;
__init__ -> RougeScorer;
__init__ -> get_megatron_pretrained_bert_models;
__init__ -> NLPSaveRestoreConnector;
__init__ -> get_lm_model;
__init__ -> register_bert_model;
__init__ -> setup_tokenizer;
__init__ -> ClassificationReport;
__init__ -> resize_token_embeddings;
__init__ -> union;
__init__ -> MegatronGPTPromptLearningModel;
__init__ -> _reconfigure_classifier;
__init__ -> _set_defaults_data_desc;
__init__ -> _set_data_desc_to_cfg;
__init__ -> SGDEncoder;
__init__ -> SGDDecoder;
__init__ -> SGDDialogueStateLoss;
__init__ -> setup_cgs;
__init__ -> MultiSimilarityLoss;
__init__ -> _is_model_being_restored;
__init__ -> SequenceRegression;
__init__ -> MSELoss;
__init__ -> SequenceClassifier;
__init__ -> get_tokenizer;
__init__ -> get_lm_model_with_padded_embedding;
__init__ -> BertEmbeddingHead;
__init__ -> BertPretrainingTokenClassifier;
__init__ -> Perplexity;
__init__ -> AggregatorLoss;
__init__ -> build_model_parallel_config;
__init__ -> _enable_nvidia_optimizations;
__init__ -> initialize_model_parallel_for_nemo;
__init__ -> _validate_and_override_config;
__init__ -> Timers;
__init__ -> set_device;
__init__ -> _build_tokenizer;
__init__ -> _build_vocab;
__init__ -> disable;
__init__ -> init_model;
__init__ -> named_modules;
__init__ -> ParallelLinearAdapterConfig;
__init__ -> LinearAdapterConfig;
__init__ -> get_accepted_adapter_types;
__init__ -> add_adapter;
__init__ -> MLPInfusedAdapterConfig;
__init__ -> InfusedAdapterConfig;
__init__ -> set_base_shapes;
__init__ -> std;
__init__ -> load_retro_config;
__init__ -> _get_component_cfg;
__init__ -> _add_adapters_to_component;
__init__ -> _validate_cfg;
__init__ -> get_transformer;
__init__ -> SequencePerplexity;
__init__ -> Version;
__init__ -> version;
__init__ -> AutocastTransformerLayer;
__init__ -> _get_layer_offset;
__init__ -> add_module;
__init__ -> set_tensor_model_parallel_attributes;
__init__ -> get_linear_layer;
__init__ -> get_layer_norm;
__init__ -> BertLMHead;
__init__ -> size;
__init__ -> word_embeddings_weight;
__init__ -> get_griffin_layers;
__init__ -> create_block;
__init__ -> GriffinStack;
__init__ -> w_init_;
__init__ -> BlockDiagonalLinear;
__init__ -> _determine_multilingual_training_type;
__init__ -> _setup_multilingual_special_tokens;
__init__ -> build_linear_or_identity;
__init__ -> setup_enc_dec_tokenizers;
__init__ -> _validate_encoder_decoder_hidden_size;
__init__ -> setup_multilingual_ids_and_processors;
__init__ -> setup_pre_and_post_processing_utils;
__init__ -> SpanningLoss;
__init__ -> Trainer;
__init__ -> NLPDDPStrategy;
__init__ -> read_label_map;
__init__ -> BertExampleBuilder;
__init__ -> from_encoder_decoder_pretrained;
__init__ -> create_loss_module;
__init__ -> read_semiotic_classes;
__init__ -> Tag;
__init__ -> set_enabled_adapters;
__init__ -> unfreeze_enabled_adapters;
__init__ -> update_model_config_to_support_adapter;
__init__ -> bert_model;
__init__ -> train_dataloader;
__init__ -> input_example;
__init__ -> is_legacy_model_config;
__init__ -> legacy_model_config_to_new_model_config;
__init__ -> _set_label_ids;
__init__ -> setup_loss;
__init__ -> Markdown;
__init__ -> LongTensor;
__init__ -> PromptEmbedding;
__init__ -> clear_prompt_embedding_weights;
__init__ -> InferenceTable;
__init__ -> TPMLP;
__init__ -> FileStore;
__init__ -> ComboRetrievalService;
__init__ -> Flask;
__init__ -> Api;
__init__ -> add_resource;
__init__ -> Warning;
__init__ -> get_huggingface_pretrained_lm_models_list;
__init__ -> FlashFFTConv;
__init__ -> auto_assign_attrs;
__init__ -> HyenaOperatorSubmodules;
__init__ -> SingleHeadHyenaConv;
__init__ -> MultiHeadHyenaConv;
__init__ -> FlashFFTConvImpl;
__init__ -> cat;
__init__ -> register;
__init__ -> HyenaFilterSubmodules;
__init__ -> safe_divide;
__init__ -> CoreAttention;
__init__ -> ParallelAttention;
__init__ -> MatchedScaleMaskSoftmax;
__init__ -> XPOSPositionEmbedding;
__init__ -> build_relative_position;
__init__ -> build_slopes;
__init__ -> VocabParallelEmbedding;
__init__ -> init_method;
__init__ -> ParallelTransformer;
__init__ -> ALiBiRelativePositionEmbedding;
__init__ -> KERPLERelativePositionEmbedding;
__init__ -> SandwichRelativePositionEmbedding;
__init__ -> AttributeError;
__init__ -> MixedFusedRMSNorm;
__init__ -> _build_cross_attn_layer;
__init__ -> _build_self_attn_layer;
__init__ -> LayerNorm1P;
__init__ -> ParallelMLP;
__init__ -> get_encoder_model;
__init__ -> get_decoder_model;
__init__ -> MuReadout;
__init__ -> _validate_config;
__init__ -> get_hiddens_module;
__init__ -> MegatronTransformerEncoderDecoderModule;
__init__ -> T5RelativePositionEmbedding;
__init__ -> MegatronTokenLevelHead;
__init__ -> get_pipeline_model_parallel_rank;
__init__ -> get_pipeline_model_parallel_split_rank;
__init__ -> encoder_relative_position_embeddings_weight;
__init__ -> zero_parameters;
__init__ -> decoder_relative_position_embeddings_weight;
__init__ -> decoder_cross_attention_relative_position_embeddings_weight;
__init__ -> SwitchMLP;
__init__ -> remove_bias_from_layernorm;
__init__ -> ParallelChunkedCrossAttention;
__init__ -> LPLayerNorm;
__init__ -> get_num_layers;
__init__ -> LayerType;
__init__ -> ParallelTransformerLayer;
__init__ -> get_virtual_pipeline_model_parallel_world_size;
__init__ -> get_virtual_pipeline_model_parallel_rank;
__init__ -> MixedFusedLayerNorm;
__init__ -> ParallelLinearAdapter;
__init__ -> DownSampleBlock;
__init__ -> nf4_quantize;
__init__ -> _create_layer_norm_fn;
__init__ -> chain;
__init__ -> issubset;
__init__ -> isdisjoint;
__init__ -> intersection;
__init__ -> isinf;
__init__ -> get_sentence_embedding_dimension;
__init__ -> SentenceTransformer;
__init__ -> start_multi_process_pool;
__init__ -> FaissRetrievalService;
__init__ -> DynamicFaissRetrievalService;
__init__ -> DType;
__init__ -> request_data;
__init__ -> IndexFlatL2;
__init__ -> ChunkStore;
__init__ -> GpuMultipleClonerOptions;
__init__ -> index_cpu_to_all_gpus;
__init__ -> MMapRetrievalIndexedDataset;
__init__ -> projection_module;
__init__ -> _set_mixed_precision_recipe;
__init__ -> set_autocast_gpu_dtype;
__init__ -> MLPHeadAdapterConfig;
__init__ -> _calculate_kv_channels;
__init__ -> get_target_modules;
__init__ -> _create_lora_config;
__init__ -> exit;
__init__ -> PromptEncoderAdapterConfig;
__init__ -> ParallelLinearAdapterWeightTyingConfig;
__init__ -> _set_model_guid;
__init__ -> MixedPrecisionPolicy;
__init__ -> get_pad_id;
__init__ -> DictConfig;
__init__ -> setup_audio_codec;
__init__ -> AutoTokenizer;
__init__ -> train;
__init__ -> maybe_install_lora;
__init__ -> setup_speech_encoder;
__init__ -> load_pretrained_hf;
__init__ -> TransformerARSpeechDecoder;
__init__ -> Transformer;
__init__ -> EnglishTextNormalizer;
__init__ -> filter_files;
__init__ -> get_base_dir;
__init__ -> stft;
__init__ -> text_tokenizer;
__init__ -> getsize;
__init__ -> text_normalizer_call;
__init__ -> _create_buckets;
__init__ -> DatasetMeta;
__init__ -> _preprocess_manifest;
__init__ -> preprocess_manifest;
__init__ -> BetaBinomialInterpolator;
__init__ -> _get_default_text_tokenizer_conf;
__init__ -> english_g2p;
__init__ -> spanish_g2p;
__init__ -> mandarin_g2p;
__init__ -> german_g2p;
__init__ -> InstructionTuningAudioText;
__init__ -> InstructionTuningManifestProcessor;
__init__ -> pipe;
__init__ -> tokenizer_graphemes;
__init__ -> _prepare_sample;
__init__ -> batch_decode;
__init__ -> setup_grapheme_tokenizer;
__init__ -> _parse_as_cmu_dict;
__init__ -> _parse_file_by_lines;
__init__ -> read_wordids;
__init__ -> _parse_phoneme_dict;
__init__ -> _normalize_dict;
__init__ -> set_grapheme_case;
__init__ -> _parse_ja_phoneme_dict;
__init__ -> Tokenizer;
__init__ -> merge;
__init__ -> _parse_as_pinyin_dict;
__init__ -> pkuseg;
__init__ -> LogSoftmax;
__init__ -> MaskedMAELoss;
__init__ -> MaskedMSELoss;
__init__ -> FilterbankFeatures;
__init__ -> STFTLoss;
__init__ -> ForwardSumLoss;
__init__ -> AttributePredictionLoss;
__init__ -> SpectralConvergenceLoss;
__init__ -> LogSTFTMagnitudeLoss;
__init__ -> _setup_normalizer;
__init__ -> BinLoss;
__init__ -> MultiResolutionMelLoss;
__init__ -> MultiResolutionSTFTLoss;
__init__ -> TimeDomainLoss;
__init__ -> SISDRLoss;
__init__ -> GaussianDropout;
__init__ -> RelativeFeatureMatchingLoss;
__init__ -> ResNetSpeakerEncoder;
__init__ -> load_checkpoint;
__init__ -> FeatureMatchingLoss;
__init__ -> MelLoss;
__init__ -> PitchLoss;
__init__ -> DurationLoss;
__init__ -> EnergyLoss;
__init__ -> FastPitchModule;
__init__ -> FastPitchSSLModule;
__init__ -> MultiPeriodDiscriminator;
__init__ -> MultiScaleDiscriminator;
__init__ -> DiscriminatorLoss;
__init__ -> GeneratorLoss;
__init__ -> _setup_tokenizers;
__init__ -> freeze_model;
__init__ -> MagpieTTS_Model;
__init__ -> _get_lm_embeddings;
__init__ -> _get_lm_padding_value;
__init__ -> RADTTSLoss;
__init__ -> AttentionBinarizationLoss;
__init__ -> HingeLoss;
__init__ -> ConsistencyLoss;
__init__ -> GradientPenaltyLoss;
__init__ -> EnglishCharsTokenizer;
__init__ -> AngularSoftmaxLoss;
__init__ -> GreedyCTCDecoder;
__init__ -> Tacotron2Loss;
__init__ -> MultiResolutionDiscriminator;
__init__ -> KlLoss;
__init__ -> WaveGlowLoss;
__init__ -> ConditionalInput;
__init__ -> ConvNorm;
__init__ -> BottleneckLayerLayer;
__init__ -> FFTransformer;
__init__ -> ConvLSTMLinear;
__init__ -> SSLModel;
__init__ -> norm_f;
__init__ -> SELayer;
__init__ -> create_layer;
__init__ -> _init_layers;
__init__ -> get_torch_mel_spectrogram_class;
__init__ -> ELU;
__init__ -> HalfSnake;
__init__ -> get_padding;
__init__ -> get_up_sample_padding;
__init__ -> get_padding_2d;
__init__ -> Conv2dNorm;
__init__ -> PeriodDiscriminator;
__init__ -> DiscriminatorSTFT;
__init__ -> MultiBandDiscriminatorSTFT;
__init__ -> FiniteScalarQuantizer;
__init__ -> CodecActivation;
__init__ -> Conv1dNorm;
__init__ -> CausalConv1dNorm;
__init__ -> ResidualBlock;
__init__ -> HiFiGANResBlock;
__init__ -> HiFiGANResLayer;
__init__ -> get_down_sample_padding;
__init__ -> CausalConvTranspose1dNorm;
__init__ -> ClampActivation;
__init__ -> ConvTranspose1dNorm;
__init__ -> AudioToMelSpectrogramPreprocessor;
__init__ -> validate_mel_bands;
__init__ -> ResNetEncoder;
__init__ -> LinearNorm;
__init__ -> lstm_norm_fn_pntr;
__init__ -> flatten_parameters;
__init__ -> BiLSTM;
__init__ -> qr;
__init__ -> lu_unpack;
__init__ -> diag;
__init__ -> det;
__init__ -> triu;
__init__ -> lu;
__init__ -> Softplus;
__init__ -> SimpleConvNet;
__init__ -> WN;
__init__ -> Invertible1x1ConvLUS;
__init__ -> SEANetRNN;
__init__ -> SEANetResnetBlock;
__init__ -> kaiming_uniform_;
__init__ -> EuclideanCodebook;
__init__ -> ResidualVectorQuantizer;
__init__ -> ConditionalLayerNorm;
__init__ -> ConvReLUNorm;
__init__ -> resblock;
__init__ -> DiscriminatorP;
__init__ -> DiscriminatorS;
__init__ -> PreNormResidual;
__init__ -> Mix;
__init__ -> create_time_mix_layer;
__init__ -> create_channel_mix_layer;
__init__ -> MixerTTSBlock;
__init__ -> PositionalEmbedding;
__init__ -> AffineTransformationLayer;
__init__ -> Invertible1x1Conv;
__init__ -> get_radtts_encoder;
__init__ -> get_attribute_prediction_model;
__init__ -> ConvAttention;
__init__ -> Unfold;
__init__ -> FlowStep;
__init__ -> ExponentialClass;
__init__ -> EqualLinear;
__init__ -> Conv2DModulated;
__init__ -> Blur;
__init__ -> RGBBlock;
__init__ -> StyleMapping;
__init__ -> modules;
__init__ -> GeneratorBlock;
__init__ -> DiscriminatorBlock;
__init__ -> xavier_uniform_;
__init__ -> calculate_gain;
__init__ -> conv_fn;
__init__ -> LocationLayer;
__init__ -> check_support_condition_types;
__init__ -> init_parameters;
__init__ -> calculate_post_conv_lengths;
__init__ -> Conv2DReLUNorm;
__init__ -> StyleAttention;
__init__ -> Prenet;
__init__ -> LSTMCell;
__init__ -> MultiHeadAttn;
__init__ -> PositionwiseConvFF;
__init__ -> TransformerLayer;
__init__ -> ConvolutionLayer;
__init__ -> _init_cache;
__init__ -> SelfAttention;
__init__ -> KernelPredictor;
__init__ -> LVCBlock;
__init__ -> DiscriminatorR;
__init__ -> DDSConv;
__init__ -> Log;
__init__ -> ElementwiseAffine;
__init__ -> ConvFlow;
__init__ -> Flip;
__init__ -> AttentionEncoder;
__init__ -> ResidualCouplingLayer;
__init__ -> TextEncoder;
__init__ -> PosteriorEncoder;
__init__ -> ResidualCouplingBlock;
__init__ -> StochasticDurationPredictor;
__init__ -> DurationPredictor;
__init__ -> FFN;
__init__ -> reverse;
__init__ -> WaveNet;
__init__ -> note_to_hz;
__init__ -> _load_vocoder;
__init__ -> beta_binomial_prior_distribution;
__init__ -> SubPolicy;
__init__ -> rotate;
__init__ -> composite;
__init__ -> convert;
__init__ -> new;
__init__ -> rotate_with_fill;
__init__ -> enhance;
__init__ -> posterize;
__init__ -> solarize;
__init__ -> autocontrast;
__init__ -> equalize;
__init__ -> Color;
__init__ -> Contrast;
__init__ -> Sharpness;
__init__ -> Brightness;
__init__ -> _find_classes;
__init__ -> make_dataset;
__init__ -> _to_torch_data_type;
__init__ -> RandomResizedCrop;
__init__ -> ColorJitter;
__init__ -> ImageNetPolicy;
__init__ -> RandomApply;
__init__ -> RandomGrayscale;
__init__ -> GaussianBlur;
__init__ -> Solarization;
__init__ -> VitMlpHead;
__init__ -> DropPath;
__init__ -> LayerScale;
__init__ -> ParallelVisionTransformerLayer;
__init__ -> ParallelVisionTransformer;
__init__ -> DropPatch;
__init__ -> _register_load_state_dict_pre_hook;
__init__ -> image_transform;
__init__ -> ToPILImage;
__init__ -> Gemma3ImageProcessor;
__init__ -> get_context_parallel_group;
__init__ -> restore_model_weights;
__init__ -> AvgPool2d;
__init__ -> PixelShuffle;
__init__ -> MultimodalProjectorConfig;
__init__ -> ColumnParallelConv2dPatch;
__init__ -> PixelShuffleMLP;
__init__ -> get_rope_emb;
__init__ -> HFLlavaNextConfig;
__init__ -> LlavaNextConfig;
__init__ -> LlavaNextSampleEncoder;
__init__ -> LlavaNextSimilarityInterleavedSampleEncoder;
__init__ -> Llama3SampleEncoder;
__init__ -> MultimodalProjector;
__init__ -> VisionEncoder;
__init__ -> CrossAttentionTransformerBlock;
__init__ -> DummyCrossAttentionTransformerLayer;
__init__ -> MLlamaCrossAttentionSubmodules;
__init__ -> TEColumnParallelLinear;
__init__ -> to_2tuple;
__init__ -> LayerNormImpl;
__init__ -> MethodType;
__init__ -> PrecomputedTilePositionEmbedding;
__init__ -> get_image_transformer_layer_spec;
__init__ -> LlavaConfig;
__init__ -> get_image_sequence_length;
__init__ -> VisionRotaryEmbedding;
__init__ -> set_trainer;
__init__ -> SaveRestoreConnector;
__init__ -> wrap_training_step;
__init__ -> _setup_profiling;
__init__ -> _setup_chakra_profiling;
__init__ -> setup_multiple_test_data;
__init__ -> is_scripting;
__init__ -> _init_internal;
__init__ -> get_data_parallel_group;
__init__ -> new_group;
__init__ -> create_distribute_within_nodes_pgs;
__init__ -> str_to_dtype;
__init__ -> acquire;
__init__ -> is_mxfp8tensor;
__init__ -> release;
__init__ -> _check_valid_opt_params;
__init__ -> GradBucket;
__init__ -> expand_as;
__init__ -> register_hook;
__init__ -> _get_grad_data_group;
__init__ -> copy_tensor_model_parallel_attributes;
__init__ -> _make_param_hook;
__init__ -> _load;
__init__ -> MegatronStrategy;
__init__ -> setup_mcore_engine;
__init__ -> MegatronMixedPrecision;
__init__ -> is_dir;
__init__ -> _load_runtime;
__init__ -> is_nemo2_checkpoint;
__init__ -> _load_hf_model;
__init__ -> engine_from_bytes;
__init__ -> create_execution_context;
__init__ -> trt_to_torch_dtype_dict;
__init__ -> getLogger;
__init__ -> bytes_from_path;
__init__ -> get_tensor_mode;
__init__ -> get_tensor_dtype;
__init__ -> getfullargspec;
__init__ -> remove;
__init__ -> getmtime;
__init__ -> make_tensor;
__init__ -> mpi_rank;
__init__ -> set_stream;
__init__ -> init_tokenizer;
__init__ -> init_llm;
__init__ -> device_count;
__init__ -> init_image_encoder;
__init__ -> init_vision_preprocessor;
__init__ -> init_speech_preprocessor;
__init__ -> init_modality_encoder;
__init__ -> _get_encoder_config;
__init__ -> _init_pooler_config;
__init__ -> get_model_converter;
__init__ -> get_hf_text_config;
__init__ -> _get_and_verify_dtype;
__init__ -> _get_and_verify_max_len;
__init__ -> _init_attention_free;
__init__ -> _init_has_inner_state;
__init__ -> _init_has_noops;
__init__ -> _verify_tokenizer_mode;
__init__ -> _verify_quantization;
__init__ -> _verify_cuda_graph;
__init__ -> _change_paths_to_absolute_paths;
__init__ -> _load_hf_arguments;
__init__ -> convert_config;
__init__ -> for_model;
__init__ -> get_architecture;
__init__ -> is_cuda;
__init__ -> TarPath;
__init__ -> get_hf_config_sliding_window;
__init__ -> CallbackConnector;
__init__ -> reinit;
__init__ -> signature;
__init__ -> register_forward_pre_hook;
__init__ -> DtypeConfig;
__init__ -> enable_nvidia_optimizations;
__init__ -> DistributedDataParallelConfig;
__init__ -> _CommOverlapConfig;
__init__ -> warn_tensor_cycles;
__init__ -> _wrap_func;
__init__ -> ExecutionTraceObserver;
__init__ -> profile;
__init__ -> schedule;
__init__ -> getcwd;
__init__ -> trace_handler;
__init__ -> RowwiseParallel;
__init__ -> ColwiseParallel;
__init__ -> SequenceParallel;
__init__ -> Replicate;
__init__ -> Shard;
__init__ -> Lock;
__init__ -> NamedTimer;
__init__ -> _define_logger;
__init__ -> CUDAGraphState;
__init__ -> AsyncCallsQueue;
__init__ -> nemo_topk_check_previous_run;
__init__ -> is_s3_url;
__init__ -> submit;
__init__ -> result;
__init__ -> get_start_method;
__init__ -> check_color_support;
__init__ -> dir;
__init__ -> code_to_chars;
__init__ -> abspath;
__init__ -> init;
__init__ -> OutputModel;
__init__ -> JSONStreamBackend;
__init__ -> StdOutBackend;
__init__ -> read_csv;
__init__ -> CountsForHistory;
__init__ -> create_gen_function;
__init__ -> EncDecRNNTBPEModel;
__init__ -> SimpleNamespace;
__init__ -> MockClassWithCudaGraphs;
__init__ -> TorchAdam;
__init__ -> MagicMock;
__init__ -> HyenaMixer;
__init__ -> seed_everything;
__init__ -> setdefault;
__init__ -> setup_data_from_file;
__init__ -> MockModel;
__init__ -> MockModelWithChildren;
__init__ -> EncDecCTCModelBPE;
__init__ -> run_only_on;
__init__ -> SimpleModel;
__init__ -> global_defaults;
__init__ -> DummyConfig;
__init__ -> _load_model;
__init__ -> _load_puncutation_model;
__init__ -> listdir;
__init__ -> unary_unary;
on_train_batch_end -> RuntimeError;
on_train_batch_end -> info;
on_train_batch_end -> raise_signal;
on_train_batch_end -> should_benchmark;
on_train_batch_end -> append;
on_train_batch_end -> time;
on_train_batch_end -> log_img;
on_train_batch_end -> model_ema;
on_train_batch_end -> on_train_batch_end;
on_train_batch_end -> isinstance;
on_train_batch_end -> collect;
on_train_batch_end -> super;
on_train_batch_end -> hasattr;
on_train_batch_end -> get_all_timers_string;
on_train_batch_end -> step;
on_train_batch_end -> get_current_epoch_step;
on_train_batch_end -> _should_update;
on_train_batch_end -> _update_n;
on_train_batch_end -> set_postfix;
on_train_batch_end -> get_metrics;
on_train_batch_end -> print;
on_train_batch_end -> cudaProfilerStop;
on_train_batch_end -> __exit__;
on_train_batch_end -> cudart;
on_train_batch_end -> emit_nvtx;
on_train_batch_end -> stop;
on_train_batch_end -> export_chrome_trace;
on_train_batch_end -> unregister_callback;
on_train_batch_end -> _dump_snapshot;
on_train_batch_end -> _record_memory_history;
on_train_batch_end -> str;
on_train_batch_end -> get_rank;
on_train_batch_end -> eval_tflops_per_sec_per_gpu;
on_train_batch_end -> log;
on_train_batch_end -> _rank_is_active;
on_train_batch_end -> _monitor_candidates;
on_train_batch_end -> _save_last_checkpoint;
on_train_batch_end -> exit;
on_train_batch_end -> maybe_finalize_save_checkpoint;
on_train_batch_end -> should_log;
on_train_batch_end -> format_string;
on_train_batch_end -> getattr;
on_train_batch_end -> defaultdict;
on_train_batch_end -> log_megatron_timers;
on_train_batch_end -> _stop_profiler;
on_train_batch_end -> _on_batch_end;
on_train_batch_end -> get_world_size;
on_train_batch_end -> as_tensor;
on_train_batch_end -> get_current_global_batch_size;
on_train_batch_end -> _get_checkpoint_io;
on_train_batch_end -> extract_weights;
on_train_batch_end -> zip;
on_train_batch_end -> extract_ema_weights;
on_train_batch_end -> allclose;
on_train_batch_end -> Exception;
on_train_batch_end -> error;
on_train_batch_end -> CrashException;
on_train_batch_end -> is_pipeline_last_stage;
on_load_checkpoint -> info;
on_load_checkpoint -> endswith;
on_load_checkpoint -> replace;
on_load_checkpoint -> exists;
on_load_checkpoint -> rank_zero_info;
on_load_checkpoint -> load;
on_load_checkpoint -> MisconfigurationException;
on_load_checkpoint -> type;
on_load_checkpoint -> device;
on_load_checkpoint -> isinstance;
on_load_checkpoint -> enumerate;
on_load_checkpoint -> range;
on_load_checkpoint -> get_model_module_list;
on_load_checkpoint -> load_state_dict;
on_load_checkpoint -> len;
on_load_checkpoint -> get;
on_load_checkpoint -> pop;
on_load_checkpoint -> list;
on_load_checkpoint -> keys;
on_load_checkpoint -> items;
on_load_checkpoint -> on_load_checkpoint;
on_load_checkpoint -> find;
on_load_checkpoint -> super;
on_load_checkpoint -> all;
on_load_checkpoint -> load_model_state_dict;
on_load_checkpoint -> debug;
on_load_checkpoint -> get_virtual_pipeline_model_parallel_world_size;
on_load_checkpoint -> warning;
on_load_checkpoint -> qlora_load_model;
on_load_checkpoint -> getattr;
on_load_checkpoint -> format;
on_load_checkpoint -> join;
on_load_checkpoint -> print;
on_load_checkpoint -> str;
on_load_checkpoint -> values;
on_load_checkpoint -> item;
convert -> AppState;
convert -> load;
convert -> create_trainer;
convert -> initialize_model_parallel;
convert -> get_pipeline_model_parallel_rank;
convert -> get_tensor_model_parallel_rank;
convert -> inject_model_parallel_rank;
convert -> info;
convert -> NLPSaveRestoreConnector;
convert -> is_initialized;
convert -> save_to;
convert -> open_dict;
convert -> join;
convert -> load_from_checkpoint;
convert -> barrier;
convert -> MegatronTrainerBuilder;
convert -> ValueError;
convert -> from_pretrained;
convert -> vars;
convert -> exists;
convert -> named_parameters;
convert -> load_config;
convert -> print;
convert -> Trainer;
convert -> OrderedDict;
convert -> state_dict;
convert -> param_to_weights;
convert -> range;
convert -> get;
convert -> load_model;
convert -> to;
convert -> str;
convert -> int;
convert -> float;
convert -> keys;
convert -> open;
convert -> close;
convert -> startswith;
convert -> size;
convert -> view;
convert -> empty;
convert -> reshape;
convert -> cat;
convert -> list;
convert -> GradScaler;
convert -> append;
convert -> NLPDDPStrategy;
convert -> FileNotFoundError;
convert -> warning;
convert -> pop;
convert -> is_available;
convert -> is_bf16_supported;
convert -> MegatronHalfPrecisionPlugin;
convert -> PipelineMixedPrecisionPlugin;
convert -> split;
convert -> replace;
convert -> safe_open;
convert -> get_tensor;
convert -> endswith;
convert -> load_safetensors;
convert -> pl_load;
convert -> MegatronLatentDiffusion;
convert -> load_config_and_state_from_nemo;
convert -> mapping_hf_state_dict;
convert -> load_state_dict;
convert -> MegatronControlNet;
convert -> MegatronDiffusionEngine;
convert -> TorchElasticEnvironment;
convert -> MegatronCLIPModel;
convert -> create_model_and_transforms;
convert -> mapping_openclip_state_dict;
convert -> inflect_engine;
convert -> convert_fraction;
convert -> sub;
convert -> convert_superscript;
convert -> process_url;
convert -> add_space_around_dash;
convert -> search;
convert -> index;
convert -> strip;
convert -> start;
convert -> enumerate;
convert -> convert2digits;
convert -> group;
convert -> len;
convert -> end;
convert -> lower;
convert -> number_to_words;
convert -> create;
convert -> isdir;
convert -> initialize_model_parallel_for_nemo;
convert -> megatron_lm_inject_model_parallel_rank;
convert -> save_checkpoint;
convert -> load_hparams_from_yaml;
convert -> RuntimeError;
convert -> items;
convert -> NotImplemented;
convert -> Path;
convert -> format;
convert -> build_key_mapping;
convert -> load_state_dict_helper;
convert -> torch_dtype_from_precision;
convert -> unflatten;
convert -> squeeze;
convert -> restore_from;
convert -> makedirs;
convert -> save;
convert -> device;
convert -> arange;
convert -> dirname;
convert -> adjust_nemo_config;
convert -> MegatronBertModel;
convert -> to_dict;
convert -> zeros;
convert -> create_rename_keys;
convert -> adjust_tensor_shapes;
convert -> rename_model_keys;
convert -> convert_config;
convert -> BertModel;
convert -> hf_tokenizer;
convert -> eval;
convert -> save_pretrained;
convert -> cuda;
convert -> no_grad;
convert -> hf_model;
convert -> average_pool;
convert -> normalize;
convert -> nemo_model;
convert -> sum;
convert -> any;
convert -> get_original_key;
convert -> MegatronGPTModel;
convert -> verify;
convert -> zip;
convert -> argmax;
convert -> unsqueeze;
convert -> get_ltor_masks_and_position_ids;
convert -> model;
convert -> LongTensor;
convert -> cpu;
convert -> decode;
convert -> _convert_id_to_token;
convert -> param_remapper;
convert -> nest_params;
convert -> from_params;
convert -> load_params;
convert -> realpath;
convert -> from_numpy;
convert -> astype;
convert -> device_get;
convert -> Tokenizer;
convert -> min;
convert -> max;
convert -> full;
convert -> index_select;
convert -> pyt_model;
convert -> get_config_for_2b;
convert -> get_config_for_7b;
convert -> _set_default_tensor_type;
convert -> CausalLM;
convert -> load_weights;
convert -> encode;
convert -> tensor;
convert -> get_dtype;
convert -> triu;
convert -> FloatTensor;
convert -> tuple;
convert -> restore_model;
convert -> get_mcore_model_from_nemo_file;
convert -> register_artifact;
convert -> MegatronGriffinModel;
convert -> flatten;
convert -> MegatronLMPPTrainerBuilder;
convert -> _from_config;
convert -> chunk;
convert -> update;
convert -> perf_counter;
convert -> glob;
convert -> sorted;
convert -> basename;
convert -> reduce;
convert -> Parameter;
convert -> norm;
convert -> collect;
convert -> MegatronNevaModel;
convert -> reverse_adjust_tensor_shapes;
convert -> defaultdict;
convert -> MegatronMambaModel;
convert -> set;
convert -> match;
convert -> groups;
convert -> map;
convert -> AssertionError;
convert -> load_mistral_ckpt;
convert -> getattr;
convert -> Exception;
convert -> load_mixtral_ckpt;
convert -> get_tokenizer_path;
convert -> hf_processor;
convert -> text_model;
convert -> allclose;
convert -> vision_model;
convert -> hf_text_model;
convert -> hf_vision_model;
convert -> load_hf_ckpt;
convert -> model_to_tree;
convert -> hf_to_nemo_mapping;
convert -> convert_input_keys;
convert -> convert_cond_keys;
convert -> convert_middle_keys;
convert -> convert_output_keys;
convert -> convert_finalout_keys;
convert -> dup_convert_name_recursive;
convert -> convert_encoder;
convert -> convert_decoder;
convert -> error;
convert -> load_sc2_ckpt;
convert -> seed;
convert -> sample;
convert -> dump;
convert -> choice;
convert -> round;
convert -> rstrip;
convert -> time_to_string;
convert -> get_prompt;
convert -> process;
convert -> add_handlers;
convert -> mkdir;
convert -> ShardWriter;
convert -> dumps;
convert -> tqdm;
convert -> write;
convert -> isinstance;
convert -> normpath;
convert -> fetch_video;
convert -> array;
convert -> fetch_image;
create_trainer -> _training_strategy;
create_trainer -> _plugins;
create_trainer -> Trainer;
create_trainer -> get;
create_trainer -> _callbacks;
create_trainer -> open_dict;
initialize_model_parallel -> destroy_model_parallel;
initialize_model_parallel -> initialize_distributed;
initialize_model_parallel -> initialize_model_parallel;
inject_model_parallel_rank -> uninject_model_parallel_rank;
inject_model_parallel_rank -> AppState;
inject_model_parallel_rank -> dirname;
inject_model_parallel_rank -> basename;
_set_model_restore_state -> AppState;
cls -> hasattr;
cls -> AttributeError;
cls -> type;
cls -> fixture;
register_artifact -> register_artifact;
register_artifact -> super;
register_artifact -> NeMoBaseException;
register_artifact -> hasattr;
register_artifact -> keys;
register_artifact -> warning;
register_artifact -> Path;
register_artifact -> AppState;
register_artifact -> ArtifactItem;
register_artifact -> basename;
register_artifact -> exists;
register_artifact -> abspath;
register_artifact -> startswith;
register_artifact -> join;
register_artifact -> open_dict;
register_artifact -> update;
register_artifact -> FileNotFoundError;
load_config -> get;
load_config -> int;
load_config -> load;
load_config -> join;
load_config -> exists;
load_config -> isdir;
load_config -> update;
load_config -> ValueError;
load_config -> dirname;
load_config -> open;
load_config -> isfile;
load_config -> TemporaryDirectory;
load_config -> detect_prefix;
load_config -> extract;
load_config -> FileNotFoundError;
load_config -> getnames;
load_config -> getattr;
load_config -> remove;
load_config -> dump;
load_config -> getsize;
load_config -> from_pretrained;
load_config -> hasattr;
load_config -> warning;
update -> isinstance;
update -> zip;
update -> parse_semantics_str2dict;
update -> scenario_f1;
update -> action_f1;
update -> intent_f1;
update -> span_f1;
update -> items;
update -> int;
update -> metric;
update -> update;
update -> no_grad;
update -> cpu;
update -> range;
update -> decode;
update -> info;
update -> move_dimension_to_the_front;
update -> item;
update -> tolist;
update -> decode_tokens_to_str;
update -> append;
update -> super;
update -> long;
update -> numpy;
update -> cat;
update -> bool;
update -> sum;
update -> prod;
update -> logical_and;
update -> tensor;
update -> round;
update -> len;
update -> eval;
update -> list;
update -> split;
update -> _select_channel;
update -> size;
update -> _trim_inputs;
update -> _squim_mos_metric_model;
update -> numel;
update -> _squim_mos_metric_resampler;
update -> unsqueeze;
update -> ValueError;
update -> _squim_objective_metric_model;
update -> _squim_objective_metric_resampler;
update -> wait_stream;
update -> stream;
update -> tuple;
update -> Thread;
update -> start;
update -> current_stream;
update -> ema_update;
update -> to;
update -> all_parameters;
update -> top_k_predicted_labels;
update -> t;
update -> expand_as;
update -> eq;
update -> view;
update -> reshape;
update -> getattr;
update -> setattr;
update -> warn;
update -> f1_score;
update -> max;
update -> detach;
update -> Categorical;
update -> perplexity;
update -> squeeze;
update -> exp;
update -> ones_like;
update -> gather;
update -> _check_scale_growth_tracker;
update -> defaultdict;
update -> all_reduce;
update -> fill_;
update -> copy_;
update -> update_scale_hysteresis;
update -> values;
update -> get_model_parallel_group;
update -> _amp_update_scale_;
update -> reset;
update -> fp32_precision;
update -> transcribe;
update -> normalizer;
update -> sentence_bleu;
param_to_weights -> to;
do_inference -> enumerate;
do_inference -> print;
do_inference -> extend;
do_inference -> generate;
do_inference -> copy;
generate -> NotImplementedError;
generate -> info;
generate -> default_rng;
generate -> endswith;
generate -> items;
generate -> join;
generate -> save;
generate -> range;
generate -> write_manifest;
generate -> plot_rir_manifest_info;
generate -> exists;
generate -> isfile;
generate -> RuntimeError;
generate -> makedirs;
generate -> generate_room_params;
generate -> generate_array;
generate -> generate_source_position;
generate -> append;
generate -> tqdm;
generate -> relpath;
generate -> isdir;
generate -> get;
generate -> cpu_count;
generate -> Pool;
generate -> list;
generate -> len;
generate -> simulate_room;
generate -> listdir;
generate -> imap;
generate -> plot_mix_manifest_info;
generate -> generate_target;
generate -> generate_interference;
generate -> generate_mix;
generate -> dirname;
generate -> update;
generate -> zip;
generate -> repeat;
generate -> simulate_room_mix;
generate -> basename;
generate -> entrypoint;
generate -> setup_model_and_tokenizer;
generate -> generate;
generate -> max;
generate -> min;
generate -> all_gather_object;
generate -> is_global_rank_zero;
generate -> isinstance;
generate -> open;
generate -> ValueError;
generate -> loads;
generate -> get_data_parallel_group;
generate -> write;
generate -> readlines;
generate -> tokenize;
generate -> type;
generate -> pop;
generate -> dumps;
generate -> MCoreEngine;
generate -> EncoderDecoderTextGenerationController;
generate -> TextGenerationController;
generate -> CommonInferenceParams;
generate -> megatron_neva_generate;
generate -> is_initialized;
generate -> setup_environment;
generate -> get_default_sampling_params;
generate -> get_default_length_params;
generate -> cuda;
generate -> launch;
generate -> synced_generate;
generate -> set;
generate -> model_inference_strategy_dispatcher;
generate -> hasattr;
generate -> add;
generate -> tolist;
generate -> post_generation_process;
generate -> ids_to_text;
generate -> enumerate;
generate -> tokenize_batch;
generate -> numpy;
generate -> text_to_tokens;
generate -> ids_to_tokens;
generate -> cpu;
generate -> decode;
generate -> bytearray;
generate -> megatron_gpt_generate;
generate -> setup_transformer_engine_tp_groups;
generate -> setup_transformer_engine_cp_groups;
generate -> build_virtual_prompt_dataset;
generate -> inference_collate_fn;
generate -> keys;
generate -> disable_checks;
generate -> get_rank;
generate -> get_model_parallel_src_rank;
generate -> send_generate_info;
generate -> receive_generate_info;
generate -> seed_everything;
generate -> tokenize_neighbors_batch;
generate -> get_model_parallel_group;
generate -> broadcast;
generate -> empty;
generate -> current_device;
generate -> no_grad;
generate -> to;
generate -> resolve;
generate -> where;
generate -> embed_tokens;
generate -> replace_placeholders_and_build_targets;
generate -> move_embedding;
generate -> collate_vectors;
generate -> perception;
generate -> encode_dialog;
generate -> unsqueeze;
generate -> VLMTextGenerationController;
generate -> VLMEngine;
generate -> run_engine;
generate -> manual_seed;
generate -> tokenize_prompt;
generate -> add_request;
generate -> tokenizer;
generate -> is_tensor;
generate -> batch_decode;
generate -> preprocess;
generate -> start;
generate -> stack;
generate -> stop;
generate -> mpi_rank;
generate -> strip;
generate -> prepare_input_tensors;
generate -> forward;
generate -> to_word_list_format;
generate -> contiguous;
generate -> IntTensor;
generate -> Tensor;
generate -> apply_chat_template;
generate -> reshape;
generate -> expand_as;
generate -> clone;
generate -> size;
generate -> processor;
generate -> tensor;
generate -> model;
generate -> argmax;
generate -> cat;
generate -> print;
generate -> item;
generate -> arange;
generate -> long;
generate -> setup_inference_wrapper;
generate -> vlm_generate;
generate -> NevaTokenizer;
generate -> encode;
create_neva_model_and_processor -> Trainer;
create_neva_model_and_processor -> freeze;
create_neva_model_and_processor -> get;
create_neva_model_and_processor -> append;
create_neva_model_and_processor -> NLPSaveRestoreConnector;
create_neva_model_and_processor -> isdir;
create_neva_model_and_processor -> restore_from;
create_neva_model_and_processor -> set_struct;
create_neva_model_and_processor -> isinstance;
create_neva_model_and_processor -> process_image;
create_neva_model_and_processor -> unsqueeze;
create_neva_model_and_processor -> type;
create_neva_model_and_processor -> TorchElasticEnvironment;
create_neva_model_and_processor -> NLPDDPStrategy;
create_neva_model_and_processor -> open_dict;
create_neva_model_and_processor -> AppState;
create_neva_model_and_processor -> inject_model_parallel_rank;
create_neva_model_and_processor -> load_from_checkpoint;
create_neva_model_and_processor -> ValueError;
create_neva_model_and_processor -> convert;
create_neva_model_and_processor -> hasattr;
create_neva_model_and_processor -> VideoReader;
create_neva_model_and_processor -> int;
create_neva_model_and_processor -> torch_dtype_from_precision;
create_neva_model_and_processor -> load_adapters;
create_neva_model_and_processor -> fake_initialize_model_parallel;
create_neva_model_and_processor -> join;
create_neva_model_and_processor -> max;
create_neva_model_and_processor -> min;
create_neva_model_and_processor -> preprocess;
create_neva_model_and_processor -> peft_cfg_cls;
create_neva_model_and_processor -> open;
create_neva_model_and_processor -> expand2square;
create_neva_model_and_processor -> tuple;
create_neva_model_and_processor -> fromarray;
create_neva_model_and_processor -> linspace;
create_neva_model_and_processor -> new;
create_neva_model_and_processor -> paste;
create_neva_model_and_processor -> asnumpy;
create_neva_model_and_processor -> len;
quantize -> round_ste;
quantize -> bound;
quantize -> info;
quantize -> _setup;
quantize -> _get_decoder_type;
quantize -> _get_quant_cfg;
quantize -> quantize;
quantize -> is_global_rank_zero;
quantize -> _get_forward_loop;
quantize -> unwrap_for_modelopt_operations;
quantize -> postprocess_amax;
quantize -> print_quant_summary;
quantize -> _generate_sample;
quantize -> pformat;
quantize -> clamp;
quantize -> QuantDescriptor;
quantize -> TensorQuantizer;
quantize -> _nf4_quantizer;
quantize -> to;
quantize -> typecheck;
quantize -> encode;
quantize -> rearrange;
quantize -> ValueError;
quantize -> NeuralType;
quantize -> EncodedRepresentation;
quantize -> tuple;
quantize -> LengthsType;
quantize -> TokenIndex;
quantize -> get_rank;
group_by_media -> rstrip;
group_by_media -> list;
group_by_media -> append;
group_by_media -> items;
group_by_media -> lstrip;
__len__ -> len;
__len__ -> int;
__len__ -> ceil;
__len__ -> float;
__len__ -> NotImplementedError;
__len__ -> sum;
__len__ -> keys;
__len__ -> UnavailableError;
__getitem__ -> append;
__getitem__ -> join;
__getitem__ -> image_processor;
__getitem__ -> video_processor;
__getitem__ -> collate_matrices;
__getitem__ -> collate_vectors;
__getitem__ -> masked_fill;
__getitem__ -> reshape;
__getitem__ -> load_audio;
__getitem__ -> processor;
__getitem__ -> squeeze;
__getitem__ -> convert;
__getitem__ -> transform;
__getitem__ -> open;
__getitem__ -> parse_rttm_for_ms_targets;
__getitem__ -> process;
__getitem__ -> long;
__getitem__ -> get_ms_seg_timestamps;
__getitem__ -> manual_seed;
__getitem__ -> cat;
__getitem__ -> tensor;
__getitem__ -> randperm;
__getitem__ -> unsqueeze;
__getitem__ -> len;
__getitem__ -> stack;
__getitem__ -> range;
__getitem__ -> permute;
__getitem__ -> splitext;
__getitem__ -> keys;
__getitem__ -> ValueError;
__getitem__ -> parse_rttm_multiscale;
__getitem__ -> float;
__getitem__ -> basename;
__getitem__ -> zeros;
__getitem__ -> get_segment_timestamps;
__getitem__ -> parse_rttm_for_targets_and_lens;
__getitem__ -> min;
__getitem__ -> floor;
__getitem__ -> round;
__getitem__ -> to;
__getitem__ -> speaker_to_target;
__getitem__ -> get_hidden_length_from_sample_length;
__getitem__ -> _label_str_to_tensor;
__getitem__ -> size;
__getitem__ -> isinstance;
__getitem__ -> _process_sample;
__getitem__ -> drop_in_memory_data;
__getitem__ -> as_tensor;
__getitem__ -> hasattr;
__getitem__ -> tokenizer;
__getitem__ -> all;
__getitem__ -> _collate_tokens;
__getitem__ -> PromptedAudioToTextMiniBatch;
__getitem__ -> zip;
__getitem__ -> apply_prompt_format_fn;
__getitem__ -> _drop_in_memory_data;
__getitem__ -> process_text_by_sample;
__getitem__ -> process_features_with_rttm;
__getitem__ -> normalize_feature;
__getitem__ -> int;
__getitem__ -> pad_audio;
__getitem__ -> sample_noise;
__getitem__ -> AudioNoiseItem;
__getitem__ -> warning;
__getitem__ -> item;
__getitem__ -> str;
__getitem__ -> _audio_noise_collate_fn;
__getitem__ -> TextToTextItem;
__getitem__ -> choice;
__getitem__ -> from_numpy;
__getitem__ -> get_nested_dict_value;
__getitem__ -> AudioSegment;
__getitem__ -> perturb;
__getitem__ -> process_text;
__getitem__ -> get_item;
__getitem__ -> IndexError;
__getitem__ -> collate_audio;
__getitem__ -> enumerate;
__getitem__ -> from_cuts;
__getitem__ -> _key_available;
__getitem__ -> update;
__getitem__ -> collate_custom_field;
__getitem__ -> randn;
__getitem__ -> ones;
__getitem__ -> get_pos_id_3d;
__getitem__ -> _process_example;
__getitem__ -> error;
__getitem__ -> default_rng;
__getitem__ -> integers;
__getitem__ -> random;
__getitem__ -> tolist;
__getitem__ -> digitize;
__getitem__ -> _fetch_sample_from_memmap;
__getitem__ -> _build_data_from_text;
__getitem__ -> handle_index;
__getitem__ -> get_sample_block;
__getitem__ -> _get_gpt_batch;
__getitem__ -> _modify_gpt_batch;
__getitem__ -> _process_src;
__getitem__ -> _process_tgt;
__getitem__ -> load;
__getitem__ -> get_image;
__getitem__ -> Path;
__getitem__ -> resize;
__getitem__ -> rearrange;
__getitem__ -> RandomCrop;
__getitem__ -> RandomHorizontalFlip;
__getitem__ -> chunk;
__getitem__ -> dict;
__getitem__ -> joinpath;
__getitem__ -> randint;
__getitem__ -> flip;
__getitem__ -> crop;
__getitem__ -> array;
__getitem__ -> circle_poses;
__getitem__ -> compute_intrinsics;
__getitem__ -> compute_projection_matrix;
__getitem__ -> get_rays;
__getitem__ -> inverse;
__getitem__ -> FloatTensor;
__getitem__ -> preprocess_conversations;
__getitem__ -> open_image;
__getitem__ -> process_image;
__getitem__ -> preprocess_multimodal;
__getitem__ -> deepcopy;
__getitem__ -> open_video;
__getitem__ -> max;
__getitem__ -> preprocess;
__getitem__ -> expand2square;
__getitem__ -> tuple;
__getitem__ -> new;
__getitem__ -> paste;
__getitem__ -> IntTensor;
__getitem__ -> LongTensor;
__getitem__ -> _transform;
__getitem__ -> endswith;
__getitem__ -> type;
__getitem__ -> filter;
__getitem__ -> collate_text_data;
__getitem__ -> getattr;
__getitem__ -> list;
__getitem__ -> collate_vectors_lhotse;
__getitem__ -> _get_sample;
__getitem__ -> concatenate;
__getitem__ -> get_n_tokens_in_sentence;
__getitem__ -> format_prompt;
__getitem__ -> default_encode;
__getitem__ -> copy;
__getitem__ -> format_target;
__getitem__ -> format_actions;
__getitem__ -> seek;
__getitem__ -> split;
__getitem__ -> readline;
__getitem__ -> strip;
__getitem__ -> _preprocess_fn;
__getitem__ -> astype;
__getitem__ -> randrange;
__getitem__ -> get_document;
__getitem__ -> match_target_seq_length;
__getitem__ -> truncate_seq_pair;
__getitem__ -> mask_ids;
__getitem__ -> isdir;
__getitem__ -> extend;
__getitem__ -> decode;
__getitem__ -> text_to_ids;
__getitem__ -> pop;
__getitem__ -> abs;
__getitem__ -> zeros_like;
__getitem__ -> nonzero;
__getitem__ -> RandomState;
__getitem__ -> create_masked_lm_predictions;
__getitem__ -> pad_and_convert_to_numpy;
__getitem__ -> build_training_sample;
__getitem__ -> get_ds_sample_idx;
__getitem__ -> _get_text;
__getitem__ -> contiguous;
__getitem__ -> roll;
__getitem__ -> _create_ltor_masks_and_position_ids;
__getitem__ -> debug;
__getitem__ -> read_data;
__getitem__ -> check_index;
__getitem__ -> empty;
__getitem__ -> readinto;
__getitem__ -> indices;
__getitem__ -> sum;
__getitem__ -> accumulate;
__getitem__ -> copyto;
__getitem__ -> frombuffer;
__getitem__ -> lru_cache;
__getitem__ -> get_prefix_lm_sample;
__getitem__ -> super;
__getitem__ -> get_ltor_masks_and_position_ids;
__getitem__ -> view;
__getitem__ -> get_r_masking_training_sample;
__getitem__ -> get_x_masking_training_sample;
__getitem__ -> get_s_masking_training_sample;
__getitem__ -> build_training_sample_bert;
__getitem__ -> get_example;
__getitem__ -> create_sample;
__getitem__ -> insert;
__getitem__ -> convert_label_ids;
__getitem__ -> items;
__getitem__ -> text_processor;
__getitem__ -> collate_audio_data;
__getitem__ -> _get_metadata;
__getitem__ -> transform_text;
__getitem__ -> collate_token_channel;
__getitem__ -> resample;
__getitem__ -> list_cuts;
__getitem__ -> CutSet;
__getitem__ -> with_suffix;
__getitem__ -> replace;
__getitem__ -> locals;
__getitem__ -> get;
__getitem__ -> segment_from_file;
__getitem__ -> text_tokenizer;
__getitem__ -> pyin;
__getitem__ -> exists;
__getitem__ -> get_reference_for_sample;
__getitem__ -> relative_to;
__getitem__ -> _pad_wav_to_multiple;
__getitem__ -> pitch_shift;
__getitem__ -> format;
__getitem__ -> numpy;
__getitem__ -> __setitem__;
__getitem__ -> save;
__getitem__ -> get_spec;
__getitem__ -> get_log_mel;
__getitem__ -> beta_binomial_interpolator;
__getitem__ -> beta_binomial_prior_distribution;
__getitem__ -> norm;
__getitem__ -> detach;
__getitem__ -> cpu;
__getitem__ -> __getitem__;
__getitem__ -> ceil;
__getitem__ -> pad;
__getitem__ -> _get_wav_from_filepath;
__getitem__ -> get_ssl_features;
__getitem__ -> get_mel_spectrogram;
__getitem__ -> get_pitch_contour;
__getitem__ -> uniform;
__getitem__ -> isnan;
__getitem__ -> samples_to_frames;
__getitem__ -> encode;
__getitem__ -> full;
__getitem__ -> repeat;
__getitem__ -> _read_audio;
__getitem__ -> get_num_audio_samples_to_slice;
__getitem__ -> tile;
__getitem__ -> text_conditioning_tokenizer;
__getitem__ -> sample_audio;
__getitem__ -> _input_sanity_checks;
__getitem__ -> _insert_data_in_template;
__getitem__ -> _insert_virtual_token_placeholders;
__getitem__ -> list_to_tensor;
__getitem__ -> startswith;
__getitem__ -> _get_len;
__getitem__ -> _truncate_input_speech;
__getitem__ -> pad_text_to_speech_dims;
__getitem__ -> _get_tokens;
__getitem__ -> dim;
__getitem__ -> target_transform;
__getitem__ -> loader;
__getitem__ -> seed;
__getitem__ -> get_value;
__getitem__ -> encode_sample;
__getitem__ -> prepare_image_inputs;
__getitem__ -> arange;
__getitem__ -> clone;
__getitem__ -> bfloat16;
__getitem__ -> get_number_of_features;
__getitem__ -> standard_normal;
__getitem__ -> _apply_prompt_templates;
__getitem__ -> _tokenize_and_label;
__getitem__ -> _process_images;
__getitem__ -> prod;
__getitem__ -> _process_vision;
__getitem__ -> read;
__getitem__ -> AttributeError;
__getitem__ -> eval;
__getitem__ -> safe_open;
__getitem__ -> get_tensor;
__getitem__ -> is_prefix;
__getitem__ -> any;
__getitem__ -> numdots;
__getitem__ -> split_name;
__getitem__ -> where;
image_processor -> isinstance;
image_processor -> process_image;
image_processor -> unsqueeze;
image_processor -> convert;
image_processor -> hasattr;
image_processor -> type;
image_processor -> open;
video_processor -> isinstance;
video_processor -> type;
video_processor -> unsqueeze;
video_processor -> VideoReader;
video_processor -> hasattr;
video_processor -> int;
video_processor -> torch_dtype_from_precision;
video_processor -> max;
video_processor -> min;
video_processor -> preprocess;
video_processor -> convert;
video_processor -> expand2square;
video_processor -> tuple;
video_processor -> fromarray;
video_processor -> linspace;
video_processor -> new;
video_processor -> paste;
video_processor -> asnumpy;
video_processor -> len;
video_processor -> append;
forward_loop -> get;
forward_loop -> TemporalNevaDataset;
forward_loop -> DataLoader;
forward_loop -> do_inference;
forward_loop -> do_calibrate;
forward_loop -> get_calib_data_iter;
forward_loop -> set_inference_config;
forward_loop -> enumerate;
forward_loop -> to_container;
forward_loop -> tqdm;
forward_loop -> predict_step;
forward_loop -> islice;
forward_loop -> iter;
forward_loop -> range;
forward_loop -> fwd_bwd_step;
forward_loop -> load_image;
forward_loop -> generate;
forward_loop -> print;
merge_cfg_with -> restore_from;
merge_cfg_with -> resolve;
merge_cfg_with -> open_dict;
merge_cfg_with -> items;
merge_cfg_with -> get;
load_adapters -> endswith;
load_adapters -> add_adapter;
load_adapters -> _modify_state_dict;
load_adapters -> load_state_dict;
load_adapters -> keys;
load_adapters -> is_available;
load_adapters -> _get_config_and_state_dict_from_nemo;
load_adapters -> set;
load_adapters -> replace;
load_adapters -> RuntimeError;
load_adapters -> super;
load_adapters -> load;
load_adapters -> union;
load_adapters -> replace_prefix;
load_adapters -> warning;
load_adapters -> get_peft_state_dict;
load_adapters -> items;
load_adapters -> len;
load_adapters -> critical;
load_adapters -> ValueError;
load_adapters -> getattr;
load_adapters -> sharded_state_dict;
load_adapters -> _peft_cfg;
load_adapters -> split;
load_adapters -> pop;
load_adapters -> isinstance;
load_adapters -> list;
load_adapters -> resolve_adapter_module_name_;
load_adapters -> modules;
load_adapters -> zip;
load_adapters -> hasattr;
load_adapters -> KeyError;
load_adapters -> get_adapter_module;
load_adapters -> append;
summarize -> sorted;
summarize -> defaultdict;
summarize -> print;
summarize -> open;
summarize -> items;
summarize -> tolist;
summarize -> loads;
summarize -> round;
summarize -> append;
summarize -> mean;
summarize -> asarray;
summarize -> summarize;
iou -> max;
iou -> min;
precision_func -> float;
precision_func -> iou;
parse_start_end_timestamps -> compile;
parse_start_end_timestamps -> list;
parse_start_end_timestamps -> range;
parse_start_end_timestamps -> strip;
parse_start_end_timestamps -> finditer;
parse_start_end_timestamps -> start;
parse_start_end_timestamps -> end;
parse_start_end_timestamps -> float;
parse_start_end_timestamps -> min;
parse_start_end_timestamps -> append;
parse_start_end_timestamps -> len;
parse_start_end_timestamps -> max;
parse_start_end_timestamps -> group;
compile -> to;
compile -> clone;
compile -> compose_with_self_loops;
compile -> requires_grad_;
compile -> tolist;
compile -> zip;
compile -> linear_fsa;
compile -> arc_sort;
compile -> compile;
compile -> ValueError;
compile -> invert;
compile -> super;
compile -> intersect_with_self_loops;
compile -> create_fsa_vec;
compile -> detach;
compile -> add_self_loops;
compile -> intersect;
compile -> _builder;
compile -> where;
compile -> max;
precision -> float;
precision -> iou;
request_nvidia_api -> getenv;
request_nvidia_api -> post;
request_nvidia_api -> iter_lines;
request_nvidia_api -> strip;
request_nvidia_api -> ValueError;
request_nvidia_api -> loads;
request_nvidia_api -> lstrip;
request_nvidia_api -> split;
request_nvidia_api -> decode;
decode -> _prepare_log_probs_and_targets;
decode -> _decode_impl;
decode -> NotImplementedError;
decode -> inference_mode;
decode -> create_supervision;
decode -> DenseFsaVec;
decode -> _decode_lattice;
decode -> _post_decode;
decode -> to;
decode -> contiguous;
decode -> _decode;
decode -> items;
decode -> join;
decode -> len;
decode -> append;
decode -> item;
decode -> reversed;
decode -> reverse_convert_to_int;
decode -> str;
decode -> range;
decode -> int;
decode -> max;
decode -> abs;
decode -> log10;
decode -> decode;
decode -> ValueError;
decode -> ids_to_tokens;
decode -> tokens_to_text;
decode -> no_grad;
decode -> _dec_model;
decode -> post_quant_conv;
decode -> decoder;
decode -> rearrange;
decode -> quantize;
decode -> flip;
decode -> print;
decode -> tqdm;
decode -> enumerate;
decode -> arange;
decode -> full;
decode -> p_sample_ddim;
decode -> get_sampling_token_fn;
decode -> AppState;
decode -> get_num_microbatches;
decode -> reconfigure_num_microbatches_calculator;
decode -> info;
decode -> model_parallel_is_initialized;
decode -> setup_environment;
decode -> size;
decode -> encode;
decode -> _get_forward_output_only_func;
decode -> get_forward_backward_func;
decode -> fwd_bwd_func;
decode -> is_pipeline_last_stage;
decode -> launch;
decode -> get_data_parallel_world_size;
decode -> zeros;
decode -> get;
decode -> gather_from_tensor_model_parallel_region;
decode -> sample_token_fn;
decode -> clamp;
decode -> cuda;
decode -> broadcast;
decode -> compute_beam_search_len_penalty;
decode -> view;
decode -> argmax;
decode -> gather;
decode -> unsqueeze;
decode -> squeeze;
decode -> iter;
decode -> get_micro_batch_size;
decode -> float;
decode -> index_fill;
decode -> cat;
decode -> get_pipeline_model_parallel_last_rank;
decode -> clone;
decode -> repeat;
decode -> long;
decode -> fill_;
decode -> get_pipeline_model_parallel_group;
decode -> LongTensor;
decode -> tensor;
decode -> ne;
decode -> zeros_like;
decode -> sum;
decode -> typecheck;
decode -> dequantize;
decode -> decode_audio;
decode -> NeuralType;
decode -> TokenIndex;
decode -> tuple;
decode -> LengthsType;
decode -> AudioSignal;
decode -> Index;
decode -> EncodedRepresentation;
decode -> nonnegative_to_codes;
decode -> mask_sequence_tensor;
decode -> chunk;
decode -> zip;
decode -> _dequantize;
decode -> _mask_3d;
decode -> attention_rnn;
decode -> dropout;
decode -> attention_layer;
decode -> decoder_rnn;
decode -> linear_projection;
decode -> gate_layer;
decode -> tolist;
convert_time_token -> sub;
get_result -> request_nvidia_api;
get_result -> literal_eval;
get_result -> print;
get_result -> open;
get_result -> dump;
get_eval -> post;
get_eval -> iter_lines;
get_eval -> print;
get_eval -> loads;
get_eval -> split;
get_eval -> decode;
parse_score -> replace;
parse_score -> split;
parse_score -> len;
parse_score -> print;
parse_score -> float;
generate_prompt -> open;
generate_prompt -> load;
generate_prompt -> isfile;
generate_prompt -> zip;
generate_prompt -> close;
generate_prompt -> expanduser;
generate_prompt -> loads;
generate_prompt -> isinstance;
generate_prompt -> print;
generate_prompt -> join;
generate_prompt -> get;
generate_prompt -> len;
generate_prompt -> get_eval;
generate_prompt -> parse_score;
generate_prompt -> write;
generate_prompt -> flush;
generate_prompt -> dumps;
split_list -> ceil;
split_list -> len;
split_list -> range;
split_list -> divmod;
split_list -> min;
get_chunk -> split_list;
get_chunk -> isinstance;
get_chunk -> get_chunk_address;
get_chunk -> frombuffer;
get_chunk -> indices;
get_chunk -> ValueError;
preprocess -> get_chunk;
preprocess -> splitext;
preprocess -> join;
preprocess -> expanduser;
preprocess -> makedirs;
preprocess -> open;
preprocess -> tqdm;
preprocess -> close;
preprocess -> loads;
preprocess -> basename;
preprocess -> dirname;
preprocess -> zip;
preprocess -> len;
preprocess -> int;
preprocess -> uuid;
preprocess -> write;
preprocess -> flush;
preprocess -> dumps;
preprocess -> strip;
preprocess -> replace;
preprocess -> sub;
preprocess -> _get_header_conversation_type_mask_role;
preprocess -> text_to_ids;
preprocess -> deepcopy;
preprocess -> equal;
preprocess -> split;
preprocess -> LongTensor;
preprocess -> _mask_targets;
preprocess -> bool;
preprocess -> dict;
preprocess -> tensor;
preprocess -> append;
preprocess -> item;
preprocess -> sum;
preprocess -> nonzero;
preprocess -> to;
preprocess -> setup_fake_prompts;
preprocess -> start;
preprocess -> stop;
preprocess -> get_visual_features;
preprocess -> tokenizer_image_token;
preprocess -> split_prompt_by_images;
preprocess -> setup_fake_prompts_vila;
preprocess -> capitalize;
preprocess -> enumerate;
preprocess -> unsqueeze;
preprocess -> preprocess_lita_visual;
preprocess -> extend;
preprocess -> insert_tokens_by_index;
preprocess -> view;
preprocess -> cat;
preprocess -> IntTensor;
preprocess -> ValueError;
preprocess -> tokenizer;
preprocess -> ones;
preprocess -> size;
preprocess -> get_modality_encoder_features;
preprocess -> numpy;
preprocess -> range;
preprocess -> max;
preprocess -> ptuning_setup;
preprocess -> arange;
preprocess -> concatenate;
preprocess -> pad;
preprocess -> cpu;
eval_model -> create;
eval_model -> create_neva_model_and_processor;
eval_model -> load;
eval_model -> get_chunk;
eval_model -> expanduser;
eval_model -> makedirs;
eval_model -> is_global_rank_zero;
eval_model -> enumerate;
eval_model -> open;
eval_model -> dirname;
eval_model -> tqdm;
eval_model -> strip;
eval_model -> generate;
eval_model -> close;
eval_model -> image_processor;
eval_model -> uuid;
eval_model -> write;
eval_model -> flush;
eval_model -> replace;
eval_model -> join;
eval_model -> dict;
eval_model -> dumps;
eval_model -> get;
first_fit -> min;
first_fit -> tqdm;
first_fit -> enumerate;
first_fit -> append;
first_fit -> sum;
first_fit -> find_first_bin_that_fits;
chunkify -> range;
chunkify -> len;
chunkify -> reshape;
chunkify -> transpose;
chunkify -> contiguous;
chunkify -> zeros;
chunkify -> cat;
parallel_first_fit -> list;
parallel_first_fit -> chunkify;
parallel_first_fit -> first_fit;
parallel_first_fit -> ThreadPoolExecutor;
parallel_first_fit -> as_completed;
parallel_first_fit -> submit;
parallel_first_fit -> extend;
parallel_first_fit -> result;
submit -> print;
submit -> flush;
first_fit_decreasing -> sorted;
first_fit_decreasing -> first_fit;
first_fit_shuffle -> shuffle;
first_fit_shuffle -> parallel_first_fit;
first_fit_shuffle -> first_fit;
shuffle_and_pack -> array;
shuffle_and_pack -> shuffle;
shuffle_and_pack -> tqdm;
shuffle_and_pack -> append;
pack_sequence -> seed;
pack_sequence -> packing_fn;
pack_sequence -> globals;
get_nmt_tokenizer -> isinstance;
get_nmt_tokenizer -> to_container;
get_nmt_tokenizer -> ValueError;
get_nmt_tokenizer -> info;
get_nmt_tokenizer -> AutoTokenizer;
get_nmt_tokenizer -> SentencePieceTokenizer;
get_nmt_tokenizer -> ByteLevelTokenizer;
get_nmt_tokenizer -> isfile;
get_nmt_tokenizer -> load_tokenizer;
get_nmt_tokenizer -> get_tokenizer;
get_nmt_tokenizer -> RegExTokenizer;
get_nmt_tokenizer -> TabularTokenizer;
get_nmt_tokenizer -> TiktokenTokenizer;
get_nmt_tokenizer -> NullTokenizer;
get_nmt_tokenizer -> NotImplementedError;
get_nmt_tokenizer -> load;
get_nmt_tokenizer -> get;
get_nmt_tokenizer -> join;
get_nmt_tokenizer -> from_pretrained;
get_nmt_tokenizer -> print;
create_image_processor -> get;
create_image_processor -> from_pretrained;
create_image_processor -> image_transform;
create_image_processor -> hasattr;
create_image_processor -> ValueError;
finalize -> close;
finalize -> open;
finalize -> write;
finalize -> write_longs;
finalize -> pack;
finalize -> code;
finalize -> len;
finalize -> writer;
finalize -> mark_completed;
finalize -> mark_failed;
finalize -> mark_stopped;
make_supervised_data_module -> getattr;
make_supervised_data_module -> get;
make_supervised_data_module -> NevaDataset;
make_supervised_data_module -> dict;
add_item -> write;
add_item -> append;
add_item -> size;
add_item -> array;
add_item -> numpy;
add_item -> len;
add_item -> tobytes;
add_item -> pad;
end_document -> append;
end_document -> len;
match -> len;
match -> tuple;
match -> wildcard_match;
match -> append;
match -> isinstance;
match -> any;
process_chunk -> first_fit;
set_inference_config -> model_inference_strategy_dispatcher;
set_inference_config -> dict;
merge_inference_cfg -> hasattr;
merge_inference_cfg -> open_dict;
merge_inference_cfg -> items;
merge_inference_cfg -> restore_from;
merge_inference_cfg -> get;
merge_inference_cfg -> endswith;
merge_inference_cfg -> to_container;
merge_inference_cfg -> create;
merge_inference_cfg -> RuntimeError;
merge_inference_cfg -> load;
load_adapters_for_inference -> replace;
load_adapters_for_inference -> load_adapters;
load_adapters_for_inference -> load_state_dict;
load_adapters_for_inference -> join;
load_adapters_for_inference -> get;
load_adapters_for_inference -> peft_cfg_cls;
load_adapters_for_inference -> load;
load_adapters_for_inference -> isdir;
load_adapters_for_inference -> inject_model_parallel_rank;
load_adapters_for_inference -> NotImplementedError;
load_audio_encoder_for_inference -> get_audio_encoder_models_and_configs;
load_audio_encoder_for_inference -> get_speaker_model_and_config;
load_audio_encoder_for_inference -> load_pretrained_audio_weights;
load_audio_encoder_for_inference -> get;
load_audio_encoder_for_inference -> open_dict;
restore_from_pretrained_models -> merge_cfg_with;
restore_from_pretrained_models -> get_audio_encoder_models_and_configs;
restore_from_pretrained_models -> get_speaker_model_and_config;
restore_from_pretrained_models -> _modify_config;
restore_from_pretrained_models -> restore_from;
restore_from_pretrained_models -> load_pretrained_audio_weights;
restore_from_pretrained_models -> RuntimeError;
restore_from_pretrained_models -> info;
restore_from_pretrained_models -> to_container;
restore_from_pretrained_models -> set_inference_config;
restore_from_pretrained_models -> get;
restore_from_pretrained_models -> load_adapters;
restore_from_pretrained_models -> peft_cfg_cls;
restore_from_pretrained_models -> add_adapter;
restore_from_pretrained_models -> ValueError;
restore_from_pretrained_models -> summarize;
restore_from_pretrained_models -> NLPSaveRestoreConnector;
restore_from_pretrained_models -> isdir;
restore_from_pretrained_models -> load_audio_model;
restore_from_pretrained_models -> load_state_dict;
restore_from_pretrained_models -> state_dict;
get_config_and_state_dict_from_nemo -> getcwd;
get_config_and_state_dict_from_nemo -> NLPSaveRestoreConnector;
get_config_and_state_dict_from_nemo -> TemporaryDirectory;
get_config_and_state_dict_from_nemo -> isfile;
get_config_and_state_dict_from_nemo -> chdir;
get_config_and_state_dict_from_nemo -> listdir;
get_config_and_state_dict_from_nemo -> join;
get_config_and_state_dict_from_nemo -> system;
get_config_and_state_dict_from_nemo -> inject_model_parallel_rank;
get_config_and_state_dict_from_nemo -> _load_state_dict_from_disk;
get_config_and_state_dict_from_nemo -> _unpack_nemo_file;
get_config_and_state_dict_from_nemo -> endswith;
get_config_and_state_dict_from_nemo -> ValueError;
get_config_and_state_dict_from_nemo -> open;
get_config_and_state_dict_from_nemo -> load;
get_config_and_state_dict_from_nemo -> dict;
get_config_and_state_dict_from_nemo -> isdir;
get_config_and_state_dict_from_nemo -> splitext;
_load_state_dict_from_disk -> uninject_model_parallel_rank;
_load_state_dict_from_disk -> isfile;
_load_state_dict_from_disk -> _load_state_dict_from_disk;
_load_state_dict_from_disk -> isdir;
_load_state_dict_from_disk -> ValueError;
_load_state_dict_from_disk -> super;
_load_state_dict_from_disk -> splitext;
_load_state_dict_from_disk -> load;
_unpack_nemo_file -> _unpack_nemo_file;
_unpack_nemo_file -> super;
_unpack_nemo_file -> is_multistorageclient_url;
_unpack_nemo_file -> _unpack_nemo_file_with_multistorageclient;
_unpack_nemo_file -> _tar_open;
_unpack_nemo_file -> _safe_extract;
get_llm_model_state_dict -> items;
get_llm_model_state_dict -> startswith;
get_lora_state_dict -> items;
get_perception_state_dict -> items;
get_perception_state_dict -> startswith;
get_perception_state_dict -> replace;
save_llm_model -> get;
save_llm_model -> Trainer;
save_llm_model -> load_state_dict_helper;
save_llm_model -> NLPSaveRestoreConnector;
save_llm_model -> save_to;
save_llm_model -> info;
save_llm_model -> list;
save_llm_model -> keys;
save_llm_model -> pop;
save_llm_model -> NLPDDPStrategy;
save_llm_model -> replace;
load_state_dict_helper -> cls;
load_state_dict_helper -> load_state_dict;
load_state_dict_helper -> critical;
load_state_dict_helper -> RuntimeError;
load_state_dict_helper -> endswith;
save_nemo_weights -> join;
save_nemo_weights -> save;
save_nemo_weights -> exists;
save_nemo_weights -> mkdir;
save_nemo_weights -> open;
save_nemo_weights -> write;
save_nemo_weights -> system;
save_nemo_weights -> to_yaml;
separate_speechllm_model -> abspath;
separate_speechllm_model -> info;
separate_speechllm_model -> get_config_and_state_dict_from_nemo;
separate_speechllm_model -> get_perception_state_dict;
separate_speechllm_model -> get_lora_state_dict;
separate_speechllm_model -> get_llm_model_state_dict;
separate_speechllm_model -> exists;
separate_speechllm_model -> mkdir;
separate_speechllm_model -> split;
separate_speechllm_model -> join;
separate_speechllm_model -> save_nemo_weights;
separate_speechllm_model -> AudioPerceptionModule;
separate_speechllm_model -> load_state_dict;
separate_speechllm_model -> eval;
separate_speechllm_model -> print;
separate_speechllm_model -> save_llm_model;
separate_speechllm_model -> perception;
separate_speechllm_model -> basename;
separate_speechllm_model -> randn;
separate_speechllm_model -> tensor;
perception -> speech_model;
perception -> modality_adapter;
load_config_and_state_from_nemo -> is_available;
load_config_and_state_from_nemo -> NLPSaveRestoreConnector;
load_config_and_state_from_nemo -> getcwd;
load_config_and_state_from_nemo -> device;
load_config_and_state_from_nemo -> TemporaryDirectory;
load_config_and_state_from_nemo -> _unpack_nemo_file;
load_config_and_state_from_nemo -> chdir;
load_config_and_state_from_nemo -> join;
load_config_and_state_from_nemo -> load;
load_config_and_state_from_nemo -> _load_state_dict_from_disk;
mapping_hf_state_dict -> state_dict;
mapping_hf_state_dict -> items;
mapping_hf_state_dict -> split;
mapping_hf_state_dict -> int;
mapping_hf_state_dict -> replace;
mapping_hf_state_dict -> join;
mapping_hf_state_dict -> str;
mapping_hf_state_dict -> keys;
mapping_hf_state_dict -> reshape;
mapping_hf_state_dict -> startswith;
mapping_hf_state_dict -> endswith;
mapping_hf_state_dict -> concat;
mapping_hf_state_dict -> len;
mapping_hf_state_dict -> empty;
mapping_hf_state_dict -> range;
mapping_hf_state_dict -> cat;
get_control_input -> imread;
get_control_input -> resize;
get_control_input -> stack;
get_control_input -> rearrange;
get_control_input -> float;
get_control_input -> from_numpy;
get_control_input -> range;
stack -> stack;
stack -> getattr;
encode_prompt -> encode;
encode_prompt -> tokenize;
encode_prompt -> tokenizer;
encode_prompt -> to;
encode_prompt -> runEngine;
encode_prompt -> cat;
encode_prompt -> transpose;
encode_prompt -> clip;
encode_prompt -> t5;
encode_prompt -> zeros;
encode_prompt -> len;
encode -> NotImplementedError;
encode -> float;
encode -> convert_to_int;
encode -> range;
encode -> reversed;
encode -> append;
encode -> ValueError;
encode -> str;
encode -> array;
encode -> argmin;
encode -> warning;
encode -> abs;
encode -> int;
encode -> keys;
encode -> encode;
encode -> tokens_to_ids;
encode -> text_to_tokens;
encode -> text_preprocessing_func;
encode -> set;
encode -> pop;
encode -> len;
encode -> isalnum;
encode -> g2p;
encode -> encode_from_g2p;
encode -> no_grad;
encode -> _enc_model;
encode -> isinstance;
encode -> encoder;
encode -> quant_conv;
encode -> distribution;
encode -> quantizer;
encode -> self;
encode -> reg;
encode -> forward;
encode -> _average_pool;
encode -> normalize;
encode -> unsqueeze;
encode -> squeeze;
encode -> apply_prompt_template;
encode -> debug;
encode -> tokenize;
encode -> compute_labels;
encode -> contiguous;
encode -> compute_loss_mask;
encode -> process_image;
encode -> quantize;
encode -> DiagonalGaussianDistribution;
encode -> sample;
encode -> super;
encode -> batch_encode_plus;
encode -> to;
encode -> model;
encode -> detach;
encode -> item;
encode -> sum;
encode -> AppState;
encode -> get_num_microbatches;
encode -> get_forward_backward_func;
encode -> fwd_bwd_func;
encode -> transpose;
encode -> is_initialized;
encode -> setup_environment;
encode -> size;
encode -> reconfigure_num_microbatches_calculator;
encode -> _get_forward_output_only_func;
encode -> cuda;
encode -> get;
encode -> broadcast;
encode -> launch;
encode -> iter;
encode -> get_micro_batch_size;
encode -> get_pipeline_model_parallel_last_rank;
encode -> get_data_parallel_world_size;
encode -> zeros;
encode -> get_pipeline_model_parallel_group;
encode -> apply_hidden_transforms;
encode -> get_hiddens_mask;
encode -> typecheck;
encode -> encode_audio;
encode -> NeuralType;
encode -> AudioSignal;
encode -> tuple;
encode -> LengthsType;
encode -> TokenIndex;
encode -> EncodedRepresentation;
encode -> Index;
encode -> chunk;
encode -> zip;
encode -> cat;
encode -> rearrange;
encode -> _quantize;
encode -> view;
encode -> mask_sequence_tensor;
encode -> stack;
encode -> decode;
encode -> defaultdict;
encode -> enumerate;
encode -> tensor;
encode -> concatenate;
encode -> ones;
encode -> image_size_to_num_patches;
encode -> sorted;
encode -> extend;
encode -> get_number_of_features;
encode -> tokenizer;
encode -> replace;
encode -> next;
encode -> tolist;
encode -> create_vision_mask_tensor;
encode -> encode_as_ids;
encode -> min;
encode -> index;
encode -> return_obj;
encode -> loads;
encode -> strip;
encode -> fix_text;
encode -> text_to_ids;
initialize_sampler -> DDIMSampler;
initialize_sampler -> PLMSSampler;
initialize_sampler -> ValueError;
initialize_sampler -> DPMSolverSampler;
initialize_sampler -> ParaDDIMSampler;
decode_images -> decode_first_stage;
decode_images -> clamp;
decode_images -> runEngine;
decode_first_stage -> no_grad;
decode_first_stage -> autocast;
decode_first_stage -> decode;
decode_first_stage -> hasattr;
decode_first_stage -> get_codebook_entry;
decode_first_stage -> contiguous;
decode_first_stage -> isinstance;
decode_first_stage -> dim;
decode_first_stage -> long;
decode_first_stage -> get_fold_unfold;
decode_first_stage -> unfold;
decode_first_stage -> view;
decode_first_stage -> stack;
decode_first_stage -> fold;
decode_first_stage -> rearrange;
decode_first_stage -> info;
decode_first_stage -> argmax;
decode_first_stage -> min;
decode_first_stage -> exp;
decode_first_stage -> range;
torch_to_numpy -> numpy;
torch_to_numpy -> permute;
torch_to_numpy -> cpu;
torch_to_numpy -> float;
numpy_to_pil -> astype;
numpy_to_pil -> fromarray;
numpy_to_pil -> round;
pipeline -> get;
pipeline -> no_grad;
pipeline -> autocast;
pipeline -> initialize_sampler;
pipeline -> isinstance;
pipeline -> zip;
pipeline -> keys;
pipeline -> upper;
pipeline -> len;
pipeline -> perf_counter;
pipeline -> encode_prompt;
pipeline -> to;
pipeline -> sample;
pipeline -> decode_images;
pipeline -> append;
pipeline -> cat;
pipeline -> torch_to_numpy;
pipeline -> makedirs;
pipeline -> numpy;
pipeline -> fromarray;
pipeline -> save;
pipeline -> print;
pipeline -> ValueError;
pipeline -> current_device;
pipeline -> astype;
pipeline -> join;
pipeline -> sum;
pipeline -> get_control_input;
pipeline -> randn;
pipeline -> numpy_to_pil;
pipeline -> permute;
pipeline -> enumerate;
pipeline -> open;
pipeline -> dump;
pipeline -> round;
pipeline -> cpu;
pipeline -> float;
pipeline -> DataParallelWrapper;
pipeline -> min;
pipeline -> startswith;
pipeline -> pad_with_zeros;
pipeline -> list;
pipeline -> range;
pipeline -> from_iterable;
pipeline -> defaultdict;
sample -> _broadcast_time;
sample -> mean;
sample -> std;
sample -> randn_like;
sample -> exp;
sample -> no_grad;
sample -> to;
sample -> sampler;
sample -> denoiser;
sample -> randn;
sample -> p_sample_loop;
sample -> isinstance;
sample -> list;
sample -> map;
sample -> make_schedule;
sample -> sampling_fn;
sample -> print;
sample -> dpm_sampling_fn;
sample -> para_ddim_sampling_fn;
sample -> keys;
sample -> get_time_steps;
sample -> denoise_to_zero_fn;
sample -> expand;
sample -> range;
sample -> model_fn;
sample -> multistep_dpm_solver_update;
sample -> append;
sample -> min;
sample -> ones;
sample -> NotImplementedError;
setup_trainer_and_model_for_inference -> append;
setup_trainer_and_model_for_inference -> Trainer;
setup_trainer_and_model_for_inference -> NLPSaveRestoreConnector;
setup_trainer_and_model_for_inference -> setup_environment;
setup_trainer_and_model_for_inference -> cuda;
setup_trainer_and_model_for_inference -> requires_grad_;
setup_trainer_and_model_for_inference -> TorchElasticEnvironment;
setup_trainer_and_model_for_inference -> get;
setup_trainer_and_model_for_inference -> info;
setup_trainer_and_model_for_inference -> NLPDDPStrategy;
setup_trainer_and_model_for_inference -> NLPFSDPStrategy;
setup_trainer_and_model_for_inference -> warning;
setup_trainer_and_model_for_inference -> model_provider;
setup_trainer_and_model_for_inference -> launch;
setup_trainer_and_model_for_inference -> endswith;
setup_trainer_and_model_for_inference -> isdir;
setup_trainer_and_model_for_inference -> restore_from;
setup_trainer_and_model_for_inference -> eval;
setup_trainer_and_model_for_inference -> open_dict;
setup_trainer_and_model_for_inference -> model_cfg_modifier;
setup_trainer_and_model_for_inference -> load_from_checkpoint;
_training_strategy -> get;
_training_strategy -> NLPDDPStrategy;
_training_strategy -> hasattr;
_training_strategy -> bool;
_training_strategy -> info;
_training_strategy -> NLPDDPStrategyNotebook;
_training_strategy -> NLPFSDPStrategy;
_plugins -> get;
_plugins -> append;
_plugins -> from_config;
_plugins -> TorchElasticEnvironment;
_plugins -> AsyncFinalizableCheckpointIO;
_plugins -> MisconfigurationException;
_plugins -> _grad_scaler;
_plugins -> MegatronHalfPrecisionPlugin;
_plugins -> FSDPMixedPrecisionPlugin;
_plugins -> PipelineMixedPrecisionPlugin;
prepare_reg_data -> makedirs;
prepare_reg_data -> len;
prepare_reg_data -> listdir;
prepare_reg_data -> setup_trainer_and_model_for_inference;
prepare_reg_data -> Generator;
prepare_reg_data -> manual_seed;
prepare_reg_data -> info;
prepare_reg_data -> range;
prepare_reg_data -> is_available;
prepare_reg_data -> pipeline;
prepare_reg_data -> zip;
prepare_reg_data -> empty_cache;
prepare_reg_data -> enumerate;
prepare_reg_data -> save;
prepare_reg_data -> join;
destroy_model_parallel -> destroy_model_parallel;
destroy_model_parallel -> barrier;
get_learned_conditioning -> hasattr;
get_learned_conditioning -> callable;
get_learned_conditioning -> encode;
get_learned_conditioning -> isinstance;
get_learned_conditioning -> cond_stage_model;
get_learned_conditioning -> getattr;
get_learned_conditioning -> mode;
get_sigmas -> sigma;
get_sigmas -> sigma_bar_from_sigma;
get_sigmas -> linspace;
get_sigmas -> append_zero;
get_sigmas -> len;
get_sigmas -> t_to_sigma;
get_sigmas -> flip;
get_sigmas -> partial;
get_sigmas -> generate_roughly_equally_spaced_steps;
get_sigmas -> to_torch;
randn_like -> randn;
sample_euler_ancestral -> no_grad;
sample_euler_ancestral -> new_ones;
sample_euler_ancestral -> trange;
sample_euler_ancestral -> default_noise_sampler;
sample_euler_ancestral -> model;
sample_euler_ancestral -> get_ancestral_step;
sample_euler_ancestral -> to_d;
sample_euler_ancestral -> len;
sample_euler_ancestral -> callback;
sample_euler_ancestral -> noise_sampler;
mode -> NotImplementedError;
mode -> train;
mode -> eval;
mode -> ValueError;
encode_first_stage -> no_grad;
encode_first_stage -> autocast;
encode_first_stage -> encode;
encode_first_stage -> hasattr;
encode_first_stage -> get_fold_unfold;
encode_first_stage -> unfold;
encode_first_stage -> view;
encode_first_stage -> stack;
encode_first_stage -> fold;
encode_first_stage -> info;
encode_first_stage -> min;
encode_first_stage -> range;
set_device -> fixture;
set_device -> device;
set_device -> is_available;
text_to_image -> get_sampler_config;
text_to_image -> to_container;
text_to_image -> do_sample;
refiner -> get_sampler_config;
refiner -> do_img2img;
refiner -> Img2ImgDiscretizationWrapper;
backward -> apply;
backward -> unsqueeze;
backward -> sum;
backward -> zeros;
backward -> zeros_like;
backward -> next_power_of_2;
backward -> clamp;
backward -> to;
backward -> mul;
backward -> view;
backward -> mul_;
backward -> all_to_all_single_fn;
backward -> isend;
backward -> append;
backward -> empty_like;
backward -> irecv;
backward -> wait;
backward -> contiguous;
backward -> get_tensor_model_parallel_world_size;
backward -> get_tensor_model_parallel_group;
backward -> list;
backward -> all_to_all;
backward -> cat;
backward -> chunk;
backward -> range;
backward -> clip;
backward -> sqrt;
backward -> einsum;
backward -> norm;
backward -> _softmax_backward_data;
backward -> float;
backward -> detach;
backward -> masked_fill_;
backward -> finfo;
backward -> clone;
backward -> exp;
backward -> freq_encode_backward;
backward -> grid_encode_backward;
backward -> permute;
backward -> composite_rays_train_backward;
backward -> get_backend;
backward -> sh_encode_backward;
backward -> grad;
backward -> requires_grad_;
backward -> enable_grad;
backward -> run_function;
backward -> view_as;
backward -> geglu_bprop;
backward -> max;
backward -> fftconv_bwd;
backward -> rearrange;
backward -> irfft;
backward -> int;
backward -> conj;
backward -> ceil;
backward -> log2;
backward -> bias_geglu_back;
backward -> bias_gelu_back;
backward -> item;
backward -> arange;
backward -> size;
backward -> dequantize;
backward -> loss_parallel;
backward -> backward;
backward -> super;
zero_grad -> zero_grad;
zero_grad -> parameters;
zero_grad -> super;
zero_grad -> _disable_pre_forward_hook;
zero_grad -> grad_buffer_view;
zero_grad -> _zero_grad_group_helper;
zero_grad -> zero;
zero_grad -> is_current_stream_capturing;
zero_grad -> rank_zero_info;
zero_grad -> __orig_zero_grad__;
get_dummy_inputs -> ones;
get_dummy_inputs -> randint;
get_input_output_names -> NotImplementedError;
get_dynamic_axis -> NotImplementedError;
decoder -> DecEmb;
transformer -> ValueError;
pad -> pad;
pad -> NotImplementedError;
pad -> hasattr;
pad -> AttributeError;
pad -> type;
pad -> stack;
pad -> append;
pad -> concatenate;
pad -> full;
encode_with_transformer -> token_embedding;
encode_with_transformer -> permute;
encode_with_transformer -> text_transformer_forward;
encode_with_transformer -> ln_final;
encode_with_transformer -> word_embeddings;
encode_with_transformer -> final_layernorm;
encode_with_transformer -> pool;
get_input_profile -> get_dummy_inputs;
get_input_profile -> items;
perform_save_locally -> makedirs;
perform_save_locally -> len;
perform_save_locally -> join;
perform_save_locally -> listdir;
perform_save_locally -> squeeze;
perform_save_locally -> save;
perform_save_locally -> rearrange;
perform_save_locally -> numpy;
perform_save_locally -> fromarray;
perform_save_locally -> astype;
perform_save_locally -> cpu;
do_calibrate -> enumerate;
do_calibrate -> text_to_image;
get_input_profile_unet -> generate_dummy_inputs;
get_input_profile_unet -> items;
generate_dummy_inputs -> to;
generate_dummy_inputs -> NotImplementedError;
generate_dummy_inputs -> ones;
register -> append;
register -> register_parameter;
register -> register_buffer;
register -> Parameter;
load_calib_prompts -> open;
load_calib_prompts -> rstrip;
load_calib_prompts -> range;
load_calib_prompts -> len;
quantize_lvl -> named_modules;
quantize_lvl -> isinstance;
quantize_lvl -> enable;
quantize_lvl -> disable;
get_int8_config -> named_modules;
get_int8_config -> filter_func;
get_int8_config -> isinstance;
get_int8_config -> keys;
loadEngines -> Engine;
loadEngines -> load;
loadEngines -> print;
loadEngines -> get;
activateEngines -> values;
activateEngines -> calculateMaxDeviceMemory;
activateEngines -> cudaMalloc;
activateEngines -> activate;
loadResources -> manual_seed;
loadResources -> cudaStreamCreate;
loadResources -> allocate_buffers;
loadResources -> Generator;
loadResources -> cudaEventCreate;
loadResources -> get_shape_dict;
calculateMaxDeviceMemory -> items;
calculateMaxDeviceMemory -> max;
activate -> create_execution_context;
activate -> create_execution_context_without_device_memory;
allocate_buffers -> range;
allocate_buffers -> get_bindings_per_profile;
allocate_buffers -> nptype;
allocate_buffers -> binding_is_input;
allocate_buffers -> to;
allocate_buffers -> DeviceView;
allocate_buffers -> get_binding_shape;
allocate_buffers -> get_binding_dtype;
allocate_buffers -> set_binding_shape;
allocate_buffers -> empty;
allocate_buffers -> data_ptr;
allocate_buffers -> tuple;
allocate_buffers -> enumerate;
allocate_buffers -> list;
allocate_buffers -> get_tensor_shape;
allocate_buffers -> contiguous;
allocate_buffers -> set_tensor_address;
get_shape_dict -> NotImplementedError;
runEngine -> infer;
infer -> get_active_profile_bindings;
infer -> copy;
infer -> items;
infer -> execute_async_v2;
infer -> isinstance;
infer -> ValueError;
infer -> values;
infer -> copy_;
infer -> set_tensor_address;
infer -> execute_async_v3;
infer -> data_ptr;
infer -> CUASSERT;
infer -> cudaGraphLaunch;
infer -> cudaStreamSynchronize;
infer -> cudaStreamBeginCapture;
infer -> cudaStreamEndCapture;
infer -> cudaGraphInstantiate;
infer -> no_grad;
infer -> is_available;
infer -> eval;
infer -> to;
infer -> get_verbosity;
infer -> set_verbosity;
infer -> _setup_infer_dataloader;
infer -> iter;
infer -> train;
infer -> forward;
infer -> pad;
infer -> cumsum;
infer -> view;
infer -> squeeze;
infer -> range;
infer -> tensor2list;
infer -> extend;
infer -> IndexError;
infer -> open;
infer -> append;
infer -> argmax;
infer -> len;
infer -> join;
infer -> write;
infer -> reshape;
infer -> softmax;
infer -> take_along_dim;
infer -> round;
infer -> str;
infer -> count;
infer -> list;
infer -> float;
infer -> unsqueeze;
infer -> int;
infer -> map;
infer -> ones;
infer -> arange;
infer -> encoder;
infer -> duration_predictor;
infer -> clamp;
infer -> decoder;
infer -> proj;
infer -> run_aligner;
infer -> lm_embeddings;
infer -> self_attention_module;
infer -> pitch_emb;
infer -> pitch_predictor;
infer -> transpose;
infer -> regulate_len;
infer -> exp;
infer -> get_mask_from_lengths;
infer -> average_features;
infer -> denormalize;
infer -> get_speaker_embedding;
infer -> log_to_duration;
infer -> energy_emb;
infer -> energy_predictor;
infer -> encode_speaker;
infer -> encode_text;
infer -> div;
infer -> max;
infer -> transpose_;
infer -> adjust_f0;
infer -> pad_energy_avg_and_f0;
infer -> preprocess_context;
infer -> new_zeros;
infer -> enumerate;
infer -> infer;
infer -> pad_dur;
infer -> new_ones;
infer -> bool;
infer -> apply_voice_mask_to_text;
infer -> unvoiced_bias_module;
infer -> reversed;
infer -> flow_step;
infer -> fold;
infer -> permute;
infer -> infer_f0;
infer -> infer_energy;
infer -> normal;
infer -> cat;
infer -> sigmoid;
infer -> get_go_frame;
infer -> initialize_decoder_states;
infer -> parse_decoder_outputs;
infer -> size;
infer -> prenet;
infer -> decode;
infer -> zeros;
infer -> warning;
infer -> sum;
infer -> le;
infer -> enc_p;
infer -> ceil;
infer -> long;
infer -> generate_path;
infer -> flow;
infer -> dec;
infer -> dp;
infer -> clamp_min;
infer -> matmul;
infer -> emb_g;
infer -> randn_like;
infer -> cuassert;
infer -> info;
infer -> cls;
infer -> infer_micro_batch_size;
infer -> infer_seq_length;
infer -> infer_num_microbatches;
tokenize -> tokenizer;
tokenize -> to;
tokenize -> tokenize;
tokenize -> runEngine;
tokenize -> cat;
tokenize -> text_to_ids;
tokenize -> isinstance;
tokenize -> hasattr;
tokenize -> callable;
tokenize -> RuntimeError;
tokenize -> asarray;
tokenize -> type;
tokenize -> findall;
tokenize -> join;
tokenize -> list;
tokenize -> cut;
tokenize -> strip;
tokenize -> parse;
tokenize -> int;
tokenize -> split;
tokenize -> enumerate;
tokenize -> ones;
tokenize -> tensor;
tokenize -> len;
tokenize -> append;
tokenize -> extend;
tokenize -> escape;
tokenize -> debug;
tokenize -> concatenate;
tokenize -> process_image;
tokenize -> ValueError;
tokenize -> sorted;
tokenize -> range;
tokenize -> zip;
tokenize -> max;
tokenize -> min;
tokenize -> zeros;
tokenize -> normalize;
tokenize -> encode;
run_denoiser_engine -> get;
run_denoiser_engine -> runEngine;
get_sampler_config -> get_discretization_config;
get_sampler_config -> get_guider_config;
get_sampler_config -> ValueError;
get_sampler_config -> EulerEDMSampler;
get_sampler_config -> HeunEDMSampler;
get_sampler_config -> EulerAncestralSampler;
get_sampler_config -> DPMPP2SAncestralSampler;
get_sampler_config -> DPMPP2MSampler;
get_sampler_config -> LinearMultistepSampler;
sampler -> fixture;
sampler -> get_data_simulation_configs;
sampler -> SpeechSampler;
sampler -> get_session_overlap_mean;
sampler -> get_session_silence_mean;
denoiser -> denoiser;
mapping_openclip_state_dict -> state_dict;
mapping_openclip_state_dict -> keys;
mapping_openclip_state_dict -> reshape;
mapping_openclip_state_dict -> startswith;
mapping_openclip_state_dict -> replace;
mapping_openclip_state_dict -> endswith;
mapping_openclip_state_dict -> len;
accuracy -> t;
accuracy -> eq;
accuracy -> expand_as;
accuracy -> float;
accuracy -> numpy;
accuracy -> topk;
accuracy -> view;
accuracy -> max;
accuracy -> cpu;
accuracy -> sum;
accuracy -> reshape;
accuracy -> mean;
t -> log;
torch_dtype_from_precision -> ValueError;
build_imagenet_validation_dataloader -> get_preprocess_fns;
build_imagenet_validation_dataloader -> get;
build_imagenet_validation_dataloader -> ImageFolder;
build_imagenet_validation_dataloader -> MegatronPretrainingSampler;
build_imagenet_validation_dataloader -> DataLoader;
build_imagenet_validation_dataloader -> ImagenetClassnameDataset;
build_imagenet_validation_dataloader -> len;
build_imagenet_validation_dataloader -> get_data_parallel_rank;
build_imagenet_validation_dataloader -> get_data_parallel_world_size;
build_imagenet_validation_dataloader -> min;
average_losses_across_data_parallel_group -> cat;
average_losses_across_data_parallel_group -> all_reduce;
average_losses_across_data_parallel_group -> get_world_size;
average_losses_across_data_parallel_group -> view;
average_losses_across_data_parallel_group -> get_data_parallel_group;
average_losses_across_data_parallel_group -> detach;
average_losses_across_data_parallel_group -> clone;
normalize -> mean;
normalize -> max;
normalize -> abs;
normalize -> no_grad;
normalize -> range;
normalize -> size;
normalize -> layer_norm;
normalize -> vector_norm;
normalize -> white_space_fix;
normalize -> sub;
normalize -> join;
normalize -> set;
normalize -> lower;
normalize -> remove_articles;
normalize -> split;
normalize -> remove_punc;
normalize -> convert;
normalize -> normalize;
normalize -> log;
get_preprocess_fns -> get;
get_preprocess_fns -> image_transform;
get_preprocess_fns -> partial;
_get_autocast_dtype -> ValueError;
image_transform -> isinstance;
image_transform -> Normalize;
image_transform -> AugmentationCfg;
image_transform -> pop;
image_transform -> extend;
image_transform -> Compose;
image_transform -> setdefault;
image_transform -> create_transform;
image_transform -> items;
image_transform -> warning;
image_transform -> ResizeMaxSize;
image_transform -> Resize;
image_transform -> CenterCrop;
image_transform -> ToTensor;
image_transform -> len;
image_transform -> RandomResizedCrop;
image_transform -> asdict;
image_transform -> list;
image_transform -> keys;
on_train_epoch_start -> time;
on_train_epoch_start -> disable_cuda_graphs_recursive;
on_train_epoch_start -> AppState;
on_train_epoch_start -> reconfigure_num_microbatches_calculator;
on_train_epoch_start -> get_data_parallel_world_size;
on_train_epoch_start -> _reconfigure_batch_sizes;
on_train_epoch_start -> on_train_epoch_start;
on_train_epoch_start -> super;
on_train_epoch_start -> on_validation_epoch_end;
on_train_epoch_start -> reset;
on_train_epoch_start -> set_description;
on_train_epoch_start -> setup_audio_codec;
on_train_epoch_start -> ceil;
on_train_epoch_start -> info;
on_train_epoch_start -> min;
on_train_epoch_start -> extract_module_attr_name;
on_train_epoch_start -> getattr;
on_train_epoch_start -> listify;
on_train_epoch_start -> setattr;
on_train_epoch_start -> get_modules_from_selector;
on_train_epoch_start -> compile_module;
on_train_epoch_start -> _maybe_apply_transform;
on_train_epoch_start -> _on_epoch_start;
on_train_epoch_end -> should_benchmark;
on_train_epoch_end -> append;
on_train_epoch_end -> info;
on_train_epoch_end -> time;
on_train_epoch_end -> enable_cuda_graphs_recursive;
on_train_epoch_end -> log_metrics;
on_train_epoch_end -> get;
on_train_epoch_end -> isinstance;
on_train_epoch_end -> repack_batches_with_shuffle;
on_train_epoch_end -> train_dataloader;
on_train_epoch_end -> on_train_epoch_end;
on_train_epoch_end -> super;
on_train_epoch_end -> update_lr;
on_train_epoch_end -> _log_artifacts;
on_train_epoch_end -> items;
on_train_epoch_end -> len;
on_train_epoch_end -> debug;
on_train_epoch_end -> generate_artifacts;
on_train_epoch_end -> to;
on_train_epoch_end -> maybe_finalize_save_checkpoint;
on_train_epoch_end -> _get_checkpoint_io;
on_train_epoch_end -> extract_ema_weights;
on_train_epoch_end -> extract_weights;
on_train_batch_start -> time;
on_train_batch_start -> is_module_updatable;
on_train_batch_start -> update_step;
on_train_batch_start -> no_grad;
on_train_batch_start -> cuda;
on_train_batch_start -> on_train_batch_start;
on_train_batch_start -> info;
on_train_batch_start -> get_input;
on_train_batch_start -> encode_first_stage;
on_train_batch_start -> detach;
on_train_batch_start -> register_buffer;
on_train_batch_start -> super;
on_train_batch_start -> get_first_stage_encoding;
on_train_batch_start -> std;
on_train_batch_start -> flatten;
on_train_batch_start -> print;
on_train_batch_start -> cudaProfilerStart;
on_train_batch_start -> cudart;
on_train_batch_start -> __enter__;
on_train_batch_start -> emit_nvtx;
on_train_batch_start -> hasattr;
on_train_batch_start -> items;
on_train_batch_start -> isinstance;
on_train_batch_start -> register_callback;
on_train_batch_start -> start;
on_train_batch_start -> _record_memory_history;
on_train_batch_start -> freeze;
on_train_batch_start -> train;
on_train_batch_start -> str;
on_train_batch_start -> get_rank;
on_train_batch_start -> len;
on_train_batch_start -> unfreeze;
on_train_batch_start -> getattr;
on_train_batch_start -> pl_check_param_hashes_across_dp_replicas;
on_train_batch_start -> get_current_epoch_step;
on_train_batch_start -> _rank_is_active;
on_train_batch_start -> _check_preemption_support;
on_train_batch_start -> _preemption_handler;
on_train_batch_start -> warning;
on_train_batch_start -> log;
on_train_batch_start -> _on_batch_start;
on_train_batch_start -> remove;
on_train_batch_start -> exit;
on_train_batch_start -> named_parameters;
on_train_batch_start -> zip;
on_train_batch_start -> ValueError;
on_train_batch_start -> state_dict;
on_train_batch_start -> keys;
on_train_batch_start -> to_cpu;
on_train_batch_start -> allclose;
on_train_batch_start -> get;
on_train_batch_start -> max;
on_train_batch_start -> cpu;
on_train_batch_start -> abs;
on_train_batch_start -> float;
on_train_batch_start -> view;
on_validation_epoch_start -> time;
on_validation_epoch_start -> enable_cuda_graphs_recursive;
on_validation_epoch_start -> get;
on_validation_epoch_start -> _reconfigure_batch_sizes;
on_validation_epoch_start -> on_validation_epoch_start;
on_validation_epoch_start -> super;
on_validation_epoch_start -> _reset_activation_checkpointing_args;
on_validation_epoch_start -> AppState;
on_validation_epoch_start -> reconfigure_num_microbatches_calculator;
on_validation_epoch_start -> get_data_parallel_world_size;
on_validation_epoch_start -> on_train_epoch_start;
on_validation_epoch_start -> reset;
on_validation_epoch_start -> ASRBLEU;
on_validation_epoch_start -> BLEU;
on_validation_epoch_start -> defaultdict;
on_validation_epoch_start -> _maybe_apply_transform;
on_validation_epoch_start -> _on_epoch_start;
on_validation_epoch_end -> should_benchmark;
on_validation_epoch_end -> append;
on_validation_epoch_end -> info;
on_validation_epoch_end -> time;
on_validation_epoch_end -> disable_cuda_graphs_recursive;
on_validation_epoch_end -> on_validation_epoch_end;
on_validation_epoch_end -> super;
on_validation_epoch_end -> concat;
on_validation_epoch_end -> rearrange;
on_validation_epoch_end -> _log_audio;
on_validation_epoch_end -> isinstance;
on_validation_epoch_end -> len;
on_validation_epoch_end -> debug;
on_validation_epoch_end -> size;
on_validation_epoch_end -> error;
on_validation_epoch_end -> get;
on_validation_epoch_end -> min;
on_validation_epoch_end -> to;
on_validation_epoch_end -> model;
on_validation_epoch_end -> clone;
on_validation_epoch_end -> is_pipeline_last_stage;
on_validation_epoch_end -> broadcast;
on_validation_epoch_end -> log;
on_validation_epoch_end -> clear;
on_validation_epoch_end -> cuda;
on_validation_epoch_end -> get_last_rank;
on_validation_epoch_end -> mean;
on_validation_epoch_end -> NotImplementedError;
on_validation_epoch_end -> tensor;
on_validation_epoch_end -> stack;
on_validation_epoch_end -> all_reduce;
on_validation_epoch_end -> sum;
on_validation_epoch_end -> zero_shot_eval;
on_validation_epoch_end -> average_losses_across_data_parallel_group;
on_validation_epoch_end -> zeros;
on_validation_epoch_end -> inference_epoch_end;
on_validation_epoch_end -> eval_epoch_end;
on_validation_epoch_end -> cat;
on_validation_epoch_end -> batch_decode;
on_validation_epoch_end -> makedirs;
on_validation_epoch_end -> join;
on_validation_epoch_end -> save_predictions;
on_validation_epoch_end -> classification_report;
on_validation_epoch_end -> compute;
on_validation_epoch_end -> reset;
on_validation_epoch_end -> strip;
on_validation_epoch_end -> enumerate;
on_validation_epoch_end -> ClassificationReport;
on_validation_epoch_end -> int;
on_validation_epoch_end -> list;
on_validation_epoch_end -> range;
on_validation_epoch_end -> set;
on_validation_epoch_end -> defaultdict;
on_validation_epoch_end -> items;
on_validation_epoch_end -> decode;
on_validation_epoch_end -> split;
on_validation_epoch_end -> replace;
on_validation_epoch_end -> item;
on_validation_epoch_end -> argmax;
on_validation_epoch_end -> lower;
on_validation_epoch_end -> get_unified_metrics;
on_validation_epoch_end -> is_initialized;
on_validation_epoch_end -> get_world_size;
on_validation_epoch_end -> all_gather;
on_validation_epoch_end -> calculate_mean_reciprocal_rank;
on_validation_epoch_end -> get_rank;
on_validation_epoch_end -> numpy;
on_validation_epoch_end -> empty_like;
on_validation_epoch_end -> cpu;
on_validation_epoch_end -> add;
on_validation_epoch_end -> concatenate;
on_validation_epoch_end -> detach;
on_validation_epoch_end -> get_pipeline_model_parallel_world_size;
on_validation_epoch_end -> get_pipeline_model_parallel_last_rank;
on_validation_epoch_end -> get_pipeline_model_parallel_group;
on_validation_epoch_end -> vstack;
on_validation_epoch_end -> type;
on_validation_epoch_end -> _reconfigure_batch_sizes;
on_validation_epoch_end -> all_gather_object;
on_validation_epoch_end -> chain;
on_validation_epoch_end -> get_data_parallel_rank;
on_validation_epoch_end -> get_score;
on_validation_epoch_end -> get_data_parallel_group;
on_validation_epoch_end -> get_data_parallel_world_size;
on_validation_epoch_end -> zip;
on_validation_epoch_end -> _test_validation_epoch_end;
on_validation_epoch_end -> exp;
on_validation_epoch_end -> evaluate;
on_validation_epoch_end -> extend;
on_validation_epoch_end -> tensor2list;
on_validation_epoch_end -> convert_dict_outputs_to_lists;
on_validation_epoch_end -> str;
on_validation_epoch_end -> multi_validation_epoch_end;
on_validation_epoch_end -> log_dict;
on_validation_epoch_end -> get_validation_dataloader_prefix;
on_validation_epoch_end -> pop;
on_validation_epoch_end -> update;
on_validation_epoch_end -> Tensor;
on_validation_epoch_end -> float;
on_validation_epoch_end -> endswith;
on_validation_epoch_end -> index;
on_validation_epoch_end -> collect;
on_validation_epoch_end -> values;
on_validation_epoch_end -> add_image;
on_validation_epoch_end -> plot_spectrogram_to_numpy;
on_validation_epoch_end -> randint;
on_validation_epoch_end -> vocode_spectrogram;
on_validation_epoch_end -> add_audio;
on_validation_epoch_end -> plot_multipitch_to_numpy;
on_validation_epoch_end -> plot_alignment_to_numpy;
on_validation_epoch_end -> isfinite;
on_validation_epoch_end -> tacotron2_log_to_tb_func;
on_validation_epoch_end -> tacotron2_log_to_wandb_func;
on_validation_epoch_end -> waveglow_log_to_tb_func;
on_validation_batch_start -> time;
on_validation_batch_start -> has_dataloader_changed;
on_validation_batch_start -> float;
on_validation_batch_start -> int;
on_validation_batch_start -> get_num_microbatches;
on_validation_batch_start -> _on_batch_start;
on_validation_batch_end -> should_benchmark;
on_validation_batch_end -> append;
on_validation_batch_end -> time;
on_validation_batch_end -> info;
on_validation_batch_end -> on_validation_batch_end;
on_validation_batch_end -> super;
on_validation_batch_end -> collect;
on_validation_batch_end -> should_log;
on_validation_batch_end -> get_num_microbatches;
on_validation_batch_end -> print;
on_validation_batch_end -> int;
on_validation_batch_end -> _on_batch_end;
on_validation_batch_end -> is_pipeline_last_stage;
on_validation_batch_end -> isinstance;
on_validation_batch_end -> get_rank;
on_fit_end -> should_benchmark;
on_fit_end -> info;
on_fit_end -> sum;
on_fit_end -> len;
train_dataloader -> DataLoader;
train_dataloader -> _create_dataloader;
train_dataloader -> hasattr;
train_dataloader -> setup;
train_dataloader -> _create_dataset;
train_dataloader -> _make_dataloader;
train_dataloader -> str;
train_dataloader -> info;
train_dataloader -> datasets_provider;
train_dataloader -> get_savable_loader;
train_dataloader -> is_initialized;
train_dataloader -> default_worker_config;
train_dataloader -> get_data_parallel_rank;
train_dataloader -> get_data_parallel_world_size;
train_dataloader -> get_data_parallel_group;
train_dataloader -> WorkerConfig;
train_dataloader -> get;
train_dataloader -> _create_lhotse_dataloader;
train_dataloader -> _create_nemo_dataloader;
train_dataloader -> get_lhotse_dataloader_from_config;
train_dataloader -> _get_dp_rank;
train_dataloader -> _get_world_size;
train_dataloader -> instantiate;
train_dataloader -> DistributedBucketSampler;
train_dataloader -> RandomDataset;
train_dataloader -> OnesDataset;
val_dataloader -> DataLoader;
val_dataloader -> val_dataloader;
val_dataloader -> datasets_provider;
val_dataloader -> get_savable_loader;
val_dataloader -> train_dataloader;
val_dataloader -> is_initialized;
val_dataloader -> info;
val_dataloader -> default_worker_config;
val_dataloader -> get_data_parallel_rank;
val_dataloader -> get_data_parallel_world_size;
val_dataloader -> get_data_parallel_group;
val_dataloader -> WorkerConfig;
val_dataloader -> _create_dataloader;
val_dataloader -> hasattr;
val_dataloader -> setup;
val_dataloader -> _create_dataset;
val_dataloader -> _make_dataloader;
val_dataloader -> str;
val_dataloader -> get;
val_dataloader -> _create_lhotse_dataloader;
val_dataloader -> isinstance;
val_dataloader -> len;
val_dataloader -> _create_nemo_dataloader;
val_dataloader -> _build_test_dataloader;
val_dataloader -> RandomDataset;
val_dataloader -> OnesDataset;
mesh -> mesh;
mesh -> no_grad;
mesh -> linspace;
mesh -> meshgrid;
mesh -> stack;
mesh -> to;
mesh -> batch_process;
mesh -> reshape;
mesh -> marching_cubes;
mesh -> Trimesh;
mesh -> remove_unreferenced_vertices;
mesh -> remove_infinite_values;
mesh -> remove_duplicate_faces;
mesh -> astype;
mesh -> concatenate;
mesh -> item;
mesh -> fn;
mesh -> numpy;
mesh -> tensor;
mesh -> range;
mesh -> mean;
mesh -> cpu;
mesh -> detach;
to_img -> int;
to_img -> tensor;
to_img -> unsqueeze;
to_img -> to;
to_img -> decode;
to_img -> to_pil_image;
to_img -> sqrt;
to_img -> squeeze;
to_img -> findall;
to_img -> len;
to_img -> float;
to_img -> reshape;
load_prompts -> append;
load_prompts -> open;
load_prompts -> unsqueeze;
load_prompts -> encode;
load_prompts -> to_imgstr;
load_prompts -> to;
load_prompts -> pil_to_tensor;
load_prompts -> all;
load_prompts -> to_container;
load_prompts -> len;
load_prompts -> map;
load_prompts -> getattr;
load_prompts -> list;
load_prompts -> isinstance;
load_prompts -> type;
load_prompts -> load;
load_model_from_config -> NLPSaveRestoreConnector;
load_model_from_config -> isdir;
load_model_from_config -> restore_from;
load_model_from_config -> set_struct;
load_model_from_config -> max;
load_model_from_config -> open_dict;
load_model_from_config -> get;
load_model_from_config -> AppState;
load_model_from_config -> join;
load_model_from_config -> load_from_checkpoint;
load_model_from_config -> ValueError;
load_model_from_config -> warning;
load_model_from_config -> fake_initialize_model_parallel;
load_model_from_config -> inject_model_parallel_rank;
load_model_from_config -> torch_dtype_from_precision;
load_model_from_config -> to;
remove_padded_prompts -> items;
remove_padded_prompts -> type;
to_imgstr -> tolist;
to_imgstr -> join;
to_imgstr -> numpy;
to_imgstr -> format;
to_imgstr -> cpu;
lcs -> range;
lcs -> len;
lcs -> max;
analyze -> range;
analyze -> print;
analyze -> open;
analyze -> readlines;
analyze -> len;
analyze -> startswith;
analyze -> format;
analyze -> write;
analyze -> append;
analyze -> from_lines;
analyze -> get_html;
analyze -> isinstance;
analyze -> signature;
analyze -> any;
analyze -> items;
analyze -> debug;
analyze -> analyze;
analyze -> warning;
analyze -> values;
from_lines -> cls;
from_lines -> startswith;
from_lines -> strip;
from_lines -> find;
get_html -> join;
get_html -> get_spans_html;
get_spans -> range;
get_spans -> len;
get_spans -> append;
get_spans_html -> format;
get_spans_html -> join;
instantiate_model_and_trainer -> get;
instantiate_model_and_trainer -> Trainer;
instantiate_model_and_trainer -> info;
instantiate_model_and_trainer -> exists;
instantiate_model_and_trainer -> setup_training_data;
instantiate_model_and_trainer -> DuplexTaggerModel;
instantiate_model_and_trainer -> DuplexDecoderModel;
instantiate_model_and_trainer -> setup_cgs;
instantiate_model_and_trainer -> setup_multiple_validation_data;
instantiate_model_and_trainer -> setup_validation_data;
instantiate_model_and_trainer -> restore_from;
instantiate_model_and_trainer -> from_pretrained;
instantiate_model_and_trainer -> get_available_model_names;
instantiate_model_and_trainer -> ValueError;
instantiate_model_and_trainer -> list_available_models;
instantiate_model_and_trainer -> SpellcheckingAsrCustomizationModel;
instantiate_model_and_trainer -> NLPSaveRestoreConnector;
instantiate_model_and_trainer -> ThutmoseTaggerModel;
_get_predictions -> splitext;
_get_predictions -> enumerate;
_get_predictions -> info;
_get_predictions -> append;
_get_predictions -> len;
_get_predictions -> open;
_get_predictions -> write;
_get_predictions -> strip;
_get_predictions -> _infer;
_get_predictions -> extend;
_get_predictions -> join;
_get_predictions -> defaultdict;
_get_predictions -> namedtuple;
_get_predictions -> OrderedDict;
_get_predictions -> sorted;
_get_predictions -> _PrelimPrediction;
_get_predictions -> _asdict;
_infer -> no_grad;
_infer -> eval;
_infer -> enumerate;
_infer -> tokenizer;
_infer -> to;
_infer -> _generate_predictions;
_infer -> sum;
_infer -> range;
_infer -> append;
_infer -> len;
_infer -> join;
_infer -> tolist;
_infer -> softmax;
_infer -> zip;
_infer -> ones;
_infer -> max;
_infer -> split;
_infer -> tensor;
_infer -> normalize;
_infer -> list;
_infer -> size;
_infer -> decode_tag_preds;
_infer -> warning;
_infer -> items;
_infer -> BatchEncoding;
_infer -> model;
_infer -> _postprocess_tag_preds;
_infer -> convert_ids_to_tokens;
_infer -> numel;
_infer -> argmax;
_infer -> unsqueeze;
_infer -> word_ids;
_infer -> _infer;
_infer -> input_preprocessing;
_infer -> detokenize;
_infer -> tokenize;
_infer -> post_process_punct;
_infer -> _setup_infer_dataloader;
_infer -> next;
_infer -> forward;
_infer -> iter;
_infer -> build_bert_example;
_infer -> tensor2list;
_infer -> realize_output;
_infer -> get_token_labels;
_infer -> train;
_infer -> is_available;
_infer -> extend;
_infer -> ctc_decoder_predictions_tensor;
_infer -> DictConfig;
setup_cgs -> get;
setup_cgs -> hasattr;
setup_cgs -> NormalizerWithAudio;
setup_cgs -> warning;
setup_validation_data -> _update_dataset_config;
setup_validation_data -> _setup_dataloader_from_config;
setup_validation_data -> DictConfig;
setup_validation_data -> range;
setup_validation_data -> setup_validation_data;
setup_validation_data -> getattr;
setup_validation_data -> RuntimeError;
setup_validation_data -> get;
setup_validation_data -> __setup_dataloader_from_config;
setup_validation_data -> hasattr;
setup_validation_data -> isinstance;
setup_validation_data -> int;
setup_validation_data -> ceil;
setup_validation_data -> len;
setup_validation_data -> info;
setup_validation_data -> DataLoader;
setup_validation_data -> build_pretraining_data_loader;
setup_validation_data -> build_dataset;
setup_validation_data -> DistributedSampler;
setup_validation_data -> compute_consumed_samples;
setup_validation_data -> prepare_data;
setup_validation_data -> warning;
setup_validation_data -> setup_dataloader;
setup_validation_data -> _setup_preprocessed_dataloader;
setup_validation_data -> _setup_dataloader;
setup_validation_data -> build_virtual_prompt_dataset;
setup_validation_data -> min;
setup_validation_data -> setup_eval_data;
setup_validation_data -> _setup_eval_dataloader_from_config;
setup_validation_data -> _setup_eval_dataset_from_config;
setup_validation_data -> setattr;
setup_validation_data -> GlobalAverageLossMetric;
setup_validation_data -> setup_dataloader_from_config;
setup_validation_data -> _get_eval_metrics_kwargs;
setup_validation_data -> append;
setup_validation_data -> create;
setup_validation_data -> merge;
setup_validation_data -> _setup_metrics_dictionary;
setup_validation_data -> ClassificationReport;
setup_validation_data -> structured;
setup_validation_data -> join;
setup_validation_data -> get_label_ids;
setup_validation_data -> _loader;
setup_validation_data -> _setup_test_dataloader;
setup_validation_data -> CombinedLoader;
setup_validation_data -> build_virtual_prompt_tarred_dataset;
get_available_model_names -> list_available_models;
get_available_model_names -> list;
get_available_model_names -> map;
list_available_models -> resolve_subclass_pretrained_model_info;
list_available_models -> PretrainedModelInfo;
list_available_models -> append;
list_available_models -> list_available_models;
list_available_models -> capitalize;
list_available_models -> __subclasses__;
list_available_models -> extend;
list_available_models -> len;
_preprocess_file -> print;
_preprocess_file -> open;
_preprocess_file -> tqdm;
_preprocess_file -> enumerate;
_preprocess_file -> split;
_preprocess_file -> append;
_preprocess_file -> len;
_preprocess_file -> strip;
_write_batches_to_tarfiles -> TextNormalizationDecoderDataset;
_write_batches_to_tarfiles -> batchify;
_write_batches_to_tarfiles -> basename;
_write_batches_to_tarfiles -> join;
_write_batches_to_tarfiles -> open;
_write_batches_to_tarfiles -> close;
_write_batches_to_tarfiles -> dump;
_write_batches_to_tarfiles -> add;
_write_batches_to_tarfiles -> remove;
_write_batches_to_tarfiles -> _preprocess_file;
batchify -> unsqueeze_;
batchify -> dataset_to_ids;
batchify -> pack_data_into_batches;
batchify -> pad_batches;
batchify -> clean_src_and_target;
batchify -> info;
batchify -> tqdm;
batchify -> strip;
batchify -> range;
batchify -> tokenizer;
batchify -> len;
batchify -> append;
batchify -> insert;
remove -> ModuleList;
remove -> remove_weight_norm;
remove -> append;
read_google_data -> open;
read_google_data -> tqdm;
read_google_data -> enumerate;
read_google_data -> split;
read_google_data -> append;
read_google_data -> replace;
read_google_data -> len;
read_google_data -> strip;
inflect_engine -> engine;
process_url -> split;
process_url -> range;
process_url -> flatten;
process_url -> strip;
process_url -> join;
process_url -> len;
process_url -> append;
process_url -> replace;
process_url -> tokenize;
flatten -> list;
flatten -> flatten_iterable;
convert2digits -> inflect_engine;
convert2digits -> enumerate;
convert2digits -> join;
convert2digits -> append;
convert2digits -> replace;
convert2digits -> number_to_words;
convert2digits -> str;
convert_fraction -> sub;
convert_superscript -> sub;
add_space_around_dash -> sub;
ignore -> search;
process_file -> info;
process_file -> open;
process_file -> enumerate;
process_file -> split;
process_file -> tqdm;
process_file -> append;
process_file -> zip;
process_file -> write;
process_file -> strip;
process_file -> convert;
process_file -> ignore;
process_file -> join;
process_file -> search;
process_file -> keys;
process_file -> startswith;
process_file -> spoken_preprocessing;
process_file -> casefold;
process_file -> set;
process_file -> extend;
process_file -> add;
process_file -> list;
process_file -> subn;
process_file -> len;
process_file -> str;
include_sentence -> items;
include_sentence -> pop;
read_data_file -> open;
read_data_file -> defaultdict;
read_data_file -> append;
read_data_file -> strip;
read_data_file -> split;
read_data_file -> include_sentence;
read_data_file -> register_patterns;
read_data_file -> lookup_patterns;
read_data_file -> update_patterns;
read_data_file -> tqdm;
read_data_file -> deepcopy;
read_data_file -> len;
read_data_file -> input_preprocessing;
register_patterns -> create_pattern;
register_patterns -> update_patterns;
lookup_patterns -> create_pattern;
lookup_patterns -> keys;
update_patterns -> items;
create_pattern -> defaultdict;
create_pattern -> search;
create_pattern -> sub;
print_stats -> print;
print_stats -> items;
build_index -> info;
build_index -> IndexFlatL2;
build_index -> IndexIVFFlat;
build_index -> index_cpu_to_all_gpus;
build_index -> train;
build_index -> tqdm;
build_index -> write_index;
build_index -> isfile;
build_index -> File;
build_index -> range;
build_index -> add;
build_index -> index_gpu_to_cpu;
build_index -> setup_dataloader;
build_index -> get_index_embeddings;
build_index -> sample;
build_index -> PCA;
build_index -> fit;
build_index -> dump;
build_index -> reduce_embedding_dim;
build_index -> list;
build_index -> open;
build_index -> load;
build_index -> get_num_gpus;
build_index -> int;
build_index -> len;
build_index -> getmembers;
build_index -> IndexCreator;
build_index -> create_index;
write_index -> enumerate;
write_index -> write_index;
write_index -> request_data;
setup_dataloader -> EntityLinkingDataset;
setup_dataloader -> DataLoader;
setup_dataloader -> get;
get_index_embeddings -> File;
get_index_embeddings -> create_dataset;
get_index_embeddings -> close;
get_index_embeddings -> dump;
get_index_embeddings -> no_grad;
get_index_embeddings -> tqdm;
get_index_embeddings -> open;
get_index_embeddings -> to;
get_index_embeddings -> forward;
get_index_embeddings -> extend;
get_index_embeddings -> numpy;
get_index_embeddings -> cpu;
get_index_embeddings -> detach;
reduce_embedding_dim -> info;
reduce_embedding_dim -> array;
reduce_embedding_dim -> File;
reduce_embedding_dim -> create_dataset;
reduce_embedding_dim -> close;
reduce_embedding_dim -> transform;
create_dataset -> makedirs;
create_dataset -> sorted;
create_dataset -> write_vocab;
create_dataset -> write_data;
create_dataset -> remove;
create_dataset -> list;
transform -> isinstance;
transform -> get_adapter_attributes_from_linear;
transform -> dict;
transform -> info;
transform -> match;
transform -> LinearAdapter;
transform -> ParallelLinearAdapter;
transform -> LoRALinear;
transform -> ModuleDict;
transform -> LoRALinearSplitQKV;
transform -> LoRALinearSplitFC1UpGate;
transform -> getattr;
transform -> is_expert_linear;
transform -> ParallelLinearDoRAAdapter;
transform -> DoRALinear;
transform -> lora_cls;
transform -> hasattr;
transform -> no_grad;
transform -> to;
transform -> replace;
transform -> _validate_inputs;
transform -> _transform;
transform -> transform;
transform -> NotImplementedError;
get_query_embedding -> tokenizer;
get_query_embedding -> forward;
get_query_embedding -> to;
get_query_embedding -> LongTensor;
query_index -> numpy;
query_index -> search;
query_index -> OrderedDict;
query_index -> dict;
query_index -> transform;
query_index -> astype;
query_index -> cpu;
query_index -> len;
query_index -> detach;
query_index -> get_query_embedding;
read_index -> open;
read_index -> read;
read_index -> unpack;
read_index -> read_longs;
read_index -> index_file_path;
process_umls_training_dataset -> print;
process_umls_training_dataset -> read_table;
process_umls_training_dataset -> open;
process_umls_training_dataset -> seed;
process_umls_training_dataset -> tqdm;
process_umls_training_dataset -> close;
process_umls_training_dataset -> range;
process_umls_training_dataset -> len;
process_umls_training_dataset -> append;
process_umls_training_dataset -> list;
process_umls_training_dataset -> int;
process_umls_training_dataset -> shuffle;
process_umls_training_dataset -> type;
process_umls_training_dataset -> combinations;
process_umls_training_dataset -> random;
process_umls_training_dataset -> write;
process_umls_index_dataset -> print;
process_umls_index_dataset -> read_table;
process_umls_index_dataset -> close;
process_umls_index_dataset -> dump;
process_umls_index_dataset -> open;
process_umls_index_dataset -> tqdm;
process_umls_index_dataset -> iterrows;
process_umls_index_dataset -> int;
process_umls_index_dataset -> write;
process_umls_index_dataset -> type;
update_data_dir -> info;
update_data_dir -> join;
flatten_dict -> items;
flatten_dict -> dict;
flatten_dict -> isinstance;
flatten_dict -> extend;
flatten_dict -> append;
flatten_dict -> flatten_dict;
use_inference_server -> test;
use_inference_server -> ValueError;
use_inference_server -> is_pipeline_first_stage;
use_inference_server -> MegatronServer;
use_inference_server -> run;
use_inference_server -> LongTensor;
use_inference_server -> broadcast;
use_inference_server -> get_tensor_model_parallel_rank;
use_inference_server -> new_event_loop;
use_inference_server -> Thread;
use_inference_server -> start;
use_inference_server -> cuda;
use_inference_server -> item;
use_inference_server -> generate;
use_inference_server -> partial;
update_data_dir_for_testing -> info;
predict_from_examples -> eval;
predict_from_examples -> to;
predict_from_examples -> _setup_infer_dataloader;
predict_from_examples -> train;
predict_from_examples -> is_available;
predict_from_examples -> forward;
predict_from_examples -> tensor2list;
predict_from_examples -> convert_intent_ids_to_intent_names;
predict_from_examples -> argmax;
predict_from_examples -> mask_unused_subword_slots;
predict_from_examples -> zip;
predict_from_examples -> append;
predict_from_examples -> len;
predict_from_examples -> strip;
predict_from_examples -> int;
predict_from_examples -> info;
predict_from_examples -> sigmoid;
predict_from_examples -> enumerate;
predict_from_examples -> round;
optimize_threshold -> list;
optimize_threshold -> prediction_probabilities;
optimize_threshold -> arange;
optimize_threshold -> max;
optimize_threshold -> info;
optimize_threshold -> open;
optimize_threshold -> append;
optimize_threshold -> tolist;
optimize_threshold -> precision_score;
optimize_threshold -> recall_score;
optimize_threshold -> f1_score;
optimize_threshold -> readlines;
optimize_threshold -> split;
optimize_threshold -> map;
optimize_threshold -> range;
optimize_threshold -> strip;
optimize_threshold -> len;
get_split_dim -> keys;
get_split_dim -> Exception;
get_split_dim -> format;
split_tensor_for_tp -> split;
split_tensor_for_tp -> chunk;
split_tensor_for_tp -> zip;
split_tensor_for_tp -> range;
split_tensor_for_tp -> append;
split_tensor_for_tp -> reshape;
split_tensor_for_tp -> cat;
split_tensor_for_tp -> Exception;
split_tensor_for_tp -> flatten;
combine_tp_tensors -> len;
combine_tp_tensors -> cat;
combine_tp_tensors -> split;
combine_tp_tensors -> append;
combine_tp_tensors -> range;
combine_tp_tensors -> reshape;
combine_tp_tensors -> flatten;
combine_tp_tensors -> Exception;
force_cpu_model -> open_dict;
force_cpu_model -> get;
restore_model_config -> open_dict;
restore_model_config -> items;
restore_model_config -> info;
write_tp_pp_split -> range;
write_tp_pp_split -> named_parameters;
write_tp_pp_split -> clone;
write_tp_pp_split -> info;
write_tp_pp_split -> save_to;
write_tp_pp_split -> RuntimeError;
write_tp_pp_split -> pad;
write_tp_pp_split -> len;
split_tp_partition_only -> AppState;
split_tp_partition_only -> enumerate;
split_tp_partition_only -> write_tp_pp_split;
split_tp_partition_only -> ValueError;
split_tp_partition_only -> items;
split_tp_partition_only -> open;
split_tp_partition_only -> extractall;
split_tp_partition_only -> int;
split_tp_partition_only -> replace;
split_tp_partition_only -> get_split_dim;
split_tp_partition_only -> split_tensor_for_tp;
split_tp_partition_only -> append;
split_tp_partition_only -> state_dict;
split_tp_partition_only -> str;
split_tp_partition_only -> dirname;
split_tp_partition_only -> findall;
split_tp_partition_only -> named_parameters;
split_tp_partition_only -> len;
split_tp_partition_only -> compute_tp_splits;
merge_partition -> len;
merge_partition -> OrderedDict;
merge_partition -> enumerate;
merge_partition -> load_state_dict;
merge_partition -> items;
merge_partition -> get_split_dim;
merge_partition -> list;
merge_partition -> deepcopy;
merge_partition -> save_to;
merge_partition -> combine_tp_tensors;
merge_partition -> int;
merge_partition -> replace;
merge_partition -> cpu;
merge_partition -> str;
merge_partition -> range;
merge_partition -> findall;
merge_partition -> sum;
merge_partition -> info;
merge_partition -> named_parameters;
merge_partition -> keys;
merge_partition -> max;
merge_partition -> append;
merge_partition -> get;
merge_partition -> debug;
merge_partition -> compute_tp_merge;
merge_partition -> parameters;
compute_tp_splits -> lower;
compute_tp_splits -> debug;
compute_tp_splits -> split;
compute_tp_splits -> str;
compute_tp_splits -> chunk;
compute_tp_splits -> range;
compute_tp_splits -> get;
compute_tp_splits -> ValueError;
compute_tp_splits -> cat;
compute_tp_splits -> append;
compute_tp_splits -> zip;
compute_tp_merge -> lower;
compute_tp_merge -> range;
compute_tp_merge -> cat;
compute_tp_merge -> info;
compute_tp_merge -> len;
compute_tp_merge -> append;
compute_tp_merge -> narrow;
compute_tp_merge -> str;
compute_tp_merge -> chunk;
compute_tp_merge -> RuntimeError;
compute_tp_merge -> get;
debug_log_split_param_diff -> debug;
split_partition -> AppState;
split_partition -> sum;
split_partition -> compute_split_index;
split_partition -> info;
split_partition -> compute_splits;
split_partition -> compute_split_offset;
split_partition -> write_tp_pp_split;
split_partition -> len;
split_partition -> ValueError;
split_partition -> lower;
split_partition -> GPTHandler;
split_partition -> T5Handler;
split_partition -> parameters;
compute_split_index -> hasattr;
compute_split_index -> get;
compute_split_index -> info;
compute_split_index -> named_parameters;
compute_splits -> named_parameters;
compute_splits -> debug_log_split_param_diff;
compute_splits -> compute_tp_splits;
compute_splits -> append;
compute_splits -> info;
compute_splits -> len;
compute_splits -> insert;
nemo_export -> hydra_runner;
nemo_export -> Trainer;
nemo_export -> info;
nemo_export -> format;
nemo_export -> freeze;
nemo_export -> eval;
nemo_export -> export;
nemo_export -> join;
nemo_export -> NLPDDPStrategy;
nemo_export -> NLPSaveRestoreConnector;
nemo_export -> isdir;
nemo_export -> restore_from;
nemo_export -> set_struct;
nemo_export -> error;
nemo_export -> open_dict;
nemo_export -> AppState;
nemo_export -> inject_model_parallel_rank;
nemo_export -> get_model_class;
nemo_export -> load_from_checkpoint;
nemo_export -> ValueError;
nemo_export -> to;
nemo_export -> fake_initialize_model_parallel;
nemo_export -> get_args;
nemo_export -> setLevel;
nemo_export -> TrainerConfig;
nemo_export -> to_container;
nemo_export -> getattr;
nemo_export -> create;
nemo_export -> isinstance;
nemo_export -> exit;
nemo_export -> set_export_config;
nemo_export -> upper;
nemo_export -> inference_mode;
nemo_export -> split;
nemo_export -> autocast;
nemo_export -> no_grad;
nemo_export -> len;
nemo_export -> Exception;
nemo_export -> input_example;
nemo_export -> items;
nemo_export -> append;
nemo_export -> bool;
fake_initialize_model_parallel -> min;
fake_initialize_model_parallel -> RankGenerator;
fake_initialize_model_parallel -> generator_wrapper;
fake_initialize_model_parallel -> index;
fake_initialize_model_parallel -> info;
fake_initialize_model_parallel -> RuntimeError;
fake_initialize_model_parallel -> get_ranks;
fake_initialize_model_parallel -> append;
fake_initialize_model_parallel -> zip;
fake_initialize_model_parallel -> list;
fake_initialize_model_parallel -> len;
fake_initialize_model_parallel -> cycle;
load_distillation_config -> tuple;
load_distillation_config -> LogitsKLLoss;
load_distillation_config -> LogitsAndIntermediatesLossBalancer;
load_distillation_config -> DistillationConfig;
load_distillation_config -> warning;
load_distillation_config -> is_pipeline_last_stage;
load_distillation_config -> ProjectionLayer;
load_distillation_config -> open;
load_distillation_config -> safe_load;
load_distillation_config -> _adjust_layer_index_for_pp;
load_distillation_config -> HiddenStateCosineLoss;
load_distillation_config -> get_tensor_and_context_parallel_rank;
load_distillation_config -> print;
all_reduce_autograd -> apply;
adjust_distillation_model_for_mcore -> state_dict;
adjust_distillation_model_for_mcore -> MethodType;
adjust_distillation_model_for_mcore -> len;
adjust_distillation_model_for_mcore -> pop;
adjust_distillation_model_for_mcore -> delattr;
adjust_distillation_model_for_mcore -> _compute_language_model_loss;
adjust_distillation_model_for_mcore -> ModeloptStateManager;
adjust_distillation_model_for_mcore -> hide_teacher_model;
adjust_distillation_model_for_mcore -> _sharded_state_dict;
adjust_distillation_model_for_mcore -> zeros_like;
adjust_distillation_model_for_mcore -> compute_language_model_loss;
adjust_distillation_model_for_mcore -> set_input_tensor;
adjust_distillation_model_for_mcore -> sharded_state_dict;
adjust_distillation_model_for_mcore -> no_grad;
adjust_distillation_model_for_mcore -> eval;
adjust_distillation_model_for_mcore -> _teacher_model;
adjust_distillation_model_for_mcore -> only_student_forward;
adjust_distillation_model_for_mcore -> forward;
adjust_distillation_model_for_mcore -> is_pipeline_last_stage;
adjust_distillation_model_for_mcore -> cat;
adjust_distillation_model_for_mcore -> type;
_compute_language_model_loss -> _compute_language_model_loss;
_compute_language_model_loss -> zeros_like;
_compute_language_model_loss -> compute_language_model_loss;
_compute_language_model_loss -> type;
_sharded_state_dict -> hide_teacher_model;
_sharded_state_dict -> _sharded_state_dict;
_sharded_state_dict -> sharded_state_dict;
_sharded_state_dict -> type;
_teacher_provider -> info;
_teacher_provider -> _merge_model_arch_fields;
_teacher_provider -> restore_from;
_teacher_provider -> get_model_module_list;
_merge_model_arch_fields -> load_config;
_merge_model_arch_fields -> masked_copy;
_merge_model_arch_fields -> open_dict;
_merge_model_arch_fields -> merge;
_merge_model_arch_fields -> is_missing;
get_model_module_list -> isinstance;
get_model_module_list -> list;
get_model_module_list -> extract_module;
get_model_module_list -> hasattr;
get_model_module_list -> map;
model_provider_func -> MCoreGPTModel;
model_provider_func -> load_distillation_config;
model_provider_func -> convert;
model_provider_func -> adjust_distillation_model_for_mcore;
model_provider_func -> AssertionError;
model_provider_func -> get;
model_provider_func -> is_pipeline_first_stage;
model_provider_func -> extend_instance;
model_provider_func -> get_specs;
model_provider_func -> deepcopy;
model_provider_func -> token_to_id;
model_provider_func -> info;
model_provider_func -> MCoreNevaModel;
model_provider_func -> NevaModel;
model_provider_func -> is_initialized;
model_provider_func -> setup_environment;
model_provider_func -> launch;
model_provider_func -> sum;
model_provider_func -> numel;
model_provider_func -> parameters;
model_provider_func -> ControlLDM;
model_provider_func -> DreamBooth;
model_provider_func -> Imagen;
model_provider_func -> LatentDiffusionEdit;
model_provider_func -> DiffusionEngine;
model_provider_func -> LatentDiffusion;
model_provider_func -> ContentFilteringModel;
model_provider_func -> CLIPModel;
model_provider_func -> build_transformer_config;
model_provider_func -> MCoreBertEmbeddingModel;
model_provider_func -> NeMoBertEmbeddingModel;
model_provider_func -> model_provider_func;
model_provider_func -> super;
model_provider_func -> MCoreBertModelWrapperWithPostLNSupport;
model_provider_func -> NeMoBertModel;
model_provider_func -> get_bert_layer_with_transformer_engine_spec_postln;
model_provider_func -> mcore_model_customize;
model_provider_func -> GPTModel;
model_provider_func -> GriffinModel;
model_provider_func -> getattr;
model_provider_func -> warning;
model_provider_func -> _populate_encoder_decoder_configs_for_backward_compatibility;
model_provider_func -> ValueError;
model_provider_func -> MCoreT5Model;
model_provider_func -> MegatronTokenLevelEncoderDecoderModule;
model_provider_func -> hasattr;
model_provider_func -> get_pipeline_model_parallel_world_size;
model_provider_func -> MambaModel;
model_provider_func -> ImportError;
model_provider_func -> MegatronRetrievalTokenLevelEncoderDecoderModule;
model_provider_func -> build_retro_config;
model_provider_func -> MCoreRetroModel;
model_provider_func -> get_retro_decoder_block_spec;
model_provider_func -> MegatronTokenLevelEncoderDecoderSpeechLLMModule;
model_provider_func -> VitClassificationModel;
extend_instance -> type;
get_specs -> mcore_supports_moe;
get_specs -> get_gpt_layer_local_spec;
get_specs -> get_gpt_layer_with_transformer_engine_spec;
get_specs -> get_falcon_layer_spec;
get_specs -> get_gemma2_layer_spec;
get_specs -> get_gpt_full_te_layer_autocast_spec;
get_specs -> get_gpt_layer_modelopt_spec;
get_specs -> get_gpt_layer_with_te_and_hyena_spec;
get_specs -> get_gpt_decoder_block_spec;
get_specs -> ValueError;
get_forward_output_and_loss_func -> get_batch;
get_forward_output_and_loss_func -> set;
get_forward_output_and_loss_func -> get_batch_on_this_context_parallel_rank;
get_forward_output_and_loss_func -> pop;
get_forward_output_and_loss_func -> model;
get_forward_output_and_loss_func -> squeeze;
get_forward_output_and_loss_func -> get_pipeline_model_parallel_world_size;
get_forward_output_and_loss_func -> update;
get_forward_output_and_loss_func -> add;
get_forward_output_and_loss_func -> is_pipeline_first_stage;
get_forward_output_and_loss_func -> is_pipeline_last_stage;
get_forward_output_and_loss_func -> remove;
get_forward_output_and_loss_func -> PackedSeqParams;
get_forward_output_and_loss_func -> get_context_parallel_world_size;
get_forward_output_and_loss_func -> keys;
get_forward_output_and_loss_func -> cuda;
get_forward_output_and_loss_func -> items;
get_forward_output_and_loss_func -> loss_func;
get_forward_output_and_loss_func -> unwrap_model;
get_forward_output_and_loss_func -> compute_kd_loss;
get_forward_output_and_loss_func -> isnan;
get_forward_output_and_loss_func -> cat;
get_forward_output_and_loss_func -> all_reduce;
get_forward_output_and_loss_func -> average_losses_across_data_parallel_group;
get_forward_output_and_loss_func -> isinstance;
get_forward_output_and_loss_func -> Version;
get_forward_output_and_loss_func -> error;
get_forward_output_and_loss_func -> zeros_like;
get_forward_output_and_loss_func -> item;
get_forward_output_and_loss_func -> argmin;
get_forward_output_and_loss_func -> version;
get_forward_output_and_loss_func -> count_nonzero;
get_forward_output_and_loss_func -> view;
get_forward_output_and_loss_func -> detach;
get_forward_output_and_loss_func -> get_data_parallel_group;
get_forward_output_and_loss_func -> clone;
get_forward_output_and_loss_func -> tensor;
get_forward_output_and_loss_func -> next;
get_forward_output_and_loss_func -> NotImplementedError;
get_forward_output_and_loss_func -> get;
get_forward_output_and_loss_func -> partial;
get_forward_output_and_loss_func -> dict;
get_forward_output_and_loss_func -> unsqueeze;
get_forward_output_and_loss_func -> process_batch;
get_forward_output_and_loss_func -> autocast;
get_forward_output_and_loss_func -> get_input;
get_forward_output_and_loss_func -> len;
get_forward_output_and_loss_func -> list;
get_forward_output_and_loss_func -> enumerate;
get_forward_output_and_loss_func -> text_encoder;
get_forward_output_and_loss_func -> repeat;
get_forward_output_and_loss_func -> NotImplemented;
get_forward_output_and_loss_func -> no_grad;
get_forward_output_and_loss_func -> encode;
get_forward_output_and_loss_func -> to;
get_forward_output_and_loss_func -> encode_first_stage;
get_forward_output_and_loss_func -> current_device;
get_forward_output_and_loss_func -> rearrange;
get_forward_output_and_loss_func -> permute;
get_forward_output_and_loss_func -> binary_cross_entropy_with_logits;
get_forward_output_and_loss_func -> stack;
get_forward_output_and_loss_func -> sum;
get_forward_output_and_loss_func -> float;
get_forward_output_and_loss_func -> SigLipLoss;
get_forward_output_and_loss_func -> ClipLoss;
get_forward_output_and_loss_func -> get_data_parallel_rank;
get_forward_output_and_loss_func -> get_data_parallel_world_size;
get_forward_output_and_loss_func -> move_data_to_device;
get_forward_output_and_loss_func -> forward;
get_forward_output_and_loss_func -> log;
get_forward_output_and_loss_func -> contiguous;
get_forward_output_and_loss_func -> mean;
get_forward_output_and_loss_func -> get_context_parallel_rank;
get_forward_output_and_loss_func -> RuntimeError;
get_forward_output_and_loss_func -> thd_get_partitioned_indices;
get_forward_output_and_loss_func -> index_select;
get_forward_output_and_loss_func -> is_te_min_version;
get_forward_output_and_loss_func -> PkgVersion;
get_forward_output_and_loss_func -> size;
get_forward_output_and_loss_func -> getenv;
get_forward_output_and_loss_func -> _process_batch;
get_forward_output_and_loss_func -> is_tensor;
get_forward_output_and_loss_func -> long;
get_forward_output_and_loss_func -> append;
get_forward_output_and_loss_func -> add_scalar;
get_forward_output_and_loss_func -> debug;
get_forward_output_and_loss_func -> argmax;
get_forward_output_and_loss_func -> t;
get_forward_output_and_loss_func -> range;
get_forward_output_and_loss_func -> info;
get_forward_output_and_loss_func -> convert_tokens_to_range;
get_forward_output_and_loss_func -> decode_wav_from_codec_model;
get_forward_output_and_loss_func -> add_audio;
get_forward_output_and_loss_func -> ids_to_text;
get_forward_output_and_loss_func -> add_text;
get_forward_output_and_loss_func -> gather_from_tensor_model_parallel_region;
get_forward_output_and_loss_func -> tolist;
get_forward_output_and_loss_func -> eval;
get_forward_output_and_loss_func -> decode;
get_forward_output_and_loss_func -> plot_alignment_to_numpy_for_speechllm;
get_forward_output_and_loss_func -> add_image;
get_forward_output_and_loss_func -> ids_to_tokens;
get_forward_output_and_loss_func -> split;
get_forward_output_and_loss_func -> numpy;
get_forward_output_and_loss_func -> cpu;
get_forward_output_and_loss_func -> cross_entropy;
get_batch -> keys;
get_batch -> tolist;
get_batch -> isinstance;
get_batch -> clone;
get_batch -> reshape;
get_batch -> repeat;
get_batch -> to;
get_batch -> prod;
get_batch -> tensor;
get_batch -> next;
get_batch -> cuda;
get_batch -> get_ltor_masks_and_position_ids;
get_batch -> get;
get_batch -> contiguous;
get_batch_on_this_context_parallel_rank -> get_context_parallel_world_size;
get_batch_on_this_context_parallel_rank -> sum;
get_batch_on_this_context_parallel_rank -> get_context_parallel_rank;
get_batch_on_this_context_parallel_rank -> items;
get_batch_on_this_context_parallel_rank -> view;
get_batch_on_this_context_parallel_rank -> cuda;
get_batch_on_this_context_parallel_rank -> index_select;
get_batch_on_this_context_parallel_rank -> tensor;
loss_func -> loss_func;
loss_func -> sum;
loss_func -> super;
loss_func -> gather_from_tensor_model_parallel_region;
loss_func -> reshape;
loss_func -> get_context_parallel_world_size;
loss_func -> unwrap_model;
loss_func -> compute_kd_loss;
loss_func -> isnan;
loss_func -> cat;
loss_func -> all_reduce;
loss_func -> average_losses_across_data_parallel_group;
loss_func -> zeros_like;
loss_func -> count_nonzero;
loss_func -> view;
loss_func -> detach;
loss_func -> get_data_parallel_group;
loss_func -> clone;
loss_func -> cuda;
loss_func -> tensor;
loss_func -> float;
loss_func -> NotImplementedError;
loss_func -> get;
loss_func -> dict;
loss_func -> unsqueeze;
loss_func -> items;
loss_func -> log;
loss_func -> contiguous;
loss_func -> mean;
loss_func -> chunk;
loss_func -> stack;
loss_func -> mm;
loss_func -> clamp;
loss_func -> _gather_global_inbatch_representations;
loss_func -> inference_loss_func;
loss_func -> transpose;
loss_func -> range;
loss_func -> cross_entropy_loss;
loss_func -> len;
loss_func -> multiply;
loss_func -> repeat;
loss_func -> arange;
loss_func -> normalize;
loss_func -> constrastive_scores;
loss_func -> cross_entropy;
loss_func -> get_context_parallel_group;
loss_func -> long;
loss_func -> zeros;
loss_func -> logsigmoid;
loss_func -> isinstance;
loss_func -> set;
loss_func -> keys;
loss_func -> RuntimeError;
loss_func -> pop;
loss_func -> debug;
loss_func -> argmax;
unwrap_model -> isinstance;
unwrap_model -> append;
unwrap_model -> hasattr;
configure_optimizers -> hide_teacher_model;
configure_optimizers -> configure_optimizers;
configure_optimizers -> super;
configure_optimizers -> setup_optimization;
configure_optimizers -> list;
configure_optimizers -> instantiate_optimizer_from_config;
configure_optimizers -> parameters;
configure_optimizers -> from_config_dict;
configure_optimizers -> print;
configure_optimizers -> LambdaLR;
configure_optimizers -> Adam;
configure_optimizers -> instantiate_from_config;
configure_optimizers -> reverse;
configure_optimizers -> set;
configure_optimizers -> extend;
configure_optimizers -> getattr;
configure_optimizers -> get;
configure_optimizers -> update;
configure_optimizers -> isinstance;
configure_optimizers -> chain;
configure_optimizers -> append;
configure_optimizers -> setup_optimizer_param_groups;
configure_optimizers -> MainParamsOptimizerWrapper;
configure_optimizers -> hasattr;
configure_optimizers -> AssertionError;
configure_optimizers -> init_params;
configure_optimizers -> prepare_lr_scheduler;
configure_optimizers -> init_params_bucket;
configure_optimizers -> reversed;
configure_optimizers -> init_param_buffer;
configure_optimizers -> ValueError;
configure_optimizers -> from_iterable;
configure_optimizers -> range;
configure_optimizers -> str;
configure_optimizers -> len;
configure_optimizers -> get_pipeline_model_parallel_world_size;
configure_optimizers -> get_model_module_list;
configure_optimizers -> is_pipeline_first_stage;
configure_optimizers -> is_pipeline_last_stage;
configure_optimizers -> shared_embedding_or_output_weight;
configure_optimizers -> word_embeddings_weight;
configure_optimizers -> any;
configure_optimizers -> position_embeddings_weight;
configure_optimizers -> is_float8tensor;
configure_optimizers -> filter;
configure_optimizers -> make_parameter_bucket;
configure_optimizers -> named_parameters;
configure_optimizers -> is_rank_in_embedding_group;
configure_optimizers -> is_rank_in_position_embedding_group;
configure_optimizers -> get_pipeline_model_parallel_split_rank;
configure_optimizers -> is_rank_in_encoder_relative_position_embedding_group;
configure_optimizers -> is_rank_in_decoder_relative_position_embedding_group;
configure_optimizers -> encoder_relative_position_embeddings_weight;
configure_optimizers -> decoder_relative_position_embeddings_weight;
configure_optimizers -> decoder_cross_attention_relative_position_embeddings_weight;
configure_optimizers -> freeze_and_subset;
configure_optimizers -> instantiate;
configure_optimizers -> copy;
configure_optimizers -> set_struct;
configure_optimizers -> pop;
configure_optimizers -> debug;
configure_optimizers -> get_warmup_steps;
configure_optimizers -> info;
configure_optimizers -> RAdam;
configure_optimizers -> exit;
configure_optimizers -> WarmupPolicy;
configure_optimizers -> _get_max_steps;
configure_optimizers -> ExponentialLR;
configure_optimizers -> CosineAnnealing;
configure_optimizers -> SGD;
configure_optimizers -> MyTestOptimizer;
configure_optimizers -> DoNothingOptimizer;
configure_optimizers -> OptCounter;
pre_forward -> isinstance;
pre_forward -> detach;
pre_forward -> _projection;
post_forward -> contiguous;
post_forward -> transpose;
log_softmax -> reduce_max;
log_softmax -> reduce_exp;
log_softmax -> TokensHeadEmb;
log_softmax -> from_numpy;
log_softmax -> float;
log_softmax -> log_softmax;
log_softmax -> numpy;
log -> log;
log -> clamp;
fwd_output_and_loss_func -> get_batch;
fwd_output_and_loss_func -> set;
fwd_output_and_loss_func -> get_batch_on_this_context_parallel_rank;
fwd_output_and_loss_func -> pop;
fwd_output_and_loss_func -> model;
fwd_output_and_loss_func -> squeeze;
fwd_output_and_loss_func -> get_pipeline_model_parallel_world_size;
fwd_output_and_loss_func -> update;
fwd_output_and_loss_func -> add;
fwd_output_and_loss_func -> is_pipeline_first_stage;
fwd_output_and_loss_func -> is_pipeline_last_stage;
fwd_output_and_loss_func -> remove;
fwd_output_and_loss_func -> PackedSeqParams;
fwd_output_and_loss_func -> get_context_parallel_world_size;
fwd_output_and_loss_func -> keys;
fwd_output_and_loss_func -> cuda;
fwd_output_and_loss_func -> items;
fwd_output_and_loss_func -> loss_func;
fwd_output_and_loss_func -> unwrap_model;
fwd_output_and_loss_func -> compute_kd_loss;
fwd_output_and_loss_func -> isnan;
fwd_output_and_loss_func -> cat;
fwd_output_and_loss_func -> all_reduce;
fwd_output_and_loss_func -> average_losses_across_data_parallel_group;
fwd_output_and_loss_func -> isinstance;
fwd_output_and_loss_func -> Version;
fwd_output_and_loss_func -> error;
fwd_output_and_loss_func -> zeros_like;
fwd_output_and_loss_func -> item;
fwd_output_and_loss_func -> argmin;
fwd_output_and_loss_func -> version;
fwd_output_and_loss_func -> count_nonzero;
fwd_output_and_loss_func -> view;
fwd_output_and_loss_func -> detach;
fwd_output_and_loss_func -> get_data_parallel_group;
fwd_output_and_loss_func -> clone;
fwd_output_and_loss_func -> tensor;
fwd_output_and_loss_func -> next;
fwd_output_and_loss_func -> get;
fwd_output_and_loss_func -> partial;
fwd_output_and_loss_func -> process_batch;
fwd_output_and_loss_func -> len;
fwd_output_and_loss_func -> enumerate;
fwd_output_and_loss_func -> move_data_to_device;
fwd_output_and_loss_func -> forward;
fwd_output_and_loss_func -> log;
fwd_output_and_loss_func -> contiguous;
fwd_output_and_loss_func -> sum;
fwd_output_and_loss_func -> mean;
fwd_output_and_loss_func -> permute;
fwd_output_and_loss_func -> get_context_parallel_rank;
fwd_output_and_loss_func -> RuntimeError;
fwd_output_and_loss_func -> thd_get_partitioned_indices;
fwd_output_and_loss_func -> index_select;
fwd_output_and_loss_func -> is_te_min_version;
fwd_output_and_loss_func -> PkgVersion;
fwd_output_and_loss_func -> size;
fwd_output_and_loss_func -> getenv;
fwd_output_and_loss_func -> _process_batch;
fwd_output_and_loss_func -> unsqueeze;
fwd_output_and_loss_func -> is_tensor;
fwd_output_and_loss_func -> long;
fwd_output_and_loss_func -> append;
fwd_output_and_loss_func -> add_scalar;
fwd_output_and_loss_func -> no_grad;
fwd_output_and_loss_func -> debug;
fwd_output_and_loss_func -> autocast;
fwd_output_and_loss_func -> argmax;
fwd_output_and_loss_func -> t;
fwd_output_and_loss_func -> range;
fwd_output_and_loss_func -> info;
fwd_output_and_loss_func -> convert_tokens_to_range;
fwd_output_and_loss_func -> decode_wav_from_codec_model;
fwd_output_and_loss_func -> add_audio;
fwd_output_and_loss_func -> ids_to_text;
fwd_output_and_loss_func -> add_text;
fwd_output_and_loss_func -> stack;
fwd_output_and_loss_func -> gather_from_tensor_model_parallel_region;
fwd_output_and_loss_func -> tolist;
fwd_output_and_loss_func -> eval;
fwd_output_and_loss_func -> decode;
fwd_output_and_loss_func -> plot_alignment_to_numpy_for_speechllm;
fwd_output_and_loss_func -> add_image;
fwd_output_and_loss_func -> ids_to_tokens;
fwd_output_and_loss_func -> split;
fwd_output_and_loss_func -> numpy;
fwd_output_and_loss_func -> float;
fwd_output_and_loss_func -> cpu;
trim_layers -> named_modules;
trim_layers -> isinstance;
trim_layers -> print;
trim_layers -> sorted;
trim_layers -> len;
trim_layers -> enumerate;
ids_to_text -> isinstance;
ids_to_text -> replace;
ids_to_text -> tolist;
ids_to_text -> extend;
ids_to_text -> ids_to_tokens;
ids_to_text -> join;
ids_to_text -> rstrip;
ids_to_text -> decode;
ids_to_text -> bytes;
ids_to_text -> tokens_to_text;
ids_to_text -> decode_ids;
ids_to_text -> enumerate;
ids_to_text -> strip;
ids_to_text -> hasattr;
ids_to_text -> ids_to_text;
ids_to_text -> append;
ids_to_text -> numpy;
ids_to_text -> index;
ids_to_text -> len;
ids_to_text -> cpu;
ids_to_text -> text_to_ids;
ids_to_text -> values;
detokenize -> ids_to_text;
detokenize -> join;
detokenize -> compile;
detokenize -> detokenize;
detokenize -> strip;
detokenize -> spacing;
detokenize -> sub;
detokenize -> str;
detokenize -> signature;
detokenize -> decode;
get_calib_data_iter -> max;
get_calib_data_iter -> range;
get_calib_data_iter -> load_dataset;
get_calib_data_iter -> min;
get_calib_data_iter -> len;
prune -> entrypoint;
prune -> setup_trainer_and_restore_model_with_modelopt_spec;
prune -> prune_gpt_model;
prune -> save_pruned_model;
prune -> Console;
prune -> print;
predict_step -> forward;
predict_step -> decode_predictions_tensor;
predict_step -> process_aed_timestamp_outputs;
predict_step -> list;
predict_step -> zip;
predict_step -> ctc_decoder_predictions_tensor;
predict_step -> isinstance;
predict_step -> numpy;
predict_step -> detach;
predict_step -> cpu;
predict_step -> rnnt_decoder_predictions_tensor;
predict_step -> ctc_decoder;
predict_step -> no_grad;
predict_step -> _predict_impl;
predict_step -> get_inference_config;
predict_step -> join;
predict_step -> copy;
predict_step -> generate;
predict_step -> get_computeprob_response;
predict_step -> _shared_predict;
predict_step -> get;
predict_step -> size;
predict_step -> get_num_microbatches;
predict_step -> AppState;
predict_step -> reconfigure_num_microbatches_calculator;
predict_step -> set_inference_config;
predict_step -> warning;
predict_step -> get_data_parallel_world_size;
predict_step -> cuda;
predict_step -> move_data_to_device;
predict_step -> ids_to_text;
predict_step -> prepare_llm_input;
predict_step -> decode;
predict_step -> contiguous;
predict_step -> items;
predict_step -> startswith;
predict_step -> len;
predict_step -> long;
predict_step -> cat;
predict_step -> full_like;
predict_step -> NotImplementedError;
predict_step -> megatron_gpt_generate;
predict_step -> complete;
predict_step -> info;
predict_step -> _reconfigure_and_process_inference_batch;
predict_step -> first_stage_of_pipeline;
predict_step -> embed_input;
predict_step -> hasattr;
predict_step -> position_embeddings;
predict_step -> zeros;
predict_step -> get_inference_strategy;
predict_step -> pad;
predict_step -> zero_;
predict_step -> get_forward_backward_func;
predict_step -> time;
predict_step -> range;
predict_step -> stack;
predict_step -> device;
predict_step -> mean;
predict_step -> append;
predict_step -> unsqueeze;
predict_step -> argmax;
predict_step -> softmax;
predict_step -> multinomial;
predict_step -> count_nonzero;
predict_step -> permute;
predict_step -> squeeze;
predict_step -> from_pretrained;
predict_step -> to;
predict_step -> eval;
predict_step -> load;
predict_step -> partial;
predict_step -> exists;
predict_step -> mkdir;
predict_step -> test_dataloader;
predict_step -> extend;
predict_step -> word_error_rate;
predict_step -> add_text;
predict_step -> add_scalar;
predict_step -> clone;
predict_step -> print;
predict_step -> fwd_bwd_function;
predict_step -> view;
predict_step -> topk;
predict_step -> float;
predict_step -> is_available;
predict_step -> item;
predict_step -> convert_tokens_to_range;
predict_step -> decode_wav_from_codec_model;
predict_step -> add_audio;
predict_step -> add_image;
predict_step -> write;
predict_step -> get_embedding;
predict_step -> flatten;
predict_step -> wavlm_sv_extractor;
predict_step -> keys;
predict_step -> tolist;
predict_step -> debug;
predict_step -> format;
predict_step -> transpose;
predict_step -> plot_alignment_to_numpy_for_speechllm;
predict_step -> imwrite;
predict_step -> plot_codec_to_numpy;
predict_step -> dot;
predict_step -> transcribe;
predict_step -> process_text;
predict_step -> arange;
predict_step -> get_forward_output_only_func;
predict_step -> iter;
predict_step -> get_model;
predict_step -> sum;
predict_step -> norm;
predict_step -> wavlm_sv_model;
predict_step -> normalize;
predict_step -> enumerate;
predict_step -> squim_mos_model;
predict_step -> from_numpy;
predict_step -> _step;
predict_step -> predict_step_context;
predict_step -> _step_proxy;
predict_step -> predict_step;
modify_model_config -> open_dict;
modify_model_config -> get;
modify_model_config -> warning;
modify_pretrained_cfg -> open_dict;
modify_pretrained_cfg -> set_struct;
install_megatron_dependence -> spec_from_loader;
install_megatron_dependence -> module_from_spec;
install_megatron_dependence -> exec;
parse_weights -> endswith;
parse_weights -> get;
parse_weights -> isinstance;
parse_weights -> parse_weights;
parse_weights -> item;
parse_weights -> read;
parse_weights -> RuntimeError;
parse_weights -> find;
parse_weights -> replace;
parse_weights -> info;
parse_weights -> warning;
parse_weights -> prod;
parse_weights -> tensor;
parse_weights -> size;
parse_weights -> cpu;
add_optimizer_state -> OrderedDict;
add_optimizer_state -> dict;
add_optimizer_state -> int;
megatron_lm_inject_model_parallel_rank -> uninject_model_parallel_rank;
megatron_lm_inject_model_parallel_rank -> AppState;
megatron_lm_inject_model_parallel_rank -> dirname;
megatron_lm_inject_model_parallel_rank -> basename;
uninject_model_parallel_rank -> str;
uninject_model_parallel_rank -> any;
uninject_model_parallel_rank -> dirname;
uninject_model_parallel_rank -> basename;
uninject_model_parallel_rank -> join;
initialize_model_parallel_for_nemo -> AppState;
initialize_model_parallel_for_nemo -> fake_initialize_model_parallel;
initialize_model_parallel_for_nemo -> set_tensor_model_parallel_world_size;
initialize_model_parallel_for_nemo -> set_tensor_model_parallel_rank;
initialize_model_parallel_for_nemo -> set_expert_model_parallel_world_size;
initialize_model_parallel_for_nemo -> set_expert_model_parallel_rank;
initialize_model_parallel_for_nemo -> set_pipeline_model_parallel_world_size;
initialize_model_parallel_for_nemo -> set_pipeline_model_parallel_split_rank;
initialize_model_parallel_for_nemo -> set_pipeline_model_parallel_rank;
initialize_model_parallel_for_nemo -> initialize_rng_tracker;
initialize_model_parallel_for_nemo -> _set_random_seed;
initialize_model_parallel_for_nemo -> set_logging_level;
initialize_model_parallel_for_nemo -> init_num_microbatches_calculator;
initialize_model_parallel_for_nemo -> isinstance;
initialize_model_parallel_for_nemo -> Exception;
initialize_model_parallel_for_nemo -> get_current_global_batch_size;
initialize_model_parallel_for_nemo -> get_micro_batch_size;
initialize_model_parallel_for_nemo -> get_num_microbatches;
save_checkpoint -> AppState;
save_checkpoint -> OrderedDict;
save_checkpoint -> save_checkpoint;
save_checkpoint -> inject_model_parallel_rank;
save_checkpoint -> get;
save_checkpoint -> optimizer_sharded_state_dict;
save_checkpoint -> ckpt_to_dir;
save_checkpoint -> hasattr;
save_checkpoint -> save_sharded_modelopt_state;
save_checkpoint -> len;
save_checkpoint -> get_model_module_list;
save_checkpoint -> _convert_stateful_objects_in_state;
save_checkpoint -> is_rank_0;
save_checkpoint -> ckpt_to_weights_subdir;
save_checkpoint -> format;
save_checkpoint -> get_filesystem;
save_checkpoint -> makedirs;
save_checkpoint -> mkdir;
save_checkpoint -> _save_adapter_weights_only;
save_checkpoint -> save;
save_checkpoint -> callable;
save_checkpoint -> pop;
save_checkpoint -> getattr;
save_checkpoint -> save_pretrained;
save_checkpoint -> NotImplementedError;
save_checkpoint -> super;
save_checkpoint -> str;
save_checkpoint -> get_rank;
save_checkpoint -> _get_iteration_from_checkpoint;
save_checkpoint -> time;
save_checkpoint -> join;
save_checkpoint -> info;
save_checkpoint -> warning;
save_checkpoint -> add_finalize_fn;
save_checkpoint -> int;
save_checkpoint -> dict;
save_checkpoint -> list;
save_checkpoint -> is_global_rank_zero;
save_checkpoint -> filter;
save_checkpoint -> keys;
save_checkpoint -> isinstance;
save_checkpoint -> items;
save_checkpoint -> _create_lora_hf_config;
save_checkpoint -> open;
save_checkpoint -> dump;
save_checkpoint -> adapter_key_filter;
save_checkpoint -> pyt_to_mcore_state_dict;
save_checkpoint -> get_optimizer_state_dict;
save_checkpoint -> force_param_sync;
save_checkpoint -> sharded_state_dict;
save_checkpoint -> unwrap_model;
save_checkpoint -> is_converted;
save_checkpoint -> maybe_finalize_save_checkpoint;
save_checkpoint -> hide_teacher_model;
save_checkpoint -> nullcontext;
save_checkpoint -> type;
save_checkpoint -> schedule_async_request;
save_checkpoint -> debug;
save_checkpoint -> _debug_time;
save_checkpoint -> exists;
save_checkpoint -> _serialize_checkpoint_to_shm;
save_checkpoint -> append;
save_checkpoint -> _serialize_checkpoint_to_bytes;
save_checkpoint -> _check_uploading_results_so_far;
save_checkpoint -> submit;
save_checkpoint -> _upload_file_to_s3;
save_checkpoint -> remove;
save_checkpoint -> _upload_bytes_to_s3;
build_key_mapping -> get;
build_key_mapping -> range;
build_key_mapping -> update;
make_base_shapes -> clear_dims;
make_base_shapes -> zip_infshapes;
make_base_shapes -> save_base_shapes;
setup_environment -> setup_environment;
setup_environment -> get_data_parallel_group;
setup_environment -> model_parallel_is_initialized;
setup_environment -> AppState;
setup_environment -> init_model_parallel;
setup_environment -> get_tensor_model_parallel_world_size;
setup_environment -> parameters;
setup_environment -> super;
setup_environment -> getattr;
setup_environment -> append;
setup_environment -> tensor;
setup_environment -> all_reduce;
setup_environment -> int;
setup_environment -> param_is_not_tensor_parallel_duplicate;
setup_environment -> current_device;
setup_environment -> get_tensor_model_parallel_group;
setup_environment -> setup_device;
setup_environment -> _setup_distributed;
setup_environment -> zip;
setup_environment -> init_device_mesh;
setup_environment -> size;
setup_environment -> _flatten;
setup_environment -> tuple;
setup_environment -> setup_parallel_ranks;
setup_environment -> reset_seed;
setup_environment -> set_world_ranks;
setup_environment -> _get_process_group_backend;
setup_environment -> is_initialized;
setup_environment -> global_rank;
setup_environment -> world_size;
setup_environment -> str;
setup_environment -> info;
setup_environment -> init_process_group;
setup_environment -> rank_zero_info;
setup_environment -> isinstance;
setup_environment -> is_available;
setup_environment -> RuntimeError;
setup_environment -> debug;
setup_environment -> register;
setup_environment -> get;
launch -> setup_globals;
launch -> configure_log;
launch -> Path;
launch -> mkdir;
launch -> info;
launch -> enumerate;
launch -> get_state;
launch -> get;
launch -> list;
launch -> len;
launch -> str;
launch -> format;
launch -> is_available;
launch -> join;
launch -> device_count;
launch -> ValueError;
launch -> execute_job;
launch -> append;
launch -> clear;
launch -> sum;
launch -> sleep;
launch -> zip;
launch -> communicate;
launch -> filter_overrides;
launch -> poll;
launch -> isinstance;
launch -> Exception;
launch -> items;
launch -> wait;
launch -> encode;
launch -> decode;
launch -> launch;
_modify_config -> set_struct;
_modify_config -> open_dict;
_modify_config -> get;
_modify_config -> resolve;
_modify_config -> info;
_modify_config -> hasattr;
_modify_config -> _modify_audio_encoder_config;
_modify_config -> isinstance;
_modify_config -> all;
_modify_config -> ValueError;
load_from_nemo -> modify_confg_fn;
load_from_nemo -> restore_from;
load_from_nemo -> NLPSaveRestoreConnector;
register_optimizer -> format;
register_optimizer -> register_optimizer_params;
register_optimizer -> ValueError;
process_qasample -> format;
process_qasample -> endswith;
process_qasample -> join;
process_qaresponse -> split;
evaluate_predictions -> get_raw_scores;
evaluate_predictions -> apply_no_ans_threshold;
evaluate_predictions -> make_eval_dict;
evaluate_predictions -> bool;
evaluate_predictions -> merge_eval;
evaluate_predictions -> find_all_best_thresh;
evaluate_predictions -> items;
evaluate_predictions -> len;
evaluate_predictions -> merge_eval_dicts;
evaluate_predictions -> get_exact_match_and_f1;
evaluate_predictions -> append;
evaluate_predictions -> list;
validate_checkpoint_loading_args -> ValueError;
validate_checkpoint_loading_args -> isdir;
validate_checkpoint_loading_args -> isfile;
load_from_checkpoint_dir -> AppState;
load_from_checkpoint_dir -> inject_model_parallel_rank;
load_from_checkpoint_dir -> load;
load_from_checkpoint_dir -> modify_confg_fn;
load_from_checkpoint_dir -> fake_initialize_model_parallel;
load_from_checkpoint_dir -> join;
load_from_checkpoint_dir -> NamedTemporaryFile;
load_from_checkpoint_dir -> save;
load_from_checkpoint_dir -> load_from_checkpoint;
make_moe_config_from_dense -> deepcopy;
unwrap -> hasattr;
upcycle -> info;
upcycle -> Trainer;
upcycle -> restore_from;
upcycle -> make_moe_config_from_dense;
upcycle -> MegatronGPTModel;
upcycle -> upcycle_state_dict;
upcycle -> load_state_dict;
upcycle -> NLPSaveRestoreConnector;
upcycle -> is_dir;
upcycle -> save_to;
upcycle -> device;
upcycle -> NLPDDPStrategy;
upcycle -> unwrap;
upcycle -> Path;
get_forward_loop -> len;
get_forward_loop -> warning;
get_forward_loop -> islice;
get_forward_loop -> tqdm;
get_forward_loop -> iter;
get_forward_loop -> range;
get_forward_loop -> fwd_bwd_step;
fwd_bwd_step -> get_pipeline_model_parallel_world_size;
fwd_bwd_step -> fwd_bwd_step;
fwd_bwd_step -> next;
fwd_bwd_step -> get_iterator_k_split;
fwd_bwd_step -> get_model_module_list;
fwd_bwd_step -> get_forward_backward_func;
fwd_bwd_step -> fwd_bwd_function;
fwd_bwd_step -> get_num_microbatches;
fwd_bwd_step -> partial;
fwd_bwd_step -> get_forward_output_and_loss_func;
fwd_bwd_step -> _make_data_iterator_list;
fwd_bwd_step -> get;
fwd_bwd_step -> concat;
fwd_bwd_step -> mean;
fwd_bwd_step -> cuda;
fwd_bwd_step -> sum;
fwd_bwd_step -> len;
fwd_bwd_step -> tensor;
fwd_bwd_step -> vstack;
fwd_bwd_step -> get_module_list;
fwd_bwd_step -> NotImplementedError;
fwd_bwd_step -> stack;
fwd_bwd_step -> current_device;
fwd_bwd_step -> broadcast;
fwd_bwd_step -> get_pipeline_model_parallel_last_rank;
fwd_bwd_step -> get_pipeline_model_parallel_group;
fwd_bwd_step -> isinstance;
fwd_bwd_step -> append;
fwd_bwd_step -> items;
fwd_bwd_step -> startswith;
fwd_bwd_step -> max;
fwd_bwd_step -> unsqueeze;
fwd_bwd_step -> cat;
fwd_bwd_step -> get_micro_batch_size;
fwd_bwd_step -> log;
fwd_bwd_step -> finish_param_sync;
fwd_bwd_step -> range;
fwd_bwd_step -> _execute_fwd_bwd_function;
fwd_bwd_step -> size;
fwd_bwd_step -> _process_batch;
fwd_bwd_step -> dim;
fwd_bwd_step -> copy;
translate_text -> print;
translate_text -> len;
translate_text -> prepare_inference_batch;
translate_text -> ensemble_generator;
translate_text -> ids_to_postprocessed_text;
translate_text -> translate;
translate_text -> tolist;
translate_text -> append;
translate_text -> numpy;
translate_text -> range;
translate_text -> cpu;
translate_text -> view;
prepare_inference_batch -> max;
prepare_inference_batch -> enumerate;
prepare_inference_batch -> to;
prepare_inference_batch -> rstrip;
prepare_inference_batch -> text_to_ids;
prepare_inference_batch -> append;
prepare_inference_batch -> ones;
prepare_inference_batch -> normalize;
prepare_inference_batch -> tokenize;
prepare_inference_batch -> len;
prepare_inference_batch -> FloatTensor;
prepare_inference_batch -> LongTensor;
ids_to_postprocessed_text -> filter_predicted_ids;
ids_to_postprocessed_text -> ids_to_text;
ids_to_postprocessed_text -> numpy;
ids_to_postprocessed_text -> detokenize;
ids_to_postprocessed_text -> split;
ids_to_postprocessed_text -> cpu;
translate -> endswith;
translate -> replace_beam_with_sampling;
translate -> eval;
translate -> DataLoader;
translate -> join;
translate -> makedirs;
translate -> info;
translate -> restore_from;
translate -> TarredTranslationDataset;
translate -> TarredSentenceDataset;
translate -> open;
translate -> enumerate;
translate -> load_from_checkpoint;
translate -> range;
translate -> len;
translate -> batch_translate;
translate -> zip;
translate -> to;
translate -> write;
translate -> squeeze;
translate -> no_grad;
translate -> setup_pre_and_post_processing_utils;
translate -> token_to_id;
translate -> NamedTimer;
translate -> prepare_inference_batch;
translate -> postprocess_outputs;
translate -> train;
translate -> export;
translate -> ValueError;
translate -> print;
translate -> inference_mode;
translate -> decode;
translate -> item;
translate -> type;
translate -> size;
translate -> cpu;
translate -> sum;
score_fusion -> zip;
score_fusion -> append;
replace_beam_with_sampling -> TopKSequenceGenerator;
batch_translate -> no_grad;
batch_translate -> get;
batch_translate -> eval;
batch_translate -> getattr;
batch_translate -> latent2hidden;
batch_translate -> beam_search;
batch_translate -> ids_to_postprocessed_text;
batch_translate -> train;
batch_translate -> encoder;
batch_translate -> encode_latent;
batch_translate -> start;
batch_translate -> stop;
batch_translate -> view;
batch_translate -> tolist;
batch_translate -> numpy;
batch_translate -> cpu;
load_json -> open;
load_json -> load;
dump_json -> open;
dump_json -> dump;
get_context_from_passages -> join;
get_context_from_passages -> append;
convert_msmarco_to_squad_format -> list;
convert_msmarco_to_squad_format -> enumerate;
convert_msmarco_to_squad_format -> tqdm;
convert_msmarco_to_squad_format -> get_context_from_passages;
convert_msmarco_to_squad_format -> format_answers_into_squad_format;
convert_msmarco_to_squad_format -> append;
convert_msmarco_to_squad_format -> isinstance;
convert_msmarco_to_squad_format -> literal_eval;
download -> info;
download -> isfile;
download -> urlopen;
download -> open;
download -> write;
download -> read;
inference -> no_grad;
inference -> isinstance;
inference -> eval;
inference -> to;
inference -> get_verbosity;
inference -> set_verbosity;
inference -> setup_inference_data;
inference -> enumerate;
inference -> cat;
inference -> tensor2list;
inference -> split;
inference -> get_predictions;
inference -> train;
inference -> forward;
inference -> append;
inference -> squeeze;
inference -> dump_predicted_answers_to_file;
inference -> dump_nbest_predictions_to_file;
inference -> _inference;
inference -> convert_dict_outputs_to_lists;
inference -> _get_predictions;
inference -> ValueError;
inference -> is_available;
inference -> create;
inference -> _setup_dataloader_from_config;
inference -> open;
inference -> load;
inference -> write;
inference -> dumps;
query -> str_list2numpy;
query -> setup_media;
query -> isinstance;
query -> update;
query -> repeat;
query -> full;
query -> encode;
query -> ModelClient;
query -> infer_batch;
query -> decode;
query -> len;
query -> astype;
query -> get_args;
query -> query_llm_streaming;
query -> print;
query -> query_llm;
query -> open;
query -> read;
query -> startswith;
query -> NemoQueryLLMPyTorch;
query -> NemoQueryLLMHF;
query -> NemoQueryLLM;
load_data -> tqdm;
load_data -> info;
load_data -> _input_sanity_checks;
load_data -> _insert_text_in_template;
load_data -> _insert_virtual_token_placeholders;
load_data -> text_to_ids;
load_data -> type;
load_data -> loads;
load_data -> len;
load_data -> _truncate_input;
load_data -> append;
load_data -> _find_answer_start;
load_data -> ValueError;
load_data -> keys;
load_data -> list;
load_data -> get_base_dir;
load_data -> format;
load_data -> print;
load_data -> debug;
load_data -> split;
load_data -> NotImplementedError;
load_data -> open;
load_data -> Path;
load_data -> items;
load_data -> load;
load_data -> zip;
load_data -> join;
load_data -> get;
load_data -> defaultdict;
load_data -> append_data;
load_data -> set;
load_data -> SequenceMatcher;
load_data -> error;
load_data -> fromtimestamp;
load_data -> strftime;
load_data -> exists;
load_data -> round;
load_data -> getmtime;
load_data -> dump;
load_data -> isinstance;
load_data -> add;
load_data -> compute_measures;
load_data -> eval;
load_data -> set_seqs;
load_data -> get_matching_blocks;
load_data -> absolute_audio_filepath;
load_data -> eval_bandwidth;
load_data -> int;
load_data -> strip;
load_data -> range;
load_data -> log10;
load_data -> max;
load_data -> exit;
load_data -> abs;
download_text2sparql -> makedirs;
download_text2sparql -> info;
download_text2sparql -> if_exist;
download_text2sparql -> Request;
download_text2sparql -> open;
download_text2sparql -> write;
download_text2sparql -> join;
download_text2sparql -> read;
download_text2sparql -> urlopen;
if_exist -> exists;
process_text2sparql -> info;
process_text2sparql -> makedirs;
process_text2sparql -> join;
process_text2sparql -> if_exist;
process_text2sparql -> open;
process_text2sparql -> reader;
process_text2sparql -> write;
process_text2sparql -> next;
process_text2sparql -> format;
process_text2sparql -> lower;
classifytext -> no_grad;
classifytext -> next;
classifytext -> eval;
classifytext -> get_verbosity;
classifytext -> set_verbosity;
classifytext -> _setup_infer_dataloader;
classifytext -> enumerate;
classifytext -> train;
classifytext -> parameters;
classifytext -> forward;
classifytext -> tensor2list;
classifytext -> extend;
classifytext -> argmax;
classifytext -> to;
process_imdb -> info;
process_imdb -> makedirs;
process_imdb -> open;
process_imdb -> write;
process_imdb -> close;
process_imdb -> exists;
process_imdb -> ValueError;
process_imdb -> join;
process_imdb -> glob;
process_imdb -> replace;
process_imdb -> strip;
process_imdb -> lower;
process_imdb -> read;
process_sst2 -> info;
process_sst2 -> makedirs;
process_sst2 -> open;
process_sst2 -> write;
process_sst2 -> close;
process_sst2 -> exists;
process_sst2 -> ValueError;
process_sst2 -> join;
process_sst2 -> _read_tsv;
process_sst2 -> reader;
process_sst2 -> append;
process_sst2 -> lower;
_read_tsv -> open;
_read_tsv -> reader;
_read_tsv -> append;
process_chemprot -> info;
process_chemprot -> makedirs;
process_chemprot -> open;
process_chemprot -> close;
process_chemprot -> exists;
process_chemprot -> ValueError;
process_chemprot -> join;
process_chemprot -> _read_tsv;
process_chemprot -> reader;
process_chemprot -> write;
process_chemprot -> append;
process_chemprot -> lower;
process_chemprot -> len;
process_thucnews -> info;
process_thucnews -> makedirs;
process_thucnews -> exists;
process_thucnews -> ValueError;
process_thucnews -> open;
process_thucnews -> index;
process_thucnews -> glob;
process_thucnews -> int;
process_thucnews -> close;
process_thucnews -> join;
process_thucnews -> tqdm;
process_thucnews -> len;
process_thucnews -> replace;
process_thucnews -> write;
process_thucnews -> strip;
process_thucnews -> read;
spoken_preprocessing -> casefold;
spoken_preprocessing -> replace;
spoken_preprocessing -> sub;
fill_alignment_matrix -> split;
fill_alignment_matrix -> findall;
fill_alignment_matrix -> zeros;
fill_alignment_matrix -> range;
fill_alignment_matrix -> ValueError;
fill_alignment_matrix -> replace;
fill_alignment_matrix -> len;
fill_alignment_matrix -> list;
fill_alignment_matrix -> map;
fill_alignment_matrix -> str;
check_monotonicity -> argwhere;
check_monotonicity -> vstack;
check_monotonicity -> is_sorted;
check_monotonicity -> all;
check_monotonicity -> argsort;
get_targets -> range;
get_targets -> len;
get_targets -> append;
get_targets -> join;
get_targets -> all;
get_targets_from_back -> len;
get_targets_from_back -> range;
get_targets_from_back -> list;
get_targets_from_back -> reversed;
get_targets_from_back -> append;
get_targets_from_back -> join;
get_targets_from_back -> all;
filter_file -> open;
filter_file -> close;
filter_file -> append;
filter_file -> startswith;
filter_file -> strip;
filter_file -> split;
filter_file -> write;
filter_file -> casefold;
filter_file -> len;
filter_file -> join;
process_file_itn -> open;
process_file_itn -> startswith;
process_file_itn -> split;
process_file_itn -> get_src_and_dst_for_alignment;
process_file_itn -> write;
process_file_itn -> append;
process_file_itn -> casefold;
process_file_itn -> zip;
process_file_itn -> len;
process_file_itn -> strip;
process_file_itn -> str;
process_file_itn -> join;
process_file_itn -> replace;
get_src_and_dst_for_alignment -> casefold;
get_src_and_dst_for_alignment -> spoken_preprocessing;
get_src_and_dst_for_alignment -> split;
get_src_and_dst_for_alignment -> range;
get_src_and_dst_for_alignment -> list;
get_src_and_dst_for_alignment -> join;
get_src_and_dst_for_alignment -> sub;
get_src_and_dst_for_alignment -> min;
get_src_and_dst_for_alignment -> split_text_by_isalpha;
get_src_and_dst_for_alignment -> isalpha;
get_src_and_dst_for_alignment -> len;
get_src_and_dst_for_alignment -> append;
get_src_and_dst_for_alignment -> replace;
get_src_and_dst_for_alignment -> strip;
process_line -> split;
process_line -> int;
process_line -> len;
process_line -> strip;
get_replacement_vocab -> Counter;
get_replacement_vocab -> glob;
get_replacement_vocab -> split;
get_replacement_vocab -> open;
get_replacement_vocab -> most_common;
get_replacement_vocab -> len;
get_replacement_vocab -> ValueError;
get_replacement_vocab -> write;
get_replacement_vocab -> process_line;
get_replacement_vocab -> zip;
get_replacement_vocab -> str;
filter_by_vocab -> print;
filter_by_vocab -> glob;
filter_by_vocab -> exists;
filter_by_vocab -> ValueError;
filter_by_vocab -> open;
filter_by_vocab -> len;
filter_by_vocab -> split;
filter_by_vocab -> close;
filter_by_vocab -> int;
filter_by_vocab -> process_line;
filter_by_vocab -> zip;
filter_by_vocab -> strip;
filter_by_vocab -> write;
get_labeled_corpus -> glob;
get_labeled_corpus -> print;
get_labeled_corpus -> open;
get_labeled_corpus -> sorted;
get_labeled_corpus -> close;
get_labeled_corpus -> exists;
get_labeled_corpus -> ValueError;
get_labeled_corpus -> len;
get_labeled_corpus -> process_file_itn;
get_labeled_corpus -> join;
get_labeled_corpus -> split;
get_labeled_corpus -> listdir;
get_labeled_corpus -> warning;
get_labeled_corpus -> strip;
prepare_subcorpora_from_data -> Counter;
prepare_subcorpora_from_data -> listdir;
prepare_subcorpora_from_data -> append;
prepare_subcorpora_from_data -> join;
prepare_subcorpora_from_data -> print;
prepare_subcorpora_from_data -> open;
prepare_subcorpora_from_data -> close;
prepare_subcorpora_from_data -> isdir;
prepare_subcorpora_from_data -> ValueError;
prepare_subcorpora_from_data -> write;
prepare_subcorpora_from_data -> split;
prepare_subcorpora_from_data -> casefold;
prepare_subcorpora_from_data -> get_src_and_dst_for_alignment;
prepare_subcorpora_from_data -> len;
prepare_subcorpora_from_data -> strip;
prepare_subcorpora_from_data -> mkdir;
prepare_subcorpora_from_data -> str;
load_manifest -> open;
load_manifest -> enumerate;
load_manifest -> loads;
load_manifest -> append;
add_punctuation_capitalization -> len;
add_punctuation_capitalization -> info;
add_punctuation_capitalization -> eval;
add_punctuation_capitalization -> _setup_infer_dataloader;
add_punctuation_capitalization -> tqdm;
add_punctuation_capitalization -> enumerate;
add_punctuation_capitalization -> train;
add_punctuation_capitalization -> forward;
add_punctuation_capitalization -> _transform_logit_to_prob_and_remove_margins_and_extract_word_probs;
add_punctuation_capitalization -> append;
add_punctuation_capitalization -> ceil;
add_punctuation_capitalization -> zip;
add_punctuation_capitalization -> to;
add_punctuation_capitalization -> _move_acc_probs_to_token_preds;
add_punctuation_capitalization -> _get_labels;
add_punctuation_capitalization -> _apply_punct_capit_predictions;
add_punctuation_capitalization -> _update_accumulated_probabilities;
update_config_after_restoring_from_checkpoint -> set;
update_config_after_restoring_from_checkpoint -> ValueError;
update_config_after_restoring_from_checkpoint -> merge;
update_config_after_restoring_from_checkpoint -> _check_label_config_parameters;
update_config_after_restoring_from_checkpoint -> create;
update_config_after_restoring_from_checkpoint -> structured;
add_predictions -> isinstance;
add_predictions -> _infer;
add_predictions -> info;
add_predictions -> split;
add_predictions -> len;
add_predictions -> sum;
add_predictions -> ValueError;
add_predictions -> enumerate;
add_predictions -> append;
add_predictions -> open;
add_predictions -> readlines;
add_predictions -> items;
add_predictions -> isalpha;
add_predictions -> strip;
add_predictions -> write;
evaluate_from_file -> abspath;
evaluate_from_file -> _infer;
evaluate_from_file -> makedirs;
evaluate_from_file -> join;
evaluate_from_file -> open;
evaluate_from_file -> readlines;
evaluate_from_file -> basename;
evaluate_from_file -> write;
evaluate_from_file -> info;
evaluate_from_file -> split;
evaluate_from_file -> plot_confusion_matrix;
evaluate_from_file -> error;
evaluate_from_file -> get_classification_report;
evaluate_from_file -> strip;
evaluate_from_file -> items;
setup_loss -> ValueError;
setup_loss -> CrossEntropyLoss;
setup_loss -> debug;
check_tar_file_prefix -> findall;
check_tar_file_prefix -> set;
check_tar_file_prefix -> process_error;
check_tar_file_prefix -> len;
check_tar_file_prefix -> list;
check_tar_file_prefix -> repr;
check_labels_for_being_unique_before_building_label_ids -> enumerate;
check_labels_for_being_unique_before_building_label_ids -> range;
check_labels_for_being_unique_before_building_label_ids -> process_error;
check_labels_for_being_unique_before_building_label_ids -> len;
create_tarred_dataset -> check_tar_file_prefix;
create_tarred_dataset -> expanduser;
create_tarred_dataset -> format;
create_tarred_dataset -> remove_unexpected_files_and_dirs;
create_tarred_dataset -> get_label_dictionaries;
create_tarred_dataset -> repack_tar_files_with_not_enough_batches;
create_tarred_dataset -> create_metadata_file;
create_tarred_dataset -> cpu_count;
create_tarred_dataset -> get_fragment_start_bytes;
create_tarred_dataset -> mkdir;
create_tarred_dataset -> ValueError;
create_tarred_dataset -> Progress;
create_tarred_dataset -> Path;
create_tarred_dataset -> sub;
create_tarred_dataset -> Parallel;
create_tarred_dataset -> min;
create_tarred_dataset -> delayed;
create_tarred_dataset -> enumerate;
create_tarred_dataset -> len;
create_tarred_dataset -> zip;
create_tarred_dataset -> range;
build_label_ids_from_list_of_labels -> check_labels_for_being_unique_before_building_label_ids;
build_label_ids_from_list_of_labels -> len;
__extract_file -> open;
__extract_file -> extractall;
__extract_file -> close;
__extract_file -> print;
__extract_file -> unpack_archive;
__extract_file -> info;
__extract_file -> ZipFile;
__maybe_download_file -> exists;
__maybe_download_file -> info;
__maybe_download_file -> run;
__maybe_download_file -> __retrieve_with_progress;
__maybe_download_file -> rename;
__maybe_download_file -> format;
__maybe_download_file -> urlretrieve;
__maybe_download_file -> print;
__maybe_download_file -> download;
__maybe_download_file -> warning;
__maybe_download_file -> splitext;
__maybe_download_file -> basename;
__maybe_download_file -> with_suffix;
__maybe_download_file -> str;
__process_english_sentences -> open;
__process_english_sentences -> exists;
__process_english_sentences -> FileNotFoundError;
__process_english_sentences -> split;
__process_english_sentences -> write;
__process_english_sentences -> strip;
__process_english_sentences -> match;
__process_english_sentences -> len;
__process_english_sentences -> append;
__process_english_sentences -> join;
__process_english_sentences -> random;
__split_into_train_dev -> readlines;
__split_into_train_dev -> open;
__split_into_train_dev -> int;
__split_into_train_dev -> write;
__split_into_train_dev -> exists;
__split_into_train_dev -> FileNotFoundError;
__split_into_train_dev -> join;
__split_into_train_dev -> len;
__delete_file -> exists;
__delete_file -> remove;
__convert_data -> open;
__convert_data -> readlines;
__convert_data -> enumerate;
__convert_data -> info;
__convert_data -> strip;
__convert_data -> append;
__convert_data -> write;
__convert_data -> split;
__convert_data -> len;
__convert_data -> join;
__convert_data -> range;
__convert_data -> pop;
run_inference -> hydra_runner;
run_inference -> info;
run_inference -> is_dataclass;
run_inference -> device;
run_inference -> Trainer;
run_inference -> set_trainer;
run_inference -> eval;
run_inference -> set_decoding_strategy;
run_inference -> structured;
run_inference -> ValueError;
run_inference -> is_available;
run_inference -> restore_from;
run_inference -> from_pretrained;
run_inference -> list;
run_inference -> exists;
run_inference -> autocast;
run_inference -> open;
run_inference -> format;
run_inference -> splitext;
run_inference -> glob;
run_inference -> error;
run_inference -> Path;
run_inference -> replace;
run_inference -> no_grad;
run_inference -> slurp_inference;
run_inference -> enumerate;
run_inference -> to_yaml;
run_inference -> basename;
run_inference -> join;
run_inference -> stat;
run_inference -> loads;
run_inference -> append;
run_inference -> len;
run_inference -> dirname;
run_inference -> write;
run_inference -> str;
run_inference -> is_file;
run_inference -> is_absolute;
run_inference -> absolute;
run_inference -> dumps;
run_inference -> mkdir;
run_inference -> forward;
run_inference -> FunctionalResult;
run_inference -> Exception;
run_inference -> device_count;
run_inference -> print;
run_inference -> vLLMExporter;
run_inference -> export;
run_inference -> TensorRTLLM;
run_inference -> add_prompt_table;
run_inference -> DeployPyTriton;
run_inference -> deploy;
run_inference -> run;
run_inference -> NemoQueryLLM;
run_inference -> query_llm;
run_inference -> get_accuracy_with_lambada;
run_inference -> stop;
run_inference -> rmtree;
run_inference -> export_hf_model;
run_inference -> check_model_outputs;
run_inference -> warning;
unfreeze -> parameters;
unfreeze -> unfreeze;
unfreeze -> freeze;
unfreeze -> super;
unfreeze -> train;
unfreeze -> range;
unfreeze -> isinstance;
unfreeze -> list;
unfreeze -> info;
unfreeze -> named_parameters;
unfreeze -> hasattr;
unfreeze -> ValueError;
unfreeze -> delattr;
unfreeze -> warning;
parse_semantics_str2dict -> isinstance;
parse_semantics_str2dict -> join;
parse_semantics_str2dict -> literal_eval;
parse_semantics_str2dict -> enumerate;
parse_semantics_str2dict -> replace;
parse_semantics_str2dict -> _parse_entity;
_parse_entity -> isinstance;
slurp_inference -> min;
slurp_inference -> next;
slurp_inference -> eval;
slurp_inference -> get_verbosity;
slurp_inference -> set_verbosity;
slurp_inference -> _setup_transcribe_dataloader;
slurp_inference -> tqdm;
slurp_inference -> train;
slurp_inference -> parameters;
slurp_inference -> predict;
slurp_inference -> cpu_count;
slurp_inference -> to;
get_verbosity -> getEffectiveLevel;
set_verbosity -> setLevel;
set_decoding_strategy -> SequenceGenerator;
diarize -> join;
diarize -> exists;
diarize -> makedirs;
diarize -> audio_rttm_map;
diarize -> _perform_speech_activity_detection;
diarize -> items;
diarize -> get_embs_and_timestamps;
diarize -> perform_clustering;
diarize -> info;
diarize -> score_labels;
diarize -> warning;
diarize -> rmtree;
diarize -> mkdir;
diarize -> _run_segmentation;
diarize -> _extract_embeddings;
diarize -> format;
diarize -> type;
diarize -> path2audio_files_to_manifest;
diarize -> ValueError;
diarize -> len;
diarize -> abspath;
diarize -> no_grad;
diarize -> prepare_cluster_embs_infer;
diarize -> get_emb_clus_infer;
diarize -> run_pairwise_diarization;
diarize -> list;
diarize -> run_overlap_aware_eval;
diarize -> diarize;
diarize -> super;
diarize -> inference_mode;
diarize -> load_postprocessing_from_yaml;
diarize -> DiarizeConfig;
diarize -> InternalDiarizeConfig;
diarize -> diarize_generator;
diarize -> hasattr;
diarize -> isinstance;
diarize -> extend;
diarize -> tuple;
diarize -> enumerate;
diarize -> RuntimeError;
diarize -> append;
set_asr_model -> endswith;
set_asr_model -> eval;
set_asr_model -> lower;
set_asr_model -> if_none_get_default;
set_asr_model -> restore_from;
set_asr_model -> from_pretrained;
set_asr_model -> load_LM_for_CTC_decoder;
set_asr_model -> ImportError;
set_asr_model -> ValueError;
run_diarization -> ClusteringDiarizer;
run_diarization -> diarize;
run_diarization -> enumerate;
run_diarization -> _save_VAD_labels_list;
run_diarization -> join;
run_diarization -> write_rttm2manifest;
run_diarization -> _get_frame_level_VAD;
run_diarization -> get_uniqname_from_filepath;
run_diarization -> rttm_to_labels;
get_transcript_with_speaker_labels -> enumerate;
get_transcript_with_speaker_labels -> info;
get_transcript_with_speaker_labels -> _compensate_word_ts_list;
get_transcript_with_speaker_labels -> get_uniqname_from_filepath;
get_transcript_with_speaker_labels -> get_word_level_json_list;
get_transcript_with_speaker_labels -> _make_json_output;
get_transcript_with_speaker_labels -> warning;
get_transcript_with_speaker_labels -> ImportError;
get_transcript_with_speaker_labels -> _load_realigning_LM;
get_transcript_with_speaker_labels -> realign_words_with_lm;
gather_eval_results -> rttm_to_labels;
gather_eval_results -> get_num_of_spk_from_labels;
gather_eval_results -> int;
gather_eval_results -> abs;
gather_eval_results -> join;
gather_eval_results -> round;
gather_eval_results -> len;
print_errors -> info;
print_errors -> len;
write_session_level_result_in_csv -> makedirs;
write_session_level_result_in_csv -> info;
write_session_level_result_in_csv -> get_total_result_dict;
write_session_level_result_in_csv -> open;
write_session_level_result_in_csv -> DictWriter;
write_session_level_result_in_csv -> writeheader;
write_session_level_result_in_csv -> writerow;
optuna_suggest_params -> suggest_float;
get_tensor_path -> replace;
get_tensor_path -> dirname;
get_tensor_path -> exists;
get_tensor_path -> makedirs;
get_tensor_path -> basename;
diarization_objective -> TemporaryDirectory;
diarization_objective -> convert_pred_mat_to_segments;
diarization_objective -> score_labels;
diarization_objective -> abs;
diarization_objective -> optuna_suggest_params;
convert_pred_mat_to_segments -> structured;
convert_pred_mat_to_segments -> predlist_to_timestamps;
convert_pred_mat_to_segments -> enumerate;
convert_pred_mat_to_segments -> items;
convert_pred_mat_to_segments -> timestamps_to_pyannote_object;
convert_pred_mat_to_segments -> get;
convert_pred_mat_to_segments -> get_uniqname_from_filepath;
score_labels -> len;
score_labels -> DiarizationErrorRate;
score_labels -> enumerate;
score_labels -> abs;
score_labels -> info;
score_labels -> zip;
score_labels -> optimal_mapping;
score_labels -> ValueError;
score_labels -> set_option;
score_labels -> warning;
score_labels -> metric;
score_labels -> labels;
score_labels -> get;
score_labels -> uem_timeline_from_file;
score_labels -> report;
run_optuna_hyperparam_search -> create_study;
run_optuna_hyperparam_search -> getLogger;
run_optuna_hyperparam_search -> setLevel;
run_optuna_hyperparam_search -> addHandler;
run_optuna_hyperparam_search -> enable_propagation;
run_optuna_hyperparam_search -> optimize;
run_optuna_hyperparam_search -> diarization_objective;
run_optuna_hyperparam_search -> StreamHandler;
run_optuna_hyperparam_search -> FileHandler;
setLevel -> setLevel;
predlist_to_timestamps -> tqdm;
predlist_to_timestamps -> enumerate;
predlist_to_timestamps -> squeeze;
predlist_to_timestamps -> range;
predlist_to_timestamps -> append;
predlist_to_timestamps -> items;
predlist_to_timestamps -> len;
predlist_to_timestamps -> ts_vad_post_processing;
predlist_to_timestamps -> tolist;
predlist_to_timestamps -> extend;
predlist_to_timestamps -> round;
timestamps_to_pyannote_object -> generate_diarization_output_lines;
timestamps_to_pyannote_object -> labels_to_pyannote_object;
timestamps_to_pyannote_object -> append;
timestamps_to_pyannote_object -> get;
timestamps_to_pyannote_object -> float;
timestamps_to_pyannote_object -> exists;
timestamps_to_pyannote_object -> rttm_to_labels;
timestamps_to_pyannote_object -> get_uem_object;
timestamps_to_pyannote_object -> len;
timestamps_to_pyannote_object -> open;
timestamps_to_pyannote_object -> write_rttm;
get_uniqname_from_filepath -> type;
get_uniqname_from_filepath -> TypeError;
get_uniqname_from_filepath -> splitext;
get_uniqname_from_filepath -> basename;
load_postprocessing_from_yaml -> structured;
load_postprocessing_from_yaml -> PostProcessingParams;
load_postprocessing_from_yaml -> info;
load_postprocessing_from_yaml -> open;
load_postprocessing_from_yaml -> items;
load_postprocessing_from_yaml -> safe_load;
load_postprocessing_from_yaml -> hasattr;
load_postprocessing_from_yaml -> setattr;
audio_rttm_map -> open;
audio_rttm_map -> readlines;
audio_rttm_map -> info;
audio_rttm_map -> format;
audio_rttm_map -> strip;
audio_rttm_map -> loads;
audio_rttm_map -> len;
audio_rttm_map -> get;
audio_rttm_map -> get_uniq_id_with_dur;
audio_rttm_map -> KeyError;
audio_rttm_map -> keys;
audio_rttm_map -> get_uniqname_from_filepath;
test_batch -> info;
test_batch -> no_grad;
test_batch -> enumerate;
test_batch -> tqdm;
test_batch -> to;
test_batch -> forward;
test_batch -> _get_aux_test_batch_evaluations;
test_batch -> empty_cache;
test_batch -> append;
test_batch -> extend;
test_batch -> mean;
test_batch -> detach;
test_batch -> split;
test_batch -> tensor;
test_batch -> from_numpy;
test_batch -> int;
test_batch -> Tensor;
test_batch -> randn;
test_batch -> array;
test_batch -> reshape;
test_batch -> arange;
test_batch -> batch;
test_batch -> assertIsInstance;
test_batch -> assertEqual;
test_batch -> ImageTextSample;
test_batch -> len;
test_batch -> max;
test_batch -> rand;
test_batch -> LlavaNextSampleEncoder;
test_batch -> print;
test_batch -> VQASample;
test_batch -> LlavaNextTextSample;
test_batch -> encode;
test_batch -> item;
test_batch -> sum;
read_and_maybe_sort_manifest -> read_manifest;
read_and_maybe_sort_manifest -> all;
read_and_maybe_sort_manifest -> sorted;
get_embeddings -> batch_inference;
get_embeddings -> asarray;
get_embeddings -> embedding_normalize;
get_embeddings -> join;
get_embeddings -> dump;
get_embeddings -> info;
get_embeddings -> open;
get_embeddings -> enumerate;
get_embeddings -> exists;
get_embeddings -> makedirs;
get_embeddings -> rsplit;
get_embeddings -> format;
get_embeddings -> readlines;
get_embeddings -> strip;
get_embeddings -> loads;
get_embeddings -> split;
get_embeddings -> dim;
get_embeddings -> range;
get_embeddings -> embed_input;
get_embeddings -> size;
get_embeddings -> unsqueeze;
batch_inference -> no_grad;
batch_inference -> freeze;
batch_inference -> eval;
batch_inference -> to;
batch_inference -> extract_labels;
batch_inference -> __setup_dataloader_from_config;
batch_inference -> tqdm;
batch_inference -> list;
batch_inference -> train;
batch_inference -> forward;
batch_inference -> extend;
batch_inference -> map;
batch_inference -> unfreeze;
batch_inference -> asarray;
batch_inference -> numpy;
batch_inference -> cpu;
embedding_normalize -> expand_dims;
embedding_normalize -> mean;
embedding_normalize -> norm;
embedding_normalize -> std;
get_acc -> open;
get_acc -> dirname;
get_acc -> close;
get_acc -> load;
get_acc -> readlines;
get_acc -> tqdm;
get_acc -> save;
get_acc -> print;
get_acc -> asarray;
get_acc -> strip;
get_acc -> split;
get_acc -> join;
get_acc -> append;
get_acc -> write;
get_acc -> int;
get_acc -> format;
get_acc -> extend;
get_acc -> dot;
get_acc -> str;
speech_to_text_llm_train -> build_components;
speech_to_text_llm_train -> dump_config;
speech_to_text_llm_train -> finetune;
speech_to_text_llm_validate -> build_components;
speech_to_text_llm_validate -> _setup;
speech_to_text_llm_validate -> validate;
collate_vectors -> collate_vectors_lhotse;
collate_vectors -> size;
collate_vectors -> cat;
collate_vectors -> long;
collate_vectors -> ones;
load_audio -> OrderedDict;
load_audio -> load_sync_signals;
load_audio -> update;
load_audio -> load_async_signals;
load_audio -> load_embedding;
load_audio -> RuntimeError;
load_audio -> get_audio_filepaths;
load_audio -> get;
load_audio -> _read_audio;
load_audio -> min;
load_audio -> normalize_volume;
load_audio -> load;
load_audio -> tensor;
processor -> from_pretrained;
processor -> configure_processor;
word_error_rate_detail -> zip;
word_error_rate_detail -> len;
word_error_rate_detail -> ValueError;
word_error_rate_detail -> format;
word_error_rate_detail -> list;
word_error_rate_detail -> split;
word_error_rate_detail -> float;
word_error_rate_detail -> cer;
word_error_rate_detail -> compute_measures;
guess_parse_cutset -> isinstance;
guess_parse_cutset -> make_structured_with_schema_warnings;
guess_parse_cutset -> read_cutset_from_config;
guess_parse_cutset -> endswith;
guess_parse_cutset -> RuntimeError;
guess_parse_cutset -> from_dotlist;
guess_parse_cutset -> type;
guess_parse_cutset -> items;
token_to_id -> token_to_id;
token_to_id -> piece_to_id;
token_to_id -> index;
token_to_id -> encode_single_token;
token_to_id -> tokens_to_ids;
parse_hyp -> nonzero;
parse_hyp -> numel;
parse_hyp -> isin;
parse_hyp -> tensor;
load_checkpoint -> is_dir;
load_checkpoint -> load;
load_checkpoint -> load_state_dict;
load_checkpoint -> Path;
load_checkpoint -> state_dict;
load_checkpoint -> get_filesystem;
load_checkpoint -> AppState;
load_checkpoint -> sharded_state_dict;
load_checkpoint -> _check_param_groups_mismatch;
load_checkpoint -> getattr;
load_checkpoint -> inject_model_parallel_rank;
load_checkpoint -> range;
load_checkpoint -> empty_cache;
load_checkpoint -> monotonic;
load_checkpoint -> load_checkpoint;
load_checkpoint -> info;
load_checkpoint -> isdir;
load_checkpoint -> ValueError;
load_checkpoint -> hasattr;
load_checkpoint -> restore_sharded_modelopt_state;
load_checkpoint -> _fix_param_groups;
load_checkpoint -> _integrate_original_checkpoint_data;
load_checkpoint -> exists;
load_checkpoint -> warning;
load_checkpoint -> sleep;
load_checkpoint -> FileNotFoundError;
load_checkpoint -> get_model_module_list;
load_checkpoint -> optimizer_sharded_state_dict;
load_checkpoint -> CheckpointingException;
load_checkpoint -> load_with_process_group;
load_checkpoint -> get_data_parallel_group;
load_checkpoint -> _load_checkpoint;
load_checkpoint -> ckpt_to_dir;
load_checkpoint -> update;
load_checkpoint -> str;
load_checkpoint -> open;
load_checkpoint -> load_fsspec;
load_checkpoint -> device;
load_checkpoint -> isinstance;
load_checkpoint -> _validate_keys_for_strict_loading;
load_checkpoint -> items;
load_checkpoint -> NotImplementedError;
load_checkpoint -> load_module_state_dict;
load_checkpoint -> keys;
load_checkpoint -> copy;
load_checkpoint -> pop;
load_checkpoint -> _load_adapter_weights_only;
load_checkpoint -> callable;
load_checkpoint -> format;
load_checkpoint -> RuntimeError;
load_checkpoint -> load_pretrained;
load_checkpoint -> EnvironmentError;
load_checkpoint -> ckpt_to_weights_subdir;
load_checkpoint -> time;
load_checkpoint -> _fix_tensors_device;
load_checkpoint -> TensorStoreLoadShardedStrategy;
load_checkpoint -> FullyParallelLoadStrategyWrapper;
load_checkpoint -> get_default_load_sharded_strategy;
load_checkpoint -> adjust_non_strict_load;
load_checkpoint -> get_rank;
load_checkpoint -> mcore_to_pyt_sharded_state_dict;
load_checkpoint -> set_state_dict;
load_checkpoint -> broadcast;
load_checkpoint -> _get_sharded_state_dict_context;
load_checkpoint -> pyt_to_mcore_state_dict;
load_checkpoint -> get_optimizer_state_dict;
load_checkpoint -> StateDictOptions;
load_checkpoint -> should_restore_optimizer_states;
load_checkpoint -> unwrap_model;
load_checkpoint -> is_converted;
load_checkpoint -> ExitStack;
load_checkpoint -> optimizers;
load_checkpoint -> hide_teacher_model;
load_checkpoint -> nullcontext;
load_checkpoint -> enter_context;
load_checkpoint -> hide_loss_modules;
load_checkpoint -> _debug_time;
load_checkpoint -> debug;
load_checkpoint -> download_s3_file_to_stream;
load_checkpoint -> NamedTemporaryFile;
load_checkpoint -> download_s3_file_to_path;
save_pretrained -> save_pretrained;
save_pretrained -> list;
save_pretrained -> map;
save_pretrained -> split;
save_pretrained -> join;
save_pretrained -> keys;
save_pretrained -> pop;
save_pretrained -> isinstance;
save_pretrained -> len;
save_pretrained -> warning;
save_pretrained -> save;
save_pretrained -> pop_fqn_prefix;
save_pretrained -> getattr;
save_pretrained -> to_container;
save_pretrained -> super;
load_and_prepare_audio -> read;
load_and_prepare_audio -> unsqueeze;
load_and_prepare_audio -> preprocessor;
load_and_prepare_audio -> resample;
load_and_prepare_audio -> tensor;
load_and_prepare_audio -> long;
resample -> gcd;
resample -> _get_sinc_resample_kernel;
resample -> _apply_sinc_resample_kernel;
resample -> ValueError;
resample -> int;
disambiguate_candidates -> aligner_g2p;
disambiguate_candidates -> len;
disambiguate_candidates -> write;
disambiguate_candidates -> word_tokenize_func;
disambiguate_candidates -> long;
disambiguate_candidates -> max;
disambiguate_candidates -> range;
disambiguate_candidates -> stack;
disambiguate_candidates -> repeat;
disambiguate_candidates -> transpose;
disambiguate_candidates -> sqrt;
disambiguate_candidates -> int;
disambiguate_candidates -> float;
disambiguate_candidates -> append;
disambiguate_candidates -> encode_from_g2p;
disambiguate_candidates -> general_padding;
disambiguate_candidates -> no_grad;
disambiguate_candidates -> aligner;
disambiguate_candidates -> get_mean_distance_for_word;
disambiguate_candidates -> search;
disambiguate_candidates -> tensor;
disambiguate_candidates -> embed;
disambiguate_candidates -> get_dist;
disambiguate_candidates -> get_durations;
disambiguate_candidates -> join;
encode_from_g2p -> set;
encode_from_g2p -> isalnum;
encode_from_g2p -> append;
encode_from_g2p -> pop;
encode_from_g2p -> len;
encode_from_g2p -> warning;
encode_from_g2p -> join;
general_padding -> pad;
get_mean_distance_for_word -> range;
get_mean_distance_for_word -> sum;
get_dist -> query_proj;
get_dist -> key_proj;
get_dist -> dist_fn;
get_dist -> _apply_mask;
get_dist -> squeeze;
get_dist -> float;
get_durations -> binarize_attention_parallel;
get_durations -> all;
get_durations -> sum;
get_durations -> eq;
disambiguate_dataset -> print;
disambiguate_dataset -> open;
disambiguate_dataset -> close;
disambiguate_dataset -> loads;
disambiguate_dataset -> normalize;
disambiguate_dataset -> text_preprocessing_func;
disambiguate_dataset -> load_and_prepare_audio;
disambiguate_dataset -> disambiguate_candidates;
disambiguate_dataset -> join;
disambiguate_dataset -> write;
disambiguate_dataset -> dumps;
prepare_model_weights -> freeze;
prepare_model_weights -> info;
prepare_model_weights -> hasattr;
prepare_model_weights -> unfreeze;
make_parser -> parser_type;
make_parser -> ValueError;
make_parser -> list;
make_parser -> ArgumentParser;
make_parser -> add_argument;
generate_spectrogram -> typecheck;
generate_spectrogram -> isinstance;
generate_spectrogram -> self;
generate_spectrogram -> warning;
generate_spectrogram -> to;
generate_spectrogram -> NeuralType;
generate_spectrogram -> tensor;
generate_spectrogram -> MelSpectrogramType;
generate_spectrogram -> transpose;
generate_spectrogram -> pad_sequence;
generate_spectrogram -> _get_lm_model_tokenizer;
generate_spectrogram -> _convert_token_to_id;
generate_spectrogram -> full;
generate_spectrogram -> enumerate;
generate_spectrogram -> sum;
generate_spectrogram -> ValueError;
generate_spectrogram -> tokenizer;
generate_spectrogram -> text_preprocessing_func;
generate_spectrogram -> encode;
generate_spectrogram -> infer;
generate_spectrogram -> len;
generate_spectrogram -> text_normalizer_call;
generate_spectrogram -> max;
generate_spectrogram -> TokenIndex;
generate_spectrogram -> LengthsType;
generate_spectrogram -> eval;
generate_spectrogram -> cuda;
generate_spectrogram -> Index;
generate_spectrogram -> long;
generate_spectrogram -> expand;
generate_spectrogram -> permute;
generate_spectrogram -> masked_fill_;
generate_spectrogram -> get_mask_from_lengths;
generate_spectrogram -> size;
generate_spectrogram -> EmbeddedTextType;
parser -> make_parser;
parser -> split;
parser -> hasattr;
parser -> ValueError;
convert_spectrogram_to_audio -> typecheck;
convert_spectrogram_to_audio -> squeeze;
convert_spectrogram_to_audio -> self;
convert_spectrogram_to_audio -> NeuralType;
convert_spectrogram_to_audio -> MelSpectrogramType;
convert_spectrogram_to_audio -> AudioSignal;
convert_spectrogram_to_audio -> zeros;
convert_spectrogram_to_audio -> range;
convert_spectrogram_to_audio -> griffin_lim;
convert_spectrogram_to_audio -> from_numpy;
convert_spectrogram_to_audio -> max;
convert_spectrogram_to_audio -> numpy;
convert_spectrogram_to_audio -> cpu;
convert_spectrogram_to_audio -> eval;
convert_spectrogram_to_audio -> no_grad;
convert_spectrogram_to_audio -> exp;
convert_spectrogram_to_audio -> convert_mel_spectrogram_to_linear;
convert_spectrogram_to_audio -> convert_spectrogram_to_audio;
convert_spectrogram_to_audio -> nemo_infer;
convert_spectrogram_to_audio -> remove_weightnorm;
convert_spectrogram_to_audio -> waveglow;
convert_spectrogram_to_audio -> denoise;
convert_spectrogram_to_audio -> to;
disambiguate_manifest -> no_grad;
disambiguate_manifest -> _disambiguate;
disambiguate_manifest -> set_wordid_to_phonemes;
disambiguate_manifest -> info;
disambiguate_manifest -> open;
disambiguate_manifest -> enumerate;
disambiguate_manifest -> loads;
disambiguate_manifest -> _process_sentence;
disambiguate_manifest -> write;
disambiguate_manifest -> isinstance;
disambiguate_manifest -> len;
disambiguate_manifest -> dumps;
disambiguate -> no_grad;
disambiguate -> isinstance;
disambiguate -> min;
disambiguate -> get_heteronym_spans;
disambiguate -> _disambiguate;
disambiguate -> enumerate;
disambiguate -> len;
disambiguate -> ValueError;
disambiguate -> open;
disambiguate -> zip;
disambiguate -> set_wordid_to_phonemes;
disambiguate -> append;
disambiguate -> write;
disambiguate -> _process_sentence;
disambiguate -> dumps;
convert_graphemes_to_phonemes -> no_grad;
convert_graphemes_to_phonemes -> _infer;
convert_graphemes_to_phonemes -> info;
convert_graphemes_to_phonemes -> DictConfig;
convert_graphemes_to_phonemes -> open;
convert_graphemes_to_phonemes -> tqdm;
convert_graphemes_to_phonemes -> enumerate;
convert_graphemes_to_phonemes -> loads;
convert_graphemes_to_phonemes -> write;
convert_graphemes_to_phonemes -> dumps;
get_model -> CTCG2PModel;
get_model -> T5G2PModel;
get_model -> ValueError;
mk_hf_vlm_dataset -> extract_skipped_token_ids;
mk_hf_vlm_dataset -> HFDatasetDataModule;
mk_hf_vlm_dataset -> map;
mk_hf_vlm_dataset -> processor;
mk_hf_vlm_dataset -> to;
mk_hf_vlm_dataset -> clone;
mk_hf_vlm_dataset -> append;
mk_hf_vlm_dataset -> isin;
mk_hf_vlm_dataset -> apply_chat_template;
mk_hf_vlm_dataset -> collate_fn;
extract_skipped_token_ids -> set;
extract_skipped_token_ids -> getattr;
extract_skipped_token_ids -> items;
extract_skipped_token_ids -> IntTensor;
extract_skipped_token_ids -> list;
extract_skipped_token_ids -> str;
extract_skipped_token_ids -> append;
collate_fn -> map;
collate_fn -> processor;
collate_fn -> to;
collate_fn -> clone;
collate_fn -> append;
collate_fn -> isin;
collate_fn -> apply_chat_template;
collate_fn -> TextToTextBatch;
collate_fn -> pad_sequence;
collate_fn -> long;
collate_fn -> tensor;
collate_fn -> TextOrAudioToTextBatch;
collate_fn -> _speech_collate_fn;
collate_fn -> collate_fn;
collate_fn -> isinstance;
collate_fn -> _collate_fn;
collate_fn -> LongTensor;
collate_fn -> max;
collate_fn -> min;
collate_fn -> stack;
collate_fn -> list;
collate_fn -> _collate_item;
collate_fn -> _build_loss_mask;
collate_fn -> _ceil_to_nearest;
collate_fn -> _create_attention_mask;
collate_fn -> range;
collate_fn -> len;
collate_fn -> concatenate;
collate_fn -> IntTensor;
collate_fn -> argmin;
collate_fn -> update;
collate_fn -> array;
collate_fn -> extend;
collate_fn -> where;
collate_fn -> any;
collate_fn -> tolist;
collate_fn -> enumerate;
collate_fn -> item;
collate_fn -> warning;
collate_fn -> sum;
collate_fn -> batchify;
collate_fn -> keys;
collate_fn -> pad_within_micro;
collate_fn -> extract_key_from_dicts;
collate_fn -> super;
collate_fn -> cat;
collate_fn -> zip;
collate_fn -> size;
collate_fn -> ValueError;
collate_fn -> pad_batch_and_build_loss_mask;
collate_fn -> contiguous;
collate_fn -> view;
collate_fn -> build_position_ids;
collate_fn -> tril;
collate_fn -> ones;
collate_fn -> pad_taskname_ids;
collate_fn -> int;
collate_fn -> as_tensor;
collate_fn -> create_masks_and_segment_ids;
collate_fn -> items;
collate_fn -> from_file;
collate_fn -> ModuleNotFoundError;
collate_fn -> float;
collate_fn -> stack_tensors;
collate_fn -> BoolTensor;
collate_fn -> FloatTensor;
collate_fn -> audio_collate_fn;
collate_fn -> get_position_ids;
collate_fn -> _collate_feature;
collate_fn -> ones_like;
collate_fn -> convert;
collate_fn -> default_collate;
collate_fn -> get_ltor_masks_and_position_ids;
collate_fn -> pad;
collate_fn -> create_vision_mask_tensor;
collate_fn -> convert_to_packed;
collate_fn -> pop;
collate_fn -> zeros;
collate_fn -> typecheck;
collate_fn -> TypeError;
process_member -> info;
process_member -> append;
process_member -> isclass;
process_member -> issubclass;
process_member -> format;
process_member -> str;
__enter__ -> get_rank;
__enter__ -> int;
__enter__ -> is_initialized;
__enter__ -> _try_bootstrap_pg;
__enter__ -> get;
__enter__ -> barrier;
__enter__ -> _reset;
__enter__ -> __enter__;
__enter__ -> open;
__enter__ -> write;
__enter__ -> pack;
__enter__ -> code;
__enter__ -> get_queues;
__enter__ -> UnavailableError;
__enter__ -> UnavailableMeta;
get_rank -> is_global_rank_zero;
get_rank -> get_rank;
get_rank -> RuntimeError;
_try_bootstrap_pg -> all;
_try_bootstrap_pg -> init_process_group;
_try_bootstrap_pg -> int;
_try_bootstrap_pg -> get;
__exit__ -> is_initialized;
__exit__ -> barrier;
__exit__ -> destroy_process_group;
__exit__ -> close;
__exit__ -> memmap;
__exit__ -> memoryview;
__exit__ -> frombuffer;
__exit__ -> flush;
__exit__ -> finish;
__exit__ -> __exit__;
compute_cross_entropy -> cross_entropy;
compute_cross_entropy -> float;
chunked_cross_entropy -> zip;
chunked_cross_entropy -> detach;
chunked_cross_entropy -> to;
chunked_cross_entropy -> compile;
chunked_cross_entropy -> chunk;
chunked_cross_entropy -> _compiled_compute_cross_entropy;
chunked_cross_entropy -> no_grad;
chunked_cross_entropy -> masked_fill_;
chunked_cross_entropy -> sum;
chunked_cross_entropy -> view;
fused_linear_cross_entropy -> linear_cross_entropy;
fused_linear_cross_entropy -> item;
fused_linear_cross_entropy -> sum;
new_is_triton_greater_or_equal -> parse_version;
new_is_triton_greater_or_equal -> print;
new_is_triton_greater_or_equal -> get_distribution;
new_is_triton_greater_or_equal_3_2_0 -> new_is_triton_greater_or_equal;
masked_cross_entropy -> cross_entropy;
masked_cross_entropy -> to;
masked_cross_entropy -> float;
masked_cross_entropy -> no_grad;
masked_cross_entropy -> masked_fill_;
masked_cross_entropy -> view;
write_ctm -> open;
write_ctm -> write;
write_ctm -> to_ctm_str;
write_ctm -> sort;
write_on_batch_end -> get_manifest_sample;
write_on_batch_end -> write;
write_on_batch_end -> len;
write_on_batch_end -> warning;
write_on_batch_end -> write_ctm;
write_on_batch_end -> Path;
write_on_batch_end -> join;
write_on_batch_end -> dumps;
write_on_batch_end -> isinstance;
write_on_batch_end -> hasattr;
write_on_batch_end -> items;
write_on_batch_end -> int;
get_scale_mapping_list -> items;
get_scale_mapping_list -> get_argmin_mat;
get_scale_mapping_list -> range;
get_scale_mapping_list -> stack;
get_scale_mapping_list -> append;
get_scale_mapping_list -> len;
get_scale_mapping_list -> tensor;
get_scale_mapping_list -> keys;
get_argmin_mat -> list;
get_argmin_mat -> max;
get_argmin_mat -> range;
get_argmin_mat -> append;
get_argmin_mat -> tile;
get_argmin_mat -> t;
get_argmin_mat -> argmin;
get_argmin_mat -> len;
get_argmin_mat -> mean;
get_argmin_mat -> abs;
extract_seg_info_from_rttm -> convert_rttm_line;
extract_seg_info_from_rttm -> append;
extract_seg_info_from_rttm -> items;
convert_rttm_line -> split;
convert_rttm_line -> string_to_float;
convert_rttm_line -> strip;
assign_frame_level_spk_vector -> len;
assign_frame_level_spk_vector -> sorted;
assign_frame_level_spk_vector -> int;
assign_frame_level_spk_vector -> max;
assign_frame_level_spk_vector -> zeros;
assign_frame_level_spk_vector -> enumerate;
assign_frame_level_spk_vector -> list;
assign_frame_level_spk_vector -> zip;
assign_frame_level_spk_vector -> set;
assign_frame_level_spk_vector -> round;
get_subsegments_to_timestamps -> float;
get_subsegments_to_timestamps -> round;
get_subsegments_to_timestamps -> long;
get_subsegments_to_timestamps -> clip;
get_subsegments_to_timestamps -> int;
get_subsegments_to_timestamps -> tensor;
extract_frame_info_from_rttm -> dict;
extract_frame_info_from_rttm -> convert_rttm_line;
extract_frame_info_from_rttm -> append;
extract_frame_info_from_rttm -> update;
extract_frame_info_from_rttm -> round;
extract_frame_info_from_rttm -> index;
extract_frame_info_from_rttm -> max;
extract_frame_info_from_rttm -> min;
get_frame_targets_from_rttm -> sorted;
get_frame_targets_from_rttm -> int;
get_frame_targets_from_rttm -> zeros;
get_frame_targets_from_rttm -> enumerate;
get_frame_targets_from_rttm -> list;
get_frame_targets_from_rttm -> len;
get_frame_targets_from_rttm -> warning;
get_frame_targets_from_rttm -> zip;
get_frame_targets_from_rttm -> set;
get_frame_targets_from_rttm -> max;
get_frame_targets_from_rttm -> min;
_msdd_train_collate_fn -> list;
_msdd_train_collate_fn -> max;
_msdd_train_collate_fn -> stack;
_msdd_train_collate_fn -> zip;
_msdd_train_collate_fn -> pad;
_msdd_train_collate_fn -> append;
_msdd_train_collate_fn -> detach;
_msdd_train_collate_fn -> clone;
_msdd_infer_collate_fn -> list;
_msdd_infer_collate_fn -> max;
_msdd_infer_collate_fn -> stack;
_msdd_infer_collate_fn -> tensor;
_msdd_infer_collate_fn -> zip;
_msdd_infer_collate_fn -> append;
_msdd_infer_collate_fn -> pad;
_msdd_infer_collate_fn -> detach;
_msdd_infer_collate_fn -> clone;
_eesd_train_collate_fn -> list;
_eesd_train_collate_fn -> max;
_eesd_train_collate_fn -> stack;
_eesd_train_collate_fn -> squeeze;
_eesd_train_collate_fn -> zip;
_eesd_train_collate_fn -> pad;
_eesd_train_collate_fn -> append;
_eesd_train_collate_fn -> len;
_eesd_train_collate_fn -> detach;
_eesd_train_collate_fn -> clone;
output_types -> NeuralType;
output_types -> AudioSignal;
output_types -> LengthsType;
output_types -> ProbsType;
output_types -> OrderedDict;
output_types -> SpectrogramType;
output_types -> tuple;
output_types -> EncodedRepresentation;
output_types -> LabelsType;
output_types -> update;
output_types -> hasattr;
output_types -> RegressionValuesType;
output_types -> AcousticEncodedRepresentation;
output_types -> LossType;
output_types -> LogprobsType;
output_types -> ChannelType;
output_types -> MaskType;
output_types -> LogitsType;
output_types -> MelSpectrogramType;
output_types -> MFCCSpectrogramType;
output_types -> PredictionsType;
output_types -> EmbeddedTextType;
output_types -> ElementType;
output_types -> super;
output_types -> HypothesisType;
output_types -> num_channels;
output_types -> FloatType;
output_types -> VoidType;
output_types -> VideoSignal;
output_types -> CategoricalValuesType;
output_types -> IntType;
output_types -> StringType;
output_types -> StringLabel;
output_types -> Index;
output_types -> BoolType;
output_types -> SequenceToSequenceAlignmentType;
output_types -> NormalDistributionSamplesType;
output_types -> LogDeterminantType;
output_types -> TokenDurationType;
output_types -> TokenLogDurationType;
output_types -> ValueError;
prepare_split_data -> join;
prepare_split_data -> audio_rttm_map;
prepare_split_data -> info;
prepare_split_data -> items;
prepare_split_data -> get_timestamps;
prepare_split_data -> exists;
prepare_split_data -> makedirs;
prepare_split_data -> write_rttm2manifest;
prepare_split_data -> extract_timestamps;
prepare_split_data -> rmtree;
prepare_split_data -> segments_manifest_to_subsegments_manifest;
assign_labels_to_longer_segs -> len;
assign_labels_to_longer_segs -> get_scale_mapping_list;
assign_labels_to_longer_segs -> range;
assign_labels_to_longer_segs -> tensor;
assign_labels_to_longer_segs -> extend;
assign_labels_to_longer_segs -> append;
assign_labels_to_longer_segs -> mode;
assign_labels_to_longer_segs -> items;
assign_labels_to_longer_segs -> array;
assign_labels_to_longer_segs -> max;
get_diar_target_labels -> len;
get_diar_target_labels -> stack;
get_diar_target_labels -> tensor;
get_diar_target_labels -> argmax;
get_diar_target_labels -> squeeze;
get_diar_target_labels -> float;
get_diar_target_labels -> append;
get_diar_target_labels -> int;
get_diar_target_labels -> sum;
get_diar_target_labels -> index;
get_diar_target_labels -> detach;
get_diar_target_labels -> unsqueeze;
parse_rttm_for_ms_targets -> get_uniq_id_with_range;
parse_rttm_for_ms_targets -> extract_seg_info_from_rttm;
parse_rttm_for_ms_targets -> assign_frame_level_spk_vector;
parse_rttm_for_ms_targets -> get_diar_target_labels;
parse_rttm_for_ms_targets -> assign_labels_to_longer_segs;
parse_rttm_for_ms_targets -> open;
parse_rttm_for_ms_targets -> readlines;
get_uniq_id_with_range -> str;
get_uniq_id_with_range -> splitext;
get_uniq_id_with_range -> int;
get_uniq_id_with_range -> basename;
get_uniq_id_with_range -> round;
get_uniq_id_with_range -> pow;
get_ms_seg_timestamps -> get_uniq_id_with_range;
get_ms_seg_timestamps -> len;
get_ms_seg_timestamps -> range;
get_ms_seg_timestamps -> stack;
get_ms_seg_timestamps -> tensor;
get_ms_seg_timestamps -> enumerate;
get_ms_seg_timestamps -> cat;
get_ms_seg_timestamps -> append;
get_ms_seg_timestamps -> detach;
get_ms_seg_timestamps -> int;
get_ms_seg_timestamps -> zeros;
parse_rttm_multiscale -> readlines;
parse_rttm_multiscale -> extract_seg_info_from_rttm;
parse_rttm_multiscale -> assign_frame_level_spk_vector;
parse_rttm_multiscale -> get_diar_target_labels_from_fr_target;
parse_rttm_multiscale -> ValueError;
parse_rttm_multiscale -> splitext;
parse_rttm_multiscale -> open;
parse_rttm_multiscale -> basename;
parse_rttm_multiscale -> max;
parse_rttm_multiscale -> keys;
get_diar_target_labels_from_fr_target -> stack;
get_diar_target_labels_from_fr_target -> int;
get_diar_target_labels_from_fr_target -> append;
get_diar_target_labels_from_fr_target -> sum;
msdd_train_collate_fn -> _msdd_train_collate_fn;
msdd_infer_collate_fn -> _msdd_infer_collate_fn;
parse_rttm_for_targets_and_lens -> extract_frame_info_from_rttm;
parse_rttm_for_targets_and_lens -> get_frame_targets_from_rttm;
parse_rttm_for_targets_and_lens -> get_soft_targets_seg;
parse_rttm_for_targets_and_lens -> max;
parse_rttm_for_targets_and_lens -> zeros;
parse_rttm_for_targets_and_lens -> open;
parse_rttm_for_targets_and_lens -> readlines;
parse_rttm_for_targets_and_lens -> float;
get_soft_targets_seg -> max;
get_soft_targets_seg -> zeros;
get_soft_targets_seg -> int;
get_soft_targets_seg -> range;
get_soft_targets_seg -> mean;
get_segment_timestamps -> get_subsegments;
get_segment_timestamps -> get_subsegments_to_timestamps;
get_segment_timestamps -> tensor;
get_segment_timestamps -> round;
get_segment_timestamps -> astype;
get_segment_timestamps -> ceil;
get_segment_timestamps -> int;
get_subsegments -> astype;
get_subsegments -> min;
get_subsegments -> append;
get_subsegments -> round;
get_subsegments -> stack;
get_subsegments -> tolist;
get_subsegments -> arange;
get_subsegments -> ceil;
get_subsegments -> ones_like;
get_subsegments -> int;
eesd_train_collate_fn -> _eesd_train_collate_fn;
speaker_to_target -> isinstance;
speaker_to_target -> enumerate;
speaker_to_target -> sort;
speaker_to_target -> set;
speaker_to_target -> int;
speaker_to_target -> get_hidden_length_from_sample_length;
speaker_to_target -> get_soft_mask;
speaker_to_target -> from_rttm;
speaker_to_target -> ValueError;
speaker_to_target -> zeros;
speaker_to_target -> get_mask_from_segments;
speaker_to_target -> float;
speaker_to_target -> find_segments_from_rttm;
speaker_to_target -> find;
speaker_to_target -> append;
speaker_to_target -> len;
speaker_to_target -> seen_add;
get_hidden_length_from_sample_length -> ceil;
get_hidden_length_from_sample_length -> int;
repeat_signal -> tensor;
repeat_signal -> int;
repeat_signal -> cat;
count_occurence -> dict;
count_occurence -> split;
count_occurence -> get;
_speech_collate_fn -> zip;
_speech_collate_fn -> item;
_speech_collate_fn -> stack;
_speech_collate_fn -> append;
_speech_collate_fn -> max;
_speech_collate_fn -> pad;
_speech_collate_fn -> list;
_speech_collate_fn -> len;
_speech_collate_fn -> tensor;
_speech_collate_fn -> ValueError;
_fixed_seq_collate_fn -> zip;
_fixed_seq_collate_fn -> int;
_fixed_seq_collate_fn -> stack;
_fixed_seq_collate_fn -> max;
_fixed_seq_collate_fn -> append;
_fixed_seq_collate_fn -> item;
_fixed_seq_collate_fn -> cat;
_fixed_seq_collate_fn -> tensor;
_vad_frame_seq_collate_fn -> int;
_vad_frame_seq_collate_fn -> zip;
_vad_frame_seq_collate_fn -> stack;
_vad_frame_seq_collate_fn -> tensor;
_vad_frame_seq_collate_fn -> min;
_vad_frame_seq_collate_fn -> zeros;
_vad_frame_seq_collate_fn -> cat;
_vad_frame_seq_collate_fn -> max;
_vad_frame_seq_collate_fn -> normalize;
_vad_frame_seq_collate_fn -> div;
_vad_frame_seq_collate_fn -> range;
_vad_frame_seq_collate_fn -> append;
_vad_frame_seq_collate_fn -> extend;
cache_datastore_manifests -> isinstance;
cache_datastore_manifests -> sum;
cache_datastore_manifests -> split;
cache_datastore_manifests -> is_datastore_path;
cache_datastore_manifests -> min;
cache_datastore_manifests -> is_available;
cache_datastore_manifests -> is_initialized;
cache_datastore_manifests -> debug;
cache_datastore_manifests -> barrier;
cache_datastore_manifests -> is_global_rank_zero;
cache_datastore_manifests -> is_datastore_cache_shared;
cache_datastore_manifests -> int;
cache_datastore_manifests -> info;
cache_datastore_manifests -> cache_data;
cache_datastore_manifests -> warning;
cache_datastore_manifests -> RuntimeError;
cache_datastore_manifests -> cpu_count;
cache_datastore_manifests -> get;
cache_datastore_manifests -> str;
cache_datastore_manifests -> dirname;
cache_datastore_manifests -> DataStoreObject;
cache_datastore_manifests -> open;
cache_datastore_manifests -> tqdm;
cache_datastore_manifests -> all;
cache_datastore_manifests -> loads;
cache_datastore_manifests -> join;
cache_datastore_manifests -> append;
cache_datastore_manifests -> Pool;
cache_datastore_manifests -> list;
cache_datastore_manifests -> imap;
cache_datastore_manifests -> len;
_collate_fn -> _speech_collate_fn;
_collate_fn -> _feature_collate_fn;
_collate_fn -> _audio_feature_collate_fn;
_collate_fn -> _audio_noise_collate_fn;
_collate_fn -> list;
_collate_fn -> zip;
_collate_fn -> output_type;
_collate_fn -> _audio_collate_fn;
_collate_fn -> default_collate;
_collate_fn -> min;
_collate_fn -> stack;
_collate_fn -> LongTensor;
_collate_fn -> append;
_collate_fn -> _ceil_to_nearest;
_collate_fn -> _create_attention_mask2;
_collate_fn -> _collate_item;
_collate_fn -> zeros_like;
_collate_fn -> max;
_collate_fn -> range;
_collate_fn -> len;
_collate_fn -> ValueError;
_collate_fn -> float;
_collate_fn -> to;
_collate_fn -> _video_speech_collate_fn;
_collate_fn -> _speechllm_audio_text_collate_fn;
_collate_fn -> _speechllm_multi_audio_text_collate_fn;
_collate_fn -> tokenizer;
_collate_fn -> extend;
_collate_fn -> collate_train_dataset;
_collate_fn -> collate_test_dataset;
_collate_fn -> pad;
_collate_fn -> general_collate_fn;
_collate_fn -> join_data;
_collate_fn -> full;
_collate_fn -> enumerate;
_collate_fn -> zeros;
_collate_fn -> copy_;
_collate_fn -> tensor;
_collate_fn -> narrow;
_collate_fn -> size;
_collate_fn -> pad_sequence;
_collate_fn -> rearrange;
_collate_fn -> isinstance;
_collate_fn -> tokenizer_graphemes;
_collate_fn -> sum;
_collate_fn -> text_to_ids;
_collate_fn -> array;
_collate_fn -> reshape;
_collate_fn -> arange;
_collate_fn -> PackedSeqParams;
_collate_fn -> view;
_collate_fn -> contiguous;
_collate_fn -> update;
_collate_fn -> pop;
fixed_seq_collate_fn -> _fixed_seq_collate_fn;
fixed_seq_collate_fn -> zip;
fixed_seq_collate_fn -> list;
vad_frame_seq_collate_fn -> _vad_frame_seq_collate_fn;
expand_sharded_filepaths -> isinstance;
expand_sharded_filepaths -> ValueError;
expand_sharded_filepaths -> list;
expand_sharded_filepaths -> braceexpand;
expand_sharded_filepaths -> datastore_path_to_webdataset_url;
expand_sharded_filepaths -> info;
expand_sharded_filepaths -> replace;
expand_sharded_filepaths -> is_datastore_path;
expand_sharded_filepaths -> is_tarred_path;
expand_sharded_filepaths -> warning;
expand_sharded_filepaths -> len;
expand_sharded_filepaths -> _expand_sharded_filepaths;
expand_sharded_filepaths -> str;
_filter -> TarredAudioFilter;
_filter -> _internal_generator;
_filter -> enumerate;
_filter -> next;
_filter -> splitext;
_filter -> basename;
_filter -> range;
_filter -> str;
_filter -> print;
_filter -> FilteredIterator;
_internal_generator -> enumerate;
_internal_generator -> splitext;
_internal_generator -> basename;
_internal_generator -> range;
_internal_generator -> str;
_build_sample -> splitext;
_build_sample -> BytesIO;
_build_sample -> process;
_build_sample -> close;
_build_sample -> basename;
_build_sample -> long;
_build_sample -> tensor;
_build_sample -> _label_str_to_tensor;
_build_sample -> size;
_build_sample -> process_text_by_sample;
_build_sample -> len;
_build_sample -> int;
_build_sample -> pad_audio;
_build_sample -> sample_noise;
_build_sample -> AudioNoiseItem;
_build_sample -> item;
_build_sample -> RuntimeError;
_build_sample -> str;
_build_sample -> get_nested_dict_value;
_build_sample -> AudioSegment;
_build_sample -> perturb;
_build_sample -> process_text;
_build_sample -> _process_example;
_build_sample -> update;
_build_sample -> zeros;
_build_sample -> load;
_build_sample -> randint;
_build_sample -> astype;
_build_sample -> insert;
_build_sample -> items;
_build_sample -> create_masks_and_segment_ids;
_build_sample -> text_processor;
_build_sample -> read;
_build_sample -> from_numpy;
_build_sample -> warning;
_build_sample -> resample;
_build_sample -> _insert_data_in_template;
_build_sample -> _insert_virtual_token_placeholders;
_build_sample -> text_to_ids;
_build_sample -> list_to_tensor;
_build_sample -> to;
_build_sample -> cat;
_build_sample -> min;
_build_sample -> _get_len;
_build_sample -> _truncate_input_speech;
_build_sample -> pad_text_to_speech_dims;
_build_sample -> keys;
_build_sample -> _get_tokens;
_build_sample -> split;
_build_sample -> _get_element_len;
_build_sample -> ValueError;
_build_sample -> range;
_build_sample -> stack;
_build_sample -> beta_binomial_prior_distribution;
_build_sample -> uniform;
_build_sample -> dim;
_build_sample -> append;
_build_sample -> zeros_like;
__iter__ -> __iter__;
__iter__ -> _internal_generator;
__iter__ -> BucketingIterator;
__iter__ -> iter;
__iter__ -> permutation;
__iter__ -> len;
__iter__ -> isinstance;
__iter__ -> enumerate;
__iter__ -> get_worker_info;
__iter__ -> arange;
__iter__ -> shuffle;
__iter__ -> map;
__iter__ -> int;
__iter__ -> min;
__iter__ -> ceil;
__iter__ -> float;
__iter__ -> asdict;
__iter__ -> next;
__iter__ -> splitext;
__iter__ -> BytesIO;
__iter__ -> basename;
__iter__ -> _make_batches;
__iter__ -> Generator;
__iter__ -> manual_seed;
__iter__ -> randperm;
__iter__ -> size;
__iter__ -> cat;
__iter__ -> clamp;
__iter__ -> zeros;
__iter__ -> normalize_batch;
__iter__ -> tensor;
__iter__ -> items;
__iter__ -> index_generator;
__iter__ -> range;
__iter__ -> get_iterable;
__iter__ -> Subset;
__iter__ -> prep_underlying_datasets;
__iter__ -> build_single_CS_sample;
__iter__ -> resolve_seed;
__iter__ -> from_dict;
__iter__ -> get;
__iter__ -> get_full_path;
__iter__ -> pop;
__iter__ -> _create_cut;
__iter__ -> append;
__iter__ -> str;
__iter__ -> SupervisionSegment;
__iter__ -> attach_to;
__iter__ -> compile;
__iter__ -> groupby;
__iter__ -> _iter_sequential;
__iter__ -> Random;
__iter__ -> info;
__iter__ -> Recording;
__iter__ -> sorted;
__iter__ -> warning;
__iter__ -> group;
__iter__ -> ifnone;
__iter__ -> make_cut_with_subset_inmemory_recording;
__iter__ -> _to_custom_attr_dict;
__iter__ -> match;
__iter__ -> AudioSource;
__iter__ -> list;
__iter__ -> open;
__iter__ -> TextExample;
__iter__ -> zip;
__iter__ -> strip;
__iter__ -> SourceTargetTextExample;
__iter__ -> choice;
__iter__ -> load_jsonl;
__iter__ -> NeMoSFTExample;
__iter__ -> _iter_tar;
__iter__ -> _iter_jsonl;
__iter__ -> set_value;
__iter__ -> tolist;
__iter__ -> get_value;
__iter__ -> dict;
__iter__ -> generate_samples;
__iter__ -> unsqueeze;
__iter__ -> BertPretrainingPreprocessedDataset;
__iter__ -> DistributedSampler;
__iter__ -> DataLoader;
__iter__ -> _get_padding_indices;
__iter__ -> chain;
__iter__ -> get_start_end_idx;
__iter__ -> set_epoch;
__iter__ -> keys;
__iter__ -> _DataFetcherWrapper;
__iter__ -> super;
__iter__ -> UnavailableError;
__iter__ -> wait_stream;
__iter__ -> stream;
__iter__ -> struct_copy_two;
__iter__ -> struct_copy_one;
__iter__ -> current_stream;
_get_label_set -> sorted;
_get_label_set -> set;
_get_label_set -> extend;
_get_label_set -> split;
_label_str_to_tensor -> split;
_label_str_to_tensor -> float;
_label_str_to_tensor -> long;
_label_str_to_tensor -> tensor;
__next__ -> next;
__next__ -> _internal_generator;
__next__ -> range;
__next__ -> append;
__next__ -> len;
__next__ -> splitext;
__next__ -> basename;
__next__ -> numpy;
__next__ -> enumerate;
__next__ -> full;
__next__ -> tensor;
__next__ -> DALIOutputs;
__next__ -> clone;
__next__ -> process_text_by_id;
__next__ -> split;
__next__ -> process_text_by_file_id;
__next__ -> detach;
__next__ -> decode;
__next__ -> tobytes;
__next__ -> int;
__next__ -> cpu;
__next__ -> zeros;
__next__ -> as_tensor;
__next__ -> print;
__next__ -> put;
__next__ -> get_nowait;
__next__ -> warning;
__next__ -> __next__;
__next__ -> super;
get_classification_label_dataset -> AudioToClassificationLabelDataset;
get_classification_label_dataset -> get;
get_speech_label_dataset -> AudioToSpeechLabelDataset;
get_speech_label_dataset -> get;
get_tarred_classification_label_dataset -> convert_to_config_list;
get_tarred_classification_label_dataset -> get;
get_tarred_classification_label_dataset -> enumerate;
get_tarred_classification_label_dataset -> get_chain_dataset;
get_tarred_classification_label_dataset -> len;
get_tarred_classification_label_dataset -> ValueError;
get_tarred_classification_label_dataset -> zip;
get_tarred_classification_label_dataset -> TarredAudioToClassificationLabelDataset;
get_tarred_classification_label_dataset -> append;
get_tarred_classification_label_dataset -> isinstance;
get_tarred_classification_label_dataset -> range;
convert_to_config_list -> enumerate;
convert_to_config_list -> type;
convert_to_config_list -> split;
convert_to_config_list -> ValueError;
convert_to_config_list -> isinstance;
convert_to_config_list -> ListConfig;
get_chain_dataset -> get;
get_chain_dataset -> len;
get_chain_dataset -> ChainDataset;
get_chain_dataset -> calc_bucketing_batch_sizes;
get_chain_dataset -> info;
get_chain_dataset -> enumerate;
get_chain_dataset -> RandomizedChainDataset;
get_chain_dataset -> BucketingDataset;
get_chain_dataset -> ValueError;
get_chain_dataset -> randint;
get_concat_tarred_speech_label_dataset -> enumerate;
get_concat_tarred_speech_label_dataset -> ConcatDataset;
get_concat_tarred_speech_label_dataset -> zip;
get_concat_tarred_speech_label_dataset -> deepcopy;
get_concat_tarred_speech_label_dataset -> get_tarred_speech_label_dataset;
get_concat_tarred_speech_label_dataset -> append;
get_concat_tarred_speech_label_dataset -> get;
get_tarred_speech_label_dataset -> convert_to_config_list;
get_tarred_speech_label_dataset -> get;
get_tarred_speech_label_dataset -> enumerate;
get_tarred_speech_label_dataset -> get_chain_dataset;
get_tarred_speech_label_dataset -> len;
get_tarred_speech_label_dataset -> ValueError;
get_tarred_speech_label_dataset -> zip;
get_tarred_speech_label_dataset -> TarredAudioToSpeechLabelDataset;
get_tarred_speech_label_dataset -> append;
get_tarred_speech_label_dataset -> isinstance;
get_tarred_speech_label_dataset -> range;
get_audio_multi_label_dataset -> AudioToMultiLabelDataset;
get_audio_multi_label_dataset -> process_augmentations;
get_audio_multi_label_dataset -> get;
process_augmentations -> isinstance;
process_augmentations -> deepcopy;
process_augmentations -> items;
process_augmentations -> AudioAugmentor;
process_augmentations -> ValueError;
process_augmentations -> to_container;
process_augmentations -> get;
process_augmentations -> type;
process_augmentations -> KeyError;
process_augmentations -> pop;
process_augmentations -> augmentation_class;
process_augmentations -> append;
process_augmentations -> signature;
process_augmentations -> keys;
get_tarred_audio_multi_label_dataset -> convert_to_config_list;
get_tarred_audio_multi_label_dataset -> get;
get_tarred_audio_multi_label_dataset -> enumerate;
get_tarred_audio_multi_label_dataset -> get_chain_dataset;
get_tarred_audio_multi_label_dataset -> process_augmentations;
get_tarred_audio_multi_label_dataset -> len;
get_tarred_audio_multi_label_dataset -> ValueError;
get_tarred_audio_multi_label_dataset -> zip;
get_tarred_audio_multi_label_dataset -> TarredAudioToMultiLabelDataset;
get_tarred_audio_multi_label_dataset -> append;
get_tarred_audio_multi_label_dataset -> isinstance;
get_tarred_audio_multi_label_dataset -> range;
datastore_path_to_webdataset_url -> is_datastore_path;
datastore_path_to_webdataset_url -> ValueError;
datastore_path_to_webdataset_url -> startswith;
is_datastore_path -> urlparse;
is_datastore_path -> bool;
is_tarred_path -> endswith;
is_datastore_cache_shared -> int;
is_datastore_cache_shared -> get;
is_datastore_cache_shared -> ValueError;
cache_data -> min;
cache_data -> is_datastore_path;
cache_data -> cpu_count;
cache_data -> info;
cache_data -> get;
cache_data -> debug;
cache_data -> str;
cache_data -> dirname;
cache_data -> DataStoreObject;
cache_data -> open;
cache_data -> tqdm;
cache_data -> all;
cache_data -> RuntimeError;
cache_data -> loads;
cache_data -> join;
cache_data -> append;
cache_data -> Pool;
cache_data -> list;
cache_data -> imap;
cache_data -> len;
shard_manifests_if_needed -> expand_sharded_filepaths;
shard_manifests_if_needed -> is_available;
shard_manifests_if_needed -> warning;
shard_manifests_if_needed -> is_initialized;
process_text_by_id -> process_text_by_sample;
process_text_by_sample -> len;
process_text_by_file_id -> process_text_by_sample;
_process_sample -> process;
_process_sample -> process_text_by_sample;
_process_sample -> long;
_process_sample -> tensor;
_process_sample -> isinstance;
_process_sample -> _process_cut;
_process_sample -> _process_multimodal_conversation;
_process_sample -> ValueError;
_process_sample -> type;
_compute_len -> is_available;
_compute_len -> is_initialized;
_compute_len -> cuda;
_compute_len -> all_reduce;
_compute_len -> int;
_compute_len -> info;
_compute_len -> len;
_compute_len -> tensor;
_compute_len -> get_data_parallel_world_size;
_loop_offsets -> TarredAudioLoopOffsets;
_loop_offsets -> next;
_loop_offsets -> len;
__call__ -> text_to_ids;
__call__ -> isinstance;
__call__ -> extend;
__call__ -> labels_to_pyannote_object;
__call__ -> makedirs;
__call__ -> TemporaryDirectory;
__call__ -> join;
__call__ -> _initialize_configs;
__call__ -> diarize;
__call__ -> rttm_to_labels;
__call__ -> open;
__call__ -> write;
__call__ -> dumps;
__call__ -> Path;
__call__ -> size;
__call__ -> range;
__call__ -> AudioNoiseBatch;
__call__ -> randint;
__call__ -> zeros_like;
__call__ -> rand;
__call__ -> max;
__call__ -> uniform;
__call__ -> choice;
__call__ -> clone;
__call__ -> pad_or_trim_noise;
__call__ -> sum;
__call__ -> sqrt;
__call__ -> int;
__call__ -> repeat_noise;
__call__ -> min;
__call__ -> multinomial;
__call__ -> get_noise_segments;
__call__ -> inference_mode;
__call__ -> _forward;
__call__ -> split;
__call__ -> squeeze;
__call__ -> view;
__call__ -> create_fsa_vec;
__call__ -> _build_single_adapter;
__call__ -> tolist;
__call__ -> forward;
__call__ -> is_autocast_enabled;
__call__ -> copy_;
__call__ -> replay;
__call__ -> synchronize;
__call__ -> repeat_interleave;
__call__ -> _greedy_decode_blank_as_pad_loop_frames;
__call__ -> NotImplementedError;
__call__ -> to;
__call__ -> _reinitialize;
__call__ -> repeat;
__call__ -> flatten;
__call__ -> Hypothesis;
__call__ -> float;
__call__ -> get_autocast_gpu_dtype;
__call__ -> current_stream;
__call__ -> arange;
__call__ -> typecheck;
__call__ -> train;
__call__ -> hasattr;
__call__ -> transpose;
__call__ -> eval;
__call__ -> tqdm;
__call__ -> next;
__call__ -> parameters;
__call__ -> search_algorithm;
__call__ -> pack_hypotheses;
__call__ -> append;
__call__ -> NBestHypotheses;
__call__ -> no_grad;
__call__ -> run_encoder;
__call__ -> is_tensor;
__call__ -> _greedy_decode;
__call__ -> len;
__call__ -> tensor;
__call__ -> loop_labels_torch;
__call__ -> is_available;
__call__ -> is_initialized;
__call__ -> autocast;
__call__ -> nullcontext;
__call__ -> loop_labels_cuda_graphs;
__call__ -> batched_modified_adaptive_expansion_search_torch;
__call__ -> modified_alsd_torch;
__call__ -> modified_alsd_cuda_graphs;
__call__ -> generator;
__call__ -> pad_sequence;
__call__ -> get_seq_length;
__call__ -> RuntimeError;
__call__ -> _measure_tps;
__call__ -> select_bucket;
__call__ -> _tokenize;
__call__ -> _normalize;
__call__ -> _impl;
__call__ -> encode;
__call__ -> __call__;
__call__ -> cudagraph_manager;
__call__ -> super;
__call__ -> encoder_prompt;
__call__ -> prepare_latents;
__call__ -> linspace;
__call__ -> _calculate_shift;
__call__ -> set_timesteps;
__call__ -> empty_cache;
__call__ -> print;
__call__ -> zip;
__call__ -> enumerate;
__call__ -> save;
__call__ -> ValueError;
__call__ -> expand;
__call__ -> transformer;
__call__ -> _unpack_latents;
__call__ -> denormalize;
__call__ -> torch_to_numpy;
__call__ -> numpy_to_pil;
__call__ -> step;
__call__ -> decode;
__call__ -> prepare_image;
__call__ -> _pack_latents;
__call__ -> flux_controlnet;
__call__ -> log;
__call__ -> dict;
__call__ -> _pad_and_resize;
__call__ -> default_collate;
__call__ -> get;
__call__ -> pad;
__call__ -> LongTensor;
__call__ -> ones;
__call__ -> get_ltor_masks_and_position_ids;
__call__ -> cat;
__call__ -> zeros;
__call__ -> rearrange;
__call__ -> IntTensor;
__call__ -> list;
__call__ -> to_object;
__call__ -> perf_counter;
__call__ -> get_text_encodings;
__call__ -> clamp_;
__call__ -> numpy;
__call__ -> strip;
__call__ -> format;
__call__ -> manual_seed;
__call__ -> randn;
__call__ -> sample_image;
__call__ -> permute;
__call__ -> half;
__call__ -> cpu;
__call__ -> sort;
__call__ -> stack;
__call__ -> tree;
__call__ -> transform;
__call__ -> as_tensor;
__call__ -> abs;
__call__ -> reshape;
__call__ -> pow;
__call__ -> _sort_edges;
__call__ -> unique;
__call__ -> long;
__call__ -> flip;
__call__ -> unsqueeze;
__call__ -> gather;
__call__ -> possibly_quantize_sigma;
__call__ -> append_dims;
__call__ -> scaling;
__call__ -> possibly_quantize_c_noise;
__call__ -> network;
__call__ -> ones_like;
__call__ -> get_sigmas;
__call__ -> append_zero;
__call__ -> chunk;
__call__ -> scale_schedule;
__call__ -> dyn_thresh;
__call__ -> conditioner;
__call__ -> randn_like;
__call__ -> denoiser;
__call__ -> get_loss;
__call__ -> w;
__call__ -> intersection;
__call__ -> sigma_sampler;
__call__ -> prepare_sampling_loop;
__call__ -> get_sigma_gen;
__call__ -> get_gamma;
__call__ -> sampler_step;
__call__ -> guider;
__call__ -> to_d;
__call__ -> pop;
__call__ -> linear_multistep_coeff;
__call__ -> prepare_inputs;
__call__ -> detach;
__call__ -> reversed;
__call__ -> exp;
__call__ -> default;
__call__ -> idx_to_sigma;
__call__ -> schedule;
__call__ -> discretization;
__call__ -> _process_example;
__call__ -> put;
__call__ -> _check_number_of_labels;
__call__ -> info;
__call__ -> array;
__call__ -> _maybe_clip;
__call__ -> from_file;
__call__ -> ModuleNotFoundError;
__call__ -> input_gate;
__call__ -> a_gate;
__call__ -> rnn_scan;
__call__ -> data_ptr;
__call__ -> type;
__call__ -> as_frozen;
__call__ -> process_sample;
__call__ -> freeze_llm;
__call__ -> _transform_module;
__call__ -> freeze_model;
__call__ -> summarize;
__call__ -> word_tokenize_func;
__call__ -> parse_one_word;
__call__ -> normalize_unicode_text;
__call__ -> warning;
__call__ -> disambiguate;
__call__ -> set_grapheme_case;
__call__ -> word_segmenter;
__call__ -> keys;
__call__ -> str;
__call__ -> _lazy_pinyin;
__call__ -> error;
__call__ -> torch_grad;
__call__ -> mean;
__call__ -> norm;
__call__ -> relu;
__call__ -> interpolate;
__call__ -> mask_sequence_tensor;
__call__ -> round;
__call__ -> zoom;
__call__ -> bank;
__call__ -> random;
__call__ -> operation1;
__call__ -> operation2;
__call__ -> filter;
__call__ -> GaussianBlur;
__call__ -> solarize;
__call__ -> gen_mask;
__call__ -> global_transform1;
__call__ -> global_transform2;
__call__ -> local_transform;
__call__ -> topk;
__call__ -> wrapped_call;
__call__ -> op;
__call__ -> getattr;
__call__ -> attr;
__call__ -> get_data_iterator_and_seq_length;
__call__ -> forward_backward_func;
__call__ -> with_suffix;
__call__ -> FileLock;
__call__ -> exists;
__call__ -> local_path;
__call__ -> acquire;
__call__ -> rmtree;
__call__ -> apply;
__call__ -> remove;
__call__ -> _match_keys;
__call__ -> any;
__call__ -> signature;
__call__ -> debug;
__call__ -> ndenumerate;
__call__ -> items;
__call__ -> call_transform;
__call__ -> item;
__call__ -> values;
__call__ -> isscalar;
__call__ -> predicate;
__call__ -> handler;
__call__ -> is_trainer_attached;
__call__ -> walk;
__call__ -> connect;
__call__ -> scheduler;
__call__ -> optimizers;
__call__ -> lr_scheduler;
__call__ -> LightningNotInstalledException;
__call__ -> UnavailableError;
__call__ -> tuple;
__call__ -> NamedTupleOutputType;
__call__ -> train_forward;
__call__ -> eval_forward;
__call__ -> infer_forward;
is_dali_supported -> check_lib_version;
is_dali_supported -> info;
check_lib_version -> hasattr;
check_lib_version -> import_class_by_path;
check_lib_version -> import_module;
check_lib_version -> Version;
check_lib_version -> operator;
spectrogram -> pad;
spectrogram -> squeeze;
spectrogram -> view_as_real;
spectrogram -> norm;
spectrogram -> stft;
spectrogram -> int;
inject_dataloader_value_from_model_config -> info;
inject_dataloader_value_from_model_config -> isinstance;
inject_dataloader_value_from_model_config -> DictConfig;
inject_dataloader_value_from_model_config -> warning;
inject_dataloader_value_from_model_config -> open_dict;
get_concat_char_dataset -> ConcatDataset;
get_concat_char_dataset -> warning;
get_concat_char_dataset -> info;
get_concat_char_dataset -> deepcopy;
get_concat_char_dataset -> get_char_dataset;
get_concat_char_dataset -> append;
get_concat_char_dataset -> len;
get_concat_char_dataset -> isinstance;
get_concat_char_dataset -> get;
get_concat_bpe_dataset -> ConcatDataset;
get_concat_bpe_dataset -> info;
get_concat_bpe_dataset -> deepcopy;
get_concat_bpe_dataset -> get_bpe_dataset;
get_concat_bpe_dataset -> append;
get_concat_bpe_dataset -> len;
get_concat_bpe_dataset -> isinstance;
get_concat_bpe_dataset -> get;
get_concat_tarred_dataset -> enumerate;
get_concat_tarred_dataset -> ConcatDataset;
get_concat_tarred_dataset -> zip;
get_concat_tarred_dataset -> deepcopy;
get_concat_tarred_dataset -> get_tarred_dataset;
get_concat_tarred_dataset -> append;
get_concat_tarred_dataset -> get;
get_tarred_dataset -> convert_to_config_list;
get_tarred_dataset -> get;
get_tarred_dataset -> enumerate;
get_tarred_dataset -> get_chain_dataset;
get_tarred_dataset -> len;
get_tarred_dataset -> ValueError;
get_tarred_dataset -> warning;
get_tarred_dataset -> zip;
get_tarred_dataset -> TarredAudioToCharDataset;
get_tarred_dataset -> TarredAudioToBPEDataset;
get_tarred_dataset -> append;
get_tarred_dataset -> isinstance;
get_tarred_dataset -> range;
get_tarred_dataset -> Exception;
get_tarred_dataset -> TarredVideoToBPEDataset;
get_code_switched_dataset -> get;
get_code_switched_dataset -> to_container;
get_code_switched_dataset -> enumerate;
get_code_switched_dataset -> CodeSwitchedDataset;
get_code_switched_dataset -> ValueError;
get_code_switched_dataset -> len;
get_code_switched_dataset -> zip;
get_code_switched_dataset -> deepcopy;
get_code_switched_dataset -> append;
get_code_switched_dataset -> isinstance;
get_code_switched_dataset -> open_dict;
get_code_switched_dataset -> get_tarred_dataset;
get_code_switched_dataset -> get_char_dataset;
get_code_switched_dataset -> get_bpe_dataset;
get_dali_char_dataset -> AudioToCharDALIDataset;
get_dali_char_dataset -> is_available;
get_dali_char_dataset -> get;
get_dali_bpe_dataset -> AudioToBPEDALIDataset;
get_dali_bpe_dataset -> is_available;
get_dali_bpe_dataset -> get;
get_audio_to_text_char_dataset_from_config -> get;
get_audio_to_text_char_dataset_from_config -> process_augmentations;
get_audio_to_text_char_dataset_from_config -> get_hf_audio_to_text_char_dataset;
get_audio_to_text_char_dataset_from_config -> is_available;
get_audio_to_text_char_dataset_from_config -> get_dali_char_dataset;
get_audio_to_text_char_dataset_from_config -> get_code_switched_dataset;
get_audio_to_text_char_dataset_from_config -> warning;
get_audio_to_text_char_dataset_from_config -> isclose;
get_audio_to_text_char_dataset_from_config -> get_concat_tarred_dataset;
get_audio_to_text_char_dataset_from_config -> get_tarred_dataset;
get_audio_to_text_char_dataset_from_config -> get_concat_char_dataset;
get_audio_to_text_char_dataset_from_config -> get_char_dataset;
get_audio_to_text_char_dataset_from_config -> sum;
get_hf_audio_to_text_char_dataset -> HFIterableAudioToCharDataset;
get_hf_audio_to_text_char_dataset -> HFAudioToCharDataset;
get_hf_audio_to_text_char_dataset -> get;
get_audio_to_text_bpe_dataset_from_config -> get;
get_audio_to_text_bpe_dataset_from_config -> process_augmentations;
get_audio_to_text_bpe_dataset_from_config -> get_hf_audio_to_text_bpe_dataset;
get_audio_to_text_bpe_dataset_from_config -> is_available;
get_audio_to_text_bpe_dataset_from_config -> get_dali_bpe_dataset;
get_audio_to_text_bpe_dataset_from_config -> get_code_switched_dataset;
get_audio_to_text_bpe_dataset_from_config -> warning;
get_audio_to_text_bpe_dataset_from_config -> isclose;
get_audio_to_text_bpe_dataset_from_config -> get_concat_tarred_dataset;
get_audio_to_text_bpe_dataset_from_config -> get_tarred_dataset;
get_audio_to_text_bpe_dataset_from_config -> get_concat_bpe_dataset;
get_audio_to_text_bpe_dataset_from_config -> get_bpe_dataset;
get_audio_to_text_bpe_dataset_from_config -> sum;
get_hf_audio_to_text_bpe_dataset -> HFIterableAudioToBPEDataset;
get_hf_audio_to_text_bpe_dataset -> HFAudioToBPEDataset;
get_hf_audio_to_text_bpe_dataset -> get;
calc_bucketing_batch_sizes -> get;
calc_bucketing_batch_sizes -> ValueError;
calc_bucketing_batch_sizes -> type;
calc_bucketing_batch_sizes -> len;
calc_bucketing_batch_sizes -> enumerate;
calc_bucketing_batch_sizes -> range;
calc_bucketing_batch_sizes -> isinstance;
calc_bucketing_batch_sizes -> append;
as_tensor -> NotImplementedError;
_drop_in_memory_data -> frozenset;
_drop_in_memory_data -> CutSet;
_drop_in_memory_data -> keys;
_drop_in_memory_data -> issuperset;
_drop_in_memory_data -> append;
_drop_in_memory_data -> items;
_drop_in_memory_data -> isinstance;
_drop_in_memory_data -> drop_in_memory_data;
_drop_in_memory_data -> delattr;
_drop_in_memory_data -> setattr;
_collate_tokens -> tensor;
_collate_tokens -> collate_vectors;
_collate_tokens -> as_tensor;
_collate_tokens -> size;
apply_prompt_format_fn -> get_prompt_format_fn;
apply_prompt_format_fn -> fn;
build_speaker_samples_map -> defaultdict;
build_speaker_samples_map -> info;
build_speaker_samples_map -> tqdm;
build_speaker_samples_map -> append;
build_speaker_samples_map -> len;
_check_args -> Exception;
_check_args -> len;
_check_args -> warning;
_init_speaker_permutations -> seed;
_init_speaker_permutations -> len;
_init_speaker_permutations -> int;
_init_speaker_permutations -> range;
_init_speaker_permutations -> info;
_init_speaker_permutations -> reshape;
_init_speaker_permutations -> list;
_init_speaker_permutations -> ceil;
_init_speaker_permutations -> ValueError;
_init_speaker_permutations -> hstack;
_init_speaker_permutations -> permutation;
_init_chunk_count -> int;
_init_chunk_count -> ceil;
clean_up -> empty_cache;
_get_speaker_dominance -> normal;
_get_speaker_dominance -> clip;
_get_speaker_dominance -> sum;
_get_speaker_dominance -> range;
_get_speaker_dominance -> len;
_increase_speaker_dominance -> range;
_increase_speaker_dominance -> len;
_increase_speaker_dominance -> copy;
_increase_speaker_dominance -> append;
_increase_speaker_dominance -> sum;
_set_speaker_volume -> ones;
_set_speaker_volume -> normal;
_set_speaker_volume -> tolist;
_set_speaker_volume -> clip;
_set_speaker_volume -> array;
_get_next_speaker -> uniform;
_get_window -> to;
_get_window -> hamming;
_get_window -> hann;
_get_window -> from_numpy;
_get_window -> cosine;
_get_window -> Exception;
_get_start_buffer_and_window -> int;
_get_end_buffer_and_window -> int;
_check_missing_speakers -> range;
_check_missing_speakers -> len;
_check_missing_speakers -> warn;
_add_file -> int;
_add_file -> _get_start_buffer_and_window;
_add_file -> len;
_add_file -> randint;
_add_file -> append;
_add_file -> to;
_add_file -> _get_end_buffer_and_window;
_add_file -> _get_window;
_add_file -> cat;
_add_file -> multiply;
_add_file -> float;
_build_sentence -> zeros;
_build_sentence -> negative_binomial;
_build_sentence -> load_speaker_sample;
_build_sentence -> get_random_offset_index;
_build_sentence -> read_audio_from_buffer;
_build_sentence -> _add_file;
_build_sentence -> get_split_points_in_alignments;
_build_sentence -> per_speaker_normalize;
_build_sentence -> perturb_audio;
_build_sentence -> max;
_build_sentence -> abs;
_build_sentence -> len;
load_speaker_sample -> randint;
load_speaker_sample -> deepcopy;
load_speaker_sample -> max;
load_speaker_sample -> len;
load_speaker_sample -> ValueError;
load_speaker_sample -> add_silence_to_alignments;
load_speaker_sample -> str;
get_random_offset_index -> len;
get_random_offset_index -> ValueError;
get_random_offset_index -> randint;
get_random_offset_index -> where;
get_random_offset_index -> binary_search_alignments;
get_random_offset_index -> array;
read_audio_from_buffer -> get_subset_of_audio_manifest;
read_audio_from_buffer -> from_file;
read_audio_from_buffer -> to;
read_audio_from_buffer -> min;
read_audio_from_buffer -> from_numpy;
read_audio_from_buffer -> mean;
get_split_points_in_alignments -> range;
get_split_points_in_alignments -> append;
get_split_points_in_alignments -> len;
get_split_points_in_alignments -> int;
per_speaker_normalize -> double;
per_speaker_normalize -> sqrt;
per_speaker_normalize -> len;
per_speaker_normalize -> sum;
per_speaker_normalize -> to;
per_speaker_normalize -> tensor;
perturb_audio -> isinstance;
perturb_audio -> AudioSegment;
perturb_audio -> perturb;
perturb_audio -> to;
perturb_audio -> device;
perturb_audio -> numpy;
perturb_audio -> from_numpy;
perturb_audio -> cpu;
_add_silence_or_overlap -> silence_vs_overlap_selector;
_add_silence_or_overlap -> sample_from_overlap_model;
_add_silence_or_overlap -> is_overlap;
_add_silence_or_overlap -> sample_from_silence_model;
_add_silence_or_overlap -> get_overlap_range;
_add_silence_or_overlap -> max;
silence_vs_overlap_selector -> bool;
sample_from_overlap_model -> max;
sample_from_overlap_model -> min;
sample_from_overlap_model -> int;
sample_from_overlap_model -> rvs;
sample_from_overlap_model -> gamma;
sample_from_silence_model -> max;
sample_from_silence_model -> min;
sample_from_silence_model -> int;
sample_from_silence_model -> rvs;
sample_from_silence_model -> gamma;
get_overlap_range -> is_overlap;
get_overlap_range -> max;
get_overlap_range -> min;
_get_session_meta_data -> list;
_get_session_silence_from_rttm -> merge_float_intervals;
_get_session_silence_from_rttm -> sum;
_get_session_silence_from_rttm -> int;
_get_session_silence_from_rttm -> append;
_get_session_silence_from_rttm -> split;
_get_session_silence_from_rttm -> float;
merge_float_intervals -> merge_int_intervals;
merge_float_intervals -> int;
merge_float_intervals -> append;
merge_float_intervals -> int2fl;
merge_float_intervals -> fl2int;
_add_sentence_to_array -> len;
_add_sentence_to_array -> pad;
_generate_session -> seed;
_generate_session -> _get_speaker_dominance;
_generate_session -> copy;
_generate_session -> _set_speaker_volume;
_generate_session -> init_annotation_lists;
_generate_session -> uniform;
_generate_session -> int;
_generate_session -> to;
_generate_session -> get_session_silence_mean;
_generate_session -> get_session_overlap_mean;
_generate_session -> normalize_audio;
_generate_session -> is_tensor;
_generate_session -> write;
_generate_session -> write_annotation_files;
_generate_session -> clean_up;
_generate_session -> _get_next_speaker;
_generate_session -> _build_sentence;
_generate_session -> len;
_generate_session -> _add_silence_or_overlap;
_generate_session -> _add_sentence_to_array;
_generate_session -> create_new_rttm_entry;
_generate_session -> extend;
_generate_session -> create_new_json_entry;
_generate_session -> append;
_generate_session -> create_new_ctm_entry;
_generate_session -> maximum;
_generate_session -> _get_session_silence_from_rttm;
_generate_session -> perturb_audio;
_generate_session -> numpy;
_generate_session -> join;
_generate_session -> range;
_generate_session -> zeros;
_generate_session -> _increase_speaker_dominance;
_generate_session -> float;
_generate_session -> mean;
_generate_session -> get_background_noise;
_generate_session -> ValueError;
_generate_session -> _get_session_meta_data;
_generate_session -> cpu;
_generate_session -> _generate_rir_gpuRIR;
_generate_session -> _convolve_rir;
_generate_session -> _get_background;
_generate_session -> _generate_rir_pyroomacoustics;
_generate_session -> Exception;
_generate_session -> pad;
get_session_silence_mean -> _init_silence_params;
get_session_silence_mean -> _mean_var_to_a_and_b;
get_session_silence_mean -> rvs;
get_session_silence_mean -> ValueError;
get_session_silence_mean -> beta;
get_session_overlap_mean -> _init_overlap_params;
get_session_overlap_mean -> _mean_var_to_a_and_b;
get_session_overlap_mean -> rvs;
get_session_overlap_mean -> ValueError;
get_session_overlap_mean -> beta;
normalize_audio -> max;
normalize_audio -> abs;
write_annotation_files -> labels_to_rttmfile;
write_annotation_files -> write_manifest;
write_annotation_files -> write_ctm;
write_annotation_files -> write_text;
write_annotation_files -> join;
create_new_rttm_entry -> range;
create_new_rttm_entry -> round;
create_new_rttm_entry -> append;
create_new_rttm_entry -> len;
create_new_rttm_entry -> float;
create_new_json_entry -> round;
create_new_json_entry -> float;
create_new_ctm_entry -> float;
create_new_ctm_entry -> range;
create_new_ctm_entry -> round;
create_new_ctm_entry -> len;
create_new_ctm_entry -> get_ctm_line;
create_new_ctm_entry -> append;
maximum -> jit;
get_background_noise -> seed;
get_background_noise -> to;
get_background_noise -> get_desired_avg_power_noise;
get_background_noise -> randint;
get_background_noise -> read_audio_from_buffer;
get_background_noise -> get_scaled_audio_signal;
get_background_noise -> zeros;
get_background_noise -> len;
generate_sessions -> info;
generate_sessions -> seed;
generate_sessions -> get_cleaned_base_path;
generate_sessions -> save;
generate_sessions -> ProcessPoolExecutor;
generate_sessions -> read_noise_manifest;
generate_sessions -> range;
generate_sessions -> shutdown;
generate_sessions -> write_filelist_files;
generate_sessions -> join;
generate_sessions -> get_speaker_ids;
generate_sessions -> get_speaker_samples;
generate_sessions -> sample_noise_manifest;
generate_sessions -> is_available;
generate_sessions -> append;
generate_sessions -> tqdm;
generate_sessions -> device;
generate_sessions -> min;
generate_sessions -> as_completed;
generate_sessions -> add_to_filename_lists;
generate_sessions -> _check_missing_speakers;
generate_sessions -> len;
generate_sessions -> result;
generate_sessions -> _generate_session;
generate_sessions -> submit;
generate_sessions -> device_count;
get_cleaned_base_path -> isdir;
get_cleaned_base_path -> listdir;
get_cleaned_base_path -> isabs;
get_cleaned_base_path -> getcwd;
get_cleaned_base_path -> join;
get_cleaned_base_path -> exists;
get_cleaned_base_path -> mkdir;
get_cleaned_base_path -> Exception;
get_cleaned_base_path -> makedirs;
get_cleaned_base_path -> rmtree;
read_noise_manifest -> isinstance;
read_noise_manifest -> FileNotFoundError;
read_noise_manifest -> exists;
read_noise_manifest -> read_manifest;
write_filelist_files -> close;
write_filelist_files -> open;
write_filelist_files -> write;
write_filelist_files -> join;
get_speaker_ids -> list;
get_speaker_ids -> keys;
get_speaker_samples -> defaultdict;
sample_noise_manifest -> min;
sample_noise_manifest -> len;
sample_noise_manifest -> choice;
sample_noise_manifest -> range;
sample_noise_manifest -> append;
add_to_filename_lists -> join;
add_to_filename_lists -> append;
_check_args_rir -> Exception;
_check_args_rir -> ImportError;
_check_args_rir -> len;
_generate_rir_gpuRIR -> array;
_generate_rir_gpuRIR -> beta_SabineEstimation;
_generate_rir_gpuRIR -> att2t_SabineEstimator;
_generate_rir_gpuRIR -> t2n;
_generate_rir_gpuRIR -> simulateRIR;
_generate_rir_gpuRIR -> zeros;
_generate_rir_gpuRIR -> range;
_generate_rir_gpuRIR -> vstack;
_generate_rir_gpuRIR -> uniform;
_generate_rir_pyroomacoustics -> array;
_generate_rir_pyroomacoustics -> inverse_sabine;
_generate_rir_pyroomacoustics -> ShoeBox;
_generate_rir_pyroomacoustics -> CardioidFamily;
_generate_rir_pyroomacoustics -> add_microphone_array;
_generate_rir_pyroomacoustics -> compute_rir;
_generate_rir_pyroomacoustics -> zeros;
_generate_rir_pyroomacoustics -> range;
_generate_rir_pyroomacoustics -> vstack;
_generate_rir_pyroomacoustics -> add_source;
_generate_rir_pyroomacoustics -> DirectionVector;
_generate_rir_pyroomacoustics -> uniform;
_generate_rir_pyroomacoustics -> Material;
_convolve_rir -> range;
_convolve_rir -> append;
_convolve_rir -> tolist;
_convolve_rir -> len;
_convolve_rir -> tensor;
_convolve_rir -> convolve;
_feature_collate_fn -> list;
_feature_collate_fn -> stack;
_feature_collate_fn -> zip;
_feature_collate_fn -> len;
_feature_collate_fn -> append;
_feature_collate_fn -> tensor;
_feature_collate_fn -> ValueError;
_audio_feature_collate_fn -> list;
_audio_feature_collate_fn -> item;
_audio_feature_collate_fn -> stack;
_audio_feature_collate_fn -> zip;
_audio_feature_collate_fn -> len;
_audio_feature_collate_fn -> append;
_audio_feature_collate_fn -> tensor;
_audio_feature_collate_fn -> ValueError;
_audio_feature_collate_fn -> max;
_audio_feature_collate_fn -> pad;
_vad_feature_segment_collate_fn -> int;
_vad_feature_segment_collate_fn -> zip;
_vad_feature_segment_collate_fn -> div;
_vad_feature_segment_collate_fn -> stack;
_vad_feature_segment_collate_fn -> tensor;
_vad_feature_segment_collate_fn -> min;
_vad_feature_segment_collate_fn -> zeros;
_vad_feature_segment_collate_fn -> cat;
_vad_feature_segment_collate_fn -> max;
_vad_feature_segment_collate_fn -> range;
_vad_feature_segment_collate_fn -> append;
_vad_feature_segment_collate_fn -> extend;
_vad_segment_collate_fn -> _vad_feature_segment_collate_fn;
get_feature_seq_speakerlabel_dataset -> FeatureToSeqSpeakerLabelDataset;
get_feature_label_dataset -> FeatureToLabelDataset;
get_feature_label_dataset -> get;
get_feature_multi_label_dataset -> FeatureToMultiLabelDataset;
get_feature_multi_label_dataset -> get;
process_features_with_rttm -> load_speech_segments_from_rttm;
process_features_with_rttm -> clone;
process_features_with_rttm -> range;
process_features_with_rttm -> size;
process_features_with_rttm -> len;
normalize_feature -> unsqueeze;
normalize_feature -> normalize_batch;
normalize_feature -> squeeze;
normalize_feature -> tensor;
normalize_feature -> size;
load_speech_segments_from_rttm -> list;
load_speech_segments_from_rttm -> merge_intervals;
load_speech_segments_from_rttm -> load_rttm_file;
normalize_batch -> expand;
normalize_batch -> sum;
normalize_batch -> sqrt;
normalize_batch -> is_available;
normalize_batch -> item;
normalize_batch -> ValueError;
normalize_batch -> unsqueeze;
normalize_batch -> zeros;
normalize_batch -> range;
normalize_batch -> is_current_stream_capturing;
normalize_batch -> where;
normalize_batch -> mean;
normalize_batch -> std;
normalize_batch -> tensor;
normalize_batch -> any;
normalize_batch -> view;
normalize_batch -> arange;
_parse_manifest_item -> loads;
_parse_manifest_item -> get_full_path;
_parse_manifest_item -> dict;
_parse_manifest_item -> pop;
_parse_manifest_item -> KeyError;
_parse_manifest_item -> get;
_audio_noise_collate_fn -> item;
_audio_noise_collate_fn -> enumerate;
_audio_noise_collate_fn -> float;
_audio_noise_collate_fn -> long;
_audio_noise_collate_fn -> AudioNoiseBatch;
_audio_noise_collate_fn -> size;
_audio_noise_collate_fn -> append;
_audio_noise_collate_fn -> batch_augmentor;
_audio_noise_collate_fn -> max;
_audio_noise_collate_fn -> pad;
_audio_noise_collate_fn -> stack;
load_noise_manifest -> isinstance;
load_noise_manifest -> split;
load_noise_manifest -> read_manifest;
load_noise_manifest -> range;
load_noise_manifest -> extend;
load_noise_manifest -> len;
load_noise_manifest -> get_full_path;
load_noise_audio -> get;
load_noise_audio -> tensor;
load_noise_audio -> long;
load_noise_audio -> from_file;
load_noise_audio -> sum;
load_noise_audio -> warning;
load_noise_audio -> perturb;
load_noise_audio -> uniform;
load_noise_audio -> size;
load_noise_audio -> pad;
load_noise_audio -> WhiteNoisePerturbation;
from_file -> isinstance;
from_file -> cls;
from_file -> from_file_list;
from_file -> Exception;
from_file -> from_file;
from_file -> array;
from_file -> splitext;
from_file -> SoundFile;
from_file -> error;
from_file -> hasattr;
from_file -> get_array_of_samples;
from_file -> reshape;
from_file -> seek;
from_file -> read;
from_file -> get;
from_file -> int;
from_file -> from_arpa;
from_file -> Path;
from_file -> from_nemo;
from_file -> read_video;
from_file -> TemporaryDirectory;
from_file -> join;
from_file -> open;
from_file -> write;
from_file -> load;
from_file -> from_config;
perturb -> int;
perturb -> uniform;
perturb -> choice;
perturb -> resample;
perturb -> warning;
perturb -> stft;
perturb -> istft;
perturb -> phase_vocoder;
perturb -> round;
perturb -> len;
perturb -> full;
perturb -> concatenate;
perturb -> read_one_audiosegment;
perturb -> fftconvolve;
perturb -> max;
perturb -> argmax;
perturb -> mean;
perturb -> abs;
perturb -> perturb_with_input_noise;
perturb -> randint;
perturb -> randn;
perturb -> perturb;
perturb -> get_one_noise_sample;
perturb -> perturb_with_foreground_noise;
perturb -> keys;
perturb -> NamedTemporaryFile;
perturb -> write;
perturb -> from_file;
perturb -> transpose;
perturb -> list;
perturb -> check_output;
perturb -> range;
perturb -> deepcopy;
perturb -> subsegment;
perturb -> pad;
perturb -> min;
perturb -> random;
sample_noise -> float;
sample_noise -> long;
sample_noise -> zeros;
sample_noise -> tensor;
sample_noise -> len;
sample_noise -> load_noise_audio;
sample_noise -> randint;
sample_noise -> warning;
pad_audio -> size;
pad_audio -> int;
pad_audio -> ceil;
pad_audio -> repeat;
pad_audio -> pad;
pad_audio -> ValueError;
pad_audio -> item;
pad_audio -> max;
get_audio_noise_dataset -> AudioNoiseDataset;
get_audio_noise_dataset -> get;
get_concat_audio_noise_dataset -> ConcatDataset;
get_concat_audio_noise_dataset -> info;
get_concat_audio_noise_dataset -> deepcopy;
get_concat_audio_noise_dataset -> get_audio_noise_dataset;
get_concat_audio_noise_dataset -> append;
get_concat_audio_noise_dataset -> len;
get_concat_audio_noise_dataset -> isinstance;
get_concat_audio_noise_dataset -> get;
get_tarred_audio_noise_dataset -> convert_to_config_list;
get_tarred_audio_noise_dataset -> get;
get_tarred_audio_noise_dataset -> enumerate;
get_tarred_audio_noise_dataset -> get_chain_dataset;
get_tarred_audio_noise_dataset -> len;
get_tarred_audio_noise_dataset -> ValueError;
get_tarred_audio_noise_dataset -> zip;
get_tarred_audio_noise_dataset -> info;
get_tarred_audio_noise_dataset -> TarredAudioNoiseDataset;
get_tarred_audio_noise_dataset -> append;
get_tarred_audio_noise_dataset -> isinstance;
get_tarred_audio_noise_dataset -> range;
get_concat_tarred_audio_noise_dataset -> enumerate;
get_concat_tarred_audio_noise_dataset -> ConcatDataset;
get_concat_tarred_audio_noise_dataset -> zip;
get_concat_tarred_audio_noise_dataset -> deepcopy;
get_concat_tarred_audio_noise_dataset -> get_tarred_audio_noise_dataset;
get_concat_tarred_audio_noise_dataset -> append;
get_concat_tarred_audio_noise_dataset -> get;
get_audio_noise_dataset_from_config -> get;
get_audio_noise_dataset_from_config -> process_augmentations;
get_audio_noise_dataset_from_config -> from_config_dict;
get_audio_noise_dataset_from_config -> warning;
get_audio_noise_dataset_from_config -> get_concat_tarred_audio_noise_dataset;
get_audio_noise_dataset_from_config -> get_tarred_audio_noise_dataset;
get_audio_noise_dataset_from_config -> get_concat_audio_noise_dataset;
get_audio_noise_dataset_from_config -> get_audio_noise_dataset;
get_audio_noise_dataset_from_config -> open_dict;
get_audio_noise_dataset_from_config -> isclose;
get_audio_noise_dataset_from_config -> ValueError;
get_audio_noise_dataset_from_config -> len;
get_audio_noise_dataset_from_config -> sum;
_pad_audio -> int;
_pad_audio -> size;
_pad_audio -> ceil;
_pad_audio -> repeat;
_pad_audio -> pad;
_pad_audio -> ValueError;
_asr_text_to_tokens -> text_to_ids;
_asr_text_to_tokens -> asarray;
_asr_text_to_tokens -> append;
_tts_text_to_tokens -> asarray;
_tts_text_to_tokens -> tts_tokenizer_global;
_tts_text_to_tokens -> tts_parser;
_tts_text_to_tokens -> normalize;
_iterate_manifest -> open;
_iterate_manifest -> loads;
pad_sequence -> size;
pad_sequence -> fill_;
pad_sequence -> cat;
pad_sequence -> zeros;
collect -> range;
collect -> detach;
collect -> isinstance;
collect -> dim;
collect -> keys;
collect -> append;
collect -> reduce_amax;
collect -> min;
collect -> stack;
collect -> mean;
collect -> tensor;
_init_asr_tokenize_process -> deepcopy;
_init_tts_tokenize_process -> deepcopy;
get_nested_dict_value -> split;
get_nested_dict_value -> KeyError;
get_nested_dict_value -> keys;
process_text -> len;
process_text -> lower;
process_text -> join;
process_text -> hasattr;
process_text -> isinstance;
process_text -> parser;
process_text -> ValueError;
process_text -> isalnum;
process_text -> isspace;
process_text -> replace;
process_text -> translate;
process_text -> split;
process_text -> maketrans;
input_types -> NeuralType;
input_types -> LogitsType;
input_types -> LabelsType;
input_types -> ProbsType;
input_types -> LengthsType;
input_types -> LogprobsType;
input_types -> tuple;
input_types -> SpectrogramType;
input_types -> AcousticEncodedRepresentation;
input_types -> VoidType;
input_types -> hasattr;
input_types -> AudioSignal;
input_types -> OrderedDict;
input_types -> ChannelType;
input_types -> BoolType;
input_types -> EncodedRepresentation;
input_types -> ElementType;
input_types -> EmbeddedTextType;
input_types -> MaskType;
input_types -> update;
input_types -> super;
input_types -> HypothesisType;
input_types -> FloatType;
input_types -> range;
input_types -> str;
input_types -> LossType;
input_types -> RegressionValuesType;
input_types -> VideoSignal;
input_types -> StringType;
input_types -> IntType;
input_types -> TokenIndex;
input_types -> PredictionsType;
input_types -> TokenLogDurationType;
input_types -> TokenDurationType;
input_types -> MelSpectrogramType;
input_types -> NormalDistributionSamplesType;
input_types -> Index;
input_types -> ValueError;
reduce -> mean;
reduce -> sum;
reduce -> isinstance;
reduce -> cat;
reduce -> div;
reduce -> tensor;
reduce -> current_device;
reduce -> stack;
reduce -> all_reduce;
reduce -> len;
reduce -> get_data_parallel_group;
reduce -> vstack;
reduce -> concat;
reduce -> NotImplementedError;
reduce -> batch_collator;
update_graph -> update_graph;
update_graph -> clone;
update_graph -> hasattr;
update_graph -> CtcNumGraphCompiler;
update_graph -> to;
update_graph -> delattr;
update_graph -> max;
update_graph -> ValueError;
update_graph -> create_fsa_vec;
update_graph -> unique;
update_graph -> compiler;
_loss -> get_logits;
_loss -> get_ground_truth;
_loss -> sum;
_loss -> logsigmoid;
_loss -> NotImplementedError;
_loss -> getattr;
_loss -> transpose;
_loss -> log;
_loss -> pow;
_warn_unused_additional_kwargs -> len;
_warn_unused_additional_kwargs -> warning;
_clean_kwargs -> dict;
_clean_kwargs -> items;
_clean_kwargs -> set;
_clean_kwargs -> len;
_clean_kwargs -> _warn_unused_additional_kwargs;
_clean_kwargs -> keys;
_clean_kwargs -> signature;
resolve_rnnt_loss -> list;
resolve_rnnt_loss -> isinstance;
resolve_rnnt_loss -> keys;
resolve_rnnt_loss -> ValueError;
resolve_rnnt_loss -> ImportError;
resolve_rnnt_loss -> check_lib_version;
resolve_rnnt_loss -> to_container;
resolve_rnnt_loss -> RNNTLoss;
resolve_rnnt_loss -> _warn_unused_additional_kwargs;
resolve_rnnt_loss -> items;
resolve_rnnt_loss -> RuntimeError;
resolve_rnnt_loss -> pop;
resolve_rnnt_loss -> RNNTLossNumba;
resolve_rnnt_loss -> is_numba_cuda_fp16_supported;
resolve_rnnt_loss -> RNNTLossPytorch;
resolve_rnnt_loss -> MultiblankRNNTLossNumba;
resolve_rnnt_loss -> MultiblankRNNTLossPytorch;
resolve_rnnt_loss -> TDTLossNumba;
resolve_rnnt_loss -> TDTLossPytorch;
resolve_rnnt_loss -> _clean_kwargs;
resolve_rnnt_loss -> GraphRnntLoss;
resolve_rnnt_loss -> GraphWTransducerLoss;
is_numba_cuda_fp16_supported -> get;
is_numba_cuda_fp16_supported -> check_lib_version;
is_numba_cuda_fp16_supported -> lower;
compute_forward_prob -> zeros;
compute_forward_prob -> to;
compute_forward_prob -> range;
compute_forward_prob -> stack;
compute_forward_prob -> append;
compute_forward_prob -> reshape;
compute_forward_prob -> logsumexp;
compute_forward_prob -> gather;
compute_forward_prob -> type;
compute_forward_prob -> view;
compute_forward_prob -> cuda;
compute_forward_prob -> enumerate;
compute_forward_prob -> Tensor;
logsumexp -> logsumexp;
logsumexp -> stack;
sample_negatives -> multinomial;
sample_negatives -> view;
sample_negatives -> transpose;
sample_negatives -> ones;
_calculate_similarity -> all;
_calculate_similarity -> unsqueeze;
_calculate_similarity -> cat;
_calculate_similarity -> type_as;
_calculate_similarity -> any;
_calculate_similarity -> float;
_calculate_similarity -> cosine_similarity;
_calculate_similarity -> expand;
sample_from_codebook -> get_codebook_indices;
sample_from_codebook -> view;
sample_from_codebook -> size;
sample_from_codebook -> randint;
sample_from_codebook -> index_select;
sample_from_codebook -> flatten;
sample_from_codebook -> squeeze;
cosine_similarity -> cos_dist;
cosine_similarity -> mul;
cosine_similarity -> view;
cosine_similarity -> dist_to_emb;
cosine_similarity -> normalize;
cosine_similarity -> matmul;
cosine_similarity -> t;
set_num_updates -> set_num_updates;
set_num_updates -> max;
loss -> get_eps;
loss -> mean;
loss -> append_dims;
loss -> sigma_to_t;
loss -> get_scalings;
loss -> flatten;
loss -> pow;
loss -> cpu;
loss -> detach;
loss -> type_as;
loss -> sum;
loss -> Normal;
loss -> recon_loss_fn;
loss -> min;
loss -> view;
loss -> exp;
loss -> zeros_like;
loss -> ones_like;
loss -> log_prob;
loss -> _validate_inputs;
loss -> _loss;
loss -> to;
loss -> KeyError;
loss -> clamp;
loss -> tensor;
move_dimension_to_the_front -> list;
move_dimension_to_the_front -> permute;
move_dimension_to_the_front -> range;
rnnt_decoder_predictions_tensor -> isinstance;
rnnt_decoder_predictions_tensor -> inference_mode;
rnnt_decoder_predictions_tensor -> decoding;
rnnt_decoder_predictions_tensor -> decode_hypothesis;
rnnt_decoder_predictions_tensor -> append;
rnnt_decoder_predictions_tensor -> get;
rnnt_decoder_predictions_tensor -> range;
rnnt_decoder_predictions_tensor -> Hypothesis;
rnnt_decoder_predictions_tensor -> len;
rnnt_decoder_predictions_tensor -> compute_rnnt_timestamps;
rnnt_decoder_predictions_tensor -> compute_confidence;
decode_predictions_tensor -> isinstance;
decode_predictions_tensor -> inference_mode;
decode_predictions_tensor -> decoding;
decode_predictions_tensor -> decode_hypothesis;
decode_predictions_tensor -> append;
decode_predictions_tensor -> Hypothesis;
decode_predictions_tensor -> compute_confidence;
decode_tokens_to_str -> NotImplementedError;
decode_tokens_to_str -> join;
decode_tokens_to_str -> decode_ids_to_tokens;
decode_tokens_to_str -> ids_to_text;
_compute_bleu -> _bleu_score_compute;
get_partial_ref_labels -> len;
get_partial_ref_labels -> max;
get_partial_ref_labels -> split;
get_partial_ref_labels -> float;
get_partial_ref_labels -> min;
get_partial_ref_labels -> append;
get_online_DER_stats -> round;
get_online_DER_stats -> max;
uem_timeline_from_file -> Timeline;
uem_timeline_from_file -> open;
uem_timeline_from_file -> readlines;
uem_timeline_from_file -> strip;
uem_timeline_from_file -> split;
uem_timeline_from_file -> add;
uem_timeline_from_file -> Segment;
uem_timeline_from_file -> float;
evaluate_der -> score_labels;
evaluate_der -> ValueError;
calculate_session_cpWER_bruteforce -> enumerate;
calculate_session_cpWER_bruteforce -> join;
calculate_session_cpWER_bruteforce -> permutations;
calculate_session_cpWER_bruteforce -> argmin;
calculate_session_cpWER_bruteforce -> append;
calculate_session_cpWER_bruteforce -> word_error_rate;
calculate_session_cpWER -> list;
calculate_session_cpWER -> product;
calculate_session_cpWER -> len;
calculate_session_cpWER -> calculate_session_cpWER_bruteforce;
calculate_session_cpWER -> reshape;
calculate_session_cpWER -> linear_sum_assignment;
calculate_session_cpWER -> join;
calculate_session_cpWER -> word_error_rate;
calculate_session_cpWER -> append;
calculate_session_cpWER -> tensor;
calculate_session_cpWER -> argsort;
linear_sum_assignment -> detach;
linear_sum_assignment -> LinearSumAssignmentSolver;
linear_sum_assignment -> where;
linear_sum_assignment -> len;
linear_sum_assignment -> ValueError;
linear_sum_assignment -> max;
linear_sum_assignment -> clone;
linear_sum_assignment -> _step1;
linear_sum_assignment -> _step2;
linear_sum_assignment -> _step3;
linear_sum_assignment -> _step4;
linear_sum_assignment -> _step5;
linear_sum_assignment -> _step6;
concat_perm_word_error_rate -> zip;
concat_perm_word_error_rate -> len;
concat_perm_word_error_rate -> ValueError;
concat_perm_word_error_rate -> calculate_session_cpWER;
concat_perm_word_error_rate -> append;
word_error_rate_per_utt -> zip;
word_error_rate_per_utt -> len;
word_error_rate_per_utt -> ValueError;
word_error_rate_per_utt -> float;
word_error_rate_per_utt -> format;
word_error_rate_per_utt -> list;
word_error_rate_per_utt -> split;
word_error_rate_per_utt -> append;
word_error_rate_per_utt -> cer;
word_error_rate_per_utt -> compute_measures;
lens_to_mask -> arange;
lens_to_mask -> expand;
lens_to_mask -> unsqueeze;
lens_to_mask -> to;
lens_to_mask -> repeat;
lens_to_mask -> sum;
_config_check -> ValueError;
__post_init__ -> parse_multitask_prompt;
__post_init__ -> structured;
__post_init__ -> isinstance;
__post_init__ -> ConfidenceMethodConfig;
__post_init__ -> zeros;
__post_init__ -> max;
__post_init__ -> iinfo;
__post_init__ -> float;
__post_init__ -> ValueError;
__post_init__ -> join;
__post_init__ -> TokenConstraint;
__post_init__ -> asarray;
__post_init__ -> len;
__post_init__ -> expand_sharded_filepaths;
__post_init__ -> Path;
__post_init__ -> exists;
__post_init__ -> __post_init__;
__post_init__ -> partial;
__post_init__ -> super;
__post_init__ -> all;
__post_init__ -> any;
__post_init__ -> endswith;
__post_init__ -> add;
__post_init__ -> replace;
__post_init__ -> from_pretrained;
__post_init__ -> dir;
__post_init__ -> AutoTokenizer;
__post_init__ -> info;
__post_init__ -> setattr;
__post_init__ -> callable;
__post_init__ -> startswith;
__post_init__ -> hasattr;
__post_init__ -> getattr;
__post_init__ -> __init__;
__post_init__ -> get_image_sequence_length;
__post_init__ -> items;
__post_init__ -> to_dict;
__post_init__ -> values;
__post_init__ -> keys;
__post_init__ -> TypeError;
__post_init__ -> get_current_datetime;
maybe_update_config_version -> deepcopy;
maybe_update_config_version -> set_struct;
maybe_update_config_version -> _convert_config;
maybe_update_config_version -> error;
maybe_update_config_version -> exit;
maybe_update_config_version -> isinstance;
maybe_update_config_version -> create;
_setup_tokenizer -> get;
_setup_tokenizer -> _derive_tokenizer_properties;
_setup_tokenizer -> ValueError;
_setup_tokenizer -> lower;
_setup_tokenizer -> _setup_aggregate_tokenizer;
_setup_tokenizer -> _setup_monolingual_tokenizer;
_setup_tokenizer -> from_pretrained;
_setup_tokenizer -> get_tokenizer;
_setup_tokenizer -> to_container;
_setup_tokenizer -> instantiate;
_setup_tokenizer -> _is_model_being_restored;
_setup_tokenizer -> startswith;
_setup_tokenizer -> g2p_backward_compatible_support;
_setup_tokenizer -> register_artifact;
_setup_tokenizer -> isinstance;
setup_adapters -> setup_adapters;
setup_adapters -> hasattr;
setup_adapters -> isinstance;
setup_adapters -> getattr;
setup_adapters -> super;
setup_adapters -> update_adapter_cfg;
setup_adapters -> items;
setup_adapters -> add_adapter;
setup_adapters -> resolve_adapter_module_name_;
setup_adapters -> info;
setup_adapters -> get;
transformer_weights_init -> isinstance;
transformer_weights_init -> xavier_uniform_;
transformer_weights_init -> normal_;
transformer_weights_init -> constant_;
get_vocab -> readlines;
get_vocab -> strip;
get_vocab -> open;
get_vocab -> range;
get_vocab -> len;
to_config_dict -> hasattr;
to_config_dict -> NotImplementedError;
to_config_dict -> isinstance;
to_config_dict -> to_container;
to_config_dict -> create;
to_config_dict -> set_struct;
to_config_dict -> maybe_update_config_version;
change_prompt -> resolve;
change_prompt -> prompt_cls;
change_prompt -> info;
change_prompt -> open_dict;
change_prompt -> isinstance;
change_prompt -> ValueError;
change_prompt -> create;
change_prompt -> to_container;
change_prompt -> get;
_update_dataset_config -> hasattr;
_update_dataset_config -> isinstance;
_update_dataset_config -> create;
_update_dataset_config -> set_struct;
_update_dataset_config -> ValueError;
encoder -> EncEmb;
training_step -> get_decoder_inputs_outputs;
training_step -> float;
training_step -> as_tensor;
training_step -> forward;
training_step -> get;
training_step -> loss;
training_step -> tensor;
training_step -> numel;
training_step -> sum;
training_step -> lens_to_mask;
training_step -> _mse;
training_step -> _mae;
training_step -> log_dict;
training_step -> reshape_labels;
training_step -> get_label_masks;
training_step -> get_metric_logits_labels;
training_step -> _accuracy;
training_step -> compute;
training_step -> reset;
training_step -> zip;
training_step -> is_access_enabled;
training_step -> is_interctc_enabled;
training_step -> add_auxiliary_losses;
training_step -> add_interctc_losses;
training_step -> update;
training_step -> reset_registry;
training_step -> set_access_enabled;
training_step -> isinstance;
training_step -> hasattr;
training_step -> training_step;
training_step -> no_grad;
training_step -> _get_batch_spect;
training_step -> DALIOutputs;
training_step -> dict;
training_step -> decoder;
training_step -> joint;
training_step -> ctc_decoder;
training_step -> ctc_loss;
training_step -> max;
training_step -> log;
training_step -> enumerate;
training_step -> len;
training_step -> cosine_similarity;
training_step -> mse_loss;
training_step -> _accuracy_train;
training_step -> empty_cache;
training_step -> detach;
training_step -> item;
training_step -> _get_aux_train_evaluations;
training_step -> _reset_train_metrics;
training_step -> decoder_loss_step;
training_step -> items;
training_step -> set_num_updates;
training_step -> compute_audio_loss;
training_step -> rearrange;
training_step -> channel_augmentation;
training_step -> _step;
training_step -> clone;
training_step -> forward_step;
training_step -> get_data_and_condition;
training_step -> draw_training_sigma_and_epsilon;
training_step -> is_pipeline_last_stage;
training_step -> size;
training_step -> compute_loss_with_epsilon_and_sigma;
training_step -> self;
training_step -> get_rank;
training_step -> to;
training_step -> pop;
training_step -> _remove_extra_batch_keys;
training_step -> append;
training_step -> perf_counter;
training_step -> warning;
training_step -> make_checkpoint_io;
training_step -> create_context_parallel_ctx;
training_step -> get_train_context;
training_step -> copy_;
training_step -> count_tail_padding;
training_step -> train_context;
training_step -> view;
training_step -> loss_fn;
training_step -> fused_linear_cross_entropy;
training_step -> zeros_like;
training_step -> view_as;
training_step -> unsqueeze;
training_step -> get_output_embeddings;
training_step -> masked_fill;
training_step -> count_nonzero;
training_step -> bool;
training_step -> arange;
training_step -> full_tensor;
training_step -> range;
training_step -> cat;
training_step -> train_step;
training_step -> contiguous;
training_step -> mean;
training_step -> clamp;
training_step -> all;
training_step -> normal_consistency_loss_fn;
training_step -> laplacian_smooth_loss_fn;
training_step -> values;
training_step -> random;
training_step -> min;
training_step -> permute;
training_step -> abs;
training_step -> square;
training_step -> log2;
training_step -> zero_grad;
training_step -> fwd_bwd_step;
training_step -> allreduce_sequence_parallel_gradients;
training_step -> compute_consumed_samples;
training_step -> allreduce_main_grads;
training_step -> allreduce_gradients;
training_step -> broadcast;
training_step -> get_last_rank;
training_step -> _finish_bucket_grad_sync;
training_step -> shared_step;
training_step -> optimizers;
training_step -> get_input;
training_step -> get_last_layer;
training_step -> iter;
training_step -> empty_like;
training_step -> non_cuda_graph_capturable;
training_step -> ValueError;
training_step -> megatron_timer_start;
training_step -> megatron_timer_stop;
training_step -> _compute_consumed_samples_after_training_step;
training_step -> initialize_ub_func;
training_step -> allreduce_fsdp_sharding_omitted_gradients;
training_step -> allreduce_first_last_embeddings;
training_step -> max_memory_reserved;
training_step -> get_model_module_list;
training_step -> drain_embedding_wgrad_compute;
training_step -> get_pipeline_model_parallel_world_size;
training_step -> parameters;
training_step -> send;
training_step -> data_ptr;
training_step -> recv;
training_step -> getattr;
training_step -> next;
training_step -> chain;
training_step -> super;
training_step -> stack;
training_step -> get_binary_score_labels;
training_step -> choices;
training_step -> equal;
training_step -> int;
training_step -> intent_loss;
training_step -> slot_loss;
training_step -> total_loss;
training_step -> squeeze;
training_step -> loss_fct;
training_step -> compute_scores_and_loss;
training_step -> get_forward_backward_func;
training_step -> fwd_bwd_function;
training_step -> get_seqlen;
training_step -> vstack;
training_step -> get_forward_output_and_loss_func;
training_step -> _make_data_iterator_list;
training_step -> get_num_microbatches;
training_step -> cuda;
training_step -> _parse_forward_outputs;
training_step -> _compute_losses;
training_step -> training_step_fwd_bwd_step_call;
training_step -> get_current_global_batch_size;
training_step -> memory_allocated;
training_step -> zero_grad_buffer;
training_step -> clear;
training_step -> shared_embedding_or_output_weight;
training_step -> allreduce_word_and_position_embeddings;
training_step -> endswith;
training_step -> average_losses_across_data_parallel_group;
training_step -> build_position_ids;
training_step -> reshape;
training_step -> synchronize;
training_step -> _make_step;
training_step -> prepare_inputs;
training_step -> is_frozen;
training_step -> loss_parallel;
training_step -> eval;
training_step -> cross_entropy;
training_step -> flatten;
training_step -> long;
training_step -> make_step;
training_step -> preprocessor;
training_step -> _metrics;
training_step -> _process_batch;
training_step -> should_update_disc;
training_step -> mel_loss_fn;
training_step -> discriminator;
training_step -> manual_backward;
training_step -> step;
training_step -> update_lr;
training_step -> disc_loss_fn;
training_step -> stft_loss_fn;
training_step -> time_domain_loss_fn;
training_step -> si_sdr_loss_fn;
training_step -> gen_loss_fn;
training_step -> feature_loss_fn;
training_step -> get_speaker_embedding;
training_step -> chunk;
training_step -> phoneme_asr_model;
training_step -> duration_loss_fn;
training_step -> pitch_loss_fn;
training_step -> energy_loss_fn;
training_step -> forward_sum_loss_fn;
training_step -> add_image;
training_step -> numpy;
training_step -> process_batch;
training_step -> bin_loss_fn;
training_step -> plot_spectrogram_to_numpy;
training_step -> plot_alignment_to_numpy;
training_step -> cpu;
training_step -> compute_encoding;
training_step -> mask_from_lens;
training_step -> mel_loss;
training_step -> encoder;
training_step -> duration_loss;
training_step -> pitch_loss;
training_step -> trg_melspec_fn;
training_step -> generator;
training_step -> mpd;
training_step -> discriminator_loss;
training_step -> msd;
training_step -> l1_loss;
training_step -> feature_loss;
training_step -> generator_loss;
training_step -> process_batch_dpo;
training_step -> batch_dict;
training_step -> model;
training_step -> criterion;
training_step -> attention_kl_loss;
training_step -> normalize_spectrograms;
training_step -> requires_grad_;
training_step -> consistency_loss;
training_step -> gradient_penalty_loss;
training_step -> log_illustration;
training_step -> lr_schedulers;
training_step -> keys;
training_step -> argmax;
training_step -> sv_loss;
training_step -> isfinite;
training_step -> eq;
training_step -> mrd;
training_step -> mrstft_loss;
training_step -> audio_to_melspec_precessor;
training_step -> audio_to_melspec_processor;
training_step -> slice_segments;
training_step -> clip_grad_value_;
training_step -> autocast;
training_step -> net_g;
training_step -> net_d;
training_step -> disc_loss;
training_step -> feat_matching_loss;
training_step -> gen_loss;
training_step -> kl_loss;
training_step -> info;
training_step -> is_pipeline_first_stage;
training_step -> reduce_overlap_gradients;
training_step -> _load_optimizer_state_dict;
training_step -> train_step_context;
training_step -> _step_proxy;
training_step -> is_tensor;
training_step -> _sync_from_last_pipeline_stage;
training_step -> type;
training_step -> __orig_training_step__;
training_step -> struct_copy_one;
training_step -> struct_copy_two;
training_step -> align_labels;
training_step -> l1;
training_step -> ones;
validation_pass -> get_decoder_inputs_outputs;
validation_pass -> forward;
validation_pass -> get;
validation_pass -> loss;
validation_pass -> val_loss;
validation_pass -> update;
validation_pass -> compute;
validation_pass -> reset;
validation_pass -> sum;
validation_pass -> lens_to_mask;
validation_pass -> long;
validation_pass -> is_interctc_enabled;
validation_pass -> add_interctc_losses;
validation_pass -> log;
validation_pass -> is_access_enabled;
validation_pass -> set_access_enabled;
validation_pass -> isinstance;
validation_pass -> tensor;
validation_pass -> reset_registry;
validation_pass -> ctc_decoder;
validation_pass -> joint;
validation_pass -> ctc_loss;
validation_pass -> decoder;
validation_pass -> len;
validation_pass -> decoder_loss_step;
validation_pass -> items;
validation_step -> validation_pass;
validation_step -> append;
validation_step -> type;
validation_step -> len;
validation_step -> forward;
validation_step -> loss;
validation_step -> _mse;
validation_step -> _mae;
validation_step -> reshape_labels;
validation_step -> get_label_masks;
validation_step -> get_metric_logits_labels;
validation_step -> _accuracy;
validation_step -> update;
validation_step -> _final_state;
validation_step -> validation_step;
validation_step -> evaluation_step;
validation_step -> tensor;
validation_step -> _accuracy_valid;
validation_step -> compute;
validation_step -> log;
validation_step -> _get_aux_validation_evaluations;
validation_step -> isinstance;
validation_step -> inference_pass;
validation_step -> beam_search;
validation_step -> transf_loss;
validation_step -> val_loss;
validation_step -> ids_to_text;
validation_step -> tolist;
validation_step -> cpu;
validation_step -> detach;
validation_step -> generate_samples_from_batch;
validation_step -> rearrange;
validation_step -> astype;
validation_step -> clamp;
validation_step -> get_data_parallel_src_rank;
validation_step -> gather_object;
validation_step -> numpy;
validation_step -> get_rank;
validation_step -> get_data_parallel_group;
validation_step -> decode;
validation_step -> range;
validation_step -> get_data_parallel_world_size;
validation_step -> Video;
validation_step -> warn;
validation_step -> to;
validation_step -> forward_step;
validation_step -> info;
validation_step -> FluxControlNetInferencePipeline;
validation_step -> cuda;
validation_step -> transpose;
validation_step -> pipe;
validation_step -> save;
validation_step -> torch_to_numpy;
validation_step -> numpy_to_pil;
validation_step -> current_device;
validation_step -> self;
validation_step -> cat;
validation_step -> log_dict;
validation_step -> Image;
validation_step -> make_grid;
validation_step -> enumerate;
validation_step -> pop;
validation_step -> _remove_extra_batch_keys;
validation_step -> view;
validation_step -> loss_fn;
validation_step -> _shared_predict;
validation_step -> join;
validation_step -> makedirs;
validation_step -> zip;
validation_step -> imwrite;
validation_step -> cvtColor;
validation_step -> no_grad;
validation_step -> get_forward_backward_func;
validation_step -> fwd_bwd_function;
validation_step -> get_forward_output_and_loss_func;
validation_step -> get_num_microbatches;
validation_step -> get;
validation_step -> stack;
validation_step -> mean;
validation_step -> fwd_bwd_step;
validation_step -> _validation_step;
validation_step -> ema_scope;
validation_step -> get_input;
validation_step -> get_last_layer;
validation_step -> initialize_ub_func;
validation_step -> is_interctc_enabled;
validation_step -> add_interctc_losses;
validation_step -> reset;
validation_step -> is_access_enabled;
validation_step -> set_access_enabled;
validation_step -> getattr;
validation_step -> reset_registry;
validation_step -> ctc_decoder;
validation_step -> joint;
validation_step -> ctc_loss;
validation_step -> decoder;
validation_step -> inference_step;
validation_step -> eval_step_helper;
validation_step -> size;
validation_step -> mean_pooling;
validation_step -> normalize;
validation_step -> cosine_similarity;
validation_step -> item;
validation_step -> argmax;
validation_step -> classification_report;
validation_step -> intent_loss;
validation_step -> slot_loss;
validation_step -> total_loss;
validation_step -> batch_decode;
validation_step -> _generate_predictions;
validation_step -> defaultdict;
validation_step -> dict;
validation_step -> is_same;
validation_step -> ones_like;
validation_step -> compute_scores_and_loss;
validation_step -> get_seqlen;
validation_step -> vstack;
validation_step -> _make_data_iterator_list;
validation_step -> round;
validation_step -> sigmoid;
validation_step -> _parse_forward_outputs;
validation_step -> _compute_losses;
validation_step -> validation_perplexity;
validation_step -> eval;
validation_step -> train;
validation_step -> next;
validation_step -> _reconfigure_and_process_inference_batch;
validation_step -> chain;
validation_step -> megatron_gpt_generate;
validation_step -> squeeze;
validation_step -> zeros;
validation_step -> _test_validation_step;
validation_step -> float;
validation_step -> average_losses_across_data_parallel_group;
validation_step -> build_position_ids;
validation_step -> sum;
validation_step -> reshape;
validation_step -> compute_accuracy;
validation_step -> first_stage_of_pipeline;
validation_step -> embed_input;
validation_step -> hasattr;
validation_step -> get_predictions;
validation_step -> position_embeddings;
validation_step -> eval_step;
validation_step -> _generate_candidates;
validation_step -> tag_classification_report;
validation_step -> ValueError;
validation_step -> str;
validation_step -> tag_multiword_classification_report;
validation_step -> semiotic_classification_report;
validation_step -> set;
validation_step -> items;
validation_step -> offline_inference;
validation_step -> fp32_precision;
validation_step -> resample;
validation_step -> prepare_inputs;
validation_step -> loss_parallel;
validation_step -> long;
validation_step -> cross_entropy;
validation_step -> flatten;
validation_step -> eq;
validation_step -> make_step;
validation_step -> word_error_rate;
validation_step -> preprocessor;
validation_step -> _metrics;
validation_step -> binarize_attention;
validation_step -> min;
validation_step -> plot_alignment_to_numpy;
validation_step -> fliplr;
validation_step -> rot90;
validation_step -> _process_batch;
validation_step -> mel_loss_fn;
validation_step -> stft_loss_fn;
validation_step -> time_domain_loss_fn;
validation_step -> si_sdr_loss_fn;
validation_step -> get_speaker_embedding;
validation_step -> chunk;
validation_step -> phoneme_asr_model;
validation_step -> mse_loss;
validation_step -> duration_loss_fn;
validation_step -> pitch_loss_fn;
validation_step -> energy_loss_fn;
validation_step -> process_batch;
validation_step -> compute_encoding;
validation_step -> mask_from_lens;
validation_step -> mel_loss;
validation_step -> encoder;
validation_step -> duration_loss;
validation_step -> pitch_loss;
validation_step -> audio_to_melspec_precessor;
validation_step -> l1_loss;
validation_step -> _bias_denoise;
validation_step -> Audio;
validation_step -> plot_spectrogram_to_numpy;
validation_step -> log_train_val_example;
validation_step -> log_attention_probs;
validation_step -> process_batch_dpo;
validation_step -> plot_pitch_to_numpy;
validation_step -> average_features;
validation_step -> unsqueeze;
validation_step -> batch_dict;
validation_step -> model;
validation_step -> criterion;
validation_step -> attention_kl_loss;
validation_step -> zeros_like;
validation_step -> keys;
validation_step -> sv_loss;
validation_step -> as_tensor;
validation_step -> isfinite;
validation_step -> warning;
validation_step -> max;
validation_step -> view_as;
validation_step -> infer;
validation_step -> audio_to_melspec_processor;
validation_step -> clone;
validation_step -> predict_step;
validation_step -> gather_from_tensor_model_parallel_region;
validation_step -> permute;
validation_step -> autocast;
validation_step -> count_nonzero;
validation_step -> add_scalar;
validation_step -> t;
validation_step -> convert_tokens_to_range;
validation_step -> decode_wav_from_codec_model;
validation_step -> add_audio;
validation_step -> add_text;
validation_step -> clip;
validation_step -> plot_alignment_to_numpy_for_speechllm;
validation_step -> add_image;
validation_step -> ids_to_tokens;
validation_step -> split;
validation_step -> _step;
validation_step -> val_step_context;
validation_step -> _step_proxy;
validation_step -> get_pipeline_model_parallel_world_size;
validation_step -> get_pipeline_model_parallel_group;
validation_step -> l1;
test_step -> validation_pass;
test_step -> append;
test_step -> type;
test_step -> len;
test_step -> validation_step;
test_step -> replace;
test_step -> items;
test_step -> evaluation_step;
test_step -> inference_pass;
test_step -> isinstance;
test_step -> _shared_predict;
test_step -> inference_step;
test_step -> eval_step_helper;
test_step -> _test_validation_step;
test_step -> eval_step;
test_step -> disable_checks;
test_step -> generate;
test_step -> self;
test_step -> loss;
test_step -> classification_report;
test_step -> argmax;
test_step -> no_grad;
test_step -> get;
test_step -> infer_batch;
test_step -> range;
test_step -> size;
test_step -> numpy;
test_step -> add_audio;
test_step -> join;
test_step -> write;
test_step -> exists;
test_step -> makedirs;
test_step -> cpu;
test_step -> detach;
test_step -> float;
test_step -> save;
test_step -> process_text;
test_step -> word_error_rate;
test_step -> open;
test_step -> dump;
test_step -> get_speaker_embeddings_from_filepaths;
test_step -> dot;
test_step -> norm;
test_step -> any;
test_step -> warning;
test_step -> transcribe;
test_step -> transcribe_with_whisper;
test_step -> predict_step;
test_step -> _step;
test_step -> test_step_context;
test_step -> _step_proxy;
test_step -> log;
test_step -> test_step;
_transcribe_on_begin -> _transcribe_on_begin;
_transcribe_on_begin -> freeze;
_transcribe_on_begin -> isinstance;
_transcribe_on_begin -> debug;
_transcribe_on_begin -> super;
_transcribe_on_begin -> hasattr;
_transcribe_on_begin -> len;
_transcribe_on_begin -> next;
_transcribe_on_begin -> get_value_from_transcription_config;
_transcribe_on_begin -> eval;
_transcribe_on_begin -> get_verbosity;
_transcribe_on_begin -> set_verbosity;
_transcribe_on_begin -> parameters;
_transcribe_on_begin -> min;
_transcribe_on_begin -> cpu_count;
_transcribe_input_manifest_processing -> _may_be_make_dict_and_fix_paths;
_transcribe_input_manifest_processing -> _transcribe_input_manifest_processing;
_transcribe_input_manifest_processing -> super;
_transcribe_input_manifest_processing -> open;
_transcribe_input_manifest_processing -> join;
_transcribe_input_manifest_processing -> write;
_transcribe_input_manifest_processing -> dumps;
_transcribe_input_manifest_processing -> get_value_from_transcription_config;
_transcribe_input_manifest_processing -> isinstance;
_transcribe_input_manifest_processing -> ValueError;
_transcribe_input_manifest_processing -> type;
_may_be_make_dict_and_fix_paths -> isinstance;
_may_be_make_dict_and_fix_paths -> append;
_may_be_make_dict_and_fix_paths -> get_full_path;
_may_be_make_dict_and_fix_paths -> ValueError;
_may_be_make_dict_and_fix_paths -> get;
_may_be_make_dict_and_fix_paths -> type;
_transcribe_forward -> isinstance;
_transcribe_forward -> forward;
_transcribe_forward -> dict;
_transcribe_forward -> get_default_dialog_slots;
_transcribe_forward -> to;
_transcribe_forward -> len;
_transcribe_forward -> copy;
_transcribe_forward -> repeat;
_transcribe_forward -> items;
_transcribe_forward -> warn;
_transcribe_forward -> unsqueeze;
_transcribe_forward -> get;
_transcribe_forward -> encode_dialog;
_transcribe_forward -> ctc_decoder;
_transcribe_forward -> _transcribe_forward;
_transcribe_forward -> super;
_transcribe_forward -> predict;
_transcribe_forward -> self;
get_default_dialog_slots -> get_roles;
get_default_dialog_slots -> get;
get_default_dialog_slots -> get_slots;
get_default_dialog_slots -> _get_default_for_role;
encode_dialog -> get_roles;
encode_dialog -> len;
encode_dialog -> append;
encode_dialog -> get_slots;
encode_dialog -> get_template;
encode_dialog -> encode_turn;
encode_dialog -> extend;
encode_dialog -> _apply_tokenizer;
encode_dialog -> tensor;
encode_dialog -> get;
encode_dialog -> enumerate;
encode_dialog -> _validate_slot_values;
encode_dialog -> keys;
encode_dialog -> range;
_transcribe_output_processing -> pop;
_transcribe_output_processing -> decode_predictions_tensor;
_transcribe_output_processing -> process_aed_timestamp_outputs;
_transcribe_output_processing -> range;
_transcribe_output_processing -> append;
_transcribe_output_processing -> top_k_predicted_labels;
_transcribe_output_processing -> cpu;
_transcribe_output_processing -> len;
_transcribe_output_processing -> numpy;
_transcribe_output_processing -> ctc_decoder_predictions_tensor;
_transcribe_output_processing -> process_timestamp_outputs;
_transcribe_output_processing -> empty;
_transcribe_output_processing -> copy_;
_transcribe_output_processing -> clone;
_transcribe_output_processing -> device;
_transcribe_output_processing -> _transcribe_output_processing;
_transcribe_output_processing -> super;
_transcribe_output_processing -> rnnt_decoder_predictions_tensor;
_transcribe_output_processing -> ids_to_text;
_transcribe_output_processing -> enumerate;
_transcribe_output_processing -> Hypothesis;
_transcribe_output_processing -> detach;
_transcribe_output_processing -> beam_search;
_transcribe_output_processing -> hasattr;
_transcribe_output_processing -> tuple;
_transcribe_output_processing -> float;
_transcribe_output_processing -> item;
process_aed_timestamp_outputs -> isinstance;
process_aed_timestamp_outputs -> strip;
process_aed_timestamp_outputs -> finditer;
process_aed_timestamp_outputs -> join;
process_aed_timestamp_outputs -> extract_words_with_timestamps;
process_aed_timestamp_outputs -> search;
process_aed_timestamp_outputs -> int;
process_aed_timestamp_outputs -> group;
process_aed_timestamp_outputs -> update;
process_aed_timestamp_outputs -> _get_segment_offsets;
process_aed_timestamp_outputs -> segments_offset_to_time;
process_aed_timestamp_outputs -> process_hypothesis;
process_aed_timestamp_outputs -> append;
process_aed_timestamp_outputs -> len;
process_aed_timestamp_outputs -> ValueError;
process_aed_timestamp_outputs -> type;
_transcribe_on_end -> _transcribe_on_end;
_transcribe_on_end -> unfreeze;
_transcribe_on_end -> super;
_transcribe_on_end -> hasattr;
_transcribe_on_end -> train;
_transcribe_on_end -> set_verbosity;
oomptimizer_schema -> NeuralType;
oomptimizer_schema -> AudioSignal;
oomptimizer_schema -> LengthsType;
oomptimizer_schema -> LabelsType;
oomptimizer_schema -> RuntimeError;
oomptimizer_schema -> MaskType;
oomptimizer_schema -> type;
multi_validation_epoch_end -> mean;
multi_validation_epoch_end -> update;
multi_validation_epoch_end -> sum;
multi_validation_epoch_end -> _compute_bleu;
multi_validation_epoch_end -> stack;
multi_validation_epoch_end -> compute;
multi_validation_epoch_end -> reset;
multi_validation_epoch_end -> zip;
multi_validation_epoch_end -> log_dict;
multi_validation_epoch_end -> multi_validation_epoch_end;
multi_validation_epoch_end -> finalize_interctc_metrics;
multi_validation_epoch_end -> super;
multi_validation_epoch_end -> warning;
multi_validation_epoch_end -> all;
multi_validation_epoch_end -> float;
multi_validation_epoch_end -> isinstance;
multi_validation_epoch_end -> multi_evaluation_epoch_end;
multi_validation_epoch_end -> log;
multi_validation_epoch_end -> _reset_valid_metrics;
multi_validation_epoch_end -> enumerate;
multi_validation_epoch_end -> len;
multi_validation_epoch_end -> append;
multi_validation_epoch_end -> list;
multi_validation_epoch_end -> chain;
multi_validation_epoch_end -> all_gather_object;
multi_validation_epoch_end -> range;
multi_validation_epoch_end -> item;
multi_validation_epoch_end -> getattr;
multi_validation_epoch_end -> eval;
multi_validation_epoch_end -> split;
multi_validation_epoch_end -> strip;
multi_validation_epoch_end -> SacreBLEUScore;
multi_validation_epoch_end -> multi_eval_epoch_end_helper;
multi_validation_epoch_end -> items;
multi_validation_epoch_end -> defaultdict;
multi_validation_epoch_end -> is_initialized;
multi_validation_epoch_end -> get_world_size;
multi_validation_epoch_end -> to;
multi_validation_epoch_end -> all_gather;
multi_validation_epoch_end -> get_rank;
multi_validation_epoch_end -> upper;
multi_validation_epoch_end -> join;
multi_validation_epoch_end -> info;
multi_validation_epoch_end -> round;
multi_validation_epoch_end -> get_formatted_string;
multi_validation_epoch_end -> tensor;
multi_validation_epoch_end -> empty_like;
multi_validation_epoch_end -> cat;
multi_validation_epoch_end -> compute_metrics;
multi_validation_epoch_end -> extend;
multi_validation_epoch_end -> array;
multi_validation_epoch_end -> makedirs;
multi_validation_epoch_end -> tensor2list;
multi_validation_epoch_end -> open;
multi_validation_epoch_end -> write;
multi_validation_epoch_end -> list2str;
multi_validation_epoch_end -> _multi_eval_epoch_end;
multi_test_epoch_end -> mean;
multi_test_epoch_end -> update;
multi_test_epoch_end -> sum;
multi_test_epoch_end -> _compute_bleu;
multi_test_epoch_end -> stack;
multi_test_epoch_end -> compute;
multi_test_epoch_end -> reset;
multi_test_epoch_end -> multi_validation_epoch_end;
multi_test_epoch_end -> multi_test_epoch_end;
multi_test_epoch_end -> finalize_interctc_metrics;
multi_test_epoch_end -> super;
multi_test_epoch_end -> float;
multi_test_epoch_end -> multi_evaluation_epoch_end;
multi_test_epoch_end -> log;
multi_test_epoch_end -> on_validation_epoch_end;
multi_test_epoch_end -> multi_eval_epoch_end_helper;
multi_test_epoch_end -> items;
multi_test_epoch_end -> _multi_eval_epoch_end;
multi_test_epoch_end -> warning;
resolve_subclass_pretrained_model_info -> set;
resolve_subclass_pretrained_model_info -> recursive_subclass_walk;
resolve_subclass_pretrained_model_info -> list;
resolve_subclass_pretrained_model_info -> __subclasses__;
resolve_subclass_pretrained_model_info -> sorted;
resolve_subclass_pretrained_model_info -> list_available_models;
resolve_subclass_pretrained_model_info -> len;
resolve_subclass_pretrained_model_info -> add;
add_auxiliary_losses -> is_access_enabled;
add_auxiliary_losses -> get_module_registry;
add_auxiliary_losses -> items;
add_auxiliary_losses -> reset_registry;
add_auxiliary_losses -> len;
add_auxiliary_losses -> log_dict;
add_auxiliary_losses -> sum;
add_auxiliary_losses -> split;
add_auxiliary_losses -> join;
add_auxiliary_losses -> detach;
is_access_enabled -> get;
get_module_registry -> named_modules;
get_module_registry -> hasattr;
get_module_registry -> len;
reset_registry -> hasattr;
reset_registry -> named_modules;
reset_registry -> set_access_enabled;
reset_registry -> clear;
reset_registry -> getattr;
reset_registry -> pop;
reset_registry -> KeyError;
reset_registry -> list;
reset_registry -> keys;
on_after_backward -> on_after_backward;
on_after_backward -> hasattr;
on_after_backward -> tensor;
on_after_backward -> named_parameters;
on_after_backward -> is_initialized;
on_after_backward -> super;
on_after_backward -> next;
on_after_backward -> all_reduce;
on_after_backward -> warning;
on_after_backward -> zero_grad;
on_after_backward -> parameters;
on_after_backward -> any;
on_after_backward -> isnan;
on_after_backward -> isinf;
on_after_backward -> normal;
on_after_backward -> add_;
on_after_backward -> norm;
on_after_backward -> div_;
on_after_backward -> size;
on_after_backward -> _on_batch_end;
disable_cuda_graphs_recursive -> named_modules;
disable_cuda_graphs_recursive -> split;
disable_cuda_graphs_recursive -> isinstance;
disable_cuda_graphs_recursive -> disable_cuda_graphs;
disable_cuda_graphs_recursive -> info;
disable_cuda_graphs_recursive -> getattr;
disable_cuda_graphs_recursive -> join;
disable_cuda_graphs_recursive -> type;
enable_cuda_graphs_recursive -> named_modules;
enable_cuda_graphs_recursive -> split;
enable_cuda_graphs_recursive -> isinstance;
enable_cuda_graphs_recursive -> maybe_enable_cuda_graphs;
enable_cuda_graphs_recursive -> info;
enable_cuda_graphs_recursive -> getattr;
enable_cuda_graphs_recursive -> join;
enable_cuda_graphs_recursive -> type;
on_test_epoch_start -> enable_cuda_graphs_recursive;
on_test_epoch_start -> _reset_activation_checkpointing_args;
on_test_epoch_start -> AppState;
on_test_epoch_start -> reconfigure_num_microbatches_calculator;
on_test_epoch_start -> on_test_epoch_start;
on_test_epoch_start -> get_data_parallel_world_size;
on_test_epoch_start -> super;
on_test_epoch_start -> on_validation_epoch_start;
on_predict_epoch_start -> enable_cuda_graphs_recursive;
on_predict_epoch_start -> on_test_epoch_start;
output_names -> getattr;
output_names -> get_io_names;
output_names -> list;
output_names -> items;
get_io_names -> list;
get_io_names -> keys;
get_io_names -> remove;
forward_for_export -> getattr;
forward_for_export -> dec_fun;
forward_for_export -> isinstance;
forward_for_export -> cast_all;
forward_for_export -> enc_fun;
forward_for_export -> encoder;
forward_for_export -> decoder;
forward_for_export -> transpose;
forward_for_export -> pre_encode;
forward_for_export -> to;
forward_for_export -> concat_and_pad_script;
forward_for_export -> frontend_encoder;
forward_for_export -> forward_infer;
forward_for_export -> forward_internal;
forward_for_export -> streaming_post_process;
forward_for_export -> len;
forward_for_export -> typecheck;
forward_for_export -> size;
forward_for_export -> pos_enc;
forward_for_export -> make_pad_mask;
forward_for_export -> repeat;
forward_for_export -> logical_and;
forward_for_export -> pre_ln;
forward_for_export -> enumerate;
forward_for_export -> set_max_audio_length;
forward_for_export -> new_full;
forward_for_export -> triu;
forward_for_export -> tril;
forward_for_export -> layer;
forward_for_export -> is_access_enabled;
forward_for_export -> out_proj;
forward_for_export -> unsqueeze;
forward_for_export -> append;
forward_for_export -> time_reduce_layer;
forward_for_export -> time_reduce_pos_enc;
forward_for_export -> pop;
forward_for_export -> repeat_interleave;
forward_for_export -> time_recovery_layer;
forward_for_export -> get;
forward_for_export -> register_accessible_tensor;
forward_for_export -> set_max_len;
forward_for_export -> autocast;
forward_for_export -> float;
forward_for_export -> masked_fill;
forward_for_export -> _se_pool_step;
forward_for_export -> fc;
forward_for_export -> sigmoid;
forward_for_export -> embedding;
forward_for_export -> generate;
forward_for_export -> tuple;
forward_for_export -> infer;
forward_for_export -> batch_from_ragged;
forward_for_export -> generator;
forward_for_export -> values;
forward_for_export -> max;
forward_for_export -> regulate_len;
forward_for_export -> squeeze;
forward_for_export -> forward;
forward_for_export -> waveglow;
cast_all -> isinstance;
cast_all -> cast_tensor;
cast_all -> keys;
cast_all -> cast_all;
cast_all -> tuple;
set_export_config -> set_export_config;
set_export_config -> bool;
set_export_config -> info;
set_export_config -> setup_streaming_params;
set_export_config -> super;
set_export_config -> hasattr;
set_export_config -> change_decoding_strategy;
set_export_config -> Exception;
set_export_config -> int;
set_export_config -> pop;
set_export_config -> get_export_config;
set_export_config -> update;
_update_decoder_config -> set_struct;
_update_decoder_config -> len;
_setup_preprocessor -> from_config_dict;
_setup_encoder -> from_config_dict;
_setup_encoder -> from_pretrained;
_setup_encoder -> print;
_setup_encoder -> Embedding;
_setup_encoder -> ValueError;
_setup_encoder -> open_dict;
_setup_encoder -> hasattr;
_setup_decoder -> from_config_dict;
_setup_loss -> MSELoss;
_setup_loss -> CrossEntropyLoss;
_setup_loss -> get;
_setup_loss -> info;
_setup_loss -> from_config_dict;
_setup_loss -> warning;
_setup_metrics -> MeanSquaredError;
_setup_metrics -> MeanAbsoluteError;
_setup_metrics -> TopKClassificationAccuracy;
_setup_metrics -> Accuracy;
_setup_metrics -> _get_num_dataloaders;
_setup_metrics -> debug;
_setup_metrics -> hasattr;
_setup_metrics -> ModuleList;
_setup_metrics -> range;
_setup_metrics -> get;
_setup_metrics -> ValueError;
_setup_metrics -> ModuleDict;
_setup_metrics -> items;
_setup_metrics -> append;
_setup_metrics -> info;
_setup_metrics -> to_container;
_setup_metrics -> pop;
_setup_metrics -> AudioMetricWrapper;
_setup_metrics -> to;
_setup_metrics -> join;
_setup_metrics -> len;
_setup_metrics -> instantiate;
_setup_feature_label_dataloader -> set_struct;
_setup_feature_label_dataloader -> get_feature_label_dataset;
_setup_feature_label_dataloader -> DataLoader;
_setup_feature_label_dataloader -> process_augmentations;
_setup_feature_label_dataloader -> warning;
_setup_feature_label_dataloader -> get;
_setup_feature_label_dataloader -> get_feature_multi_label_dataset;
top_k_predicted_labels -> no_grad;
top_k_predicted_labels -> max;
top_k_predicted_labels -> topk;
change_labels -> ListConfig;
change_labels -> warning;
change_labels -> to_config_dict;
change_labels -> deepcopy;
change_labels -> _update_decoder_config;
change_labels -> from_config_dict;
change_labels -> set_struct;
change_labels -> info;
change_labels -> isinstance;
change_labels -> ValueError;
change_labels -> len;
get_label_masks -> to;
get_label_masks -> arange;
get_label_masks -> size;
reshape_labels -> size;
reshape_labels -> tolist;
reshape_labels -> to;
reshape_labels -> amax;
reshape_labels -> reshape_labels;
reshape_labels -> div;
reshape_labels -> ceil;
reshape_labels -> min;
reshape_labels -> contiguous;
reshape_labels -> long;
reshape_labels -> cpu;
reshape_labels -> len;
reshape_labels -> view;
reshape_labels -> cat;
reshape_labels -> floor;
reshape_labels -> repeat_interleave;
reshape_labels -> tensor;
get_metric_logits_labels -> size;
get_metric_logits_labels -> view;
get_metric_logits_labels -> contiguous;
get_metric_logits_labels -> nonzero;
get_metric_logits_labels -> gather;
get_metric_logits_labels -> repeat;
_init_speaker_model -> parse_scale_configs;
_init_speaker_model -> is_available;
_init_speaker_model -> to;
_init_speaker_model -> endswith;
_init_speaker_model -> restore_from;
_init_speaker_model -> info;
_init_speaker_model -> device;
_init_speaker_model -> format;
_init_speaker_model -> load_from_checkpoint;
_init_speaker_model -> from_pretrained;
_init_speaker_model -> get_available_model_names;
_init_speaker_model -> warning;
_init_vad_model -> endswith;
_init_vad_model -> restore_from;
_init_vad_model -> info;
_init_vad_model -> from_pretrained;
_init_vad_model -> format;
_init_vad_model -> get_available_model_names;
_init_vad_model -> warning;
parse_scale_configs -> isinstance;
parse_scale_configs -> all;
parse_scale_configs -> any;
parse_scale_configs -> len;
parse_scale_configs -> ValueError;
parse_scale_configs -> list;
parse_scale_configs -> set;
parse_scale_configs -> sorted;
parse_scale_configs -> zip;
parse_scale_configs -> enumerate;
_setup_vad_test_data -> setup_test_data;
_setup_vad_test_data -> get;
_setup_spkr_test_data -> setup_test_data;
_setup_spkr_test_data -> get;
_run_vad -> rmtree;
_run_vad -> makedirs;
_run_vad -> eval;
_run_vad -> int;
_run_vad -> open;
_run_vad -> get_vad_stream_status;
_run_vad -> enumerate;
_run_vad -> info;
_run_vad -> generate_vad_segment_table;
_run_vad -> write_rttm2manifest;
_run_vad -> append;
_run_vad -> tqdm;
_run_vad -> generate_overlap_vad_seq;
_run_vad -> isinstance;
_run_vad -> dict;
_run_vad -> exists;
_run_vad -> loads;
_run_vad -> get_uniqname_from_filepath;
_run_vad -> test_dataloader;
_run_vad -> to;
_run_vad -> autocast;
_run_vad -> _vad_model;
_run_vad -> softmax;
_run_vad -> len;
_run_vad -> join;
_run_vad -> deepcopy;
_run_vad -> warning;
_run_vad -> range;
_run_vad -> write;
_run_vad -> format;
_run_segmentation -> join;
_run_segmentation -> info;
_run_segmentation -> segments_manifest_to_subsegments_manifest;
_run_segmentation -> replace;
segments_manifest_to_subsegments_manifest -> getcwd;
segments_manifest_to_subsegments_manifest -> join;
segments_manifest_to_subsegments_manifest -> open;
segments_manifest_to_subsegments_manifest -> readlines;
segments_manifest_to_subsegments_manifest -> strip;
segments_manifest_to_subsegments_manifest -> loads;
segments_manifest_to_subsegments_manifest -> get_subsegments_scriptable;
segments_manifest_to_subsegments_manifest -> dump;
segments_manifest_to_subsegments_manifest -> write;
_perform_speech_activity_detection -> validate_vad_manifest;
_perform_speech_activity_detection -> _setup_vad_test_data;
_perform_speech_activity_detection -> _run_vad;
_perform_speech_activity_detection -> info;
_perform_speech_activity_detection -> debug;
_perform_speech_activity_detection -> prepare_manifest;
_perform_speech_activity_detection -> warning;
_perform_speech_activity_detection -> join;
_perform_speech_activity_detection -> write_rttm2manifest;
_perform_speech_activity_detection -> ValueError;
validate_vad_manifest -> set;
validate_vad_manifest -> open;
validate_vad_manifest -> keys;
validate_vad_manifest -> warning;
validate_vad_manifest -> len;
validate_vad_manifest -> ValueError;
validate_vad_manifest -> strip;
validate_vad_manifest -> loads;
validate_vad_manifest -> add;
_extract_embeddings -> info;
_extract_embeddings -> _setup_spkr_test_data;
_extract_embeddings -> eval;
_extract_embeddings -> empty;
_extract_embeddings -> tqdm;
_extract_embeddings -> test_dataloader;
_extract_embeddings -> open;
_extract_embeddings -> enumerate;
_extract_embeddings -> join;
_extract_embeddings -> get_uniqname_from_filepath;
_extract_embeddings -> dump;
_extract_embeddings -> to;
_extract_embeddings -> autocast;
_extract_embeddings -> forward;
_extract_embeddings -> view;
_extract_embeddings -> cat;
_extract_embeddings -> readlines;
_extract_embeddings -> strip;
_extract_embeddings -> loads;
_extract_embeddings -> append;
_extract_embeddings -> exists;
_extract_embeddings -> makedirs;
_extract_embeddings -> format;
_extract_embeddings -> detach;
_extract_embeddings -> cpu;
get_embs_and_timestamps -> keys;
get_embs_and_timestamps -> deepcopy;
get_embs_and_timestamps -> sorted;
get_embs_and_timestamps -> float;
get_embs_and_timestamps -> cat;
get_embs_and_timestamps -> tensor;
get_embs_and_timestamps -> append;
get_embs_and_timestamps -> len;
get_embs_and_timestamps -> ValueError;
get_embs_and_timestamps -> unsqueeze;
perform_clustering -> LongFormSpeakerClustering;
perform_clustering -> get;
perform_clustering -> tqdm;
perform_clustering -> warning;
perform_clustering -> script;
perform_clustering -> save;
perform_clustering -> items;
perform_clustering -> forward_infer;
perform_clustering -> numpy;
perform_clustering -> generate_cluster_labels;
perform_clustering -> labels_to_pyannote_object;
perform_clustering -> append;
perform_clustering -> write_cluster_labels;
perform_clustering -> empty_cache;
perform_clustering -> collect;
perform_clustering -> len;
perform_clustering -> ValueError;
perform_clustering -> labels_to_rttmfile;
perform_clustering -> extend;
perform_clustering -> exists;
perform_clustering -> rttm_to_labels;
perform_clustering -> int;
perform_clustering -> float;
perform_clustering -> cpu;
path2audio_files_to_manifest -> open;
path2audio_files_to_manifest -> strip;
path2audio_files_to_manifest -> write;
path2audio_files_to_manifest -> dumps;
to_config_file -> hasattr;
to_config_file -> maybe_update_config_version;
to_config_file -> NotImplementedError;
to_config_file -> open;
to_config_file -> save;
_make_nemo_file_from_folder -> _make_nemo_file_from_folder;
_make_nemo_file_from_folder -> super;
_make_nemo_file_from_folder -> is_multistorageclient_url;
_make_nemo_file_from_folder -> _make_nemo_file_from_folder_with_multistorageclient;
_make_nemo_file_from_folder -> dirname;
_make_nemo_file_from_folder -> makedirs;
_make_nemo_file_from_folder -> open;
_make_nemo_file_from_folder -> add;
get_filtered_logprobs -> isinstance;
get_filtered_logprobs -> stack;
get_filtered_logprobs -> is_available;
get_filtered_logprobs -> allclose;
get_filtered_logprobs -> log_softmax;
get_filtered_logprobs -> append;
get_filtered_logprobs -> cuda;
get_filtered_logprobs -> argmax;
get_filtered_logprobs -> sum;
get_filtered_logprobs -> tensor;
get_filtered_logprobs -> exp;
get_filtered_logprobs -> item;
compute_confidence -> get_filtered_logprobs;
compute_confidence -> item;
compute_confidence -> get_confidence_aggregation_bank;
compute_confidence -> get_confidence_measure_bank;
compute_confidence -> cpu;
compute_confidence -> aggr_func;
compute_confidence -> conf_func;
compute_confidence -> ValueError;
compute_confidence -> _aggregate_token_confidence;
compute_confidence -> isinstance;
compute_confidence -> len;
compute_confidence -> append;
compute_confidence -> _aggregate_confidence;
compute_confidence -> zip;
compute_confidence -> reversed;
compute_confidence -> tolist;
compute_confidence -> list;
compute_confidence -> enumerate;
compute_confidence -> maybe_pre_aggregate;
compute_confidence -> NotImplementedError;
get_confidence_aggregation_bank -> hasattr;
get_confidence_aggregation_bank -> reduce;
get_confidence_aggregation_bank -> sum;
get_confidence_aggregation_bank -> len;
get_confidence_measure_bank -> sum;
get_confidence_measure_bank -> exp;
get_confidence_measure_bank -> pow;
get_confidence_measure_bank -> entropy_gibbs_lin_baseline;
get_confidence_measure_bank -> entropy_gibbs_exp_baseline;
get_confidence_measure_bank -> entropy_gibbs_exp;
get_confidence_measure_bank -> entropy_tsallis_exp;
get_confidence_measure_bank -> neg_entropy_gibbs;
get_confidence_measure_bank -> log;
get_confidence_measure_bank -> neg_entropy_alpha_gibbs;
get_confidence_measure_bank -> neg_entropy_alpha;
get_confidence_measure_bank -> log2;
get_confidence_measure_bank -> max;
safe_joblib_load -> exists;
safe_joblib_load -> ValueError;
safe_joblib_load -> SecurityError;
safe_joblib_load -> catch_warnings;
safe_joblib_load -> simplefilter;
safe_joblib_load -> find_class;
safe_joblib_load -> items;
safe_joblib_load -> getattr;
safe_joblib_load -> open;
safe_joblib_load -> isinstance;
safe_joblib_load -> super;
safe_joblib_load -> _validate_joblib_file;
safe_joblib_load -> str;
safe_joblib_load -> load;
safe_joblib_load -> RestrictedUnpickler;
safe_joblib_load -> type;
find_class -> SecurityError;
find_class -> find_class;
find_class -> getattr;
find_class -> super;
to_confidence_config -> ConfidenceConfig;
to_confidence_config -> split;
to_confidence_config -> ConfidenceMethodConfig;
register_nemo_submodule -> setattr;
register_nemo_submodule -> isinstance;
register_nemo_submodule -> NeMoBaseException;
register_nemo_submodule -> hasattr;
register_nemo_submodule -> type;
update_decoding_parameters -> open_dict;
change_attention_model -> range;
change_attention_model -> change_attention_model;
change_attention_model -> getattr;
change_attention_model -> set_max_audio_length;
change_attention_model -> named_modules;
change_attention_model -> list;
change_attention_model -> ValueError;
change_attention_model -> RelPositionalEncoding;
change_attention_model -> to;
change_attention_model -> max;
change_attention_model -> LocalAttRelPositionalEncoding;
change_attention_model -> type;
change_attention_model -> load_state_dict;
change_attention_model -> open_dict;
change_attention_model -> PositionalEncoding;
change_attention_model -> RelPositionMultiHeadAttention;
change_attention_model -> state_dict;
change_attention_model -> RelPositionMultiHeadAttentionLongformer;
change_attention_model -> MultiHeadAttention;
change_attention_model -> hasattr;
change_attention_model -> info;
get_semi_sorted_batch_sampler -> SemiSortBatchSampler;
get_semi_sorted_batch_sampler -> ValueError;
get_semi_sorted_batch_sampler -> isinstance;
get_semi_sorted_batch_sampler -> get;
get_semi_sorted_batch_sampler -> type;
setup_interctc -> get;
setup_interctc -> _process_config_values;
setup_interctc -> set_interctc_param;
is_interctc_enabled -> _verify_setup_was_called;
is_interctc_enabled -> get_interctc_param;
add_interctc_losses -> get_captured_interctc_tensors;
add_interctc_losses -> zip;
add_interctc_losses -> get_interctc_param;
add_interctc_losses -> is_interctc_enabled;
add_interctc_losses -> is_access_enabled;
add_interctc_losses -> detach;
add_interctc_losses -> update;
add_interctc_losses -> compute;
add_interctc_losses -> reset;
add_interctc_losses -> getattr;
finalize_interctc_metrics -> is_interctc_enabled;
finalize_interctc_metrics -> get_interctc_param;
finalize_interctc_metrics -> mean;
finalize_interctc_metrics -> sum;
finalize_interctc_metrics -> stack;
process_timestamp_outputs -> isinstance;
process_timestamp_outputs -> enumerate;
process_timestamp_outputs -> ValueError;
process_timestamp_outputs -> hasattr;
process_timestamp_outputs -> process_timestamp;
process_timestamp_outputs -> type;
_fuse_bn_in_conformer -> info;
_fuse_bn_in_conformer -> replace_bn_with_fused_bn_all;
_fuse_bn_in_conformer -> hasattr;
_fuse_bn_in_conformer -> NotImplementedError;
_fuse_bn_in_conformer -> isinstance;
_fuse_bn_in_conformer -> warning;
_fuse_bn_in_conformer -> open_dict;
_fuse_bn_in_conformer -> type;
replace_bn_with_fused_bn_all -> named_modules;
replace_bn_with_fused_bn_all -> isinstance;
replace_bn_with_fused_bn_all -> replace_bn_with_fused_bn;
replace_bn_with_fused_bn_all -> append;
_check_config -> NeMoBaseException;
from_asr_model -> isinstance;
from_asr_model -> ValueError;
from_asr_model -> type;
get_asr_cls -> NotImplementedError;
from_pretrained_models -> ASRWithTTSModel;
from_pretrained_models -> DictConfig;
from_pretrained_models -> deepcopy;
from_pretrained_models -> dict;
__setattr__ -> __setattr__;
__setattr__ -> super;
__setattr__ -> train;
save_asr_model_to -> save_to;
on_test_epoch_end -> on_test_epoch_end;
on_test_epoch_end -> join;
on_test_epoch_end -> makedirs;
on_test_epoch_end -> concatenate;
on_test_epoch_end -> mimwrite;
on_test_epoch_end -> clear;
on_test_epoch_end -> inference_epoch_end;
on_test_epoch_end -> eval_epoch_end;
on_test_epoch_end -> on_validation_epoch_end;
on_test_epoch_end -> enumerate;
on_test_epoch_end -> gather_and_maybe_write_predictions;
on_test_epoch_end -> average_losses_across_data_parallel_group;
on_test_epoch_end -> info;
on_test_epoch_end -> _test_validation_epoch_end;
on_test_epoch_end -> mean;
on_test_epoch_end -> log;
on_test_epoch_end -> exp;
on_test_epoch_end -> stack;
on_test_epoch_end -> disable_checks;
on_test_epoch_end -> ids_to_text;
on_test_epoch_end -> compute;
on_test_epoch_end -> isinstance;
on_test_epoch_end -> multi_test_epoch_end;
on_test_epoch_end -> len;
on_test_epoch_end -> log_dict;
on_test_epoch_end -> get_test_dataloader_prefix;
on_test_epoch_end -> items;
on_test_epoch_end -> pop;
on_test_epoch_end -> get;
on_test_epoch_end -> update;
on_test_epoch_end -> item;
on_test_epoch_end -> add_scalar;
on_test_epoch_end -> open;
on_test_epoch_end -> dump;
on_test_epoch_end -> append;
on_test_epoch_end -> is_pipeline_last_stage;
on_test_epoch_end -> get_rank;
on_fit_start -> on_fit_start;
on_fit_start -> freeze;
on_fit_start -> device;
on_fit_start -> EMAOptimizer;
on_fit_start -> isinstance;
on_fit_start -> build_guidance;
on_fit_start -> prepare_embeddings;
on_fit_start -> info;
on_fit_start -> to;
on_fit_start -> eval;
on_fit_start -> parameters;
on_fit_start -> current_device;
on_fit_start -> get_text_encoder;
on_fit_start -> get_forward_backward_func;
on_fit_start -> fwd_bwd_function;
on_fit_start -> cat;
on_fit_start -> initialize_concept_embeddings;
on_fit_start -> get_forward_embedding_func;
on_fit_start -> iter;
on_fit_start -> get_num_microbatches;
on_fit_start -> _log_artifacts;
on_fit_start -> items;
on_fit_start -> len;
on_fit_start -> debug;
on_fit_start -> generate_artifacts;
on_fit_start -> build_imagenet_validation_dataloader_params;
on_fit_start -> get;
on_fit_start -> register_debug_hooks;
on_fit_start -> super;
on_fit_start -> _init_te_userbuffers;
on_fit_start -> finalize_model_grads;
on_fit_start -> get_model_config;
on_fit_start -> is_param_in_hook_signature;
on_fit_start -> Stream;
on_fit_start -> CUDAGraph;
on_fit_start -> Exception;
on_fit_start -> zero_;
on_fit_start -> detach;
_get_tts_spectrogram -> no_grad;
_get_tts_spectrogram -> tts_model;
_get_tts_spectrogram -> normalize_batch;
_get_tts_spectrogram -> disable_checks;
_get_tts_spectrogram -> forward;
disable_checks -> set_typecheck_enabled;
_get_batch_spect -> isinstance;
_get_batch_spect -> clean_spectrogram_batch;
_get_batch_spect -> _get_tts_spectrogram;
_get_batch_spect -> detach;
_get_batch_spect -> preprocessor;
_get_batch_spect -> transpose;
_get_batch_spect -> cat;
_get_batch_spect -> pad_sequence;
_get_batch_spect -> squeeze;
_get_batch_spect -> chain;
_get_batch_spect -> tensor_split;
_get_batch_spect -> size;
clean_spectrogram_batch -> expand_as;
clean_spectrogram_batch -> masked_fill;
clean_spectrogram_batch -> arange;
clean_spectrogram_batch -> unsqueeze;
_setup_text_dataset_from_config -> cast;
_setup_text_dataset_from_config -> merge;
_setup_text_dataset_from_config -> TextToTextIterableDataset;
_setup_text_dataset_from_config -> TextToTextDataset;
_setup_text_dataset_from_config -> structured;
_setup_text_dataset_from_config -> get;
set_decoding_type_according_to_loss -> extract_rnnt_loss_cfg;
set_decoding_type_according_to_loss -> get;
set_loss -> ValueError;
set_wer -> ValueError;
joint -> joint_after_projection;
joint -> project_encoder;
joint -> project_prednet;
_init_model_specific -> isinstance;
_init_model_specific -> RuntimeError;
_init_model_specific -> get;
_init_model_specific -> _init_ctc_alignment_specific;
_init_model_specific -> deepcopy;
_init_model_specific -> change_decoding_strategy;
_init_model_specific -> _init_rnnt_alignment_specific;
_init_model_specific -> ValueError;
_init_model_specific -> open_dict;
_init_model_specific -> type;
_init_ctc_alignment_specific -> hasattr;
_init_ctc_alignment_specific -> get;
_init_ctc_alignment_specific -> ViterbiDecoderWithGraph;
_init_rnnt_alignment_specific -> get;
_init_rnnt_alignment_specific -> ViterbiDecoderWithGraph;
_init_rnnt_alignment_specific -> apply_rnnt_prune_ranges;
_init_rnnt_alignment_specific -> to;
_init_rnnt_alignment_specific -> structured;
_init_rnnt_alignment_specific -> GraphModuleConfig;
_init_rnnt_alignment_specific -> get_uniform_rnnt_prune_ranges;
_init_rnnt_alignment_specific -> size;
apply_rnnt_prune_ranges -> size;
apply_rnnt_prune_ranges -> expand;
apply_rnnt_prune_ranges -> gather;
apply_rnnt_prune_ranges -> unsqueeze;
apply_rnnt_prune_ranges -> reshape;
get_uniform_rnnt_prune_ranges -> zeros;
get_uniform_rnnt_prune_ranges -> len;
get_uniform_rnnt_prune_ranges -> nonzero;
get_uniform_rnnt_prune_ranges -> to;
get_uniform_rnnt_prune_ranges -> arange;
get_uniform_rnnt_prune_ranges -> repeat;
get_uniform_rnnt_prune_ranges -> max;
get_uniform_rnnt_prune_ranges -> int;
get_uniform_rnnt_prune_ranges -> interpolate;
get_uniform_rnnt_prune_ranges -> unsqueeze;
get_uniform_rnnt_prune_ranges -> reshape;
_rnnt_joint_pruned -> enc;
_rnnt_joint_pruned -> pred;
_rnnt_joint_pruned -> prepare_pruned_outputs;
_rnnt_joint_pruned -> joint_net;
_rnnt_joint_pruned -> transpose;
_rnnt_joint_pruned -> log_softmax;
_apply_prob_suppress -> exp;
_apply_prob_suppress -> sum;
_apply_prob_suppress -> full;
_apply_prob_suppress -> repeat;
_apply_prob_suppress -> log;
_apply_prob_suppress -> cat;
_apply_prob_suppress -> unsqueeze;
_prepare_ctc_argmax_predictions -> hasattr;
_prepare_ctc_argmax_predictions -> forward;
_prepare_ctc_argmax_predictions -> argmax;
_prepare_ctc_argmax_predictions -> max;
_prepare_ctc_argmax_predictions -> range;
_prepare_ctc_argmax_predictions -> append;
_prepare_ctc_argmax_predictions -> cpu;
_prepare_ctc_argmax_predictions -> exp;
_prepare_ctc_argmax_predictions -> to;
_predict_impl_rnnt_argmax -> zip;
_predict_impl_rnnt_argmax -> rnnt_decoder_predictions_tensor;
_predict_impl_rnnt_argmax -> tolist;
_predict_impl_rnnt_argmax -> decode_ids_to_tokens;
_predict_impl_rnnt_argmax -> len;
_predict_impl_rnnt_argmax -> append;
_predict_impl_rnnt_argmax -> hasattr;
_predict_impl_rnnt_argmax -> _process_tokens_to_words;
_predict_impl_rnnt_argmax -> _process_char_with_space_to_words;
_predict_impl_rnnt_argmax -> split;
_predict_impl_rnnt_argmax -> FrameCtmUnit;
_predict_impl_rnnt_argmax -> decode_tokens_to_str;
decode_ids_to_tokens -> NotImplementedError;
decode_ids_to_tokens -> ids_to_tokens;
_process_tokens_to_words -> len;
_process_tokens_to_words -> text_to_tokens;
_process_tokens_to_words -> append;
_process_tokens_to_words -> sum;
_process_tokens_to_words -> range;
_process_char_with_space_to_words -> tolist;
_process_char_with_space_to_words -> len;
_process_char_with_space_to_words -> sum;
_process_char_with_space_to_words -> zip;
_process_char_with_space_to_words -> append;
_process_char_with_space_to_words -> nonzero;
_process_char_with_space_to_words -> array;
_process_char_with_space_to_words -> range;
text_to_tokens -> text_to_tokens;
text_to_tokens -> list;
text_to_tokens -> text_to_ids;
text_to_tokens -> enumerate;
text_to_tokens -> append;
text_to_tokens -> getattr;
text_to_tokens -> warn;
text_to_tokens -> repr;
text_to_tokens -> findall;
text_to_tokens -> sub;
text_to_tokens -> extend;
text_to_tokens -> encode_as_pieces;
text_to_tokens -> min;
text_to_tokens -> filter;
text_to_tokens -> len;
text_to_tokens -> pop;
text_to_tokens -> index;
text_to_tokens -> split;
text_to_tokens -> range;
text_to_tokens -> strip;
text_to_tokens -> ValueError;
text_to_tokens -> encode;
text_to_tokens -> decode_single_token_bytes;
text_to_tokens -> tokenize;
text_to_tokens -> g2p;
_results_to_ctmUnits -> cpu;
_results_to_ctmUnits -> tolist;
_results_to_ctmUnits -> decode_ids_to_tokens;
_results_to_ctmUnits -> len;
_results_to_ctmUnits -> cat;
_results_to_ctmUnits -> split;
_results_to_ctmUnits -> arange;
_results_to_ctmUnits -> sum;
_results_to_ctmUnits -> zip;
_results_to_ctmUnits -> hasattr;
_results_to_ctmUnits -> _process_tokens_to_words;
_results_to_ctmUnits -> _process_char_with_space_to_words;
_results_to_ctmUnits -> FrameCtmUnit;
_results_to_ctmUnits -> nonzero;
_results_to_ctmUnits -> tensor;
_results_to_ctmUnits -> decode_tokens_to_str;
_predict_impl_ctc -> _apply_prob_suppress;
_predict_impl_ctc -> _prepare_ctc_argmax_predictions;
_predict_impl_ctc -> _results_to_ctmUnits;
_predict_impl_ctc -> align;
_predict_impl_ctc -> NotImplementedError;
_predict_impl_ctc -> zip;
_predict_impl_ctc -> tolist;
_predict_impl_ctc -> cpu;
align -> no_grad;
align -> all;
align -> _forward_impl;
align -> enumerate;
align -> insert;
align -> empty;
align -> _prepare_log_probs_and_targets;
align -> to;
align -> compile;
align -> _decode_impl;
align -> align;
align -> size;
align -> super;
_predict_impl_rnnt -> _predict_impl_rnnt_argmax;
_predict_impl_rnnt -> align;
_predict_impl_rnnt -> NotImplementedError;
_predict_impl_rnnt -> decoder;
_predict_impl_rnnt -> _rnnt_joint_pruned;
_predict_impl_rnnt -> joint;
_predict_impl_rnnt -> log_softmax;
_predict_impl_rnnt -> _results_to_ctmUnits;
_predict_impl_rnnt -> cpu;
_predict_impl_rnnt -> zip;
_predict_impl_rnnt -> max;
_predict_impl_rnnt -> tolist;
_init_k2 -> get;
_init_k2 -> update_k2_modules;
_init_k2 -> hasattr;
_init_k2 -> ValueError;
_init_k2 -> register_artifact;
update_k2_modules -> hasattr;
update_k2_modules -> LatticeLoss;
update_k2_modules -> get;
update_k2_modules -> warning;
update_k2_modules -> ViterbiDecoderWithGraph;
_forward_k2_post_processing -> forward;
extract_labels -> set;
extract_labels -> get;
extract_labels -> convert_to_config_list;
extract_labels -> from_iterable;
extract_labels -> list;
extract_labels -> warning;
extract_labels -> cache_datastore_manifests;
extract_labels -> ASRSpeechLabel;
extract_labels -> update;
extract_labels -> sorted;
extract_labels -> len;
extract_labels -> read_csv;
extract_labels -> rename;
extract_labels -> append;
__setup_dataloader_from_config -> WaveformFeaturizer;
__setup_dataloader_from_config -> get;
__setup_dataloader_from_config -> hasattr;
__setup_dataloader_from_config -> DataLoader;
__setup_dataloader_from_config -> process_augmentations;
__setup_dataloader_from_config -> data_cls;
__setup_dataloader_from_config -> warning;
__setup_dataloader_from_config -> get_concat_tarred_speech_label_dataset;
__setup_dataloader_from_config -> get_tarred_speech_label_dataset;
__setup_dataloader_from_config -> AudioToSpeechMSDDTrainDataset;
__setup_dataloader_from_config -> info;
__setup_dataloader_from_config -> AudioToSpeechE2ESpkDiarDataset;
__setup_dataloader_from_config -> get_lhotse_dataloader_from_config;
__setup_dataloader_from_config -> LhotseAudioToSpeechE2ESpkDiarDataset;
__setup_dataloader_from_config -> ValueError;
__setup_dataloader_from_config -> nullcontext;
__setup_dataloader_from_config -> instantiate;
__setup_dataloader_from_config -> isinstance;
__setup_dataloader_from_config -> error;
__setup_dataloader_from_config -> set_phone_prob;
__setup_dataloader_from_config -> open_dict;
__setup_dataloader_from_config -> EnglishCharsTokenizer;
__setup_dataloader_from_config -> TTSDataset;
evaluation_step -> forward;
evaluation_step -> isinstance;
evaluation_step -> eval_loss;
evaluation_step -> _accuracy;
evaluation_step -> update;
evaluation_step -> _final_state;
evaluation_step -> len;
evaluation_step -> pair_evaluation_step;
evaluation_step -> append;
evaluation_step -> loss;
evaluation_step -> log;
evaluation_step -> rearrange;
evaluation_step -> hasattr;
evaluation_step -> items;
evaluation_step -> tensor;
evaluation_step -> _step;
evaluation_step -> size;
evaluation_step -> next;
evaluation_step -> min;
evaluation_step -> iter;
evaluation_step -> get;
evaluation_step -> forward_eval;
evaluation_step -> clone;
evaluation_step -> self;
pair_evaluation_step -> forward;
pair_evaluation_step -> cosine_similarity;
pair_evaluation_step -> mse_loss;
pair_evaluation_step -> stack;
pair_evaluation_step -> _accuracy;
pair_evaluation_step -> update;
pair_evaluation_step -> _final_state;
pair_evaluation_step -> float;
pair_evaluation_step -> isinstance;
pair_evaluation_step -> append;
pair_evaluation_step -> len;
pair_multi_eval_epoch_end -> mean;
pair_multi_eval_epoch_end -> numpy;
pair_multi_eval_epoch_end -> roc_curve;
pair_multi_eval_epoch_end -> sum;
pair_multi_eval_epoch_end -> compute;
pair_multi_eval_epoch_end -> reset;
pair_multi_eval_epoch_end -> zip;
pair_multi_eval_epoch_end -> stack;
pair_multi_eval_epoch_end -> cpu;
pair_multi_eval_epoch_end -> warning;
pair_multi_eval_epoch_end -> nanargmin;
pair_multi_eval_epoch_end -> cat;
pair_multi_eval_epoch_end -> long;
pair_multi_eval_epoch_end -> absolute;
multi_evaluation_epoch_end -> mean;
multi_evaluation_epoch_end -> sum;
multi_evaluation_epoch_end -> compute;
multi_evaluation_epoch_end -> reset;
multi_evaluation_epoch_end -> zip;
multi_evaluation_epoch_end -> warning;
multi_evaluation_epoch_end -> pair_multi_eval_epoch_end;
multi_evaluation_epoch_end -> all;
multi_evaluation_epoch_end -> stack;
multi_evaluation_epoch_end -> bool;
multi_evaluation_epoch_end -> hasattr;
multi_evaluation_epoch_end -> items;
infer_file -> no_grad;
infer_file -> read;
infer_file -> get;
infer_file -> array;
infer_file -> freeze;
infer_file -> forward;
infer_file -> train;
infer_file -> resample;
infer_file -> tensor;
infer_file -> unfreeze;
infer_segment -> no_grad;
infer_segment -> array;
infer_segment -> freeze;
infer_segment -> forward;
infer_segment -> train;
infer_segment -> tensor;
infer_segment -> unfreeze;
get_label -> read;
get_label -> get;
get_label -> seed;
get_label -> randint;
get_label -> resample;
get_label -> infer_segment;
get_label -> argmax;
get_label -> append;
get_label -> list;
get_label -> info;
get_label -> int;
get_label -> most_common;
get_label -> Counter;
get_embedding -> infer_file;
verify_speakers -> no_grad;
verify_speakers -> squeeze;
verify_speakers -> norm;
verify_speakers -> dot;
verify_speakers -> info;
verify_speakers -> get_embedding;
verify_speakers_batch -> no_grad;
verify_speakers_batch -> batch_inference;
verify_speakers_batch -> to;
verify_speakers_batch -> div;
verify_speakers_batch -> unsqueeze;
verify_speakers_batch -> cleanup;
verify_speakers_batch -> numpy;
verify_speakers_batch -> type;
verify_speakers_batch -> TemporaryDirectory;
verify_speakers_batch -> join;
verify_speakers_batch -> path2audio_files_to_manifest;
verify_speakers_batch -> ValueError;
verify_speakers_batch -> squeeze;
verify_speakers_batch -> Tensor;
verify_speakers_batch -> cpu;
verify_speakers_batch -> norm;
verify_speakers_batch -> matmul;
verify_speakers_batch -> permute;
cleanup -> exists;
cleanup -> rmtree;
cleanup -> HfApi;
cleanup -> check_repo_exists;
cleanup -> delete_repo;
cleanup -> info;
_init_segmentation_info -> parse_scale_configs;
add_speaker_model_config -> open_dict;
add_speaker_model_config -> copy;
__setup_dataloader_from_config_infer -> get;
__setup_dataloader_from_config_infer -> AudioToSpeechMSDDInferDataset;
__setup_dataloader_from_config_infer -> DataLoader;
__setup_dataloader_from_config_infer -> warning;
get_ms_emb_seq -> split;
get_ms_emb_seq -> range;
get_ms_emb_seq -> stack;
get_ms_emb_seq -> tolist;
get_ms_emb_seq -> permute;
get_ms_emb_seq -> append;
get_ms_emb_seq -> view;
get_ms_emb_seq -> len;
get_cluster_avg_embs_model -> no_grad;
get_cluster_avg_embs_model -> split;
get_cluster_avg_embs_model -> range;
get_cluster_avg_embs_model -> permute;
get_cluster_avg_embs_model -> to;
get_cluster_avg_embs_model -> tolist;
get_cluster_avg_embs_model -> sum;
get_cluster_avg_embs_model -> stack;
get_cluster_avg_embs_model -> append;
get_cluster_avg_embs_model -> detach;
get_cluster_avg_embs_model -> view;
get_cluster_avg_embs_model -> len;
get_cluster_avg_embs_model -> any;
get_cluster_avg_embs_model -> mean;
get_cluster_avg_embs_model -> float;
get_cluster_avg_embs_model -> clone;
get_cluster_avg_embs_model -> zeros;
get_ms_mel_feat -> no_grad;
get_ms_mel_feat -> min;
get_ms_mel_feat -> int;
get_ms_mel_feat -> sum;
get_ms_mel_feat -> range;
get_ms_mel_feat -> to;
get_ms_mel_feat -> item;
get_ms_mel_feat -> append;
get_ms_mel_feat -> arange;
get_ms_mel_feat -> manual_seed;
get_ms_mel_feat -> enumerate;
get_ms_mel_feat -> stack;
get_ms_mel_feat -> tensor;
get_ms_mel_feat -> randperm;
get_ms_mel_feat -> detach;
get_ms_mel_feat -> zeros;
forward_infer -> msdd;
forward_infer -> length_to_mask;
forward_infer -> transformer_encoder;
forward_infer -> forward_speaker_sigmoids;
forward_infer -> long_forward_infer;
forward_infer -> forward_infer;
forward_infer -> max;
forward_infer -> split_input_data;
forward_infer -> getMultiScaleCosAffinityMatrix;
forward_infer -> forward_unit_infer;
forward_infer -> zeros;
forward_infer -> getEnhancedSpeakerCount;
forward_infer -> tensor;
forward_infer -> get_reduced_mat;
forward_infer -> match_labels;
forward_infer -> ValueError;
forward_infer -> getCosAffinityMatrix;
forward_infer -> online_spk_num_estimation;
forward_infer -> SpectralClustering;
forward_infer -> to;
forward_infer -> device;
forward_infer -> forward;
compute_accuracies -> compute;
compute_accuracies -> sum;
compute_accuracies -> prod;
compute_accuracies -> bool;
compute_accuracies -> tensor;
prepare_cluster_embs_infer -> run_clustering_diarizer;
run_clustering_diarizer -> join;
run_clustering_diarizer -> makedirs;
run_clustering_diarizer -> dumps;
run_clustering_diarizer -> info;
run_clustering_diarizer -> diarize;
run_clustering_diarizer -> get_embs_and_timestamps;
run_clustering_diarizer -> get_scale_map;
run_clustering_diarizer -> load_emb_scale_seq_dict;
run_clustering_diarizer -> load_clustering_labels;
run_clustering_diarizer -> get_cluster_avg_embs;
run_clustering_diarizer -> isinstance;
run_clustering_diarizer -> dict;
get_base_clus_label_dict -> int;
get_base_clus_label_dict -> append;
get_base_clus_label_dict -> keys;
get_base_clus_label_dict -> split;
get_base_clus_label_dict -> round;
get_base_clus_label_dict -> float;
get_cluster_avg_embs -> len;
get_cluster_avg_embs -> get_base_clus_label_dict;
get_cluster_avg_embs -> assign_labels_to_longer_segs;
get_cluster_avg_embs -> keys;
get_cluster_avg_embs -> items;
get_cluster_avg_embs -> set;
get_cluster_avg_embs -> Tensor;
get_cluster_avg_embs -> zeros;
get_cluster_avg_embs -> type;
get_cluster_avg_embs -> tensor;
get_cluster_avg_embs -> mean;
get_cluster_avg_embs -> array;
get_scale_map -> items;
get_scale_map -> get_scale_mapping_argmat;
load_emb_scale_seq_dict -> list;
load_emb_scale_seq_dict -> range;
load_emb_scale_seq_dict -> len;
load_emb_scale_seq_dict -> join;
load_emb_scale_seq_dict -> info;
load_emb_scale_seq_dict -> items;
load_emb_scale_seq_dict -> open;
load_emb_scale_seq_dict -> load;
load_clustering_labels -> check_clustering_labels;
load_clustering_labels -> info;
load_clustering_labels -> open;
load_clustering_labels -> readlines;
get_scale_mapping_argmat -> split_input_data;
get_scale_mapping_argmat -> get_argmin_mat;
get_scale_mapping_argmat -> range;
get_scale_mapping_argmat -> len;
check_clustering_labels -> join;
check_clustering_labels -> exists;
check_clustering_labels -> info;
_init_msdd_model -> endswith;
_init_msdd_model -> info;
_init_msdd_model -> restore_from;
_init_msdd_model -> extract_standalone_speaker_model;
_init_msdd_model -> load_from_checkpoint;
_init_msdd_model -> from_pretrained;
_init_msdd_model -> get_available_model_names;
_init_msdd_model -> warning;
_init_msdd_model -> format;
extract_standalone_speaker_model -> state_dict;
extract_standalone_speaker_model -> keys;
extract_standalone_speaker_model -> from_config_dict;
extract_standalone_speaker_model -> load_state_dict;
extract_standalone_speaker_model -> replace;
extract_standalone_speaker_model -> append;
get_pred_mat -> tuple;
get_pred_mat -> len;
get_pred_mat -> dict;
get_pred_mat -> max;
get_pred_mat -> zeros;
get_pred_mat -> set;
get_pred_mat -> zip;
get_pred_mat -> sorted;
get_pred_mat -> range;
get_pred_mat -> squeeze;
get_pred_mat -> float;
get_pred_mat -> cpu;
get_integrated_preds_list -> get_id_tup_dict;
get_integrated_preds_list -> items;
get_integrated_preds_list -> get_pred_mat;
get_integrated_preds_list -> unsqueeze;
get_id_tup_dict -> enumerate;
get_id_tup_dict -> get_uniqname_from_filepath;
get_id_tup_dict -> append;
run_pairwise_diarization -> no_grad;
run_pairwise_diarization -> setup_test_data;
run_pairwise_diarization -> eval;
run_pairwise_diarization -> get_uniq_id_list_from_manifest;
run_pairwise_diarization -> enumerate;
run_pairwise_diarization -> get_integrated_preds_list;
run_pairwise_diarization -> tqdm;
run_pairwise_diarization -> append;
run_pairwise_diarization -> diar_infer;
run_pairwise_diarization -> extend;
run_pairwise_diarization -> compute_accuracies;
run_pairwise_diarization -> info;
run_pairwise_diarization -> test_dataloader;
run_pairwise_diarization -> _accuracy_test;
run_pairwise_diarization -> list;
run_pairwise_diarization -> split;
run_overlap_aware_eval -> info;
run_overlap_aware_eval -> audio_rttm_map;
run_overlap_aware_eval -> enumerate;
run_overlap_aware_eval -> make_rttm_with_overlap;
run_overlap_aware_eval -> score_labels;
run_overlap_aware_eval -> append;
get_range_average -> zeros_like;
get_range_average -> tensor;
get_range_average -> range;
get_range_average -> splitext;
get_range_average -> len;
get_range_average -> basename;
get_range_average -> min;
get_range_average -> any;
get_range_average -> to;
get_range_average -> mean;
get_range_average -> cat;
get_range_average -> zeros;
get_range_clus_avg_emb -> int;
get_range_clus_avg_emb -> max;
get_range_clus_avg_emb -> range;
get_range_clus_avg_emb -> to;
get_range_clus_avg_emb -> device;
get_range_clus_avg_emb -> ceil;
get_range_clus_avg_emb -> get_range_average;
get_range_clus_avg_emb -> append;
get_range_clus_avg_emb -> stack;
get_range_clus_avg_emb -> tensor;
diar_infer -> max;
diar_infer -> zeros;
diar_infer -> int;
diar_infer -> get_range_clus_avg_emb;
diar_infer -> reshape;
diar_infer -> autocast;
diar_infer -> forward_infer;
diar_infer -> len;
diar_infer -> ceil;
diar_infer -> tensor;
get_uniq_id_list_from_manifest -> open;
get_uniq_id_list_from_manifest -> enumerate;
get_uniq_id_list_from_manifest -> readlines;
get_uniq_id_list_from_manifest -> strip;
get_uniq_id_list_from_manifest -> loads;
get_uniq_id_list_from_manifest -> get_uniqname_from_filepath;
get_uniq_id_list_from_manifest -> append;
make_rttm_with_overlap -> audio_rttm_map;
make_rttm_with_overlap -> open;
make_rttm_with_overlap -> enumerate;
make_rttm_with_overlap -> readlines;
make_rttm_with_overlap -> get_uniq_id_from_manifest_line;
make_rttm_with_overlap -> append;
make_rttm_with_overlap -> generate_speaker_timestamps;
make_rttm_with_overlap -> labels_to_pyannote_object;
make_rttm_with_overlap -> get;
make_rttm_with_overlap -> len;
make_rttm_with_overlap -> sorted;
make_rttm_with_overlap -> labels_to_rttmfile;
make_rttm_with_overlap -> exists;
make_rttm_with_overlap -> rttm_to_labels;
make_rttm_with_overlap -> float;
make_rttm_with_overlap -> split;
init_config -> NeuralDiarizerInferenceConfig;
init_config -> DiarizerConfig;
init_config -> VADConfig;
init_config -> MSDDConfig;
labels_to_pyannote_object -> Annotation;
labels_to_pyannote_object -> split;
labels_to_pyannote_object -> float;
labels_to_pyannote_object -> Segment;
labels_to_pyannote_object -> strip;
_initialize_configs -> transfer_diar_params_to_model_params;
rttm_to_labels -> open;
rttm_to_labels -> readlines;
rttm_to_labels -> convert_rttm_line;
rttm_to_labels -> append;
rttm_to_labels -> format;
timeit -> time;
timeit -> method;
timeit -> get;
timeit -> int;
timeit -> info;
timeit -> upper;
timed -> time;
timed -> method;
timed -> get;
timed -> int;
timed -> info;
timed -> upper;
_init_online_clustering_module -> OnlineSpeakerClustering;
_init_online_segmentor_module -> OnlineSegmentor;
_init_memory_buffer -> tensor;
_init_memory_buffer -> keys;
_init_temporal_major_voting_module -> get;
_init_segment_variables -> keys;
_init_segment_variables -> tensor;
_clear_memory -> int;
_clear_memory -> len;
_clear_memory -> set;
_clear_memory -> tolist;
_temporal_label_major_vote -> append;
_temporal_label_major_vote -> item;
_temporal_label_major_vote -> len;
_temporal_label_major_vote -> pop;
_temporal_label_major_vote -> mode;
_temporal_label_major_vote -> tensor;
save_history_data -> tolist;
save_history_data -> deepcopy;
save_history_data -> ValueError;
save_history_data -> _temporal_label_major_vote;
save_history_data -> max;
save_history_data -> tensor;
save_history_data -> _clear_memory;
save_history_data -> len;
save_history_data -> where;
_run_embedding_extractor -> no_grad;
_run_embedding_extractor -> to;
_run_embedding_extractor -> forward;
_run_embedding_extractor -> float;
_run_embedding_extractor -> tensor;
_run_embedding_extractor -> stack;
_run_embedding_extractor -> range;
_extract_online_embeddings -> len;
_extract_online_embeddings -> _run_embedding_extractor;
_extract_online_embeddings -> ValueError;
_extract_online_embeddings -> vstack;
_perform_online_clustering -> split_input_data;
_perform_online_clustering -> get_scale_interpolated_embs;
_perform_online_clustering -> to;
_perform_online_clustering -> forward_infer;
_perform_online_clustering -> items;
_perform_online_clustering -> device;
_perform_online_clustering -> save_history_data;
_perform_online_clustering -> tensor;
split_input_data -> tolist;
split_input_data -> split;
split_input_data -> len;
split_input_data -> ValueError;
split_input_data -> list;
split_input_data -> sum;
get_scale_interpolated_embs -> device;
get_scale_interpolated_embs -> to;
get_scale_interpolated_embs -> get_argmin_mat;
get_scale_interpolated_embs -> list;
get_scale_interpolated_embs -> stack;
get_scale_interpolated_embs -> t;
get_scale_interpolated_embs -> range;
get_scale_interpolated_embs -> repeat_interleave;
get_scale_interpolated_embs -> append;
get_scale_interpolated_embs -> len;
get_scale_interpolated_embs -> unsqueeze;
get_scale_interpolated_embs -> squeeze;
get_scale_interpolated_embs -> getRepeatedList;
get_scale_interpolated_embs -> tensor;
get_scale_interpolated_embs -> matmul;
get_scale_interpolated_embs -> permute;
_get_interim_output -> generate_cluster_labels;
_get_interim_output -> len;
generate_cluster_labels -> enumerate;
generate_cluster_labels -> get_contiguous_stamps;
generate_cluster_labels -> merge_stamps;
generate_cluster_labels -> append;
generate_cluster_labels -> str;
diarize_step -> _transfer_timestamps_to_segmentor;
diarize_step -> items;
diarize_step -> get_embs_and_timestamps;
diarize_step -> _perform_online_clustering;
diarize_step -> generate_cluster_labels;
diarize_step -> _get_interim_output;
diarize_step -> run_online_segmentation;
diarize_step -> _extract_online_embeddings;
diarize_step -> len;
run_online_segmentation -> get_online_subsegments_from_buffer;
run_online_segmentation -> extend;
run_online_segmentation -> ValueError;
run_online_segmentation -> max;
run_online_segmentation -> get_new_cursor_for_update;
run_online_segmentation -> get_speech_labels_for_update;
run_online_segmentation -> len;
extract_rnnt_loss_cfg -> get;
extract_rnnt_loss_cfg -> info;
extract_rnnt_loss_cfg -> DictConfig;
extract_rnnt_loss_cfg -> resolve_rnnt_default_loss_name;
setup_optim_normalization -> hasattr;
setup_optim_normalization -> get;
decoder_joint -> RNNTDecoderJoint;
get_seq_mask -> to;
get_seq_mask -> arange;
get_seq_mask -> size;
get_seq_length -> nonzero;
get_seq_length -> scatter;
get_seq_length -> size;
get_seq_length -> long;
get_seq_length -> ones;
decode_semantics_from_tokens -> cpu;
decode_semantics_from_tokens -> get_seq_length;
decode_semantics_from_tokens -> range;
decode_semantics_from_tokens -> tolist;
decode_semantics_from_tokens -> item;
decode_semantics_from_tokens -> join;
decode_semantics_from_tokens -> append;
decode_semantics_from_tokens -> long;
decode_semantics_from_tokens -> decode_ids;
decode_semantics_from_tokens -> numpy;
decode_semantics_from_tokens -> detach;
concat_and_pad -> sum;
concat_and_pad -> item;
concat_and_pad -> zeros;
concat_and_pad -> zip;
concat_and_pad -> len;
concat_and_pad -> ValueError;
concat_and_pad -> stack;
concat_and_pad -> range;
concat_and_pad -> max;
_init_loss_weights -> get;
_init_loss_weights -> ValueError;
_init_eval_metrics -> MultiBinaryAccuracy;
_reset_train_metrics -> reset;
_reset_valid_metrics -> reset;
frontend_encoder -> encoder;
frontend_encoder -> transpose;
frontend_encoder -> spec_augmentation;
frontend_encoder -> encoder_proj;
length_to_mask -> arange;
length_to_mask -> expand;
length_to_mask -> unsqueeze;
forward_speaker_sigmoids -> dropout;
forward_speaker_sigmoids -> first_hidden_to_hidden;
forward_speaker_sigmoids -> single_hidden_to_spks;
forward_speaker_sigmoids -> sigmoid;
forward_speaker_sigmoids -> relu;
_diarize_forward -> no_grad;
_diarize_forward -> forward;
_diarize_forward -> to;
_diarize_forward -> empty_cache;
_diarize_forward -> self;
_diarize_output_processing -> enumerate;
_diarize_output_processing -> append;
_diarize_output_processing -> extend;
_diarize_output_processing -> squeeze;
_diarize_output_processing -> range;
_diarize_output_processing -> generate_diarization_output_lines;
_diarize_output_processing -> split;
_diarize_output_processing -> ts_vad_post_processing;
_diarize_output_processing -> tolist;
_diarize_output_processing -> len;
_diarize_output_processing -> int;
_diarize_output_processing -> round;
_diarize_output_processing -> hasattr;
_diarize_output_processing -> tuple;
_diarize_output_processing -> float;
_diarize_output_processing -> item;
generate_diarization_output_lines -> range;
generate_diarization_output_lines -> merge_float_intervals;
generate_diarization_output_lines -> extend;
generate_diarization_output_lines -> int;
ts_vad_post_processing -> repeat_interleave;
ts_vad_post_processing -> binarization;
ts_vad_post_processing -> filtering;
_setup_diarize_dataloader -> __setup_dataloader_from_config;
_setup_diarize_dataloader -> join;
_setup_diarize_dataloader -> min;
_setup_diarize_dataloader -> get;
_setup_diarize_dataloader -> len;
_setup_diarize_dataloader -> DictConfig;
_setup_diarize_dataloader -> cpu_count;
_setup_diarize_dataloader -> DummyDataset;
_setup_diarize_dataloader -> DataLoader;
_setup_diarize_dataloader -> view;
_setup_diarize_dataloader -> tensor;
_setup_diarize_dataloader -> float;
oom_safe_feature_extraction -> cpu;
oom_safe_feature_extraction -> min;
oom_safe_feature_extraction -> ceil;
oom_safe_feature_extraction -> range;
oom_safe_feature_extraction -> cat;
oom_safe_feature_extraction -> to;
oom_safe_feature_extraction -> int;
oom_safe_feature_extraction -> preprocessor;
oom_safe_feature_extraction -> append;
oom_safe_feature_extraction -> detach;
process_signal -> to;
process_signal -> oom_safe_feature_extraction;
process_signal -> preprocessor;
process_signal -> empty_cache;
process_signal -> max;
forward_streaming -> init_streaming_state;
forward_streaming -> zeros;
forward_streaming -> ceil;
forward_streaming -> streaming_feat_loader;
forward_streaming -> tqdm;
forward_streaming -> is_available;
forward_streaming -> is_initialized;
forward_streaming -> tensor;
forward_streaming -> all_reduce;
forward_streaming -> item;
forward_streaming -> full;
forward_streaming -> cat;
forward_streaming -> random;
forward_streaming -> forward_streaming_step;
forward_streaming -> get_rank;
forward_streaming -> info;
streaming_input_examples -> to;
streaming_input_examples -> rand;
streaming_input_examples -> tensor;
streaming_input_examples -> randn;
streaming_export -> streaming_input_examples;
streaming_export -> export;
init_streaming_state -> StreamingSortformerState;
init_streaming_state -> zeros;
streaming_feat_loader -> ceil;
streaming_feat_loader -> info;
streaming_feat_loader -> min;
streaming_feat_loader -> clamp;
streaming_feat_loader -> transpose;
forward_streaming_step -> pre_encode;
forward_streaming_step -> frontend_encoder;
forward_streaming_step -> forward_infer;
forward_streaming_step -> apply_mask_to_preds;
forward_streaming_step -> cat;
forward_streaming_step -> concat_and_pad;
forward_streaming_step -> concat_embs;
forward_streaming_step -> streaming_update_async;
forward_streaming_step -> streaming_update;
forward_streaming_step -> round;
forward_streaming_step -> ceil;
apply_mask_to_preds -> view;
apply_mask_to_preds -> expand;
apply_mask_to_preds -> where;
apply_mask_to_preds -> tensor;
apply_mask_to_preds -> arange;
concat_embs -> to;
concat_embs -> cat;
concat_embs -> repeat;
concat_embs -> tensor;
streaming_update_async -> zeros;
streaming_update_async -> clamp;
streaming_update_async -> full;
streaming_update_async -> range;
streaming_update_async -> item;
streaming_update_async -> where;
streaming_update_async -> len;
streaming_update_async -> _compress_spkcache;
streaming_update_async -> info;
streaming_update_async -> min;
streaming_update_async -> clone;
streaming_update_async -> max;
streaming_update -> cat;
streaming_update -> stack;
streaming_update -> min;
streaming_update -> info;
streaming_update -> _compress_spkcache;
streaming_update -> argsort;
streaming_update -> max;
streaming_update -> range;
_get_aux_train_evaluations -> get_ats_targets;
_get_aux_train_evaluations -> get_pil_targets;
_get_aux_train_evaluations -> loss;
_get_aux_train_evaluations -> _accuracy_train;
_get_aux_train_evaluations -> compute;
_get_aux_train_evaluations -> _accuracy_train_ats;
_get_aux_train_evaluations -> clone;
get_ats_targets -> find_first_nonzero;
get_ats_targets -> float;
get_ats_targets -> repeat;
get_ats_targets -> find_best_permutation;
get_ats_targets -> reconstruct_labels;
get_ats_targets -> sort;
get_ats_targets -> abs;
get_ats_targets -> sum;
get_ats_targets -> all;
get_ats_targets -> unsqueeze;
get_pil_targets -> repeat;
get_pil_targets -> sum;
get_pil_targets -> find_best_permutation;
get_pil_targets -> reconstruct_labels;
get_pil_targets -> unsqueeze;
_get_aux_validation_evaluations -> get_ats_targets;
_get_aux_validation_evaluations -> get_pil_targets;
_get_aux_validation_evaluations -> loss;
_get_aux_validation_evaluations -> _accuracy_valid;
_get_aux_validation_evaluations -> compute;
_get_aux_validation_evaluations -> _accuracy_valid_ats;
_get_aux_validation_evaluations -> reset;
_get_aux_validation_evaluations -> clone;
_get_aux_test_batch_evaluations -> get_ats_targets;
_get_aux_test_batch_evaluations -> get_pil_targets;
_get_aux_test_batch_evaluations -> _accuracy_test;
_get_aux_test_batch_evaluations -> compute;
_get_aux_test_batch_evaluations -> append;
_get_aux_test_batch_evaluations -> info;
_get_aux_test_batch_evaluations -> _accuracy_test_ats;
_get_aux_test_batch_evaluations -> reset;
_get_aux_test_batch_evaluations -> clone;
set_access_cfg -> TypeError;
set_access_cfg -> isinstance;
decoder_loss_step -> new_zeros;
decoder_loss_step -> get_module_registry;
decoder_loss_step -> items;
decoder_loss_step -> hasattr;
decoder_loss_step -> decoder_ssl;
decoder_loss_step -> loss;
decoder_loss_step -> transpose;
decoder_loss_step -> current_loss;
transfer_batch_to_device -> move_data_to_device;
move_data_to_device -> isinstance;
move_data_to_device -> to;
move_data_to_device -> __class__;
move_data_to_device -> is_dataclass;
move_data_to_device -> move_data_to_device;
move_data_to_device -> items;
move_data_to_device -> type;
move_data_to_device -> getattr;
move_data_to_device -> fields;
inference_pass -> loss;
inference_pass -> isinstance;
inference_pass -> forward;
get_nemo_transformer -> ValueError;
get_nemo_transformer -> get;
get_nemo_transformer -> TransformerDecoderNM;
get_nemo_transformer -> TransformerEncoderNM;
get_nemo_transformer -> TransformerBottleneckEncoderNM;
_update_default_values -> open_dict;
_update_default_values -> items;
adapter -> Pooling;
adapter -> LlamaBidirectionalHFAdapter;
compute_audio_loss -> forward;
compute_audio_loss -> transf_loss;
matchboxnet_3x1x64 -> JasperEncoderConfig;
matchboxnet_3x1x64_vad -> JasperEncoderConfig;
_finalize_cfg -> len;
_finalize_cfg -> NotImplementedError;
qn_15x5 -> JasperEncoderConfig;
jasper_10x5_dr -> JasperEncoderConfig;
register_buffer -> setattr;
register_buffer -> type;
register_buffer -> device;
register_buffer -> to;
get_features -> featurizer;
get_features -> to;
get_features -> ceil;
get_features -> enumerate;
get_features -> max;
get_features -> info;
get_features -> get_stats;
get_features -> truncate_and_pad;
get_features -> debug;
get_features -> range;
get_features -> split;
get_features -> append;
get_features -> min;
get_features -> text_to_tokens;
get_features -> extend;
get_features -> len;
get_features -> strip;
get_features -> join;
get_features -> ids_to_tokens;
get_features -> list;
get_features -> int;
get_features -> map;
get_features -> tokens_to_ids;
get_features -> warning;
get_features -> asarray;
get_features -> list2str;
input_example -> randn;
input_example -> randint;
input_example -> next;
input_example -> get_initial_cache_state;
input_example -> tuple;
input_example -> parameters;
input_example -> isinstance;
input_example -> transpose;
input_example -> full;
input_example -> to;
input_example -> float;
input_example -> round;
input_example -> initialize_state;
input_example -> input_example;
input_example -> rand;
input_example -> _embedding;
input_example -> item;
input_example -> zip;
input_example -> text_to_ids;
input_example -> unsqueeze;
input_example -> get_ltor_masks_and_position_ids;
input_example -> LongTensor;
input_example -> tensor;
input_example -> zeros;
input_example -> range;
input_example -> ones;
input_example -> max;
input_example -> len;
input_example -> _tokenizer;
input_example -> sample_tts_input;
input_example -> pop;
input_example -> update;
input_example -> half;
input_example -> cuda;
numba_cuda_is_supported -> numba_cpu_is_supported;
numba_cuda_is_supported -> hasattr;
numba_cuda_is_supported -> is_available;
numba_cuda_is_supported -> is_numba_compat_strict;
numba_cuda_is_supported -> is_supported_version;
input_types_for_export -> OrderedDict;
input_types_for_export -> NeuralType;
input_types_for_export -> SpectrogramType;
input_types_for_export -> tuple;
input_types_for_export -> LengthsType;
input_types_for_export -> ChannelType;
input_types_for_export -> BoolType;
input_types_for_export -> VideoSignal;
output_types_for_export -> OrderedDict;
output_types_for_export -> NeuralType;
output_types_for_export -> AcousticEncodedRepresentation;
output_types_for_export -> tuple;
output_types_for_export -> LengthsType;
output_types_for_export -> ChannelType;
disabled_deployment_input_names -> set;
disabled_deployment_input_names -> add;
disabled_deployment_output_names -> set;
_calc_context_sizes -> list;
_calc_context_sizes -> isinstance;
_calc_context_sizes -> enumerate;
_calc_context_sizes -> len;
_calc_context_sizes -> ValueError;
_calc_context_sizes -> sum;
set_max_audio_length -> extend_pe;
set_max_audio_length -> next;
set_max_audio_length -> parameters;
set_max_audio_length -> arange;
set_max_audio_length -> hasattr;
set_max_audio_length -> register_buffer;
compute_stochastic_depth_drop_probs -> ValueError;
compute_stochastic_depth_drop_probs -> range;
forward_internal -> size;
forward_internal -> pos_enc;
forward_internal -> _create_masks;
forward_internal -> enumerate;
forward_internal -> transpose;
forward_internal -> to;
forward_internal -> new_full;
forward_internal -> isinstance;
forward_internal -> zip;
forward_internal -> layer;
forward_internal -> is_access_enabled;
forward_internal -> out_proj;
forward_internal -> reduction_subsampling;
forward_internal -> stack;
forward_internal -> len;
forward_internal -> choices;
forward_internal -> pre_encode;
forward_internal -> ValueError;
forward_internal -> neg;
forward_internal -> append;
forward_internal -> getattr;
forward_internal -> clamp;
forward_internal -> rand;
forward_internal -> get;
forward_internal -> register_accessible_tensor;
forward_internal -> inference_mode;
forward_internal -> encoder;
forward_internal -> sampler;
forward_internal -> decoder;
forward_internal -> match_batch_length;
forward_internal -> amax;
forward_internal -> zeros_like;
forward_internal -> randn_like;
forward_internal -> abs;
forward_internal -> ssl_pretrain_masking;
streaming_post_process -> len;
streaming_post_process -> clamp;
update_max_seq_length -> is_initialized;
update_max_seq_length -> tensor;
update_max_seq_length -> all_reduce;
update_max_seq_length -> item;
update_max_seq_length -> set_max_audio_length;
update_max_seq_length -> int;
_create_masks -> ones;
_create_masks -> expand;
_create_masks -> unsqueeze;
_create_masks -> logical_and;
_create_masks -> repeat;
_create_masks -> size;
_create_masks -> transpose;
_create_masks -> to;
_create_masks -> triu;
_create_masks -> tril;
_create_masks -> arange;
_create_masks -> div;
_create_masks -> le;
_create_masks -> ge;
register_accessible_tensor -> get;
register_accessible_tensor -> append;
register_accessible_tensor -> cpu;
register_accessible_tensor -> detach;
register_accessible_tensor -> hasattr;
extend_pe -> unsqueeze;
extend_pe -> create_pe;
extend_pe -> hasattr;
extend_pe -> size;
extend_pe -> arange;
change_subsampling_conv_chunking_factor -> change_subsampling_conv_chunking_factor;
change_subsampling_conv_chunking_factor -> hasattr;
change_subsampling_conv_chunking_factor -> info;
change_subsampling_conv_chunking_factor -> open_dict;
change_subsampling_conv_chunking_factor -> ValueError;
_update_adapter_cfg_input_dim -> update_adapter_cfg_input_dim;
get_enabled_adapters -> set;
get_enabled_adapters -> sorted;
get_enabled_adapters -> update;
get_enabled_adapters -> list;
get_enabled_adapters -> get_enabled_adapters;
get_enabled_adapters -> super;
get_enabled_adapters -> hasattr;
get_enabled_adapters -> isinstance;
get_enabled_adapters -> extend;
get_enabled_adapters -> getattr;
get_enabled_adapters -> enumerate;
get_enabled_adapters -> get_accepted_adapter_types;
get_enabled_adapters -> items;
get_enabled_adapters -> is_adapter_available;
get_enabled_adapters -> keys;
get_enabled_adapters -> len;
get_enabled_adapters -> get_adapter_module;
get_enabled_adapters -> append;
get_enabled_adapters -> check_valid_model_with_adapter_support_;
get_enabled_adapters -> update_adapter_cfg;
update_adapter_cfg_input_dim -> convert_adapter_cfg_to_dict_config;
update_adapter_cfg_input_dim -> ValueError;
update_adapter_cfg_input_dim -> info;
update_adapter_cfg_input_dim -> to_yaml;
get_accepted_adapter_types -> get_accepted_adapter_types;
get_accepted_adapter_types -> len;
get_accepted_adapter_types -> set_accepted_adapter_types;
get_accepted_adapter_types -> super;
get_accepted_adapter_types -> hasattr;
get_accepted_adapter_types -> set;
set_accepted_adapter_types -> set;
set_accepted_adapter_types -> isclass;
set_accepted_adapter_types -> append;
set_accepted_adapter_types -> issubclass;
set_accepted_adapter_types -> ValueError;
set_accepted_adapter_types -> import_class_by_path;
update_access_cfg -> update;
_prepare_for_export -> named_modules;
_prepare_for_export -> _prepare_for_export;
_prepare_for_export -> warning;
_prepare_for_export -> isinstance;
_prepare_for_export -> modules;
_prepare_for_export -> type;
_prepare_for_export -> super;
_prepare_for_export -> NeuralType;
_prepare_for_export -> TokenIndex;
_prepare_for_export -> tuple;
_prepare_for_export -> LengthsType;
_prepare_for_export -> LossType;
_prepare_for_export -> LabelsType;
_prepare_for_export -> RegressionValuesType;
_prepare_for_export -> Index;
_prepare_for_export -> MelSpectrogramType;
_prepare_for_export -> TokenDurationType;
_prepare_for_export -> TokenLogDurationType;
_prepare_for_export -> remove_weight_norm;
_prepare_for_export -> remove_norms;
_prepare_for_export -> update_bias_spect;
_prepare_for_export -> remove_weightnorm;
_prepare_for_export -> replace_for_export;
init_weights -> type;
init_weights -> xavier_uniform_;
init_weights -> fill_;
init_weights -> named_parameters;
init_weights -> orthogonal_;
init_weights -> isinstance;
init_weights -> init_weights;
init_weights -> zero_;
init_weights -> ones_;
init_weights -> zeros_;
init_weights -> xavier_normal_;
init_weights -> kaiming_uniform_;
init_weights -> kaiming_normal_;
init_weights -> tds_uniform_;
init_weights -> tds_normal_;
init_weights -> ValueError;
init_weights -> format;
init_weights -> find;
init_weights -> normal_;
update_max_sequence_length -> is_initialized;
update_max_sequence_length -> tensor;
update_max_sequence_length -> all_reduce;
update_max_sequence_length -> item;
update_max_sequence_length -> arange;
update_max_sequence_length -> hasattr;
update_max_sequence_length -> named_modules;
update_max_sequence_length -> next;
update_max_sequence_length -> register_buffer;
update_max_sequence_length -> isinstance;
update_max_sequence_length -> int;
update_max_sequence_length -> parameters;
update_max_sequence_length -> update_masked_length;
update_max_sequence_length -> set_max_len;
update_masked_length -> _masked_conv_init_lens;
update_masked_length -> to;
update_masked_length -> tensor;
set_max_len -> hasattr;
set_max_len -> arange;
set_max_len -> register_buffer;
set_max_len -> next;
set_max_len -> parameters;
forward_enabled_adapters -> get_enabled_adapters;
forward_enabled_adapters -> hasattr;
forward_enabled_adapters -> forward_single_enabled_adapter_;
forward_enabled_adapters -> AttributeError;
affine_layer -> Sequential;
affine_layer -> BatchNorm1d;
affine_layer -> Conv1d;
affine_layer -> Linear;
affine_layer -> ReLU;
get_index -> set;
get_index -> defaultdict;
get_index -> split;
get_index -> range;
get_index -> len;
get_index -> sorted;
get_index -> append;
get_index -> min;
get_index -> join;
get_index -> items;
get_index -> count;
get_index -> replace;
get_index -> log;
get_index -> add;
get_index -> max;
get_index -> update;
_get_tokens -> list;
_get_tokens -> LongTensor;
_get_tokens -> filter;
_get_tokens -> groupby;
_get_tokens -> len;
_get_tokens -> check_chinese_char;
_get_tokens -> extend;
_get_tokens -> split;
_get_tokens -> normalize_chinese_answer;
_get_tokens -> normalize_answer;
_get_tokens -> Random;
_get_tokens -> keys;
_get_tokens -> _get_text_tokens;
_get_tokens -> ValueError;
_get_tokens -> strip;
_get_tokens -> startswith;
_get_tokens -> get;
_get_tokens -> _get_phoneme_tokens;
_get_tokens -> _get_speech_tokens;
_get_tokens -> isinstance;
_get_tokens -> choice;
_get_tokens -> long;
_get_tokens -> int;
_get_tokens -> randint;
_get_tokens -> min;
_get_tokens -> load;
_get_tokens -> cat;
_get_tokens -> range;
_get_tokens -> stack;
_get_tokens -> append;
_get_tokens -> zeros;
_get_tokens -> format;
_get_tokens -> Exception;
_get_tokens -> ones;
_get_tokens -> replace;
filter -> get_t;
filter -> compute_filter;
filter -> compile;
filter -> _apply_filters;
filter -> glob;
filter -> replace;
filter -> from_file;
filter -> abspath;
filter -> len;
filter -> info;
_get_timesteps -> enumerate;
_get_timesteps -> append;
dim -> numel;
_forward_impl -> RuntimeError;
_forward_impl -> range;
_forward_impl -> len;
_forward_impl -> decode;
_forward_impl -> align;
_forward_impl -> min;
_forward_impl -> decode_func;
_forward_impl -> max;
_joint_hat_net_modules -> Linear;
_joint_hat_net_modules -> Sequential;
_joint_hat_net_modules -> lower;
_joint_hat_net_modules -> Tanh;
_joint_hat_net_modules -> Dropout;
_joint_hat_net_modules -> LogSigmoid;
_joint_hat_net_modules -> ValueError;
_joint_hat_net_modules -> ReLU;
_joint_hat_net_modules -> Sigmoid;
joint_after_projection -> unsqueeze;
joint_after_projection -> is_adapter_available;
joint_after_projection -> blank_pred;
joint_after_projection -> joint_net;
joint_after_projection -> log_softmax;
joint_after_projection -> clamp;
joint_after_projection -> contiguous;
joint_after_projection -> forward_enabled_adapters;
joint_after_projection -> log;
joint_after_projection -> HATJointOutput;
joint_after_projection -> empty_cache;
joint_after_projection -> exp;
joint_after_projection -> cat;
joint_after_projection -> to;
joint_after_projection -> gt;
joint_after_projection -> rand;
joint_after_projection -> NotImplementedError;
xavier_uniform_ -> _calculate_fan_in_and_fan_out;
xavier_uniform_ -> _inf_fan_adjust_xavier;
xavier_uniform_ -> _no_grad_uniform_;
xavier_uniform_ -> sqrt;
xavier_uniform_ -> float;
eye_ -> eye_;
eye_ -> ninf;
core_model -> expand;
core_model -> reshape;
core_model -> to;
core_model -> dropout;
core_model -> lstm;
core_model -> hidden_to_spks;
core_model -> conv_scale_weights;
core_model -> cosine_similarity;
core_model -> relu;
core_model -> Sigmoid;
core_model -> unsqueeze;
core_model -> permute;
core_model -> attention_scale_weights;
core_model -> ValueError;
core_model -> element_wise_product;
lstm -> sort_tensor;
lstm -> lstm_sorted;
lstm -> unsort_tensor;
conv_scale_weights -> cat;
conv_scale_weights -> flatten;
conv_scale_weights -> conv_forward;
conv_scale_weights -> range;
conv_scale_weights -> view;
conv_scale_weights -> conv_to_linear;
conv_scale_weights -> dropout;
conv_scale_weights -> softmax;
conv_scale_weights -> expand;
conv_scale_weights -> leaky_relu;
conv_scale_weights -> linear_to_weights;
conv_scale_weights -> unsqueeze;
attention_scale_weights -> W_a;
attention_scale_weights -> permute;
attention_scale_weights -> reshape;
attention_scale_weights -> sigmoid;
attention_scale_weights -> softmax;
attention_scale_weights -> flatten;
attention_scale_weights -> diagonal;
attention_scale_weights -> matmul;
element_wise_product -> reshape;
element_wise_product -> bmm;
element_wise_product -> product_to_emb;
element_wise_product -> unsqueeze;
conv_forward -> conv_module;
conv_forward -> reshape;
conv_forward -> flatten;
conv_forward -> permute;
conv_forward -> dropout;
conv_forward -> leaky_relu;
conv_forward -> unsqueeze;
conv_forward -> bn_module;
initialize_state -> size;
initialize_state -> full;
initialize_state -> randn;
initialize_state -> zeros;
initialize_state -> NotImplementedError;
initialize_state -> clone;
initialize_state -> expand;
initialize_state -> tensor;
_predict_modules -> StatelessNet;
_predict_modules -> ModuleDict;
_predict_modules -> Embedding;
_predict_modules -> rnn;
label_collate -> isinstance;
label_collate -> len;
label_collate -> max;
label_collate -> full;
label_collate -> enumerate;
label_collate -> tensor;
label_collate -> type;
label_collate -> ValueError;
score_hypothesis -> full;
score_hypothesis -> tuple;
score_hypothesis -> next;
score_hypothesis -> parameters;
score_hypothesis -> len;
score_hypothesis -> predict;
score_hypothesis -> NotImplementedError;
score_hypothesis -> tensor;
batch_initialize_states -> stack;
batch_initialize_states -> permute;
batch_initialize_states -> list;
batch_initialize_states -> contiguous;
batch_initialize_states -> NotImplementedError;
batch_select_state -> long;
batch_select_state -> NotImplementedError;
batch_concat_states -> range;
batch_concat_states -> cat;
batch_concat_states -> append;
batch_concat_states -> len;
batch_concat_states -> stack;
batch_concat_states -> transpose;
batch_concat_states -> unsqueeze;
batch_concat_states -> isinstance;
batch_concat_states -> NotImplementedError;
batch_replace_states_mask -> where;
batch_replace_states_mask -> unsqueeze;
batch_replace_states_mask -> to;
batch_replace_states_mask -> NotImplementedError;
batch_replace_states_mask -> zip;
batch_replace_states_all -> copy_;
batch_replace_states_all -> NotImplementedError;
batch_split_states -> split;
batch_split_states -> list;
batch_split_states -> zip;
batch_split_states -> NotImplementedError;
batch_score_hypothesis -> len;
batch_score_hypothesis -> next;
batch_score_hypothesis -> enumerate;
batch_score_hypothesis -> ValueError;
batch_score_hypothesis -> parameters;
batch_score_hypothesis -> tuple;
batch_score_hypothesis -> view;
batch_score_hypothesis -> batch_initialize_states;
batch_score_hypothesis -> predict;
batch_score_hypothesis -> range;
batch_score_hypothesis -> append;
batch_score_hypothesis -> tensor;
batch_score_hypothesis -> batch_select_state;
batch_score_hypothesis -> NotImplementedError;
rnn -> ValueError;
rnn -> LSTMDropout;
rnn -> BNRNNSum;
rnn -> script;
rnn -> ln_lstm;
batch_aggregate_states_beam -> Size;
batch_aggregate_states_beam -> expand;
batch_aggregate_states_beam -> gather;
batch_aggregate_states_beam -> view;
batch_aggregate_states_beam -> NotImplementedError;
batch_copy_states -> range;
batch_copy_states -> len;
batch_copy_states -> NotImplementedError;
_joint_net_modules -> Linear;
_joint_net_modules -> lower;
_joint_net_modules -> ValueError;
_joint_net_modules -> ReLU;
_joint_net_modules -> Sequential;
_joint_net_modules -> Sigmoid;
_joint_net_modules -> Tanh;
_joint_net_modules -> Dropout;
project_encoder -> enc;
project_encoder -> NotImplementedError;
project_prednet -> pred;
project_prednet -> NotImplementedError;
sampled_joint -> enc;
sampled_joint -> unsqueeze_;
sampled_joint -> pred;
sampled_joint -> is_adapter_available;
sampled_joint -> cat;
sampled_joint -> is_inference_mode_enabled;
sampled_joint -> joint;
sampled_joint -> forward_enabled_adapters;
sampled_joint -> module;
sampled_joint -> no_grad;
sampled_joint -> unique;
sampled_joint -> arange;
sampled_joint -> zip;
sampled_joint -> tensor;
sampled_joint -> bucketize;
sampled_joint -> reshape;
sampled_joint -> to;
sampled_joint -> matmul;
sampled_joint -> where;
sampled_joint -> clone;
sampled_joint -> ones_like;
sampled_joint -> empty_cache;
sampled_joint -> is_grad_enabled;
sampled_joint -> size;
sampled_joint -> ravel;
sampled_joint -> transpose;
sampled_joint -> randperm;
sampled_joint -> log_softmax;
sampled_joint -> super;
sampled_joint -> items;
num_classes_with_blank -> NotImplementedError;
num_extra_outputs -> NotImplementedError;
mask_select_states -> NotImplementedError;
_compress_spkcache -> floor;
_compress_spkcache -> _get_log_pred_scores;
_compress_spkcache -> _disable_low_scores;
_compress_spkcache -> _boost_topk_scores;
_compress_spkcache -> _get_topk_indices;
_compress_spkcache -> _gather_spkcache_and_preds;
_compress_spkcache -> _get_max_perm_index;
_compress_spkcache -> _permute_speakers;
_compress_spkcache -> full;
_compress_spkcache -> cat;
_compress_spkcache -> float;
_compress_spkcache -> rand;
_boost_topk_scores -> topk;
_boost_topk_scores -> unsqueeze;
_boost_topk_scores -> log;
_boost_topk_scores -> arange;
_get_silence_profile -> unsqueeze;
_get_silence_profile -> where;
_get_silence_profile -> sum;
_get_silence_profile -> clamp;
_get_silence_profile -> tensor;
_get_log_pred_scores -> log;
_get_log_pred_scores -> expand;
_get_log_pred_scores -> clamp;
_get_log_pred_scores -> unsqueeze;
_get_log_pred_scores -> sum;
_get_topk_indices -> reshape;
_get_topk_indices -> topk;
_get_topk_indices -> where;
_get_topk_indices -> sort;
_get_topk_indices -> remainder;
_get_topk_indices -> float;
_get_topk_indices -> tensor;
_get_topk_indices -> permute;
_gather_spkcache_and_preds -> expand;
_gather_spkcache_and_preds -> gather;
_gather_spkcache_and_preds -> _get_silence_profile;
_gather_spkcache_and_preds -> where;
_gather_spkcache_and_preds -> unsqueeze;
_gather_spkcache_and_preds -> tensor;
_get_max_perm_index -> where;
_get_max_perm_index -> full;
_get_max_perm_index -> scatter_reduce_;
_get_max_perm_index -> sum;
_disable_low_scores -> where;
_disable_low_scores -> tensor;
_disable_low_scores -> float;
_disable_low_scores -> unsqueeze;
_disable_low_scores -> sum;
_permute_speakers -> range;
_permute_speakers -> to;
_permute_speakers -> randperm;
_permute_speakers -> arange;
_permute_speakers -> cat;
_permute_speakers -> append;
_permute_speakers -> item;
_permute_speakers -> stack;
reset_parameters -> reset_parameters_ff;
reset_parameters -> reset_parameters_conv;
reset_parameters -> no_grad;
reset_parameters -> uniform_;
reset_parameters -> range;
reset_parameters -> len;
reset_parameters -> zeros_;
reset_parameters -> parameters;
reset_parameters -> sqrt;
reset_parameters -> reset_parameters;
make_pad_mask -> expand;
make_pad_mask -> unsqueeze;
make_pad_mask -> size;
make_pad_mask -> to;
kaiming_normal_ -> _calculate_correct_fan;
kaiming_normal_ -> calculate_gain;
kaiming_normal_ -> _inf_fan_adjust_kaiming;
kaiming_normal_ -> warn;
kaiming_normal_ -> no_grad;
kaiming_normal_ -> normal_;
kaiming_normal_ -> sqrt;
block -> Conv1d;
block -> kaiming_normal_;
block -> Sequential;
block -> make_conv;
block -> GELU;
block -> TransposeLast;
block -> LayerNorm;
block -> GroupNorm;
block -> Linear;
make_conv -> Conv1d;
make_conv -> kaiming_normal_;
apply_layers -> conv;
get_lengths -> div;
normal_ -> constant_std_init_;
normal_ -> _no_grad_normal_;
normal_ -> ninf;
create_padding_mask -> max;
create_padding_mask -> arange;
create_padding_mask -> type;
create_padding_mask -> expand;
create_padding_mask -> unsqueeze;
create_padding_mask -> len;
apply_transformer -> form_attention_mask;
apply_transformer -> enumerate;
apply_transformer -> random;
apply_transformer -> layer;
form_attention_mask -> unsqueeze;
form_attention_mask -> tril;
form_attention_mask -> to;
form_attention_mask -> ones;
repeat_noise -> repeat;
pad_or_trim_noise -> size;
pad_or_trim_noise -> pad;
get_noise_segments -> size;
get_noise_segments -> choice;
get_noise_segments -> pad_or_trim_noise;
get_noise_segments -> ValueError;
get_noise_segments -> min;
get_noise_segments -> append;
get_noise_segments -> repeat_noise;
get_noise_segments -> range;
get_noise_segments -> clone;
get_noise_segments -> len;
get_noise_segments -> randint;
forward_with_overlap -> size;
forward_with_overlap -> unsqueeze;
forward_with_overlap -> zeros_like;
forward_with_overlap -> clone;
forward_with_overlap -> range;
forward_with_overlap -> numpy;
forward_with_overlap -> binomial;
forward_with_overlap -> randperm;
forward_with_overlap -> min;
forward_with_overlap -> max;
forward_with_overlap -> cpu;
forward_with_overlap -> detach;
forward_without_overlap -> size;
forward_without_overlap -> unsqueeze;
forward_without_overlap -> zeros_like;
forward_without_overlap -> clone;
forward_without_overlap -> range;
forward_without_overlap -> int;
forward_without_overlap -> div;
forward_without_overlap -> randint;
forward_without_overlap -> randperm;
forward_without_overlap -> ceil;
_forward_for_weighted_sum -> sum;
_forward_for_weighted_sum -> stack;
_forward_for_weighted_sum -> range;
_forward_for_weighted_sum -> len;
xavier_normal_ -> _calculate_fan_in_and_fan_out;
xavier_normal_ -> _inf_fan_adjust_xavier;
xavier_normal_ -> _no_grad_normal_;
xavier_normal_ -> sqrt;
xavier_normal_ -> float;
_build_pooling_module -> MaxPool1d;
_build_pooling_module -> AvgPool1d;
_build_encoder -> BridgeEncoder;
_build_encoder -> PerceiverEncoder;
_build_encoder -> PoolingEncoder;
_build_encoder -> ValueError;
_build_decoder -> ValueError;
forward_preln -> layer_norm_1;
forward_preln -> first_sub_layer;
forward_preln -> is_adapter_available;
forward_preln -> layer_norm_2;
forward_preln -> second_sub_layer;
forward_preln -> layer_norm_3;
forward_preln -> third_sub_layer;
forward_preln -> forward_enabled_adapters;
forward_postln -> first_sub_layer;
forward_postln -> is_adapter_available;
forward_postln -> layer_norm_1;
forward_postln -> second_sub_layer;
forward_postln -> layer_norm_2;
forward_postln -> third_sub_layer;
forward_postln -> layer_norm_3;
forward_postln -> forward_enabled_adapters;
_get_memory_states -> transpose;
_get_memory_states -> cat;
_init_confidence_method -> structured;
_init_confidence_method -> get_confidence_measure_bank;
_init_confidence_method -> partial;
_init_confidence_method -> hasattr;
_init_confidence_method -> ValueError;
_init_confidence_method -> ConfidenceMethodConfig;
_init_confidence_method -> join;
_one_step_forward -> forward;
_one_step_forward -> float;
_one_step_forward -> with_log_softmax_enabled;
_one_step_forward -> mask_padded_tokens;
_one_step_forward -> _one_step_forward;
_one_step_forward -> size;
_one_step_forward -> topk;
_one_step_forward -> scatter;
_one_step_forward -> view;
_one_step_forward -> exp;
_one_step_forward -> norm;
_one_step_forward -> super;
_one_step_forward -> zeros_like;
_one_step_forward -> multinomial;
_one_step_forward -> div;
_prepare_for_search -> next;
_prepare_for_search -> parameters;
_prepare_for_search -> size;
_prepare_for_search -> to;
_prepare_for_search -> min;
_prepare_for_search -> fill_;
_prepare_for_search -> long;
_prepare_for_search -> zeros;
_forward -> _prepare_for_search;
_forward -> next;
_forward -> to;
_forward -> range;
_forward -> repeat_interleave;
_forward -> parameters;
_forward -> _one_step_forward;
_forward -> max;
_forward -> cat;
_forward -> list;
_forward -> long;
_forward -> RuntimeError;
_forward -> full_like;
_forward -> argmax;
_forward -> sample;
_forward -> append;
_forward -> sum;
_forward -> view;
_forward -> unsqueeze;
_forward -> _get_confidence_tensor;
_forward -> len;
_forward -> zeros;
_forward -> Categorical;
_forward -> log_softmax;
_forward -> topk;
_forward -> fill_;
_forward -> size;
_forward -> compute_len_penalty;
_forward -> squeeze;
_forward -> permute;
_forward -> repeat;
_forward -> zeros_like;
_forward -> ne;
_forward -> gather;
_forward -> get_init_states;
_forward -> advance;
_forward -> _average_probs;
_forward -> _get_encoder_hidden_states;
_forward -> _one_step_forward_lm;
_forward -> no_grad;
_forward -> eval;
_forward -> _teacher_model;
_forward -> only_student_forward;
_forward -> forward;
_forward -> is_pipeline_last_stage;
_forward -> type;
_forward -> emb_layers;
_forward -> in_rest;
_forward -> h_upd;
_forward -> x_upd;
_forward -> in_conv;
_forward -> in_layers;
_forward -> chunk;
_forward -> out_rest;
_forward -> out_layers;
_forward -> skip_connection;
_forward -> out_norm;
_forward -> shortcut;
_forward -> reshape;
_forward -> q;
_forward -> kv_self;
_forward -> contiguous;
_forward -> norm_context;
_forward -> kv_context;
_forward -> proj_out;
_forward -> norm;
_forward -> norm_self;
_forward -> rearrange;
_forward -> ones;
_forward -> bool;
_forward -> stack;
_forward -> arange;
_forward -> cumsum;
_forward -> flash_attn_varlen_kvpacked_func;
_forward -> attention;
_forward -> transpose;
_forward -> qkv;
_forward -> flash_attn_varlen_func;
_forward -> kv;
_forward -> proj_in;
_forward -> self_attention_block;
_forward -> cross_attention_block;
_forward -> ff;
_forward -> attn1;
_forward -> attn2;
_forward -> timestep_embedding;
_forward -> time_embed;
_forward -> middle_block;
_forward -> module;
_forward -> id_predictor;
_forward -> out;
_forward -> label_emb;
_forward -> pop;
_forward -> embedding;
_forward -> mlp_head;
_forward -> lstm_head;
_forward -> tpmlp;
_forward -> ValueError;
_forward -> flatten;
_forward -> pre;
_forward -> conv_post;
_forward -> slm_model;
_forward -> layer;
_forward -> leaky_relu;
_forward -> resample;
_forward -> CoreNet;
_forward -> layer_norm;
_forward -> bmm;
_forward -> mul_;
_forward -> softmax;
_forward -> dropatt;
_forward -> o_net;
_forward -> drop;
_forward -> qkv_net;
_forward -> masked_fill_;
_forward -> float;
_forward -> cond_input;
_forward -> pos_emb;
_forward -> keys;
_forward -> mpi_rank;
_forward -> generate;
_forward -> synchronize;
_forward -> print;
_forward -> hasattr;
_forward -> TypeError;
_forward -> join;
_forward -> TemporaryDirectory;
_forward -> save;
_forward -> cleanup;
_forward -> numpy;
_forward -> str;
_forward -> cpu;
_get_confidence_tensor -> _confidence_measure;
_get_confidence_tensor -> nan_to_num;
as_frozen -> freeze;
as_frozen -> unfreeze;
as_frozen -> keys;
as_frozen -> range;
as_frozen -> gather_grad_values;
as_frozen -> gather_reset_training_mode_values;
as_frozen -> named_parameters;
as_frozen -> len;
as_frozen -> reset_grad_values;
as_frozen -> append;
as_frozen -> train;
as_frozen -> pop;
as_frozen -> getattr;
as_frozen -> eval;
compute_len_penalty -> pow;
get_init_states -> get_init_state;
get_init_states -> range;
get_init_states -> full;
advance -> len;
advance -> zeros;
advance -> enumerate;
advance -> range;
advance -> advance_single;
advance -> append;
advance -> _advance_triton;
advance -> _advance_pytorch;
advance -> get_final;
advance -> advance;
advance -> super;
advance -> min;
advance -> max;
advance -> RuntimeError;
advance -> round;
advance -> float;
_one_step_forward_lm -> float;
_one_step_forward_lm -> forward;
_one_step_forward_lm -> mask_padded_tokens;
_average_probs -> stack;
_average_probs -> log;
_average_probs -> mean;
_average_probs -> exp;
_build_pos_enc -> zeros;
_build_pos_enc -> unsqueeze;
_build_pos_enc -> exp;
_build_pos_enc -> sin;
_build_pos_enc -> cos;
_build_pos_enc -> div_;
_build_pos_enc -> register_buffer;
_build_pos_enc -> sqrt;
_build_pos_enc -> arange;
_build_pos_enc -> log;
transpose_for_scores -> view;
transpose_for_scores -> permute;
transpose_for_scores -> size;
merge_alignment_with_ws_hyps -> append;
merge_alignment_with_ws_hyps -> join;
merge_alignment_with_ws_hyps -> enumerate;
merge_alignment_with_ws_hyps -> info;
merge_alignment_with_ws_hyps -> set;
merge_alignment_with_ws_hyps -> ids_to_tokens;
merge_alignment_with_ws_hyps -> ValueError;
merge_alignment_with_ws_hyps -> startswith;
merge_alignment_with_ws_hyps -> range;
merge_alignment_with_ws_hyps -> isinstance;
merge_alignment_with_ws_hyps -> tolist;
merge_alignment_with_ws_hyps -> len;
merge_alignment_with_ws_hyps -> item;
merge_alignment_with_ws_hyps -> int;
ids_to_tokens -> append;
ids_to_tokens -> ids_to_tokens;
ids_to_tokens -> isinstance;
ids_to_tokens -> id_to_token;
ids_to_tokens -> len;
ids_to_tokens -> get;
ids_to_tokens -> ValueError;
ids_to_tokens -> tolist;
ids_to_tokens -> id_to_piece;
ids_to_tokens -> sum;
ids_to_tokens -> find_index_of;
ids_to_tokens -> cumsum;
ids_to_tokens -> min;
ids_to_tokens -> where;
ids_to_tokens -> decode;
ids_to_tokens -> id_to_subword;
ids_to_tokens -> convert_ids_to_tokens;
compute_fscore -> isfile;
compute_fscore -> read_manifest;
compute_fscore -> get;
compute_fscore -> max;
compute_fscore -> sum;
compute_fscore -> info;
compute_fscore -> len;
compute_fscore -> split;
compute_fscore -> align_texts;
compute_fscore -> range;
compute_fscore -> append;
compute_fscore -> join;
add_to_graph -> enumerate;
add_to_graph -> ContextState;
add_to_graph -> len;
draw -> "Digraph";
draw -> set;
draw -> deque;
draw -> append;
draw -> "node";
draw -> add;
draw -> len;
draw -> ImportError;
draw -> popleft;
draw -> items;
draw -> str;
draw -> "edge";
draw -> _kaldifst_maybe_raise;
draw -> _graphviz_maybe_raise;
draw -> draw;
draw -> Source;
draw -> splitlines;
draw -> pop;
draw -> _is_notebook;
draw -> SymbolTable;
draw -> hasattr;
draw -> splitext;
draw -> add_symbol;
draw -> ValueError;
draw -> TemporaryDirectory;
draw -> render;
draw -> move;
draw -> _svg_srcdoc_resize;
draw -> catch_warnings;
draw -> simplefilter;
draw -> HTML;
draw -> round;
beam_pruning -> argmax;
find_best_hyps -> set;
find_best_hyps -> range;
find_best_hyps -> int;
find_best_hyps -> len;
find_best_hyps -> pop;
find_best_hyps -> split;
get_ctc_word_alignment -> argmax;
get_ctc_word_alignment -> enumerate;
get_ctc_word_alignment -> append;
get_ctc_word_alignment -> item;
get_ctc_word_alignment -> startswith;
get_ctc_word_alignment -> len;
get_ctc_word_alignment -> ids_to_tokens;
get_ctc_word_alignment -> pop;
get_ctc_word_alignment -> int;
filter_wb_hyps -> set;
filter_wb_hyps -> range;
filter_wb_hyps -> len;
filter_wb_hyps -> append;
run_word_spotter -> log;
run_word_spotter -> range;
run_word_spotter -> find_best_hyps;
run_word_spotter -> get_ctc_word_alignment;
run_word_spotter -> filter_wb_hyps;
run_word_spotter -> append;
run_word_spotter -> beam_pruning;
run_word_spotter -> state_pruning;
run_word_spotter -> Token;
run_word_spotter -> item;
run_word_spotter -> WSHyp;
run_word_spotter -> len;
run_word_spotter -> int;
make_non_pad_mask -> arange;
make_non_pad_mask -> expand;
make_non_pad_mask -> unsqueeze;
make_non_pad_mask -> to;
make_non_pad_mask -> detach;
make_non_pad_mask -> clone;
build_topo -> arc_sort;
build_topo -> build_default_topo;
build_topo -> build_compact_topo;
build_topo -> build_shared_blank_topo;
build_topo -> build_minimal_topo;
build_topo -> ValueError;
build_topo -> _kaldifst_maybe_raise;
build_topo -> SymbolTable;
build_topo -> items;
build_topo -> copy;
build_topo -> add_symbol;
compose_with_self_loops -> to;
compose_with_self_loops -> compose;
compose_with_self_loops -> arc_sort;
compose_with_self_loops -> add_epsilon_self_loops;
intersect_with_self_loops -> hasattr;
intersect_with_self_loops -> to;
intersect_with_self_loops -> intersect;
intersect_with_self_loops -> setattr;
intersect_with_self_loops -> arc_sort;
intersect_with_self_loops -> add_epsilon_self_loops;
add_self_loops -> add_epsilon_self_loops;
add_self_loops -> reset_properties_fsa;
add_self_loops -> hasattr;
_decode_impl -> _prepare_emissions_graphs;
_decode_impl -> to;
_decode_impl -> intersect_dense_pruned;
_decode_impl -> zeros;
_decode_impl -> intersect_dense;
_decode_impl -> index_fsa;
_decode_impl -> _extract_labels_and_probabilities;
_decode_impl -> dim0;
_decode_impl -> where;
_decode_impl -> shortest_path;
_decode_impl -> invert_permutation;
_prepare_emissions_graphs -> prep_padded_densefsavec;
_prepare_emissions_graphs -> DenseFsaVec;
_prepare_emissions_graphs -> cat;
_prepare_emissions_graphs -> zeros;
_prepare_emissions_graphs -> tensor;
_prepare_emissions_graphs -> view;
_prepare_emissions_graphs -> all;
_prepare_emissions_graphs -> argsort;
_prepare_emissions_graphs -> size;
_prepare_emissions_graphs -> to;
_prepare_emissions_graphs -> int;
_prepare_emissions_graphs -> len;
_prepare_emissions_graphs -> finfo;
_extract_labels_and_probabilities -> range;
_extract_labels_and_probabilities -> to;
_extract_labels_and_probabilities -> append;
_extract_labels_and_probabilities -> exp;
_extract_labels_and_probabilities -> get_arc_weights;
invert_permutation -> zeros;
invert_permutation -> arange;
invert_permutation -> to;
_prepare_log_probs_and_targets -> create_supervision;
_prepare_log_probs_and_targets -> size;
_prepare_log_probs_and_targets -> where;
_prepare_log_probs_and_targets -> flatten;
_prepare_log_probs_and_targets -> sum;
_prepare_log_probs_and_targets -> arange;
_prepare_log_probs_and_targets -> clone;
_prepare_log_probs_and_targets -> view;
_prepare_log_probs_and_targets -> _prepare_log_probs_and_targets;
_prepare_log_probs_and_targets -> len;
_prepare_log_probs_and_targets -> get_uniform_rnnt_prune_ranges;
_prepare_log_probs_and_targets -> unique;
_prepare_log_probs_and_targets -> max;
_prepare_log_probs_and_targets -> full;
_prepare_log_probs_and_targets -> repeat_interleave;
_prepare_log_probs_and_targets -> repeat;
_prepare_log_probs_and_targets -> unsqueeze;
_prepare_log_probs_and_targets -> cat;
_prepare_log_probs_and_targets -> make_non_pad_mask_3d;
_prepare_log_probs_and_targets -> make_non_pad_mask;
_prepare_log_probs_and_targets -> super;
_prepare_log_probs_and_targets -> reshape;
_prepare_log_probs_and_targets -> cumsum;
_prepare_log_probs_and_targets -> stack;
load_graph -> exists;
load_graph -> Exception;
load_graph -> warning;
load_graph -> load;
load_graph -> from_dict;
load_graph -> append;
load_graph -> open;
load_graph -> read;
load_graph -> func;
_set_decoder_config -> GraphIntersectDenseConfig;
_set_decoder_config -> RivaDecoderConfig;
_set_decoder_config -> hasattr;
_set_decoder_config -> riva_decoder_importer;
_set_decoder_config -> RuntimeError;
_set_decoder_config -> len;
_set_decoding_mode -> ValueError;
_init_decoder -> inference_mode;
_init_decoder -> clone;
_init_decoder -> to;
_init_decoder -> isinstance;
_init_decoder -> load_graph;
_init_decoder -> __class__;
_init_decoder -> defaultdict;
_init_decoder -> items;
_init_decoder -> int;
_init_decoder -> map;
_init_decoder -> split;
_init_decoder -> strip;
_init_decoder -> to_str;
_init_decoder -> kaldifst_importer;
_init_decoder -> riva_decoder_importer;
_init_decoder -> read;
_init_decoder -> find;
_init_decoder -> NamedTemporaryFile;
_init_decoder -> write_text;
_init_decoder -> BatchedMappedDecoderCudaConfig;
_init_decoder -> _fill_inner_riva_config_;
_init_decoder -> BatchedMappedDecoderCuda;
_init_decoder -> close;
_init_decoder -> write;
_init_decoder -> ValueError;
_init_decoder -> type;
_init_decoder -> str;
nbest_size -> _nbest_size_setter;
_nbest_size_setter -> _release_gpu_memory;
_nbest_size_setter -> _init_decoder;
_decoding_mode_setter -> _set_decoding_mode;
_decode_lattice -> inference_mode;
_decode_lattice -> intersect_dense_pruned;
_decode_lattice -> connect;
_decode_lattice -> index_fsa;
_decode_lattice -> expand_ragged_attributes;
_decode_lattice -> to;
_decode_lattice -> invert_permutation;
_decode_lattice -> NamedTemporaryFile;
_decode_lattice -> decode_write_lattice;
_decode_lattice -> _load_word_lattice;
_decode_lattice -> str;
_decode_lattice -> range;
_decode_lattice -> len;
connect -> MethodType;
connect -> self;
connect -> hasattr;
connect -> deepcopy;
connect -> optimizers;
connect -> connect;
connect -> getattr;
connect -> set_model_parallel_attributes;
connect -> update_config_with_dtype_overrides;
connect -> isinstance;
connect -> super;
connect -> cast;
connect -> ValueError;
connect -> info;
create_supervision -> to;
create_supervision -> argsort;
create_supervision -> stack;
create_supervision -> tensor;
create_supervision -> zeros;
create_supervision -> cpu;
create_supervision -> range;
_post_decode -> inference_mode;
_post_decode -> shortest_path;
_post_decode -> tolist;
_post_decode -> range;
_post_decode -> from_lattice;
_post_decode -> index_select;
_post_decode -> enumerate;
_post_decode -> collapse_tokenword_hypotheses;
_post_decode -> to;
_post_decode -> append;
_post_decode -> row_ids;
_post_decode -> get_tot_scores;
_post_decode -> WfstNbestHypothesis;
_post_decode -> tuple;
_post_decode -> len;
collapse_tokenword_hypotheses -> deepcopy;
collapse_tokenword_hypotheses -> enumerate;
collapse_tokenword_hypotheses -> len;
collapse_tokenword_hypotheses -> list;
collapse_tokenword_hypotheses -> zip;
collapse_tokenword_hypotheses -> replace_unit_;
collapse_tokenword_hypotheses -> append;
collapse_tokenword_hypotheses -> replace;
collapse_tokenword_hypotheses -> tuple;
collapse_tokenword_hypotheses -> join;
calibrate_lm_weight -> inference_mode;
calibrate_lm_weight -> decode;
calibrate_lm_weight -> range;
calibrate_lm_weight -> len;
calibrate_lm_weight -> float;
calibrate_lm_weight -> _post_decode;
calibrate_lm_weight -> word_error_rate;
calibrate_lm_weight -> join;
calibrate_lm_weight -> print;
calculate_oracle_wer -> inference_mode;
calculate_oracle_wer -> tensor;
calculate_oracle_wer -> decode;
calculate_oracle_wer -> invert;
calculate_oracle_wer -> delattr;
calculate_oracle_wer -> levenshtein_graph_k2;
calculate_oracle_wer -> add_epsilon_self_loops;
calculate_oracle_wer -> clone;
calculate_oracle_wer -> arc_sort;
calculate_oracle_wer -> compose;
calculate_oracle_wer -> remove_epsilon_self_loops;
calculate_oracle_wer -> len;
calculate_oracle_wer -> max;
calculate_oracle_wer -> linear_fsa;
calculate_oracle_wer -> shortest_path;
calculate_oracle_wer -> to;
calculate_oracle_wer -> item;
calculate_oracle_wer -> tolist;
calculate_oracle_wer -> keys;
calculate_oracle_wer -> warning;
calculate_oracle_wer -> split;
calculate_oracle_wer -> get_tot_scores;
calculate_oracle_wer -> sum;
calculate_oracle_wer -> zip;
calculate_oracle_wer -> append;
calculate_oracle_wer -> edit_distance;
calculate_oracle_wer -> strip;
levenshtein_graph_k2 -> values;
levenshtein_graph_k2 -> nonzero;
levenshtein_graph_k2 -> clone;
levenshtein_graph_k2 -> where;
levenshtein_graph_k2 -> add_epsilon_self_loops;
levenshtein_graph_k2 -> arc_sort;
levenshtein_graph_k2 -> unpack;
levenshtein_graph_k2 -> zeros;
levenshtein_graph_k2 -> repeat_interleave;
levenshtein_graph_k2 -> len;
levenshtein_graph_k2 -> index;
levenshtein_graph_k2 -> create_fsa_vec;
levenshtein_graph_k2 -> Fsa;
levenshtein_graph_k2 -> pack;
levenshtein_graph_k2 -> to;
levenshtein_graph_k2 -> row_splits;
levenshtein_graph_k2 -> arange;
levenshtein_graph_k2 -> shape;
levenshtein_graph_k2 -> zip;
force_float32_context -> is_autocast_enabled;
force_float32_context -> nullcontext;
force_float32_context -> autocast;
get_composed_lattice -> get_unit_schema;
get_composed_lattice -> get_temporal_schema;
get_composed_lattice -> compose;
get_composed_lattice -> connect;
get_unit_schema -> zeros;
get_unit_schema -> arange;
get_unit_schema -> clone;
get_unit_schema -> Fsa;
get_unit_schema -> flatten;
get_unit_schema -> detach;
get_unit_schema -> transpose;
get_unit_schema -> expand;
get_unit_schema -> zeros_like;
get_temporal_schema -> zeros;
get_temporal_schema -> arange;
get_temporal_schema -> flatten;
get_temporal_schema -> tensor;
get_temporal_schema -> clone;
get_temporal_schema -> Fsa;
get_temporal_schema -> arc_sort;
get_temporal_schema -> transpose;
get_temporal_schema -> expand;
get_temporal_schema -> detach;
get_temporal_schema -> sort;
get_graphs_batched -> no_grad;
get_graphs_batched -> compose;
get_graphs_batched -> tolist;
get_graphs_batched -> create_fsa_vec;
get_graphs_batched -> get_unit_schema;
get_graphs_batched -> get_temporal_schema;
get_graphs_batched -> connect;
get_graphs_batched -> range;
get_graphs_batched -> get_grid;
get_graphs_batched -> item;
get_grid -> zeros;
get_grid -> arange;
get_grid -> flatten;
get_grid -> tensor;
get_grid -> div;
get_grid -> relabel_states;
get_grid -> sort;
get_grid -> Fsa;
get_grid -> expand;
get_grid -> reshape;
get_grid -> cat;
get_batch_indices -> repeat_interleave;
get_batch_indices -> arange;
get_batch_indices -> tensor;
get_batch_indices -> range;
get_batch_indices -> values;
get_batch_indices -> index;
get_logits_indices -> get_batch_indices;
get_logits_indices -> to;
relabel_states -> div;
relabel_states -> min;
relabel_states -> max;
relabel_states -> where;
relabel_states -> ge;
relabel_states -> lt;
relabel_states -> logical_and;
get_weighted_graphs -> get_graphs_batched;
get_weighted_graphs -> no_grad;
get_weighted_graphs -> get_batch_indices;
get_weighted_graphs -> to;
get_weighted_graphs -> masked_fill_;
get_weighted_graphs -> force_float32_context;
get_weighted_graphs -> nullcontext;
get_weighted_graphs -> rnnt_logprobs_triton;
get_weighted_graphs -> log_softmax;
get_weighted_graphs -> clone;
get_weighted_graphs -> where;
rnnt_logprobs_triton -> apply;
prep_padded_densefsavec -> cat;
prep_padded_densefsavec -> zeros;
prep_padded_densefsavec -> clone;
prep_padded_densefsavec -> DenseFsaVec;
prep_padded_densefsavec -> full;
prep_padded_densefsavec -> float;
_maybe_normalize_gradients -> apply;
get_arc_weights -> tolist;
get_arc_weights -> unpack;
get_arc_weights -> Tensor;
get_arc_weights -> len;
get_arc_weights -> NotImplementedError;
get_arc_weights -> pack;
get_arc_weights -> values;
make_non_pad_mask_3d -> size;
make_non_pad_mask_3d -> unsqueeze;
make_non_pad_mask_3d -> make_non_pad_mask;
_intersect_calc_scores_impl_exact_opt -> clone;
_intersect_calc_scores_impl_exact_opt -> cat;
_intersect_calc_scores_impl_exact_opt -> arange;
_intersect_calc_scores_impl_exact_opt -> tensor;
_intersect_calc_scores_impl_exact_opt -> to;
_intersect_calc_scores_impl_exact_opt -> index_fsa;
_intersect_calc_scores_impl_exact_opt -> reshape;
_intersect_calc_scores_impl_exact_opt -> intersect_dense;
_intersect_calc_scores_impl_exact_opt -> get_tot_scores;
_intersect_calc_scores_impl_exact_opt -> dim0;
_intersect_calc_scores_impl_exact_opt -> t;
_intersect_calc_scores_impl_exact_opt -> stack;
_intersect_calc_scores_impl_exact_opt -> repeat;
_intersect_calc_scores_impl_pruned -> intersect_dense;
_intersect_calc_scores_impl_pruned -> intersect_dense_pruned;
_intersect_calc_scores_impl_pruned -> get_tot_scores;
_intersect_calc_scores_impl_pruned -> dim0;
_intersect_calc_scores -> _intersect_calc_scores_impl;
_intersect_calc_scores -> invert_permutation;
_intersect_calc_scores -> get_tot_objf_and_finite_mask;
_intersect_calc_scores -> to;
_intersect_calc_scores -> row_ids;
_intersect_calc_scores -> create_sparse_wrapped;
_intersect_calc_scores -> to_dense;
_intersect_calc_scores -> dim0;
_intersect_calc_scores -> shape;
_intersect_calc_scores -> exp;
_intersect_calc_scores -> sum;
_intersect_calc_scores -> index_select;
_intersect_calc_scores -> abs;
_intersect_calc_scores -> get_arc_post;
_intersect_calc_scores -> coalesce;
_intersect_calc_scores -> intersect_dense;
_intersect_calc_scores -> get_tot_scores;
_intersect_calc_scores -> finfo;
get_tot_objf_and_finite_mask -> ne;
get_tot_objf_and_finite_mask -> mean;
get_tot_objf_and_finite_mask -> isnan;
get_tot_objf_and_finite_mask -> sum;
get_tot_objf_and_finite_mask -> float;
create_sparse_wrapped -> len;
create_sparse_wrapped -> create_sparse;
create_sparse_wrapped -> ValueError;
create_sparse_wrapped -> numel;
create_sparse_wrapped -> isinstance;
create_sparse_wrapped -> sparse_coo_tensor;
create_sparse_wrapped -> stack;
_prepare_graphs_for_intersection -> _prepare_log_probs_and_targets;
_prepare_graphs_for_intersection -> _maybe_normalize_gradients;
_prepare_graphs_for_intersection -> _prepare_emissions_graphs;
_prepare_graphs_for_intersection -> to;
_prepare_graphs_for_intersection -> compile;
rnnt_logprobs_torch -> log_softmax;
rnnt_logprobs_torch -> cat;
rnnt_logprobs_torch -> squeeze;
rnnt_logprobs_torch -> unsqueeze;
rnnt_logprobs_torch -> gather;
rnnt_logprobs_torch -> zeros;
rnnt_logprobs_torch -> expand;
_rnnt_logprobs_fwd_kernel -> to;
_rnnt_logprobs_fwd_kernel -> load;
_rnnt_logprobs_fwd_kernel -> arange;
_rnnt_logprobs_fwd_kernel -> max;
_rnnt_logprobs_fwd_kernel -> log;
_rnnt_logprobs_fwd_kernel -> store;
_rnnt_logprobs_fwd_kernel -> sum;
_rnnt_logprobs_fwd_kernel -> program_id;
_rnnt_logprobs_fwd_kernel -> exp;
_rnnt_logprobs_fwd_kernel -> float;
_rnnt_logprobs_bwd_kernel -> to;
_rnnt_logprobs_bwd_kernel -> load;
_rnnt_logprobs_bwd_kernel -> arange;
_rnnt_logprobs_bwd_kernel -> max;
_rnnt_logprobs_bwd_kernel -> log;
_rnnt_logprobs_bwd_kernel -> exp;
_rnnt_logprobs_bwd_kernel -> where;
_rnnt_logprobs_bwd_kernel -> store;
_rnnt_logprobs_bwd_kernel -> sum;
_rnnt_logprobs_bwd_kernel -> program_id;
_rnnt_logprobs_bwd_kernel -> float;
build_default_topo -> len;
build_default_topo -> range;
build_default_topo -> from_str;
build_default_topo -> arc_sort;
build_default_topo -> _kaldifst_maybe_raise;
build_default_topo -> compile;
build_default_topo -> StdVectorFst;
build_default_topo -> add_state;
build_default_topo -> set_final;
build_default_topo -> add_arc;
build_default_topo -> items;
build_default_topo -> StateIterator;
build_default_topo -> StdArc;
build_default_topo -> match;
build_default_topo -> append;
build_compact_topo -> int;
build_compact_topo -> range;
build_compact_topo -> from_str;
build_compact_topo -> arc_sort;
build_compact_topo -> len;
build_compact_topo -> _kaldifst_maybe_raise;
build_compact_topo -> compile;
build_compact_topo -> StdVectorFst;
build_compact_topo -> add_state;
build_compact_topo -> set_final;
build_compact_topo -> add_arc;
build_compact_topo -> items;
build_compact_topo -> StdArc;
build_compact_topo -> match;
build_shared_blank_topo -> copy;
build_shared_blank_topo -> remove;
build_shared_blank_topo -> len;
build_shared_blank_topo -> append;
build_shared_blank_topo -> enumerate;
build_shared_blank_topo -> sorted;
build_shared_blank_topo -> join;
build_shared_blank_topo -> from_str;
build_shared_blank_topo -> arc_sort;
build_shared_blank_topo -> str;
build_minimal_topo -> len;
build_minimal_topo -> range;
build_minimal_topo -> from_str;
build_minimal_topo -> arc_sort;
build_minimal_topo -> _kaldifst_maybe_raise;
build_minimal_topo -> compile;
build_minimal_topo -> StdVectorFst;
build_minimal_topo -> add_state;
build_minimal_topo -> set_final;
build_minimal_topo -> add_arc;
build_minimal_topo -> items;
build_minimal_topo -> StdArc;
build_minimal_topo -> match;
from_str -> strip;
from_str -> lower;
from_str -> startswith;
from_str -> len;
from_str -> ValueError;
_build_single_adapter -> lru_cache;
_build_single_adapter -> range;
_build_single_adapter -> arc_sort;
_build_single_adapter -> from_str;
_build_single_adapter -> len;
ragged_to_tensor_2axes_simple -> tolist;
ragged_to_tensor_2axes_simple -> tensor;
ragged_to_tensor_2axes_simple -> len;
ragged_to_tensor_2axes_simple -> append;
from_dict -> items;
from_dict -> from_dict;
from_dict -> HFDatasetDataModule;
shift_labels_inpl -> reset_properties_fsa;
shift_labels_inpl -> hasattr;
reset_properties_fsa -> device;
reset_properties_fsa -> arc_sort;
pack -> from_dict;
pack -> info;
pack -> get_rank;
pack -> tqdm;
pack -> len;
pack -> _should_stop_packing;
pack -> _add_pack;
pack -> is_available;
pack -> is_initialized;
pack -> ValueError;
pack -> _split_and_add_pack;
pack -> update;
pack -> range;
pack -> keys;
resolve_adapter_module_name_ -> resolve_adapter_module_name_;
resolve_adapter_module_name_ -> split;
resolve_adapter_module_name_ -> super;
resolve_adapter_module_name_ -> ValueError;
resolve_adapter_module_name_ -> join;
resolve_adapter_module_name_ -> hasattr;
resolve_adapter_module_name_ -> get;
check_valid_model_with_adapter_support_ -> _get_global_cfg;
check_valid_model_with_adapter_support_ -> get;
check_valid_model_with_adapter_support_ -> hasattr;
check_valid_model_with_adapter_support_ -> warning;
check_valid_model_with_adapter_support_ -> isinstance;
check_valid_model_with_adapter_support_ -> getattr;
check_valid_model_with_adapter_support_ -> DictConfig;
_get_global_cfg -> DictConfig;
get_value_from_diarization_config -> hasattr;
get_value_from_diarization_config -> getattr;
get_value_from_diarization_config -> debug;
diarize_generator -> DiarizeConfig;
diarize_generator -> hasattr;
diarize_generator -> ValueError;
diarize_generator -> InternalDiarizeConfig;
diarize_generator -> _diarize_on_begin;
diarize_generator -> _diarize_on_end;
diarize_generator -> isinstance;
diarize_generator -> TemporaryDirectory;
diarize_generator -> enumerate;
diarize_generator -> _diarize_input_processing;
diarize_generator -> tqdm;
diarize_generator -> move_data_to_device;
diarize_generator -> _diarize_forward;
diarize_generator -> _diarize_output_processing;
diarize_generator -> empty_cache;
diarize_generator -> list;
diarize_generator -> keys;
_diarize_on_begin -> isinstance;
_diarize_on_begin -> get_value_from_diarization_config;
_diarize_on_begin -> hasattr;
_diarize_on_begin -> eval;
_diarize_on_begin -> get_verbosity;
_diarize_on_begin -> set_verbosity;
_diarize_on_begin -> min;
_diarize_on_begin -> len;
_diarize_on_begin -> cpu_count;
_diarize_on_begin -> _diarize_on_begin;
_diarize_on_begin -> super;
_diarize_on_end -> train;
_diarize_on_end -> hasattr;
_diarize_on_end -> set_verbosity;
_diarize_input_processing -> isinstance;
_diarize_input_processing -> _diarize_input_manifest_processing;
_diarize_input_processing -> _setup_diarize_dataloader;
_diarize_input_processing -> ValueError;
_diarize_input_processing -> len;
_diarize_input_processing -> endswith;
_diarize_input_processing -> audio_rttm_map;
_diarize_input_processing -> items;
_diarize_input_processing -> list;
_diarize_input_processing -> _input_audio_to_rttm_processing;
_diarize_input_processing -> append;
_diarize_input_processing -> type;
_input_audio_to_rttm_processing -> get_uniqname_from_filepath;
_diarize_input_manifest_processing -> open;
_diarize_input_manifest_processing -> get_value_from_diarization_config;
_diarize_input_manifest_processing -> join;
_diarize_input_manifest_processing -> isinstance;
_diarize_input_manifest_processing -> write;
_diarize_input_manifest_processing -> ValueError;
_diarize_input_manifest_processing -> dumps;
_diarize_input_manifest_processing -> type;
_process_config_values -> set_interctc_param;
_process_config_values -> update_access_cfg;
_process_config_values -> hasattr;
_process_config_values -> get_interctc_param;
_process_config_values -> ValueError;
_process_config_values -> len;
_process_config_values -> propagate_model_guid;
_process_config_values -> warning;
_process_config_values -> sum;
_process_config_values -> getattr;
set_interctc_param -> ValueError;
get_interctc_param -> getattr;
propagate_model_guid -> named_modules;
propagate_model_guid -> children;
propagate_model_guid -> recursively_propagate_guid;
propagate_model_guid -> named_nemo_modules;
_verify_setup_was_called -> hasattr;
_verify_setup_was_called -> RuntimeError;
set_interctc_enabled -> _verify_setup_was_called;
set_interctc_enabled -> set_interctc_param;
set_interctc_enabled -> len;
set_interctc_enabled -> RuntimeError;
set_interctc_enabled -> get_interctc_param;
get_captured_interctc_tensors -> values;
get_captured_interctc_tensors -> get_interctc_param;
get_captured_interctc_tensors -> is_interctc_enabled;
get_captured_interctc_tensors -> update;
get_captured_interctc_tensors -> append;
get_captured_interctc_tensors -> get_module_registry;
get_captured_interctc_tensors -> RuntimeError;
get_captured_interctc_tensors -> startswith;
get_captured_interctc_tensors -> len;
_derive_tokenizer_properties -> get_vocab;
_derive_tokenizer_properties -> bool;
_derive_tokenizer_properties -> strip;
_derive_tokenizer_properties -> any;
_derive_tokenizer_properties -> startswith;
_derive_tokenizer_properties -> isupper;
_derive_tokenizer_properties -> category;
_setup_aggregate_tokenizer -> to_container;
_setup_aggregate_tokenizer -> pop;
_setup_aggregate_tokenizer -> lower;
_setup_aggregate_tokenizer -> info;
_setup_aggregate_tokenizer -> _cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed;
_setup_aggregate_tokenizer -> items;
_setup_aggregate_tokenizer -> hasattr;
_setup_aggregate_tokenizer -> _make_tokenizer;
_setup_aggregate_tokenizer -> from_config_dict;
_setup_aggregate_tokenizer -> AggregateTokenizer;
_setup_aggregate_tokenizer -> open_dict;
_setup_monolingual_tokenizer -> to_container;
_setup_monolingual_tokenizer -> pop;
_setup_monolingual_tokenizer -> lower;
_setup_monolingual_tokenizer -> _cleanup_aggregate_config_and_artifacts_if_needed;
_setup_monolingual_tokenizer -> info;
_setup_monolingual_tokenizer -> hasattr;
_setup_monolingual_tokenizer -> ValueError;
_setup_monolingual_tokenizer -> register_artifact;
_setup_monolingual_tokenizer -> range;
_setup_monolingual_tokenizer -> len;
_setup_monolingual_tokenizer -> AutoTokenizer;
_setup_monolingual_tokenizer -> format;
_setup_monolingual_tokenizer -> get;
_setup_monolingual_tokenizer -> join;
_setup_monolingual_tokenizer -> from_config_dict;
_setup_monolingual_tokenizer -> SentencePieceTokenizer;
_setup_monolingual_tokenizer -> ids_to_tokens;
_setup_monolingual_tokenizer -> open_dict;
_cleanup_aggregate_config_and_artifacts_if_needed -> hasattr;
_cleanup_aggregate_config_and_artifacts_if_needed -> list;
_cleanup_aggregate_config_and_artifacts_if_needed -> open_dict;
_cleanup_aggregate_config_and_artifacts_if_needed -> pop;
_cleanup_aggregate_config_and_artifacts_if_needed -> keys;
_cleanup_aggregate_config_and_artifacts_if_needed -> startswith;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> hasattr;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> pop;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> list;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> open_dict;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> keys;
_cleanup_monolingual_and_aggregate_config_and_artifacts_if_needed -> startswith;
_make_tokenizer -> lower;
_make_tokenizer -> get;
_make_tokenizer -> info;
_make_tokenizer -> ValueError;
_make_tokenizer -> register_artifact;
_make_tokenizer -> SentencePieceTokenizer;
_make_tokenizer -> range;
_make_tokenizer -> len;
_make_tokenizer -> AutoTokenizer;
_make_tokenizer -> format;
_make_tokenizer -> join;
_make_tokenizer -> ids_to_tokens;
_make_tokenizer -> pop;
save_tokenizers -> hasattr;
save_tokenizers -> RuntimeError;
save_tokenizers -> _extract_tokenizer_from_config;
save_tokenizers -> get;
save_tokenizers -> join;
_extract_tokenizer_from_config -> items;
_extract_tokenizer_from_config -> exists;
_extract_tokenizer_from_config -> makedirs;
_extract_tokenizer_from_config -> len;
_extract_tokenizer_from_config -> debug;
_extract_tokenizer_from_config -> AppState;
_extract_tokenizer_from_config -> open;
_extract_tokenizer_from_config -> isinstance;
_extract_tokenizer_from_config -> copy2;
_extract_tokenizer_from_config -> info;
_extract_tokenizer_from_config -> startswith;
_extract_tokenizer_from_config -> append;
_extract_tokenizer_from_config -> hasattr;
_extract_tokenizer_from_config -> ValueError;
_extract_tokenizer_from_config -> get_model_metadata_from_guid;
_extract_tokenizer_from_config -> close;
_extract_tokenizer_from_config -> extract;
_extract_tokenizer_from_config -> rename;
_extract_tokenizer_from_config -> getmembers;
_extract_tokenizer_from_config -> split;
_extract_tokenizer_from_config -> join;
change_conv_asr_se_context_window -> change_conv_asr_se_context_window;
change_conv_asr_se_context_window -> info;
change_conv_asr_se_context_window -> isinstance;
change_conv_asr_se_context_window -> _update_se_context_window;
change_conv_asr_se_context_window -> hasattr;
change_conv_asr_se_context_window -> open_dict;
cache_aware_stream_step -> self;
cache_aware_stream_step -> streaming_post_process;
cache_aware_stream_step -> setup_streaming_params;
cache_aware_stream_step -> new_full;
cache_aware_stream_step -> size;
transcribe_simulate_cache_aware_streaming -> no_grad;
transcribe_simulate_cache_aware_streaming -> _setup_streaming_transcribe_dataloader;
transcribe_simulate_cache_aware_streaming -> zip;
transcribe_simulate_cache_aware_streaming -> ValueError;
transcribe_simulate_cache_aware_streaming -> isinstance;
transcribe_simulate_cache_aware_streaming -> NotImplementedError;
transcribe_simulate_cache_aware_streaming -> iter;
transcribe_simulate_cache_aware_streaming -> len;
transcribe_simulate_cache_aware_streaming -> get_initial_cache_state;
transcribe_simulate_cache_aware_streaming -> enumerate;
transcribe_simulate_cache_aware_streaming -> append;
transcribe_simulate_cache_aware_streaming -> cat;
transcribe_simulate_cache_aware_streaming -> Hypothesis;
transcribe_simulate_cache_aware_streaming -> inference_mode;
transcribe_simulate_cache_aware_streaming -> conformer_stream_step;
transcribe_simulate_cache_aware_streaming -> type;
transcribe_simulate_cache_aware_streaming -> is_buffer_empty;
transcribe_simulate_cache_aware_streaming -> cpu;
_setup_streaming_transcribe_dataloader -> CacheAwareStreamingAudioBuffer;
_setup_streaming_transcribe_dataloader -> enumerate;
_setup_streaming_transcribe_dataloader -> append_audio_file;
_setup_streaming_transcribe_dataloader -> info;
_setup_streaming_transcribe_dataloader -> reset_buffer;
_setup_streaming_transcribe_dataloader -> len;
to_numpy -> numpy;
to_numpy -> cpu;
to_numpy -> detach;
get_value_from_transcription_config -> hasattr;
get_value_from_transcription_config -> getattr;
get_value_from_transcription_config -> debug;
get_item -> tensor;
get_item -> warning;
get_item -> numpy;
get_item -> AudioSegment;
get_item -> perturb;
get_item -> to;
transcribe_generator -> TranscribeConfig;
transcribe_generator -> hasattr;
transcribe_generator -> ValueError;
transcribe_generator -> InternalTranscribeConfig;
transcribe_generator -> _transcribe_on_begin;
transcribe_generator -> _transcribe_on_end;
transcribe_generator -> isinstance;
transcribe_generator -> TemporaryDirectory;
transcribe_generator -> tqdm;
transcribe_generator -> _transcribe_input_processing;
transcribe_generator -> move_data_to_device;
transcribe_generator -> _transcribe_forward;
transcribe_generator -> _transcribe_output_processing;
_transcribe_input_processing -> isinstance;
_transcribe_input_processing -> list;
_transcribe_input_processing -> _transcribe_input_manifest_processing;
_transcribe_input_processing -> _setup_transcribe_dataloader;
_transcribe_input_processing -> len;
_transcribe_input_processing -> ValueError;
_transcribe_input_processing -> endswith;
_transcribe_input_processing -> read_manifest;
_transcribe_input_processing -> any;
_transcribe_input_processing -> _transcribe_input_tensor_processing;
_transcribe_input_processing -> _setup_transcribe_tensor_dataloader;
_transcribe_input_processing -> as_tensor;
_transcribe_input_processing -> type;
_transcribe_input_tensor_processing -> get_value_from_transcription_config;
_transcribe_input_tensor_processing -> hasattr;
_transcribe_input_tensor_processing -> RuntimeError;
_setup_transcribe_tensor_dataloader -> TranscriptionTensorDataset;
_setup_transcribe_tensor_dataloader -> DataLoader;
_setup_transcribe_tensor_dataloader -> hasattr;
_setup_transcribe_tensor_dataloader -> info;
_setup_transcribe_tensor_dataloader -> partial;
_setup_transcribe_tensor_dataloader -> format;
rnnt_loss_cpu -> max;
rnnt_loss_cpu -> get_workspace_size;
rnnt_loss_cpu -> zeros;
rnnt_loss_cpu -> flatten_tensor;
rnnt_loss_cpu -> CPURNNT;
rnnt_loss_cpu -> cpu_count;
rnnt_loss_cpu -> RuntimeError;
rnnt_loss_cpu -> score_forward;
rnnt_loss_cpu -> cost_and_grad;
flatten_tensor -> view;
score_forward -> range;
score_forward -> CpuRNNT_index;
score_forward -> CpuRNNT_metadata;
score_forward -> compute_alphas;
score_forward -> compute_cost_and_score;
cost_and_grad -> range;
cost_and_grad -> cost_and_grad_kernel;
cost_and_grad -> compute_cost_and_score;
rnnt_loss_gpu -> hasattr;
rnnt_loss_gpu -> max;
rnnt_loss_gpu -> get_workspace_size;
rnnt_loss_gpu -> select_device;
rnnt_loss_gpu -> zeros;
rnnt_loss_gpu -> flatten_tensor;
rnnt_loss_gpu -> GPURNNT;
rnnt_loss_gpu -> external_stream;
rnnt_loss_gpu -> default_stream;
rnnt_loss_gpu -> cpu_count;
rnnt_loss_gpu -> RuntimeError;
rnnt_loss_gpu -> score_forward;
rnnt_loss_gpu -> cost_and_grad;
rnnt_loss_gpu -> current_stream;
tdt_loss_gpu -> hasattr;
tdt_loss_gpu -> max;
tdt_loss_gpu -> get_workspace_size;
tdt_loss_gpu -> select_device;
tdt_loss_gpu -> zeros;
tdt_loss_gpu -> range;
tdt_loss_gpu -> flatten_tensor;
tdt_loss_gpu -> GPUTDT;
tdt_loss_gpu -> external_stream;
tdt_loss_gpu -> default_stream;
tdt_loss_gpu -> cpu_count;
tdt_loss_gpu -> RuntimeError;
tdt_loss_gpu -> len;
tdt_loss_gpu -> score_forward;
tdt_loss_gpu -> cost_and_grad;
tdt_loss_gpu -> current_stream;
multiblank_rnnt_loss_gpu -> hasattr;
multiblank_rnnt_loss_gpu -> max;
multiblank_rnnt_loss_gpu -> get_workspace_size;
multiblank_rnnt_loss_gpu -> select_device;
multiblank_rnnt_loss_gpu -> zeros;
multiblank_rnnt_loss_gpu -> range;
multiblank_rnnt_loss_gpu -> flatten_tensor;
multiblank_rnnt_loss_gpu -> MultiblankGPURNNT;
multiblank_rnnt_loss_gpu -> external_stream;
multiblank_rnnt_loss_gpu -> default_stream;
multiblank_rnnt_loss_gpu -> cpu_count;
multiblank_rnnt_loss_gpu -> RuntimeError;
multiblank_rnnt_loss_gpu -> len;
multiblank_rnnt_loss_gpu -> score_forward;
multiblank_rnnt_loss_gpu -> cost_and_grad;
multiblank_rnnt_loss_gpu -> current_stream;
check_type -> TypeError;
check_type -> format;
check_contiguous -> is_contiguous;
check_contiguous -> ValueError;
check_contiguous -> format;
check_dim -> len;
check_dim -> ValueError;
check_dim -> format;
certify_inputs -> check_type;
certify_inputs -> check_contiguous;
certify_inputs -> check_dim;
certify_inputs -> max;
certify_inputs -> ValueError;
forward_pass -> zeros;
forward_pass -> range;
forward_pass -> logaddexp;
backward_pass -> zeros;
backward_pass -> reversed;
backward_pass -> range;
backward_pass -> logaddexp;
compute_gradient -> full;
compute_gradient -> enumerate;
compute_gradient -> exp;
compute_gradient -> float;
transduce -> forward_pass;
transduce -> backward_pass;
transduce -> compute_gradient;
transduce_batch -> zeros_like;
transduce_batch -> range;
transduce_batch -> int;
transduce_batch -> transduce;
transduce_batch -> fastemit_regularization;
transduce_batch -> append;
rnnt_loss -> apply;
rnnt_loss -> log_softmax;
multiblank_rnnt_loss -> apply;
multiblank_rnnt_loss -> log_softmax;
tdt_loss -> apply;
tdt_loss -> log_softmax;
log_sum_exp -> jit;
log_sum_exp -> log1p;
log_sum_exp -> exp;
log_sum_exp -> isinf;
div_up -> jit;
identity -> jit;
identity -> isinstance;
identity -> neural_type;
negate -> jit;
exponential -> jit;
exponential -> exp;
log_plus -> jit;
log_plus -> log1p;
log_plus -> maximum;
log_plus -> exp;
log_plus -> fabs;
copy_data_1d -> jit;
compute_costs_data -> jit;
compute_costs_data -> copy_data_1d;
compute_costs_data -> float32;
setup_probs -> range;
setup_probs -> idx;
cost_and_grad_kernel -> CpuRNNT_index;
cost_and_grad_kernel -> CpuRNNT_metadata;
cost_and_grad_kernel -> compute_alphas;
cost_and_grad_kernel -> compute_betas_and_grads;
cost_and_grad_kernel -> abs;
cost_and_grad_kernel -> print;
compute_alphas -> CpuRNNT_index;
compute_alphas -> range;
compute_alphas -> idx;
compute_alphas -> log_sum_exp;
compute_betas_and_grads -> CpuRNNT_index;
compute_betas_and_grads -> range;
compute_betas_and_grads -> float;
compute_betas_and_grads -> idx;
compute_betas_and_grads -> exp;
compute_betas_and_grads -> log_sum_exp;
compute_betas_and_grads -> log1p;
reduce_max -> ReduceHelper;
reduce_exp -> ReduceHelper;
compute_cost_and_score -> _prepare_workspace;
compute_cost_and_score -> log_softmax;
compute_cost_and_score -> min;
compute_cost_and_score -> synchronize;
compute_cost_and_score -> uniform;
_prepare_workspace -> _prepare_workspace;
_prepare_workspace -> super;
logp -> jit;
logp_duration -> jit;
compute_alphas_kernel -> jit;
compute_alphas_kernel -> syncthreads;
compute_alphas_kernel -> range;
compute_alphas_kernel -> logp;
compute_alphas_kernel -> log_sum_exp;
compute_betas_kernel -> jit;
compute_betas_kernel -> syncthreads;
compute_betas_kernel -> range;
compute_betas_kernel -> logp;
compute_betas_kernel -> log_sum_exp;
compute_grad_kernel -> jit;
compute_grad_kernel -> exp;
compute_grad_kernel -> min;
compute_grad_kernel -> max;
compute_grad_kernel -> log1p;
compute_multiblank_alphas_kernel -> jit;
compute_multiblank_alphas_kernel -> syncthreads;
compute_multiblank_alphas_kernel -> range;
compute_multiblank_alphas_kernel -> logp;
compute_multiblank_alphas_kernel -> log_sum_exp;
compute_multiblank_betas_kernel -> jit;
compute_multiblank_betas_kernel -> syncthreads;
compute_multiblank_betas_kernel -> range;
compute_multiblank_betas_kernel -> logp;
compute_multiblank_betas_kernel -> log_sum_exp;
compute_multiblank_grad_kernel -> jit;
compute_multiblank_grad_kernel -> exp;
compute_multiblank_grad_kernel -> range;
compute_multiblank_grad_kernel -> min;
compute_multiblank_grad_kernel -> max;
compute_multiblank_grad_kernel -> log1p;
compute_tdt_alphas_kernel -> jit;
compute_tdt_alphas_kernel -> syncthreads;
compute_tdt_alphas_kernel -> range;
compute_tdt_alphas_kernel -> log_sum_exp;
compute_tdt_alphas_kernel -> logp_duration;
compute_tdt_alphas_kernel -> logp;
compute_tdt_betas_kernel -> jit;
compute_tdt_betas_kernel -> syncthreads;
compute_tdt_betas_kernel -> range;
compute_tdt_betas_kernel -> logp_duration;
compute_tdt_betas_kernel -> logp;
compute_tdt_betas_kernel -> log_sum_exp;
compute_tdt_grad_kernel -> jit;
compute_tdt_grad_kernel -> exp;
compute_tdt_grad_kernel -> range;
compute_tdt_grad_kernel -> min;
compute_tdt_grad_kernel -> max;
compute_tdt_grad_kernel -> log1p;
CTAReduce -> jit;
CTAReduce -> syncthreads;
CTAReduce -> shfl_down_sync;
CTAReduce -> add;
CTAReduce -> maximum;
_reduce_rows -> jit;
_reduce_rows -> array;
_reduce_rows -> CTAReduce;
_reduce_rows -> exponential;
_reduce_rows -> identity;
_reduce_rows -> add;
_reduce_rows -> maximum;
_reduce_minus -> jit;
_reduce_minus -> array;
_reduce_minus -> CTAReduce;
_reduce_minus -> exponential;
_reduce_minus -> identity;
_reduce_minus -> add;
_reduce_minus -> log;
_reduce_minus -> maximum;
spec_augment_kernel -> jit;
spec_augment_kernel -> range;
launch_spec_augment_kernel -> external_stream;
launch_spec_augment_kernel -> tuple;
launch_spec_augment_kernel -> min;
launch_spec_augment_kernel -> synchronize;
launch_spec_augment_kernel -> current_stream;
launch_spec_augment_kernel -> float;
launch_spec_augment_kernel -> to;
splice_frames -> range;
splice_frames -> cat;
splice_frames -> append;
make_seq_mask_like -> lt;
make_seq_mask_like -> range;
make_seq_mask_like -> view;
make_seq_mask_like -> unsqueeze;
make_seq_mask_like -> transpose;
make_seq_mask_like -> repeat;
make_seq_mask_like -> dim;
make_seq_mask_like -> arange;
max_augmentation_length -> max_augmentation_length;
process_segment -> perturb;
process_segment -> tensor;
process_segment -> size;
process_segment -> ones;
process_segment -> tolist;
process_segment -> len;
process_segment -> item;
process_segment -> region_all_valid_or_control;
process_segment -> cpu;
process_segment -> zero_;
process_segment -> nonzero;
from_config -> get;
from_config -> cls;
from_config -> from_config;
from_config -> append;
from_config -> warning;
from_config -> perturbation;
from_config -> update;
get_seq_len -> to;
get_seq_len -> floor_divide;
get_seq_len -> div;
get_seq_len -> sum;
stft -> stft;
stft -> to;
stft -> size;
stft -> rearrange;
stft -> view_as_real;
stft -> transpose;
stft -> sqrt;
stft -> clamp;
stft -> atan2;
stft -> squeeze;
stft -> cat;
log_zero_guard_value_fn -> isinstance;
log_zero_guard_value_fn -> finfo;
log_zero_guard_value_fn -> ValueError;
_resolve_log_zero_guard_value -> isinstance;
_resolve_log_zero_guard_value -> getattr;
_resolve_log_zero_guard_value -> finfo;
_apply_dithering -> randn_like;
_apply_preemphasis -> pad;
_compute_output_lengths -> long;
_compute_output_lengths -> add;
_compute_output_lengths -> div;
_apply_pad_to -> pad;
_apply_log -> _resolve_log_zero_guard_value;
_apply_log -> log;
_apply_log -> clamp;
_apply_log -> ValueError;
_extract_spectrograms -> autocast;
_extract_spectrograms -> _mel_spec_extractor;
_apply_normalization -> make_seq_mask_like;
_apply_normalization -> masked_fill;
_apply_normalization -> _resolve_log_zero_guard_value;
_apply_normalization -> div;
_apply_normalization -> sqrt;
_apply_normalization -> ValueError;
_apply_normalization -> view;
_apply_normalization -> sum;
_apply_normalization -> clamp;
_apply_normalization -> pow;
_apply_normalization -> sub;
load_feature_from_file -> endswith;
load_feature_from_file -> numpy;
load_feature_from_file -> load;
load_feature_from_file -> _convert_samples_to_float32;
load_feature_from_file -> float;
_convert_samples_to_float32 -> astype;
_convert_samples_to_float32 -> iinfo;
_convert_samples_to_float32 -> TypeError;
read_one_audiosegment -> from_file;
read_one_audiosegment -> next;
read_one_audiosegment -> TypeError;
read_one_audiosegment -> sample;
read_one_audiosegment -> iter;
register_perturbation -> keys;
register_perturbation -> KeyError;
istft -> size;
istft -> rearrange;
istft -> istft;
istft -> stack;
istft -> view_as_complex;
istft -> cos;
istft -> sin;
phase_vocoder -> arange;
phase_vocoder -> zeros;
phase_vocoder -> angle;
phase_vocoder -> pad;
phase_vocoder -> _phase_vocoder_kernel;
phase_vocoder -> len;
get_one_noise_sample -> read_one_audiosegment;
perturb_with_input_noise -> uniform;
perturb_with_input_noise -> is_empty;
perturb_with_input_noise -> min;
perturb_with_input_noise -> gain_db;
perturb_with_input_noise -> ValueError;
perturb_with_input_noise -> warning;
perturb_with_input_noise -> subsegment;
perturb_with_input_noise -> randint;
perturb_with_input_noise -> float;
perturb_with_input_noise -> snr_mixer;
perturb_with_input_noise -> len;
perturb_with_input_noise -> concatenate_noise_sample;
perturb_with_input_noise -> sample;
perturb_with_input_noise -> isinstance;
is_empty -> sum;
is_empty -> mean;
is_empty -> len;
is_empty -> text_to_tokens;
is_empty -> strip;
subsegment -> int;
subsegment -> ValueError;
subsegment -> round;
perturb_with_foreground_noise -> uniform;
perturb_with_foreground_noise -> min;
perturb_with_foreground_noise -> randint;
perturb_with_foreground_noise -> range;
perturb_with_foreground_noise -> ValueError;
perturb_with_foreground_noise -> int;
perturb_with_foreground_noise -> copy;
perturb_with_foreground_noise -> round;
snr_mixer -> norm_audio_to_db;
norm_audio_to_db -> where;
norm_audio_to_db -> mean;
norm_audio_to_db -> isclose;
concatenate_noise_sample -> len;
concatenate_noise_sample -> append;
concatenate_noise_sample -> zeros;
concatenate_noise_sample -> int;
select_channels -> warning;
select_channels -> ValueError;
select_channels -> mean;
select_channels -> isinstance;
select_channels -> str;
select_channels -> max;
select_channels -> len;
select_channels -> squeeze;
get_samples -> SoundFile;
get_samples -> read;
get_samples -> transpose;
get_samples -> resample;
get_samples -> get_samples_synchronized;
normalize_db -> gain_db;
normalize_db -> max;
__eq__ -> any;
__eq__ -> type;
__eq__ -> isinstance;
__eq__ -> all;
__eq__ -> zip;
__eq__ -> hash;
__eq__ -> compare;
__eq__ -> UnavailableError;
__ne__ -> __eq__;
__ne__ -> UnavailableError;
__str__ -> join;
__str__ -> type;
__str__ -> str;
__str__ -> printoptions;
__str__ -> format;
__str__ -> __str__;
__str__ -> super;
__str__ -> isinf;
__str__ -> repr;
__str__ -> lower;
__str__ -> is_scripting;
__str__ -> items;
from_file_list -> isinstance;
from_file_list -> squeeze;
from_file_list -> cls;
from_file_list -> from_file;
from_file_list -> len;
from_file_list -> RuntimeError;
from_file_list -> concatenate;
segment_from_file -> cls;
segment_from_file -> SoundFile;
segment_from_file -> error;
segment_from_file -> ceil;
segment_from_file -> len;
segment_from_file -> seek;
segment_from_file -> read;
segment_from_file -> randint;
segment_from_file -> floor;
segment_from_file -> warning;
segment_from_file -> RuntimeError;
samples -> copy;
duration -> float;
rms_db -> mean;
rms_db -> log10;
offset -> float;
audio_file -> str;
_get_module_by_name -> split;
_get_module_by_name -> reduce;
replace_bn_with_fused_bn -> _get_module_by_name;
replace_bn_with_fused_bn -> isinstance;
replace_bn_with_fused_bn -> from_batchnorm;
replace_bn_with_fused_bn -> rsplit;
replace_bn_with_fused_bn -> setattr;
from_batchnorm -> isinstance;
from_batchnorm -> FusedBatchNorm1d;
from_batchnorm -> sqrt;
update_cache -> pad;
update_cache -> cat;
update_cache -> size;
post_init -> apply;
post_init -> transformer_weights_init;
glu -> chunk;
glu -> activation_func;
reset_parameters_conv -> no_grad;
reset_parameters_conv -> uniform_;
uniform_ -> hasattr;
uniform_ -> constant_std_init_;
uniform_ -> _no_grad_uniform_;
uniform_ -> ninf;
reset_parameters_ff -> no_grad;
reset_parameters_ff -> uniform_;
pack_hypotheses -> enumerate;
pack_hypotheses -> hasattr;
pack_hypotheses -> to;
pack_hypotheses -> tensor;
pack_hypotheses -> _states_to_device;
pack_hypotheses -> is_tensor;
pack_hypotheses -> long;
pack_hypotheses -> len;
pack_hypotheses -> isinstance;
_states_to_device -> is_tensor;
_states_to_device -> to;
_states_to_device -> isinstance;
_states_to_device -> tuple;
_states_to_device -> _states_to_device;
pack_wfst_hypotheses -> to;
pack_wfst_hypotheses -> enumerate;
pack_wfst_hypotheses -> append;
pack_wfst_hypotheses -> Hypothesis;
pack_wfst_hypotheses -> NBestHypotheses;
pack_wfst_hypotheses -> join;
pack_wfst_hypotheses -> list;
set_vocabulary -> enumerate;
set_decoding_type -> lower;
set_decoding_type -> ValueError;
set_decoding_type -> set_decoding_type;
set_decoding_type -> super;
default_beam_search -> no_grad;
default_beam_search -> to;
default_beam_search -> enumerate;
default_beam_search -> ValueError;
default_beam_search -> BeamSearchDecoderWithLM;
default_beam_search -> disable_checks;
default_beam_search -> forward;
default_beam_search -> NBestHypotheses;
default_beam_search -> append;
default_beam_search -> FileNotFoundError;
default_beam_search -> softmax;
default_beam_search -> Hypothesis;
default_beam_search -> exists;
default_beam_search -> chr;
default_beam_search -> max;
default_beam_search -> range;
default_beam_search -> cpu_count;
default_beam_search -> len;
default_beam_search -> ord;
default_beam_search -> min;
default_beam_search -> tensor;
default_beam_search -> list;
default_beam_search -> remove;
default_beam_search -> initialize_state;
default_beam_search -> sort_nbest;
default_beam_search -> int;
default_beam_search -> _states_to_device;
default_beam_search -> score_hypothesis;
default_beam_search -> log_softmax;
default_beam_search -> topk;
default_beam_search -> zip;
default_beam_search -> float;
default_beam_search -> sorted;
default_beam_search -> clone;
default_beam_search -> cat;
default_beam_search -> numpy;
default_beam_search -> joint;
default_beam_search -> deepcopy;
default_beam_search -> cpu;
default_beam_search -> unsqueeze;
default_beam_search -> NotImplementedError;
default_beam_search -> merge_duplicate_hypotheses;
default_beam_search -> sum;
default_beam_search -> cartesian_prod;
_pyctcdecode_beam_search -> no_grad;
_pyctcdecode_beam_search -> numpy;
_pyctcdecode_beam_search -> enumerate;
_pyctcdecode_beam_search -> ValueError;
_pyctcdecode_beam_search -> build_ctcdecoder;
_pyctcdecode_beam_search -> disable_checks;
_pyctcdecode_beam_search -> range;
_pyctcdecode_beam_search -> NBestHypotheses;
_pyctcdecode_beam_search -> append;
_pyctcdecode_beam_search -> ImportError;
_pyctcdecode_beam_search -> to;
_pyctcdecode_beam_search -> len;
_pyctcdecode_beam_search -> decode_beams;
_pyctcdecode_beam_search -> Hypothesis;
_pyctcdecode_beam_search -> text_to_ids;
_pyctcdecode_beam_search -> list;
_pyctcdecode_beam_search -> from_numpy;
flashlight_beam_search -> no_grad;
flashlight_beam_search -> to;
flashlight_beam_search -> enumerate;
flashlight_beam_search -> ValueError;
flashlight_beam_search -> FlashLightKenLMBeamSearchDecoder;
flashlight_beam_search -> disable_checks;
flashlight_beam_search -> forward;
flashlight_beam_search -> NBestHypotheses;
flashlight_beam_search -> append;
flashlight_beam_search -> FileNotFoundError;
flashlight_beam_search -> Hypothesis;
flashlight_beam_search -> tolist;
flashlight_beam_search -> exists;
_prepare_decoding_lm_wfst -> exists;
_prepare_decoding_lm_wfst -> ValueError;
_prepare_decoding_lm_wfst -> warning;
_prepare_decoding_lm_wfst -> FileNotFoundError;
_prepare_decoding_lm_wfst -> mkgraph_ctc_ov;
_prepare_decoding_lm_wfst -> endswith;
_prepare_decoding_lm_wfst -> info;
mkgraph_ctc_ov -> _kaldifst_maybe_raise;
mkgraph_ctc_ov -> info;
mkgraph_ctc_ov -> arpa2fst;
mkgraph_ctc_ov -> generate_lexicon_sentencepiece;
mkgraph_ctc_ov -> add_disambig_symbols;
mkgraph_ctc_ov -> make_lexicon_fst_no_silence;
mkgraph_ctc_ov -> arcsort;
mkgraph_ctc_ov -> compose;
mkgraph_ctc_ov -> determinize_star;
mkgraph_ctc_ov -> minimize_encoded;
mkgraph_ctc_ov -> build_topo;
mkgraph_ctc_ov -> add_tokenwords_;
mkgraph_ctc_ov -> int;
mkgraph_ctc_ov -> split;
mkgraph_ctc_ov -> write;
mkgraph_ctc_ov -> join;
mkgraph_ctc_ov -> str;
mkgraph_ctc_ov -> ValueError;
mkgraph_ctc_ov -> keys;
mkgraph_ctc_ov -> inference_mode;
mkgraph_ctc_ov -> from_openfst;
mkgraph_ctc_ov -> arc_sort;
mkgraph_ctc_ov -> from_str;
mkgraph_ctc_ov -> strip;
mkgraph_ctc_ov -> to_str;
mkgraph_ctc_ov -> connect;
mkgraph_ctc_ov -> save;
mkgraph_ctc_ov -> get_vocab;
mkgraph_ctc_ov -> items;
mkgraph_ctc_ov -> remove_epsilon;
mkgraph_ctc_ov -> as_dict;
_riva_decoding -> no_grad;
_riva_decoding -> decode;
_riva_decoding -> _prepare_decoding_lm_wfst;
_riva_decoding -> RivaGpuWfstDecoder;
_riva_decoding -> to;
_riva_decoding -> isinstance;
_riva_decoding -> find;
_riva_decoding -> startswith;
_riva_decoding -> ValueError;
_riva_decoding -> kaldifst_importer;
_riva_decoding -> read;
kaldifst_importer -> _kaldifst_maybe_raise;
_k2_decoding -> no_grad;
_k2_decoding -> decode;
_k2_decoding -> _prepare_decoding_lm_wfst;
_k2_decoding -> K2WfstDecoder;
_k2_decoding -> to;
_k2_decoding -> isinstance;
_k2_decoding -> get;
_k2_decoding -> inference_mode;
_k2_decoding -> load_graph;
_k2_decoding -> ValueError;
_init_confidence -> structured;
_init_confidence -> get;
_init_confidence -> get_confidence_aggregation_bank;
_init_confidence -> ConfidenceConfig;
_init_confidence -> ConfidenceMethodConfig;
compute_ctc_timestamps -> _compute_offsets;
compute_ctc_timestamps -> enumerate;
compute_ctc_timestamps -> _refine_timestamps;
compute_ctc_timestamps -> any;
compute_ctc_timestamps -> decode_tokens_to_str;
compute_ctc_timestamps -> sub;
compute_ctc_timestamps -> len;
compute_ctc_timestamps -> ValueError;
compute_ctc_timestamps -> _get_segment_offsets;
compute_ctc_timestamps -> _get_word_offsets_chars;
compute_ctc_timestamps -> _get_word_offsets_subwords_sentencepiece;
compute_ctc_timestamps -> list;
_aggregate_token_confidence -> _aggregate_token_confidence_chars;
_aggregate_token_confidence -> split;
_aggregate_token_confidence -> decode_tokens_to_str;
_aggregate_token_confidence -> _aggregate_token_confidence_subwords_sentencepiece;
_aggregate_token_confidence -> NotImplementedError;
_compute_offsets -> cumsum;
_compute_offsets -> concatenate;
_compute_offsets -> list;
_compute_offsets -> max;
_compute_offsets -> filter;
_compute_offsets -> len;
_compute_offsets -> asarray;
_compute_offsets -> zip;
_compute_offsets -> range;
_compute_offsets -> isinstance;
_compute_offsets -> item;
_refine_timestamps -> enumerate;
_get_segment_offsets -> enumerate;
_get_segment_offsets -> clear;
_get_segment_offsets -> warning;
_get_segment_offsets -> append;
_get_segment_offsets -> intersection;
_get_segment_offsets -> join;
_get_segment_offsets -> set;
_get_word_offsets_chars -> enumerate;
_get_word_offsets_chars -> append;
_get_word_offsets_chars -> len;
_get_word_offsets_subwords_sentencepiece -> enumerate;
_get_word_offsets_subwords_sentencepiece -> decode_tokens_to_str;
_get_word_offsets_subwords_sentencepiece -> len;
_get_word_offsets_subwords_sentencepiece -> clear;
_get_word_offsets_subwords_sentencepiece -> decode_ids_to_tokens;
_get_word_offsets_subwords_sentencepiece -> append;
_get_word_offsets_subwords_sentencepiece -> int;
_get_word_offsets_subwords_sentencepiece -> strip;
preserve_alignments -> hasattr;
compute_timestamps -> hasattr;
preserve_frame_confidence -> hasattr;
_aggregate_token_confidence_chars -> len;
_aggregate_token_confidence_chars -> append;
_aggregate_token_confidence_chars -> _aggregate_confidence;
_aggregate_token_confidence_subwords_sentencepiece -> len;
_aggregate_token_confidence_subwords_sentencepiece -> enumerate;
_aggregate_token_confidence_subwords_sentencepiece -> RuntimeError;
_aggregate_token_confidence_subwords_sentencepiece -> decode_tokens_to_str;
_aggregate_token_confidence_subwords_sentencepiece -> append;
_aggregate_token_confidence_subwords_sentencepiece -> decode_ids_to_tokens;
_aggregate_token_confidence_subwords_sentencepiece -> _aggregate_confidence;
_aggregate_token_confidence_subwords_sentencepiece -> int;
_aggregate_token_confidence_subwords_sentencepiece -> join;
_greedy_decode_logprobs -> no_grad;
_greedy_decode_logprobs -> Hypothesis;
_greedy_decode_logprobs -> cpu;
_greedy_decode_logprobs -> max;
_greedy_decode_logprobs -> tolist;
_greedy_decode_logprobs -> sum;
_greedy_decode_logprobs -> _get_confidence;
_greedy_decode_logprobs -> clone;
_greedy_decode_logprobs -> nonzero;
_get_confidence -> tolist;
_get_confidence -> _get_confidence_tensor;
_greedy_decode_labels -> no_grad;
_greedy_decode_labels -> Hypothesis;
_greedy_decode_labels -> cpu;
_greedy_decode_labels -> tolist;
_greedy_decode_labels -> ValueError;
_greedy_decode_labels -> nonzero;
_greedy_decode_labels_batched -> no_grad;
_greedy_decode_labels_batched -> expand;
_greedy_decode_labels_batched -> logical_and;
_greedy_decode_labels_batched -> cpu;
_greedy_decode_labels_batched -> range;
_greedy_decode_labels_batched -> Hypothesis;
_greedy_decode_labels_batched -> tolist;
_greedy_decode_labels_batched -> append;
_greedy_decode_labels_batched -> unsqueeze;
_greedy_decode_labels_batched -> ValueError;
_greedy_decode_labels_batched -> arange;
_greedy_decode_labels_batched -> nonzero;
_greedy_decode_logprobs_batched -> no_grad;
_greedy_decode_logprobs_batched -> max;
_greedy_decode_logprobs_batched -> expand;
_greedy_decode_logprobs_batched -> logical_and;
_greedy_decode_logprobs_batched -> sum;
_greedy_decode_logprobs_batched -> cpu;
_greedy_decode_logprobs_batched -> range;
_greedy_decode_logprobs_batched -> Hypothesis;
_greedy_decode_logprobs_batched -> tolist;
_greedy_decode_logprobs_batched -> append;
_greedy_decode_logprobs_batched -> unsqueeze;
_greedy_decode_logprobs_batched -> where;
_greedy_decode_logprobs_batched -> _get_confidence;
_greedy_decode_logprobs_batched -> clone;
_greedy_decode_logprobs_batched -> arange;
_greedy_decode_logprobs_batched -> nonzero;
create_outer_for_loop_kernel -> run_nvrtc;
run_nvrtc -> nvrtcCreateProgram;
run_nvrtc -> assert_drv;
run_nvrtc -> nvrtcCompileProgram;
run_nvrtc -> nvrtcGetProgramLogSize;
run_nvrtc -> nvrtcGetProgramLog;
run_nvrtc -> nvrtcGetPTXSize;
run_nvrtc -> nvrtcGetPTX;
run_nvrtc -> array;
run_nvrtc -> cuModuleLoadData;
run_nvrtc -> cuModuleGetFunction;
run_nvrtc -> encode;
run_nvrtc -> len;
create_inner_while_loop_kernel -> run_nvrtc;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> cuDriverGetVersion;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> is_available;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> EnvironmentError;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> Version;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> ImportError;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> ModuleNotFoundError;
check_cuda_python_cuda_graphs_conditional_nodes_supported -> cuGetErrorString;
_reinitialize -> max;
_reinitialize -> zeros;
_reinitialize -> tensor;
_reinitialize -> CUDAGraph;
_reinitialize -> Stream;
_reinitialize -> stream;
_reinitialize -> inference_mode;
_reinitialize -> "graph";
_reinitialize -> initialize_state;
_reinitialize -> full;
_reinitialize -> cu_call;
_reinitialize -> create_outer_for_loop_kernel;
_reinitialize -> array;
_reinitialize -> copy_;
_reinitialize -> fill_;
_reinitialize -> _greedy_decode_blank_as_pad_loop_frames;
_reinitialize -> cudaStreamGetCaptureInfo;
_reinitialize -> cudaGraphConditionalHandleCreate;
_reinitialize -> with_conditional_node;
_reinitialize -> index_select;
_reinitialize -> ge;
_reinitialize -> create_inner_while_loop_kernel;
_reinitialize -> reshape;
_reinitialize -> data_ptr;
_reinitialize -> getPtr;
_reinitialize -> unsqueeze;
_reinitialize -> _pred_step;
_reinitialize -> where;
_reinitialize -> index_copy_;
_reinitialize -> logical_or_;
_reinitialize -> batch_replace_states_mask;
_reinitialize -> any;
_reinitialize -> current_stream;
_reinitialize -> _joint_step;
_reinitialize -> contiguous;
_reinitialize -> transpose;
cu_call -> Exception;
cu_call -> tuple;
_greedy_decode_blank_as_pad_loop_frames -> range;
_greedy_decode_blank_as_pad_loop_frames -> NotImplementedError;
_greedy_decode_blank_as_pad_loop_frames -> inference_mode;
_greedy_decode_blank_as_pad_loop_frames -> full;
_greedy_decode_blank_as_pad_loop_frames -> max;
_greedy_decode_blank_as_pad_loop_frames -> batch_select_state;
_greedy_decode_blank_as_pad_loop_frames -> Hypothesis;
_greedy_decode_blank_as_pad_loop_frames -> narrow;
_greedy_decode_blank_as_pad_loop_frames -> mul_;
_greedy_decode_blank_as_pad_loop_frames -> clone;
_greedy_decode_blank_as_pad_loop_frames -> bitwise_or_;
_greedy_decode_blank_as_pad_loop_frames -> all;
_greedy_decode_blank_as_pad_loop_frames -> _pred_step;
_greedy_decode_blank_as_pad_loop_frames -> _joint_step;
_greedy_decode_blank_as_pad_loop_frames -> float;
_greedy_decode_blank_as_pad_loop_frames -> to;
_greedy_decode_blank_as_pad_loop_frames -> enumerate;
_greedy_decode_blank_as_pad_loop_frames -> _get_confidence;
_greedy_decode_blank_as_pad_loop_frames -> nonzero;
_greedy_decode_blank_as_pad_loop_frames -> view;
_greedy_decode_blank_as_pad_loop_frames -> len;
_greedy_decode_blank_as_pad_loop_frames -> batch_copy_states;
_greedy_decode_blank_as_pad_loop_frames -> append;
with_conditional_node -> cu_call;
with_conditional_node -> cuLaunchKernel;
with_conditional_node -> CUgraphNodeParams;
with_conditional_node -> Stream;
with_conditional_node -> current_stream;
with_conditional_node -> set_stream;
with_conditional_node -> cudaStreamEndCapture;
with_conditional_node -> cudaStreamGetCaptureInfo;
with_conditional_node -> Version;
with_conditional_node -> cuCtxGetCurrent;
with_conditional_node -> cuGraphAddNode;
with_conditional_node -> cudaStreamUpdateCaptureDependencies;
with_conditional_node -> cudaStreamBeginCaptureToGraph;
with_conditional_node -> CUgraph;
with_conditional_node -> len;
_pred_step -> no_grad;
_pred_step -> isinstance;
_pred_step -> predict;
_pred_step -> label_collate;
_pred_step -> long;
_joint_step -> no_grad;
_joint_step -> joint;
_joint_step -> log_softmax;
_joint_step -> len;
tds_uniform_ -> _calculate_correct_fan;
tds_uniform_ -> sqrt;
tds_uniform_ -> no_grad;
tds_uniform_ -> uniform_;
tds_normal_ -> _calculate_correct_fan;
tds_normal_ -> sqrt;
tds_normal_ -> no_grad;
tds_normal_ -> normal_;
ones_ -> constant_std_init_;
ones_ -> ninf;
ones_ -> _no_grad_fill_;
kaiming_uniform_ -> _calculate_correct_fan;
kaiming_uniform_ -> calculate_gain;
kaiming_uniform_ -> _inf_fan_adjust_kaiming;
kaiming_uniform_ -> warn;
kaiming_uniform_ -> sqrt;
kaiming_uniform_ -> no_grad;
kaiming_uniform_ -> uniform_;
compute_new_kernel_size -> max;
compute_new_kernel_size -> int;
get_same_padding -> ValueError;
get_asymtric_padding -> get_same_padding;
get_asymtric_padding -> ValueError;
get_asymtric_padding -> warning;
_se_pool_step_script_infer -> sum;
_se_pool_step_script_infer -> to;
_se_pool_step_script_train -> to;
_se_pool_step_script_train -> sum;
_se_pool_step_script_train -> randint;
_masked_conv_init_lens -> arange;
_masked_conv_init_lens -> tensor;
mask_input -> size;
mask_input -> to;
mask_input -> unsqueeze;
change_context_window -> hasattr;
change_context_window -> info;
_se_pool_step -> sum;
_se_pool_step -> type;
_se_pool_step -> _se_pool_step_script_train;
_se_pool_step -> _se_pool_step_script_infer;
_get_conv_bn_layer -> append;
_get_conv_bn_layer -> _get_conv;
_get_conv_bn_layer -> GroupNorm;
_get_conv_bn_layer -> GroupShuffle;
_get_conv_bn_layer -> ValueError;
_get_conv_bn_layer -> BatchNorm1d;
_get_act_dropout_layer -> Hardtanh;
_get_act_dropout_layer -> Dropout;
_get_conv -> MaskedConv1d;
_get_conv -> QuantConv1d;
_get_conv -> ImportError;
_get_conv -> Conv1d;
get_dropout_mask -> dropout;
get_dropout_mask -> sum;
format_hypotheses -> cpu;
format_hypotheses -> zip;
format_hypotheses -> len;
format_hypotheses -> isinstance;
format_hypotheses -> detach;
format_hypotheses -> all;
change_strategy -> ValueError;
change_strategy -> TransformerAEDGreedyInfer;
change_strategy -> get;
change_strategy -> TransformerAEDBeamInfer;
decode_tokens_to_lang -> NotImplementedError;
decode_tokens_to_lang -> ids_to_lang;
decode_ids_to_langs -> NotImplementedError;
decode_ids_to_langs -> ids_to_text_and_langs;
ids_to_lang -> items;
ids_to_lang -> get;
ids_to_text_and_langs -> replace;
ids_to_text_and_langs -> strip;
ids_to_text_and_langs -> append;
ids_to_text_and_langs -> ids_to_tokens;
greedy_search -> initialize_state;
greedy_search -> Hypothesis;
greedy_search -> score_hypothesis;
greedy_search -> range;
greedy_search -> int;
greedy_search -> len;
greedy_search -> _states_to_device;
greedy_search -> log_softmax;
greedy_search -> max;
greedy_search -> item;
greedy_search -> float;
greedy_search -> append;
greedy_search -> numpy;
greedy_search -> joint;
greedy_search -> to;
greedy_search -> tensor;
greedy_search -> cpu;
forward_qkv -> size;
forward_qkv -> view;
forward_qkv -> transpose;
forward_qkv -> linear_q;
forward_qkv -> linear_k;
forward_qkv -> linear_v;
forward_attention -> size;
forward_attention -> dropout;
forward_attention -> matmul;
forward_attention -> reshape;
forward_attention -> linear_out;
forward_attention -> unsqueeze;
forward_attention -> masked_fill;
forward_attention -> softmax;
forward_attention -> transpose;
avoid_float16_autocast_context -> is_autocast_enabled;
avoid_float16_autocast_context -> is_bf16_supported;
avoid_float16_autocast_context -> nullcontext;
avoid_float16_autocast_context -> get_autocast_gpu_dtype;
avoid_float16_autocast_context -> is_scripting;
avoid_float16_autocast_context -> is_tracing;
avoid_float16_autocast_context -> autocast;
rel_shift -> size;
rel_shift -> pad;
rel_shift -> view;
sliding_chunks_matmul_qk -> size;
sliding_chunks_matmul_qk -> reshape;
sliding_chunks_matmul_qk -> _chunk_overlap;
sliding_chunks_matmul_qk -> einsum;
sliding_chunks_matmul_qk -> _skew;
sliding_chunks_matmul_qk -> new_empty;
sliding_chunks_matmul_qk -> view;
sliding_chunks_matmul_qk -> mask_invalid_locations;
_get_global_attn_indices -> sum;
_get_global_attn_indices -> max;
_get_global_attn_indices -> nonzero;
_get_global_attn_indices -> arange;
_get_global_attn_indices -> unsqueeze;
_get_global_attn_indices -> long;
_compute_attn_output_with_global_indices -> transpose;
_compute_attn_output_with_global_indices -> new_zeros;
_compute_attn_output_with_global_indices -> narrow;
_compute_attn_output_with_global_indices -> contiguous;
_compute_attn_output_with_global_indices -> sliding_chunks_matmul_pv;
_compute_attn_output_with_global_indices -> matmul;
_compute_attn_output_with_global_indices -> clone;
_compute_attn_output_with_global_indices -> size;
sliding_chunks_matmul_pv -> size;
sliding_chunks_matmul_pv -> reshape;
sliding_chunks_matmul_pv -> pad;
sliding_chunks_matmul_pv -> stride;
sliding_chunks_matmul_pv -> as_strided;
sliding_chunks_matmul_pv -> _skew2;
sliding_chunks_matmul_pv -> einsum;
sliding_chunks_matmul_pv -> transpose;
sliding_chunks_matmul_pv -> view;
_compute_out_global_to_all -> reshape;
_compute_out_global_to_all -> transpose;
_compute_out_global_to_all -> new_zeros;
_compute_out_global_to_all -> bmm;
_compute_out_global_to_all -> view;
_compute_out_global_to_all -> masked_fill;
_compute_out_global_to_all -> dropout;
_compute_out_global_to_all -> finfo;
_compute_out_global_to_all -> softmax;
_compute_global_key_attn -> new_zeros;
_compute_global_key_attn -> einsum;
_compute_global_key_attn -> transpose;
_compute_global_key_attn -> finfo;
_skew -> pad;
_skew -> view;
_skew -> size;
_skew2 -> size;
_skew2 -> pad;
_skew2 -> view;
_chunk_overlap -> view;
_chunk_overlap -> list;
_chunk_overlap -> as_strided;
_chunk_overlap -> size;
_chunk_overlap -> stride;
_get_invalid_locations_mask -> lru_cache;
_get_invalid_locations_mask -> range;
_get_invalid_locations_mask -> stack;
_get_invalid_locations_mask -> to;
_get_invalid_locations_mask -> zeros;
_get_invalid_locations_mask -> append;
_get_invalid_locations_mask -> bool;
_get_invalid_locations_mask -> flip;
mask_invalid_locations -> _get_invalid_locations_mask;
mask_invalid_locations -> size;
mask_invalid_locations -> expand;
mask_invalid_locations -> masked_fill_;
mask_invalid_locations -> float;
create_pe -> size;
create_pe -> zeros;
create_pe -> exp;
create_pe -> sin;
create_pe -> cos;
create_pe -> to;
create_pe -> hasattr;
create_pe -> register_buffer;
create_pe -> arange;
create_pe -> unsqueeze;
create_pe -> log;
sort_nbest -> sorted;
sort_nbest -> len;
time_sync_decoding -> list;
time_sync_decoding -> remove;
time_sync_decoding -> min;
time_sync_decoding -> initialize_state;
time_sync_decoding -> range;
time_sync_decoding -> sort_nbest;
time_sync_decoding -> NotImplementedError;
time_sync_decoding -> zeros;
time_sync_decoding -> Hypothesis;
time_sync_decoding -> int;
time_sync_decoding -> batch_score_hypothesis;
time_sync_decoding -> log_softmax;
time_sync_decoding -> topk;
time_sync_decoding -> enumerate;
time_sync_decoding -> sorted;
time_sync_decoding -> batch_select_state;
time_sync_decoding -> len;
time_sync_decoding -> joint;
time_sync_decoding -> append;
time_sync_decoding -> index;
time_sync_decoding -> logaddexp;
time_sync_decoding -> zip;
time_sync_decoding -> stack;
time_sync_decoding -> deepcopy;
time_sync_decoding -> float;
time_sync_decoding -> clone;
time_sync_decoding -> tensor;
time_sync_decoding -> cpu;
align_length_sync_decoding -> list;
align_length_sync_decoding -> remove;
align_length_sync_decoding -> min;
align_length_sync_decoding -> int;
align_length_sync_decoding -> initialize_state;
align_length_sync_decoding -> range;
align_length_sync_decoding -> NotImplementedError;
align_length_sync_decoding -> zeros;
align_length_sync_decoding -> batch_select_state;
align_length_sync_decoding -> type;
align_length_sync_decoding -> Hypothesis;
align_length_sync_decoding -> enumerate;
align_length_sync_decoding -> sort_nbest;
align_length_sync_decoding -> append;
align_length_sync_decoding -> batch_score_hypothesis;
align_length_sync_decoding -> stack;
align_length_sync_decoding -> unsqueeze;
align_length_sync_decoding -> log_softmax;
align_length_sync_decoding -> topk;
align_length_sync_decoding -> recombine_hypotheses;
align_length_sync_decoding -> len;
align_length_sync_decoding -> zip;
align_length_sync_decoding -> sorted;
align_length_sync_decoding -> isinstance;
align_length_sync_decoding -> joint;
align_length_sync_decoding -> deepcopy;
align_length_sync_decoding -> float;
align_length_sync_decoding -> cpu;
align_length_sync_decoding -> tensor;
align_length_sync_decoding -> clone;
recombine_hypotheses -> index;
recombine_hypotheses -> logaddexp;
recombine_hypotheses -> append;
modified_adaptive_expansion_search -> min;
modified_adaptive_expansion_search -> initialize_state;
modified_adaptive_expansion_search -> batch_score_hypothesis;
modified_adaptive_expansion_search -> range;
modified_adaptive_expansion_search -> sort_nbest;
modified_adaptive_expansion_search -> NotImplementedError;
modified_adaptive_expansion_search -> zeros;
modified_adaptive_expansion_search -> Hypothesis;
modified_adaptive_expansion_search -> State;
modified_adaptive_expansion_search -> BeginSentenceWrite;
modified_adaptive_expansion_search -> unsqueeze;
modified_adaptive_expansion_search -> prefix_search;
modified_adaptive_expansion_search -> sorted;
modified_adaptive_expansion_search -> stack;
modified_adaptive_expansion_search -> resolve_joint_output;
modified_adaptive_expansion_search -> topk;
modified_adaptive_expansion_search -> select_k_expansions;
modified_adaptive_expansion_search -> enumerate;
modified_adaptive_expansion_search -> batch_select_state;
modified_adaptive_expansion_search -> len;
modified_adaptive_expansion_search -> append;
modified_adaptive_expansion_search -> deepcopy;
modified_adaptive_expansion_search -> float;
modified_adaptive_expansion_search -> int;
modified_adaptive_expansion_search -> compute_ngram_score;
modified_adaptive_expansion_search -> cpu;
modified_adaptive_expansion_search -> tensor;
modified_adaptive_expansion_search -> clone;
modified_adaptive_expansion_search -> log_softmax;
modified_adaptive_expansion_search -> view;
modified_adaptive_expansion_search -> joint;
modified_adaptive_expansion_search -> max;
modified_adaptive_expansion_search -> merge_duplicate_hypotheses;
modified_adaptive_expansion_search -> zip;
prefix_search -> enumerate;
prefix_search -> len;
prefix_search -> is_prefix;
prefix_search -> resolve_joint_output;
prefix_search -> range;
prefix_search -> logaddexp;
prefix_search -> float;
prefix_search -> compute_ngram_score;
prefix_search -> int;
prefix_search -> log_softmax;
prefix_search -> joint;
resolve_joint_output -> joint;
resolve_joint_output -> is_tensor;
resolve_joint_output -> log_softmax;
resolve_joint_output -> isinstance;
resolve_joint_output -> TypeError;
resolve_joint_output -> type;
select_k_expansions -> enumerate;
select_k_expansions -> max;
select_k_expansions -> sorted;
select_k_expansions -> filter;
select_k_expansions -> len;
select_k_expansions -> append;
select_k_expansions -> int;
select_k_expansions -> zip;
select_k_expansions -> float;
compute_ngram_score -> State;
compute_ngram_score -> BaseScore;
compute_ngram_score -> chr;
compute_ngram_score -> str;
compute_ngram_score -> log10;
is_prefix -> range;
is_prefix -> len;
is_prefix -> startswith;
to_hyps_list -> flatten_sort_;
to_hyps_list -> tolist;
to_hyps_list -> numpy;
to_hyps_list -> max;
to_hyps_list -> Hypothesis;
to_hyps_list -> detach;
to_hyps_list -> range;
to_hyps_list -> cpu;
to_nbest_hyps_list -> flatten_sort_;
to_nbest_hyps_list -> tolist;
to_nbest_hyps_list -> numpy;
to_nbest_hyps_list -> max;
to_nbest_hyps_list -> NBestHypotheses;
to_nbest_hyps_list -> detach;
to_nbest_hyps_list -> range;
to_nbest_hyps_list -> Hypothesis;
to_nbest_hyps_list -> cpu;
update_joint_fused_batch_size -> hasattr;
update_joint_fused_batch_size -> warning;
update_joint_fused_batch_size -> set_fused_batch_size;
update_joint_fused_batch_size -> info;
update_joint_fused_batch_size -> set_fuse_loss_wer;
compute_rnnt_timestamps -> _compute_offsets;
compute_rnnt_timestamps -> range;
compute_rnnt_timestamps -> deepcopy;
compute_rnnt_timestamps -> enumerate;
compute_rnnt_timestamps -> _refine_timestamps;
compute_rnnt_timestamps -> decode_tokens_to_str;
compute_rnnt_timestamps -> sub;
compute_rnnt_timestamps -> len;
compute_rnnt_timestamps -> ValueError;
compute_rnnt_timestamps -> max;
compute_rnnt_timestamps -> append;
compute_rnnt_timestamps -> sum;
compute_rnnt_timestamps -> _get_segment_offsets;
compute_rnnt_timestamps -> decode_ids_to_tokens;
compute_rnnt_timestamps -> _get_word_offsets_chars;
compute_rnnt_timestamps -> _get_word_offsets_subwords_sentencepiece;
compute_rnnt_timestamps -> int;
_compute_offsets_tdt -> isinstance;
_compute_offsets_tdt -> tolist;
_compute_offsets_tdt -> zip;
_compute_offsets_tdt -> cpu;
_refine_timestamps_tdt -> enumerate;
_joint_step_after_projection -> no_grad;
_joint_step_after_projection -> joint_after_projection;
_joint_step_after_projection -> log_softmax;
_joint_step_after_projection -> len;
_greedy_decode -> no_grad;
_greedy_decode -> Hypothesis;
_greedy_decode -> range;
_greedy_decode -> batch_select_state;
_greedy_decode -> narrow;
_greedy_decode -> isinstance;
_greedy_decode -> tolist;
_greedy_decode -> batch_concat_states;
_greedy_decode -> _states_to_device;
_greedy_decode -> _pred_step;
_greedy_decode -> max;
_greedy_decode -> item;
_greedy_decode -> append;
_greedy_decode -> len;
_greedy_decode -> label_collate;
_greedy_decode -> _joint_step;
_greedy_decode -> float;
_greedy_decode -> cpu;
_greedy_decode -> _get_confidence;
_greedy_decode -> to;
_greedy_decode -> tensor;
_greedy_decode -> _get_initial_states;
_greedy_decode -> ones;
_greedy_decode -> numpy;
_greedy_decode -> is_tensor;
_greedy_decode -> full;
_greedy_decode -> transpose;
_greedy_decode -> run_decoder_joint;
_greedy_decode -> all;
_greedy_decode -> from_numpy;
_greedy_decode -> view;
_greedy_decode -> astype;
_greedy_decode -> enumerate;
_greedy_decode -> type;
_greedy_decode -> nonzero;
_greedy_decode -> reshape;
_greedy_decode -> argmax;
_greedy_decode -> clone;
_greedy_decode -> copy;
_greedy_decode -> log_softmax;
_greedy_decode -> _get_confidence_tensor;
disable_cuda_graphs -> disable_cuda_graphs;
disable_cuda_graphs -> reset_cuda_graphs_state;
maybe_enable_cuda_graphs -> maybe_enable_cuda_graphs;
maybe_enable_cuda_graphs -> RNNTGreedyDecodeCudaGraph;
maybe_enable_cuda_graphs -> reset_cuda_graphs_state;
maybe_enable_cuda_graphs -> warning;
maybe_enable_cuda_graphs -> check_cuda_python_cuda_graphs_conditional_nodes_supported;
_greedy_decode_blank_as_pad_loop_labels -> inference_mode;
_greedy_decode_blank_as_pad_loop_labels -> _decoding_computer;
_greedy_decode_blank_as_pad_loop_labels -> batched_hyps_to_hypotheses;
_greedy_decode_blank_as_pad_loop_labels -> zip;
_greedy_decode_blank_as_pad_loop_labels -> NotImplementedError;
_greedy_decode_blank_as_pad_loop_labels -> batch_split_states;
batched_hyps_to_hypotheses -> Hypothesis;
batched_hyps_to_hypotheses -> tolist;
batched_hyps_to_hypotheses -> range;
batched_hyps_to_hypotheses -> cpu;
batched_hyps_to_hypotheses -> len;
batched_hyps_to_hypotheses -> unique_consecutive;
batched_hyps_to_hypotheses -> item;
batched_hyps_to_hypotheses -> clone;
batched_hyps_to_hypotheses -> empty;
batched_hyps_to_hypotheses -> append;
batched_hyps_to_hypotheses -> all;
_greedy_decode_masked -> full;
_greedy_decode_masked -> clone;
_greedy_decode_masked -> max;
_greedy_decode_masked -> range;
_greedy_decode_masked -> NotImplementedError;
_greedy_decode_masked -> Hypothesis;
_greedy_decode_masked -> inference_mode;
_greedy_decode_masked -> batch_select_state;
_greedy_decode_masked -> narrow;
_greedy_decode_masked -> mul_;
_greedy_decode_masked -> bitwise_or_;
_greedy_decode_masked -> all;
_greedy_decode_masked -> len;
_greedy_decode_masked -> _pred_step;
_greedy_decode_masked -> _joint_step;
_greedy_decode_masked -> float;
_greedy_decode_masked -> to;
_greedy_decode_masked -> enumerate;
_greedy_decode_masked -> _get_confidence;
_greedy_decode_masked -> nonzero;
_greedy_decode_masked -> view;
_greedy_decode_masked -> batch_copy_states;
_greedy_decode_masked -> append;
run_encoder -> NotImplementedError;
run_encoder -> hasattr;
run_encoder -> run;
run_encoder -> numpy;
run_encoder -> cpu;
run_encoder -> encoder;
_get_initial_states -> NotImplementedError;
_get_initial_states -> len;
_get_initial_states -> range;
_get_initial_states -> enumerate;
_get_initial_states -> append;
_get_initial_states -> zeros;
_get_initial_states -> hasattr;
_get_initial_states -> int;
run_decoder_joint -> NotImplementedError;
run_decoder_joint -> hasattr;
run_decoder_joint -> run;
run_decoder_joint -> zeros;
run_decoder_joint -> ones;
run_decoder_joint -> numpy;
run_decoder_joint -> len;
run_decoder_joint -> enumerate;
run_decoder_joint -> cpu;
run_decoder_joint -> decoder_joint;
_setup_blank_index -> NotImplementedError;
_setup_blank_index -> run_encoder;
_setup_blank_index -> _get_initial_states;
_setup_blank_index -> run_decoder_joint;
_setup_blank_index -> info;
_setup_blank_index -> hasattr;
_setup_blank_index -> append;
_setup_blank_index -> randn;
_setup_blank_index -> randint;
_setup_blank_index -> int;
_setup_blank_index -> len;
_setup_encoder_input_output_keys -> list;
_setup_decoder_joint_input_output_keys -> list;
_greedy_decode_blank_as_pad -> range;
_greedy_decode_blank_as_pad -> NotImplementedError;
_greedy_decode_blank_as_pad -> inference_mode;
_greedy_decode_blank_as_pad -> full;
_greedy_decode_blank_as_pad -> max;
_greedy_decode_blank_as_pad -> batch_select_state;
_greedy_decode_blank_as_pad -> Hypothesis;
_greedy_decode_blank_as_pad -> len;
_greedy_decode_blank_as_pad -> narrow;
_greedy_decode_blank_as_pad -> mul_;
_greedy_decode_blank_as_pad -> bitwise_or_;
_greedy_decode_blank_as_pad -> all;
_greedy_decode_blank_as_pad -> _pred_step;
_greedy_decode_blank_as_pad -> _joint_step;
_greedy_decode_blank_as_pad -> float;
_greedy_decode_blank_as_pad -> bitwise_and_;
_greedy_decode_blank_as_pad -> to;
_greedy_decode_blank_as_pad -> _get_confidence;
_greedy_decode_blank_as_pad -> nonzero;
_greedy_decode_blank_as_pad -> view;
_greedy_decode_blank_as_pad -> enumerate;
_greedy_decode_blank_as_pad -> batch_copy_states;
_greedy_decode_blank_as_pad -> append;
_greedy_decode_blank_as_pad -> clone;
force_cuda_graphs_mode -> CudaGraphsMode;
loop_labels_torch -> project_encoder;
loop_labels_torch -> BatchedHyps;
loop_labels_torch -> initialize_state;
loop_labels_torch -> BatchedAlignments;
loop_labels_torch -> arange;
loop_labels_torch -> full_like;
loop_labels_torch -> zeros_like;
loop_labels_torch -> empty_like;
loop_labels_torch -> any;
loop_labels_torch -> to;
loop_labels_torch -> get_init_states;
loop_labels_torch -> copy_;
loop_labels_torch -> predict;
loop_labels_torch -> project_prednet;
loop_labels_torch -> squeeze;
loop_labels_torch -> max;
loop_labels_torch -> minimum;
loop_labels_torch -> less;
loop_labels_torch -> logical_and;
loop_labels_torch -> ne;
loop_labels_torch -> batch_replace_states_mask;
loop_labels_torch -> unsqueeze;
loop_labels_torch -> advance;
loop_labels_torch -> where;
loop_labels_torch -> add_results_masked_;
loop_labels_torch -> add_results_masked_no_checks_;
loop_labels_torch -> joint_after_projection;
loop_labels_torch -> _get_confidence_tensor;
loop_labels_torch -> log_softmax;
loop_labels_torch -> argmax;
loop_labels_torch -> masked_fill_;
loop_labels_torch -> stack;
add_results_masked_ -> add_results_masked_no_checks_;
add_results_masked_ -> max;
add_results_masked_ -> _allocate_more;
add_results_masked_no_checks_ -> where;
add_results_masked_no_checks_ -> logical_and;
loop_labels_cuda_graphs -> project_encoder;
loop_labels_cuda_graphs -> is_autocast_enabled;
loop_labels_cuda_graphs -> copy_;
loop_labels_cuda_graphs -> fill_;
loop_labels_cuda_graphs -> to;
loop_labels_cuda_graphs -> need_reinit;
loop_labels_cuda_graphs -> _graph_reinitialize;
loop_labels_cuda_graphs -> replay;
loop_labels_cuda_graphs -> get_autocast_gpu_dtype;
loop_labels_cuda_graphs -> item;
loop_labels_cuda_graphs -> _before_outer_loop;
loop_labels_cuda_graphs -> NotImplementedError;
loop_labels_cuda_graphs -> _before_inner_loop_get_decoder_output;
loop_labels_cuda_graphs -> _before_inner_loop_get_joint_output;
loop_labels_cuda_graphs -> _after_inner_loop;
loop_labels_cuda_graphs -> _inner_loop_code;
_graph_reinitialize -> LoopLabelsState;
_graph_reinitialize -> initialize_state;
_graph_reinitialize -> predict;
_graph_reinitialize -> project_prednet;
_graph_reinitialize -> _warmup_for_cuda_graphs;
_graph_reinitialize -> unsqueeze;
_graph_reinitialize -> to;
_graph_reinitialize -> get_init_states;
_graph_reinitialize -> zeros;
_graph_reinitialize -> _full_graph_compile;
_graph_reinitialize -> max;
_graph_reinitialize -> _partial_graphs_compile;
_graph_reinitialize -> MALSDState;
_graph_reinitialize -> batch_replace_states_all;
_graph_reinitialize -> clone;
_graph_reinitialize -> empty;
_graph_reinitialize -> view;
_graph_reinitialize -> advance;
_before_outer_loop -> clear_;
_before_outer_loop -> batch_replace_states_all;
_before_outer_loop -> fill_;
_before_outer_loop -> sub;
_before_outer_loop -> greater;
_before_outer_loop -> any;
_before_outer_loop -> copy_;
_before_outer_loop -> initialize_state;
_before_outer_loop -> get_init_states;
_before_inner_loop_get_decoder_output -> predict;
_before_inner_loop_get_decoder_output -> batch_replace_states_all;
_before_inner_loop_get_decoder_output -> project_prednet;
_before_inner_loop_get_decoder_output -> copy_;
_before_inner_loop_get_decoder_output -> unsqueeze;
_before_inner_loop_get_decoder_output -> advance;
_before_inner_loop_get_decoder_output -> to;
_before_inner_loop_get_joint_output -> copy_;
_before_inner_loop_get_joint_output -> squeeze;
_before_inner_loop_get_joint_output -> max;
_before_inner_loop_get_joint_output -> eq;
_before_inner_loop_get_joint_output -> add_;
_before_inner_loop_get_joint_output -> minimum;
_before_inner_loop_get_joint_output -> less;
_before_inner_loop_get_joint_output -> logical_and;
_before_inner_loop_get_joint_output -> any;
_before_inner_loop_get_joint_output -> where;
_before_inner_loop_get_joint_output -> add_results_masked_no_checks_;
_before_inner_loop_get_joint_output -> joint_after_projection;
_before_inner_loop_get_joint_output -> to;
_before_inner_loop_get_joint_output -> unsqueeze;
_before_inner_loop_get_joint_output -> _get_confidence_tensor;
_before_inner_loop_get_joint_output -> log_softmax;
_before_inner_loop_get_joint_output -> argmax;
_before_inner_loop_get_joint_output -> masked_fill_;
_before_inner_loop_get_joint_output -> stack;
_after_inner_loop -> ne;
_after_inner_loop -> batch_replace_states_mask;
_after_inner_loop -> add_results_masked_no_checks_;
_after_inner_loop -> logical_and;
_after_inner_loop -> add_;
_after_inner_loop -> minimum;
_after_inner_loop -> less;
_after_inner_loop -> any;
_after_inner_loop -> where;
_inner_loop_code -> where;
_inner_loop_code -> squeeze;
_inner_loop_code -> max;
_inner_loop_code -> eq;
_inner_loop_code -> add_;
_inner_loop_code -> minimum;
_inner_loop_code -> less;
_inner_loop_code -> logical_and;
_inner_loop_code -> any;
_inner_loop_code -> add_results_masked_no_checks_;
_inner_loop_code -> joint_after_projection;
_inner_loop_code -> to;
_inner_loop_code -> unsqueeze;
_inner_loop_code -> _get_confidence_tensor;
_inner_loop_code -> log_softmax;
_inner_loop_code -> argmax;
_inner_loop_code -> masked_fill_;
_inner_loop_code -> stack;
_create_outer_while_loop_kernel -> run_nvrtc;
_create_inner_while_loop_kernel -> run_nvrtc;
_warmup_for_cuda_graphs -> fill_;
_warmup_for_cuda_graphs -> Stream;
_warmup_for_cuda_graphs -> wait_stream;
_warmup_for_cuda_graphs -> is_available;
_warmup_for_cuda_graphs -> is_initialized;
_warmup_for_cuda_graphs -> current_stream;
_warmup_for_cuda_graphs -> stream;
_warmup_for_cuda_graphs -> range;
_warmup_for_cuda_graphs -> _before_outer_loop;
_warmup_for_cuda_graphs -> _before_inner_loop_get_decoder_output;
_warmup_for_cuda_graphs -> _before_inner_loop_get_joint_output;
_warmup_for_cuda_graphs -> _inner_loop_code;
_warmup_for_cuda_graphs -> _after_inner_loop;
_full_graph_compile -> Stream;
_full_graph_compile -> wait_stream;
_full_graph_compile -> CUDAGraph;
_full_graph_compile -> default_stream;
_full_graph_compile -> stream;
_full_graph_compile -> inference_mode;
_full_graph_compile -> "graph";
_full_graph_compile -> _before_outer_loop;
_full_graph_compile -> cu_call;
_full_graph_compile -> _create_outer_while_loop_kernel;
_full_graph_compile -> array;
_full_graph_compile -> cudaStreamGetCaptureInfo;
_full_graph_compile -> cudaGraphConditionalHandleCreate;
_full_graph_compile -> with_conditional_node;
_full_graph_compile -> _before_inner_loop_get_decoder_output;
_full_graph_compile -> _before_inner_loop_get_joint_output;
_full_graph_compile -> _create_inner_while_loop_kernel;
_full_graph_compile -> _after_inner_loop;
_full_graph_compile -> data_ptr;
_full_graph_compile -> getPtr;
_full_graph_compile -> _inner_loop_code;
_full_graph_compile -> current_stream;
_full_graph_compile -> _before_loop;
_full_graph_compile -> _create_loop_body_kernel;
_full_graph_compile -> _loop_body;
_full_graph_compile -> _loop_update_decoder;
_partial_graphs_compile -> Stream;
_partial_graphs_compile -> wait_stream;
_partial_graphs_compile -> SeparateGraphsLoopLabels;
_partial_graphs_compile -> default_stream;
_partial_graphs_compile -> stream;
_partial_graphs_compile -> inference_mode;
_partial_graphs_compile -> "graph";
_partial_graphs_compile -> _before_outer_loop;
_partial_graphs_compile -> _before_inner_loop_get_decoder_output;
_partial_graphs_compile -> _before_inner_loop_get_joint_output;
_partial_graphs_compile -> _inner_loop_code;
_partial_graphs_compile -> _after_inner_loop;
_partial_graphs_compile -> SeparateGraphsMALSD;
_partial_graphs_compile -> _before_loop;
_partial_graphs_compile -> _loop_body;
_partial_graphs_compile -> _loop_update_decoder;
clear_ -> fill_;
batched_modified_adaptive_expansion_search_torch -> project_encoder;
batched_modified_adaptive_expansion_search_torch -> BatchedBeamHyps;
batched_modified_adaptive_expansion_search_torch -> full;
batched_modified_adaptive_expansion_search_torch -> clone;
batched_modified_adaptive_expansion_search_torch -> zeros_like;
batched_modified_adaptive_expansion_search_torch -> expand;
batched_modified_adaptive_expansion_search_torch -> predict;
batched_modified_adaptive_expansion_search_torch -> project_prednet;
batched_modified_adaptive_expansion_search_torch -> any;
batched_modified_adaptive_expansion_search_torch -> to;
batched_modified_adaptive_expansion_search_torch -> get_init_states;
batched_modified_adaptive_expansion_search_torch -> advance;
batched_modified_adaptive_expansion_search_torch -> view;
batched_modified_adaptive_expansion_search_torch -> squeeze;
batched_modified_adaptive_expansion_search_torch -> recombine_prefixes;
batched_modified_adaptive_expansion_search_torch -> where;
batched_modified_adaptive_expansion_search_torch -> combine_scores;
batched_modified_adaptive_expansion_search_torch -> remove_duplicates;
batched_modified_adaptive_expansion_search_torch -> topk;
batched_modified_adaptive_expansion_search_torch -> add_results_;
batched_modified_adaptive_expansion_search_torch -> batch_aggregate_states_beam;
batched_modified_adaptive_expansion_search_torch -> batch_replace_states_mask;
batched_modified_adaptive_expansion_search_torch -> joint_after_projection;
batched_modified_adaptive_expansion_search_torch -> logical_and;
batched_modified_adaptive_expansion_search_torch -> log_softmax;
batched_modified_adaptive_expansion_search_torch -> topk_lm;
batched_modified_adaptive_expansion_search_torch -> unsqueeze;
batched_modified_adaptive_expansion_search_torch -> gather;
batched_modified_adaptive_expansion_search_torch -> arange;
batched_modified_adaptive_expansion_search_torch -> max;
batched_modified_adaptive_expansion_search_torch -> flatten;
recombine_prefixes -> any;
recombine_prefixes -> where;
recombine_prefixes -> repeat;
recombine_prefixes -> gather;
recombine_prefixes -> logsumexp;
recombine_prefixes -> logical_and;
recombine_prefixes -> transpose;
recombine_prefixes -> logaddexp;
recombine_prefixes -> unsqueeze;
combine_scores -> clone;
combine_scores -> log1p;
combine_scores -> clamp;
combine_scores -> unsqueeze;
combine_scores -> exp;
remove_duplicates -> hash_text;
remove_duplicates -> view;
remove_duplicates -> where;
remove_duplicates -> any;
remove_duplicates -> logical_and;
remove_duplicates -> expand;
remove_duplicates -> max;
remove_duplicates -> arange;
remove_duplicates -> unsqueeze;
add_results_ -> add_results_no_checks_;
add_results_ -> ValueError;
add_results_ -> max;
add_results_ -> _allocate_more;
add_results_ -> item;
topk_lm -> combine_scores;
topk_lm -> topk;
topk_lm -> where;
topk_lm -> log1p;
topk_lm -> NotImplementedError;
topk_lm -> unsqueeze;
topk_lm -> gather;
topk_lm -> clamp;
topk_lm -> exp;
topk_lm -> max;
topk_lm -> view;
topk_lm -> len;
modified_alsd_torch -> is_autocast_enabled;
modified_alsd_torch -> project_encoder;
modified_alsd_torch -> BatchedBeamHyps;
modified_alsd_torch -> full;
modified_alsd_torch -> clone;
modified_alsd_torch -> zeros_like;
modified_alsd_torch -> expand_as;
modified_alsd_torch -> initialize_state;
modified_alsd_torch -> predict;
modified_alsd_torch -> project_prednet;
modified_alsd_torch -> batch_replace_states_all;
modified_alsd_torch -> any;
modified_alsd_torch -> to;
modified_alsd_torch -> get_init_states;
modified_alsd_torch -> advance;
modified_alsd_torch -> empty;
modified_alsd_torch -> view;
modified_alsd_torch -> squeeze;
modified_alsd_torch -> where;
modified_alsd_torch -> topk;
modified_alsd_torch -> gather;
modified_alsd_torch -> recombine_hyps;
modified_alsd_torch -> batch_aggregate_states_beam;
modified_alsd_torch -> batch_replace_states_mask;
modified_alsd_torch -> minimum;
modified_alsd_torch -> get_autocast_gpu_dtype;
modified_alsd_torch -> expand;
modified_alsd_torch -> topk_lm;
modified_alsd_torch -> unsqueeze;
modified_alsd_torch -> full_like;
modified_alsd_torch -> reshape;
modified_alsd_torch -> add_results_;
modified_alsd_torch -> add_results_no_checks_;
modified_alsd_torch -> log_softmax;
modified_alsd_torch -> arange;
modified_alsd_torch -> joint_after_projection;
modified_alsd_torch -> copy_;
modified_alsd_torch -> less_equal;
modified_alsd_torch -> logical_and;
modified_alsd_torch -> len;
modified_alsd_torch -> max;
recombine_hyps -> where;
recombine_hyps -> argmax;
recombine_hyps -> logsumexp;
recombine_hyps -> expand;
recombine_hyps -> to;
recombine_hyps -> arange;
add_results_no_checks_ -> gather;
add_results_no_checks_ -> scatter_;
add_results_no_checks_ -> copy_;
add_results_no_checks_ -> add;
add_results_no_checks_ -> where;
add_results_no_checks_ -> ValueError;
add_results_no_checks_ -> hash_text;
add_results_no_checks_ -> unsqueeze;
modified_alsd_cuda_graphs -> project_encoder;
modified_alsd_cuda_graphs -> is_autocast_enabled;
modified_alsd_cuda_graphs -> fill_;
modified_alsd_cuda_graphs -> copy_;
modified_alsd_cuda_graphs -> to;
modified_alsd_cuda_graphs -> need_reinit;
modified_alsd_cuda_graphs -> _graph_reinitialize;
modified_alsd_cuda_graphs -> unsqueeze;
modified_alsd_cuda_graphs -> replay;
modified_alsd_cuda_graphs -> get_autocast_gpu_dtype;
modified_alsd_cuda_graphs -> item;
modified_alsd_cuda_graphs -> _before_loop;
modified_alsd_cuda_graphs -> NotImplementedError;
modified_alsd_cuda_graphs -> _loop_body;
modified_alsd_cuda_graphs -> _loop_update_decoder;
_before_loop -> clear_;
_before_loop -> fill_;
_before_loop -> sub;
_before_loop -> greater;
_before_loop -> any;
_before_loop -> copy_;
_loop_body -> squeeze;
_loop_body -> view;
_loop_body -> where;
_loop_body -> topk;
_loop_body -> gather;
_loop_body -> copy_;
_loop_body -> recombine_hyps;
_loop_body -> topk_lm;
_loop_body -> unsqueeze;
_loop_body -> full_like;
_loop_body -> reshape;
_loop_body -> add_results_;
_loop_body -> add_results_no_checks_;
_loop_body -> joint_after_projection;
_loop_body -> log_softmax;
_loop_body -> logical_and;
_loop_body -> len;
_loop_body -> max;
_loop_update_decoder -> where;
_loop_update_decoder -> gather;
_loop_update_decoder -> batch_aggregate_states_beam;
_loop_update_decoder -> predict;
_loop_update_decoder -> batch_replace_states_mask;
_loop_update_decoder -> copy_;
_loop_update_decoder -> minimum;
_loop_update_decoder -> less_equal;
_loop_update_decoder -> any;
_loop_update_decoder -> view;
_loop_update_decoder -> project_prednet;
_loop_update_decoder -> advance;
_loop_update_decoder -> expand;
_loop_update_decoder -> unsqueeze;
_loop_update_decoder -> to;
_create_loop_body_kernel -> run_nvrtc;
_forward_vectorized -> _apply_masks;
_forward_legacy -> numpy;
_forward_legacy -> full;
_forward_legacy -> range;
_forward_legacy -> to;
_forward_legacy -> masked_fill;
_forward_legacy -> max;
_forward_legacy -> cpu;
_forward_legacy -> randint;
_forward_legacy -> from_numpy;
_forward_legacy -> int;
_apply_masks -> long;
_apply_masks -> rand;
_apply_masks -> arange;
_apply_masks -> any;
_apply_masks -> zeros_like;
_apply_masks -> masked_fill;
_apply_masks -> isinstance;
_apply_masks -> unsqueeze;
_apply_masks -> clamp;
get_codebook_indices -> list;
get_codebook_indices -> flatten;
get_codebook_indices -> product;
get_codebook_indices -> view;
get_codebook_indices -> range;
get_codebook_indices -> tensor;
calc_length -> range;
calc_length -> to;
calc_length -> div;
calc_length -> ceil;
calc_length -> floor;
conv_split_by_batch -> size;
conv_split_by_batch -> debug;
conv_split_by_batch -> ceil;
conv_split_by_batch -> cat;
conv_split_by_batch -> log;
conv_split_by_batch -> conv;
conv_split_by_batch -> numel;
conv_split_by_batch -> split;
conv_split_by_channel -> range;
conv_split_by_channel -> size;
conv_split_by_channel -> int;
conv_split_by_channel -> debug;
conv_split_by_channel -> channel_chunked_conv;
conv_split_by_channel -> cat;
conv_split_by_channel -> ceil;
conv_split_by_channel -> warning;
conv_split_by_channel -> log;
conv_split_by_channel -> split;
conv_split_by_channel -> numel;
channel_chunked_conv -> split;
channel_chunked_conv -> cat;
channel_chunked_conv -> append;
channel_chunked_conv -> size;
channel_chunked_conv -> pad;
channel_chunked_conv -> conv2d;
get_statistics_with_mask -> sum;
get_statistics_with_mask -> sqrt;
get_statistics_with_mask -> clamp;
get_statistics_with_mask -> pow;
get_statistics_with_mask -> unsqueeze;
merge_duplicate_hypotheses -> sorted;
merge_duplicate_hypotheses -> list;
merge_duplicate_hypotheses -> values;
merge_duplicate_hypotheses -> tuple;
merge_duplicate_hypotheses -> int;
merge_duplicate_hypotheses -> float;
merge_duplicate_hypotheses -> logaddexp;
merge_duplicate_hypotheses -> tensor;
riva_decoder_importer -> ImportError;
_riva_config_to_dict -> __dir__;
_riva_config_to_dict -> startswith;
_riva_config_to_dict -> getattr;
_riva_config_to_dict -> _riva_config_to_dict;
_fill_inner_riva_config_ -> items;
_fill_inner_riva_config_ -> isinstance;
_fill_inner_riva_config_ -> _fill_inner_riva_config_;
_fill_inner_riva_config_ -> setattr;
_fill_inner_riva_config_ -> getattr;
replace_unit_ -> len;
replace_unit_ -> isinstance;
replace_unit_ -> WfstNbestUnit;
decoding_mode -> _decoding_mode_setter;
beam_size -> _beam_size_setter;
_beam_size_setter -> _release_gpu_memory;
_beam_size_setter -> _init_decoder;
lm_weight -> _lm_weight_setter;
_lm_weight_setter -> _release_gpu_memory;
_lm_weight_setter -> _init_decoder;
write_text -> sort;
write_text -> open;
write_text -> write;
write_text -> split;
_release_gpu_memory -> collect;
_decode_nbest -> decode_nbest;
_decode_nbest -> append;
_decode_nbest -> zip;
_decode_nbest -> WfstNbestHypothesis;
_decode_nbest -> tuple;
_decode_nbest -> int;
_decode_mbr -> decode_mbr;
_decode_mbr -> append;
_decode_mbr -> WfstNbestHypothesis;
_decode_mbr -> int;
_decode_mbr -> tuple;
_decode -> isinstance;
_decode -> decode;
edit_distance -> _kaldifst_maybe_raise;
edit_distance -> levenshtein_graph_kaldi;
edit_distance -> invert;
edit_distance -> compose;
edit_distance -> get_linear_symbol_sequence;
edit_distance -> round;
edit_distance -> warning;
edit_distance -> all;
edit_distance -> ValueError;
edit_distance -> make_linear_acceptor;
edit_distance -> shortest_path;
edit_distance -> RuntimeError;
__del__ -> _release_gpu_memory;
__del__ -> close;
__del__ -> free;
__del__ -> values;
__del__ -> isinstance;
forward_single_enabled_adapter_ -> get;
forward_single_enabled_adapter_ -> hasattr;
forward_single_enabled_adapter_ -> RuntimeError;
forward_single_enabled_adapter_ -> isinstance;
forward_single_enabled_adapter_ -> adapter_strategy;
forward_single_enabled_adapter_ -> dict;
forward_single_enabled_adapter_ -> warning;
forward_single_enabled_adapter_ -> ValueError;
compute_output -> isinstance;
compute_output -> adapter;
compute_auxiliary_losses -> isinstance;
compute_auxiliary_losses -> ValueError;
compute_auxiliary_losses -> get;
compute_auxiliary_losses -> next;
compute_auxiliary_losses -> set_access_enabled;
compute_auxiliary_losses -> register_accessible_tensor;
compute_auxiliary_losses -> parameters;
compute_auxiliary_losses -> mean;
compute_auxiliary_losses -> getattr;
compute_auxiliary_losses -> sum;
compute_auxiliary_losses -> reshape;
compute_auxiliary_losses -> size;
compute_auxiliary_losses -> square;
apply_stochastic_depth -> empty;
apply_stochastic_depth -> bernoulli_;
apply_stochastic_depth -> ValueError;
apply_stochastic_depth -> div_;
setup_adapter_strategy -> is_dataclass;
setup_adapter_strategy -> get_default_strategy_config;
setup_adapter_strategy -> structured;
setup_adapter_strategy -> set_struct;
setup_adapter_strategy -> isinstance;
setup_adapter_strategy -> is_config;
setup_adapter_strategy -> instantiate;
setup_adapter_strategy -> AttributeError;
get_default_strategy_config -> MHAResidualAddAdapterStrategyConfig;
get_default_strategy_config -> ReturnResultAdapterStrategyConfig;
get_default_strategy_config -> ResidualAddAdapterStrategyConfig;
get_train_list -> sorted;
get_train_list -> isdir;
get_train_list -> listdir;
get_train_list -> extend;
get_train_list -> isfile;
get_train_list -> append;
get_train_list -> join;
setup_tokenizer -> info;
setup_tokenizer -> endswith;
setup_tokenizer -> get;
setup_tokenizer -> restore_from;
setup_tokenizer -> warning;
setup_tokenizer -> from_pretrained;
setup_tokenizer -> isinstance;
setup_tokenizer -> type;
setup_tokenizer -> device;
setup_tokenizer -> register_artifact;
setup_tokenizer -> get_tokenizer;
setup_tokenizer -> _register_vocab_from_tokenizer;
setup_tokenizer -> to_container;
setup_tokenizer -> NotImplementedError;
iter_files -> isinstance;
iter_files -> zip;
iter_files -> read_train_file;
iter_files -> tokenize_text;
iter_files -> open;
iter_files -> write;
iter_files -> encode;
read_train_file -> close;
read_train_file -> open;
read_train_file -> tqdm;
read_train_file -> list;
read_train_file -> iter;
read_train_file -> split;
read_train_file -> join;
read_train_file -> len;
read_train_file -> zip;
read_train_file -> append;
read_train_file -> readline;
read_train_file -> loads;
read_train_file -> endswith;
read_train_file -> set_description;
read_train_file -> decode;
tokenize_text -> len;
tokenize_text -> isinstance;
tokenize_text -> exists;
tokenize_text -> remove;
tokenize_text -> Parallel;
tokenize_text -> min;
tokenize_text -> parallel;
tokenize_text -> write_dataset;
tokenize_text -> info;
tokenize_text -> delayed;
tokenize_text -> range;
tokenize_str -> text_to_ids;
tokenize_str -> append;
tokenize_str -> chr;
write_dataset -> isinstance;
write_dataset -> range;
write_dataset -> open;
write_dataset -> tqdm;
write_dataset -> len;
write_dataset -> join;
write_dataset -> write;
write_dataset -> encode;
_log_10_to_e -> log10;
get_init_state -> State;
get_init_state -> BeginSentenceWrite;
advance_single -> State;
advance_single -> BaseScore;
advance_single -> log10;
advance_single -> chr;
advance_single -> str;
score_sentence -> get_init_state;
score_sentence -> FloatTensor;
score_sentence -> advance_single;
score_sentence -> append;
score_sentence -> get_final_single;
score_sentence -> tokenize;
score_sentence -> enumerate;
score_sentence -> type;
score_sentence -> __mask_text__;
score_sentence -> len;
score_sentence -> tensor;
score_sentence -> no_grad;
score_sentence -> model;
score_sentence -> squeeze;
score_sentence -> softmax;
score_sentence -> item;
score_sentence -> encode;
score_sentence -> convert_tokens_to_ids;
score_sentence -> log;
score_sentence -> numpy;
score_sentence -> cpu;
get_final_single -> State;
get_final_single -> _log_10_to_e;
get_final_single -> BaseScore;
score_sentences -> pad_sequence;
score_sentences -> score_sentence;
score_sentences -> zeros;
score_sentences -> get_init_states;
score_sentences -> range;
score_sentences -> full;
score_sentences -> _advance_pytorch;
score_sentences -> where;
score_sentences -> get_final;
score_sentences -> scatter_;
score_sentences -> squeeze;
score_sentences -> to;
score_sentences -> unsqueeze;
score_sentences -> gather;
get_final -> zeros;
get_final -> enumerate;
get_final -> len;
get_final -> get_final_single;
get_final -> warning;
get_final -> _get_final_pytorch;
_add_unigrams -> sort;
_add_unigrams -> set;
_add_unigrams -> range;
_add_unigrams -> add;
_add_unigrams -> len;
_add_unigrams -> log;
_find_state -> ValueError;
_find_state -> len;
_find_state -> tuple;
_add_ngrams_next_order -> sort;
_add_ngrams_next_order -> dict;
_add_ngrams_next_order -> tqdm;
_add_ngrams_next_order -> item;
_add_ngrams_next_order -> _find_state;
_start_adding_ngrams_for_order -> zeros;
_start_adding_ngrams_for_order -> range;
_add_ngram -> len;
_add_ngram -> _add_ngram_max_order;
_add_ngram_max_order -> _find_state;
_end_adding_ngrams_for_order -> _add_unigrams;
_end_adding_ngrams_for_order -> _add_ngrams_next_order;
_end_adding_ngrams_for_order -> _end_adding_ngrams_max_order;
_end_adding_ngrams_max_order -> sort;
_end_adding_ngrams_max_order -> range;
sanity_check -> all;
sanity_check -> items;
sanity_check -> hf_to_nemo_mapping;
sanity_check -> keys;
sanity_check -> info;
from_nemo -> restore_from;
from_nemo -> _resolve_final;
from_nemo -> warning;
from_nemo -> str;
_resolve_final -> no_grad;
_resolve_final -> copy_;
_resolve_final -> _get_final_pytorch;
_resolve_final -> arange;
from_arpa -> info;
from_arpa -> from_suffix_tree;
from_arpa -> open;
from_arpa -> _read_header;
from_arpa -> max;
from_arpa -> sum;
from_arpa -> SuffixTreeStorage;
from_arpa -> tqdm;
from_arpa -> sanity_check;
from_arpa -> keys;
from_arpa -> values;
from_arpa -> _read_ngrams;
from_arpa -> _add_ngram;
from_arpa -> _start_adding_ngrams_for_order;
from_arpa -> _end_adding_ngrams_for_order;
from_arpa -> range;
from_suffix_tree -> NGramGPULanguageModel;
from_suffix_tree -> _init_from_suffix_tree_np;
from_suffix_tree -> _resolve_final;
from_suffix_tree -> structured;
from_suffix_tree -> NGramLMConfig;
_read_header -> defaultdict;
_read_header -> strip;
_read_header -> startswith;
_read_header -> split;
_read_header -> int;
_read_ngrams -> join;
_read_ngrams -> compile;
_read_ngrams -> endswith;
_read_ngrams -> startswith;
_read_ngrams -> _line_to_ngram;
_read_ngrams -> escape;
dummy_unigram_lm -> NGramGPULanguageModel;
dummy_unigram_lm -> tensor;
dummy_unigram_lm -> fill_;
dummy_unigram_lm -> copy_;
dummy_unigram_lm -> _resolve_final;
dummy_unigram_lm -> structured;
dummy_unigram_lm -> log;
dummy_unigram_lm -> arange;
dummy_unigram_lm -> NGramLMConfig;
_init_from_suffix_tree_np -> copy_;
_init_from_suffix_tree_np -> from_numpy;
_init_from_suffix_tree_np -> item;
_init_from_suffix_tree_np -> min;
_init_from_suffix_tree_np -> max;
_line_to_ngram -> split;
_line_to_ngram -> _log_10_to_e;
_line_to_ngram -> findall;
_line_to_ngram -> tuple;
_line_to_ngram -> NGram;
_line_to_ngram -> float;
_line_to_ngram -> len;
_line_to_ngram -> ord;
_advance_pytorch -> clone;
_advance_pytorch -> zeros;
_advance_pytorch -> full;
_advance_pytorch -> arange;
_advance_pytorch -> any;
_advance_pytorch -> unbind;
_advance_pytorch -> view;
_advance_pytorch -> to;
_advance_pytorch -> where;
_advance_pytorch -> repeat_interleave;
_advance_pytorch -> unsqueeze;
_advance_triton -> empty;
_advance_triton -> next_power_of_2;
_get_final_pytorch -> detach;
_get_final_pytorch -> zeros_like;
_get_final_pytorch -> any;
_get_final_pytorch -> where;
_get_final_pytorch -> clone;
ngram_advance_triton_kernel -> program_id;
ngram_advance_triton_kernel -> load;
ngram_advance_triton_kernel -> arange;
ngram_advance_triton_kernel -> store;
ngram_advance_triton_kernel -> debug_barrier;
ngram_advance_triton_kernel -> split;
ngram_advance_triton_kernel -> to;
snake -> reshape;
snake -> reciprocal;
snake -> pow;
snake -> sin;
convert_adapter_cfg_to_dict_config -> is_dataclass;
convert_adapter_cfg_to_dict_config -> structured;
convert_adapter_cfg_to_dict_config -> isinstance;
convert_adapter_cfg_to_dict_config -> DictConfig;
_calculate_local_num_batches -> len;
_calculate_local_num_batches -> ceil;
_make_batches -> max;
_make_batches -> min;
_make_batches -> uniform;
_make_batches -> argsort;
_make_batches -> ceil;
_make_batches -> range;
_make_batches -> split;
_make_batches -> choice;
_make_batches -> delete;
_make_batches -> warning;
_make_batches -> randint;
_make_batches -> concatenate;
_make_batches -> len;
_make_batches -> RuntimeError;
get_correct_marks -> zip;
get_correct_marks -> align_texts;
get_correct_marks -> str;
get_token_targets_with_confidence -> zip;
get_word_targets_with_confidence -> zip;
run_confidence_benchmark -> isinstance;
run_confidence_benchmark -> Path;
run_confidence_benchmark -> autocast;
run_confidence_benchmark -> append;
run_confidence_benchmark -> auc_yc;
run_confidence_benchmark -> ece;
run_confidence_benchmark -> no_grad;
run_confidence_benchmark -> transcribe;
run_confidence_benchmark -> array;
run_confidence_benchmark -> list;
run_confidence_benchmark -> makedirs;
run_confidence_benchmark -> save_confidence_hist;
run_confidence_benchmark -> save_roc_curve;
run_confidence_benchmark -> save_pr_curve;
run_confidence_benchmark -> save_nt_curve;
run_confidence_benchmark -> save_custom_confidence_curve;
run_confidence_benchmark -> max;
run_confidence_benchmark -> get_token_targets_with_confidence;
run_confidence_benchmark -> get_correct_marks;
run_confidence_benchmark -> get_word_targets_with_confidence;
run_confidence_benchmark -> auc_roc;
run_confidence_benchmark -> auc_pr;
run_confidence_benchmark -> auc_nt;
run_confidence_benchmark -> nce;
run_confidence_benchmark -> text_to_ids;
run_confidence_benchmark -> zip;
run_confidence_benchmark -> split;
auc_yc -> array;
auc_yc -> linspace;
auc_yc -> max;
auc_yc -> len;
auc_yc -> all;
auc_yc -> append;
auc_yc -> abs;
auc_yc -> mean;
auc_yc -> std;
auc_yc -> nonzero;
auc_yc -> zeros;
ece -> array;
ece -> zeros;
ece -> range;
ece -> len;
ece -> all;
ece -> append;
ece -> astype;
ece -> sum;
ece -> nonzero;
ece -> arange;
ece -> abs;
save_confidence_hist -> makedirs;
save_confidence_hist -> hist;
save_confidence_hist -> title;
save_confidence_hist -> xlabel;
save_confidence_hist -> ylabel;
save_confidence_hist -> savefig;
save_confidence_hist -> clf;
save_confidence_hist -> array;
save_confidence_hist -> Path;
save_roc_curve -> makedirs;
save_roc_curve -> roc_curve;
save_roc_curve -> plot;
save_roc_curve -> title;
save_roc_curve -> savefig;
save_roc_curve -> clf;
save_roc_curve -> len;
save_roc_curve -> array;
save_roc_curve -> RocCurveDisplay;
save_roc_curve -> Path;
save_pr_curve -> makedirs;
save_pr_curve -> precision_recall_curve;
save_pr_curve -> plot;
save_pr_curve -> title;
save_pr_curve -> savefig;
save_pr_curve -> clf;
save_pr_curve -> len;
save_pr_curve -> array;
save_pr_curve -> PrecisionRecallDisplay;
save_pr_curve -> Path;
save_nt_curve -> makedirs;
save_nt_curve -> precision_recall_curve;
save_nt_curve -> plot;
save_nt_curve -> title;
save_nt_curve -> savefig;
save_nt_curve -> clf;
save_nt_curve -> len;
save_nt_curve -> array;
save_nt_curve -> PrecisionRecallDisplay;
save_nt_curve -> Path;
save_custom_confidence_curve -> makedirs;
save_custom_confidence_curve -> plot;
save_custom_confidence_curve -> xlim;
save_custom_confidence_curve -> ylim;
save_custom_confidence_curve -> title;
save_custom_confidence_curve -> savefig;
save_custom_confidence_curve -> clf;
save_custom_confidence_curve -> len;
save_custom_confidence_curve -> xlabel;
save_custom_confidence_curve -> ylabel;
save_custom_confidence_curve -> Path;
auc_roc -> array;
auc_roc -> roc_auc_score;
auc_roc -> len;
auc_roc -> all;
auc_pr -> array;
auc_pr -> all;
auc_pr -> average_precision_score;
auc_pr -> len;
auc_nt -> array;
auc_nt -> all;
auc_nt -> average_precision_score;
auc_nt -> len;
nce -> array;
nce -> mean;
nce -> len;
nce -> all;
nce -> log_loss;
nce -> log;
apply_confidence_parameters -> deepcopy;
apply_confidence_parameters -> open_dict;
apply_confidence_parameters -> items;
entropy_gibbs_exp -> pow;
entropy_gibbs_exp -> exp;
entropy_gibbs_exp -> neg_entropy_alpha_gibbs;
entropy_tsallis_exp -> exp;
entropy_tsallis_exp -> pow;
entropy_tsallis_exp -> neg_entropy_alpha;
_update_se_context_window -> named_modules;
_update_se_context_window -> type;
_update_se_context_window -> change_context_window;
find_first_nonzero -> clone;
find_first_nonzero -> max;
find_best_permutation -> argmax;
find_best_permutation -> to;
find_best_permutation -> repeat;
find_best_permutation -> arange;
reconstruct_labels -> expand;
reconstruct_labels -> gather;
reconstruct_labels -> unsqueeze;
find_segments_from_rttm -> groupby;
find_segments_from_rttm -> with_offset;
find_segments_from_rttm -> get;
get_mask_from_segments -> round;
get_mask_from_segments -> zeros;
get_mask_from_segments -> max;
get_mask_from_segments -> min;
get_mask_from_segments -> int;
get_mask_from_segments -> ValueError;
get_soft_mask -> zeros;
get_soft_mask -> range;
get_soft_mask -> mean;
get_soft_mask -> int;
plot -> figure;
plot -> load;
plot -> get_duration;
plot -> arange;
plot -> subplot;
plot -> plot;
plot -> set_xlim;
plot -> tick_params;
plot -> set_ylabel;
plot -> set_ylim;
plot -> twinx;
plot -> legend;
plot -> set_xticks;
plot -> Audio;
plot -> int;
plot -> load_tensor_from_file;
plot -> len;
plot -> ValueError;
plot -> where;
plot -> endswith;
plot -> extract_labels;
plot -> prepare_gen_segment_table;
plot -> generate_vad_segment_table_per_tensor;
plot -> gen_pred_from_speech_segments;
plot -> float;
plot -> repeat;
plot -> add_subplot;
plot -> range;
plot -> quiver;
plot -> enumerate;
plot -> view_init;
plot -> set_zlim;
plot -> set_xlabel;
plot -> set_zlabel;
plot -> set_title;
plot -> show;
plot -> scatter;
plot -> text;
plot -> set_aspect;
plot -> str;
plot -> tuple;
plot -> warning;
binary_search_alignments -> max;
binary_search_alignments -> len;
get_subset_of_audio_manifest -> array;
get_subset_of_audio_manifest -> tolist;
get_subset_of_audio_manifest -> len;
get_subset_of_audio_manifest -> warning;
get_subset_of_audio_manifest -> concatenate;
get_power_of_audio_file -> to;
get_power_of_audio_file -> mean;
get_scaled_audio_signal -> get_power_of_audio_file;
get_scaled_audio_signal -> to;
get_scaled_audio_signal -> sqrt;
get_desired_avg_power_noise -> uniform;
add_silence_to_alignments -> insert;
add_silence_to_alignments -> type;
add_silence_to_alignments -> len;
get_ctm_line -> get_rounded_str_float;
get_ctm_line -> isdigit;
get_ctm_line -> float;
get_ctm_line -> str;
get_ctm_line -> ValueError;
get_ctm_line -> type;
get_ctm_line -> replace;
labels_to_rttmfile -> join;
labels_to_rttmfile -> open;
labels_to_rttmfile -> strip;
labels_to_rttmfile -> split;
labels_to_rttmfile -> float;
labels_to_rttmfile -> format;
labels_to_rttmfile -> write;
_init_silence_params -> int;
_init_silence_params -> max;
_init_overlap_params -> int;
_init_overlap_params -> max;
get_wer_feat_logit -> reset;
get_wer_feat_logit -> read_audio_file_and_return;
get_wer_feat_logit -> transcribe_with_ts;
read_audio_file_and_return -> get_samples;
read_audio_file_and_return -> pad;
read_audio_file_and_return -> AudioFeatureIterator;
read_audio_file_and_return -> set_frame_reader;
read_audio_file_and_return -> int;
transcribe_with_ts -> infer_logits;
transcribe_with_ts -> enumerate;
transcribe_with_ts -> cat;
transcribe_with_ts -> tolist;
transcribe_with_ts -> append;
transcribe_with_ts -> len;
transcribe_with_ts -> greedy_merge;
ctc_decoder_predictions_tensor_with_ts -> cpu;
ctc_decoder_predictions_tensor_with_ts -> range;
ctc_decoder_predictions_tensor_with_ts -> tolist;
ctc_decoder_predictions_tensor_with_ts -> enumerate;
ctc_decoder_predictions_tensor_with_ts -> decode_tokens_to_str_with_ts;
ctc_decoder_predictions_tensor_with_ts -> replace;
ctc_decoder_predictions_tensor_with_ts -> get_ts_from_decoded_prediction;
ctc_decoder_predictions_tensor_with_ts -> append;
ctc_decoder_predictions_tensor_with_ts -> long;
ctc_decoder_predictions_tensor_with_ts -> join;
ctc_decoder_predictions_tensor_with_ts -> numpy;
ctc_decoder_predictions_tensor_with_ts -> round;
ctc_decoder_predictions_tensor_with_ts -> detach;
decode_tokens_to_str_with_ts -> ids_to_text;
decode_tokens_to_str_with_ts -> decode_ids_to_tokens_with_ts;
decode_tokens_to_str_with_ts -> join;
decode_tokens_to_str_with_ts -> decode_ids_to_tokens;
get_ts_from_decoded_prediction -> ids_to_tokens;
get_ts_from_decoded_prediction -> enumerate;
get_ts_from_decoded_prediction -> len;
get_ts_from_decoded_prediction -> round;
get_ts_from_decoded_prediction -> append;
get_ts_from_decoded_prediction -> replace;
get_ts_from_decoded_prediction -> split;
get_ts_from_decoded_prediction -> join;
decode_ids_to_tokens_with_ts -> ids_to_tokens;
decode_ids_to_tokens_with_ts -> enumerate;
decode_ids_to_tokens_with_ts -> append;
set_frame_reader -> set_frame_reader;
_get_batch_preds -> no_grad;
_get_batch_preds -> iter;
_get_batch_preds -> asr_model;
_get_batch_preds -> unbind;
_get_batch_preds -> to;
_get_batch_preds -> append;
_get_batch_preds -> numpy;
_get_batch_preds -> cpu;
_get_batch_preds -> len;
_get_batch_preds -> ctc_decoder;
_get_batch_preds -> argmax;
_get_batch_preds -> range;
_get_batch_preds -> cat;
_get_batch_preds -> rnnt_decoder_predictions_tensor;
_get_batch_preds -> enumerate;
_get_batch_preds -> next;
_get_batch_preds -> initialize_state;
_get_batch_preds -> batch_select_state;
_get_batch_preds -> extend;
_get_batch_preds -> repeat;
_get_batch_preds -> long;
_get_batch_preds -> PromptedAudioToTextMiniBatch;
_get_batch_preds -> predict_step;
_get_batch_preds -> tolist;
_get_batch_preds -> size;
_get_batch_preds -> tensor;
_get_batch_preds -> ctc_decoder_predictions_tensor;
infer_logits -> no_grad;
infer_logits -> get_buffers_batch;
infer_logits -> len;
infer_logits -> set_signal;
infer_logits -> _get_batch_preds;
infer_logits -> enumerate;
greedy_merge -> ids_to_text;
greedy_merge -> append;
load_LM_for_CTC_decoder -> info;
load_LM_for_CTC_decoder -> build_ctcdecoder;
load_LM_for_CTC_decoder -> str;
load_LM_for_CTC_decoder -> get_vocab;
load_LM_for_CTC_decoder -> list;
load_LM_for_CTC_decoder -> type;
load_LM_for_CTC_decoder -> keys;
load_LM_for_CTC_decoder -> ValueError;
run_ASR_QuartzNet_CTC -> WER_TS;
run_ASR_QuartzNet_CTC -> autocast;
run_ASR_QuartzNet_CTC -> transcribe;
run_ASR_QuartzNet_CTC -> enumerate;
run_ASR_QuartzNet_CTC -> get;
run_ASR_QuartzNet_CTC -> numpy;
run_ASR_QuartzNet_CTC -> get_uniqname_from_filepath;
run_ASR_QuartzNet_CTC -> align_decoder_delay;
run_ASR_QuartzNet_CTC -> info;
run_ASR_QuartzNet_CTC -> run_pyctcdecode;
run_ASR_QuartzNet_CTC -> from_numpy;
run_ASR_QuartzNet_CTC -> unsqueeze;
run_ASR_QuartzNet_CTC -> ctc_decoder_predictions_tensor_with_ts;
run_ASR_QuartzNet_CTC -> clean_trans_and_TS;
run_ASR_QuartzNet_CTC -> _get_spaces;
run_ASR_QuartzNet_CTC -> get_word_ts_from_spaces;
run_ASR_QuartzNet_CTC -> len;
run_ASR_QuartzNet_CTC -> cpu;
run_ASR_QuartzNet_CTC -> array;
run_ASR_QuartzNet_CTC -> argmax;
align_decoder_delay -> range;
align_decoder_delay -> len;
align_decoder_delay -> round;
run_pyctcdecode -> decode_beams;
run_pyctcdecode -> enumerate;
run_pyctcdecode -> get_word_ts_from_wordframes;
run_pyctcdecode -> append;
clean_trans_and_TS -> lstrip;
clean_trans_and_TS -> rstrip;
clean_trans_and_TS -> len;
_get_spaces -> enumerate;
_get_spaces -> len;
_get_spaces -> append;
_get_spaces -> round;
get_word_ts_from_spaces -> min;
get_word_ts_from_spaces -> round;
get_word_ts_from_spaces -> len;
get_word_ts_from_spaces -> range;
run_ASR_CitriNet_CTC -> WERBPE_TS;
run_ASR_CitriNet_CTC -> autocast;
run_ASR_CitriNet_CTC -> transcribe;
run_ASR_CitriNet_CTC -> enumerate;
run_ASR_CitriNet_CTC -> get;
run_ASR_CitriNet_CTC -> numpy;
run_ASR_CitriNet_CTC -> get_uniqname_from_filepath;
run_ASR_CitriNet_CTC -> align_decoder_delay;
run_ASR_CitriNet_CTC -> info;
run_ASR_CitriNet_CTC -> run_pyctcdecode;
run_ASR_CitriNet_CTC -> from_numpy;
run_ASR_CitriNet_CTC -> unsqueeze;
run_ASR_CitriNet_CTC -> ctc_decoder_predictions_tensor_with_ts;
run_ASR_CitriNet_CTC -> len;
run_ASR_CitriNet_CTC -> cpu;
run_ASR_CitriNet_CTC -> array;
run_ASR_CitriNet_CTC -> split;
run_ASR_CitriNet_CTC -> argmax;
set_buffered_infer_params -> deepcopy;
set_buffered_infer_params -> set_struct;
set_buffered_infer_params -> from_config_dict;
set_buffered_infer_params -> to;
set_buffered_infer_params -> ceil;
run_ASR_BPE_CTC -> manual_seed;
run_ASR_BPE_CTC -> set_grad_enabled;
run_ASR_BPE_CTC -> WERBPE_TS;
run_ASR_BPE_CTC -> FrameBatchASRLogits;
run_ASR_BPE_CTC -> set_buffered_infer_params;
run_ASR_BPE_CTC -> round;
run_ASR_BPE_CTC -> autocast;
run_ASR_BPE_CTC -> info;
run_ASR_BPE_CTC -> enumerate;
run_ASR_BPE_CTC -> get;
run_ASR_BPE_CTC -> get_uniqname_from_filepath;
run_ASR_BPE_CTC -> clear_buffer;
run_ASR_BPE_CTC -> get_wer_feat_logit;
run_ASR_BPE_CTC -> align_decoder_delay;
run_ASR_BPE_CTC -> run_pyctcdecode;
run_ASR_BPE_CTC -> from_numpy;
run_ASR_BPE_CTC -> unsqueeze;
run_ASR_BPE_CTC -> ctc_decoder_predictions_tensor_with_ts;
run_ASR_BPE_CTC -> len;
run_ASR_BPE_CTC -> numpy;
run_ASR_BPE_CTC -> array;
run_ASR_BPE_CTC -> split;
run_ASR_BPE_CTC -> cpu;
get_word_ts_from_wordframes -> round;
get_word_ts_from_wordframes -> max;
dump_json_to_file -> open;
dump_json_to_file -> dump;
write_txt -> open;
write_txt -> write;
convert_ctm_to_text -> readlines;
convert_ctm_to_text -> join;
convert_ctm_to_text -> split;
convert_ctm_to_text -> append;
convert_ctm_to_text -> open;
convert_ctm_to_text -> values;
convert_word_dict_seq_to_text -> join;
convert_word_dict_seq_to_text -> append;
convert_word_dict_seq_to_text -> values;
convert_word_dict_seq_to_ctm -> round;
convert_word_dict_seq_to_ctm -> append;
get_total_result_dict -> keys;
get_total_result_dict -> list;
get_total_result_dict -> values;
get_total_result_dict -> update;
get_audacity_label -> split;
get_num_of_spk_from_labels -> len;
get_num_of_spk_from_labels -> strip;
get_num_of_spk_from_labels -> set;
get_num_of_spk_from_labels -> split;
make_file_lists -> audio_rttm_map;
make_file_lists -> enumerate;
make_file_lists -> get_uniqname_from_filepath;
make_file_lists -> len;
make_file_lists -> items;
make_file_lists -> append;
_load_realigning_LM -> info;
_load_realigning_LM -> loadf;
_init_session_trans_dict -> od;
_init_session_gecko_dict -> od;
_save_VAD_labels_list -> enumerate;
_save_VAD_labels_list -> items;
_save_VAD_labels_list -> get_speech_labels_from_decoded_prediction;
_save_VAD_labels_list -> get_str_speech_labels;
_save_VAD_labels_list -> join;
_save_VAD_labels_list -> labels_to_rttmfile;
_save_VAD_labels_list -> exists;
_save_VAD_labels_list -> makedirs;
get_speech_labels_from_decoded_prediction -> deepcopy;
get_speech_labels_from_decoded_prediction -> len;
get_speech_labels_from_decoded_prediction -> pop;
get_speech_labels_from_decoded_prediction -> insert;
get_str_speech_labels -> append;
get_str_speech_labels -> format;
_get_frame_level_VAD -> isinstance;
_get_frame_level_VAD -> join;
_get_frame_level_VAD -> open;
_get_frame_level_VAD -> readlines;
_get_frame_level_VAD -> append;
_get_frame_level_VAD -> float;
_get_frame_level_VAD -> strip;
_get_the_closest_silence_start -> int;
_get_the_closest_silence_start -> min;
_get_the_closest_silence_start -> round;
_get_the_closest_silence_start -> len;
_compensate_word_ts_list -> enumerate;
_compensate_word_ts_list -> items;
_compensate_word_ts_list -> len;
_compensate_word_ts_list -> round;
_compensate_word_ts_list -> min;
_compensate_word_ts_list -> max;
_compensate_word_ts_list -> append;
_compensate_word_ts_list -> int;
_compensate_word_ts_list -> _get_the_closest_silence_start;
get_word_level_json_list -> split;
get_word_level_json_list -> enumerate;
get_word_level_json_list -> zip;
get_word_level_json_list -> _get_word_timestamp_anchor;
get_word_level_json_list -> round;
get_word_level_json_list -> append;
get_word_level_json_list -> float;
get_word_level_json_list -> min;
get_word_level_json_list -> len;
_make_json_output -> split;
_make_json_output -> get_num_of_spk_from_labels;
_make_json_output -> info;
_make_json_output -> _init_session_trans_dict;
_make_json_output -> _init_session_gecko_dict;
_make_json_output -> enumerate;
_make_json_output -> strip;
_make_json_output -> append;
_make_json_output -> join;
_make_json_output -> _write_and_log;
_make_json_output -> get_audacity_label;
_make_json_output -> len;
realign_words_with_lm -> len;
realign_words_with_lm -> enumerate;
realign_words_with_lm -> deepcopy;
realign_words_with_lm -> append;
realign_words_with_lm -> _get_realignment_ranges;
realign_words_with_lm -> log_s;
realign_words_with_lm -> join;
realign_words_with_lm -> argsort;
_get_word_timestamp_anchor -> info;
_write_and_log -> print_sentences;
_write_and_log -> convert_word_dict_seq_to_ctm;
_write_and_log -> dump_json_to_file;
_write_and_log -> write_txt;
_write_and_log -> _break_lines;
_write_and_log -> join;
_write_and_log -> strip;
_get_realignment_ranges -> max;
_get_realignment_ranges -> min;
_break_lines -> split;
_break_lines -> join;
_break_lines -> len;
_break_lines -> range;
_break_lines -> extend;
_break_lines -> append;
_break_lines -> strip;
print_sentences -> get;
print_sentences -> float;
print_sentences -> max;
print_sentences -> strftime;
print_sentences -> fromtimestamp;
flatten_dict_config -> items;
flatten_dict_config -> join;
flatten_dict_config -> isinstance;
flatten_dict_config -> extend;
flatten_dict_config -> append;
flatten_dict_config -> split;
flatten_dict_config -> flatten_dict_config;
get_hydra_override_from_config -> split;
get_hydra_override_from_config -> join;
get_hydra_override_from_config -> flatten_dict_config;
get_hydra_override_from_config -> any;
strip_spaces_before_punctuations -> sub;
remove_punctuations -> replace;
clean_label -> strip;
clean_label -> lower;
clean_label -> join;
clean_label -> replace;
clean_label -> split;
clean_label -> convert_num_to_words;
clean_label -> warning;
convert_num_to_words -> strip;
convert_num_to_words -> split;
convert_num_to_words -> warning;
convert_num_to_words -> isdigit;
convert_num_to_words -> int;
convert_num_to_words -> append;
convert_num_to_words -> clear;
cal_write_text_metric -> item;
cal_write_text_metric -> ValueError;
cal_write_text_metric -> open;
cal_write_text_metric -> readlines;
cal_write_text_metric -> len;
cal_write_text_metric -> strip;
cal_write_text_metric -> loads;
cal_write_text_metric -> append;
cal_write_text_metric -> metric_calculator;
cal_write_text_metric -> dump;
cal_write_text_metric -> write;
cal_write_text_metric -> flush;
cal_write_text_metric -> remove_punctuations;
cal_write_text_metric -> lower;
cal_write_text_metric -> keys;
cal_write_text_metric -> info;
cal_write_text_metric -> strip_spaces_before_punctuations;
check_input -> ValueError;
check_input -> all;
unpack_labels -> to;
unpack_labels -> zip;
unpack_labels -> long;
unpack_labels -> len;
unpack_labels -> clone;
unpack_labels -> zeros;
get_div_ceil_count -> int;
get_div_ceil_count -> item;
get_div_ceil_count -> ceil;
get_div_ceil_count -> tensor;
long_forward_infer -> check_input;
long_forward_infer -> split_input_data;
long_forward_infer -> get_scale_interpolated_embs;
long_forward_infer -> get_div_ceil_count;
long_forward_infer -> cat;
long_forward_infer -> getCosAffinityMatrix;
long_forward_infer -> forward_unit_infer;
long_forward_infer -> unpack_labels;
long_forward_infer -> is_scripting;
long_forward_infer -> tqdm;
long_forward_infer -> range;
long_forward_infer -> split_embs_to_windows;
long_forward_infer -> int;
long_forward_infer -> get_merge_quantity;
long_forward_infer -> enumerate;
long_forward_infer -> close;
long_forward_infer -> ValueError;
long_forward_infer -> zeros;
long_forward_infer -> min;
long_forward_infer -> update;
long_forward_infer -> list;
long_forward_infer -> run_reducer;
long_forward_infer -> append;
long_forward_infer -> len;
long_forward_infer -> unique;
getCosAffinityMatrix -> to;
getCosAffinityMatrix -> float;
getCosAffinityMatrix -> cos_similarity;
getCosAffinityMatrix -> ScalerMinMax;
getCosAffinityMatrix -> tensor;
forward_unit_infer -> tensor;
forward_unit_infer -> NMESC;
forward_unit_infer -> SpectralClustering;
forward_unit_infer -> forward;
forward_unit_infer -> getAffinityGraphMat;
forward_unit_infer -> int;
forward_unit_infer -> item;
get_merge_quantity -> bincount;
get_merge_quantity -> len;
get_merge_quantity -> to;
get_merge_quantity -> int;
get_merge_quantity -> calculate_removable_counts;
get_merge_quantity -> ValueError;
get_merge_quantity -> unique;
get_merge_quantity -> min;
get_merge_quantity -> sum;
get_merge_quantity -> tensor;
get_merge_quantity -> all;
get_merge_quantity -> stack;
run_reducer -> ValueError;
run_reducer -> where;
run_reducer -> getCosAffinityMatrix;
run_reducer -> get_closest_embeddings;
run_reducer -> merge_vectors;
run_reducer -> arange;
run_reducer -> sort;
get_rounded_str_float -> min;
get_rounded_str_float -> max;
rreplace -> rsplit;
rreplace -> join;
get_uniq_id_with_period -> split;
get_uniq_id_with_period -> join;
get_uniq_id_with_period -> len;
get_uniq_id_with_period -> basename;
get_subsegment_dict -> open;
get_subsegment_dict -> readlines;
get_subsegment_dict -> strip;
get_subsegment_dict -> loads;
get_subsegment_dict -> get_subsegments_scriptable;
get_subsegment_dict -> append;
get_subsegment_dict -> get_uniq_id_with_period;
get_subsegment_dict -> round;
get_subsegments_scriptable -> ceil;
get_subsegments_scriptable -> range;
get_subsegments_scriptable -> append;
get_input_manifest_dict -> open;
get_input_manifest_dict -> readlines;
get_input_manifest_dict -> loads;
get_input_manifest_dict -> get_uniqname_from_filepath;
write_truncated_subsegments -> open;
write_truncated_subsegments -> items;
write_truncated_subsegments -> array;
write_truncated_subsegments -> argsort;
write_truncated_subsegments -> range;
write_truncated_subsegments -> round;
write_truncated_subsegments -> dump;
write_truncated_subsegments -> write;
write_file -> open;
write_file -> dump;
write_file -> write;
write_file -> info;
write_file -> print;
read_file -> sorted;
read_file -> open;
read_file -> readlines;
read_file -> strip;
read_file -> list;
read_file -> join;
read_file -> append;
read_file -> split;
get_dict_from_wavlist -> od;
get_dict_from_wavlist -> sorted;
get_dict_from_wavlist -> split;
get_dict_from_wavlist -> basename;
get_dict_from_list -> split;
get_dict_from_list -> ValueError;
get_dict_from_list -> basename;
get_path_dict -> read_file;
get_path_dict -> get_dict_from_list;
get_path_dict -> len;
create_segment_manifest -> get_input_manifest_dict;
create_segment_manifest -> rreplace;
create_segment_manifest -> int;
create_segment_manifest -> audio_rttm_map;
create_segment_manifest -> write_rttm2manifest;
create_segment_manifest -> segments_manifest_to_subsegments_manifest;
create_segment_manifest -> get_subsegment_dict;
create_segment_manifest -> write_truncated_subsegments;
create_segment_manifest -> remove;
create_segment_manifest -> ValueError;
create_manifest -> exists;
create_manifest -> read_file;
create_manifest -> get_dict_from_wavlist;
create_manifest -> len;
create_manifest -> sorted;
create_manifest -> get_path_dict;
create_manifest -> write_file;
create_manifest -> remove;
create_manifest -> keys;
create_manifest -> strip;
create_manifest -> extend;
create_manifest -> range;
create_manifest -> rttm_to_labels;
create_manifest -> __len__;
create_manifest -> load;
create_manifest -> get_duration;
create_manifest -> open;
create_manifest -> Counter;
create_manifest -> readlines;
create_manifest -> split;
create_manifest -> makedirs;
create_manifest -> join;
create_manifest -> get_out_dir_name;
create_manifest -> splitext;
create_manifest -> loads;
create_manifest -> write;
create_manifest -> basename;
create_manifest -> replace;
create_manifest -> str;
create_manifest -> dumps;
create_manifest -> mkdir;
create_manifest -> Path;
create_manifest -> tqdm;
create_manifest -> abspath;
get_duration -> get_duration;
get_duration -> flatten;
get_duration -> duration;
_phase_vocoder_kernel -> jit;
_phase_vocoder_kernel -> enumerate;
_phase_vocoder_kernel -> mod;
_phase_vocoder_kernel -> round;
_phase_vocoder_kernel -> exp;
_phase_vocoder_kernel -> abs;
_phase_vocoder_kernel -> angle;
_phase_vocoder_kernel -> int;
cos_similarity -> tensor;
cos_similarity -> mm;
cos_similarity -> fill_diagonal_;
cos_similarity -> ValueError;
cos_similarity -> transpose;
cos_similarity -> unsqueeze;
cos_similarity -> norm;
ScalerMinMax -> min;
ScalerMinMax -> max;
getEuclideanDistance -> device;
getEuclideanDistance -> squeeze;
getEuclideanDistance -> to;
getEuclideanDistance -> unsqueeze;
getEuclideanDistance -> sum;
kmeans_plusplus_torch -> device;
kmeans_plusplus_torch -> manual_seed;
kmeans_plusplus_torch -> to;
kmeans_plusplus_torch -> zeros;
kmeans_plusplus_torch -> long;
kmeans_plusplus_torch -> full;
kmeans_plusplus_torch -> squeeze;
kmeans_plusplus_torch -> unsqueeze;
kmeans_plusplus_torch -> sum;
kmeans_plusplus_torch -> range;
kmeans_plusplus_torch -> view;
kmeans_plusplus_torch -> searchsorted;
kmeans_plusplus_torch -> minimum;
kmeans_plusplus_torch -> argmin;
kmeans_plusplus_torch -> randint;
kmeans_plusplus_torch -> rand;
kmeans_plusplus_torch -> item;
kmeans_plusplus_torch -> len;
kmeans_plusplus_torch -> cumsum;
kmeans_plusplus_torch -> repeat;
kmeans_plusplus_torch -> pow;
searchsorted -> sum;
kmeans_torch -> device;
kmeans_torch -> to;
kmeans_torch -> kmeans_plusplus_torch;
kmeans_torch -> long;
kmeans_torch -> range;
kmeans_torch -> getEuclideanDistance;
kmeans_torch -> clone;
kmeans_torch -> pow;
kmeans_torch -> float;
kmeans_torch -> zeros;
kmeans_torch -> len;
kmeans_torch -> argmin;
kmeans_torch -> index_select;
kmeans_torch -> mean;
kmeans_torch -> sum;
kmeans_torch -> sqrt;
kmeans_torch -> squeeze;
kmeans_torch -> randint;
kmeans_torch -> nonzero;
getTheLargestComponent -> to;
getTheLargestComponent -> range;
getTheLargestComponent -> sum;
getTheLargestComponent -> logical_or;
getTheLargestComponent -> squeeze;
getTheLargestComponent -> zeros;
getTheLargestComponent -> len;
getTheLargestComponent -> unsqueeze;
getTheLargestComponent -> t;
getTheLargestComponent -> size;
getTheLargestComponent -> nonzero;
getTheLargestComponent -> tensor;
isGraphFullyConnected -> sum;
isGraphFullyConnected -> getTheLargestComponent;
getKneighborsConnections -> half;
getKneighborsConnections -> flatten;
getKneighborsConnections -> argsort;
getKneighborsConnections -> zeros_like;
getKneighborsConnections -> arange;
getKneighborsConnections -> to;
getKneighborsConnections -> repeat;
getKneighborsConnections -> ValueError;
getKneighborsConnections -> ones;
getKneighborsConnections -> sigmoid;
getAffinityGraphMat -> getKneighborsConnections;
getMinimumConnection -> tensor;
getMinimumConnection -> getAffinityGraphMat;
getMinimumConnection -> enumerate;
getMinimumConnection -> isGraphFullyConnected;
getRepeatedList -> to;
getRepeatedList -> unique;
getRepeatedList -> zeros;
getRepeatedList -> int;
getMultiScaleCosAffinityMatrix -> device;
getMultiScaleCosAffinityMatrix -> to;
getMultiScaleCosAffinityMatrix -> get_argmin_mat;
getMultiScaleCosAffinityMatrix -> list;
getMultiScaleCosAffinityMatrix -> range;
getMultiScaleCosAffinityMatrix -> getCosAffinityMatrix;
getMultiScaleCosAffinityMatrix -> squeeze;
getMultiScaleCosAffinityMatrix -> len;
getMultiScaleCosAffinityMatrix -> zeros;
getMultiScaleCosAffinityMatrix -> half;
getMultiScaleCosAffinityMatrix -> getRepeatedList;
getMultiScaleCosAffinityMatrix -> repeat_interleave;
getMultiScaleCosAffinityMatrix -> tensor;
getLaplacian -> fill_diagonal_;
getLaplacian -> sum;
getLaplacian -> diag_embed;
getLaplacian -> abs;
eigDecompose -> eigh;
eigDecompose -> to;
eigDecompose -> current_device;
eigDecompose -> device;
eigDecompose -> float;
eigValueSh -> eigvalsh;
eigValueSh -> to;
eigValueSh -> current_device;
eigValueSh -> device;
eigValueSh -> float;
getLamdaGaplist -> is_complex;
getLamdaGaplist -> real;
addAnchorEmb -> std;
addAnchorEmb -> to;
addAnchorEmb -> range;
addAnchorEmb -> append;
addAnchorEmb -> vstack;
addAnchorEmb -> tensor;
addAnchorEmb -> matmul;
addAnchorEmb -> tile;
addAnchorEmb -> diag;
addAnchorEmb -> randn;
addAnchorEmb -> unsqueeze;
addAnchorEmb -> max;
addAnchorEmb -> abs;
getEnhancedSpeakerCount -> range;
getEnhancedSpeakerCount -> tensor;
getEnhancedSpeakerCount -> manual_seed;
getEnhancedSpeakerCount -> addAnchorEmb;
getEnhancedSpeakerCount -> getCosAffinityMatrix;
getEnhancedSpeakerCount -> NMESC;
getEnhancedSpeakerCount -> forward;
getEnhancedSpeakerCount -> append;
getEnhancedSpeakerCount -> max;
getEnhancedSpeakerCount -> item;
getEnhancedSpeakerCount -> mode;
estimateNumofSpeakers -> getLaplacian;
estimateNumofSpeakers -> eigValueSh;
estimateNumofSpeakers -> getLamdaGaplist;
estimateNumofSpeakers -> sort;
estimateNumofSpeakers -> argmax;
estimateNumofSpeakers -> min;
clusterSpectralEmbeddings -> device;
clusterSpectralEmbeddings -> getSpectralEmbeddings;
clusterSpectralEmbeddings -> range;
clusterSpectralEmbeddings -> stack;
clusterSpectralEmbeddings -> kmeans_torch;
clusterSpectralEmbeddings -> append;
clusterSpectralEmbeddings -> mode;
getSpectralEmbeddings -> getLaplacian;
getSpectralEmbeddings -> eigDecompose;
getSpectralEmbeddings -> long;
getSpectralEmbeddings -> arange;
getSpectralEmbeddings -> size;
getPvalueList -> max;
getPvalueList -> int;
getPvalueList -> ValueError;
getPvalueList -> type;
getPvalueList -> min;
getPvalueList -> arange;
getPvalueList -> unsqueeze;
getPvalueList -> tensor;
getPvalueList -> floor;
getPvalueList -> linspace;
subsampleAffinityMat -> type;
subsampleAffinityMat -> max;
subsampleAffinityMat -> tensor;
subsampleAffinityMat -> item;
getEigRatio -> getAffinityGraphMat;
getEigRatio -> estimateNumofSpeakers;
getEigRatio -> argsort;
getEigRatio -> stack;
getEigRatio -> item;
getEigRatio -> max;
get_lsa_speaker_mapping -> to;
get_lsa_speaker_mapping -> linear_sum_assignment;
get_lsa_speaker_mapping -> range;
get_lsa_speaker_mapping -> int;
get_lsa_speaker_mapping -> item;
get_lsa_speaker_mapping -> zeros;
get_lsa_speaker_mapping -> arange;
get_lsa_speaker_mapping -> len;
get_lsa_speaker_mapping -> matmul;
get_minimal_indices -> to;
get_minimal_indices -> arange;
get_minimal_indices -> len;
get_minimal_indices -> max;
get_minimal_indices -> sort;
get_minimal_indices -> unique;
stitch_cluster_labels -> get_minimal_indices;
stitch_cluster_labels -> len;
stitch_cluster_labels -> unique;
stitch_cluster_labels -> cat;
stitch_cluster_labels -> min;
stitch_cluster_labels -> to;
stitch_cluster_labels -> get_lsa_speaker_mapping;
stitch_cluster_labels -> where;
stitch_cluster_labels -> gt;
stitch_cluster_labels -> tensor;
calculate_removable_counts -> cat;
calculate_removable_counts -> cumsum;
calculate_removable_counts -> enumerate;
calculate_removable_counts -> int;
calculate_removable_counts -> sort;
calculate_removable_counts -> to;
calculate_removable_counts -> range;
calculate_removable_counts -> arange;
calculate_removable_counts -> tensor;
calculate_removable_counts -> item;
merge_vectors -> mean;
merge_vectors -> tolist;
merge_vectors -> range;
merge_vectors -> tensor;
merge_vectors -> ValueError;
merge_vectors -> unsqueeze;
merge_vectors -> vstack;
merge_vectors -> hstack;
merge_vectors -> append;
get_closest_embeddings -> int;
get_closest_embeddings -> sum;
get_closest_embeddings -> ValueError;
get_closest_embeddings -> argsort;
get_first_arg_index -> int;
get_first_arg_index -> where;
onlineNMEanalysis -> NMESC;
onlineNMEanalysis -> item;
onlineNMEanalysis -> getEigRatio;
onlineNMEanalysis -> forward;
onlineNMEanalysis -> append;
onlineNMEanalysis -> int;
onlineNMEanalysis -> len;
onlineNMEanalysis -> pop;
onlineNMEanalysis -> mode;
onlineNMEanalysis -> tensor;
speaker_counter_buffer -> tensor;
speaker_counter_buffer -> append;
speaker_counter_buffer -> bincount;
speaker_counter_buffer -> argmax;
speaker_counter_buffer -> len;
speaker_counter_buffer -> pop;
speaker_counter_buffer -> int;
limit_frames_per_speaker -> min;
limit_frames_per_speaker -> int;
online_spk_num_estimation -> onlineNMEanalysis;
online_spk_num_estimation -> getAffinityGraphMat;
online_spk_num_estimation -> speaker_counter_buffer;
online_spk_num_estimation -> limit_frames_per_speaker;
online_spk_num_estimation -> item;
prepare_embedding_update -> int;
prepare_embedding_update -> empty;
prepare_embedding_update -> max;
prepare_embedding_update -> len;
prepare_embedding_update -> get_first_arg_index;
prepare_embedding_update -> vstack;
prepare_embedding_update -> hstack;
prepare_embedding_update -> ValueError;
make_constant_length_emb -> where;
make_constant_length_emb -> tile;
make_constant_length_emb -> vstack;
update_speaker_history_buffer -> prepare_embedding_update;
update_speaker_history_buffer -> make_constant_length_emb;
update_speaker_history_buffer -> append;
update_speaker_history_buffer -> vstack;
update_speaker_history_buffer -> hstack;
update_speaker_history_buffer -> get_merge_quantity;
update_speaker_history_buffer -> enumerate;
update_speaker_history_buffer -> len;
update_speaker_history_buffer -> ValueError;
update_speaker_history_buffer -> list;
update_speaker_history_buffer -> run_reducer;
update_speaker_history_buffer -> item;
get_reduced_mat -> ValueError;
get_reduced_mat -> update_speaker_history_buffer;
get_reduced_mat -> len;
match_labels -> hstack;
match_labels -> to;
match_labels -> stitch_cluster_labels;
match_labels -> ValueError;
unravel_index -> flip;
unravel_index -> tensor;
unravel_index -> append;
unravel_index -> int;
unravel_index -> item;
_step1 -> unsqueeze;
_step1 -> min;
_step2 -> where;
_step2 -> zip;
_step2 -> _reset_uncovered_mat;
_step2 -> list;
_step3 -> any;
_step3 -> sum;
_step4 -> int;
_step4 -> long;
_step4 -> unsqueeze;
_step4 -> unravel_index;
_step4 -> item;
_step4 -> tensor;
_step4 -> argmax;
_step5 -> tensor;
_step5 -> long;
_step5 -> range;
_step5 -> _reset_uncovered_mat;
_step5 -> argmax;
_step5 -> int;
_step5 -> item;
_step6 -> any;
_step6 -> min;
_allocate_more -> cat;
_allocate_more -> full_like;
_allocate_more -> zeros_like;
flatten_sort_ -> sort;
flatten_sort_ -> range;
flatten_sort_ -> copy_;
flatten_sort_ -> max;
flatten_sort_ -> unsqueeze;
flatten_sort_ -> gather;
flatten_sort_ -> to;
non_blank_frame_confidence -> isinstance;
non_blank_frame_confidence -> any;
non_blank_frame_confidence -> len;
non_blank_frame_confidence -> append;
words -> split;
generator -> readframes;
generator -> StreamingRecognizeRequest;
generator -> len;
generator -> write;
get_uniq_id_from_manifest_line -> loads;
get_uniq_id_from_manifest_line -> get_uniqname_from_filepath;
get_uniq_id_from_manifest_line -> strip;
get_uniq_id_with_dur -> get_uniqname_from_filepath;
get_uniq_id_with_dur -> str;
get_uniq_id_with_dur -> int;
get_uniq_id_with_dur -> round;
get_uniq_id_with_dur -> pow;
get_timestamps -> sorted;
get_timestamps -> keys;
get_contiguous_stamps -> deepcopy;
get_contiguous_stamps -> range;
get_contiguous_stamps -> split;
get_contiguous_stamps -> append;
get_contiguous_stamps -> len;
get_contiguous_stamps -> float;
get_contiguous_stamps -> str;
get_contiguous_stamps -> join;
merge_stamps -> deepcopy;
merge_stamps -> range;
merge_stamps -> split;
merge_stamps -> append;
merge_stamps -> len;
merge_stamps -> join;
merge_stamps -> float;
string_to_float -> round;
string_to_float -> float;
write_cluster_labels -> join;
write_cluster_labels -> open;
write_cluster_labels -> write;
get_vad_out_from_rttm_line -> split;
get_vad_out_from_rttm_line -> len;
get_vad_out_from_rttm_line -> strip;
get_vad_out_from_rttm_line -> float;
get_offset_and_duration -> get;
get_offset_and_duration -> round;
get_offset_and_duration -> SoundFile;
write_overlap_segments -> dump;
write_overlap_segments -> write;
write_overlap_segments -> round;
read_rttm_lines -> exists;
read_rttm_lines -> FileNotFoundError;
read_rttm_lines -> open;
read_rttm_lines -> readlines;
merge_int_intervals -> len;
merge_int_intervals -> tensor;
merge_int_intervals -> sort;
merge_int_intervals -> range;
merge_int_intervals -> append;
merge_int_intervals -> int;
merge_int_intervals -> cpu;
merge_int_intervals -> max;
fl2int -> item;
fl2int -> int;
fl2int -> round;
fl2int -> tensor;
int2fl -> item;
int2fl -> round;
int2fl -> tensor;
get_sub_range_list -> len;
get_sub_range_list -> is_overlap;
get_sub_range_list -> get_overlap_range;
get_sub_range_list -> append;
get_sub_range_list -> parametrize;
get_sub_range_list -> get_sub_range_list;
get_target_sig -> int;
get_target_sig -> min;
check_ranges -> range;
check_ranges -> ValueError;
tensor_to_list -> float;
tensor_to_list -> range;
get_speech_labels_for_update -> tensor_to_list;
get_speech_labels_for_update -> get_sub_range_list;
get_speech_labels_for_update -> merge_float_intervals;
get_speech_labels_for_update -> tensor;
get_speech_labels_for_update -> float;
get_new_cursor_for_update -> len;
get_online_segments_from_slices -> int;
get_online_segments_from_slices -> float;
get_online_segments_from_slices -> get_target_sig;
get_online_segments_from_slices -> append;
get_online_segments_from_slices -> ValueError;
get_online_segments_from_slices -> len;
get_online_segments_from_slices -> repeat_signal;
get_online_segments_from_slices -> min;
get_online_subsegments_from_buffer -> enumerate;
get_online_subsegments_from_buffer -> len;
get_online_subsegments_from_buffer -> get_subsegments_scriptable;
get_online_subsegments_from_buffer -> get_online_segments_from_slices;
get_online_subsegments_from_buffer -> extend;
get_online_subsegments_from_buffer -> float;
get_online_subsegments_from_buffer -> max;
get_online_subsegments_from_buffer -> item;
get_overlap_stamps -> range;
get_overlap_stamps -> len;
get_overlap_stamps -> enumerate;
get_overlap_stamps -> split;
get_overlap_stamps -> extend;
get_overlap_stamps -> append;
get_overlap_stamps -> merge_stamps;
generate_speaker_timestamps -> squeeze;
generate_speaker_timestamps -> enumerate;
generate_speaker_timestamps -> get_contiguous_stamps;
generate_speaker_timestamps -> merge_stamps;
generate_speaker_timestamps -> get_overlap_stamps;
generate_speaker_timestamps -> int;
generate_speaker_timestamps -> get_adaptive_threshold;
generate_speaker_timestamps -> tolist;
generate_speaker_timestamps -> numpy;
generate_speaker_timestamps -> append;
generate_speaker_timestamps -> range;
generate_speaker_timestamps -> cpu;
generate_speaker_timestamps -> sum;
generate_speaker_timestamps -> argsort;
extract_timestamps -> info;
extract_timestamps -> open;
extract_timestamps -> enumerate;
extract_timestamps -> readlines;
extract_timestamps -> strip;
extract_timestamps -> loads;
extract_timestamps -> append;
get_uem_object -> Timeline;
get_uem_object -> add;
get_uem_object -> Segment;
get_uem_object -> float;
print_alignment -> len;
print_alignment -> range;
print_alignment -> print;
write_lcs_alignment_to_pickle -> save;
longest_common_subsequence_merge -> len;
longest_common_subsequence_merge -> range;
longest_common_subsequence_merge -> write_lcs_alignment_to_pickle;
longest_common_subsequence_merge -> print;
longest_common_subsequence_merge -> max;
lcs_alignment_merge_buffer -> int;
lcs_alignment_merge_buffer -> longest_common_subsequence_merge;
lcs_alignment_merge_buffer -> len;
inplace_buffer_merge -> len;
speech_collate_fn -> zip;
speech_collate_fn -> item;
speech_collate_fn -> stack;
speech_collate_fn -> append;
speech_collate_fn -> max;
speech_collate_fn -> pad;
_add_chunk_to_buffer -> clone;
_update_feature_buffer -> clone;
_update_feature_buffer -> copy;
get_normalized_feature_buffer -> normalize_batch;
get_normalized_feature_buffer -> squeeze;
get_normalized_feature_buffer -> unsqueeze;
get_normalized_feature_buffer -> tensor;
get_normalized_feature_buffer -> len;
_convert_buffer_to_features -> to;
_convert_buffer_to_features -> raw_preprocessor;
_convert_buffer_to_features -> squeeze;
_convert_buffer_to_features -> _update_feature_buffer;
_convert_buffer_to_features -> unsqueeze_;
_convert_buffer_to_features -> Tensor;
update_feature_buffer -> _add_chunk_to_buffer;
update_feature_buffer -> _convert_buffer_to_features;
update_feature_buffer -> len;
update_feature_buffer -> ValueError;
update_feature_buffer -> zeros;
get_batch_frames -> append;
get_batch_frames -> copy;
get_batch_frames -> len;
get_batch_frames -> all;
get_batch_frames -> enumerate;
get_batch_frames -> next;
get_frame_buffers -> append;
get_frame_buffers -> copy;
get_frame_buffers -> range;
get_norm_consts_per_frame -> enumerate;
get_norm_consts_per_frame -> _update_feature_buffer;
get_norm_consts_per_frame -> mean;
get_norm_consts_per_frame -> std;
get_norm_consts_per_frame -> append;
get_norm_consts_per_frame -> reshape;
normalize_frame_buffers -> enumerate;
normalize_frame_buffers -> range;
normalize_frame_buffers -> len;
get_buffers_batch -> get_batch_frames;
get_buffers_batch -> len;
get_buffers_batch -> get_frame_buffers;
get_buffers_batch -> get_norm_consts_per_frame;
get_buffers_batch -> normalize_frame_buffers;
read_audio_file -> get_samples;
read_audio_file -> pad;
read_audio_file -> AudioFeatureIterator;
read_audio_file -> set_frame_reader;
read_audio_file -> int;
read_audio_file -> range;
read_audio_file -> len;
read_audio_file -> get_input_tokens;
_alignment_decoder -> range;
_alignment_decoder -> len;
_alignment_decoder -> int;
_alignment_decoder -> append;
_alignment_decoder -> ids_to_tokens;
extract_preprocessor -> deepcopy;
extract_preprocessor -> set_struct;
extract_preprocessor -> from_config_dict;
extract_preprocessor -> to;
extract_preprocessor -> get_model_device;
append_audio -> preprocess_audio;
append_audio -> append_processed_signal;
preprocess_audio -> to;
preprocess_audio -> preprocessor;
preprocess_audio -> get_model_device;
preprocess_audio -> unsqueeze_;
preprocess_audio -> Tensor;
preprocess_audio -> from_numpy;
append_processed_signal -> tensor;
append_processed_signal -> size;
append_processed_signal -> ValueError;
append_processed_signal -> normalize_batch;
append_processed_signal -> pad;
append_processed_signal -> cat;
append_processed_signal -> len;
get_input_tokens -> items;
get_input_tokens -> unsqueeze;
get_input_tokens -> RuntimeError;
get_input_tokens -> get;
get_input_tokens -> encode_dialog;
get_input_tokens -> ValueError;
get_input_tokens -> tensor;
_join_hypotheses -> Hypothesis;
_join_hypotheses -> _join_text;
_join_hypotheses -> _join_y_sequence;
_join_hypotheses -> _join_timestamp;
_join_hypotheses -> len;
_join_hypotheses -> tensor;
_join_text -> join;
_join_y_sequence -> cat;
_join_timestamp -> enumerate;
_join_timestamp -> extend;
extract_words_with_timestamps -> strip;
extract_words_with_timestamps -> finditer;
extract_words_with_timestamps -> join;
extract_words_with_timestamps -> search;
extract_words_with_timestamps -> int;
extract_words_with_timestamps -> group;
extract_words_with_timestamps -> append;
process_hypothesis -> extract_words_with_timestamps;
process_hypothesis -> update;
process_hypothesis -> _get_segment_offsets;
process_hypothesis -> segments_offset_to_time;
process_hypothesis -> len;
process_timestamp -> enumerate;
wrap_transcription -> isinstance;
wrap_transcription -> Hypothesis;
wrap_transcription -> append;
normalize_timestamp_output -> range;
normalize_timestamp_output -> len;
normalize_timestamp_output -> int;
write_vad_infer_manifest -> get;
write_vad_infer_manifest -> is_file;
write_vad_infer_manifest -> load;
write_vad_infer_manifest -> get_duration;
write_vad_infer_manifest -> Path;
write_vad_infer_manifest -> as_posix;
write_vad_infer_manifest -> append;
write_vad_infer_manifest -> open;
write_vad_infer_manifest -> write;
write_vad_infer_manifest -> absolute;
write_vad_infer_manifest -> str;
write_vad_infer_manifest_star -> write_vad_infer_manifest;
load_tensor_from_file -> open;
load_tensor_from_file -> readlines;
load_tensor_from_file -> Path;
load_tensor_from_file -> tensor;
load_tensor_from_file -> append;
load_tensor_from_file -> float;
generate_overlap_vad_seq_per_file -> load_tensor_from_file;
generate_overlap_vad_seq_per_file -> generate_overlap_vad_seq_per_tensor;
generate_overlap_vad_seq_per_file -> join;
generate_overlap_vad_seq_per_file -> open;
generate_overlap_vad_seq_per_file -> write;
generate_overlap_vad_seq_per_file -> type;
generate_overlap_vad_seq_per_file_star -> generate_overlap_vad_seq_per_file;
generate_overlap_vad_seq_per_tensor -> get;
generate_overlap_vad_seq_per_tensor -> int;
generate_overlap_vad_seq_per_tensor -> ValueError;
generate_overlap_vad_seq_per_tensor -> zeros;
generate_overlap_vad_seq_per_tensor -> enumerate;
generate_overlap_vad_seq_per_tensor -> len;
generate_overlap_vad_seq_per_tensor -> stack;
generate_overlap_vad_seq_per_tensor -> isnan;
generate_overlap_vad_seq_per_tensor -> empty;
generate_overlap_vad_seq_per_tensor -> range;
generate_overlap_vad_seq_per_tensor -> nanquantile;
generate_overlap_vad_seq_per_tensor -> cat;
generate_overlap_vad_seq_per_tensor -> unsqueeze;
merge_overlap_segment -> pad;
merge_overlap_segment -> stack;
merge_overlap_segment -> Size;
merge_overlap_segment -> sort;
percentile -> len;
percentile -> float;
percentile -> sorted;
percentile -> int;
percentile -> ceil;
cal_vad_onset_offset -> float;
cal_vad_onset_offset -> min;
cal_vad_onset_offset -> max;
cal_vad_onset_offset -> percentile;
binarization -> get;
binarization -> empty;
binarization -> range;
binarization -> merge_overlap_segment;
binarization -> len;
binarization -> unsqueeze;
binarization -> cat;
binarization -> tensor;
binarization -> max;
remove_segments -> logical_not;
remove_segments -> all;
remove_segments -> eq;
get_gap_segments -> column_stack;
get_gap_segments -> sort;
filtering -> get;
filtering -> Size;
filtering -> filter_short_segments;
filtering -> get_gap_segments;
filtering -> remove_segments;
filtering -> cat;
filtering -> merge_overlap_segment;
prepare_gen_segment_table -> get;
prepare_gen_segment_table -> cal_vad_onset_offset;
prepare_gen_segment_table -> type;
generate_vad_segment_table_per_tensor -> binarization;
generate_vad_segment_table_per_tensor -> filtering;
generate_vad_segment_table_per_tensor -> sort;
generate_vad_segment_table_per_tensor -> column_stack;
generate_vad_segment_table_per_tensor -> Size;
generate_vad_segment_table_per_file -> load_tensor_from_file;
generate_vad_segment_table_per_file -> prepare_gen_segment_table;
generate_vad_segment_table_per_file -> generate_vad_segment_table_per_tensor;
generate_vad_segment_table_per_file -> join;
generate_vad_segment_table_per_file -> get;
generate_vad_segment_table_per_file -> open;
generate_vad_segment_table_per_file -> write;
generate_vad_segment_table_per_file_star -> generate_vad_segment_table_per_file;
vad_construct_pyannote_object_per_file -> read_csv;
vad_construct_pyannote_object_per_file -> rename;
vad_construct_pyannote_object_per_file -> Annotation;
vad_construct_pyannote_object_per_file -> iterrows;
vad_construct_pyannote_object_per_file -> Segment;
vad_construct_pyannote_object_per_file -> float;
get_parameter_grid -> list;
get_parameter_grid -> pop;
get_parameter_grid -> ParameterGrid;
vad_tune_threshold_on_dev -> pred_rttm_map;
vad_tune_threshold_on_dev -> DetectionErrorRate;
vad_tune_threshold_on_dev -> get_parameter_grid;
vad_tune_threshold_on_dev -> check_if_param_valid;
vad_tune_threshold_on_dev -> ValueError;
vad_tune_threshold_on_dev -> generate_vad_segment_table;
vad_tune_threshold_on_dev -> rmtree;
vad_tune_threshold_on_dev -> report;
vad_tune_threshold_on_dev -> item;
vad_tune_threshold_on_dev -> info;
vad_tune_threshold_on_dev -> reset;
vad_tune_threshold_on_dev -> print;
vad_tune_threshold_on_dev -> float;
vad_tune_threshold_on_dev -> join;
vad_tune_threshold_on_dev -> vad_construct_pyannote_object_per_file;
vad_tune_threshold_on_dev -> metric;
vad_tune_threshold_on_dev -> str;
vad_tune_threshold_on_dev -> open;
vad_tune_threshold_on_dev -> write;
vad_tune_threshold_on_dev -> type;
pred_rttm_map -> isfile;
pred_rttm_map -> isdir;
pred_rttm_map -> keys;
pred_rttm_map -> open;
pred_rttm_map -> splitlines;
pred_rttm_map -> glob;
pred_rttm_map -> ValueError;
pred_rttm_map -> rsplit;
pred_rttm_map -> join;
pred_rttm_map -> read;
pred_rttm_map -> basename;
check_if_param_valid -> ValueError;
check_if_param_valid -> all;
check_if_param_valid -> type;
gen_pred_from_speech_segments -> zeros;
gen_pred_from_speech_segments -> sort;
gen_pred_from_speech_segments -> list;
gen_pred_from_speech_segments -> int;
stitch_segmented_asr_output -> exists;
stitch_segmented_asr_output -> mkdir;
stitch_segmented_asr_output -> open;
stitch_segmented_asr_output -> Tensor;
stitch_segmented_asr_output -> unsqueeze;
stitch_segmented_asr_output -> cat;
stitch_segmented_asr_output -> join;
stitch_segmented_asr_output -> save;
stitch_segmented_asr_output -> dump;
stitch_segmented_asr_output -> write;
stitch_segmented_asr_output -> flush;
stitch_segmented_asr_output -> info;
stitch_segmented_asr_output -> loads;
stitch_segmented_asr_output -> append;
stitch_segmented_asr_output -> len;
stitch_segmented_asr_output -> range;
stitch_segmented_asr_output -> rsplit;
stitch_segmented_asr_output -> tensor;
stitch_segmented_asr_output -> split;
construct_manifest_eval -> dict;
construct_manifest_eval -> open;
construct_manifest_eval -> loads;
construct_manifest_eval -> append;
construct_manifest_eval -> dump;
construct_manifest_eval -> write;
construct_manifest_eval -> flush;
load_rttm_file -> read_csv;
load_rttm_file -> rename;
load_rttm_file -> astype;
load_rttm_file -> sort_values;
load_rttm_file -> list;
load_rttm_file -> exists;
load_rttm_file -> ValueError;
load_rttm_file -> zip;
load_rttm_file -> Path;
merge_intervals -> sort;
merge_intervals -> append;
merge_intervals -> max;
load_speech_overlap_segments_from_rttm -> list;
load_speech_overlap_segments_from_rttm -> sort;
load_speech_overlap_segments_from_rttm -> load_rttm_file;
load_speech_overlap_segments_from_rttm -> append;
load_speech_overlap_segments_from_rttm -> max;
load_speech_overlap_segments_from_rttm -> min;
get_nonspeech_segments -> append;
get_frame_labels -> int;
get_frame_labels -> range;
get_frame_labels -> ceil;
get_frame_labels -> join;
get_frame_labels -> float;
get_frame_labels -> append;
get_frame_labels -> str;
get_frame_labels -> len;
plot_sample_from_rttm -> figure;
plot_sample_from_rttm -> load;
plot_sample_from_rttm -> get_duration;
plot_sample_from_rttm -> load_speech_segments_from_rttm;
plot_sample_from_rttm -> get_frame_labels;
plot_sample_from_rttm -> len;
plot_sample_from_rttm -> subplot;
plot_sample_from_rttm -> set_title;
plot_sample_from_rttm -> plot;
plot_sample_from_rttm -> set_xlim;
plot_sample_from_rttm -> tick_params;
plot_sample_from_rttm -> set_ylabel;
plot_sample_from_rttm -> set_ylim;
plot_sample_from_rttm -> twinx;
plot_sample_from_rttm -> legend;
plot_sample_from_rttm -> Audio;
plot_sample_from_rttm -> float;
plot_sample_from_rttm -> show;
plot_sample_from_rttm -> savefig;
plot_sample_from_rttm -> split;
plot_sample_from_rttm -> arange;
plot_sample_from_rttm -> int;
align_labels_to_frames -> len;
align_labels_to_frames -> float;
align_labels_to_frames -> long;
align_labels_to_frames -> amax;
align_labels_to_frames -> tolist;
align_labels_to_frames -> tensor;
align_labels_to_frames -> align_labels_to_frames;
align_labels_to_frames -> ceil;
align_labels_to_frames -> view;
align_labels_to_frames -> floor;
align_labels_to_frames -> repeat_interleave;
read_rttm_as_pyannote_object -> Annotation;
read_rttm_as_pyannote_object -> read_csv;
read_rttm_as_pyannote_object -> rename;
read_rttm_as_pyannote_object -> iterrows;
read_rttm_as_pyannote_object -> Segment;
convert_labels_to_speech_segments -> enumerate;
convert_labels_to_speech_segments -> append;
convert_labels_to_speech_segments -> len;
frame_vad_construct_pyannote_object_per_file -> Annotation;
frame_vad_construct_pyannote_object_per_file -> isinstance;
frame_vad_construct_pyannote_object_per_file -> endswith;
frame_vad_construct_pyannote_object_per_file -> read_rttm_as_pyannote_object;
frame_vad_construct_pyannote_object_per_file -> read_csv;
frame_vad_construct_pyannote_object_per_file -> iterrows;
frame_vad_construct_pyannote_object_per_file -> convert_labels_to_speech_segments;
frame_vad_construct_pyannote_object_per_file -> ValueError;
frame_vad_construct_pyannote_object_per_file -> Segment;
frame_vad_construct_pyannote_object_per_file -> float;
_kaldifst_maybe_raise -> ImportError;
_graphviz_maybe_raise -> ImportError;
graphviz_importer -> _graphviz_maybe_raise;
_kaldilm_maybe_raise -> ImportError;
kaldilm_importer -> _kaldilm_maybe_raise;
arpa2fst -> _kaldifst_maybe_raise;
arpa2fst -> _kaldilm_maybe_raise;
arpa2fst -> arcsort;
arpa2fst -> TemporaryDirectory;
arpa2fst -> join;
arpa2fst -> arpa2fst;
arpa2fst -> read;
arpa2fst -> SymbolTable;
arpa2fst -> open;
arpa2fst -> split;
arpa2fst -> add_symbol;
arpa2fst -> strip;
arpa2fst -> int;
add_tokenwords_ -> _kaldifst_maybe_raise;
add_tokenwords_ -> available_key;
add_tokenwords_ -> add_symbol;
add_tokenwords_ -> add_state;
add_tokenwords_ -> add_arc;
add_tokenwords_ -> find;
add_tokenwords_ -> StdArc;
add_tokenwords_ -> ArcIterator;
generate_lexicon_sentencepiece -> compile;
generate_lexicon_sentencepiece -> encode;
generate_lexicon_sentencepiece -> int;
generate_lexicon_sentencepiece -> get_vocab;
generate_lexicon_sentencepiece -> LexiconUnit;
generate_lexicon_sentencepiece -> max;
generate_lexicon_sentencepiece -> defaultdict;
generate_lexicon_sentencepiece -> zip;
generate_lexicon_sentencepiece -> Lexicon;
generate_lexicon_sentencepiece -> items;
generate_lexicon_sentencepiece -> piece_to_id;
generate_lexicon_sentencepiece -> keys;
generate_lexicon_sentencepiece -> match;
generate_lexicon_sentencepiece -> startswith;
generate_lexicon_sentencepiece -> append;
generate_lexicon_sentencepiece -> sorted;
generate_lexicon_sentencepiece -> values;
generate_lexicon_sentencepiece -> rstrip;
add_disambig_symbols -> defaultdict;
add_disambig_symbols -> copy;
add_disambig_symbols -> Lexicon;
add_disambig_symbols -> pop;
add_disambig_symbols -> tuple;
add_disambig_symbols -> append;
add_disambig_symbols -> len;
add_disambig_symbols -> LexiconUnit;
add_disambig_symbols -> int;
add_disambig_symbols -> max;
add_disambig_symbols -> lstrip;
add_disambig_symbols -> keys;
make_lexicon_fst_no_silence -> _kaldifst_maybe_raise;
make_lexicon_fst_no_silence -> StdVectorFst;
make_lexicon_fst_no_silence -> add_state;
make_lexicon_fst_no_silence -> set_final;
make_lexicon_fst_no_silence -> add_arc;
make_lexicon_fst_no_silence -> arcsort;
make_lexicon_fst_no_silence -> range;
make_lexicon_fst_no_silence -> SymbolTable;
make_lexicon_fst_no_silence -> items;
make_lexicon_fst_no_silence -> StdArc;
make_lexicon_fst_no_silence -> enumerate;
make_lexicon_fst_no_silence -> startswith;
make_lexicon_fst_no_silence -> add_symbol;
make_lexicon_fst_no_silence -> len;
make_lexicon_fst_no_silence -> max;
make_lexicon_fst_no_silence -> rstrip;
make_lexicon_fst_no_silence -> append;
make_lexicon_fst_no_silence -> RuntimeError;
as_dict -> keys;
_is_notebook -> get_ipython;
_svg_srcdoc_resize -> open;
_svg_srcdoc_resize -> readline;
_svg_srcdoc_resize -> findall;
_svg_srcdoc_resize -> startswith;
_svg_srcdoc_resize -> int;
_svg_srcdoc_resize -> read;
_svg_srcdoc_resize -> round;
levenshtein_graph_kaldi -> _kaldifst_maybe_raise;
levenshtein_graph_kaldi -> isinstance;
levenshtein_graph_kaldi -> StateIterator;
levenshtein_graph_kaldi -> arcsort;
levenshtein_graph_kaldi -> properties;
levenshtein_graph_kaldi -> warning;
levenshtein_graph_kaldi -> ValueError;
levenshtein_graph_kaldi -> copy;
levenshtein_graph_kaldi -> ArcIterator;
levenshtein_graph_kaldi -> compile;
levenshtein_graph_kaldi -> StdArc;
levenshtein_graph_kaldi -> append;
levenshtein_graph_kaldi -> add_arc;
levenshtein_graph_kaldi -> sub;
levenshtein_graph_kaldi -> to_str;
levenshtein_graph_kaldi -> type;
properties -> LatticeProperties;
properties -> properties;
load_word_lattice -> _kaldifst_maybe_raise;
load_word_lattice -> open;
load_word_lattice -> readlines;
load_word_lattice -> split;
load_word_lattice -> len;
load_word_lattice -> strip;
load_word_lattice -> Lattice;
load_word_lattice -> KaldiWordLattice;
load_word_lattice -> add_state;
load_word_lattice -> LatticeArc;
load_word_lattice -> add_arc;
load_word_lattice -> append;
load_word_lattice -> warning;
load_word_lattice -> range;
load_word_lattice -> int;
load_word_lattice -> set_final;
load_word_lattice -> RuntimeError;
load_word_lattice -> float;
load_word_lattice -> LatticeWeight;
token_ids -> items;
token_ids -> sort;
token_ids -> append;
token_ids -> startswith;
_audio_collate_fn -> keys;
_audio_collate_fn -> tuple;
_audio_collate_fn -> max;
_audio_collate_fn -> zip;
_audio_collate_fn -> append;
_audio_collate_fn -> stack;
_audio_collate_fn -> tensor;
_audio_collate_fn -> pad;
_audio_collate_fn -> RuntimeError;
_audio_collate_fn -> item;
_audio_collate_fn -> len;
sample_rate -> ValueError;
sync_setup -> isinstance;
sync_setup -> ValueError;
sync_setup -> type;
async_setup -> isinstance;
async_setup -> ValueError;
async_setup -> type;
embedding_setup -> isinstance;
embedding_setup -> ValueError;
embedding_setup -> type;
process_audio -> max;
process_audio -> abs;
process_audio -> tensor;
process_audio -> feature_extractor;
process_audio -> Transformer;
process_audio -> convert;
process_audio -> trim;
process_audio -> build;
process_audio -> exists;
process_audio -> ValueError;
process_audio -> print;
load_sync_signals -> OrderedDict;
load_sync_signals -> get_samples_synchronized;
load_sync_signals -> zip;
load_sync_signals -> tensor;
load_async_signals -> OrderedDict;
load_async_signals -> enumerate;
load_async_signals -> get_samples;
load_async_signals -> tensor;
load_embedding -> OrderedDict;
load_embedding -> enumerate;
load_embedding -> load_embedding_vector;
load_embedding -> tensor;
get_samples_synchronized -> enumerate;
get_samples_synchronized -> get_duration;
get_samples_synchronized -> min;
get_samples_synchronized -> floor;
get_samples_synchronized -> get_samples_from_file;
get_samples_synchronized -> append;
get_samples_synchronized -> len;
get_samples_synchronized -> ValueError;
get_samples_synchronized -> debug;
get_samples_synchronized -> uniform;
get_samples_from_file -> isinstance;
get_samples_from_file -> get_segment_from_file;
get_samples_from_file -> list_to_multichannel;
get_samples_from_file -> append;
get_samples_from_file -> RuntimeError;
get_samples_from_file -> type;
get_segment_from_file -> from_file;
get_segment_from_file -> segment_from_file;
get_segment_from_file -> RuntimeError;
list_to_multichannel -> isinstance;
list_to_multichannel -> stack;
list_to_multichannel -> len;
list_to_multichannel -> concatenate;
list_to_multichannel -> RuntimeError;
load_embedding_vector -> endswith;
load_embedding_vector -> RuntimeError;
load_embedding_vector -> open;
load_embedding_vector -> load;
num_channels -> __getitem__;
num_channels -> RuntimeError;
num_channels -> ValueError;
get_audio_to_target_with_reference_dataset -> AudioToTargetWithReferenceDataset;
get_audio_to_target_with_reference_dataset -> get;
get_audio_to_target_with_embedding_dataset -> AudioToTargetWithEmbeddingDataset;
get_audio_to_target_with_embedding_dataset -> get;
_key_available -> isinstance;
create_recording -> isinstance;
create_recording -> all;
create_recording -> Recording;
create_recording -> from_file;
create_recording -> info;
create_recording -> append;
create_recording -> AudioSource;
create_recording -> list;
create_recording -> range;
create_array -> endswith;
create_array -> load;
create_array -> split;
create_array -> Array;
create_array -> list;
convert_manifest_nemo_to_lhotse -> open_writer;
convert_manifest_nemo_to_lhotse -> load_jsonl;
convert_manifest_nemo_to_lhotse -> pop;
convert_manifest_nemo_to_lhotse -> create_recording;
convert_manifest_nemo_to_lhotse -> truncate;
convert_manifest_nemo_to_lhotse -> _as_relative;
convert_manifest_nemo_to_lhotse -> write;
convert_manifest_nemo_to_lhotse -> get_full_path;
convert_manifest_nemo_to_lhotse -> create_array;
convert_manifest_nemo_to_lhotse -> update;
convert_manifest_nemo_to_lhotse -> to_cut;
convert_manifest_nemo_to_lhotse -> with_channels;
convert_manifest_nemo_to_lhotse -> with_custom;
convert_manifest_nemo_to_lhotse -> len;
truncate -> astype;
_as_relative -> isinstance;
_as_relative -> zip;
_as_relative -> len;
check_angle -> isscalar;
check_angle -> ValueError;
check_angle -> min;
check_angle -> max;
wrap_to_180 -> floor;
convert_placement_to_range -> get;
convert_placement_to_range -> enumerate;
convert_placement_to_range -> all;
convert_placement_to_range -> ValueError;
convert_placement_to_range -> max;
convert_placement_to_range -> min;
convert_placement_to_range -> isscalar;
convert_placement_to_range -> array;
convert_placement_to_range -> len;
convert_placement_to_range -> str;
simulate_room_kwargs -> simulate_room;
simulate_room -> ShoeBox;
simulate_room -> save_rir_simulation;
simulate_room -> convert_numpy_to_serializable;
simulate_room -> add_microphone_array;
simulate_room -> compute_rir;
simulate_room -> spherical_relative_to_array;
simulate_room -> append;
simulate_room -> convert_rir_to_multichannel;
simulate_room -> rt60_theory;
simulate_room -> mean;
simulate_room -> len;
simulate_room -> Material;
simulate_room -> add_source;
simulate_room -> measure_rt60;
save_rir_simulation -> exists;
save_rir_simulation -> RuntimeError;
save_rir_simulation -> File;
save_rir_simulation -> items;
save_rir_simulation -> create_group;
save_rir_simulation -> enumerate;
save_rir_simulation -> create_dataset;
save_rir_simulation -> len;
save_rir_simulation -> ValueError;
convert_numpy_to_serializable -> isinstance;
convert_numpy_to_serializable -> items;
convert_numpy_to_serializable -> convert_numpy_to_serializable;
convert_numpy_to_serializable -> tolist;
convert_numpy_to_serializable -> int;
convert_numpy_to_serializable -> float;
convert_numpy_to_serializable -> item;
spherical_relative_to_array -> norm;
spherical_relative_to_array -> matmul;
spherical_relative_to_array -> arctan2;
spherical_relative_to_array -> arcsin;
convert_rir_to_multichannel -> len;
convert_rir_to_multichannel -> range;
convert_rir_to_multichannel -> max;
convert_rir_to_multichannel -> zeros;
convert_rir_to_multichannel -> enumerate;
load_rir_simulation -> File;
plot_rir_manifest_info -> read_manifest;
plot_rir_manifest_info -> figure;
plot_rir_manifest_info -> subplot;
plot_rir_manifest_info -> hist;
plot_rir_manifest_info -> xlabel;
plot_rir_manifest_info -> ylabel;
plot_rir_manifest_info -> title;
plot_rir_manifest_info -> range;
plot_rir_manifest_info -> tight_layout;
plot_rir_manifest_info -> append;
plot_rir_manifest_info -> grid;
plot_rir_manifest_info -> legend;
plot_rir_manifest_info -> savefig;
plot_rir_manifest_info -> close;
plot_rir_manifest_info -> info;
convolve_rir -> len;
convolve_rir -> convolve;
convolve_rir -> zeros;
convolve_rir -> range;
convolve_rir -> RuntimeError;
calculate_drr -> int;
calculate_drr -> range;
calculate_drr -> max;
calculate_drr -> pow2db;
calculate_drr -> sum;
calculate_drr -> abs;
pow2db -> log10;
normalize_max -> db2mag;
normalize_max -> max;
normalize_max -> abs;
simultaneously_active_rms -> int;
simultaneously_active_rms -> db2mag;
simultaneously_active_rms -> normalize_max;
simultaneously_active_rms -> range;
simultaneously_active_rms -> len;
simultaneously_active_rms -> RuntimeError;
simultaneously_active_rms -> slice;
simultaneously_active_rms -> rms;
simultaneously_active_rms -> sqrt;
simultaneously_active_rms -> sum;
simultaneously_active_rms -> abs;
rms -> sqrt;
rms -> mean;
rms -> abs;
scaled_disturbance -> simultaneously_active_rms;
scaled_disturbance -> ValueError;
scaled_disturbance -> db2mag;
prepare_source_signal -> ValueError;
prepare_source_signal -> all;
prepare_source_signal -> len;
prepare_source_signal -> range;
prepare_source_signal -> warning;
prepare_source_signal -> int;
prepare_source_signal -> choice;
prepare_source_signal -> check_min_sample_rate;
prepare_source_signal -> from_file;
prepare_source_signal -> append;
prepare_source_signal -> normalize_max;
prepare_source_signal -> sum;
prepare_source_signal -> join;
prepare_source_signal -> get;
prepare_source_signal -> concatenate;
prepare_source_signal -> isinstance;
prepare_source_signal -> simultaneously_active_rms;
prepare_source_signal -> isabs;
prepare_source_signal -> RuntimeError;
prepare_source_signal -> uniform;
prepare_source_signal -> generate_approximate_noise_field;
prepare_source_signal -> info;
prepare_source_signal -> reshape;
prepare_source_signal -> str;
prepare_source_signal -> ceil;
prepare_source_signal -> array;
check_min_sample_rate -> get_samplerate;
check_min_sample_rate -> RuntimeError;
generate_approximate_noise_field -> theoretical_coherence;
generate_approximate_noise_field -> transform_to_match_coherence;
generate_approximate_noise_field -> ValueError;
simulate_room_mix -> load_rir;
simulate_room_mix -> get_early_rir;
simulate_room_mix -> prepare_source_signal;
simulate_room_mix -> convolve_rir;
simulate_room_mix -> copy;
simulate_room_mix -> rms;
simulate_room_mix -> max;
simulate_room_mix -> items;
simulate_room_mix -> update;
simulate_room_mix -> convert_numpy_to_serializable;
simulate_room_mix -> load_rir_simulation;
simulate_room_mix -> int;
simulate_room_mix -> min;
simulate_room_mix -> write;
simulate_room_mix -> scaled_disturbance;
simulate_room_mix -> db2mag;
simulate_room_mix -> abs;
simulate_room_mix -> mag2db;
simulate_room_mix -> debug;
simulate_room_mix -> save_audio;
simulate_room_mix -> RuntimeError;
simulate_room_mix -> argmax;
simulate_room_mix -> append;
simulate_room_mix -> get;
simulate_room_mix -> calculate_drr;
load_rir -> load_rir_simulation;
load_rir -> RuntimeError;
get_early_rir -> int;
get_early_rir -> min;
get_early_rir -> copy;
get_early_rir -> argmax;
mag2db -> log10;
save_audio -> write;
simulate_room_mix_helper -> simulate_room_mix;
plot_mix_manifest_info -> read_manifest;
plot_mix_manifest_info -> figure;
plot_mix_manifest_info -> subplot;
plot_mix_manifest_info -> hist;
plot_mix_manifest_info -> xlabel;
plot_mix_manifest_info -> ylabel;
plot_mix_manifest_info -> title;
plot_mix_manifest_info -> len;
plot_mix_manifest_info -> range;
plot_mix_manifest_info -> tight_layout;
plot_mix_manifest_info -> append;
plot_mix_manifest_info -> grid;
plot_mix_manifest_info -> legend;
plot_mix_manifest_info -> savefig;
plot_mix_manifest_info -> close;
plot_mix_manifest_info -> info;
internal_positions -> matmul;
radius -> max;
radius -> norm;
get_rotation -> check_angle;
get_rotation -> from_euler;
rotate -> get_rotation;
rotate -> apply;
new_rotated_array -> ArrayGeometry;
new_rotated_array -> rotate;
check_cfg -> get;
check_cfg -> enumerate;
check_cfg -> ValueError;
check_cfg -> isscalar;
check_cfg -> len;
check_cfg -> info;
generate_room_params -> isscalar;
generate_room_params -> get;
generate_room_params -> range;
generate_room_params -> ImportError;
generate_room_params -> ValueError;
generate_room_params -> zeros;
generate_room_params -> enumerate;
generate_room_params -> RuntimeError;
generate_room_params -> len;
generate_room_params -> uniform;
generate_room_params -> inverse_sabine;
generate_room_params -> debug;
generate_room_params -> str;
generate_array -> convert_placement_to_range;
generate_array -> range;
generate_array -> ArrayGeometry;
generate_array -> zeros;
generate_array -> translate;
generate_array -> dict;
generate_array -> rotate;
generate_array -> append;
generate_array -> len;
generate_array -> uniform;
generate_array -> check_angle;
generate_array -> isscalar;
generate_array -> ValueError;
generate_source_position -> convert_placement_to_range;
generate_source_position -> range;
generate_source_position -> append;
generate_source_position -> len;
generate_source_position -> uniform;
generate_target -> choice;
generate_target -> select_target_source;
generate_target -> len;
generate_target -> debug;
generate_target -> array;
generate_target -> norm;
generate_target -> RuntimeError;
generate_target -> arange;
generate_target -> str;
generate_target -> isabs;
generate_target -> dirname;
generate_target -> join;
generate_target -> int;
generate_target -> tolist;
generate_target -> isinstance;
generate_target -> all;
generate_target -> ValueError;
generate_target -> min;
generate_target -> get;
generate_target -> append;
select_target_source -> choice;
select_target_source -> all;
select_target_source -> get;
select_target_source -> append;
generate_interference -> get;
generate_interference -> list;
generate_interference -> remove;
generate_interference -> range;
generate_interference -> integers;
generate_interference -> append;
generate_interference -> uniform;
generate_interference -> choice;
generate_interference -> warning;
generate_interference -> len;
generate_interference -> wrap_to_180;
generate_interference -> abs;
generate_mix -> dict;
generate_mix -> argmin;
generate_mix -> to_object;
generate_mix -> get;
generate_mix -> isscalar;
generate_mix -> len;
generate_mix -> integers;
generate_mix -> choice;
calculate_mean -> make_seq_mask_like;
calculate_mean -> expand_as;
calculate_mean -> mean;
calculate_mean -> sum;
calculate_mean -> RuntimeError;
scale_invariant_target -> calculate_mean;
scale_invariant_target -> make_seq_mask_like;
scale_invariant_target -> expand_as;
scale_invariant_target -> RuntimeError;
scale_invariant_target -> abs;
convolution_invariant_target -> view;
convolution_invariant_target -> rfft;
convolution_invariant_target -> irfft;
convolution_invariant_target -> toeplitz;
convolution_invariant_target -> solve;
convolution_invariant_target -> make_seq_mask_like;
convolution_invariant_target -> expand_as;
convolution_invariant_target -> ceil;
convolution_invariant_target -> RuntimeError;
convolution_invariant_target -> min;
convolution_invariant_target -> warning;
convolution_invariant_target -> log2;
convolution_invariant_target -> abs;
convolution_invariant_target -> conj;
toeplitz -> size;
toeplitz -> cat;
toeplitz -> flip;
toeplitz -> unfold;
calculate_sdr_batch -> calculate_mean;
calculate_sdr_batch -> ValueError;
calculate_sdr_batch -> make_seq_mask_like;
calculate_sdr_batch -> expand_as;
calculate_sdr_batch -> scale_invariant_target;
calculate_sdr_batch -> log10;
calculate_sdr_batch -> RuntimeError;
calculate_sdr_batch -> convolution_invariant_target;
calculate_sdr_batch -> abs;
calculate_mse_batch -> calculate_mean;
calculate_mse_batch -> make_seq_mask_like;
calculate_mse_batch -> expand_as;
calculate_mse_batch -> RuntimeError;
calculate_mse_batch -> abs;
calculate_mae_batch -> calculate_mean;
calculate_mae_batch -> make_seq_mask_like;
calculate_mae_batch -> expand_as;
calculate_mae_batch -> abs;
calculate_mae_batch -> RuntimeError;
restore_asr_model_from_cloud -> debug;
restore_asr_model_from_cloud -> replace;
restore_asr_model_from_cloud -> joinpath;
restore_asr_model_from_cloud -> hexdigest;
restore_asr_model_from_cloud -> maybe_download_from_cloud;
restore_asr_model_from_cloud -> restore_from;
restore_asr_model_from_cloud -> split;
restore_asr_model_from_cloud -> resolve_cache_dir;
restore_asr_model_from_cloud -> md5;
restore_asr_model_from_cloud -> encode;
maybe_download_from_cloud -> joinpath;
maybe_download_from_cloud -> exists;
maybe_download_from_cloud -> info;
maybe_download_from_cloud -> ValueError;
maybe_download_from_cloud -> makedirs;
maybe_download_from_cloud -> home;
maybe_download_from_cloud -> remove;
maybe_download_from_cloud -> str;
maybe_download_from_cloud -> download;
maybe_download_from_cloud -> sleep;
resolve_cache_dir -> get;
resolve_cache_dir -> joinpath;
resolve_cache_dir -> resolve;
resolve_cache_dir -> home;
resolve_cache_dir -> Path;
spectral_loss -> mel_transform;
spectral_loss -> mae_loss;
spectral_loss -> log10;
spectral_loss -> clamp;
asr_loss -> to;
asr_loss -> asr_model;
asr_loss -> CrossEntropyLoss;
asr_loss -> loss_fn;
asr_loss -> resample;
asr_loss -> squeeze;
asr_loss -> next;
asr_loss -> full;
asr_loss -> parameters;
asr_loss -> size;
loss_fn -> binary_cross_entropy_with_logits;
loss_fn -> stack;
loss_fn -> sum;
sisnr_loss -> cal_si_snr_with_pit;
sisnr_loss -> mean;
cal_si_snr_with_pit -> size;
cal_si_snr_with_pit -> get_mask;
cal_si_snr_with_pit -> float;
cal_si_snr_with_pit -> unsqueeze;
cal_si_snr_with_pit -> sum;
cal_si_snr_with_pit -> transpose;
cal_si_snr_with_pit -> new_tensor;
cal_si_snr_with_pit -> scatter_;
cal_si_snr_with_pit -> einsum;
cal_si_snr_with_pit -> argmax;
cal_si_snr_with_pit -> max;
cal_si_snr_with_pit -> log10;
cal_si_snr_with_pit -> list;
cal_si_snr_with_pit -> view;
cal_si_snr_with_pit -> permutations;
cal_si_snr_with_pit -> new_zeros;
cal_si_snr_with_pit -> range;
get_mask -> size;
get_mask -> new_ones;
get_mask -> range;
get_mask -> max;
get_mask -> ones;
get_mask -> _create_masks;
reorder_source -> size;
reorder_source -> index_select;
reorder_source -> zeros_like;
reorder_source -> range;
_trim_inputs -> enumerate;
_batch_reduction -> sum;
_batch_reduction -> len;
_select_channel -> isinstance;
_select_channel -> ValueError;
_select_channel -> with_channels;
__repr__ -> repr;
__repr__ -> __repr__;
__repr__ -> super;
__repr__ -> int;
__repr__ -> tuple;
__repr__ -> round;
__repr__ -> format;
__repr__ -> get_config_dict;
__repr__ -> __str__;
__repr__ -> str;
__repr__ -> is_scripting;
__repr__ -> as_posix;
__repr__ -> type;
_get_num_dataloaders -> isinstance;
_get_num_dataloaders -> len;
_get_num_dataloaders -> ValueError;
on_validation_start -> _setup_metrics;
on_validation_start -> on_validation_start;
on_validation_start -> super;
on_validation_start -> _should_validate_ema_weights;
on_validation_start -> swap_model_weights;
on_validation_start -> to;
on_validation_start -> configure_vae;
on_validation_start -> warn;
on_validation_start -> collect;
on_validation_start -> _init_te_userbuffers;
on_validation_start -> extract_weights;
on_validation_start -> extract_ema_weights;
on_validation_start -> zip;
on_validation_start -> isinstance;
on_validation_start -> allclose;
on_test_start -> _setup_metrics;
on_test_start -> on_test_start;
on_test_start -> super;
on_test_start -> _should_validate_ema_weights;
on_test_start -> swap_model_weights;
on_test_start -> GlobalBatchDataFetcher;
on_test_start -> _init_te_userbuffers;
_setup_process_dataloader -> _setup_dataloader_from_config;
_setup_process_dataloader -> get;
_setup_process_dataloader -> min;
_setup_process_dataloader -> DictConfig;
_setup_process_dataloader -> cpu_count;
match_batch_length -> size;
match_batch_length -> pad;
configure_callbacks -> get;
configure_callbacks -> isinstance;
configure_callbacks -> enumerate;
configure_callbacks -> append;
configure_callbacks -> SpeechEnhancementLoggingCallback;
configure_callbacks -> _setup_test_dataloader;
configure_callbacks -> instantiate;
configure_callbacks -> LoggingCallback;
configure_callbacks -> Path;
configure_callbacks -> ValueError;
_step -> typecheck;
_step -> size;
_step -> encoder;
_step -> generate_time;
_step -> perturb_kernel_params;
_step -> randn_like;
_step -> cat;
_step -> estimator;
_step -> loss;
_step -> amax;
_step -> abs;
_step -> NeuralType;
_step -> AudioSignal;
_step -> tuple;
_step -> LengthsType;
_step -> LossType;
_step -> rearrange;
_step -> zeros_like;
_step -> to;
_step -> sample;
_step -> vector_field;
_step -> ssl_pretrain_masking;
_step -> float;
_step -> rand;
_step -> get_alphas;
_step -> get_sigmas;
_step -> view;
_step -> NotImplementedError;
_step -> loss_encoded;
_step -> match_batch_length;
_step -> loss_time;
_step -> disable_checks;
_step -> decoder;
_step -> forward;
_step -> hasattr;
_step -> AttributeError;
_step -> from_data_step;
_step -> from_forward_step;
_step -> from_loss_reduction;
generate_time -> rand;
perturb_kernel_params -> typecheck;
perturb_kernel_params -> all;
perturb_kernel_params -> perturb_kernel_mean;
perturb_kernel_params -> perturb_kernel_std;
perturb_kernel_params -> view;
perturb_kernel_params -> NeuralType;
perturb_kernel_params -> VoidType;
perturb_kernel_params -> tuple;
perturb_kernel_params -> FloatType;
forward_eval -> typecheck;
forward_eval -> inference_mode;
forward_eval -> forward_internal;
forward_eval -> NeuralType;
forward_eval -> AudioSignal;
forward_eval -> tuple;
forward_eval -> LengthsType;
vector_field -> _broadcast_time;
get_alphas -> alpha;
get_alphas -> alpha_bar_from_alpha;
apply_weight_norm -> apply;
apply_weight_norm -> isinstance;
apply_weight_norm -> weight_norm;
apply_weight_norm -> apply_weight_norm_lstm;
apply_weight_norm -> hasattr;
apply_weight_norm_lstm -> weight_norm;
remove_weight_norm -> apply;
remove_weight_norm -> isinstance;
remove_weight_norm -> remove_weight_norm;
remove_weight_norm -> remove_weight_norm_lstm;
remove_weight_norm -> print;
remove_weight_norm -> len;
remove_weight_norm -> state_dict;
remove_weight_norm_lstm -> remove_weight_norm;
_apply_weight_norm -> isinstance;
_apply_weight_norm -> weight_norm;
_apply_weight_norm -> apply_weight_norm_lstm;
_remove_weight_norm -> isinstance;
_remove_weight_norm -> remove_weight_norm;
_remove_weight_norm -> remove_weight_norm_lstm;
get_mean_time_channel -> mean;
get_mean_time_channel -> calculate_mean;
get_mean_std_time_channel -> std_mean;
get_mean_std_time_channel -> get_mean_time_channel;
get_mean_std_time_channel -> pow;
get_mean_std_time_channel -> calculate_mean;
get_mean_std_time_channel -> mean;
get_mean_std_time_channel -> sqrt;
get_mean_std_time_channel -> clamp;
normalize_mean -> typecheck;
normalize_mean -> get_mean_time_channel;
normalize_mean -> NeuralType;
normalize_mean -> SpectrogramType;
normalize_mean -> tuple;
normalize_mean -> LengthsType;
normalize_mean_var -> typecheck;
normalize_mean_var -> get_mean_std_time_channel;
normalize_mean_var -> NeuralType;
normalize_mean_var -> SpectrogramType;
normalize_mean_var -> tuple;
normalize_mean_var -> LengthsType;
wrap_to_pi -> tensor;
wrap_to_pi -> remainder;
update_masks -> typecheck;
update_masks -> exp;
update_masks -> max;
update_masks -> sum;
update_masks -> NeuralType;
update_weights -> typecheck;
update_weights -> mean;
update_weights -> NeuralType;
update_weights -> array;
update_weights -> sum;
update_weights -> request_data;
update_pdf -> typecheck;
update_pdf -> size;
update_pdf -> sum;
update_pdf -> eigh;
update_pdf -> clamp;
update_pdf -> einsum;
update_pdf -> log;
update_pdf -> to;
update_pdf -> conj;
update_pdf -> transpose;
update_pdf -> pow;
update_pdf -> NeuralType;
update_pdf -> max;
update_pdf -> sqrt;
update_pdf -> abs;
get_output_length -> long;
get_output_length -> add;
get_output_length -> div;
get_output_length -> mul;
get_output_length -> sub;
context_size -> set_default_att_context_size;
prior_sampling -> typecheck;
prior_sampling -> NeuralType;
prior_sampling -> VoidType;
prior_sampling -> perturb_kernel_std;
prior_sampling -> view;
prior_sampling -> ones;
prior_sampling -> randn_like;
prior_sampling -> NotImplementedError;
discretize -> coefficients;
discretize -> sqrt;
discretize -> discretize;
discretize -> score_estimator;
discretize -> cat;
discretize -> mask_sequence_tensor;
discretize -> pow;
coefficients -> typecheck;
coefficients -> view;
coefficients -> sqrt;
coefficients -> mask_sequence_tensor;
coefficients -> pow;
coefficients -> NeuralType;
coefficients -> VoidType;
coefficients -> tuple;
coefficients -> LengthsType;
coefficients -> FloatType;
coefficients -> dim;
coefficients -> NotImplementedError;
log_std_ratio -> log;
perturb_kernel_mean -> typecheck;
perturb_kernel_mean -> exp;
perturb_kernel_mean -> view;
perturb_kernel_mean -> NeuralType;
perturb_kernel_mean -> VoidType;
perturb_kernel_mean -> tuple;
perturb_kernel_mean -> FloatType;
perturb_kernel_std -> typecheck;
perturb_kernel_std -> sqrt;
perturb_kernel_std -> pow;
perturb_kernel_std -> exp;
perturb_kernel_std -> NeuralType;
perturb_kernel_std -> tuple;
perturb_kernel_std -> FloatType;
mask_sequence_tensor -> len;
mask_sequence_tensor -> cumsum;
mask_sequence_tensor -> rearrange;
mask_sequence_tensor -> ones;
mask_sequence_tensor -> ValueError;
_broadcast_time -> join;
_broadcast_time -> rearrange;
flow -> mean;
flow -> std;
attention -> norm;
attention -> q;
attention -> k;
attention -> v;
attention -> contiguous;
attention -> scaled_dot_product_attention;
attention -> rearrange;
attention -> transpose;
attention -> matmul;
attention -> softmax;
attention -> drop;
attention -> view;
attention -> size;
attention -> _get_relative_embeddings;
attention -> _matmul_with_relative_keys;
attention -> _relative_position_to_absolute_position;
attention -> masked_fill;
attention -> _absolute_position_to_relative_position;
attention -> sqrt;
attention -> to;
attention -> tril;
attention -> _matmul_with_relative_values;
attention -> _attention_bias_proximal;
attention -> triu;
attention -> ones_like;
trace -> sum;
trace -> unsqueeze;
trace -> diagonal;
apply_diag_reg -> diag_embed;
apply_diag_reg -> trace;
apply_diag_reg -> unsqueeze;
apply_diag_reg -> ones;
apply_filter -> einsum;
apply_filter -> is_complex;
apply_filter -> TypeError;
apply_filter -> ValueError;
apply_filter -> conj;
apply_filter -> size;
apply_filter -> RuntimeError;
apply_filter -> convtensor;
apply_ban -> size;
apply_ban -> einsum;
apply_ban -> sqrt;
apply_ban -> abs;
apply_ban -> conj;
covariance_matrix -> rearrange;
covariance_matrix -> einsum;
covariance_matrix -> ValueError;
covariance_matrix -> conj;
covariance_matrix -> mean;
covariance_matrix -> reduce;
covariance_matrix -> sum;
convtensor -> pad;
convtensor -> unfold;
convtensor -> RuntimeError;
estimate_correlations -> einsum;
estimate_correlations -> make_seq_mask_like;
estimate_correlations -> masked_fill;
estimate_correlations -> conj;
estimate_filter -> reshape;
estimate_filter -> solve;
estimate_filter -> permute;
estimate_filter -> diag_embed;
estimate_filter -> sum;
estimate_filter -> unsqueeze;
estimate_filter -> ones;
estimate_filter -> diagonal;
unfold -> transpose;
unfold -> reshape;
unfold -> unfold_mod;
unfold -> unsqueeze;
permute_convtensor -> permute;
permute_convtensor -> reshape;
permute_convtensor -> range;
permute_convtensor -> flip;
permute_convtensor -> arange;
ncsnpp -> fixture;
ncsnpp -> NoiseConditionalScoreNetworkPlusPlus;
init_weights_ -> modules;
init_weights_ -> isinstance;
init_weights_ -> xavier_uniform_;
init_weights_ -> hasattr;
init_weights_ -> init_weights_;
init_weights_ -> zeros_;
pad_input -> typecheck;
pad_input -> pad;
pad_input -> NeuralType;
alpha_t_max -> tensor;
alpha_t_max -> alpha;
alpha -> ones_like;
alpha -> exp;
sigma_t_max -> tensor;
sigma_t_max -> sigma;
sigma -> sqrt;
sigma -> log;
sigma -> exp;
sigma -> neg;
alpha_bar_from_alpha -> alpha;
alpha_bar_from_alpha -> tensor;
sigma_bar_from_sigma -> sigma;
sigma_bar_from_sigma -> tensor;
sigma_bar_from_sigma -> sqrt;
f -> zeros_like;
g -> sqrt;
time_max -> debug;
time_min -> debug;
num_steps -> debug;
estimator_time -> info;
estimator_time -> ValueError;
get_feedforward_layer -> int;
get_feedforward_layer -> Sequential;
get_feedforward_layer -> Linear;
get_feedforward_layer -> GEGLU;
get_feedforward_layer -> Dropout;
gelu -> gelu;
init_alibi -> Parameter;
init_alibi -> rearrange;
init_alibi -> register_buffer;
init_alibi -> is_integer;
init_alibi -> warning;
init_alibi -> float;
init_alibi -> arange;
init_alibi -> get_slopes;
init_alibi -> log2;
init_alibi -> abs;
init_alibi -> unsqueeze;
get_slopes -> arange;
get_slopes -> is_integer;
get_slopes -> get_slopes_power_of_2;
get_slopes -> log2;
get_slopes -> floor;
get_slopes -> range;
get_slopes -> get_slopes;
get_alibi_bias -> repeat;
_get_key_padding_mask -> to;
_get_key_padding_mask -> unsqueeze;
_get_key_padding_mask -> expand;
_get_key_padding_mask -> len;
_get_key_padding_mask -> arange;
transformerunet -> fixture;
transformerunet -> TransformerUNet;
sinc_unnormalized -> sinc;
theoretical_coherence -> zeros;
theoretical_coherence -> squareform;
theoretical_coherence -> range;
theoretical_coherence -> ValueError;
theoretical_coherence -> pdist;
theoretical_coherence -> arange;
theoretical_coherence -> sinc_unnormalized;
estimated_coherence -> mean;
estimated_coherence -> zeros;
estimated_coherence -> range;
estimated_coherence -> RuntimeError;
estimated_coherence -> ValueError;
estimated_coherence -> abs;
estimated_coherence -> conjugate;
estimated_coherence -> sqrt;
transform_to_match_coherence -> mean;
transform_to_match_coherence -> corrcoef;
transform_to_match_coherence -> fill_diagonal;
transform_to_match_coherence -> any;
transform_to_match_coherence -> stft;
transform_to_match_coherence -> transpose;
transform_to_match_coherence -> zeros_like;
transform_to_match_coherence -> matmul;
transform_to_match_coherence -> istft;
transform_to_match_coherence -> sqrt;
transform_to_match_coherence -> RuntimeError;
transform_to_match_coherence -> cholesky;
transform_to_match_coherence -> swapaxes;
transform_to_match_coherence -> abs;
transform_to_match_coherence -> eig;
transform_to_match_coherence -> ValueError;
transform_to_match_coherence -> len;
transform_to_match_coherence -> max;
get_segment_start -> correlate;
get_segment_start -> argmax;
get_segment_start -> len;
get_segment_start -> ValueError;
calculate_sdr_numpy -> mean;
calculate_sdr_numpy -> ValueError;
calculate_sdr_numpy -> scale_invariant_target_numpy;
calculate_sdr_numpy -> log10;
calculate_sdr_numpy -> convolution_invariant_target_numpy;
calculate_sdr_numpy -> abs;
scale_invariant_target_numpy -> mean;
scale_invariant_target_numpy -> abs;
convolution_invariant_target_numpy -> rfft;
convolution_invariant_target_numpy -> irfft;
convolution_invariant_target_numpy -> toeplitz;
convolution_invariant_target_numpy -> solve;
convolution_invariant_target_numpy -> ceil;
convolution_invariant_target_numpy -> log2;
convolution_invariant_target_numpy -> abs;
convolution_invariant_target_numpy -> conj;
convolution_invariant_target_numpy -> len;
convmtx_numpy -> hstack;
convmtx_numpy -> toeplitz;
convmtx_numpy -> ValueError;
convmtx_numpy -> len;
convmtx_numpy -> zeros;
convmtx_mc_numpy -> range;
convmtx_mc_numpy -> hstack;
convmtx_mc_numpy -> ValueError;
convmtx_mc_numpy -> append;
convmtx_mc_numpy -> convmtx_numpy;
_get_logger -> ValueError;
_get_logger -> isinstance;
_get_logger -> hasattr;
_log_audio -> size;
_log_audio -> range;
_log_audio -> add_audio;
_log_audio -> log;
_log_audio -> Audio;
_log_audio -> mkdir;
_log_audio -> write;
_get_sinc_resample_kernel -> min;
_get_sinc_resample_kernel -> ceil;
_get_sinc_resample_kernel -> clamp_;
_get_sinc_resample_kernel -> where;
_get_sinc_resample_kernel -> Exception;
_get_sinc_resample_kernel -> ValueError;
_get_sinc_resample_kernel -> int;
_get_sinc_resample_kernel -> tensor;
_get_sinc_resample_kernel -> to;
_get_sinc_resample_kernel -> format;
_get_sinc_resample_kernel -> arange;
_get_sinc_resample_kernel -> cos;
_get_sinc_resample_kernel -> float;
_get_sinc_resample_kernel -> i0;
_get_sinc_resample_kernel -> sin;
_get_sinc_resample_kernel -> sqrt;
_apply_sinc_resample_kernel -> size;
_apply_sinc_resample_kernel -> view;
_apply_sinc_resample_kernel -> pad;
_apply_sinc_resample_kernel -> conv1d;
_apply_sinc_resample_kernel -> reshape;
_apply_sinc_resample_kernel -> long;
_apply_sinc_resample_kernel -> is_floating_point;
_apply_sinc_resample_kernel -> TypeError;
_apply_sinc_resample_kernel -> int;
_apply_sinc_resample_kernel -> transpose;
_apply_sinc_resample_kernel -> ceil;
_apply_sinc_resample_kernel -> as_tensor;
log_metrics -> str;
log_metrics -> items;
log_metrics -> type;
log_metrics -> item;
log_metrics -> log;
log_metrics -> tuple;
ema_update -> no_grad;
ema_update -> _foreach_mul_;
ema_update -> _foreach_add_;
run_ema_update_cpu -> ema_update;
run_ema_update_cpu -> synchronize;
_should_validate_ema_weights -> _ema_initialized;
swap_model_weights -> isinstance;
swap_model_weights -> switch_main_parameter_weights;
on_validation_end -> _should_validate_ema_weights;
on_validation_end -> swap_model_weights;
on_validation_end -> to;
on_validation_end -> on_validation_end;
on_validation_end -> collect;
on_validation_end -> super;
on_validation_end -> extract_weights;
on_validation_end -> zip;
on_validation_end -> isinstance;
on_validation_end -> allclose;
on_validation_end -> cpu;
on_test_end -> _should_validate_ema_weights;
on_test_end -> swap_model_weights;
on_test_end -> _cleanup_on_execution_end;
_ema_initialized -> any;
_ema_initialized -> isinstance;
switch_main_parameter_weights -> join;
switch_main_parameter_weights -> zip;
switch_main_parameter_weights -> all_parameters;
switch_main_parameter_weights -> swap_tensors;
save_ema_model -> swap_model_weights;
save_original_optimizer_state -> isinstance;
step -> join;
step -> _should_update_at_step;
step -> any;
step -> list;
step -> tuple;
step -> getattr;
step -> step;
step -> update;
step -> Stream;
step -> all_parameters;
step -> to;
step -> deepcopy;
step -> detach;
step -> len;
step -> float;
step -> isinstance;
step -> ValueError;
step -> _init_step_index;
step -> _get_variance;
step -> _threshold_sample;
step -> clamp;
step -> randn_tensor;
step -> closure;
step -> _get_options;
step -> _rms;
step -> _get_lr;
step -> div_;
step -> mul_;
step -> add_;
step -> RuntimeError;
step -> pow;
step -> _approx_sq_grad;
step -> clamp_;
step -> copy_;
step -> zeros_like;
step -> mean;
step -> rsqrt;
step -> zeros;
step -> no_grad;
step -> tensor;
step -> sqrt;
step -> item;
step -> dict;
step -> enable_grad;
step -> append;
step -> is_available;
step -> _multi_tensor_adan;
step -> _single_tensor_adan;
step -> _fused_adan_multi_tensor;
step -> _fused_adan_single_tensor;
step -> sum;
step -> clone;
step -> nvtx_range_push;
step -> nvtx_range_pop;
step -> zip;
step -> _get_scale_async;
step -> ones;
step -> squeeze;
step -> all_reduce;
step -> multi_tensor_applier;
step -> super;
step -> _check_inf_per_device;
step -> param_is_not_shared;
step -> param_is_not_tensor_parallel_duplicate;
step -> reciprocal;
step -> get_model_parallel_group;
step -> double;
step -> max;
step -> norm;
step -> min;
step -> pop;
step -> synchronize;
step -> _copy_main_params_to_model_params;
step -> addcmul_;
step -> type_as;
step -> int;
step -> addcdiv_;
step -> echo;
step -> gen;
step -> zero_grad;
step -> training_step;
step -> secho;
step -> reset_max_memory_allocated;
step -> iter;
step -> str;
step -> memory_allocated;
step -> max_memory_allocated;
step -> backward;
swap_tensors -> empty_like;
swap_tensors -> copy_;
swap_ema_weights -> switch_main_parameter_weights;
__getattr__ -> getattr;
__getattr__ -> __getattr__;
__getattr__ -> super;
__getattr__ -> len;
__getattr__ -> AttributeError;
__getattr__ -> _get_abs_string_index;
__getattr__ -> getattr_proxy;
__getattr__ -> LightningNotInstalledException;
__getattr__ -> UnavailableError;
__getattr__ -> get;
__getattr__ -> index;
add_param_group -> add_param_group;
get_iterable -> isinstance;
get_iterable -> __iter__;
get_iterable -> arange;
get_iterable -> iter;
get_iterable -> len;
get_iterable -> shuffle;
temperature_generator -> get;
temperature_generator -> RandomState;
temperature_generator -> len;
temperature_generator -> power;
temperature_generator -> ValueError;
temperature_generator -> append;
temperature_generator -> array;
temperature_generator -> sum;
temperature_generator -> choice;
temperature_generator -> arange;
round_robin_generator -> len;
round_robin_generator -> range;
random_generator -> get;
random_generator -> RandomState;
random_generator -> len;
random_generator -> ValueError;
random_generator -> choice;
random_generator -> arange;
get_iterable_by_lang -> isinstance;
get_iterable_by_lang -> __iter__;
get_iterable_by_lang -> arange;
get_iterable_by_lang -> iter;
get_iterable_by_lang -> len;
get_iterable_by_lang -> shuffle;
build_single_CS_sample -> LongTensor;
build_single_CS_sample -> list;
build_single_CS_sample -> enumerate;
build_single_CS_sample -> rand;
build_single_CS_sample -> get_sample_from_language;
build_single_CS_sample -> append;
build_single_CS_sample -> cat;
build_single_CS_sample -> set;
build_single_CS_sample -> len;
build_single_CS_sample -> RuntimeError;
build_single_CS_sample -> zeros;
build_single_CS_sample -> BytesIO;
build_single_CS_sample -> write;
build_single_CS_sample -> seek;
build_single_CS_sample -> from_file;
build_single_CS_sample -> perturb;
build_single_CS_sample -> tensor;
build_single_CS_sample -> long;
build_single_CS_sample -> choice;
build_single_CS_sample -> array;
build_single_CS_sample -> item;
build_single_CS_sample -> to;
build_single_CS_sample -> mean;
build_single_CS_sample -> numpy;
build_single_CS_sample -> trim_zeros;
build_single_CS_sample -> sum;
build_single_CS_sample -> maximum;
build_single_CS_sample -> map;
build_single_CS_sample -> count_nonzero;
build_single_CS_sample -> cpu;
build_single_CS_sample -> int;
get_sample_from_language -> next;
get_sample_from_language -> get_iterable_by_lang;
prep_underlying_datasets -> get_worker_info;
prep_underlying_datasets -> len;
prep_underlying_datasets -> get_iterable_by_lang;
prep_underlying_datasets -> range;
prep_underlying_datasets -> Subset;
get_prompt_format_fn -> mro;
get_prompt_format_fn -> ValueError;
get_prompt_format_fn -> isinstance;
get_prompt_format_fn -> type;
get_prompt_format_fn -> list;
get_prompt_format_fn -> keys;
fn -> range;
read_cutset_from_config -> isinstance;
read_cutset_from_config -> DictConfig;
read_cutset_from_config -> get;
read_cutset_from_config -> read_dataset_config;
read_cutset_from_config -> all;
read_cutset_from_config -> read_nemo_manifest;
read_cutset_from_config -> read_lhotse_manifest;
read_cutset_from_config -> IncompleteConfigError;
read_dataset_config -> isinstance;
read_dataset_config -> parse_and_combine_datasets;
read_dataset_config -> get;
read_dataset_config -> load;
read_nemo_manifest -> data_type_parser;
read_nemo_manifest -> get;
read_nemo_manifest -> isinstance;
read_nemo_manifest -> info;
read_nemo_manifest -> zip;
read_nemo_manifest -> mux;
read_nemo_manifest -> CutSet;
read_nemo_manifest -> repeat;
read_nemo_manifest -> LazyNeMoTarredIterator;
read_nemo_manifest -> LazyNeMoIterator;
read_nemo_manifest -> len;
read_nemo_manifest -> to_shards;
read_nemo_manifest -> append;
read_lhotse_manifest -> data_type_parser;
read_lhotse_manifest -> get;
read_lhotse_manifest -> isinstance;
read_lhotse_manifest -> map;
read_lhotse_manifest -> warn;
read_lhotse_manifest -> info;
read_lhotse_manifest -> from_shar;
read_lhotse_manifest -> partial;
read_lhotse_manifest -> repeat;
read_lhotse_manifest -> mux;
read_lhotse_manifest -> from_file;
read_lhotse_manifest -> _resolve_shar_inputs;
read_lhotse_manifest -> append;
read_lhotse_manifest -> RuntimeError;
read_lhotse_manifest -> len;
read_lhotse_manifest -> expand_sharded_filepaths;
read_lhotse_manifest -> keys;
read_lhotse_manifest -> items;
read_lhotse_manifest -> type;
get_known_config_data_types -> keys;
data_type_parser -> isinstance;
parse_and_combine_datasets -> data_type_parser;
parse_and_combine_datasets -> all;
parse_and_combine_datasets -> len;
parse_and_combine_datasets -> copy;
parse_and_combine_datasets -> items;
parse_and_combine_datasets -> parse_group;
parse_and_combine_datasets -> append;
parse_and_combine_datasets -> mux;
parse_and_combine_datasets -> warning;
parse_and_combine_datasets -> ValueError;
parse_and_combine_datasets -> get;
parse_group -> get_known_config_data_types;
parse_group -> get_parser_fn;
parse_group -> parser_fn;
parse_group -> parse_and_combine_datasets;
parse_group -> map;
parse_group -> get;
parse_group -> partial;
read_txt_paths -> data_type_parser;
read_txt_paths -> CutSet;
read_txt_paths -> LhotseTextAdapter;
read_txt_paths -> get;
read_txt_paths -> repeat;
read_txt_pair_paths -> data_type_parser;
read_txt_pair_paths -> CutSet;
read_txt_pair_paths -> LhotseTextPairAdapter;
read_txt_pair_paths -> get;
read_txt_pair_paths -> repeat;
read_nemo_sft_jsonl -> data_type_parser;
read_nemo_sft_jsonl -> CutSet;
read_nemo_sft_jsonl -> NeMoSFTJsonlAdapter;
read_nemo_sft_jsonl -> get;
read_nemo_sft_jsonl -> repeat;
read_multimodal_conversation_jsonl -> data_type_parser;
read_multimodal_conversation_jsonl -> CutSet;
read_multimodal_conversation_jsonl -> NeMoMultimodalConversationJsonlAdapter;
read_multimodal_conversation_jsonl -> get;
read_multimodal_conversation_jsonl -> repeat;
attach_tags -> items;
attach_tags -> setattr;
mux -> infinite_mux;
mux -> len;
mux -> mux;
mux -> repeat;
_resolve_shar_inputs -> dict;
_resolve_shar_inputs -> sorted;
_resolve_shar_inputs -> glob;
_resolve_shar_inputs -> Path;
read_lhotse_as_conversation -> data_type_parser;
read_lhotse_as_conversation -> read_cutset_from_config;
read_lhotse_as_conversation -> map;
read_lhotse_as_conversation -> hasattr;
read_lhotse_as_conversation -> NeMoMultimodalConversation;
read_lhotse_as_conversation -> AudioTurn;
read_lhotse_as_conversation -> TextTurn;
resolve_relative_paths -> isinstance;
resolve_relative_paths -> resolve_recording;
resolve_relative_paths -> resolve_array;
resolve_relative_paths -> items;
resolve_relative_paths -> resolve_relative_paths;
resolve_relative_paths -> get_full_path;
resolve_relative_paths -> Path;
resolve_relative_paths -> str;
resolve_recording -> get_full_path;
resolve_array -> isinstance;
resolve_array -> resolve_array;
resolve_array -> Path;
resolve_array -> str;
resolve_array -> get_full_path;
to_shards -> len;
to_shards -> LazyNeMoTarredIterator;
to_shards -> zip;
to_shards -> values;
make_structured_with_schema_warnings -> structured;
make_structured_with_schema_warnings -> set;
make_structured_with_schema_warnings -> discard;
make_structured_with_schema_warnings -> masked_copy;
make_structured_with_schema_warnings -> merge;
make_structured_with_schema_warnings -> get;
make_structured_with_schema_warnings -> isinstance;
make_structured_with_schema_warnings -> DictConfig;
make_structured_with_schema_warnings -> keys;
make_structured_with_schema_warnings -> warning;
make_structured_with_schema_warnings -> list;
make_structured_with_schema_warnings -> to_container;
make_structured_with_schema_warnings -> join;
_decorator -> isinstance;
cut_to_conversation -> hasattr;
cut_to_conversation -> NeMoMultimodalConversation;
cut_to_conversation -> AudioTurn;
cut_to_conversation -> TextTurn;
maybe_set_cuda_expandable_segments -> is_available;
maybe_set_cuda_expandable_segments -> warn;
maybe_set_cuda_expandable_segments -> _set_allocator_settings;
maybe_set_cuda_expandable_segments -> len;
maybe_set_cuda_expandable_segments -> info;
maybe_set_cuda_expandable_segments -> get;
get_lhotse_dataloader_from_multi_config -> gather_shared_opts;
get_lhotse_dataloader_from_multi_config -> fix_random_seed;
get_lhotse_dataloader_from_multi_config -> items;
get_lhotse_dataloader_from_multi_config -> all;
get_lhotse_dataloader_from_multi_config -> DataLoader;
get_lhotse_dataloader_from_multi_config -> structured;
get_lhotse_dataloader_from_multi_config -> resolve_seed;
get_lhotse_dataloader_from_multi_config -> create;
get_lhotse_dataloader_from_multi_config -> append;
get_lhotse_dataloader_from_multi_config -> ZipSampler;
get_lhotse_dataloader_from_multi_config -> dict;
get_lhotse_dataloader_from_multi_config -> make_structured_with_schema_warnings;
get_lhotse_dataloader_from_multi_config -> get_lhotse_sampler_from_config;
get_lhotse_dataloader_from_multi_config -> RoundRobinSampler;
get_lhotse_dataloader_from_multi_config -> get;
get_lhotse_dataloader_from_multi_config -> isinstance;
get_lhotse_dataloader_from_multi_config -> IncompleteConfigError;
get_lhotse_dataloader_from_multi_config -> values;
get_lhotse_dataloader_from_multi_config -> keys;
get_lhotse_dataloader_from_multi_config -> RuntimeError;
get_lhotse_dataloader_from_multi_config -> IterableDatasetWrapper;
get_lhotse_dataloader_from_multi_config -> make_worker_init_fn;
get_lhotse_dataloader_from_multi_config -> len;
get_lhotse_dataloader_from_single_config -> info;
get_lhotse_dataloader_from_single_config -> make_structured_with_schema_warnings;
get_lhotse_dataloader_from_single_config -> resolve_seed;
get_lhotse_dataloader_from_single_config -> fix_random_seed;
get_lhotse_dataloader_from_single_config -> get_lhotse_sampler_from_config;
get_lhotse_dataloader_from_single_config -> DataLoader;
get_lhotse_dataloader_from_single_config -> dict;
get_lhotse_dataloader_from_single_config -> IterableDatasetWrapper;
get_lhotse_dataloader_from_single_config -> make_worker_init_fn;
get_lhotse_sampler_from_config -> read_cutset_from_config;
get_lhotse_sampler_from_config -> determine_use_iterable_dataset;
get_lhotse_sampler_from_config -> resample;
get_lhotse_sampler_from_config -> CutSet;
get_lhotse_sampler_from_config -> filter;
get_lhotse_sampler_from_config -> determine_bucket_duration_bins;
get_lhotse_sampler_from_config -> determine_sampling_constraint;
get_lhotse_sampler_from_config -> info;
get_lhotse_sampler_from_config -> map;
get_lhotse_sampler_from_config -> LazyFlattener;
get_lhotse_sampler_from_config -> guess_parse_cutset;
get_lhotse_sampler_from_config -> mix;
get_lhotse_sampler_from_config -> mux;
get_lhotse_sampler_from_config -> truncate;
get_lhotse_sampler_from_config -> cut_into_windows;
get_lhotse_sampler_from_config -> pad;
get_lhotse_sampler_from_config -> DurationFilter;
get_lhotse_sampler_from_config -> TokenCountFilter;
get_lhotse_sampler_from_config -> DynamicBucketingSampler;
get_lhotse_sampler_from_config -> DynamicCutSampler;
get_lhotse_sampler_from_config -> partial;
get_lhotse_sampler_from_config -> warning;
get_lhotse_sampler_from_config -> perturb_speed;
get_lhotse_sampler_from_config -> TokenPerSecondFilter;
get_lhotse_sampler_from_config -> TokenPerTokenFilter;
get_lhotse_sampler_from_config -> CutConcatenate;
get_lhotse_sampler_from_config -> ReverbWithImpulseResponse;
get_lhotse_sampler_from_config -> isinstance;
get_lhotse_sampler_from_config -> TokenizerWrapper;
get_lhotse_sampler_from_config -> tuple;
get_lhotse_sampler_from_config -> Random;
get_lhotse_sampler_from_config -> from_file;
gather_shared_opts -> all;
gather_shared_opts -> structured;
gather_shared_opts -> resolve_seed;
gather_shared_opts -> create;
gather_shared_opts -> get;
determine_bucket_duration_bins -> to_container;
determine_bucket_duration_bins -> isinstance;
determine_bucket_duration_bins -> tolist;
determine_bucket_duration_bins -> tuple;
determine_bucket_duration_bins -> float;
determine_bucket_duration_bins -> linspace;
determine_sampling_constraint -> MultimodalFixedBucketBatchSizeConstraint2D;
determine_sampling_constraint -> filter;
determine_sampling_constraint -> MultimodalSamplingConstraint;
determine_sampling_constraint -> FixedBucketBatchSizeConstraint2D;
determine_sampling_constraint -> TimeConstraint;
determine_sampling_constraint -> BucketingFilter;
determine_sampling_constraint -> isinstance;
tokenize_with_prompt -> isinstance;
tokenize_with_prompt -> apply_prompt_format_fn;
tokenize_with_prompt -> items;
tokenize_with_prompt -> setattr;
tokenize_with_prompt -> resolve;
_normalize_loudness -> normalize_loudness;
_merge_supervisions -> merge_supervisions;
_flatten_alt_text -> move_to_memory;
_flatten_alt_text -> pop;
_flatten_alt_text -> values;
_flatten_alt_text -> copy;
_flatten_alt_text -> map_supervisions;
_flatten_alt_text -> append;
_flatten_alt_text -> isinstance;
_flatten_alt_text -> get;
_flatten_alt_text -> fastcopy;
make_cut_with_subset_inmemory_recording -> to_cut;
make_cut_with_subset_inmemory_recording -> BytesIO;
make_cut_with_subset_inmemory_recording -> save_audio;
make_cut_with_subset_inmemory_recording -> seek;
make_cut_with_subset_inmemory_recording -> Recording;
make_cut_with_subset_inmemory_recording -> truncate;
make_cut_with_subset_inmemory_recording -> load_audio;
make_cut_with_subset_inmemory_recording -> abs;
make_cut_with_subset_inmemory_recording -> RuntimeError;
make_cut_with_subset_inmemory_recording -> LibsndfileBackend;
make_cut_with_subset_inmemory_recording -> AudioSource;
make_cut_with_subset_inmemory_recording -> getvalue;
validate_extra_fields -> isinstance;
validate_extra_fields -> get;
validate_extra_fields -> is_supported;
validate_extra_fields -> supported_types;
supported_types -> list;
_to_custom_attr_dict -> items;
_create_cut -> _create_recording;
_create_cut -> to_cut;
_create_cut -> ifnone;
_create_cut -> MonoCut;
_create_cut -> truncate;
_create_cut -> Recording;
_create_cut -> round;
_create_cut -> compute_num_samples;
_create_cut -> AudioSource;
attach_to -> NotImplementedError;
attach_to -> _maybe_init;
attach_to -> setattr;
attach_to -> next;
attach_to -> RuntimeError;
attach_to -> choice;
__add__ -> LazyIteratorChain;
__add__ -> isinstance;
__add__ -> item;
__add__ -> CallbackConnector;
__add__ -> defaultdict;
__add__ -> ValueError;
__add__ -> UnavailableError;
_create_recording -> Recording;
_create_recording -> from_file;
_create_recording -> is_datastore_path;
_create_recording -> compute_num_samples;
_create_recording -> AudioSource;
_validate -> set;
_validate -> validate_extra_fields;
_validate -> sorted;
_validate -> split;
_validate -> fail;
shard_ids -> sorted;
shard_ids -> keys;
_iter_sequential -> open;
_iter_sequential -> open_best;
_iter_sequential -> read;
_iter_sequential -> extractfile;
_iter_sequential -> RuntimeError;
__init_subclass__ -> __init_subclass__;
__init_subclass__ -> super;
__init_subclass__ -> get_roles;
__init_subclass__ -> get_template;
__init_subclass__ -> get_slots;
__init_subclass__ -> len;
__init_subclass__ -> getattr;
__init_subclass__ -> get;
__init_subclass__ -> _mangled;
__init_subclass__ -> SaveRestoreConnector;
__init_subclass__ -> _io_register_serialization;
_maybe_init -> iter;
_maybe_init -> map;
_maybe_init -> open_best;
_maybe_init -> list;
_maybe_init -> Random;
_maybe_init -> resolve_seed;
find_smallest_bucket -> isinstance;
find_smallest_bucket -> all;
find_smallest_bucket -> argmax;
find_smallest_bucket -> bisect_left;
find_smallest_bucket -> item;
find_smallest_bucket -> len;
find_smallest_bucket -> asarray;
_measure_tokens -> hasattr;
_measure_tokens -> sum;
_measure_tokens -> len;
_measure_tps -> _measure_tokens;
measure_length -> isinstance;
measure_length -> RuntimeError;
measure_length -> ceil;
measure_length -> has_custom;
measure_length -> type;
measure_length -> len;
measure_length -> _measure_tokens;
exceeded -> exceeded;
close_to_exceeding -> close_to_exceeding;
bucketing_2d_enabled -> isinstance;
select_bucket -> find_smallest_bucket;
select_bucket -> measure_length;
default_text_example_prompt_format_fn -> registered_prompt_format_fn;
default_text_example_prompt_format_fn -> encode_dialog;
default_src_tgt_prompt_format_fn -> registered_prompt_format_fn;
default_src_tgt_prompt_format_fn -> encode_dialog;
default_sft_prompt_format_fn -> registered_prompt_format_fn;
default_sft_prompt_format_fn -> encode_dialog;
default_sft_prompt_format_fn -> RuntimeError;
_compute_num_audio_tokens -> sum;
_compute_num_audio_tokens -> RuntimeError;
_compute_num_audio_tokens -> ceil;
_compute_num_audio_tokens -> isinstance;
default_multimodal_conversation_prompt_format_fn -> registered_prompt_format_fn;
default_multimodal_conversation_prompt_format_fn -> groupby;
default_multimodal_conversation_prompt_format_fn -> encode_dialog;
default_multimodal_conversation_prompt_format_fn -> join;
default_multimodal_conversation_prompt_format_fn -> isinstance;
default_multimodal_conversation_prompt_format_fn -> hasattr;
apply_prompt_format -> apply_prompt_format_fn;
apply_prompt_format -> get;
to_dict -> title;
to_dict -> to_dict;
to_dict -> dict;
input_length -> _compute_num_audio_tokens;
output_length -> _compute_num_audio_tokens;
total_length -> _compute_num_audio_tokens;
has_audio_turns -> any;
has_audio_turns -> isinstance;
has_text_turns -> any;
has_text_turns -> isinstance;
list_cuts -> isinstance;
_iter_tar -> list;
_iter_tar -> zip;
_iter_tar -> resolve_seed;
_iter_tar -> shuffle;
_iter_tar -> iter;
_iter_tar -> load_jsonl;
_iter_tar -> TarIterator;
_iter_tar -> deque;
_iter_tar -> Random;
_iter_tar -> next;
_iter_tar -> str;
_iter_tar -> to_cut;
_iter_tar -> append;
_iter_tar -> NeMoMultimodalConversation;
_iter_tar -> TextTurn;
_iter_tar -> AudioTurn;
_iter_tar -> lower;
_iter_tar -> popleft;
_iter_jsonl -> resolve_seed;
_iter_jsonl -> shuffle;
_iter_jsonl -> load_jsonl;
_iter_jsonl -> Random;
_iter_jsonl -> NeMoMultimodalConversation;
_iter_jsonl -> TextTurn;
_iter_jsonl -> AudioTurn;
_iter_jsonl -> lower;
_iter_jsonl -> to_cut;
_iter_jsonl -> from_file;
_iter_jsonl -> get_full_path;
_setup_writers -> JsonlShardWriter;
_setup_writers -> AudioTarWriter;
_setup_writers -> is_valid_url;
_setup_writers -> mkdir;
_setup_writers -> Path;
_maybe_increment_shard -> _setup_writers;
compute_topk_accuracy -> range;
compute_topk_accuracy -> len;
compute_topk_accuracy -> item;
compute_topk_accuracy -> append;
compute_topk_accuracy -> float;
top_k -> type;
top_k -> list;
f1_score -> split;
f1_score -> sum;
f1_score -> Counter;
f1_score -> values;
f1_score -> len;
f1_score -> normalize;
f1_score -> _get_tokens;
f1_score -> int;
f1_score -> normalize_answer;
white_space_fix -> join;
white_space_fix -> split;
remove_articles -> sub;
remove_punc -> set;
remove_punc -> join;
on_train_end -> info;
on_train_end -> read_tb_log;
on_train_end -> eval_tflops_per_sec_per_gpu;
on_train_end -> add_scalar;
on_train_end -> NotImplementedError;
on_train_end -> error;
on_train_end -> on_train_end;
on_train_end -> save_to;
on_train_end -> _cleanup_on_execution_end;
on_train_end -> pl_check_param_hashes_across_dp_replicas;
on_train_end -> is_initialized;
on_train_end -> enable_on_rank;
on_train_end -> get_rank;
on_train_end -> _dump_snapshot;
on_train_end -> _record_memory_history;
on_train_end -> memory_allocated;
on_train_end -> max_memory_reserved;
on_train_end -> isinstance;
on_train_end -> _monitor_candidates;
on_train_end -> is_global_rank_zero;
on_train_end -> io_dump;
on_train_end -> super;
on_train_end -> format_checkpoint_name;
on_train_end -> debug;
on_train_end -> _save_last_checkpoint;
on_train_end -> from_trainer;
on_train_end -> ckpt_to_dir;
on_train_end -> __exit__;
on_train_end -> setup;
on_train_end -> iter;
on_train_end -> _get_checkpoint_io;
on_train_end -> maybe_finalize_save_checkpoint;
on_train_end -> get_num_unfinalized_calls;
on_train_end -> barrier;
on_train_end -> _backup_existing_nemo_ckpt;
on_train_end -> warning;
on_train_end -> isdir;
on_train_end -> broadcast;
on_train_end -> restore;
on_train_end -> rm;
on_train_end -> _format_nemo_checkpoint_name;
on_train_end -> split;
on_train_end -> get_filesystem;
on_train_end -> release;
on_train_end -> len;
on_train_end -> train_dataloader;
on_train_end -> assert_counts;
read_tb_log -> glob;
read_tb_log -> sort;
read_tb_log -> FileNotFoundError;
read_tb_log -> EventAccumulator;
read_tb_log -> Reload;
read_tb_log -> Scalars;
read_tb_log -> info;
read_tb_log -> len;
read_tb_log -> isfile;
read_tb_log -> round;
read_tb_log -> KeyError;
read_tb_log -> getmtime;
read_tb_log -> join;
eval_tflops_per_sec_per_gpu -> eval_model_flops;
eval_tflops_per_sec_per_gpu -> array;
eval_tflops_per_sec_per_gpu -> mean;
eval_tflops_per_sec_per_gpu -> isinstance;
eval_tflops_per_sec_per_gpu -> len;
eval_model_flops -> info;
eval_model_flops -> KeyError;
eval_model_flops -> len;
eval_model_flops -> list;
eval_model_flops -> keys;
eval_model_flops -> is_initialized;
eval_model_flops -> get_world_size;
eval_model_flops -> items;
perplexity -> Popen;
perplexity -> communicate;
perplexity -> wait;
perplexity -> join;
perplexity -> split;
punctuation_error_rate -> DatasetPunctuationErrorRate;
punctuation_error_rate -> compute;
compute_rates -> sum;
compute_rates -> namedtuple;
compute_rates -> values;
compute_rates -> punctuation_rates;
compute_rates -> keys;
compute_rates -> items;
compute_operation_amounts -> tokenize;
compute_operation_amounts -> mask_punct_tokens;
compute_operation_amounts -> count;
compute_operation_amounts -> len;
compute_operation_amounts -> range;
compute_operation_amounts -> findall;
compute_operation_amounts -> sum;
compute_operation_amounts -> join;
compute_operation_amounts -> min;
count -> isinstance;
count -> quick_iter_options;
count -> RuntimeError;
count -> count;
count -> get_parser_fn;
count -> hasattr;
sum_amounts -> items;
sum_amounts -> keys;
adapter_unfreeze -> parameters;
adapter_unfreeze -> requires_grad_;
adapter_unfreeze -> adapter_unfreeze;
adapter_unfreeze -> super;
__mask_text__ -> copy;
convert_tokens_to_ids -> isinstance;
convert_tokens_to_ids -> get;
convert_tokens_to_ids -> append;
last_linear_layer -> getattr;
get_tunnel -> lru_cache;
get_tunnel -> SSHTunnel;
get_tunnel -> _get_tunnel_cached;
get_tunnel -> info;
get_tunnel -> LocalTunnel;
get_mounts_from_config -> get;
get_mounts_from_config -> range;
get_mounts_from_config -> len;
get_mounts_from_config -> split;
get_mounts_from_config -> ValueError;
ln_lstm -> StackedLSTM;
ln_lstm -> ValueError;
ln_lstm -> warning;
init_stacked_lstm -> ModuleList;
init_stacked_lstm -> layer;
init_stacked_lstm -> range;
_flatten_parameters -> flatten_parameters;
_flatten_parameters -> isinstance;
_flatten_parameters -> _flatten_parameters;
_parse_hidden_state -> ValueError;
_parse_hidden_state -> range;
register_external_repo -> ValueError;
get_unmounted_path -> get_mounts_from_config;
get_unmounted_path -> ValueError;
get_unmounted_path -> startswith;
get_unmounted_path -> split;
get_unmounted_path -> len;
get_exp_handles -> isinstance;
get_exp_handles -> _get_handles;
get_exp_handles -> from_title;
get_exp_handles -> append;
get_exp_handles -> status;
get_exp_handles -> from_id;
get_exp_handles -> ValueError;
get_exp_handles -> warning;
_get_handles -> append;
_get_handles -> status;
get_timeout -> strptime;
get_free_port -> isinstance;
get_free_port -> randint;
get_free_port -> ValueError;
get_reward_server_command -> check_if_mounted;
get_reward_server_command -> get_free_port;
get_reward_server_command -> startswith;
get_reward_server_command -> ValueError;
get_server_command -> check_if_mounted;
get_server_command -> startswith;
get_server_command -> get_ray_server_cmd;
read_config -> open;
read_config -> safe_load;
get_cluster_config -> get;
get_cluster_config -> read_config;
get_cluster_config -> isinstance;
get_cluster_config -> exists;
get_cluster_config -> ValueError;
get_cluster_config -> set_nemorun_home;
get_cluster_config -> Path;
get_cluster_config -> cwd;
_get_tunnel_cached -> SSHTunnel;
progress_callback -> write;
progress_callback -> flush;
progress_callback -> int;
cluster_download -> rstrip;
cluster_download -> split;
cluster_download -> join;
cluster_download -> run;
cluster_download -> int;
cluster_download -> open_sftp;
cluster_download -> get;
cluster_download -> print;
cluster_download -> makedirs;
cluster_download -> remove;
cluster_download -> strip;
cluster_download -> open;
cluster_download -> extractall;
cluster_download -> OutputWatcher;
cluster_upload -> open_sftp;
cluster_upload -> put;
cluster_upload -> print;
cluster_upload -> str;
put -> info;
put -> keys;
put -> isinstance;
put -> jsonify;
put -> dumps;
put -> get_json;
put -> send_do_generate;
put -> generate;
put -> str;
put -> error;
put -> len;
put -> all;
put -> tolist;
put -> type;
put -> update_neighbors;
put -> get_emb;
put -> b64encode;
put -> decode;
put -> get_knn;
put -> reset;
put -> update_weights;
put -> hasattr;
put -> write_index;
put -> add_docs_to_index;
put -> index_gpu_to_cpu;
put -> open;
put -> dump;
put -> NotImplementedError;
get_git_repo_path -> getcwd;
get_git_repo_path -> strip;
get_git_repo_path -> Path;
get_git_repo_path -> chdir;
get_git_repo_path -> decode;
get_git_repo_path -> run;
get_packager -> get_git_repo_path;
get_packager -> get_registered_external_repo;
get_packager -> bool;
get_packager -> append;
get_packager -> GitArchivePackager;
get_packager -> warning;
get_packager -> PatternPackager;
get_packager -> len;
get_packager -> items;
get_packager -> HybridPackager;
get_packager -> str;
get_packager -> getenv;
get_packager -> is_dir;
get_packager -> Path;
get_env_variables -> get;
get_env_variables -> strip;
get_env_variables -> info;
get_env_variables -> str;
get_env_variables -> count;
get_env_variables -> split;
get_env_variables -> ValueError;
get_env_variables -> get_token;
get_executor -> get_env_variables;
get_executor -> get_mounts_from_config;
get_executor -> get_packager;
get_executor -> get;
get_executor -> SlurmExecutor;
get_executor -> tuple;
get_executor -> DockerExecutor;
get_executor -> range;
get_executor -> append;
get_executor -> ValueError;
get_executor -> get_tunnel;
get_executor -> CustomJobDetails;
get_executor -> join;
get_executor -> get_unmounted_path;
get_executor -> strip;
get_executor -> keys;
temporary_env_update -> copy;
temporary_env_update -> items;
temporary_env_update -> append;
temporary_env_update -> get;
stdout -> Path;
srun_stdout -> Path;
stderr -> Path;
srun_stderr -> Path;
ls_term -> join;
_compute_softmax -> exp;
_compute_softmax -> append;
flatten_iterable -> isinstance;
flatten_iterable -> flatten_iterable;
apply_rope_scaling -> info;
apply_rope_scaling -> tensor;
apply_rope_scaling -> append;
apply_rope_scaling -> where;
clean_text -> warn_common_chars;
clean_text -> unidecode;
clean_text -> lower;
clean_text -> sub;
clean_text -> clean_numbers;
clean_text -> clean_abbreviations;
clean_text -> clean_punctuations;
clean_text -> strip;
clean_text -> join;
clean_text -> isalnum;
clean_text -> isspace;
warn_common_chars -> search;
warn_common_chars -> warning;
clean_numbers -> NumberCleaner;
clean_numbers -> sub;
clean_abbreviations -> sub;
clean_punctuations -> items;
clean_punctuations -> sub;
clean_punctuations -> translate;
clean_punctuations -> format;
format_final_number -> inflect_engine;
format_final_number -> reset;
format_final_number -> number_to_words;
format_final_number -> sub;
format_final_number -> group;
clean -> inflect_engine;
clean -> group;
clean -> match;
clean -> int;
clean -> format;
clean -> append;
clean -> search;
clean -> sub;
clean -> number_to_words;
clean -> join;
clean -> format_final_number;
clean -> len;
clean -> range;
convert_to_word -> number_to_words;
convert_to_word -> group;
convert_to_word -> inflect_engine;
__parse_texts -> splitext;
__parse_texts -> exists;
__parse_texts -> ValueError;
__parse_texts -> tolist;
__parse_texts -> list;
__parse_texts -> open;
__parse_texts -> readlines;
__parse_texts -> read_csv;
__parse_texts -> item_iter;
item_iter -> isinstance;
item_iter -> defaultdict;
item_iter -> debug;
item_iter -> str;
item_iter -> get;
item_iter -> len;
item_iter -> items;
item_iter -> RuntimeError;
item_iter -> open;
item_iter -> error;
item_iter -> DataStoreObject;
item_iter -> expanduser;
item_iter -> strip;
item_iter -> parse_func;
item_iter -> append;
_get_len -> len;
_get_len -> ValueError;
_get_len -> split;
_get_len -> _get_element_len;
__parse_item -> loads;
__parse_item -> dict;
__parse_item -> pop;
__parse_item -> get_full_path;
__parse_item -> str;
__parse_item -> get;
__parse_item -> open;
__parse_item -> read;
__parse_item -> strip;
__parse_item -> warning;
__parse_item -> choice;
__parse_item -> ValueError;
__parse_item -> items;
__parse_item -> get_audio_file;
__parse_item -> isinstance;
__parse_item -> startswith;
__parse_item -> append;
__parse_item -> type;
__parse_item -> replace;
relative_speaker_parser -> split;
relative_speaker_parser -> dict;
relative_speaker_parser -> set;
relative_speaker_parser -> append;
relative_speaker_parser -> keys;
relative_speaker_parser -> len;
_parse_item -> loads;
_parse_item -> expanduser;
_parse_item -> dict;
_parse_item -> pop;
_parse_item -> ValueError;
_parse_item -> get_full_path;
split_rttm_line -> split;
split_rttm_line -> round;
split_rttm_line -> float;
split_rttm_line -> strip;
__parse_item_rttm -> loads;
__parse_item_rttm -> expanduser;
__parse_item_rttm -> dict;
__parse_item_rttm -> pop;
__parse_item_rttm -> splitext;
__parse_item_rttm -> ValueError;
__parse_item_rttm -> basename;
__parse_item_rttm -> get;
__parse_item_rttm -> isinstance;
__parse_item_rttm -> get_full_path;
__parse_item_rttm -> append;
__parse_item_rttm -> exists;
__parse_item_rttm -> FileNotFoundError;
get_audio_file -> isinstance;
get_audio_file -> ValueError;
get_audio_file -> append;
get_audio_file -> type;
is_tarred_dataset -> basename;
is_tarred_dataset -> match;
get_datastore_object -> is_datastore_path;
get_datastore_object -> ais_endpoint;
get_datastore_object -> datastore_path_to_local_path;
get_datastore_object -> RuntimeError;
get_datastore_object -> dirname;
get_datastore_object -> debug;
get_datastore_object -> range;
get_datastore_object -> isfile;
get_datastore_object -> isdir;
get_datastore_object -> makedirs;
get_datastore_object -> ais_binary;
get_datastore_object -> list2cmdline;
get_datastore_object -> check_call;
get_datastore_object -> warning;
get_datastore_object -> str;
_tokenize -> enumerate;
_tokenize -> split;
_tokenize -> append;
_tokenize -> get;
_tokenize -> _naive_tokenize;
_tokenize -> list;
_tokenize -> strip;
_tokenize -> len;
_tokenize -> zip;
_tokenize -> text_to_tokens;
_tokenize -> extend;
_normalize -> strip;
_normalize -> lower;
_normalize -> clean_text;
__make_trans_table -> maketrans;
__make_trans_table -> replace;
__make_trans_table -> len;
map_manifest_values_to_special_tokens -> copy;
map_manifest_values_to_special_tokens -> startswith;
map_manifest_values_to_special_tokens -> endswith;
canary -> registered_prompt_format_fn;
canary -> isinstance;
canary -> set;
canary -> join;
canary -> append;
canary -> encode_dialog;
canary -> TypeError;
canary -> get_slots;
canary -> remove;
canary -> RuntimeError;
canary -> dict;
canary -> item;
canary -> ifnone;
canary -> get;
get_slots -> copy;
get_slots -> get;
get_slots -> set;
get_slots -> sorted;
get_slots -> append;
get_slots -> info;
get_slots -> listdir;
get_slots -> readlines;
get_slots -> findall;
get_slots -> len;
get_slots -> open;
get_slots -> split;
get_slots -> add;
get_slots -> enumerate;
get_slots -> strip;
get_slots -> join;
get_slots -> int;
_validate_slot_values -> _validate_slot_values;
_validate_slot_values -> pop;
_validate_slot_values -> super;
_validate_slot_values -> set;
_validate_slot_values -> matches;
encode_turn -> map_manifest_values_to_special_tokens;
encode_turn -> encode_turn;
encode_turn -> super;
encode_turn -> _apply_tokenizer;
encode_turn -> get;
encode_turn -> replace;
encode_turn -> _mangled;
encode_turn -> startswith;
encode_turn -> endswith;
canary2 -> registered_prompt_format_fn;
canary2 -> isinstance;
canary2 -> items;
canary2 -> join;
canary2 -> append;
canary2 -> encode_dialog;
canary2 -> TypeError;
canary2 -> set;
canary2 -> RuntimeError;
canary2 -> dict;
canary2 -> token_to_id;
canary2 -> item;
canary2 -> ifnone;
canary2 -> get;
matches -> isinstance;
_validate_defaults -> isinstance;
_validate_defaults -> get_roles;
_validate_defaults -> get_slots;
get_roles -> lru_cache;
get_roles -> list;
get_roles -> keys;
_apply_tokenizer -> isinstance;
_apply_tokenizer -> startswith;
_apply_tokenizer -> endswith;
_apply_tokenizer -> text_to_ids;
_apply_tokenizer -> append;
_apply_tokenizer -> get_eos;
_apply_tokenizer -> get_bos;
_apply_tokenizer -> len;
gemma1 -> registered_prompt_format_fn;
gemma1 -> isinstance;
gemma1 -> has_custom;
gemma1 -> encode_dialog;
gemma1 -> append;
llama2 -> registered_prompt_format_fn;
llama2 -> isinstance;
llama2 -> has_custom;
llama2 -> encode_dialog;
llama2 -> append;
llama2_src_tgt_text_example -> registered_prompt_format_fn;
llama2_src_tgt_text_example -> encode_dialog;
llama2_sft_text_example -> registered_prompt_format_fn;
llama2_sft_text_example -> encode_dialog;
llama3 -> registered_prompt_format_fn;
llama3 -> isinstance;
llama3 -> has_custom;
llama3 -> append;
llama3 -> encode_dialog;
plain -> registered_prompt_format_fn;
plain -> isinstance;
plain -> has_custom;
plain -> encode_dialog;
plain -> append;
t5nmt -> registered_prompt_format_fn;
t5nmt -> defaultdict;
t5nmt -> isinstance;
t5nmt -> hasattr;
t5nmt -> encode_dialog;
t5nmt -> TypeError;
t5nmt -> dict;
t5nmt -> append;
t5nmt -> RuntimeError;
t5nmt -> len;
t5nmt_src_tgt_text_example -> registered_prompt_format_fn;
t5nmt_src_tgt_text_example -> has_custom;
t5nmt_src_tgt_text_example -> encode_dialog;
_calculate_offsets -> len;
_calculate_offsets -> range;
_calculate_offsets -> list;
_calculate_offsets -> values;
_calculate_offsets -> keys;
tokens_to_text -> isinstance;
tokens_to_text -> decode_pieces;
tokens_to_text -> tolist;
tokens_to_text -> ids_to_text;
tokens_to_text -> tokens_to_ids;
tokens_to_text -> append;
tokens_to_text -> join;
tokens_to_text -> index;
tokens_to_text -> len;
tokens_to_text -> decode;
tokens_to_text -> encode_single_token;
tokens_to_text -> convert_tokens_to_string;
ids_to_words_and_langs -> startswith;
ids_to_words_and_langs -> append;
ids_to_words_and_langs -> len;
ids_to_words_and_langs -> ids_to_text;
ids_to_words_and_langs -> strip;
ids_to_words_and_langs -> ids_to_lang;
ids_to_words_and_langs -> ids_to_tokens;
tokens_to_ids -> isinstance;
tokens_to_ids -> enumerate;
tokens_to_ids -> append;
tokens_to_ids -> token_to_id;
tokens_to_ids -> token_to_ids;
tokens_to_ids -> index;
tokens_to_ids -> extend;
tokens_to_ids -> encode;
tokens_to_ids -> subword_to_id;
tokens_to_ids -> convert_tokens_to_ids;
langs -> list;
langs -> keys;
_call_agg_tokenizer -> text_to_ids;
_call_tokenizer -> text_to_ids;
_call_parser -> _tokenizer;
id_to_token -> decode_single_token_bytes;
id_to_token -> decode;
_map_canary1_to_canary2_lang -> RuntimeError;
_map_canary1_to_canary2_lang -> len;
_map_canary1_to_canary2_lang -> get;
_text_with_timestamps_to_ids -> split;
_text_with_timestamps_to_ids -> _tokenize_special_prompt;
_text_with_timestamps_to_ids -> text_to_ids;
_text_with_timestamps_to_ids -> len;
_text_with_timestamps_to_ids -> append;
_text_with_timestamps_to_ids -> super;
_tokenize_special_prompt -> startswith;
_tokenize_special_prompt -> count;
_tokenize_special_prompt -> range;
_tokenize_special_prompt -> append;
_tokenize_special_prompt -> find;
_tokenize_special_prompt -> len;
_tokenize_special_prompt -> replace;
_tokenize_special_prompt -> extend;
_tokenize_special_prompt -> text_to_ids;
_tokenize_special_prompt -> split;
_text_to_ids_maybe_with_timestamps -> compile;
_text_to_ids_maybe_with_timestamps -> join;
_text_to_ids_maybe_with_timestamps -> bool;
_text_to_ids_maybe_with_timestamps -> findall;
_text_to_ids_maybe_with_timestamps -> text_to_ids;
_text_to_ids_maybe_with_timestamps -> strip;
_text_to_ids_maybe_with_timestamps -> _text_with_timestamps_to_ids;
_text_to_ids_maybe_with_timestamps -> super;
_text_to_ids_maybe_with_timestamps -> sub;
spl_token_to_id -> KeyError;
spl_token_to_id -> get;
create_spt_model -> dirname;
create_spt_model -> if_exist;
create_spt_model -> info;
create_spt_model -> makedirs;
create_spt_model -> Train;
create_spt_model -> extend;
create_spt_model -> ValueError;
create_spt_model -> join;
create_spt_model -> open;
create_spt_model -> exists;
create_spt_model -> write;
create_spt_model -> split;
create_spt_model -> startswith;
create_spt_model -> len;
create_spt_model -> append;
eos_id -> token_to_id;
eos_id -> check_special_token_id_getting;
eos_id -> eos_id;
eos_id -> tokens_to_ids;
eos_id -> subword_to_id;
eos_id -> getattr;
bos_id -> token_to_id;
bos_id -> check_special_token_id_getting;
bos_id -> bos_id;
bos_id -> tokens_to_ids;
bos_id -> subword_to_id;
bos_id -> getattr;
nospeech_id -> token_to_id;
pad_id -> token_to_id;
pad_id -> check_special_token_id_getting;
pad_id -> pad_id;
pad_id -> tokens_to_ids;
pad_id -> subword_to_id;
pad_id -> getattr;
update_special_tokens_dict -> copy;
update_special_tokens_dict -> zip;
update_special_tokens_dict -> check_special_tokens_dict_for_duplicate_values;
update_special_tokens_dict -> isinstance;
update_special_tokens_dict -> ValueError;
update_special_tokens_dict -> warn;
update_special_tokens_dict -> type;
check_special_tokens_to_remove_while_decoding -> isinstance;
check_special_tokens_to_remove_while_decoding -> enumerate;
check_special_tokens_to_remove_while_decoding -> ValueError;
check_special_tokens_to_remove_while_decoding -> has_value;
check_special_tokens_to_remove_while_decoding -> set;
check_special_tokens_to_remove_while_decoding -> repr;
check_special_token_name -> has_value;
check_special_token_name -> ValueError;
check_special_token_name -> repr;
check_token_from_file -> ValueError;
check_token_from_file -> isinstance;
check_token_from_file -> len;
check_token_from_file -> repr;
check_special_tokens_dict_from_file -> items;
check_special_tokens_dict_from_file -> check_special_tokens_dict_for_duplicate_values;
check_special_tokens_dict_from_file -> ValueError;
check_special_tokens_dict_from_file -> isinstance;
check_special_tokens_dict_from_file -> has_value;
check_special_tokens_dict_from_file -> len;
check_special_tokens_dict_from_file -> repr;
check_special_tokens_dict_from_file -> type;
check_special_tokens_dict_for_duplicate_values -> len;
check_special_tokens_dict_for_duplicate_values -> set;
check_special_tokens_dict_for_duplicate_values -> list;
check_special_tokens_dict_for_duplicate_values -> items;
check_special_tokens_dict_for_duplicate_values -> join;
check_special_tokens_dict_for_duplicate_values -> ValueError;
check_special_tokens_dict_for_duplicate_values -> values;
check_special_tokens_dict_for_duplicate_values -> reversed;
check_special_tokens_dict_for_duplicate_values -> append;
check_special_tokens_dict_for_duplicate_values -> zip;
check_special_token_id_getting -> ValueError;
unk_id -> check_special_token_id_getting;
unk_id -> unk_id;
unk_id -> subword_to_id;
unk_id -> getattr;
unk_id -> tokens_to_ids;
mask_id -> check_special_token_id_getting;
mask_id -> NameError;
mask_id -> tokens_to_ids;
mask_id -> getattr;
sep_id -> check_special_token_id_getting;
sep_id -> NameError;
sep_id -> tokens_to_ids;
sep_id -> getattr;
cls_id -> check_special_token_id_getting;
cls_id -> NameError;
cls_id -> tokens_to_ids;
cls_id -> getattr;
create_special_tokens_dict -> zip;
create_special_tokens_dict -> isinstance;
create_special_tokens_dict -> ValueError;
create_special_tokens_dict -> len;
create_special_tokens_dict -> values;
create_special_tokens_dict -> items;
create_special_tokens_dict -> type;
create_special_tokens_dict -> repr;
check_characters_to_exclude_from_vocabulary -> enumerate;
check_characters_to_exclude_from_vocabulary -> isinstance;
check_characters_to_exclude_from_vocabulary -> ValueError;
check_characters_to_exclude_from_vocabulary -> len;
check_characters_to_exclude_from_vocabulary -> type;
check_text_and_text_file_name -> ValueError;
check_text_and_text_file_name -> isinstance;
check_text_and_text_file_name -> type;
build_vocab -> create_special_tokens_dict;
build_vocab -> check_text_and_text_file_name;
build_vocab -> expanduser;
build_vocab -> mkdir;
build_vocab -> check_characters_to_exclude_from_vocabulary;
build_vocab -> Counter;
build_vocab -> open;
build_vocab -> write;
build_vocab -> Path;
build_vocab -> sorted;
build_vocab -> len;
build_vocab -> enumerate;
build_vocab -> read;
build_vocab -> update;
build_vocab -> dumps;
build_vocab -> items;
build_vocab -> repr;
is_template_var -> match;
extract_template_parts -> split;
strip_template_wrap -> is_template_var;
render_chat_turn -> enumerate;
render_chat_turn -> extract_template_parts;
render_chat_turn -> is_template_var;
render_chat_turn -> strip_template_wrap;
render_chat_turn -> append;
render_chat_turn -> join;
encode_string_with_special_token -> isinstance;
encode_string_with_special_token -> text_to_ids;
encode_string_with_special_token -> hasattr;
encode_string_with_special_token -> getattr;
encode_string_with_special_token -> len;
encode_string_with_special_token -> join;
tokenize_with_chat_template -> is_chat_input;
tokenize_with_chat_template -> encode;
tokenize_with_chat_template -> len;
tokenize_with_chat_template -> encode_string_with_special_token;
tokenize_with_chat_template -> render_chat_turn;
is_chat_input -> isinstance;
is_chat_input -> len;
extract_turns -> append;
extract_turns -> items;
explode_chat_template_input -> isinstance;
explode_chat_template_input -> all;
explode_chat_template_input -> len;
explode_chat_template_input -> range;
explode_chat_template_input -> map;
explode_chat_template_input -> extract_turns;
cut -> dummy_cut;
cut -> SupervisionSegment;
compute_code -> NotImplementedError;
compute_code -> array_convert_to_int;
compute_code -> range;
compute_code -> sorted;
compute_code -> len;
compute_code -> str;
compute_code -> append;
compute_code -> tolist;
compute_code -> unique;
array_convert_to_int -> astype;
array_convert_to_int -> min;
array_convert_to_int -> fit_transform;
array_convert_to_int -> int;
array_convert_to_int -> ValueError;
array_convert_to_int -> log;
array_convert_to_int -> max;
convert_to_int -> int;
convert_to_int -> expand_dims;
convert_to_int -> astype;
convert_to_int -> array;
convert_to_int -> transform;
code_range -> reversed;
code_range -> range;
code_range -> keys;
code_range -> append;
code_range -> min;
code_range -> max;
reverse_convert_to_int -> expand_dims;
reverse_convert_to_int -> array;
reverse_convert_to_int -> inverse_transform;
get_column_codes -> cls;
get_column_codes -> get;
get_column_codes -> coder;
get_column_codes -> compute_code;
get_column_codes -> register;
get_unicode_categories -> defaultdict;
get_unicode_categories -> map;
get_unicode_categories -> range;
get_unicode_categories -> append;
get_unicode_categories -> category;
tokenize_en -> strip;
tokenize_en -> sub;
tokenize_en -> search;
tokenize_en -> split;
tokenize_en -> range;
tokenize_en -> len;
tokenize_en -> group;
offsets -> append;
offsets -> len;
offsets -> str;
_update_cache -> get;
_update_cache -> items;
_compile_regex -> compile;
vocab_size -> len;
vocab_size -> max;
vocab_size -> keys;
token_to_ids -> append;
token_to_ids -> get;
_get_regex_vocab_files -> ValueError;
_get_regex_vocab_files -> splitext;
save_tokenizer -> _get_regex_vocab_files;
save_tokenizer -> info;
save_tokenizer -> open;
save_tokenizer -> write;
load_tokenizer -> _get_regex_vocab_files;
load_tokenizer -> info;
load_tokenizer -> exists;
load_tokenizer -> _update_cache;
load_tokenizer -> _compile_regex;
load_tokenizer -> RuntimeError;
load_tokenizer -> strip;
load_tokenizer -> open;
load_tokenizer -> read;
load_tokenizer -> len;
load_tokenizer -> TokenizerWrapper;
load_tokenizer -> SentencePieceTokenizer;
load_tokenizer -> AggregateTokenizer;
load_tokenizer -> zip;
load_tokenizer -> tokcls;
build_vocab_from_csv -> debug;
build_vocab_from_csv -> read_csv;
build_vocab_from_csv -> sorted;
build_vocab_from_csv -> _update_cache;
build_vocab_from_csv -> exists;
build_vocab_from_csv -> ValueError;
build_vocab_from_csv -> text_to_tokens;
build_vocab_from_csv -> items;
build_vocab_from_csv -> len;
build_vocab_from_text -> debug;
build_vocab_from_text -> sorted;
build_vocab_from_text -> _update_cache;
build_vocab_from_text -> exists;
build_vocab_from_text -> ValueError;
build_vocab_from_text -> open;
build_vocab_from_text -> readlines;
build_vocab_from_text -> items;
build_vocab_from_text -> rstrip;
build_vocab_from_text -> text_to_tokens;
build_vocab_from_text -> len;
add_special_tokens -> isinstance;
add_special_tokens -> AttributeError;
add_special_tokens -> items;
add_special_tokens -> ValueError;
add_special_tokens -> setattr;
add_special_tokens -> piece_to_id;
add_special_tokens -> unk_id;
add_special_tokens -> str;
add_special_tokens -> type;
add_special_tokens -> dict;
add_special_tokens -> update;
add_special_tokens -> enumerate;
add_special_tokens -> NotImplementedError;
add_special_tokens -> add_special_tokens;
add_special_tokens -> info;
add_special_tokens -> getattr;
_text_to_ids -> rstrip;
_text_to_ids -> _text_to_ids_extra_space;
_text_to_ids -> encode_as_ids;
_text_to_ids -> min;
_text_to_ids -> encode;
_text_to_ids -> extend;
_text_to_ids -> append;
_text_to_ids -> sub;
_text_to_ids -> len;
_text_to_ids -> pop;
_text_to_ids -> index;
_text_to_ids_extra_space -> split;
_text_to_ids_extra_space -> encode_as_ids;
_text_to_ids_extra_space -> extend;
additional_special_tokens_ids -> set;
additional_special_tokens_ids -> items;
additional_special_tokens_ids -> ids_to_tokens;
additional_special_tokens_ids -> token_to_id;
vocab -> id_to_piece;
vocab -> range;
vocab -> get_piece_size;
vocab -> items;
vocab -> len;
add_phone_tokens_to_special_tokens -> enumerate;
add_phone_tokens_to_special_tokens -> startswith;
find_index_of -> index;
reload_mergeable_ranks -> endswith;
reload_mergeable_ranks -> isinstance;
reload_mergeable_ranks -> print;
reload_mergeable_ranks -> enumerate;
reload_mergeable_ranks -> open;
reload_mergeable_ranks -> load;
reload_mergeable_ranks -> b64decode;
reload_mergeable_ranks -> len;
reload_mergeable_ranks -> set;
reload_mergeable_ranks -> keys;
reload_mergeable_ranks -> values;
reload_mergeable_ranks -> range;
reload_mergeable_ranks -> bytes;
name -> type;
name -> split;
unique_identifiers -> OrderedDict;
unique_identifiers -> type;
sep -> hasattr;
sep -> AttributeError;
sep -> type;
eod -> hasattr;
eod -> AttributeError;
eod -> type;
eod -> tokens_to_ids;
eod -> getattr;
bos -> hasattr;
bos -> AttributeError;
bos -> type;
eos -> hasattr;
eos -> AttributeError;
eos -> type;
mask -> hasattr;
mask -> AttributeError;
mask -> type;
_initialize_tokenizer -> from_pretrained;
_initialize_tokenizer -> getattr;
_initialize_tokenizer -> info;
convert_tokens_to_string -> isinstance;
convert_tokens_to_string -> decode;
convert_tokens_to_string -> TypeError;
convert_tokens_to_string -> tokens_to_text;
convert_ids_to_tokens -> ids_to_tokens;
inv_vocab -> items;
save_vocabulary -> save_vocabulary;
save_vocabulary -> join;
save_vocabulary -> set;
save_vocabulary -> open;
save_vocabulary -> items;
save_vocabulary -> write;
save_vocabulary -> print;
save_vocabulary -> str;
save_vocabulary -> decode;
save_vocabulary -> b64encode;
validate_locale -> ValueError;
get_grapheme_character_set -> join;
get_grapheme_character_set -> ValueError;
get_grapheme_character_set -> upper;
get_grapheme_character_set -> lower;
get_grapheme_character_set -> replace;
get_grapheme_character_set -> keys;
get_ipa_character_set -> set;
get_ipa_character_set -> ValueError;
get_ipa_character_set -> keys;
get_ipa_punctuation_list -> validate_locale;
get_ipa_punctuation_list -> set;
get_ipa_punctuation_list -> sorted;
get_ipa_punctuation_list -> update;
get_ipa_punctuation_list -> list;
english_text_preprocessing -> unicode;
english_text_preprocessing -> join;
english_text_preprocessing -> lower;
english_text_preprocessing -> normalize;
english_text_preprocessing -> category;
any_locale_text_preprocessing -> normalize_unicode_text;
any_locale_text_preprocessing -> join;
any_locale_text_preprocessing -> append;
normalize_unicode_text -> is_normalized;
normalize_unicode_text -> normalize;
_word_tokenize -> append;
_word_tokenize -> lower;
_word_tokenize -> split;
_word_tokenize -> ValueError;
english_word_tokenize -> findall;
english_word_tokenize -> _word_tokenize;
any_locale_word_tokenize -> findall;
any_locale_word_tokenize -> _word_tokenize;
spanish_text_preprocessing -> lower;
italian_text_preprocessing -> lower;
french_text_preprocessing -> lower;
vietnamese_text_preprocessing -> lower;
japanese_text_preprocessing -> lower;
set_phone_prob -> hasattr;
replace_symbols -> set;
replace_symbols -> items;
replace_symbols -> update;
replace_symbols -> _prepend_prefix_for_one_word;
replace_symbols -> append;
replace_symbols -> len;
replace_symbols -> set_grapheme_case;
get_tokenizer_config -> match;
get_tokenizer_config -> groups;
get_tokenizer_config -> update;
get_tokenizer_config -> dict;
get_tokenizer_config -> int;
load_pytorch_model -> get_pytorch_model;
load_pytorch_model -> load_state_dict;
load_pytorch_model -> to;
load_pytorch_model -> encoder_jit;
load_pytorch_model -> state_dict;
load_pytorch_model -> decoder_jit;
load_pytorch_model -> eval;
load_jit_model -> load;
load_jit_model -> to;
load_jit_model -> eval;
autoencode -> no_grad;
autoencode -> _full_model;
autoencode -> decode;
autoencode -> isinstance;
autoencode -> encode;
pad_video_batch -> pad;
numpy2tensor -> to;
numpy2tensor -> transpose;
numpy2tensor -> list;
numpy2tensor -> range;
numpy2tensor -> tuple;
numpy2tensor -> from_numpy;
tensor2numpy -> numpy;
tensor2numpy -> transpose;
tensor2numpy -> astype;
tensor2numpy -> cpu;
tensor2numpy -> float;
tensor2numpy -> tuple;
tensor2numpy -> clamp;
tensor2numpy -> range;
unpad_video_batch -> len;
trt_compile -> update;
trt_compile -> is_available;
trt_compile -> exists;
trt_compile -> warning;
trt_compile -> int;
trt_compile -> find;
trt_compile -> isinstance;
trt_compile -> wrap;
trt_compile -> getLogger;
trt_compile -> getmtime;
trt_compile -> max;
trt_compile -> hasattr;
trt_compile -> TrtCompiler;
trt_compile -> MethodType;
trt_compile -> getattr;
trt_compile -> find_sub;
model_wrapper -> get_model_input_time;
model_wrapper -> expand;
model_wrapper -> model;
model_wrapper -> enable_grad;
model_wrapper -> requires_grad_;
model_wrapper -> classifier_fn;
model_wrapper -> noise_pred_fn;
model_wrapper -> dim;
model_wrapper -> grad;
model_wrapper -> cond_grad_fn;
model_wrapper -> marginal_std;
model_wrapper -> reshape;
model_wrapper -> marginal_alpha;
model_wrapper -> expand_dims;
model_wrapper -> detach;
model_wrapper -> sum;
model_wrapper -> cat;
model_wrapper -> chunk;
save_jit_model -> save;
get_filepaths -> sorted;
get_filepaths -> list;
get_filepaths -> glob;
get_filepaths -> set;
get_filepaths -> str;
get_output_filepath -> makedirs;
get_output_filepath -> basename;
get_output_filepath -> dirname;
read_image -> read_image;
read_image -> stack;
read_video -> read_video;
read_video -> stack;
resize_image -> resize_image;
resize_image -> int;
resize_video -> resize_video;
resize_video -> int;
write_image -> write_image;
write_video -> write_video;
pad_image_batch -> pad;
unpad_image_batch -> len;
get_pytorch_model -> value;
get_pytorch_model -> load;
encoder_jit -> Sequential;
encoder_jit -> OrderedDict;
decoder_jit -> Sequential;
decoder_jit -> OrderedDict;
decoder_jit -> InvQuantizerJit;
Normalize -> GroupNorm;
nonlinearity -> sigmoid;
nonlinearity -> silu;
cast_tuple -> isinstance;
is_odd -> divisible_by;
_replication_pad -> repeat;
_replication_pad -> cat;
_replication_pad -> pad;
replication_pad -> cat;
time2batch -> rearrange;
batch2time -> rearrange;
space2batch -> rearrange;
batch2space -> rearrange;
patcher3d -> time2batch;
patcher3d -> patcher;
patcher3d -> batch2time;
unpatcher3d -> time2batch;
unpatcher3d -> unpatcher;
unpatcher3d -> batch2time;
_haar -> _dwt;
_haar -> split;
_haar -> cat;
_haar -> repeat_interleave;
_arrange -> contiguous;
_arrange -> rearrange;
_arrange -> split;
_arrange -> cat;
_arrange -> repeat_interleave;
_dwt -> int;
_dwt -> repeat;
_dwt -> to;
_dwt -> conv2d;
_dwt -> cat;
_dwt -> unsqueeze;
_dwt -> reshape;
_dwt -> pad;
_dwt -> flip;
_dwt -> conv3d;
_dwt -> sqrt;
_dwt -> tensor;
_dwt -> max;
_ihaar -> _idwt;
_iarrange -> rearrange;
_idwt -> int;
_idwt -> repeat;
_idwt -> to;
_idwt -> chunk;
_idwt -> conv_transpose2d;
_idwt -> unsqueeze;
_idwt -> reshape;
_idwt -> flip;
_idwt -> conv_transpose3d;
_idwt -> sqrt;
_idwt -> tensor;
indices_to_codes -> zip;
indices_to_codes -> transpose;
indices_to_codes -> indices_to_codes;
indices_to_codes -> rearrange;
indices_to_codes -> _scale_and_shift_inverse;
indices_to_codes -> to;
indices_to_codes -> project_out;
indices_to_codes -> int;
default -> exists;
default -> callable;
default -> d;
default -> isinstance;
default -> isfunction;
bound -> where;
bound -> atanh;
bound -> tanh;
round_ste -> round;
round_ste -> detach;
codes_to_indices -> float;
codes_to_indices -> to;
codes_to_indices -> _scale_and_shift;
codes_to_indices -> sum;
codes_to_indices -> codes_to_nonnegative;
codes_to_indices -> size;
codes_to_indices -> RuntimeError;
pack_one -> pack;
unpack_one -> unpack;
remap_to_used -> reshape;
remap_to_used -> to;
remap_to_used -> long;
remap_to_used -> argmax;
remap_to_used -> len;
remap_to_used -> sum;
remap_to_used -> randint;
unmap_to_all -> reshape;
unmap_to_all -> to;
unmap_to_all -> gather;
unmap_to_all -> len;
get_codebook_entry -> embedding;
get_codebook_entry -> reshape;
get_codebook_entry -> unmap_to_all;
get_codebook_entry -> view;
get_codebook_entry -> contiguous;
get_codebook_entry -> permute;
entropy -> sum;
entropy -> log;
decode_code -> indices_to_codes;
decode_code -> post_quant_conv;
decode_code -> decoder;
decode_code -> embed_code;
decode_code -> decode;
datasets_provider -> get_train_dataset;
datasets_provider -> ValueError;
datasets_provider -> to_container;
datasets_provider -> getattr;
datasets_provider -> dict;
datasets_provider -> get_val_datasets;
datasets_provider -> get_pipeline_model_parallel_world_size;
datasets_provider -> hasattr;
datasets_provider -> LimitDataset;
datasets_provider -> get_data_parallel_world_size;
datasets_provider -> get;
datasets_provider -> TaskEncoder;
datasets_provider -> RepeatDataset;
generate_pos_id -> stack;
generate_pos_id -> meshgrid;
generate_pos_id -> arange;
meshgrid -> repeat;
meshgrid -> cat;
meshgrid -> view;
meshgrid -> arange;
get_pos_id_3d -> max;
get_pos_id_3d -> generate_pos_id;
_create_dataloader -> DataLoader;
_create_dataloader -> WrappedDataLoader;
_create_dataloader -> getattr;
cook -> dict;
cook -> basic_sample_keys;
pad_divisible -> size;
pad_divisible -> list;
pad_divisible -> zeros;
concat_pad -> zeros;
cook_raw_images -> dict;
cook_raw_images -> basic_sample_keys;
__radd__ -> isinstance;
__radd__ -> item;
__radd__ -> UnavailableError;
__lt__ -> isinstance;
__lt__ -> item;
__lt__ -> UnavailableError;
encode_sample -> stateless;
encode_sample -> rearrange;
encode_sample -> ones;
encode_sample -> tensor;
encode_sample -> DiffusionSample;
encode_sample -> any;
encode_sample -> SkipSample;
encode_sample -> max;
encode_sample -> to;
encode_sample -> pad;
encode_sample -> get_pos_id_3d;
encode_sample -> zeros;
encode_sample -> abs;
encode_sample -> isnan;
encode_sample -> isinf;
encode_sample -> from_numpy;
encode_sample -> encode_sample;
encode_sample -> crop_image;
encode_sample -> super;
encode_sample -> get;
encode_sample -> encode;
encode_sample -> type;
encode_sample -> NotImplementedError;
encode_sample -> ImageTextSample;
encode_sample -> isinstance;
encode_sample -> encode_interleaved;
encode_sample -> encode_pretrain;
encode_sample -> encode_captioning;
encode_sample -> encode_similarity_interleaved;
encode_sample -> encode_sft;
encode_sample -> img_transform;
encode_sample -> tokenize;
encode_sample -> encoder;
encode_sample -> ValueError;
encode_sample -> process_vision;
encode_sample -> enumerate;
encode_sample -> copy;
encode_sample -> sort;
encode_sample -> roll;
encode_sample -> all;
encode_sample -> Qwen2VLTaskSample;
encode_sample -> loads;
encode_sample -> append;
encode_sample -> apply_chat_template;
encode_sample -> where;
encode_sample -> warning;
encode_sample -> concatenate;
encode_sample -> len;
encode_sample -> range;
encode_sample -> find_pattern_indices;
encode_sample -> array;
encode_sample -> convert_to_qwen2vl_content;
encode_sample -> sum;
encode_sample -> prod;
select_samples_to_pack -> first_fit_decreasing;
select_samples_to_pack -> shuffle;
select_samples_to_pack -> greedy_knapsack;
select_samples_to_pack -> round;
select_samples_to_pack -> info;
select_samples_to_pack -> predict_seq_len;
select_samples_to_pack -> len;
select_samples_to_pack -> predict_seq_len_with_padding;
pack_selected_samples -> concat_pad;
pack_selected_samples -> DiffusionSample;
pack_selected_samples -> stack;
pack_selected_samples -> cat;
pack_selected_samples -> join;
pack_selected_samples -> getattr;
pack_selected_samples -> convert_to_packed;
pack_selected_samples -> PackedImageTextSample;
pack_selected_samples -> len;
pack_selected_samples -> extend;
pack_selected_samples -> DataBatch;
pack_selected_samples -> batch_list;
pack_selected_samples -> flatten_if_nested;
pack_selected_samples -> tensor;
pack_selected_samples -> convert_to_packed_llava_next;
pack_selected_samples -> PackedLlavaNextTextSample;
pack_selected_samples -> append;
batch -> dict;
batch -> to_dict;
batch -> unsqueeze_;
batch -> batch;
batch -> super;
batch -> PackedImageTextRawBatch;
batch -> batch_list;
batch -> batch_pad_stack;
batch -> ImageTextRawBatch;
batch -> len;
batch -> ValueError;
batch -> append;
batch -> reshape;
batch -> extend;
batch -> ImageTaskBatch;
batch -> rearrange;
batch -> stack;
batch -> DataBatch;
batch -> generic_batch;
batch -> setattr;
batch -> getattr;
batch -> PackedLlavaNextTextRawBatch;
batch -> cat;
batch -> pad_sequence;
batch -> flatten_if_nested;
batch -> tensor;
batch -> LlavaNextTextRawBatch;
batch -> pad_or_truncate;
batch -> LlamaImageTextRawBatch;
batch -> sum;
batch -> size;
batch -> max;
batch -> full;
batch -> zeros_like;
batch -> enumerate;
batch -> from_numpy;
batch -> get_ltor_masks_and_position_ids;
batch -> Qwen2VLTaskBatch;
batch -> warning;
batch -> min;
batch -> array;
batch -> vstack;
batch -> unsqueeze;
initialize_text_encoder -> from_pretrained;
initialize_text_encoder -> to;
initialize_text_encoder -> eval;
encode_for_batch -> no_grad;
encode_for_batch -> batch_encode_plus;
encode_for_batch -> cuda;
encode_for_batch -> encoder;
encode_for_batch -> cpu;
encode_for_batch -> range;
encode_for_batch -> numpy;
encode_for_batch -> append;
encode_for_batch -> sum;
encode_for_batch -> EncodedSample;
encode_for_batch -> truncate;
encode_for_batch -> astype;
generate_t5_embed -> tensor;
generate_t5_embed -> zeros;
generate_t5_embed -> encode_for_batch;
butterfly_process_func -> read_image;
butterfly_process_func -> rearrange;
butterfly_process_func -> resize_video;
butterfly_process_func -> autoencoder;
butterfly_process_func -> generate_t5_embed;
butterfly_process_func -> to;
butterfly_process_func -> dumps;
prepare -> no_grad;
prepare -> get_rank;
prepare -> get_world_size;
prepare -> get_start_end_idx_for_this_rank;
prepare -> makedirs;
prepare -> join;
prepare -> len;
prepare -> ShardWriter;
prepare -> range;
prepare -> process_func;
prepare -> write;
get_world_size -> is_available;
get_world_size -> is_initialized;
get_world_size -> get_world_size;
prepare_butterfly_dataset -> factory;
prepare_butterfly_dataset -> Partial;
_enable_lora -> named_modules;
_enable_lora -> items;
_enable_lora -> add_module;
_enable_lora -> append;
_enable_lora -> hasattr;
_enable_lora -> LoraWrapper;
_enable_lora -> keys;
_enable_lora -> update;
_enable_lora -> print;
dit_forward_step -> model;
dit_data_step -> get_batch_on_this_cp_rank;
dit_data_step -> to;
dit_data_step -> zeros;
dit_data_step -> cat;
dit_data_step -> next;
dit_data_step -> PackedSeqParams;
dit_data_step -> is_tensor;
dit_data_step -> items;
dit_data_step -> cumsum;
get_batch_on_this_cp_rank -> get_context_parallel_world_size;
get_batch_on_this_cp_rank -> get_context_parallel_rank;
get_batch_on_this_cp_rank -> items;
get_batch_on_this_cp_rank -> contiguous;
get_batch_on_this_cp_rank -> sum;
get_batch_on_this_cp_rank -> len;
get_batch_on_this_cp_rank -> squeeze;
get_batch_on_this_cp_rank -> view;
dynamic_import -> rsplit;
dynamic_import -> import_module;
dynamic_import -> getattr;
dynamic_import -> ImportError;
dynamic_import -> AttributeError;
configure_model -> isinstance;
configure_model -> model;
configure_model -> is_pipeline_first_stage;
configure_model -> is_pipeline_last_stage;
configure_model -> Flux;
configure_model -> configure_vae;
configure_model -> configure_scheduler;
configure_model -> configure_text_encoders;
configure_model -> named_parameters;
configure_model -> hasattr;
configure_model -> configure_model;
configure_model -> FluxControlnetForwardWrapper;
configure_model -> VAE;
configure_model -> MCoreBertModelWrapperWithPostLNSupport;
configure_model -> transformer_layer_spec;
configure_model -> get_vocab_size;
configure_model -> BertEmbeddingHead;
configure_model -> getattr;
configure_model -> partial;
configure_model -> model_init_device_context;
configure_model -> MCoreGPTModel;
configure_model -> info;
configure_model -> signature;
configure_model -> mtp_block_spec;
configure_model -> get_tensor_model_parallel_world_size;
configure_model -> enumerate;
configure_model -> get_context_parallel_world_size;
configure_model -> Stream;
configure_model -> get_model_module_list;
configure_model -> modules;
configure_model -> get_tensor_model_parallel_group;
configure_model -> set_tensor_parallel_group;
configure_model -> set_context_parallel_group;
configure_model -> get_context_parallel_group;
configure_model -> get_context_parallel_global_ranks;
configure_model -> ExitStack;
configure_model -> enter_context;
configure_model -> extend_instance;
configure_model -> super;
configure_model -> Gemma3RotaryEmbedding;
configure_model -> ValueError;
configure_model -> Gemma3LanguageModelEmbedding;
configure_model -> setup_embeddings_and_output_layer;
configure_model -> FirstRankPerNode;
configure_model -> train;
configure_model -> _configure_model;
configure_model -> safe_import;
configure_model -> te_accelerate;
configure_model -> model_transform;
configure_model -> format;
configure_model -> gradient_checkpointing_enable;
configure_model -> warning;
configure_model -> str;
configure_model -> _apply_liger_kernel_to_instance;
configure_model -> MCoreHyenaModel;
configure_model -> apply_rope_scaling;
configure_model -> MCoreMambaModel;
configure_model -> mamba_stack_spec;
configure_model -> load_distillation_config;
configure_model -> convert;
configure_model -> adjust_distillation_model_for_mcore;
configure_model -> setattr;
configure_model -> deepcopy;
configure_model -> MCoreT5Model;
configure_model -> from_pretrained;
configure_model -> from_config;
configure_model -> parallelize_fn;
configure_model -> fsdp2_strategy_parallelize;
configure_model -> _propagate_model_configs;
configure_model -> _maybe_load_pretrained_llm;
configure_model -> MethodType;
configure_model -> _maybe_load_asr_and_modality_adapter;
configure_model -> MCoreSpeechToTextLLM;
configure_model -> _freeze_module;
configure_model -> get_nested_attr;
configure_model -> to;
configure_model -> MCoreASRModule;
configure_model -> configure_hf_auto_model;
configure_model -> configure_nemo_asr_model;
configure_model -> from_config_dict;
configure_model -> to_dict_config;
configure_model -> MCoreModalityAdapterModule;
configure_model -> size;
configure_model -> parallelize_module;
configure_model -> fully_shard;
configure_model -> range;
configure_model -> PrepareModuleInput;
configure_model -> SequenceParallel;
configure_model -> ColwiseParallel;
configure_model -> RowwiseParallel;
configure_model -> Replicate;
configure_model -> Shard;
configure_model -> CLIPViTModel;
configure_model -> get_layer_spec_te;
configure_model -> CLIPTextModel;
configure_model -> print;
configure_model -> MCoreClipModel;
configure_model -> MCoreGemma3VLModel;
configure_model -> get_pipeline_model_parallel_rank;
configure_model -> Gemma3VLMultimodalProjector;
configure_model -> freeze_model;
configure_model -> BitsAndBytesConfig;
configure_model -> Llama4OmniBaseModel;
configure_model -> Llama4ViTModel;
configure_model -> MCoreLlavaNextModel;
configure_model -> CrossAttentionVisionModel;
configure_model -> _init_fusion_schedule;
configure_model -> CrossAttentionTextModel;
configure_model -> MLlamaBaseModel;
configure_model -> MCoreNevaModel;
configure_model -> Qwen2VisionModel;
configure_model -> MCoreQwen2VLModel;
configure_model -> match;
configure_model -> startswith;
configure_model -> MCoreMultimodalProjector;
configure_model -> int;
configure_model -> Sequential;
configure_model -> NotImplementedError;
configure_model -> ModuleSpec;
configure_model -> group;
configure_model -> Linear;
configure_model -> append;
configure_model -> MLPSubmodules;
configure_model -> GELU;
configure_model -> CLIPVisionModel;
configure_model -> BaseCLIPViTModel;
configure_model -> ExampleModel;
configure_model -> Embedding;
configure_model -> TransformerEncoderLayer;
configure_model -> make_byzantine_model_wrapper;
configure_model -> NestedModel;
configure_model -> __init__;
configure_model -> BatchNorm1d;
configure_model -> DummyConfig;
configure_vae -> dynamic_import;
configure_vae -> isinstance;
configure_vae -> cuda;
configure_vae -> parameters;
configure_vae -> len;
configure_vae -> info;
configure_vae -> eval;
configure_vae -> AutoEncoder;
data_step -> data_step_fn;
data_step -> next;
data_step -> to;
forward_step -> is_pipeline_last_stage;
forward_step -> training_step;
forward_step -> mean;
forward_step -> prepare_image_latent;
forward_step -> transpose;
forward_step -> mse_loss;
forward_step -> cuda;
forward_step -> to;
forward_step -> encode_prompt;
forward_step -> autocast;
forward_step -> forward;
forward_step -> float;
forward_step -> _unpack_latents;
forward_step -> encode;
forward_step -> int;
forward_step -> _prepare_latent_image_ids;
forward_step -> _pack_latents;
forward_step -> randn_like;
forward_step -> compute_density_for_timestep_sampling;
forward_step -> long;
forward_step -> flatten;
forward_step -> item;
forward_step -> len;
forward_step -> unsqueeze;
forward_step -> full;
forward_step -> nonzero;
forward_step -> forward_step_fn;
forward_step -> next;
forward_step -> model;
forward_step -> get;
forward_step -> is_pipeline_first_stage;
forward_step -> squeeze;
forward_step -> partial;
forward_step -> get_pipeline_model_parallel_world_size;
forward_step -> tokenize;
forward_step -> text_encoder;
forward_step -> get_forward_backward_func;
forward_step -> fwd_bwd_function;
forward_step -> get_forward_output_only_func;
forward_step -> iter;
forward_step -> get_num_microbatches;
forward_step -> isinstance;
forward_step -> language_model;
forward_step -> pop;
forward_step -> size;
generate_samples_from_batch -> get_x0_fn_from_batch;
generate_samples_from_batch -> list;
generate_samples_from_batch -> get_context_parallel_world_size;
generate_samples_from_batch -> sampler;
generate_samples_from_batch -> _initialize_generators;
generate_samples_from_batch -> randn;
generate_samples_from_batch -> get_context_parallel_group;
generate_samples_from_batch -> cat_outputs_cp;
training_loss_reduction -> MaskedTokenLossReduction;
training_loss_reduction -> AvgLossReduction;
training_loss_reduction -> BERTLossReduction;
training_loss_reduction -> BERTInBatchExclusiveHardNegativesRankingLoss;
training_loss_reduction -> loss_func;
training_loss_reduction -> _DistillationLossReduction;
training_loss_reduction -> MaskedTokenLossReductionWithLossMask;
training_loss_reduction -> ClipMegatronLoss;
training_loss_reduction -> MSELossReduction;
training_loss_reduction -> PassThroughLossReduction;
validation_loss_reduction -> DummyLossReduction;
validation_loss_reduction -> MaskedTokenLossReduction;
validation_loss_reduction -> AvgLossReduction;
validation_loss_reduction -> BERTLossReduction;
validation_loss_reduction -> BERTInBatchExclusiveHardNegativesRankingLoss;
validation_loss_reduction -> loss_func;
validation_loss_reduction -> MaskedTokenLossReductionWithLossMask;
validation_loss_reduction -> ClipMegatronLoss;
validation_loss_reduction -> MSELossReduction;
validation_loss_reduction -> PassThroughLossReduction;
on_validation_model_zero_grad -> on_validation_model_zero_grad;
on_validation_model_zero_grad -> getattr;
on_validation_model_zero_grad -> super;
_split_qkv -> view;
_split_qkv -> reshape;
_split_qkv -> SplitAlongDim;
_split_qkv -> split;
_split_qkv -> size;
_split_qkv -> cat;
_split_qkv -> arange;
_split_qkv -> cpu;
_split_qkv -> range;
get_query_key_value_tensors -> linear_qkv;
get_query_key_value_tensors -> _split_qkv;
get_query_key_value_tensors -> run_realtime_tests;
get_query_key_value_tensors -> q_layernorm;
get_query_key_value_tensors -> k_layernorm;
get_query_key_value_tensors -> isinstance;
get_query_key_value_tensors -> is_adapter_available;
get_query_key_value_tensors -> view;
get_query_key_value_tensors -> reshape;
get_query_key_value_tensors -> get_adapter_module;
get_query_key_value_tensors -> SplitAlongDim;
get_query_key_value_tensors -> split;
get_query_key_value_tensors -> size;
get_query_key_value_tensors -> len;
get_query_key_value_tensors -> ValueError;
get_query_key_value_tensors -> to;
get_query_key_value_tensors -> lora_kqv_adapter;
get_query_key_value_tensors -> lora_unfused_kqv_adapter;
get_query_key_value_tensors -> key_infused_adapter;
get_query_key_value_tensors -> value_infused_adapter;
get_query_key_value_tensors -> get_query_tensor;
get_query_key_value_tensors -> get_key_value_tensors;
get_added_query_key_value_tensors -> added_linear_qkv;
get_added_query_key_value_tensors -> _split_qkv;
get_added_query_key_value_tensors -> run_realtime_tests;
get_added_query_key_value_tensors -> added_q_layernorm;
get_added_query_key_value_tensors -> added_k_layernorm;
apply_rotary_pos_emb -> cat;
apply_rotary_pos_emb -> cos;
apply_rotary_pos_emb -> _rotate_half;
apply_rotary_pos_emb -> sin;
apply_rotary_pos_emb -> map;
apply_rotary_pos_emb -> duplicate_interleave;
apply_rotary_pos_emb -> rotate_every_two;
_checkpointed_attention_forward -> checkpoint;
_checkpointed_attention_forward -> core_attention;
_checkpointed_attention_forward -> len;
_checkpointed_attention_forward -> ValueError;
get_pos_emb_on_this_cp_rank -> get_context_parallel_world_size;
get_pos_emb_on_this_cp_rank -> get_context_parallel_rank;
get_pos_emb_on_this_cp_rank -> cuda;
get_pos_emb_on_this_cp_rank -> view;
get_pos_emb_on_this_cp_rank -> index_select;
get_pos_emb_on_this_cp_rank -> tensor;
customize_init_param -> init_method;
get_stdit_adaln_block_with_transformer_engine_spec -> ModuleSpec;
get_stdit_adaln_block_with_transformer_engine_spec -> STDiTWithAdaLNSubmodules;
get_stdit_adaln_block_with_transformer_engine_spec -> SelfAttentionSubmodules;
get_stdit_adaln_block_with_transformer_engine_spec -> CrossAttentionSubmodules;
get_stdit_adaln_block_with_transformer_engine_spec -> MLPSubmodules;
get_dit_adaln_block_with_transformer_engine_spec -> ModuleSpec;
get_dit_adaln_block_with_transformer_engine_spec -> DiTWithAdaLNSubmodules;
get_dit_adaln_block_with_transformer_engine_spec -> SelfAttentionSubmodules;
get_dit_adaln_block_with_transformer_engine_spec -> CrossAttentionSubmodules;
get_dit_adaln_block_with_transformer_engine_spec -> MLPSubmodules;
get_official_dit_adaln_block_with_transformer_engine_spec -> ModuleSpec;
get_official_dit_adaln_block_with_transformer_engine_spec -> DiTWithAdaLNSubmodules;
get_official_dit_adaln_block_with_transformer_engine_spec -> SelfAttentionSubmodules;
get_official_dit_adaln_block_with_transformer_engine_spec -> MLPSubmodules;
get_mm_dit_block_with_transformer_engine_spec -> ModuleSpec;
get_mm_dit_block_with_transformer_engine_spec -> TransformerLayerSubmodules;
get_mm_dit_block_with_transformer_engine_spec -> JointSelfAttentionSubmodules;
get_mm_dit_block_with_transformer_engine_spec -> MLPSubmodules;
get_flux_single_transformer_engine_spec -> ModuleSpec;
get_flux_single_transformer_engine_spec -> TransformerLayerSubmodules;
get_flux_single_transformer_engine_spec -> SelfAttentionSubmodules;
get_flux_single_transformer_engine_spec -> MLPSubmodules;
get_flux_double_transformer_engine_spec -> ModuleSpec;
get_flux_double_transformer_engine_spec -> TransformerLayerSubmodules;
get_flux_double_transformer_engine_spec -> JointSelfAttentionSubmodules;
get_flux_double_transformer_engine_spec -> MLPSubmodules;
_norm -> rsqrt;
_norm -> mean;
_norm -> pow;
modulated_layernorm -> type_as;
modulated_layernorm -> modulate;
modulated_layernorm -> layernorm;
modulate -> unsqueeze;
scaled_modulated_layernorm -> scale_add;
scaled_modulated_layernorm -> modulated_layernorm;
_replace_no_cp_submodules -> deepcopy;
linear -> Linear;
set_input_tensor -> set_input_tensor;
set_input_tensor -> isinstance;
set_input_tensor -> len;
set_input_tensor -> range;
set_input_tensor -> Exception;
sharded_state_dict -> sharded_state_dict;
sharded_state_dict -> named_parameters;
sharded_state_dict -> super;
sharded_state_dict -> _set_embedder_weights_replica_id;
sharded_state_dict -> getattr;
sharded_state_dict -> named_children;
sharded_state_dict -> _get_layer_offset;
sharded_state_dict -> replace_prefix_for_sharding;
sharded_state_dict -> update;
sharded_state_dict -> sharded_state_dict_default;
sharded_state_dict -> enumerate;
sharded_state_dict -> state_dict;
sharded_state_dict -> make_sharded_tensors_for_checkpoint;
sharded_state_dict -> _save_to_state_dict;
sharded_state_dict -> items;
sharded_state_dict -> make_sharded_tensor_for_checkpoint;
sharded_state_dict -> make_tp_sharded_tensor_for_checkpoint;
sharded_state_dict -> apply_swiglu_sharded_factory;
sharded_state_dict -> pop;
sharded_state_dict -> get_keys_to_keep;
sharded_state_dict -> get_model_module_list;
sharded_state_dict -> get;
sharded_state_dict -> dict_list_map_inplace;
sharded_state_dict -> get_virtual_pipeline_model_parallel_world_size;
sharded_state_dict -> isinstance;
sharded_state_dict -> LocalNonpersistentObject;
sharded_state_dict -> get_param_id_to_sharded_param_map;
sharded_state_dict -> optim_state_to_sharding_state;
sharded_state_dict -> parameters;
sharded_state_dict -> startswith;
sharded_state_dict -> replace;
sharded_state_dict -> _module_sharded_state_dict;
sharded_state_dict -> signature;
sharded_state_dict -> from_rank_offsets;
sharded_state_dict -> get_rank;
_set_embedder_weights_replica_id -> get_tensor_model_parallel_rank;
_set_embedder_weights_replica_id -> get;
_set_embedder_weights_replica_id -> get_pipeline_model_parallel_rank;
_set_embedder_weights_replica_id -> make_sharded_tensor_for_checkpoint;
_set_embedder_weights_replica_id -> get_data_parallel_rank;
_get_mlp_module_spec -> ModuleSpec;
_get_mlp_module_spec -> MLPSubmodules;
_get_mlp_module_spec -> ValueError;
_get_mlp_module_spec -> MoESubmodules;
get_dit_llama_spec -> ModuleSpec;
get_dit_llama_spec -> TransformerLayerSubmodules;
get_dit_llama_spec -> _get_mlp_module_spec;
get_dit_llama_spec -> SelfAttentionSubmodules;
get_dit_llama_spec -> CrossAttentionSubmodules;
rope -> einsum;
rope -> float;
rope -> arange;
get_timestep_embedding -> exp;
get_timestep_embedding -> cat;
get_timestep_embedding -> len;
get_timestep_embedding -> arange;
get_timestep_embedding -> float;
get_timestep_embedding -> pad;
get_timestep_embedding -> log;
get_timestep_embedding -> sin;
get_timestep_embedding -> cos;
get_timestep_embedding -> to;
flux_data_step -> next;
flux_data_step -> cuda;
flux_data_step -> isinstance;
flux_data_step -> len;
flux_data_step -> Tensor;
import_double_block_qkv -> state_transform;
import_double_block_qkv -> _import_qkv;
state_transform -> wrapper;
state_transform -> StateDictTransform;
_import_qkv -> size;
_import_qkv -> view;
_import_qkv -> range;
_import_qkv -> cat;
_import_qkv -> reshape;
_import_qkv -> append;
_import_qkv -> state_transform;
_import_qkv -> getattr;
_import_qkv -> empty;
_import_qkv -> unflatten;
_import_qkv -> type_as;
_import_qkv -> squeeze;
_import_qkv -> split;
_import_qkv -> chunk;
_import_qkv -> import_qkv;
import_double_block_qkv_bias -> state_transform;
import_double_block_qkv_bias -> _import_qkv_bias;
_import_qkv_bias -> view;
_import_qkv_bias -> range;
_import_qkv_bias -> cat;
_import_qkv_bias -> reshape;
_import_qkv_bias -> append;
_import_qkv_bias -> state_transform;
_import_qkv_bias -> getattr;
_import_qkv_bias -> empty;
_import_qkv_bias -> split;
_import_qkv_bias -> type_as;
_import_qkv_bias -> chunk;
_import_qkv_bias -> squeeze;
_import_qkv_bias -> import_qkv;
_import_qkv_bias -> unsqueeze;
import_added_qkv -> state_transform;
import_added_qkv -> _import_qkv;
import_added_qkv_bias -> state_transform;
import_added_qkv_bias -> _import_qkv_bias;
import_single_block_qkv -> state_transform;
import_single_block_qkv -> _import_qkv;
import_single_block_qkv_bias -> state_transform;
import_single_block_qkv_bias -> _import_qkv_bias;
transform_single_proj_out -> state_transform;
transform_single_proj_out -> clone;
transform_single_proj_out -> detach;
load_from_pretrained -> load_state_dict;
load_from_pretrained -> info;
load_from_pretrained -> dict;
load_from_pretrained -> load;
load_from_pretrained -> len;
load_from_pretrained -> removeprefix;
load_from_pretrained -> flux_transformer_converter;
load_from_pretrained -> load_safetensors;
load_from_pretrained -> sharded_state_dict;
load_from_pretrained -> items;
load_from_pretrained -> makedirs;
load_from_pretrained -> join;
load_from_pretrained -> save_safetensors;
load_from_pretrained -> endswith;
get_fp8_context -> nullcontext;
get_fp8_context -> DelayedScaling;
get_fp8_context -> model_parallel_is_initialized;
get_fp8_context -> fp8_autocast;
get_fp8_context -> get_amax_reduction_group;
get_fp8_context -> ValueError;
DelayedScaling -> ImportError;
timestep_embedding -> to;
timestep_embedding -> cat;
timestep_embedding -> float;
timestep_embedding -> exp;
timestep_embedding -> cos;
timestep_embedding -> sin;
timestep_embedding -> zeros_like;
timestep_embedding -> arange;
timestep_embedding -> log;
timestep_embedding -> repeat;
timestep_embedding -> get_idx;
flux_transformer_converter -> isdir;
flux_transformer_converter -> items;
flux_transformer_converter -> range;
flux_transformer_converter -> listdir;
flux_transformer_converter -> isfile;
flux_transformer_converter -> startswith;
flux_transformer_converter -> _import_qkv;
flux_transformer_converter -> _import_qkv_bias;
flux_transformer_converter -> clone;
flux_transformer_converter -> endswith;
flux_transformer_converter -> load_safetensors;
flux_transformer_converter -> FileNotFoundError;
flux_transformer_converter -> split;
flux_transformer_converter -> max;
flux_transformer_converter -> join;
flux_transformer_converter -> update;
flux_transformer_converter -> int;
flux_transformer_converter -> str;
flux_transformer_converter -> detach;
_get_layer_offset -> get_pipeline_model_parallel_rank;
_get_layer_offset -> get_pipeline_model_parallel_world_size;
_get_layer_offset -> get_virtual_pipeline_model_parallel_world_size;
_get_layer_offset -> get_virtual_pipeline_model_parallel_rank;
_get_layer_offset -> getattr;
configure_scheduler -> FlowMatchEulerDiscreteScheduler;
configure_text_encoders -> isinstance;
configure_text_encoders -> FrozenCLIPEmbedder;
configure_text_encoders -> info;
configure_text_encoders -> FrozenT5Embedder;
configure_text_encoders -> current_device;
prepare_image_latent -> _prepare_latent_image_ids;
prepare_image_latent -> randn_like;
prepare_image_latent -> compute_density_for_timestep_sampling;
prepare_image_latent -> long;
prepare_image_latent -> to;
prepare_image_latent -> flatten;
prepare_image_latent -> _pack_latents;
prepare_image_latent -> item;
prepare_image_latent -> len;
prepare_image_latent -> unsqueeze;
prepare_image_latent -> full;
prepare_image_latent -> transpose;
prepare_image_latent -> nonzero;
_unpack_latents -> view;
_unpack_latents -> permute;
_unpack_latents -> reshape;
compute_density_for_timestep_sampling -> normal;
compute_density_for_timestep_sampling -> sigmoid;
compute_density_for_timestep_sampling -> rand;
compute_density_for_timestep_sampling -> cos;
_prepare_latent_image_ids -> zeros;
_prepare_latent_image_ids -> repeat;
_prepare_latent_image_ids -> reshape;
_prepare_latent_image_ids -> to;
_prepare_latent_image_ids -> arange;
_pack_latents -> view;
_pack_latents -> permute;
_pack_latents -> reshape;
init -> MegatronFluxModel;
init -> HuggingFaceBertModel;
init -> no_init_weights;
init -> _from_config;
init -> BertEmbeddingModel;
init -> Baichuan2Model;
init -> from_pretrained;
init -> from_config;
init -> register_for_auto_class;
init -> type;
init -> ChatGLMModel;
init -> DeepSeekModel;
init -> GemmaModel;
init -> Gemma2Model;
init -> Gemma3Model;
init -> HyenaModel;
init -> LlamaModel;
init -> init;
init -> join;
init -> get_peft_model;
init -> ckpt_to_weights_subdir;
init -> open;
init -> super;
init -> str;
init -> load;
init -> split;
init -> LlamaEmbeddingModel;
init -> LlamaNemotronModel;
init -> MistralModel;
init -> MixtralModel;
init -> NemotronModel;
init -> Phi3Model;
init -> Qwen2Model;
init -> Qwen3Model;
init -> MambaModel;
init -> StarcoderModel;
init -> Starcoder2Model;
init -> T5Model;
init -> T5ForConditionalGeneration;
init -> CLIPModel;
init -> Gemma3VLModel;
init -> Llama4OmniModel;
init -> LlavaNextModel;
init -> LlavaNextForConditionalGeneration;
init -> MLlamaModel;
init -> LlavaModel;
init -> Qwen2VLModel;
init -> CLIPViTModel;
init -> InternViTModel;
init -> SigLIPViTModel;
init -> NotImplementedError;
init -> rank_zero_info;
init -> stream;
init -> __orig_init__;
nemo_setup -> connect;
nemo_setup -> setup_environment;
nemo_setup -> Trainer;
nemo_setup -> state_dict;
nemo_setup -> init_module;
nemo_setup -> megatron_lazy_init_context;
nemo_setup -> configure_model;
nemo_setup -> MegatronStrategy;
convert_state -> apply_transforms;
convert_state -> update;
convert_state -> append;
convert_state -> items;
convert_state -> state_transform;
convert_state -> isinstance;
convert_state -> _ModelState;
convert_state -> _modify_source_state;
convert_state -> hasattr;
convert_state -> getattr;
convert_state -> _add_mtp_to_source;
convert_state -> get;
convert_state -> pop;
convert_state -> enumerate;
convert_state -> len;
convert_state -> ValueError;
convert_state -> _modify_llama4_source_state;
convert_state -> extend;
convert_state -> is_llama4;
convert_state -> AttributeError;
convert_state -> keys;
convert_state -> state_dict;
convert_state -> _modify_mllama_source_state;
convert_state -> KeyError;
nemo_save -> setup;
nemo_save -> Path;
nemo_save -> mkdir;
nemo_save -> save_checkpoint;
nemo_save -> getattr;
nemo_save -> maybe_finalize_save_checkpoint;
nemo_save -> is_global_rank_zero;
nemo_save -> io_dump;
nemo_save -> ckpt_to_context_subdir;
nemo_save -> from_trainer;
teardown -> teardown;
teardown -> pop;
teardown -> super;
teardown -> is_initialized;
teardown -> _teardown;
teardown -> collect;
teardown -> empty_cache;
teardown -> destroy_model_parallel;
teardown -> destroy_process_group;
teardown -> get_objects;
teardown -> is_tensor;
teardown -> hasattr;
teardown -> teardown_ddp;
teardown -> get_num_unfinalized_calls;
teardown -> warning;
teardown -> get_rank;
teardown -> info;
teardown -> perf_counter;
teardown -> shutdown;
teardown -> exists;
teardown -> remove;
teardown -> rmtree;
config -> from_pretrained;
config -> FluxConfig;
config -> FluxModelParams;
config -> str;
config -> HuggingFaceBertConfig;
config -> load_context;
config -> HFBertConfig;
config -> Baichuan2Config;
config -> make_vocab_size_divisible_by;
config -> dtype_from_hf;
config -> ChatGLMConfig;
config -> DeepSeekConfig;
config -> getattr;
config -> _detect_hf_deepseek_version;
config -> all;
config -> HFDeepseekV3Config;
config -> asdict;
config -> ValueError;
config -> len;
config -> GemmaConfig;
config -> HFGemmaConfig;
config -> Gemma2Config;
config -> Gemma3Config1B;
config -> Gemma3Config4B;
config -> Gemma3Config12B;
config -> Gemma3Config27B;
config -> HFGemma3TextConfig;
config -> cls;
config -> partial;
config -> get;
config -> update;
config -> isinstance;
config -> HFLlamaConfig;
config -> create_llama4_config;
config -> Llama32EmbeddingConfig1B;
config -> register_for_auto_class;
config -> LlamaBidirectionalConfig;
config -> to_json_string;
config -> MistralConfig7B;
config -> HfMistralConfig;
config -> config_cls;
config -> lower;
config -> HfMixtralConfig;
config -> NemotronConfig;
config -> HFNemotronConfig;
config -> Phi3Config;
config -> print;
config -> HFPhi3Config;
config -> Qwen2Config;
config -> HFQwen2Config;
config -> qwen3_config_cls;
config -> hf_config_cls;
config -> NemotronHConfig8B;
config -> NemotronHConfig47B;
config -> NemotronHConfig56B;
config -> type;
config -> StarcoderConfig;
config -> HFStarcoderConfig;
config -> Starcoder2Config;
config -> HFStarcoder2Config;
config -> T5Config;
config -> HFT5Config;
config -> int;
config -> round_up_to_divisible;
config -> ceil;
config -> CLIPTextModelConfig;
config -> CLIPViTConfig;
config -> CLIPConfig;
config -> Gemma3VLVisionConfig;
config -> Gemma3VLMultimodalProjectorConfig;
config -> Gemma3VLConfig;
config -> HFGemma3VisionConfig;
config -> HFGemma3Config;
config -> Llama4TextConfig;
config -> Llama4VisionConfig;
config -> MultimodalProjectorConfig;
config -> Llama4OmniConfig;
config -> HFLlama4TextConfig;
config -> HFLlama4VisionConfig;
config -> HFLlama4Config;
config -> tokens_to_ids;
config -> sum;
config -> LlamaConfig;
config -> HFCLIPVisionConfig;
config -> LlavaNextConfig;
config -> HFLlavaConfig;
config -> MLlamaModelConfig;
config -> _language_model_config;
config -> _vision_model_config;
config -> MllamaVisionConfig;
config -> MllamaTextConfig;
config -> HFMllamaConfig;
config -> enumerate;
config -> _init_fusion_schedule;
config -> LlavaConfig;
config -> Qwen2VLVisionConfig;
config -> Qwen2VLConfig;
config -> Version;
config -> to_dict;
config -> HFQwen2VLConfig;
config -> HFQwen2VLVisionConfig;
config -> CLIPViTL_14_336_Config;
config -> InternViTConfig;
config -> get_internvit_layer_spec;
config -> SigLIPViT400M_14_384_Config;
apply_transforms -> extract_dtypes;
apply_transforms -> state_dict;
apply_transforms -> TransformCTX;
apply_transforms -> items;
apply_transforms -> named_parameters;
apply_transforms -> named_buffers;
apply_transforms -> list;
apply_transforms -> hasattr;
apply_transforms -> isinstance;
apply_transforms -> debug;
apply_transforms -> transform;
apply_transforms -> register_parameter;
apply_transforms -> register_buffer;
apply_transforms -> filter;
apply_transforms -> len;
apply_transforms -> RuntimeError;
apply_transforms -> StateDictTransform;
apply_transforms -> Parameter;
apply_transforms -> pop;
apply_transforms -> print;
apply_transforms -> keys;
apply_transforms -> append;
apply_transforms -> ValueError;
apply_transforms -> split;
apply_transforms -> getattr;
apply_transforms -> endswith;
encoder_prompt -> repeat;
encoder_prompt -> to;
encoder_prompt -> len;
encoder_prompt -> t5_encoder;
encoder_prompt -> clip_encoder;
encoder_prompt -> transpose;
encoder_prompt -> ValueError;
encoder_prompt -> view;
encoder_prompt -> zeros;
prepare_latents -> _generate_rand_latents;
prepare_latents -> _pack_latents;
prepare_latents -> _prepare_latent_image_ids;
prepare_latents -> isinstance;
prepare_latents -> ValueError;
prepare_latents -> transpose;
prepare_latents -> int;
prepare_latents -> to;
prepare_latents -> len;
_generate_rand_latents -> isinstance;
_generate_rand_latents -> to;
_generate_rand_latents -> randn;
_generate_rand_latents -> range;
_generate_rand_latents -> cat;
denormalize -> clamp;
denormalize -> exp;
set_timesteps -> to;
set_timesteps -> cat;
set_timesteps -> ValueError;
set_timesteps -> linspace;
set_timesteps -> time_shift;
set_timesteps -> _sigma_to_t;
set_timesteps -> from_numpy;
set_timesteps -> zeros;
set_timesteps -> astype;
set_timesteps -> copy;
set_timesteps -> round;
set_timesteps -> arange;
pil_to_numpy -> stack;
pil_to_numpy -> isinstance;
pil_to_numpy -> astype;
pil_to_numpy -> array;
numpy_to_pt -> from_numpy;
numpy_to_pt -> transpose;
prepare_image -> isinstance;
prepare_image -> repeat_interleave;
prepare_image -> to;
prepare_image -> pil_to_numpy;
prepare_image -> numpy_to_pt;
prepare_image -> resize;
zero_module -> parameters;
zero_module -> zeros_;
zero_module -> zero_;
zero_module -> detach;
flux_controlnet_data_step -> next;
flux_controlnet_data_step -> cuda;
flux_controlnet_data_step -> isinstance;
flux_controlnet_data_step -> len;
flux_controlnet_data_step -> Tensor;
load_from_flux_transformer -> info;
load_from_flux_transformer -> load_state_dict;
load_from_flux_transformer -> state_dict;
forward_wrapper -> taco2wg;
forward_wrapper -> norm_dist_to_audio;
flux_mock_datamodule -> MockDataModule;
unit_test_recipe -> factory;
unit_test_recipe -> Partial;
unit_test_recipe -> model;
unit_test_recipe -> Config;
unit_test_recipe -> default_resume;
unit_test_recipe -> tensorboard_logger;
common_broadcast -> min;
common_broadcast -> range;
common_broadcast -> format;
common_broadcast -> reshape;
batch_add -> common_broadcast;
batch_mul -> common_broadcast;
batch_sub -> common_broadcast;
batch_div -> common_broadcast;
cat_outputs_cp -> get_world_size;
cat_outputs_cp -> cat;
cat_outputs_cp -> zeros_like;
cat_outputs_cp -> all_gather;
cat_outputs_cp -> range;
cat_outputs_cp -> RuntimeError;
sample_t -> uniform;
sample_t -> tensor;
sample_t -> exp;
sample_t -> inv_cdf;
x0_fn -> denoise;
_initialize_generators -> Generator;
_initialize_generators -> manual_seed;
_initialize_generators -> default_rng;
_initialize_generators -> get_data_parallel_rank;
get_data_and_condition -> items;
get_data_and_condition -> random_dropout_input;
draw_training_sigma_and_epsilon -> randn;
draw_training_sigma_and_epsilon -> _initialize_generators;
draw_training_sigma_and_epsilon -> to;
draw_training_sigma_and_epsilon -> sample_t;
compute_loss_with_epsilon_and_sigma -> marginal_prob;
compute_loss_with_epsilon_and_sigma -> is_pipeline_last_stage;
compute_loss_with_epsilon_and_sigma -> batch_mul;
compute_loss_with_epsilon_and_sigma -> denoise;
compute_loss_with_epsilon_and_sigma -> get_per_sigma_loss_weights;
compute_loss_with_epsilon_and_sigma -> contiguous;
compute_loss_with_epsilon_and_sigma -> mean;
denoise -> to;
denoise -> scaling;
denoise -> net;
denoise -> batch_mul;
denoise -> is_pipeline_last_stage;
denoise -> denoiser;
denoise -> guider;
denoise -> prepare_inputs;
denoise -> typecheck;
denoise -> check_children_attributes;
denoise -> stft;
denoise -> clamp;
denoise -> istft;
denoise -> update_bias_spect;
denoise -> NeuralType;
denoise -> AudioSignal;
get_condition_uncondition -> get_data_and_condition;
get_x0_fn_from_batch -> get_condition_uncondition;
get_x0_fn_from_batch -> denoise;
random_dropout_input -> batch_mul;
random_dropout_input -> type_as;
random_dropout_input -> bernoulli;
random_dropout_input -> ones;
scale_noise -> to;
scale_noise -> flatten;
scale_noise -> is_floating_point;
scale_noise -> len;
scale_noise -> unsqueeze;
scale_noise -> index_for_timestep;
index_for_timestep -> nonzero;
index_for_timestep -> item;
index_for_timestep -> len;
time_shift -> exp;
_init_step_index -> isinstance;
_init_step_index -> index_for_timestep;
_init_step_index -> to;
initialize_distributed -> destroy_model_parallel;
initialize_distributed -> int;
initialize_distributed -> set_device;
initialize_distributed -> init_process_group;
initialize_distributed -> initialize_model_parallel;
initialize_distributed -> info;
initialize_distributed -> getenv;
initialize_distributed -> device_count;
set_world_size -> device_count;
set_world_size -> is_initialized;
set_world_size -> destroy_process_group;
set_world_size -> get_world_size;
set_world_size -> AppState;
set_world_size -> isinstance;
set_world_size -> warning;
make_attn -> print;
make_attn -> AttnBlock;
make_attn -> Identity;
make_attn -> LinAttnBlock;
_generate_input -> rand;
_generate_input -> to;
_count_parameters -> sum;
_count_parameters -> numel;
_count_parameters -> parameters;
_generate_all_combinations -> list;
_generate_all_combinations -> keys;
_generate_all_combinations -> product;
_generate_all_combinations -> append;
_generate_all_combinations -> zip;
_assign_attributes -> _load_base_json_skeleton;
_sort_data_in_place -> sort;
_sort_data_in_place -> ValueError;
_sort_data_in_place -> abs;
_print_table -> zip;
_print_table -> print;
_print_table -> sum;
search_for_target_vae -> _generate_input;
search_for_target_vae -> to;
search_for_target_vae -> print;
search_for_target_vae -> _sort_data_in_place;
search_for_target_vae -> _print_table;
search_for_target_vae -> from_config;
search_for_target_vae -> ValueError;
search_for_target_vae -> _search_space_8x1024;
search_for_target_vae -> _generate_all_combinations;
search_for_target_vae -> _assign_attributes;
search_for_target_vae -> _count_parameters;
search_for_target_vae -> reset_peak_memory_stats;
search_for_target_vae -> synchronize;
search_for_target_vae -> max_memory_allocated;
search_for_target_vae -> append;
search_for_target_vae -> _search_space_16x1024;
search_for_target_vae -> profile;
search_for_target_vae -> perf_counter;
search_for_target_vae -> table;
search_for_target_vae -> no_grad;
search_for_target_vae -> sample;
search_for_target_vae -> key_averages;
search_for_target_vae -> encode;
calculate_adaptive_weight -> detach;
calculate_adaptive_weight -> norm;
calculate_adaptive_weight -> grad;
calculate_adaptive_weight -> clamp;
kl -> Tensor;
kl -> sum;
kl -> pow;
setUp -> VAEGenerator;
setUp -> from_list;
setUp -> MultiModalSampleConfig;
setUp -> TemporaryDirectory;
setUp -> Path;
setUp -> mkdir;
setUp -> create_vqa_test_dataset;
setUp -> EnergonMultiModalDataModule;
setUp -> ImageToken;
setUp -> str;
setUp -> BaseSampleEncoder;
setUp -> VQASampleEncoder;
setUp -> LLaVATemplateConfig;
setUp -> SimilarityInterleavedEncoder;
setUp -> InterleavedSampleEncoder;
setUp -> MultiModalTaskEncoder;
setUp -> LlavaNextSimilarityInterleavedSampleEncoder;
setUp -> LlavaNextTaskEncoder;
setUp -> LlavaNextSampleEncoder;
setUp -> MagicMock;
setUp -> SentencePieceTokenizer;
setUp -> run_only_on;
setUp -> SimpleModel;
setUp -> mkdtemp;
setUp -> join;
setUp -> current_device;
setUp -> randn;
test_initialization_valid -> VAEGenerator;
test_initialization_valid -> assertEqual;
test_initialization_invalid -> assertRaises;
test_initialization_invalid -> VAEGenerator;
test_generate_input -> _generate_input;
test_generate_input -> assertEqual;
test_count_parameters -> Sequential;
test_count_parameters -> sum;
test_count_parameters -> _count_parameters;
test_count_parameters -> assertEqual;
test_count_parameters -> Linear;
test_count_parameters -> ReLU;
test_count_parameters -> numel;
test_count_parameters -> parameters;
test_load_base_json_skeleton -> _load_base_json_skeleton;
test_load_base_json_skeleton -> assertEqual;
test_load_base_json_skeleton -> set;
test_load_base_json_skeleton -> keys;
test_generate_all_combinations -> _generate_all_combinations;
test_generate_all_combinations -> assertEqual;
test_generate_all_combinations -> len;
test_generate_all_combinations -> assertIn;
test_assign_attributes -> _assign_attributes;
test_assign_attributes -> assertEqual;
test_search_space_16x1024 -> _search_space_16x1024;
test_search_space_16x1024 -> assertEqual;
test_search_space_16x1024 -> assertTrue;
test_search_space_16x1024 -> set;
test_search_space_16x1024 -> all;
test_search_space_16x1024 -> keys;
test_search_space_16x1024 -> isinstance;
test_search_space_16x1024 -> values;
test_sort_data_in_place -> _sort_data_in_place;
test_sort_data_in_place -> assertEqual;
test_search_for_target_vae_invalid -> assertRaises;
test_search_for_target_vae_invalid -> search_for_target_vae;
train_vae -> factory;
train_vae -> pretrain;
train_vae -> Config;
validate_vae -> factory;
validate_vae -> train_vae;
validate_vae -> Partial;
_load_model_from_path -> isinstance;
_load_model_from_path -> load_context;
_load_model_from_path -> ckpt_to_context_subdir;
_setup -> configure_no_restart_validation_training_loop;
_setup -> setup;
_setup -> getattr;
_setup -> enumerate;
_setup -> NeMoLogger;
_setup -> isinstance;
_setup -> info;
_setup -> connect;
_setup -> _use_tokenizer;
_setup -> _set_with_io;
_setup -> append;
_setup -> any;
_setup -> pop;
_setup -> ModelTransform;
_setup -> freeze;
_setup -> is_initialized;
_setup -> setup_environment;
_setup -> launch;
set_modelopt_spec_if_exists_in_ckpt -> removeprefix;
set_modelopt_spec_if_exists_in_ckpt -> isinstance;
set_modelopt_spec_if_exists_in_ckpt -> ckpt_to_weights_subdir;
set_modelopt_spec_if_exists_in_ckpt -> hasattr;
set_modelopt_spec_if_exists_in_ckpt -> _set_gpt_mamba_modelopt_spec;
set_modelopt_spec_if_exists_in_ckpt -> warning;
set_modelopt_spec_if_exists_in_ckpt -> str;
set_modelopt_spec_if_exists_in_ckpt -> exists;
set_modelopt_spec_if_exists_in_ckpt -> type;
_validate_config -> hasattr;
_validate_config -> isinstance;
_validate_config -> getattr;
_validate_config -> warn;
_validate_config -> _validate_kv_channels;
_validate_config -> _validate_enc_dec_hidden_size;
_validate_config -> _validate_perceiver_config;
_validate_config -> get_pipeline_model_parallel_world_size;
setup_trainer_and_restore_model_with_modelopt_spec -> info;
setup_trainer_and_restore_model_with_modelopt_spec -> Trainer;
setup_trainer_and_restore_model_with_modelopt_spec -> load_context;
setup_trainer_and_restore_model_with_modelopt_spec -> _set_gpt_mamba_modelopt_spec;
setup_trainer_and_restore_model_with_modelopt_spec -> items;
setup_trainer_and_restore_model_with_modelopt_spec -> _setup_trainer_and_restore_model;
setup_trainer_and_restore_model_with_modelopt_spec -> MegatronStrategy;
setup_trainer_and_restore_model_with_modelopt_spec -> setattr;
setup_trainer_and_restore_model_with_modelopt_spec -> get_tokenizer;
setup_trainer_and_restore_model_with_modelopt_spec -> MegatronMixedPrecision;
setup_trainer_and_restore_model_with_modelopt_spec -> ckpt_to_context_subdir;
prune_gpt_model -> drop_mcore_gpt_layers;
prune_gpt_model -> info;
prune_gpt_model -> prune;
prune_gpt_model -> getattr;
prune_gpt_model -> partial;
save_pruned_model -> info;
save_pruned_model -> ckpt_to_weights_subdir;
save_pruned_model -> mkdir;
save_pruned_model -> save;
save_pruned_model -> is_global_rank_zero;
save_pruned_model -> setattr;
save_pruned_model -> sharded_state_dict;
save_pruned_model -> io_dump;
save_pruned_model -> getattr;
save_pruned_model -> ckpt_to_context_subdir;
save_pruned_model -> from_trainer;
distill -> entrypoint;
distill -> load_context;
distill -> isinstance;
distill -> DistillationGPTModel;
distill -> train;
distill -> ckpt_to_context_subdir;
distill -> getattr;
ptq -> entrypoint;
ptq -> Quantizer;
ptq -> exists;
ptq -> quantize;
ptq -> export;
ptq -> is_global_rank_zero;
ptq -> QuantizationConfig;
ptq -> HFAutoModelForCausalLM;
ptq -> configure_model;
ptq -> setup_trainer_and_restore_model_with_modelopt_spec;
ptq -> Console;
ptq -> print;
ptq -> Path;
unset_environment_variables -> info;
unset_environment_variables -> run;
unset_environment_variables -> split;
unset_environment_variables -> unset_vars_with_prefix;
unset_environment_variables -> extend;
unset_environment_variables -> strip;
unset_environment_variables -> pop;
unset_environment_variables -> append;
unset_environment_variables -> join;
get_trtllm_deployable -> TensorRTLLM;
get_trtllm_deployable -> mkdir;
get_trtllm_deployable -> ValueError;
get_trtllm_deployable -> isdir;
get_trtllm_deployable -> info;
get_trtllm_deployable -> export;
get_trtllm_deployable -> Path;
get_trtllm_deployable -> RuntimeError;
get_trtllm_deployable -> str;
get_trtllm_deployable -> enumerate;
get_trtllm_deployable -> exists;
get_trtllm_deployable -> add_prompt_table;
get_trtllm_deployable -> join;
get_trtllm_deployable -> from_pretrained;
get_trtllm_deployable -> save_pretrained;
get_trtllm_deployable -> is_file;
get_trtllm_deployable -> FileNotFoundError;
get_trtllm_deployable -> len;
get_trtllm_deployable -> export_hf_model;
get_trtllm_deployable -> format;
get_trtllm_deployable -> append;
get_trtllm_deployable -> IsADirectoryError;
serve -> Exception;
serve -> serve;
serve -> print;
serve -> get_args;
serve -> server;
serve -> RivaTranslateServicer;
serve -> add_RivaTranslateServicer_to_server;
serve -> add_insecure_port;
serve -> start;
serve -> wait_for_termination;
serve -> ThreadPoolExecutor;
serve -> str;
generate_other_ranks -> empty;
generate_other_ranks -> broadcast;
generate_other_ranks -> broadcast_list;
generate_other_ranks -> generate;
generate_other_ranks -> CommonInferenceParams;
wait_for_fastapi_server -> range;
wait_for_fastapi_server -> error;
wait_for_fastapi_server -> info;
wait_for_fastapi_server -> sleep;
wait_for_fastapi_server -> get;
wait_for_fastapi_server -> post;
_legacy_evaluate -> load_context;
_legacy_evaluate -> wait_for_server_ready;
_legacy_evaluate -> NeMoFWLMEval;
_legacy_evaluate -> simple_evaluate;
_legacy_evaluate -> info;
_legacy_evaluate -> ValueError;
_legacy_evaluate -> RuntimeError;
_legacy_evaluate -> ImportError;
find_framework -> items;
find_framework -> ValueError;
find_framework -> import_module;
find_framework -> get_available_evaluations;
find_framework -> ImportError;
find_framework -> _iter_namespace;
find_framework -> keys;
import_ckpt -> entrypoint;
import_ckpt -> import_ckpt;
import_ckpt -> Console;
import_ckpt -> _build_directory_tree;
import_ckpt -> print;
import_ckpt -> Path;
import_ckpt -> exists;
import_ckpt -> FileExistsError;
import_ckpt -> importer;
import_ckpt -> isinstance;
import_ckpt -> ValueError;
import_ckpt -> on_import_ckpt;
import_ckpt -> _get_connector;
import_ckpt -> local_path;
import_ckpt -> connector;
_build_directory_tree -> Path;
_build_directory_tree -> sorted;
_build_directory_tree -> Tree;
_build_directory_tree -> iterdir;
_build_directory_tree -> is_dir;
_build_directory_tree -> add;
_build_directory_tree -> _build_directory_tree;
load_connector_from_trainer_ckpt -> exporter;
load_connector_from_trainer_ckpt -> isinstance;
load_connector_from_trainer_ckpt -> Path;
load_connector_from_trainer_ckpt -> load_context;
load_connector_from_trainer_ckpt -> ValueError;
exporter -> _get_connector;
exporter -> vLLMHFExporter;
export_ckpt -> entrypoint;
export_ckpt -> export_ckpt;
export_ckpt -> Console;
export_ckpt -> print;
export_ckpt -> isinstance;
export_ckpt -> Path;
export_ckpt -> exists;
export_ckpt -> FileExistsError;
export_ckpt -> load_connector;
export_ckpt -> exporter;
setup_model_and_tokenizer -> load_context;
setup_model_and_tokenizer -> _setup_trainer_and_restore_model;
setup_model_and_tokenizer -> get_inference_wrapper;
setup_model_and_tokenizer -> MCoreTokenizerWrappper;
setup_model_and_tokenizer -> ckpt_to_context_subdir;
setup_model_and_tokenizer -> info;
setup_model_and_tokenizer -> warning;
setup_model_and_tokenizer -> getattr;
setup_model_and_tokenizer -> from_pretrained;
setup_model_and_tokenizer -> MLlamaConfig11BInstruct;
setup_model_and_tokenizer -> MLlamaModel;
setup_model_and_tokenizer -> setup_inference_wrapper;
_use_tokenizer -> _set_with_io;
_use_tokenizer -> isinstance;
_use_tokenizer -> ValueError;
_set_with_io -> setattr;
_set_with_io -> hasattr;
_set_with_io -> deepcopy;
configure_no_restart_validation_training_loop -> NoValOnRestartTrainingLoop;
configure_no_restart_validation_training_loop -> isinstance;
configure_no_restart_validation_training_loop -> warn;
configure_no_restart_validation_training_loop -> SkipResumeTrainingValidationLoop;
configure_no_restart_validation_training_loop -> type;
iterdir -> glob;
task -> task;
masked_token_with_zero -> float;
masked_token_with_zero -> sum;
masked_token_with_zero -> view;
masked_token_with_zero -> reshape;
sentence_order_prediction_loss -> float;
sentence_order_prediction_loss -> view;
sentence_order_prediction_loss -> cross_entropy;
_gather_global_in_batch_representations -> contiguous;
_gather_global_in_batch_representations -> all_gather_no_backprop;
_gather_global_in_batch_representations -> cat;
_gather_global_in_batch_representations -> all_gather_with_backprop;
_gather_global_in_batch_representations -> zeros_like;
_gather_global_in_batch_representations -> get_data_parallel_rank;
_gather_global_in_batch_representations -> range;
_gather_global_in_batch_representations -> get_data_parallel_group;
_gather_global_in_batch_representations -> get_data_parallel_world_size;
get_dataset_root -> mkdir;
get_dataset_root -> Path;
create_sft_dataset -> BertEmbeddingDataset;
create_sft_dataset -> str;
create_sft_dataset -> isinstance;
create_sft_dataset -> Path;
create_sft_dataset -> GPTSFTPackedDataset;
create_sft_dataset -> GPTSFTChatDataset;
create_sft_dataset -> GPTSFTDataset;
create_sft_dataset -> T5SFTDataset;
_build_samples_mapping -> _get_samples_mapping;
_build_samples_mapping -> split;
_build_samples_mapping -> _OnlineSampleMapping;
_build_samples_mapping -> len;
_build_samples_mapping -> ceil;
_build_samples_mapping -> repeat;
_build_samples_mapping -> shuffle;
_build_samples_mapping -> squeeze;
_build_samples_mapping -> arange;
_build_samples_mapping -> reshape;
_build_samples_mapping -> _build_samples_mapping;
_build_samples_mapping -> text_to_ids;
_build_samples_mapping -> super;
_build_samples_mapping -> get_samples_mapping;
_build_samples_mapping -> ValueError;
_build_samples_mapping -> OnlineSampleMapping;
_get_samples_mapping -> format;
_get_samples_mapping -> join;
_get_samples_mapping -> print;
_get_samples_mapping -> time;
_get_samples_mapping -> info;
_get_samples_mapping -> build_mapping;
_get_samples_mapping -> save;
_get_samples_mapping -> barrier;
_get_samples_mapping -> LongTensor;
_get_samples_mapping -> all_reduce;
_get_samples_mapping -> load;
_get_samples_mapping -> hasattr;
_get_samples_mapping -> _deallocate_indexed_dataset_memory;
_get_samples_mapping -> ValueError;
_get_samples_mapping -> basename;
_get_samples_mapping -> get_rank;
_get_samples_mapping -> isfile;
_get_samples_mapping -> _make_indexed_dataset_compatibility;
_get_samples_mapping -> item;
_get_samples_mapping -> iinfo;
_get_samples_mapping -> getattr;
_get_samples_mapping -> ImportError;
_get_samples_mapping -> get_data_parallel_group;
_get_samples_mapping -> get_pipeline_model_parallel_group;
_get_samples_mapping -> get_world_size;
_get_samples_mapping -> get_tensor_model_parallel_group;
_process_example -> text_to_ids;
_process_example -> items;
_process_example -> len;
_process_example -> strip;
_process_example -> choices;
_process_example -> sample;
_process_example -> ValueError;
_process_example -> _separate_template;
_process_example -> _multiple_truncation;
_process_example -> _build_loss_mask;
_process_example -> zip;
_process_example -> append;
_process_example -> _preprocess;
_process_example -> _chat_preprocess;
_process_example -> replace;
_process_example -> split;
_process_example -> enumerate;
_process_example -> max;
_process_example -> warning;
_process_example -> index;
_process_example -> extend;
_process_example -> min;
_process_example -> prompt_format_fn;
_process_example -> flatten;
_process_example -> _find_substring_indices;
_process_example -> nonzero;
_process_example -> update;
_process_example -> int;
_process_example -> preprocess;
_process_example -> astype;
_process_example -> reshape;
_process_example -> array;
_maybe_cast_to_list -> isinstance;
_maybe_cast_to_list -> tolist;
_collate_item -> _maybe_cast_to_list;
_collate_item -> len;
_collate_item -> maybe_cast_to_list;
_collate_item -> max;
_create_attention_mask2 -> no_grad;
_create_attention_mask2 -> zeros;
_ceil_to_nearest -> ceil;
_ceil_to_nearest -> log2;
compute_consumed_samples -> int;
compute_consumed_samples -> AppState;
compute_consumed_samples -> get;
compute_consumed_samples -> get_current_global_batch_size;
compute_consumed_samples -> get_num_microbatches;
compute_consumed_samples -> hasattr;
compute_consumed_samples -> isinstance;
_create_dataset -> create_sft_dataset;
_create_dataset -> get;
_create_dataset -> warning;
_create_dataset -> setattr;
_create_dataset -> info;
_create_dataset -> process_augmentations;
_create_dataset -> MultimodalConversationDataset;
_create_dataset -> get_tarred_audio_text_dataset_from_config;
_create_dataset -> get_audio_text_dataset_from_config;
_create_dataset -> isinstance;
_create_dataset -> len;
_create_dataset -> get_data_parallel_rank;
_create_dataset -> get_data_parallel_world_size;
_create_dataset -> _parse_lhotse_data_name;
_create_dataset -> get_text_processor_from_cfg;
_extract_tokenizer_model_name -> isinstance;
_extract_tokenizer_model_name -> endswith;
_extract_tokenizer_model_name -> join;
_extract_tokenizer_model_name -> replace;
_extract_tokenizer_model_name -> hash;
_extract_tokenizer_model_name -> split;
reconfigure_limit_batches -> _reconfigure_limit_batches;
reconfigure_limit_batches -> get_num_microbatches;
reconfigure_limit_batches -> warning;
_reconfigure_limit_batches -> isinstance;
_reconfigure_limit_batches -> get_num_microbatches;
_reconfigure_limit_batches -> len;
_reconfigure_limit_batches -> warning;
_reconfigure_limit_batches -> float;
_reconfigure_limit_batches -> int;
_reconfigure_limit_batches -> MisconfigurationException;
_reconfigure_limit_batches -> ValueError;
_get_text -> default_rng;
_get_text -> integers;
_get_text -> astype;
_get_text -> get;
_get_text -> range;
_get_text -> append;
_get_text -> concatenate;
_get_text -> len;
_get_text -> info;
_get_text -> array;
_get_text -> pad;
_get_text -> get_chunk_id;
_get_text -> _get_chunks;
_get_text -> reshape;
_get_text -> stack;
bert_dataset_config -> BERTMaskedWordPieceDatasetConfig;
prepare_data -> prepare_data;
prepare_data -> _download_data;
prepare_data -> _preprocess_and_split_data;
prepare_data -> exists;
prepare_data -> super;
prepare_data -> is_file;
prepare_data -> prepare_packed_sequence_data;
prepare_data -> DialogueSGDDataProcessor;
prepare_data -> DialogueAssistantDataProcessor;
prepare_data -> DialogueDesignDataProcessor;
prepare_data -> ValueError;
prepare_data -> DialogueMSMarcoDataProcessor;
prepare_data -> DialogueMellonQADataProcessor;
prepare_data -> manual_seed;
prepare_data -> randn;
prepare_data -> randint;
prepare_data -> isinstance;
prepare_data -> dict;
prepare_data -> zeros;
prepare_data -> range;
prepare_data -> cat;
prepare_data -> clamp;
prepare_data -> repeat;
prepare_data -> append;
prepare_data -> int;
prepare_data -> unsqueeze;
prepare_data -> max;
prepare_data -> tensor;
prepare_data -> DataFrame;
prepare_data -> insert;
prepare_data -> float;
_download_data -> info;
_download_data -> load_dataset;
_download_data -> str;
_preprocess_and_split_data -> info;
_preprocess_and_split_data -> get;
_preprocess_and_split_data -> train_test_split;
_preprocess_and_split_data -> items;
_preprocess_and_split_data -> iterdir;
_preprocess_and_split_data -> open;
_preprocess_and_split_data -> is_dir;
_preprocess_and_split_data -> write;
_preprocess_and_split_data -> rmtree;
_preprocess_and_split_data -> str;
_preprocess_and_split_data -> unlink;
_preprocess_and_split_data -> dumps;
_preprocess_and_split_data -> find;
_preprocess_and_split_data -> strip;
_preprocess_and_split_data -> randint;
_preprocess_and_split_data -> save;
_preprocess_and_split_data -> int;
_preprocess_and_split_data -> concatenate_datasets;
_preprocess_and_split_data -> append;
_preprocess_and_split_data -> from_list;
_preprocess_and_split_data -> load;
_preprocess_and_split_data -> isinstance;
bert_data_step -> next;
bert_data_step -> set;
bert_data_step -> add;
bert_data_step -> is_pipeline_first_stage;
bert_data_step -> is_pipeline_last_stage;
bert_data_step -> get_batch_on_this_cp_rank;
bert_data_step -> isinstance;
bert_data_step -> update;
bert_data_step -> len;
bert_data_step -> cuda;
bert_data_step -> items;
bert_forward_step -> model;
bert_forward_step -> get_packed_seq_params;
get_packed_seq_params -> squeeze;
get_packed_seq_params -> PackedSeqParams;
get_packed_seq_params -> get;
get_packed_seq_params -> item;
get_packed_seq_params -> argmin;
get_packed_seq_params -> cumsum;
get_packed_seq_params -> pad;
get_packed_seq_params -> repeat_interleave;
get_packed_seq_params -> max;
default_layer_spec -> get_bert_layer_local_spec_postln;
default_layer_spec -> get_bert_layer_with_transformer_engine_spec_postln;
default_layer_spec -> local_layer_spec;
default_layer_spec -> transformer_engine_full_layer_spec;
default_layer_spec -> transformer_engine_layer_spec;
get_bert_layer_local_spec_postln -> ModuleSpec;
get_bert_layer_local_spec_postln -> TransformerLayerSubmodulesWithPostLNSupport;
get_bert_layer_local_spec_postln -> SelfAttentionSubmodules;
get_bert_layer_local_spec_postln -> MLPSubmodules;
get_bert_layer_local_spec_postln -> ImportError;
get_bert_layer_with_transformer_engine_spec_postln -> ModuleSpec;
get_bert_layer_with_transformer_engine_spec_postln -> TransformerLayerSubmodulesWithPostLNSupport;
get_bert_layer_with_transformer_engine_spec_postln -> SelfAttentionSubmodules;
get_bert_layer_with_transformer_engine_spec_postln -> MLPSubmodules;
get_bert_layer_with_transformer_engine_spec_postln -> ImportError;
get_vocab_size -> info;
shared_embedding_or_output_weight -> shared_embedding_or_output_weight;
_import_embedding -> state_transform;
_import_embedding -> size;
_import_embedding -> int;
_import_embedding -> zeros;
_import_embedding -> cat;
_import_embedding -> ceil;
_import_embedding -> copy_;
_import_output_bias -> state_transform;
_import_output_bias -> size;
_import_output_bias -> int;
_import_output_bias -> zeros;
_import_output_bias -> cat;
_import_output_bias -> ceil;
_import_qkv_2 -> state_transform;
_import_qkv_2 -> getattr;
_import_qkv_2 -> size;
_import_qkv_2 -> view;
_import_qkv_2 -> empty;
_import_qkv_2 -> range;
_import_qkv_2 -> reshape;
_import_qkv_2 -> cat;
_import_qkv_bias_2 -> state_transform;
_import_qkv_bias_2 -> getattr;
_import_qkv_bias_2 -> view;
_import_qkv_bias_2 -> empty;
_import_qkv_bias_2 -> range;
_import_qkv_bias_2 -> reshape;
_import_qkv_bias_2 -> cat;
_import_embedding_2 -> state_transform;
_import_embedding_2 -> size;
_import_embedding_2 -> int;
_import_embedding_2 -> zeros;
_import_embedding_2 -> cat;
_import_embedding_2 -> ceil;
_export_qkv -> state_transform;
_export_qkv -> getattr;
_export_qkv -> reshape;
_export_qkv -> cat;
_export_qkv -> arange;
_export_qkv -> cpu;
_export_qkv -> range;
_export_qkv_bias -> state_transform;
_export_qkv_bias -> getattr;
_export_qkv_bias -> reshape;
_export_qkv_bias -> cat;
_export_qkv_bias -> arange;
_export_qkv_bias -> cpu;
_export_qkv_bias -> range;
_export_embedding -> state_transform;
save_hf_tokenizer_assets -> from_pretrained;
save_hf_tokenizer_assets -> save_pretrained;
nemo_load -> load_context;
nemo_load -> connect;
nemo_load -> setup_environment;
nemo_load -> setup;
nemo_load -> append;
nemo_load -> Trainer;
nemo_load -> state_dict;
nemo_load -> model_transform;
nemo_load -> load_checkpoint;
nemo_load -> load_model_state_dict;
nemo_load -> configure_model;
nemo_load -> ckpt_to_weights_subdir;
nemo_load -> MegatronStrategy;
nemo_load -> megatron_cpu_init_context;
nemo_load -> items;
nemo_load -> sharded_state_dict;
bert_embedding_data_step -> next;
bert_embedding_data_step -> set;
bert_embedding_data_step -> add;
bert_embedding_data_step -> is_pipeline_first_stage;
bert_embedding_data_step -> get_batch_on_this_cp_rank;
bert_embedding_data_step -> isinstance;
bert_embedding_data_step -> len;
bert_embedding_data_step -> cuda;
bert_embedding_data_step -> items;
bert_embedding_forward_step -> model;
bert_embedding_forward_step -> get_packed_seq_params;
embedding_head -> BertEmbeddingHead;
unset_vars_with_prefix -> run;
unset_vars_with_prefix -> split;
unset_vars_with_prefix -> strip;
unset_vars_with_prefix -> pop;
unset_vars_with_prefix -> append;
wait_for_server_ready -> startswith;
wait_for_server_ready -> range;
wait_for_server_ready -> error;
wait_for_server_ready -> search;
wait_for_server_ready -> group;
wait_for_server_ready -> replace;
wait_for_server_ready -> info;
wait_for_server_ready -> sleep;
wait_for_server_ready -> get;
wait_for_server_ready -> ModelClient;
_iter_namespace -> iter_modules;
_generate_tokens_logits -> NemoQueryLLM;
_generate_tokens_logits -> query_llm;
_generate_tokens_logits -> str;
_generate_tokens_logits -> isinstance;
tokenizer_type -> isinstance;
tokenizer_type -> ValueError;
loglikelihood -> tokenizer_type;
loglikelihood -> match;
loglikelihood -> tqdm;
loglikelihood -> range;
loglikelihood -> _generate_tokens_logits;
loglikelihood -> enumerate;
loglikelihood -> len;
loglikelihood -> encode;
loglikelihood -> append;
loglikelihood -> log_softmax;
loglikelihood -> unsqueeze;
loglikelihood -> argmax;
loglikelihood -> all;
loglikelihood -> squeeze;
loglikelihood -> replace;
loglikelihood -> tensor;
loglikelihood -> float;
loglikelihood -> bool;
loglikelihood -> decode;
loglikelihood -> gather;
loglikelihood -> sum;
loglikelihood -> any;
generate_until -> tqdm;
generate_until -> _generate_tokens_logits;
generate_until -> append;
gelu_impl -> tanh;
openai_gelu -> gelu_impl;
quick_gelu -> sigmoid;
squared_relu -> pow;
squared_relu -> relu;
_map_module_list -> _get_func_kwargs;
_map_module_list -> pop;
_map_module_list -> enumerate;
_map_module_list -> _create_list_wrapper;
_map_module_list -> set;
_map_module_list -> func;
_map_module_list -> get;
_map_module_list -> map;
_map_module_list -> append;
_map_module_list -> str;
_map_module -> _get_func_kwargs;
_map_module -> pop;
_map_module -> enumerate;
_map_module -> add;
_map_module -> set;
_map_module -> id;
_map_module -> list;
_map_module -> func;
_map_module -> get;
_map_module -> named_children;
_map_module -> setattr;
_map_module -> parameters;
_map_module -> map;
_map_module_dict -> _get_func_kwargs;
_map_module_dict -> enumerate;
_map_module_dict -> set;
_map_module_dict -> func;
_map_module_dict -> items;
_map_module_dict -> map;
_map_module_dict -> type;
forall -> all;
forall -> func;
forall -> bool;
forall -> apply_predicate;
forall -> modules;
forall -> isinstance;
forall -> forall;
apply_predicate -> func;
apply_predicate -> bool;
_get_func_kwargs -> signature;
_get_func_kwargs -> items;
_create_list_wrapper -> signature;
_create_list_wrapper -> type;
mock -> MockDataModule;
squad -> SquadDataModule;
dolly -> DollyDataModule;
hf_dataset -> HFDatasetDataModule;
_load_dataset -> load_dataset;
_load_dataset -> _JSONLMemMapDataset;
_load_dataset -> load;
_load_dataset -> error;
_load_dataset -> exit;
_load_dataset -> JSONLMemMapDataset;
_maybe_validate_prompt_template -> decode;
_maybe_validate_prompt_template -> findall;
_maybe_validate_prompt_template -> issubset;
_maybe_validate_prompt_template -> len;
_maybe_validate_prompt_template -> encode;
_maybe_validate_prompt_template -> set;
_separate_template -> split;
_separate_template -> getattr;
_separate_template -> lstrip;
_separate_template -> append;
_separate_template -> zip;
_separate_template -> get;
_separate_template -> len;
_multiple_truncation -> len;
_multiple_truncation -> enumerate;
_multiple_truncation -> zip;
_multiple_truncation -> range;
_multiple_truncation -> max;
_multiple_truncation -> pop;
_multiple_truncation -> _truncation;
_multiple_truncation -> min;
_multiple_truncation -> ValueError;
_multiple_truncation -> sum;
_multiple_truncation -> warning;
_truncation -> ValueError;
_build_loss_mask -> float;
_build_loss_mask -> len;
_build_loss_mask -> range;
_build_loss_mask -> concatenate;
_create_attention_mask -> no_grad;
_create_attention_mask -> unsqueeze;
_create_attention_mask -> tril;
_create_attention_mask -> ones;
_create_attention_mask -> view;
_preprocess -> _get_header_conversation_type_mask_role;
_preprocess -> text_to_ids;
_preprocess -> deepcopy;
_preprocess -> len;
_preprocess -> split;
_preprocess -> LongTensor;
_preprocess -> _mask_targets;
_preprocess -> bool;
_preprocess -> dict;
_preprocess -> equal;
_preprocess -> warning;
_preprocess -> append;
_preprocess -> item;
_preprocess -> tensor;
_preprocess -> sum;
_preprocess -> nonzero;
_chat_preprocess -> _convert_to_openai_messages;
_chat_preprocess -> isinstance;
_chat_preprocess -> apply_chat_template;
_chat_preprocess -> get;
_chat_preprocess -> dict;
_chat_preprocess -> hasattr;
_chat_preprocess -> ValueError;
_chat_preprocess -> search;
_chat_preprocess -> len;
_chat_preprocess -> index;
_chat_preprocess -> LongTensor;
_chat_preprocess -> BoolTensor;
validate_batch_size_for_packed_sequence -> ValueError;
prepare_packed_sequence_data -> info;
prepare_packed_sequence_data -> tokenize_dataset;
prepare_packed_sequence_data -> create_hist;
prepare_packed_sequence_data -> create_packing_strategy;
prepare_packed_sequence_data -> fill_packing_strategy;
prepare_packed_sequence_data -> save;
prepare_packed_sequence_data -> append;
prepare_packed_sequence_data -> open;
prepare_packed_sequence_data -> dump;
prepare_packed_sequence_data -> load;
prepare_packed_sequence_data -> isinstance;
default_pack_path -> _extract_tokenizer_model_name;
default_pack_path -> exists;
default_pack_path -> mkdir;
default_pack_path -> info;
default_pack_path -> str;
pack_metadata -> ValueError;
train_path_packed -> ValueError;
validation_path_packed -> ValueError;
clean_split -> split;
make_dataset_splits -> items;
make_dataset_splits -> isinstance;
make_dataset_splits -> keys;
make_dataset_splits -> sum;
make_dataset_splits -> format;
make_dataset_splits -> clean_split;
make_dataset_splits -> set;
make_dataset_splits -> map;
make_dataset_splits -> type;
make_dataset_splits -> info;
make_dataset_splits -> values;
make_dataset_splits -> enumerate;
make_dataset_splits -> ValueError;
make_dataset_splits -> split;
has_dist_env_init_or_rank_env_var -> is_initialized;
has_dist_env_init_or_rank_env_var -> int;
has_dist_env_init_or_rank_env_var -> get;
extract_key_from_dicts -> list;
extract_key_from_dicts -> map;
pad_within_micro -> max;
pad_within_micro -> map;
pad_within_micro -> len;
_make_dataloader -> DataLoader;
_make_dataloader -> collate_fn;
_make_dataloader -> HFDatasetPackedSequenceHelper;
_make_dataloader -> pack;
_make_dataloader -> _make_dataloader;
_make_dataloader -> super;
_make_dataloader -> get_data_sampler;
preprocess_dataset -> print;
preprocess_dataset -> map;
preprocess_dataset -> partial;
preprocess_dataset -> select_columns;
preprocess_dataset -> shuffle;
preprocess_dataset -> tokenizer;
process_doc -> preprocess;
process_doc -> int;
process_doc -> capitalize;
preprocess_batch -> tokenizer;
create_block_causal_mask -> len;
create_block_causal_mask -> range;
create_block_causal_mask -> unsqueeze;
create_block_causal_mask -> append;
create_block_causal_mask -> tril;
create_block_causal_mask -> block_diag;
create_block_causal_mask -> stack;
create_block_causal_mask -> ones;
create_block_causal_mask -> enumerate;
packed_block_causal_mask -> create_block_causal_mask;
_should_stop_packing -> len;
_add_pack -> _convert_to_tensors;
_add_pack -> _pad_pack;
_add_pack -> append;
_split_and_add_pack -> _add_pack;
_split_and_add_pack -> len;
_split_and_add_pack -> sum;
_convert_to_tensors -> tensor;
_pad_pack -> pad;
_pad_pack -> arange;
_pad_pack -> clamp;
_pad_pack -> cat;
_pad_pack -> len;
_pad_pack -> tensor;
tokenize_dataset -> get;
tokenize_dataset -> pop;
tokenize_dataset -> create_sft_dataset;
tokenize_dataset -> array;
tokenize_dataset -> dumps;
tokenize_dataset -> isinstance;
tokenize_dataset -> range;
tokenize_dataset -> len;
tokenize_dataset -> readlines;
tokenize_dataset -> Pool;
tokenize_dataset -> map;
tokenize_dataset -> open;
tokenize_dataset -> info;
tokenize_dataset -> isdir;
tokenize_dataset -> GPTSFTDataset;
tokenize_dataset -> max;
tokenize_dataset -> get_nmt_tokenizer;
tokenize_dataset -> items;
tokenize_dataset -> min;
tokenize_dataset -> pre_pad_dataset;
tokenize_dataset -> ceil_to_nearest;
create_hist -> info;
create_hist -> defaultdict;
create_hist -> debug;
create_hist -> range;
create_hist -> append;
create_hist -> len;
create_packing_strategy -> info;
create_packing_strategy -> enumerate;
create_packing_strategy -> packing_fn;
create_packing_strategy -> max;
create_packing_strategy -> debug;
create_packing_strategy -> extend;
create_packing_strategy -> globals;
create_packing_strategy -> sum;
create_packing_strategy -> len;
create_packing_strategy -> round;
fill_packing_strategy -> dict;
fill_packing_strategy -> tqdm;
fill_packing_strategy -> range;
fill_packing_strategy -> all;
fill_packing_strategy -> enumerate;
fill_packing_strategy -> len;
fill_packing_strategy -> append;
fill_packing_strategy -> permutation;
fill_packing_strategy -> tolist;
fill_packing_strategy -> extend;
fill_packing_strategy -> pop;
fill_packing_strategy -> values;
fill_packing_strategy -> array;
fill_packing_strategy -> error;
fill_packing_strategy -> ValueError;
is_number_tryexcept -> float;
is_zipped_list -> list;
is_zipped_list -> any;
is_zipped_list -> len;
is_zipped_list -> map;
is_zipped_list -> all;
validate_dataset_asset_accessibility -> Path;
validate_dataset_asset_accessibility -> is_dir;
validate_dataset_asset_accessibility -> exists;
validate_dataset_asset_accessibility -> ValueError;
validate_dataset_asset_accessibility -> isinstance;
validate_dataset_asset_accessibility -> is_zipped_list;
validate_dataset_asset_accessibility -> validate_dataset_asset_accessibility;
validate_dataset_asset_accessibility -> values;
validate_dataset_asset_accessibility -> access;
validate_dataset_asset_accessibility -> PermissionError;
validate_dataset_asset_accessibility -> FileNotFoundError;
validate_dataset_asset_accessibility -> str;
build_pretraining_datamodule -> init_process_group;
build_pretraining_datamodule -> info;
build_pretraining_datamodule -> build;
build_pretraining_datamodule -> is_initialized;
gpt_dataset_config -> GPTDatasetConfig;
build_index_from_memdata -> memmap;
build_index_from_memdata -> tolist;
build_index_from_memdata -> asarray;
build_index_from_memdata -> close;
build_index_from_memdata -> where;
build_index_from_memdata -> pop;
build_index_from_memdata -> len;
build_index_files -> info;
build_index_files -> time;
build_index_files -> get_context;
build_index_files -> len;
build_index_files -> ValueError;
build_index_files -> max;
build_index_files -> Pool;
build_index_files -> map;
build_index_files -> partial;
build_index_files -> cpu_count;
build_index_files -> sum;
build_index_files -> timedelta;
handle_index -> len;
handle_index -> IndexError;
lightning_prepare_data -> any;
lightning_prepare_data -> stack;
_make_indexed_dataset_compatibility -> arange;
_make_indexed_dataset_compatibility -> ones;
_make_indexed_dataset_compatibility -> AttributeError;
_make_indexed_dataset_compatibility -> len;
_make_indexed_dataset_compatibility -> getattr;
_get_header_conversation_type_mask_role -> get;
_get_header_conversation_type_mask_role -> _add_speaker_and_signal;
_mask_targets -> tensor;
_mask_targets -> enumerate;
_mask_targets -> zip;
_mask_targets -> text_to_ids;
_mask_targets -> _identify_start_index_of_subsequence;
_mask_targets -> len;
_mask_targets -> equal;
_mask_targets -> warning;
_mask_targets -> identify_start_index_of_subsequence;
_convert_to_openai_messages -> isinstance;
_convert_to_openai_messages -> get;
_convert_to_openai_messages -> insert;
_convert_to_openai_messages -> lower;
_identify_start_index_of_subsequence -> range;
_identify_start_index_of_subsequence -> equal;
_identify_start_index_of_subsequence -> size;
_add_speaker_and_signal -> enumerate;
_add_speaker_and_signal -> ValueError;
_add_speaker_and_signal -> len;
_add_speaker_and_signal -> _response_value_formater;
_add_speaker_and_signal -> response_value_formater;
_response_value_formater -> isinstance;
_response_value_formater -> ValueError;
_response_value_formater -> type;
_build_memmap_index_files -> _index_fn;
_build_memmap_index_files -> _index_file_exists;
_build_memmap_index_files -> info;
_build_memmap_index_files -> build_index_fn;
_build_memmap_index_files -> asarray;
_build_memmap_index_files -> dict;
_build_memmap_index_files -> save;
_build_memmap_index_files -> dump;
_build_memmap_index_files -> issubdtype;
_build_memmap_index_files -> TypeError;
_build_memmap_index_files -> open;
_index_fn -> startswith;
_index_fn -> makedirs;
_index_fn -> dirname;
_index_fn -> lstrip;
_index_fn -> join;
_index_file_exists -> exists;
load_file -> info;
load_file -> _index_fn;
load_file -> memmap;
load_file -> _index_file_exists;
load_file -> load;
load_file -> get;
load_file -> ValueError;
load_file -> len;
load_file -> RuntimeError;
load_file -> open;
load_file -> warning;
load_file -> readlines;
load_file -> append;
load_file -> loads;
_fetch_sample_from_memmap -> decode;
_fetch_sample_from_memmap -> tobytes;
_build_data_from_text -> text_to_ids;
_build_data_from_text -> loads;
_build_data_from_text -> error;
_build_data_from_text -> _build_data_from_text;
_build_data_from_text -> split;
_build_data_from_text -> super;
_build_data_from_text -> items;
get_sample_block -> arange;
get_sample_block -> IndexError;
get_sample_block -> RandomState;
get_sample_block -> permutation;
__reduce_ex__ -> __reduce__;
infer_global_batch_size -> all;
infer_global_batch_size -> ValueError;
infer_global_batch_size -> isinstance;
infer_global_batch_size -> type;
parse_dataset_config -> defaultdict;
parse_dataset_config -> open;
parse_dataset_config -> safe_load;
parse_dataset_config -> Evo2BlendedDatasetConfig;
parse_dataset_config -> abs;
parse_dataset_config -> extend;
validate_dataset_prefix -> model_validator;
validate_dataset_prefix -> Path;
validate_dataset_prefix -> list;
validate_dataset_prefix -> str;
validate_dataset_prefix -> get;
validate_dataset_prefix -> is_absolute;
validate_dataset_prefix -> exists;
validate_dataset_prefix -> ValueError;
validate_dataset_prefix -> glob;
validate_dataset_prefix -> resolve;
_get_gpt_batch -> __getitem__;
_get_gpt_batch -> super;
_modify_gpt_batch -> get;
_modify_gpt_batch -> isin;
_modify_gpt_batch -> mask_phylogenetic_tags;
_modify_gpt_batch -> ones_like;
_modify_gpt_batch -> tensor;
_modify_gpt_batch -> make_upper_case;
mask_phylogenetic_tags -> tensor;
mask_phylogenetic_tags -> ones_like;
mask_phylogenetic_tags -> range;
mask_phylogenetic_tags -> numel;
mask_phylogenetic_tags -> ones;
mask_phylogenetic_tags -> item;
mask_phylogenetic_tags -> unsqueeze;
mask_phylogenetic_tags -> list;
mask_phylogenetic_tags -> bool;
mask_phylogenetic_tags -> size;
mask_phylogenetic_tags -> tolist;
mask_phylogenetic_tags -> squeeze;
mask_phylogenetic_tags -> len;
mask_phylogenetic_tags -> region_all_valid_or_control;
mask_phylogenetic_tags -> process_segment;
mask_phylogenetic_tags -> isin;
mask_phylogenetic_tags -> set;
mask_phylogenetic_tags -> cpu;
mask_phylogenetic_tags -> zero_;
mask_phylogenetic_tags -> all;
mask_phylogenetic_tags -> nonzero;
make_upper_case -> where;
region_all_valid_or_control -> bool;
region_all_valid_or_control -> numel;
region_all_valid_or_control -> item;
region_all_valid_or_control -> cpu;
region_all_valid_or_control -> all;
region_all_valid_or_control -> isin;
dtype_from_hf -> hasattr;
dtype_from_hf -> isinstance;
dtype_from_hf -> dtype_from_str;
dtype_from_hf -> ValueError;
gpt_data_step -> next;
gpt_data_step -> set;
gpt_data_step -> add;
gpt_data_step -> is_pipeline_last_stage;
gpt_data_step -> items;
gpt_data_step -> get_batch_on_this_cp_rank;
gpt_data_step -> isinstance;
gpt_data_step -> is_pipeline_first_stage;
gpt_data_step -> update;
gpt_data_step -> len;
gpt_data_step -> cuda;
gpt_data_step -> cpu;
gpt_forward_step -> model;
gpt_forward_step -> get_packed_seq_params;
transformer_engine_layer_spec -> get_gpt_layer_with_transformer_engine_spec;
transformer_engine_layer_spec -> bool;
transformer_engine_layer_spec -> get_t5_encoder_with_transformer_engine_block_spec;
transformer_engine_layer_spec -> get_t5_decoder_with_transformer_engine_block_spec;
transformer_engine_full_layer_spec -> get_gpt_full_te_layer_autocast_spec;
get_gpt_full_te_layer_autocast_spec -> get_num_layers_to_build;
get_gpt_full_te_layer_autocast_spec -> TransformerBlockSubmodules;
get_gpt_full_te_layer_autocast_spec -> ModuleSpec;
local_layer_spec -> get_gpt_layer_local_spec;
local_layer_spec -> get_t5_encoder_with_local_block_spec;
local_layer_spec -> get_t5_decoder_with_local_block_spec;
mtp_block_spec -> getattr;
mtp_block_spec -> isinstance;
mtp_block_spec -> get_gpt_mtp_block_spec;
mtp_block_spec -> transformer_layer_spec;
get_inference_wrapper -> hasattr;
get_inference_wrapper -> InferenceWrapperConfig;
get_inference_wrapper -> GPTInferenceWrapper;
get_inference_wrapper -> getattr;
get_inference_wrapper -> ValueError;
get_inference_wrapper -> type;
get_inference_wrapper -> NotImplementedError;
get_inference_wrapper -> T5InferenceWrapper;
_import_qkv_weight -> state_transform;
_import_qkv_weight -> size;
_import_qkv_weight -> split;
_import_qkv_weight -> view;
_import_qkv_weight -> type_as;
_import_qkv_weight -> range;
_import_qkv_weight -> reshape;
_import_qkv_weight -> cat;
_import_qkv_weight -> empty;
_export_qkv_weight -> state_transform;
_export_qkv_weight -> reshape;
_export_qkv_weight -> cat;
_export_qkv_weight -> arange;
_export_qkv_weight -> range;
_verify_source -> from_pretrained;
_verify_source -> str;
_modify_source_state -> state_dict;
_modify_source_state -> enumerate;
_modify_source_state -> _ModelState;
_modify_source_state -> pop;
_modify_source_state -> range;
_add_mtp_to_source -> set;
_add_mtp_to_source -> items;
_add_mtp_to_source -> update;
_add_mtp_to_source -> open;
_add_mtp_to_source -> load;
_add_mtp_to_source -> match;
_add_mtp_to_source -> state_dict;
_add_mtp_to_source -> int;
_add_mtp_to_source -> add;
_add_mtp_to_source -> load_file;
_add_mtp_to_source -> group;
_add_mtp_to_source -> replace;
_detect_hf_deepseek_version -> info;
ckpt_load -> items;
ckpt_load -> exists;
ckpt_load -> FileNotFoundError;
ckpt_load -> open;
ckpt_load -> safe_load;
ckpt_load -> replace;
ckpt_load -> load_distributed_model_weights;
ckpt_load -> range;
ckpt_load -> size;
ckpt_load -> str;
ckpt_load -> dict_to_obj;
ckpt_load -> isinstance;
ckpt_load -> type;
ckpt_load -> load_context;
ckpt_load -> _ModelState;
load_distributed_model_weights -> load_model_weights;
load_distributed_model_weights -> rename_extra_states;
load_distributed_model_weights -> torch_to_numpy_state_dict;
load_distributed_model_weights -> update;
load_distributed_model_weights -> preprocess_scaling_factors_for_local_export;
load_distributed_model_weights -> items;
load_distributed_model_weights -> isinstance;
gemma2_layer_spec -> ModuleSpec;
gemma2_layer_spec -> TransformerLayerSubmodules;
gemma2_layer_spec -> SelfAttentionSubmodules;
gemma2_layer_spec -> MLPSubmodules;
logit_softcapping -> tanh;
get_swa -> ones;
get_swa -> triu;
get_swa -> tril;
divide -> ensure_divisibility;
gemma3_layer_spec -> ModuleSpec;
gemma3_layer_spec -> TransformerLayerSubmodules;
gemma3_layer_spec -> SelfAttentionSubmodules;
gemma3_layer_spec -> MLPSubmodules;
_is_local_attn_layer -> sum;
count_tail_padding -> no_grad;
count_tail_padding -> flip;
count_tail_padding -> cumprod;
count_tail_padding -> item;
count_tail_padding -> int;
count_tail_padding -> sum;
count_tail_padding -> view;
configure_tokenizer -> AutoTokenizer;
configure_tokenizer -> from_pretrained;
_configure_model -> BitsAndBytesConfig;
_configure_model -> from_pretrained;
_configure_model -> getattr;
_configure_model -> from_config;
safe_import -> import_module;
safe_import -> format_exc;
safe_import -> debug;
safe_import -> UnavailableMeta;
safe_import -> rsplit;
te_accelerate -> warning;
te_accelerate -> _apply_basic_module_replacement;
te_accelerate -> apply_fp8_autocast;
_remove_extra_batch_keys -> signature;
_remove_extra_batch_keys -> list;
_remove_extra_batch_keys -> keys;
create_context_parallel_ctx -> context_parallel;
get_train_context -> ExitStack;
get_train_context -> enter_context;
get_train_context -> loss_parallel;
get_train_context -> maybe_enable_compiled_autograd;
get_train_context -> sdpa_kernel;
on_before_optimizer_step -> perf_counter;
on_before_optimizer_step -> isinstance;
on_before_optimizer_step -> getattr;
on_before_optimizer_step -> log;
on_before_optimizer_step -> optimizers;
on_before_optimizer_step -> sum;
on_before_optimizer_step -> len;
on_before_optimizer_step -> reduce_item;
on_before_optimizer_step -> get_group;
on_before_optimizer_step -> detach;
on_before_optimizer_step -> all_reduce;
on_before_optimizer_step -> item;
on_before_optimizer_step -> get_world_size;
on_before_optimizer_step -> get_backend;
on_before_optimizer_step -> tensor;
on_before_optimizer_step -> get;
optimizers -> NotImplementedError;
optimizers -> setup_megatron_optimizer;
optimizers -> isinstance;
optimizers -> ValueError;
optimizers -> get;
optimizers -> optimizer_fn;
optimizers -> _extract_model_params_for_optim;
optimizers -> scheduler;
optimizers -> Adam;
optimizers -> parameters;
reduce_item -> detach;
reduce_item -> all_reduce;
reduce_item -> item;
reduce_item -> get_world_size;
reduce_item -> get_backend;
reduce_item -> tensor;
pop_fqn_prefix -> split;
pop_fqn_prefix -> join;
load_pretrained -> state_dict;
load_pretrained -> BitsAndBytesConfig;
load_pretrained -> from_pretrained;
_has_lora_adapter -> any;
_has_lora_adapter -> map;
_has_lora_adapter -> named_modules;
_has_lora_adapter -> lower;
pool -> masked_fill;
pool -> bool;
pool -> sum;
pool -> ValueError;
pool -> arange;
pool -> argmax;
get_llama_bidirectional_hf_model -> from_pretrained;
get_llama_bidirectional_hf_model -> eval;
get_llama_bidirectional_hf_model -> Pooling;
get_llama_bidirectional_hf_model -> LlamaBidirectionalHFAdapter;
get_llama_bidirectional_hf_model -> hasattr;
_update_causal_mask -> _prepare_4d_attention_mask;
hyena_forward_step -> model;
__new__ -> __new__;
__new__ -> super;
__new__ -> _make_subclass;
__new__ -> _io_wrap_init;
__new__ -> object;
__new__ -> get;
get_source_model -> load;
get_source_model -> str;
get_source_model -> exists;
get_source_model -> info;
get_source_model -> split;
get_source_model -> hf_hub_download;
get_source_model -> warning;
get_source_model -> join;
get_source_model -> open;
get_source_model -> print;
get_source_model -> append;
get_source_model -> remove;
get_source_model -> read;
get_source_model -> write;
transform_source_dict -> list;
transform_source_dict -> adjust_medium_filter;
transform_source_dict -> keys;
transform_source_dict -> range;
transform_source_dict -> pop;
transform_source_dict -> search;
transform_source_dict -> int;
transform_source_dict -> group;
transform_source_dict -> sub;
transform_source_dict -> str;
adjust_medium_filter -> items;
adjust_medium_filter -> HyenaConfig;
split_moe -> chunk;
_modify_llama4_source_state -> state_dict;
_modify_llama4_source_state -> range;
_modify_llama4_source_state -> _ModelState;
_modify_llama4_source_state -> isinstance;
_modify_llama4_source_state -> pop;
_modify_llama4_source_state -> chunk;
_modify_llama4_source_state -> enumerate;
_modify_llama4_source_state -> len;
_modify_llama4_source_state -> transpose;
_modify_llama4_source_state -> squeeze;
_modify_llama4_source_state -> contiguous;
_modify_llama4_source_state -> permute;
is_llama4 -> load_context;
is_llama4 -> isinstance;
is_llama4 -> str;
create_llama4_config -> isinstance;
create_llama4_config -> getattr;
create_llama4_config -> HFLlama4TextConfig;
create_llama4_config -> ValueError;
create_llama4_config -> tokens_to_ids;
create_llama4_config -> sum;
ckpt_to_weights_subdir -> ckpt_to_dir;
ckpt_to_weights_subdir -> isinstance;
ckpt_to_weights_subdir -> hasattr;
ckpt_to_weights_subdir -> is_dir;
ckpt_to_weights_subdir -> Path;
peft_config -> LoraConfig;
peft_config -> extend;
peft_config -> isinstance;
chunkify_cu_seqlens -> range;
chunkify_cu_seqlens -> len;
chunkify_cu_seqlens -> append;
get_llama4_layer_spec -> get_gpt_decoder_block_spec;
get_llama4_layer_spec -> get_transformer_layer_offset;
get_llama4_layer_spec -> enumerate;
get_llama4_layer_spec -> deepcopy;
get_llama4_layer_spec -> append;
_local_layer_spec -> local_layer_spec;
_transformer_engine_layer_spec -> transformer_engine_layer_spec;
get_nv_embedding_layer_spec -> _transformer_engine_layer_spec;
get_nv_embedding_layer_spec -> _local_layer_spec;
nv_embedding_data_step -> next;
nv_embedding_data_step -> set;
nv_embedding_data_step -> add;
nv_embedding_data_step -> is_pipeline_first_stage;
nv_embedding_data_step -> get_batch_on_this_cp_rank;
nv_embedding_data_step -> isinstance;
nv_embedding_data_step -> len;
nv_embedding_data_step -> cuda;
nv_embedding_data_step -> items;
nv_embedding_forward_step -> encode;
_average_pool -> rearrange;
_average_pool -> masked_fill;
_average_pool -> sum;
_average_pool -> bool;
heterogeneous_layer_spec -> get_gpt_heterogeneous_layer_spec;
_import_lm_head -> state_transform;
_import_lm_head -> copy_;
ssm_forward_step -> model;
dist_ckpt_handler -> init_process_group;
dist_ckpt_handler -> load_plain_tensors;
dist_ckpt_handler -> list;
dist_ckpt_handler -> pop;
dist_ckpt_handler -> enumerate;
dist_ckpt_handler -> destroy_process_group;
dist_ckpt_handler -> keys;
dist_ckpt_handler -> cat;
_export_head -> state_transform;
allocate_layers -> _allocate_override;
allocate_layers -> log_single_rank;
allocate_layers -> count;
allocate_layers -> join;
_select_layers_for_pipeline_parallel -> get_pipeline_model_parallel_rank;
_select_layers_for_pipeline_parallel -> get_pipeline_model_parallel_world_size;
_select_layers_for_pipeline_parallel -> getattr;
_checkpointed_forward -> range;
_checkpointed_forward -> te_checkpoint;
_checkpointed_forward -> checkpoint;
_checkpointed_forward -> checkpoint_handler;
_checkpointed_forward -> ValueError;
_checkpointed_forward -> _get_layer;
_checkpointed_forward -> layer;
_checkpointed_forward -> isinstance;
_checkpointed_forward -> get_tensor_model_parallel_group;
_checkpointed_forward -> custom;
_checkpointed_forward -> len;
_checkpointed_forward -> int;
_checkpointed_forward -> contiguous;
_checkpointed_forward -> get_pipeline_model_parallel_world_size;
_checkpointed_forward -> get_pipeline_model_parallel_rank;
checkpoint -> apply;
checkpoint -> func;
checkpoint -> tuple;
checkpoint -> len;
checkpoint_handler -> te_checkpoint;
checkpoint_handler -> checkpoint;
checkpoint_handler -> get_tensor_model_parallel_group;
custom -> range;
custom -> _get_layer;
custom -> layer;
custom -> isinstance;
custom -> len;
custom -> contiguous;
custom_forward -> range;
custom_forward -> _get_layer;
custom_forward -> layer;
custom_forward -> isinstance;
custom_forward -> core_attention;
custom_forward -> len;
custom_forward -> ValueError;
custom_forward -> contiguous;
_allocate_override -> list;
_allocate_override -> len;
_allocate_override -> ValueError;
log_single_rank -> print;
_raise_te_import_error -> ImportError;
set_format_recipe -> DelayedScaling;
_maybe_use_fp8 -> func;
_maybe_use_fp8 -> fp8_autocast;
_maybe_use_fp8 -> set_format_recipe;
Format -> ImportError;
__getattribute__ -> ImportError;
get_init_method -> wang_init_method;
get_init_method -> small_init_init_method;
get_init_method -> NotImplementedError;
reweighted_cross_entropy -> zeros_like;
reweighted_cross_entropy -> bool;
reweighted_cross_entropy -> sum;
reweighted_cross_entropy -> maximum;
reweighted_cross_entropy -> ones_like;
_get_zigzag_indices -> arange;
_get_zigzag_indices -> empty;
_get_inverse_zigzag_indices -> arange;
_get_inverse_zigzag_indices -> empty;
_get_inverse_zigzag_indices -> argsort;
all_to_all_single_fn -> get_world_size;
all_to_all_single_fn -> contiguous;
all_to_all_single_fn -> empty_like;
all_to_all_single_fn -> all_to_all_single;
all_to_all_single_fn -> _get_inverse_zigzag_indices;
all_to_all_single_fn -> reshape;
all_to_all_single_fn -> ValueError;
all_to_all_single_fn -> rearrange;
all_to_all_single_fn -> _get_zigzag_indices;
all_to_all_single_fn -> index_select;
zigzag_get_overlapping_patches -> list;
zigzag_get_overlapping_patches -> reshape;
zigzag_get_overlapping_patches -> insert;
zigzag_get_overlapping_patches -> permute;
zigzag_get_overlapping_patches -> narrow;
zigzag_get_overlapping_patches -> range;
zigzag_get_overlapping_patches -> pop;
zigzag_get_overlapping_patches -> len;
hyena_no_weight_decay_cond -> endswith;
hyena_no_weight_decay_cond -> len;
fftconv_func -> pad;
fftconv_func -> rfft;
fftconv_func -> split;
fftconv_func -> gelu;
fftconv_func -> to;
fftconv_func -> len;
fftconv_func -> unsqueeze;
fftconv_func -> conj;
fftconv_func -> irfft;
fftconv_func -> rearrange;
fftconv_func -> apply;
small_init_init_method -> sqrt;
small_init_init_method -> normal_;
wang_init_method -> sqrt;
wang_init_method -> normal_;
ensure_divisibility -> format;
initialize_affine_weight_gpu -> fork;
initialize_affine_weight_gpu -> init_method;
initialize_affine_weight_gpu -> get_cuda_rng_tracker;
get_groups_and_group_sizes -> divide;
get_groups_and_group_sizes -> int;
get_t -> view;
get_t -> arange;
compute_filter -> exp;
compute_filter -> einsum;
compute_filter -> to;
init_ -> normal_;
init_ -> kaiming_uniform_;
init_ -> constant_;
init_ -> uniform_;
init_ -> sqrt;
causal_conv1d_fn -> ImportError;
_setup_trainer_and_restore_model -> isinstance;
_setup_trainer_and_restore_model -> set_modelopt_spec_if_exists_in_ckpt;
_setup_trainer_and_restore_model -> exists;
_setup_trainer_and_restore_model -> connect;
_setup_trainer_and_restore_model -> setup_environment;
_setup_trainer_and_restore_model -> setup_megatron_parallel;
_setup_trainer_and_restore_model -> selective_restore;
_setup_trainer_and_restore_model -> RestoreConfig;
_setup_trainer_and_restore_model -> info;
_setup_trainer_and_restore_model -> launch;
_setup_trainer_and_restore_model -> state_dict;
_setup_trainer_and_restore_model -> configure_model;
_setup_trainer_and_restore_model -> peft;
_setup_trainer_and_restore_model -> sharded_state_dict;
_setup_trainer_and_restore_model -> load_checkpoint;
_setup_trainer_and_restore_model -> load_model_state_dict;
_setup_trainer_and_restore_model -> open;
_setup_trainer_and_restore_model -> load;
_setup_trainer_and_restore_model -> ckpt_to_weights_subdir;
_setup_trainer_and_restore_model -> items;
_setup_trainer_and_restore_model -> to_fabric;
_setup_trainer_and_restore_model -> load_model;
setup_megatron_parallel -> hasattr;
setup_megatron_parallel -> MegatronParallel;
setup_megatron_parallel -> signature;
setup_megatron_parallel -> getattr;
setup_megatron_parallel -> init_model_parallel;
setup_megatron_parallel -> partial;
setup_megatron_parallel -> setup_optimizers;
setup_megatron_parallel -> add;
setup_megatron_parallel -> isinstance;
selective_restore -> info;
selective_restore -> load_checkpoint;
selective_restore -> empty_cache;
selective_restore -> barrier;
selective_restore -> load_model_state_dict;
selective_restore -> load_optimizer_state_dict;
peft -> LoRA;
load_model_state_dict -> load_state_dict;
load_model_state_dict -> all;
load_model_state_dict -> debug;
load_model_state_dict -> endswith;
load_model_state_dict -> hasattr;
load_model_state_dict -> isinstance;
load_model_state_dict -> keys;
load_model_state_dict -> replace;
load_model_state_dict -> state_dict_context;
load_model_state_dict -> load_model_state_dict;
load_model_state_dict -> info;
load_model_state_dict -> super;
load_model_state_dict -> enumerate;
load_model_state_dict -> parse_strict_flag;
load_model_state_dict -> items;
load_model_state_dict -> get_virtual_pipeline_model_parallel_world_size;
load_model_state_dict -> startswith;
load_model_state_dict -> warning;
load_model_state_dict -> len;
load_model_state_dict -> size;
load_model_state_dict -> any;
load_model_state_dict -> distribute_tensor;
load_model_state_dict -> match;
load_model_state_dict -> Shard;
load_model_state_dict -> Replicate;
load_model_state_dict -> reload_model_params;
setup_mcore_engine -> setup_model_and_tokenizer;
setup_mcore_engine -> TextGenerationController;
setup_mcore_engine -> MCoreEngine;
_set_gpt_modelopt_spec -> info;
_set_gpt_modelopt_spec -> isinstance;
_set_gpt_modelopt_spec -> partial;
_set_gpt_modelopt_spec -> get_gpt_layer_modelopt_spec;
get_gpt_layer_modelopt_spec -> _get_mlp_module_spec;
get_gpt_layer_modelopt_spec -> ModuleSpec;
get_gpt_layer_modelopt_spec -> TransformerLayerSubmodules;
get_gpt_layer_modelopt_spec -> SelfAttentionSubmodules;
_set_gpt_mamba_modelopt_spec -> info;
_set_gpt_mamba_modelopt_spec -> isinstance;
_set_gpt_mamba_modelopt_spec -> partial;
_set_gpt_mamba_modelopt_spec -> ValueError;
_set_gpt_mamba_modelopt_spec -> type;
get_tokenizer -> isinstance;
get_tokenizer -> info;
get_tokenizer -> AutoTokenizer;
get_tokenizer -> to_container;
get_tokenizer -> get_megatron_tokenizer;
get_tokenizer -> SentencePieceTokenizer;
get_tokenizer -> get_megatron_vocab_file;
get_tokenizer -> get_megatron_merges_file;
get_tokenizer -> TiktokenTokenizer;
get_tokenizer -> ImportError;
get_tokenizer -> str;
get_tokenizer -> WordTokenizer;
get_tokenizer -> CharTokenizer;
get_tokenizer -> load_tokenizer;
get_tokenizer -> RegExTokenizer;
get_tokenizer -> Path;
get_tokenizer -> exists;
get_tokenizer -> get_tokenizer_from_nemo2_context;
get_tokenizer -> from_pretrained;
get_tokenizer -> join;
get_tokenizer -> build_tokenizer;
get_tokenizer -> is_dir;
get_tokenizer -> get_nmt_tokenizer;
get_tokenizer -> TemporaryDirectory;
get_tokenizer -> _unpack_nemo_file;
get_tokenizer -> load;
get_tokenizer -> save_pretrained;
get_tokenizer -> get;
get_tokenizer -> copy;
get_tokenizer -> warning;
get_tokenizer -> split;
get_tokenizer -> hasattr;
get_tokenizer -> add_special_tokens;
_init_weights -> isinstance;
_init_weights -> init_method;
_init_weights -> zero_;
_masked_token_loss -> isinstance;
_masked_token_loss -> float;
_masked_token_loss -> sum;
_masked_token_loss -> get_tensor_model_parallel_rank;
_masked_token_loss -> cat;
_masked_token_loss -> all_reduce;
_masked_token_loss -> tensor_split;
_masked_token_loss -> view;
_masked_token_loss -> reshape;
_masked_token_loss -> get_context_parallel_group;
_masked_token_loss -> get_tensor_model_parallel_group;
core_module -> unwrap_model;
_adjust_layer_index_for_pp -> search;
_adjust_layer_index_for_pp -> _get_layer_offset;
_adjust_layer_index_for_pp -> replace;
_adjust_layer_index_for_pp -> int;
_adjust_layer_index_for_pp -> ValueError;
_adjust_layer_index_for_pp -> group;
_adjust_layer_index_for_pp -> str;
_adjust_layer_index_for_pp -> get_tensor_and_context_parallel_rank;
_adjust_layer_index_for_pp -> print;
teacher_provider -> info;
teacher_provider -> configure_model;
teacher_provider -> load_checkpoint;
teacher_provider -> load_state_dict;
teacher_provider -> empty_cache;
teacher_provider -> sharded_state_dict;
teacher_provider -> replace;
teacher_provider -> parse_strict_flag;
teacher_provider -> items;
teacher_provider -> isinstance;
get_tensor_shapes_adjust_fn_for_distillation -> isinstance;
get_tensor_shapes_adjust_fn_for_distillation -> hasattr;
get_tensor_shapes_adjust_fn_for_distillation -> get_pipeline_model_parallel_rank;
get_tensor_shapes_adjust_fn_for_distillation -> get_model_config;
get_tensor_shapes_adjust_fn_for_distillation -> get_model_type;
get_tensor_shapes_adjust_fn_for_distillation -> get_model_xattn;
get_tensor_shapes_adjust_fn_for_distillation -> get_tensor_shapes;
get_tensor_shapes_adjust_fn_for_distillation -> set_student_input_tensor_shape;
get_tensor_shapes_adjust_fn_for_distillation -> enumerate;
get_tensor_shapes_adjust_fn_for_distillation -> get_pipeline_model_parallel_world_size;
get_tensor_shapes_adjust_fn_for_distillation -> get_virtual_pipeline_model_parallel_world_size;
get_tensor_shapes_adjust_fn_for_distillation -> list;
get_tensor_shapes_adjust_fn_for_distillation -> tuple;
get_model_config -> DictConfig;
get_model_config -> len;
get_model_config -> ListConfig;
get_model_config -> create;
get_model_config -> get_registered_adapter;
get_model_config -> get_classpath;
get_model_type -> load_nemo_config;
get_model_type -> get;
get_model_type -> warning;
get_model_type -> info;
get_model_type -> error;
get_model_type -> dumps;
_set_input_tensor -> set_input_tensor;
_set_input_tensor -> type;
adjust_tensor_shapes -> get_pipeline_model_parallel_rank;
adjust_tensor_shapes -> get_model_config;
adjust_tensor_shapes -> get_model_type;
adjust_tensor_shapes -> get_model_xattn;
adjust_tensor_shapes -> get_tensor_shapes;
adjust_tensor_shapes -> set_student_input_tensor_shape;
adjust_tensor_shapes -> enumerate;
adjust_tensor_shapes -> list;
adjust_tensor_shapes -> tuple;
adjust_tensor_shapes -> keys;
adjust_tensor_shapes -> replace;
adjust_tensor_shapes -> split;
adjust_tensor_shapes -> cat;
adjust_tensor_shapes -> reshape;
adjust_tensor_shapes -> empty;
adjust_tensor_shapes -> range;
adjust_tensor_shapes -> transpose;
adjust_tensor_shapes -> permute;
adjust_tensor_shapes -> state_dict;
adjust_tensor_shapes -> chunk;
adjust_tensor_shapes -> squeeze;
io_dump -> Path;
io_dump -> mkdir;
io_dump -> _io_dump_yaml;
io_dump -> items;
io_dump -> open;
io_dump -> _artifact_transform_save;
io_dump -> dump_json;
io_dump -> write;
io_dump -> write_text;
io_dump -> any;
io_dump -> rmtree;
io_dump -> deepcopy;
io_dump -> iterdir;
from_trainer -> cls;
from_trainer -> hasattr;
from_trainer -> ValueError;
from_trainer -> construct_extra;
create_data_iterator_getter -> get_calib_data_iter;
create_data_iterator_getter -> iter;
create_data_iterator_getter -> append;
create_data_iterator_getter -> tqdm;
create_data_iterator_getter -> tensor;
create_data_iterator_getter -> text_to_ids;
create_data_iterator_getter -> len;
unwrap_for_modelopt_operations -> isinstance;
unwrap_for_modelopt_operations -> unwrap_model;
get_modelopt_decoder_type -> isinstance;
get_modelopt_decoder_type -> get_model_type;
_get_decoder_type -> isinstance;
_get_decoder_type -> get_modelopt_decoder_type;
_get_decoder_type -> ValueError;
_generate_sample -> isinstance;
_generate_sample -> info;
_generate_sample -> MCoreTokenizerWrappper;
_generate_sample -> get_inference_wrapper;
_generate_sample -> tokenizer;
_generate_sample -> generate;
_generate_sample -> decode;
_generate_sample -> append;
_generate_sample -> to;
_generate_sample -> zip;
_generate_sample -> items;
_generate_sample -> CommonInferenceParams;
_get_forward_loop -> create_data_iterator_getter;
_get_forward_loop -> isinstance;
_get_forward_loop -> create_megatron_forward_loop;
_get_forward_loop -> get_dataloader;
_get_forward_loop -> model;
_get_forward_loop -> to;
create_megatron_forward_loop -> get_forward_backward_func;
create_megatron_forward_loop -> next;
create_megatron_forward_loop -> expand;
create_megatron_forward_loop -> model;
create_megatron_forward_loop -> get_dataloader;
create_megatron_forward_loop -> forward_backward_func;
create_megatron_forward_loop -> arange;
create_megatron_forward_loop -> zeros;
_get_quant_cfg -> _get_decoder_type;
_get_quant_cfg -> isfile;
_get_quant_cfg -> load_quant_cfg;
_get_quant_cfg -> deepcopy;
_get_quant_cfg -> isinstance;
_get_quant_cfg -> warning;
_get_quant_cfg -> info;
_get_quant_cfg -> get;
_get_quant_cfg -> update;
_get_quant_cfg -> getattr;
load_quant_cfg -> standardize_json_config;
load_quant_cfg -> open;
load_quant_cfg -> load;
forward_backward_func -> get_forward_backward_func;
_validate_quantized_checkpoint -> exists;
_validate_quantized_checkpoint -> range;
_validate_quantized_checkpoint -> error;
_save_tokenizer -> isinstance;
_save_tokenizer -> save_pretrained;
_save_tokenizer -> is_global_rank_zero;
_save_tokenizer -> str;
_save_tokenizer -> hasattr;
_save_tokenizer -> copytree;
_save_tokenizer -> ckpt_to_context_subdir;
_save_tokenizer -> join;
_get_iterator -> get_calib_data_iter;
_get_iterator -> iter;
_get_iterator -> append;
_get_iterator -> tqdm;
_get_iterator -> tensor;
_get_iterator -> text_to_ids;
_get_iterator -> len;
forward_step_func -> next;
forward_step_func -> expand;
forward_step_func -> model;
forward_step_func -> arange;
forward_step_func -> zeros;
loop -> get_dataloader;
loop -> forward_backward_func;
huggingface_forward_loop -> get_dataloader;
huggingface_forward_loop -> model;
huggingface_forward_loop -> to;
_mock_loss_function -> zeros;
get_quant_cfg_choices -> getattr;
standardize_json_config -> items;
standardize_json_config -> isinstance;
standardize_json_config -> standardize_json_config;
standardize_json_config -> maybe_cast_to_type;
standardize_json_config -> tuple;
maybe_cast_to_type -> type_;
distillation_recipe -> factory;
distillation_recipe -> Partial;
distillation_recipe -> trainer;
distillation_recipe -> Config;
distillation_recipe -> default_log;
distillation_recipe -> distributed_fused_adam_with_cosine_annealing;
distillation_recipe -> default_resume;
distillation_recipe -> tensorboard_logger;
prune_recipe -> factory;
prune_recipe -> Partial;
prune_recipe -> Config;
gpt_lora -> LoRA;
export_lora -> export_ckpt;
export_lora -> Console;
export_lora -> print;
export_lora -> Path;
merge_lora -> Trainer;
merge_lora -> _load_base_model_and_lora;
merge_lora -> _setup_trainer_and_restore_model_and_adapter;
merge_lora -> LoRAMerge;
merge_lora -> lora_merge;
merge_lora -> _save_merged_weight;
merge_lora -> Console;
merge_lora -> print;
merge_lora -> Path;
merge_lora -> MegatronStrategy;
merge_lora -> items;
merge_lora -> bf16_mixed;
merge_lora -> sharded_state_dict;
_load_base_model_and_lora -> load_context;
_load_base_model_and_lora -> isinstance;
_load_base_model_and_lora -> ckpt_to_context_subdir;
_setup_trainer_and_restore_model_and_adapter -> exists;
_setup_trainer_and_restore_model_and_adapter -> connect;
_setup_trainer_and_restore_model_and_adapter -> setup_environment;
_setup_trainer_and_restore_model_and_adapter -> setup;
_setup_trainer_and_restore_model_and_adapter -> setup_megatron_parallel;
_setup_trainer_and_restore_model_and_adapter -> lora;
_setup_trainer_and_restore_model_and_adapter -> load_checkpoint;
_setup_trainer_and_restore_model_and_adapter -> load_model_state_dict;
_setup_trainer_and_restore_model_and_adapter -> RestoreConfig;
_setup_trainer_and_restore_model_and_adapter -> ValueError;
_setup_trainer_and_restore_model_and_adapter -> state_dict;
_setup_trainer_and_restore_model_and_adapter -> ckpt_to_weights_subdir;
_setup_trainer_and_restore_model_and_adapter -> open;
_setup_trainer_and_restore_model_and_adapter -> load;
_setup_trainer_and_restore_model_and_adapter -> megatron_cpu_init_context;
_setup_trainer_and_restore_model_and_adapter -> configure_model;
_setup_trainer_and_restore_model_and_adapter -> items;
_setup_trainer_and_restore_model_and_adapter -> sharded_state_dict;
_save_merged_weight -> ckpt_to_weights_subdir;
_save_merged_weight -> mkdir;
_save_merged_weight -> save;
_save_merged_weight -> hasattr;
_save_merged_weight -> io_dump;
_save_merged_weight -> info;
_save_merged_weight -> str;
_save_merged_weight -> save_pretrained;
_save_merged_weight -> AutoTokenizer;
_save_merged_weight -> ckpt_to_context_subdir;
_save_merged_weight -> Path;
_save_merged_weight -> from_trainer;
lora -> factory;
lora -> Config;
base_linear_forward -> to_wrap;
base_linear_forward -> isinstance;
base_linear_forward -> len;
get_adapter_attributes_from_linear -> any;
get_adapter_attributes_from_linear -> get_tensor_model_parallel_world_size;
get_adapter_attributes_from_linear -> isinstance;
get_adapter_attributes_from_linear -> hasattr;
get_adapter_attributes_from_linear -> Version;
get_adapter_attributes_from_linear -> version;
get_adapter_attributes_from_linear -> getattr;
get_adapter_attributes_from_linear -> NotImplementedError;
get_adapter_attributes_from_linear -> type;
is_expert_linear -> match;
init_weight_magnitude -> Parameter;
_get_weight_norm -> detach;
_get_weight_norm -> gather_from_tensor_model_parallel_region;
_get_weight_norm -> to;
_get_weight_norm -> norm;
patch_linear_module -> isinstance;
patch_linear_module -> hasattr;
patch_linear_module -> _init_adapter;
patch_linear_module -> type;
patch_linear_module -> NotImplementedError;
patch_linear_module -> getattr;
_init_adapter -> Linear;
_init_adapter -> fill_;
_init_adapter -> Dropout;
_init_adapter -> uniform_;
_init_adapter -> kaiming_uniform_;
_init_adapter -> sqrt;
wildcard_match -> compile;
wildcard_match -> match;
wildcard_match -> replace;
init_method_normal -> normal_;
init_method_kaiming_uniform -> kaiming_uniform_;
init_method_const -> constant_;
pad_seq_to_mult -> no_grad;
pad_seq_to_mult -> pad;
unpad_seq_to_mult -> no_grad;
all2all_hp2sp -> apply;
_get_init_fn -> init_method_normal;
_get_init_fn -> init_method_kaiming_uniform;
_get_init_fn -> sqrt;
_get_init_fn -> init_method_const;
_get_init_fn -> NotImplementedError;
pretrain_recipe_performance -> factory;
pretrain_recipe_performance -> pretrain_recipe;
pretrain_recipe_performance -> append;
pretrain_recipe_performance -> Config;
finetune_recipe -> factory;
finetune_recipe -> default_finetune_recipe;
finetune_recipe -> model;
finetune_recipe -> lower;
finetune_recipe -> Config;
finetune_recipe -> ValueError;
finetune_recipe -> finetune_performance_optimizations;
finetune_recipe -> Partial;
finetune_recipe -> trainer;
finetune_recipe -> default_log;
finetune_recipe -> pytorch_adam_with_cosine_annealing;
finetune_recipe -> default_resume;
finetune_recipe -> tensorboard_logger;
finetune_recipe -> pretrain_recipe_creater;
finetune_recipe -> distributed_fused_adam_with_cosine_annealing;
finetune_recipe -> tokenizer;
finetune_recipe -> performance_optimizations;
finetune_recipe -> default_finetune_trainer;
finetune_recipe -> nemo_resume;
finetune_recipe -> bf16_mixed;
finetune_recipe -> AutoTokenizer;
finetune_recipe -> Gemma3Config4B;
finetune_recipe -> Gemma3VLVisionConfig;
finetune_recipe -> Gemma3VLMultimodalProjectorConfig;
finetune_recipe -> Gemma3VLConfig;
finetune_recipe -> Gemma3VLModel;
finetune_recipe -> import_ckpt;
finetune_recipe -> MegatronStrategy;
finetune_recipe -> Trainer;
finetune_recipe -> OptimizerConfig;
finetune_recipe -> CosineAnnealingScheduler;
finetune_recipe -> MegatronOptimizerModule;
finetune_recipe -> Gemma3VLMockDataModule;
finetune_recipe -> ModelCheckpoint;
finetune_recipe -> TensorBoardLogger;
finetune_recipe -> NeMoLogger;
finetune_recipe -> AutoResume;
finetune_recipe -> finetune;
finetune_recipe -> DistributedDataParallelConfig;
finetune_recipe -> MegatronMixedPrecision;
finetune_recipe -> TimingCallback;
default_finetune_recipe -> Partial;
default_finetune_recipe -> Config;
default_finetune_recipe -> default_finetune_trainer;
default_finetune_recipe -> default_finetune_log;
default_finetune_recipe -> distributed_fused_adam_with_cosine_annealing;
default_finetune_recipe -> nemo_resume;
default_finetune_recipe -> PackedSequenceSpecs;
default_finetune_recipe -> tensorboard_logger;
bert_model -> Config;
bert_trainer -> Config;
bert_trainer -> fp16_mixed;
bert_trainer -> bf16_mixed;
fp16_mixed -> Config;
bert_embedding_model -> Config;
finetune_performance_optimizations -> Config;
finetune_performance_optimizations -> extend;
finetune_performance_optimizations -> hasattr;
finetune_performance_optimizations -> append;
finetune_performance_optimizations -> lower;
default_finetune_trainer -> Config;
default_finetune_trainer -> bf16_mixed;
default_finetune_log -> Config;
nemo_resume -> Config;
nemo_resume -> factory;
dora -> factory;
dora -> Config;
gemma2_model -> Config;
gemma2_trainer -> Config;
gemma2_trainer -> fp16_mixed;
gemma2_trainer -> bf16_mixed;
gemma3_trainer -> Config;
gemma3_trainer -> bf16_mixed;
pytorch_adam_with_cosine_annealing -> Config;
pytorch_adam_with_cosine_annealing -> Partial;
tokenizer_recipe -> Config;
model_recipe -> Config;
model_recipe -> tokenizer;
model_recipe -> NotImplementedError;
pretrain_recipe_creater -> model_recipe;
pretrain_recipe_creater -> Config;
pretrain_recipe_creater -> Partial;
pretrain_recipe_creater -> wandb_logger;
pretrain_recipe_creater -> append;
pretrain_recipe_creater -> trainer_recipe;
pretrain_recipe_creater -> default_log;
pretrain_recipe_creater -> distributed_fused_adam_with_cosine_annealing;
pretrain_recipe_creater -> tokenizer_recipe;
pretrain_recipe_creater -> blended_dataset_config_recipe;
pretrain_recipe_creater -> tensorboard_logger;
trainer_recipe -> Config;
trainer_recipe -> bf16_with_fp8_mixed;
trainer_recipe -> bf16_mixed;
bf16_with_fp8_mixed -> bf16_mixed;
blended_dataset_config_recipe -> Config;
wandb_logger -> Config;
nemotron_model -> Config;
nemotron_trainer -> Config;
nemotron_trainer -> fp16_mixed;
nemotron_trainer -> bf16_mixed;
nemotron_h_bf16_with_fp8_current_scaling_mixed -> bf16_mixed;
performance_optimizations -> append;
performance_optimizations -> Config;
qwen2_model -> Config;
qwen2_trainer -> Config;
qwen2_trainer -> fp16_mixed;
qwen2_trainer -> bf16_mixed;
qwen3_model -> Config;
qwen3_trainer -> Config;
qwen3_trainer -> fp16_mixed;
qwen3_trainer -> bf16_mixed;
starcoder2_model -> Config;
starcoder2_trainer -> Config;
starcoder2_trainer -> fp16_mixed;
starcoder2_trainer -> bf16_mixed;
starcoder_trainer -> Config;
starcoder_trainer -> fp16_mixed;
starcoder_trainer -> bf16_mixed;
straggler_det_callback -> factory;
straggler_det_callback -> Config;
get_global_step_from_global_checkpoint_path -> isinstance;
get_global_step_from_global_checkpoint_path -> index;
get_global_step_from_global_checkpoint_path -> split;
get_global_step_from_global_checkpoint_path -> normpath;
get_global_step_from_global_checkpoint_path -> len;
get_global_step_from_global_checkpoint_path -> int;
get_global_step_from_global_checkpoint_path -> basename;
get_global_step_from_global_checkpoint_path -> isdigit;
get_global_step_from_global_checkpoint_path -> ValueError;
get_global_step_from_global_checkpoint_path -> dirname;
te_adam_with_cosine_annealing -> Config;
te_adam_with_cosine_annealing -> Partial;
pytorch_sgd_with_cosine_annealing -> Config;
pytorch_sgd_with_cosine_annealing -> Partial;
pytorch_sgd_with_flat_lr -> Config;
pytorch_sgd_with_flat_lr -> Partial;
fp16_with_fp8_mixed -> fp16_mixed;
bf16_with_mxfp8_mixed -> bf16_mixed;
fp16_with_mxfp8_mixed -> fp16_mixed;
bf16_with_fp8_current_scaling_mixed -> bf16_mixed;
fp16_with_fp8_current_scaling_mixed -> fp16_mixed;
bf16_with_fp8_subchannel_scaling_mixed -> bf16_mixed;
fp16_with_fp8_subchannel_scaling_mixed -> fp16_mixed;
torchrun -> Config;
torchrun -> is_available;
torchrun -> device_count;
torchrun -> RuntimeError;
_process_src -> text_to_ids;
_process_src -> strip;
_process_src -> len;
_process_tgt -> len;
_process_tgt -> text_to_ids;
_process_tgt -> strip;
t5_dataset_config -> T5MaskedWordPieceDatasetConfig;
t5_data_step -> next;
t5_data_step -> unsqueeze;
t5_data_step -> keys;
t5_data_step -> set;
t5_data_step -> update;
t5_data_step -> is_pipeline_first_stage;
t5_data_step -> is_pipeline_last_stage;
t5_data_step -> isinstance;
t5_data_step -> len;
t5_data_step -> items;
t5_data_step -> cuda;
t5_forward_step -> model;
_import_encoder_qkv -> state_transform;
_import_encoder_qkv -> size;
_import_encoder_qkv -> view;
_import_encoder_qkv -> empty;
_import_encoder_qkv -> range;
_import_encoder_qkv -> reshape;
_import_encoder_qkv -> cat;
_import_decoder_qkv -> state_transform;
_import_decoder_qkv -> size;
_import_decoder_qkv -> view;
_import_decoder_qkv -> empty;
_import_decoder_qkv -> range;
_import_decoder_qkv -> reshape;
_import_decoder_qkv -> cat;
_import_decoder_kv -> state_transform;
_import_decoder_kv -> size;
_import_decoder_kv -> view;
_import_decoder_kv -> empty;
_import_decoder_kv -> range;
_import_decoder_kv -> reshape;
_import_decoder_kv -> cat;
_import_encoder_linear_fc1 -> state_transform;
_import_encoder_linear_fc1 -> cat;
_import_decoder_linear_fc1 -> state_transform;
_import_decoder_linear_fc1 -> cat;
_export_encoder_qkv -> state_transform;
_export_encoder_qkv -> reshape;
_export_encoder_qkv -> cat;
_export_encoder_qkv -> arange;
_export_encoder_qkv -> cpu;
_export_encoder_qkv -> range;
_export_decoder_qkv -> state_transform;
_export_decoder_qkv -> reshape;
_export_decoder_qkv -> cat;
_export_decoder_qkv -> arange;
_export_decoder_qkv -> cpu;
_export_decoder_qkv -> range;
_export_decoder_kv -> state_transform;
_export_decoder_kv -> reshape;
_export_decoder_kv -> arange;
_export_decoder_kv -> cpu;
_export_encoder_linear_fc1 -> state_transform;
_export_encoder_linear_fc1 -> chunk;
_export_decoder_linear_fc1 -> state_transform;
_export_decoder_linear_fc1 -> chunk;
round_up_to_divisible -> int;
round_up_to_divisible -> ValueError;
round_up_to_divisible -> ceil;
generic_base_config -> calculate_model_size;
generic_base_config -> ModelSizeParams;
generic_base_config -> init_params;
generate_grid_search_configs -> _calculate_tp_pp_mbs_grid;
generate_grid_search_configs -> print;
generate_grid_search_configs -> _set_activations_checkpoint_params;
generate_grid_search_configs -> modify_cfg;
generate_grid_search_configs -> len;
generate_grid_search_configs -> append;
_get_model_type -> items;
_get_model_type -> str;
_get_model_size -> search;
_get_model_size -> round;
_get_model_size -> str;
_get_model_size -> int;
_get_model_size -> group;
_get_model_size -> _calculate_model_size;
_get_message -> items;
_calculate_model_size -> NotImplementedError;
calculate_model_size -> print;
calculate_model_size -> _estimate_model_size;
calculate_model_size -> _estimate_training_time;
_estimate_model_size -> round;
_estimate_training_time -> round;
find_tb_logs -> walk;
find_tb_logs -> startswith;
find_tb_logs -> abspath;
find_tb_logs -> append;
find_tb_logs -> join;
get_config -> findall;
get_config -> get_config;
get_config -> config_cls;
find_error -> open;
find_error -> read;
calculate_tflops -> round;
_calculate_tp_pp_mbs_grid -> search_class;
_calculate_tp_pp_mbs_grid -> init_params;
_calculate_tp_pp_mbs_grid -> range;
_calculate_tp_pp_mbs_grid -> NotImplementedError;
_set_activations_checkpoint_params -> max;
_set_activations_checkpoint_params -> range;
_set_activations_checkpoint_params -> list;
modify_cfg -> print;
modify_cfg -> str;
init_params -> ValueError;
init_params -> range;
init_params -> Exception;
init_params -> _calculate_model_size;
init_params -> NotImplementedError;
init_params -> any;
init_params -> init_params;
init_params -> parameters;
init_params -> isinstance;
init_params -> is_float8tensor;
init_params -> filter;
init_params -> super;
get_preprocess_fns_params -> image_transform;
get_preprocess_fns_params -> partial;
tuple_to_dict -> dict;
tuple_to_dict -> permute;
tuple_to_dict -> tensor;
tuple_to_dict -> update;
transform_fn -> img_transform;
transform_fn -> text_transform;
transform_fn -> construct_image_augmentations;
transform_fn -> get;
transform_fn -> PickleTransform;
transform_fn -> pickle_transform;
transform_fn -> from_numpy;
build_train_valid_datasets -> get_preprocess_fns;
build_train_valid_datasets -> WebDatasetCommon;
build_train_valid_datasets -> get;
build_train_valid_datasets -> partial;
build_train_valid_datasets -> construct_image_augmentations;
build_train_valid_datasets -> split;
build_train_valid_datasets -> ControlNetSyntheticDataset;
build_train_valid_datasets -> dict;
build_train_valid_datasets -> permute;
build_train_valid_datasets -> img_transform;
build_train_valid_datasets -> text_transform;
build_train_valid_datasets -> int;
build_train_valid_datasets -> startswith;
build_train_valid_datasets -> info;
build_train_valid_datasets -> ImagenSyntheticDataset;
build_train_valid_datasets -> _build_functions_no_pickles;
build_train_valid_datasets -> _build_functions_with_pickles;
build_train_valid_datasets -> ImagePyramidNoCorruptions;
build_train_valid_datasets -> append;
build_train_valid_datasets -> obtain_image_pyramid;
build_train_valid_datasets -> update;
build_train_valid_datasets -> build_resolution_filter;
build_train_valid_datasets -> SDSyntheticDataset;
build_train_valid_datasets -> ImageFolder;
build_train_valid_datasets -> RandomSeedDataset;
build_train_valid_datasets -> ClassificationTransform;
build_train_valid_datasets -> InpaintingTransform;
build_train_valid_datasets -> len;
build_train_valid_datasets -> DinoTransform;
build_train_valid_datasets -> Exception;
build_train_valid_datasets -> format;
custom_collate -> len;
custom_collate -> default_collate;
build_imagenet_validation_dataloader_params -> get_preprocess_fns_params;
build_imagenet_validation_dataloader_params -> ImageFolder;
build_imagenet_validation_dataloader_params -> MegatronPretrainingSampler;
build_imagenet_validation_dataloader_params -> DataLoader;
build_imagenet_validation_dataloader_params -> ImagenetClassnameDataset;
build_imagenet_validation_dataloader_params -> len;
build_imagenet_validation_dataloader_params -> get_data_parallel_rank;
build_imagenet_validation_dataloader_params -> get_data_parallel_world_size;
_convert_to_rgb -> convert;
get_collate_fn -> tokenize;
get_collate_fn -> stack;
get_collate_fn -> cat;
collate_fn_with_tokenize -> tokenize;
collate_fn_with_tokenize -> stack;
collate_fn_with_tokenize -> cat;
pil_loader -> sub;
pil_loader -> lower;
pil_loader -> BytesIO;
pil_loader -> open;
pil_loader -> load;
pil_loader -> convert;
_get_webdataset_and_epoch -> join;
_get_webdataset_and_epoch -> info;
_get_webdataset_and_epoch -> WDSUrlsRandomSampler;
_get_webdataset_and_epoch -> WebDatasetS3;
_get_webdataset_and_epoch -> WebDataset;
_get_webdataset_and_epoch -> len;
_get_webdataset_and_epoch -> get_data_parallel_rank;
_get_webdataset_and_epoch -> get_data_parallel_world_size;
_get_webdataset_and_epoch -> get;
client -> TestClient;
gopen -> int;
gopen -> urlparse;
gopen -> get;
gopen -> handler;
gopen -> print;
gopen -> ConnectionError;
gopen -> open;
gopen -> format;
gopen -> join;
gopen -> ValueError;
gopen -> get_object;
gopen -> read;
gopen -> len;
gopen -> BytesIO;
url_opener -> isinstance;
url_opener -> gopen;
url_opener -> update;
url_opener -> handler;
tarfile_samples -> url_opener;
tarfile_samples -> tar_file_expander;
tarfile_samples -> group_by_keys;
construct_image_augmentations -> append;
construct_image_augmentations -> Compose;
construct_image_augmentations -> ToTensor;
construct_image_augmentations -> int;
construct_image_augmentations -> Normalize;
construct_image_augmentations -> Resize;
construct_image_augmentations -> split;
construct_image_augmentations -> CenterCrop;
construct_image_augmentations -> RandomCrop;
construct_image_augmentations -> ValueError;
construct_image_augmentations -> RandomHorizontalFlip;
build_train_valid_precached_datasets -> WebDatasetCommon;
build_train_valid_precached_datasets -> get;
build_train_valid_precached_datasets -> dict;
build_train_valid_precached_datasets -> tensor;
build_train_valid_precached_datasets -> split;
build_train_valid_precached_datasets -> SDSyntheticDataset;
build_train_valid_precached_datasets -> int;
cache_latents -> makedirs;
cache_latents -> tqdm;
cache_latents -> len;
cache_latents -> range;
cache_latents -> Tensor;
cache_latents -> unsqueeze;
cache_latents -> squeeze;
cache_latents -> save;
cache_latents -> listdir;
cache_latents -> get_image;
cache_latents -> encode;
get_image -> open;
get_image -> image_transforms;
get_image -> convert;
io_init -> values;
io_init -> Config;
io_init -> deepcopy;
io_init -> type;
io_init -> items;
io_init -> find_node_traverser;
io_init -> track_io;
io_init -> _io_init;
io_init -> add_io;
track_io -> isinstance;
track_io -> getmembers;
track_io -> _process_module;
track_io -> isclass;
track_io -> hasattr;
track_io -> _io_wrap_init;
track_io -> _io_register_serialization;
track_io -> startswith;
track_io -> _add_io_to_class;
track_io -> TypeError;
track_io -> _is_defined_in_module_or_submodules;
track_io -> setattr;
track_io -> type;
process_image -> isinstance;
process_image -> rearrange;
process_image -> preprocess;
process_image -> processor;
process_image -> int;
process_image -> max;
process_image -> min;
process_image -> expand2square;
process_image -> tuple;
process_image -> new;
process_image -> paste;
process_image -> resize;
process_image -> type;
process_image -> convert;
process_image -> BytesIO;
process_image -> save;
process_image -> decode;
process_image -> ValueError;
process_image -> open;
process_image -> b64encode;
process_image -> getvalue;
process_image -> expand2square_pt;
process_image -> join;
compute_loss_mask -> ones;
compute_loss_mask -> size;
apply_prompt_template -> debug;
apply_prompt_template -> apply_chat_template;
apply_prompt_template -> append;
apply_prompt_template -> isinstance;
apply_prompt_template -> min;
apply_prompt_template -> range;
apply_prompt_template -> replace;
apply_prompt_template -> len;
apply_prompt_template -> ValueError;
compute_labels -> getattr;
compute_labels -> ones_like;
compute_labels -> isinstance;
compute_labels -> process_answer_str;
compute_labels -> _find_pattern_indices;
compute_labels -> encode;
compute_labels -> decode;
compute_labels -> warning;
compute_labels -> clone;
compute_labels -> contiguous;
_find_pattern_indices -> len;
_find_pattern_indices -> range;
_find_pattern_indices -> all;
encode_batch -> size;
encode_batch -> arange;
encode_batch -> repeat;
encode_batch -> unsqueeze;
encode_batch -> asdict;
encode_batch -> all;
encode_batch -> encode_batch;
encode_batch -> reshape;
encode_batch -> super;
greedy_knapsack -> zip;
greedy_knapsack -> list;
greedy_knapsack -> len;
greedy_knapsack -> ValueError;
greedy_knapsack -> append;
greedy_knapsack -> sorted;
greedy_knapsack -> search_for_fit;
greedy_knapsack -> pop;
predict_seq_len -> item;
predict_seq_len -> len;
predict_seq_len -> sum;
convert_to_packed -> zip;
convert_to_packed -> unsqueeze;
convert_to_packed -> ones_like;
convert_to_packed -> IntTensor;
convert_to_packed -> PackedSeqParams;
convert_to_packed -> append;
convert_to_packed -> len;
convert_to_packed -> arange;
convert_to_packed -> cat;
convert_to_packed -> int;
convert_to_packed -> max;
convert_to_packed -> predict_seq_len;
convert_to_packed -> pad;
_build_functions_with_pickles -> construct_image_augmentations;
_build_functions_with_pickles -> PickleTransform;
_build_functions_with_pickles -> dict;
_build_functions_with_pickles -> update;
_build_functions_with_pickles -> get;
_build_functions_with_pickles -> img_transform;
_build_functions_with_pickles -> pickle_transform;
_build_functions_with_pickles -> text_transform;
_build_functions_no_pickles -> construct_image_augmentations;
_build_functions_no_pickles -> dict;
_build_functions_no_pickles -> get;
_build_functions_no_pickles -> img_transform;
_build_functions_no_pickles -> text_transform;
obtain_image_pyramid -> obtain_image_pyramid;
obtain_image_pyramid -> update;
obtain_image_pyramid -> dict;
obtain_image_pyramid -> resize;
build_resolution_filter -> info;
build_resolution_filter -> print;
_pad_and_resize -> tensor;
_pad_and_resize -> zeros;
_pad_and_resize -> zero_;
_pad_and_resize -> len;
_pad_and_resize -> LongTensor;
compute_projection_matrix -> unsqueeze;
compute_projection_matrix -> tensor;
compute_projection_matrix -> compute_projection_matrix;
compute_projection_matrix -> range;
compute_projection_matrix -> PinholeCamera;
compute_intrinsics -> array;
compute_intrinsics -> tan;
compute_intrinsics -> deg2rad;
compute_intrinsics -> compute_intrinsics;
compute_intrinsics -> range;
compute_intrinsics -> PinholeCamera;
circle_poses -> tensor;
circle_poses -> stack;
circle_poses -> compute_look_at_vectors;
circle_poses -> construct_poses;
circle_poses -> get_view_direction;
circle_poses -> sin;
circle_poses -> cos;
compute_look_at_vectors -> normalize;
compute_look_at_vectors -> repeat;
compute_look_at_vectors -> len;
compute_look_at_vectors -> cross;
compute_look_at_vectors -> unsqueeze;
compute_look_at_vectors -> randn_like;
compute_look_at_vectors -> to;
compute_look_at_vectors -> FloatTensor;
construct_poses -> repeat;
construct_poses -> stack;
construct_poses -> len;
construct_poses -> unsqueeze;
construct_poses -> eye;
get_view_direction -> zeros;
get_rays -> autocast;
get_rays -> meshgrid;
get_rays -> full_like;
get_rays -> stack;
get_rays -> expand_as;
get_rays -> view;
get_rays -> linspace;
get_rays -> expand;
get_rays -> min;
get_rays -> gather;
get_rays -> transpose;
get_rays -> randint;
get_rays -> non_uniform_sampling;
get_rays -> unsqueeze;
get_rays -> reshape;
get_rays -> arange;
get_rays -> t;
linear_normalization -> min;
linear_normalization -> max;
rand_poses -> radians;
rand_poses -> zeros_like;
rand_poses -> compute_look_at_vectors;
rand_poses -> construct_poses;
rand_poses -> random;
rand_poses -> sample_uniform_sphere;
rand_poses -> sample_orbit;
rand_poses -> get_view_direction;
rand_poses -> rad2deg;
rand_poses -> rand;
rand_poses -> randn_like;
rand_poses -> rand_like;
sample_uniform_sphere -> normalize;
sample_uniform_sphere -> acos;
sample_uniform_sphere -> atan2;
sample_uniform_sphere -> stack;
sample_uniform_sphere -> unsqueeze;
sample_uniform_sphere -> randn;
sample_uniform_sphere -> abs;
sample_orbit -> stack;
sample_orbit -> sin;
sample_orbit -> cos;
sample_orbit -> rand;
update_step -> progressive_view_update_step;
update_step -> no_grad;
update_step -> update_every_n_steps;
update_step -> forward_density;
update_step -> split;
update_step -> maximum;
update_step -> item;
update_step -> min;
update_step -> packbits;
update_step -> ones_like;
update_step -> arange;
update_step -> mean;
update_step -> meshgrid;
update_step -> cat;
update_step -> long;
update_step -> range;
update_step -> detach;
update_step -> reshape;
update_step -> morton3D;
update_step -> float;
update_step -> rand_like;
progressive_view_update_step -> linear_normalization;
generate_samples -> rand_poses;
generate_samples -> compute_intrinsics;
generate_samples -> compute_projection_matrix;
generate_samples -> get_rays;
generate_samples -> random;
generate_samples -> inverse;
generate_samples -> round;
generate_samples -> astype;
generate_samples -> uniform;
generate_samples -> append;
generate_samples -> floor;
non_uniform_sampling -> multinomial;
non_uniform_sampling -> clamp;
non_uniform_sampling -> to;
non_uniform_sampling -> long;
non_uniform_sampling -> rand;
get_prompt -> copy;
get_prompt -> strip;
get_prompt -> len;
get_prompt -> type;
get_prompt -> insert;
get_prompt -> enumerate;
get_prompt -> replace;
get_prompt -> lstrip;
get_prompt -> wrap_inst;
get_prompt -> wrap_sys;
get_prompt -> ValueError;
get_prompt -> wrap_user;
get_prompt -> wrap_assistant;
get_prompt -> process_chat_template;
get_prompt -> choice;
get_prompt -> rstrip;
get_prompt -> range;
get_prompt -> join;
get_prompt -> format;
get_prompt -> append;
append_message -> append;
get_images -> enumerate;
get_images -> type;
get_images -> int;
get_images -> resize;
get_images -> expand2square;
get_images -> max;
get_images -> min;
get_images -> append;
get_images -> BytesIO;
get_images -> save;
get_images -> decode;
get_images -> ValueError;
get_images -> b64encode;
get_images -> new;
get_images -> paste;
get_images -> getvalue;
get_images -> process_image;
expand2square -> new;
expand2square -> paste;
to_gradio_chatbot -> enumerate;
to_gradio_chatbot -> append;
to_gradio_chatbot -> type;
to_gradio_chatbot -> int;
to_gradio_chatbot -> resize;
to_gradio_chatbot -> BytesIO;
to_gradio_chatbot -> save;
to_gradio_chatbot -> decode;
to_gradio_chatbot -> replace;
to_gradio_chatbot -> max;
to_gradio_chatbot -> min;
to_gradio_chatbot -> b64encode;
to_gradio_chatbot -> getvalue;
to_gradio_chatbot -> len;
to_gradio_chatbot -> sub;
to_gradio_chatbot -> process_image;
to_gradio_chatbot -> strip;
get_tokens_ids -> token_to_id;
preprocess_multimodal -> get;
preprocess_multimodal -> ValueError;
preprocess_multimodal -> min;
preprocess_multimodal -> strip;
preprocess_multimodal -> replace;
preprocess_multimodal -> join;
preprocess_llama_3 -> copy;
preprocess_llama_3 -> enumerate;
preprocess_llama_3 -> get;
preprocess_llama_3 -> tokenize;
preprocess_llama_3 -> detach;
preprocess_llama_3 -> zip;
preprocess_llama_3 -> dict;
preprocess_llama_3 -> append;
preprocess_llama_3 -> split;
preprocess_llama_3 -> contiguous;
preprocess_llama_3 -> roll;
preprocess_llama_3 -> append_message;
preprocess_llama_3 -> get_prompt;
preprocess_llama_3 -> clone;
preprocess_llama_3 -> join;
preprocess_llama_3 -> len;
preprocess_llama_3 -> text_to_ids;
preprocess_llama_2 -> enumerate;
preprocess_llama_2 -> get;
preprocess_llama_2 -> tokenize;
preprocess_llama_2 -> get_tokens_ids;
preprocess_llama_2 -> detach;
preprocess_llama_2 -> zip;
preprocess_llama_2 -> dict;
preprocess_llama_2 -> copy;
preprocess_llama_2 -> append;
preprocess_llama_2 -> split;
preprocess_llama_2 -> contiguous;
preprocess_llama_2 -> roll;
preprocess_llama_2 -> append_message;
preprocess_llama_2 -> get_prompt;
preprocess_llama_2 -> clone;
preprocess_llama_2 -> len;
preprocess_llama_2 -> text_to_ids;
preprocess_yi_34b -> copy;
preprocess_yi_34b -> enumerate;
preprocess_yi_34b -> get;
preprocess_yi_34b -> tokenize;
preprocess_yi_34b -> detach;
preprocess_yi_34b -> zip;
preprocess_yi_34b -> dict;
preprocess_yi_34b -> get_prompt;
preprocess_yi_34b -> append;
preprocess_yi_34b -> split;
preprocess_yi_34b -> contiguous;
preprocess_yi_34b -> roll;
preprocess_yi_34b -> endswith;
preprocess_yi_34b -> clone;
preprocess_yi_34b -> len;
preprocess_yi_34b -> sum;
preprocess_yi_34b -> append_message;
preprocess_yi_34b -> join;
preprocess_yi_34b -> map;
preprocess_yi_34b -> text_to_ids;
preprocess_v1 -> copy;
preprocess_v1 -> enumerate;
preprocess_v1 -> get;
preprocess_v1 -> tokenize;
preprocess_v1 -> get_tokens_ids;
preprocess_v1 -> detach;
preprocess_v1 -> zip;
preprocess_v1 -> dict;
preprocess_v1 -> append;
preprocess_v1 -> split;
preprocess_v1 -> contiguous;
preprocess_v1 -> roll;
preprocess_v1 -> append_message;
preprocess_v1 -> get_prompt;
preprocess_v1 -> clone;
preprocess_v1 -> len;
preprocess_v1 -> text_to_ids;
preprocess_interleaved_prompt -> get;
preprocess_interleaved_prompt -> tokenize;
preprocess_interleaved_prompt -> get_tokens_ids;
preprocess_interleaved_prompt -> detach;
preprocess_interleaved_prompt -> dict;
preprocess_interleaved_prompt -> append;
preprocess_interleaved_prompt -> contiguous;
preprocess_interleaved_prompt -> roll;
preprocess_interleaved_prompt -> clone;
preprocess_nvgpt -> copy;
preprocess_nvgpt -> get;
preprocess_nvgpt -> tokenize;
preprocess_nvgpt -> detach;
preprocess_nvgpt -> compile;
preprocess_nvgpt -> zip;
preprocess_nvgpt -> dict;
preprocess_nvgpt -> enumerate;
preprocess_nvgpt -> get_prompt;
preprocess_nvgpt -> append;
preprocess_nvgpt -> split;
preprocess_nvgpt -> range;
preprocess_nvgpt -> contiguous;
preprocess_nvgpt -> roll;
preprocess_nvgpt -> clone;
preprocess_nvgpt -> join;
preprocess_nvgpt -> len;
preprocess_nvgpt -> search;
preprocess_nvgpt -> append_message;
preprocess_nvgpt -> rstrip;
preprocess_nvgpt -> group;
preprocess_nvgpt -> text_to_ids;
preprocess_nv_dpo -> copy;
preprocess_nv_dpo -> get;
preprocess_nv_dpo -> tokenize;
preprocess_nv_dpo -> detach;
preprocess_nv_dpo -> zip;
preprocess_nv_dpo -> dict;
preprocess_nv_dpo -> enumerate;
preprocess_nv_dpo -> get_prompt;
preprocess_nv_dpo -> append;
preprocess_nv_dpo -> split;
preprocess_nv_dpo -> range;
preprocess_nv_dpo -> contiguous;
preprocess_nv_dpo -> roll;
preprocess_nv_dpo -> endswith;
preprocess_nv_dpo -> clone;
preprocess_nv_dpo -> join;
preprocess_nv_dpo -> len;
preprocess_nv_dpo -> search;
preprocess_nv_dpo -> append_message;
preprocess_nv_dpo -> text_to_ids;
preprocess_nv_dpo -> escape;
preprocess_nv_dpo -> end;
preprocess_plain -> get;
preprocess_plain -> tokenize;
preprocess_plain -> detach;
preprocess_plain -> zip;
preprocess_plain -> dict;
preprocess_plain -> append;
preprocess_plain -> len;
preprocess_plain -> contiguous;
preprocess_plain -> roll;
preprocess_plain -> clone;
preprocess_plain -> text_to_ids;
preprocess_conversations -> preprocess_nvgpt;
preprocess_conversations -> preprocess_nv_dpo;
preprocess_conversations -> preprocess_v1;
preprocess_conversations -> preprocess_llama_2;
preprocess_conversations -> preprocess_llama_3;
preprocess_conversations -> preprocess_yi_34b;
preprocess_conversations -> preprocess_plain;
preprocess_conversations -> preprocess_interleaved_prompt;
preprocess_conversations -> ValueError;
open_image -> endswith;
open_image -> convert;
open_image -> open;
open_image -> get;
open_image -> extractfile;
open_image -> join;
open_video -> endswith;
open_video -> VideoReader;
open_video -> flatten_frames;
open_video -> open;
open_video -> get;
open_video -> join;
open_video -> extractfile;
flatten_frames -> asnumpy;
flatten_frames -> convert;
flatten_frames -> fromarray;
flatten_frames -> min;
flatten_frames -> linspace;
flatten_frames -> append;
flatten_frames -> len;
get_ltor_masks_and_position_ids -> size;
get_ltor_masks_and_position_ids -> ones;
get_ltor_masks_and_position_ids -> arange;
get_ltor_masks_and_position_ids -> repeat;
get_ltor_masks_and_position_ids -> view;
get_ltor_masks_and_position_ids -> clone;
get_ltor_masks_and_position_ids -> range;
get_ltor_masks_and_position_ids -> unsqueeze;
get_ltor_masks_and_position_ids -> tril;
encode_interleaved -> count;
encode_interleaved -> join;
encode_interleaved -> preprocess_conversations;
encode_interleaved -> get_masks_and_position_ids;
encode_interleaved -> ImageTaskSample;
encode_interleaved -> isinstance;
encode_interleaved -> remove_excess_image_tokens;
encode_interleaved -> len;
encode_interleaved -> process_images;
encode_interleaved -> pad_images;
encode_interleaved -> zeros;
encode_interleaved -> append;
encode_interleaved -> calculate_token_length;
encode_interleaved -> squeeze;
encode_interleaved -> ValueError;
encode_interleaved -> preprocess_multimodal;
encode_interleaved -> type;
encode_pretrain -> preprocess_conversations;
encode_pretrain -> get_masks_and_position_ids;
encode_pretrain -> ImageTaskSample;
encode_pretrain -> hasattr;
encode_pretrain -> process_images;
encode_pretrain -> calculate_token_length;
encode_pretrain -> get;
encode_pretrain -> squeeze;
encode_pretrain -> preprocess_multimodal;
encode_captioning -> process_images;
encode_captioning -> strip;
encode_captioning -> preprocess_conversations;
encode_captioning -> get_masks_and_position_ids;
encode_captioning -> ImageTaskSample;
encode_captioning -> len;
encode_captioning -> calculate_token_length;
encode_captioning -> preprocess_multimodal;
encode_captioning -> squeeze;
encode_similarity_interleaved -> zip;
encode_similarity_interleaved -> replace;
encode_similarity_interleaved -> endswith;
encode_similarity_interleaved -> count;
encode_similarity_interleaved -> preprocess_conversations;
encode_similarity_interleaved -> get_masks_and_position_ids;
encode_similarity_interleaved -> ImageTaskSample;
encode_similarity_interleaved -> append;
encode_similarity_interleaved -> len;
encode_similarity_interleaved -> join;
encode_similarity_interleaved -> process_images;
encode_similarity_interleaved -> pad_images;
encode_similarity_interleaved -> zeros;
encode_similarity_interleaved -> argsort;
encode_similarity_interleaved -> calculate_token_length;
encode_similarity_interleaved -> squeeze;
encode_similarity_interleaved -> preprocess_multimodal;
encode_sft -> preprocess_conversations;
encode_sft -> get_masks_and_position_ids;
encode_sft -> ImageTaskSample;
encode_sft -> hasattr;
encode_sft -> zeros;
encode_sft -> process_images;
encode_sft -> get;
encode_sft -> squeeze;
encode_sft -> preprocess_multimodal;
encode_sft -> tensor;
encode_sft -> calculate_token_length;
process_images -> stack;
process_images -> isinstance;
process_images -> process_image;
process_images -> append;
get_masks_and_position_ids -> get_ltor_masks_and_position_ids;
get_masks_and_position_ids -> get;
calculate_token_length -> len;
calculate_token_length -> ValueError;
pad_images -> len;
pad_images -> cat;
pad_images -> zeros;
pad_images -> size;
remove_excess_image_tokens -> enumerate;
remove_excess_image_tokens -> sort;
remove_excess_image_tokens -> len;
remove_excess_image_tokens -> index;
remove_excess_image_tokens -> list;
remove_excess_image_tokens -> append;
remove_excess_image_tokens -> range;
build_dataset -> image_transform;
build_dataset -> DirectoryBasedDataset;
build_dataset -> get_indexed_dataset_;
build_dataset -> info;
build_dataset -> hasattr;
build_dataset -> dict;
build_dataset -> get_dataset;
build_dataset -> len;
build_dataset -> _build_dataset;
build_dataset -> get_datasets_weights_and_num_samples;
build_dataset -> range;
build_dataset -> BlendableDataset;
build_dataset -> format;
build_dataset -> get_doc_idx;
build_dataset -> set_doc_idx;
build_dataset -> append;
build_dataset -> int;
build_dataset -> getattr;
build_dataset -> get;
build_dataset -> GPTDataset;
build_dataset -> arange;
build_dataset -> RETRODataset;
build_dataset -> MockRETRODataset;
_get_files -> Path;
_get_files -> glob;
_transform -> copy;
_transform -> clamp;
_transform -> chunk;
_transform -> get;
_transform -> randn_like;
_transform -> sum;
_transform -> exp;
_transform -> hiddens_to_mean_logvar;
_transform -> log;
_transform -> pow;
build_train_valid_precached_clip_datasets -> get;
build_train_valid_precached_clip_datasets -> from_numpy;
build_train_valid_precached_clip_datasets -> split;
build_train_valid_precached_clip_datasets -> SDSyntheticDataset;
build_train_valid_precached_clip_datasets -> WebDatasetCommon;
build_train_valid_precached_clip_datasets -> dict;
build_train_valid_precached_clip_datasets -> int;
build_sdxl_train_valid_datasets -> get;
build_sdxl_train_valid_datasets -> WebDatasetCommon;
build_sdxl_train_valid_datasets -> print;
build_sdxl_train_valid_datasets -> construct_image_augmentations;
build_sdxl_train_valid_datasets -> build_resolution_filter;
build_sdxl_train_valid_datasets -> dict;
build_sdxl_train_valid_datasets -> permute;
build_sdxl_train_valid_datasets -> tensor;
build_sdxl_train_valid_datasets -> min;
build_sdxl_train_valid_datasets -> randint;
build_sdxl_train_valid_datasets -> img_transform;
build_sdxl_train_valid_datasets -> text_transform;
build_sdxl_train_valid_datasets -> all;
build_sdxl_train_valid_datasets -> crop;
build_sdxl_precached_text_train_valid_datasets -> get;
build_sdxl_precached_text_train_valid_datasets -> WebDatasetCommon;
build_sdxl_precached_text_train_valid_datasets -> print;
build_sdxl_precached_text_train_valid_datasets -> construct_image_augmentations;
build_sdxl_precached_text_train_valid_datasets -> build_resolution_filter;
build_sdxl_precached_text_train_valid_datasets -> dict;
build_sdxl_precached_text_train_valid_datasets -> permute;
build_sdxl_precached_text_train_valid_datasets -> update;
build_sdxl_precached_text_train_valid_datasets -> tensor;
build_sdxl_precached_text_train_valid_datasets -> min;
build_sdxl_precached_text_train_valid_datasets -> randint;
build_sdxl_precached_text_train_valid_datasets -> img_transform;
build_sdxl_precached_text_train_valid_datasets -> all;
build_sdxl_precached_text_train_valid_datasets -> crop;
AddOriginalImageSizeAsTupleAndCropToSquare -> dict;
AddOriginalImageSizeAsTupleAndCropToSquare -> tensor;
AddOriginalImageSizeAsTupleAndCropToSquare -> min;
AddOriginalImageSizeAsTupleAndCropToSquare -> randint;
AddOriginalImageSizeAsTupleAndCropToSquare -> permute;
AddOriginalImageSizeAsTupleAndCropToSquare -> all;
AddOriginalImageSizeAsTupleAndCropToSquare -> crop;
AddOriginalImageSizeAsTupleAndCropToSquare -> update;
construct_clip_augmentations -> Compose;
construct_clip_augmentations -> convert;
construct_clip_augmentations -> Resize;
construct_clip_augmentations -> CenterCrop;
construct_clip_augmentations -> ToTensor;
construct_clip_augmentations -> Normalize;
_convert_image_to_rgb -> convert;
gather_features -> get_data_parallel_world_size;
gather_features -> get_data_parallel_rank;
gather_features -> get_data_parallel_group;
gather_features -> cat;
gather_features -> all_gather;
gather_features -> zeros_like;
gather_features -> range;
neighbour_exchange -> zeros_like;
neighbour_exchange -> P2POp;
neighbour_exchange -> batch_isend_irecv;
neighbour_exchange -> wait;
neighbour_exchange_bidir -> zeros_like;
neighbour_exchange_bidir -> P2POp;
neighbour_exchange_bidir -> batch_isend_irecv;
neighbour_exchange_bidir -> wait;
neighbour_exchange_with_grad -> apply;
neighbour_exchange_bidir_with_grad -> apply;
get_ground_truth -> ones;
get_ground_truth -> eye;
skip_fp8_load -> isinstance;
skip_fp8_load -> LocalNonpersistentObject;
init_vision -> set_accepted_adapter_types;
init_vision -> isinstance;
replace_media_embeddings -> encode_vision_x;
replace_media_embeddings -> size;
replace_media_embeddings -> view;
replace_media_embeddings -> ones;
replace_media_embeddings -> enumerate;
replace_media_embeddings -> reshape;
replace_media_embeddings -> repeat;
replace_media_embeddings -> cat;
replace_media_embeddings -> type;
replace_media_embeddings -> scatter_;
replace_media_embeddings -> unsqueeze;
replace_media_embeddings -> where;
replace_media_embeddings -> all;
replace_media_embeddings -> zeros;
replace_media_embeddings -> arange;
replace_media_embeddings -> len;
replace_media_embeddings -> squeeze;
replace_media_embeddings -> add_lita_layer;
replace_media_embeddings -> clone;
replace_media_embeddings -> NotImplementedError;
replace_media_embeddings -> range;
replace_media_embeddings -> ValueError;
_apply_reduce_scatter -> contiguous;
_apply_reduce_scatter -> scatter_to_sequence_parallel_region;
_apply_reduce_scatter -> transpose;
encode_vision_x -> rearrange;
encode_vision_x -> to;
encode_vision_x -> is_adapter_available;
encode_vision_x -> get_adapter_module;
encode_vision_x -> vision_connector;
encode_vision_x -> no_grad;
encode_vision_x -> vision_encoder;
encode_vision_x -> ValueError;
get_adapter_module -> resolve_adapter_module_name_;
get_adapter_module -> hasattr;
add_lita_layer -> int;
add_lita_layer -> astype;
add_lita_layer -> rearrange;
add_lita_layer -> avg_pool2d;
add_lita_layer -> reduce;
add_lita_layer -> sqrt;
add_lita_layer -> round;
add_lita_layer -> ValueError;
add_lita_layer -> linspace;
create_vision_encoder_and_processor -> get;
create_vision_encoder_and_processor -> create_image_processor;
create_vision_encoder_and_processor -> from_pretrained;
create_vision_encoder_and_processor -> FrozenCLIPVisionTransformer;
create_vision_encoder_and_processor -> load_vision_encoder_weights;
create_vision_encoder_and_processor -> cuda;
create_vision_encoder_and_processor -> to;
create_vision_encoder_and_processor -> restore_from;
create_vision_encoder_and_processor -> freeze;
create_vision_encoder_and_processor -> parameters;
create_vision_encoder_and_processor -> eval;
create_vision_encoder_and_processor -> ValueError;
load_llm_weights -> _load_model_weights;
load_llm_weights -> print;
load_llm_weights -> items;
load_llm_weights -> load_state_dict;
load_llm_weights -> startswith;
load_llm_weights -> pad_word_embeddings;
load_llm_weights -> replace;
load_llm_weights -> split;
freeze_llm -> is_pipeline_first_stage;
freeze_llm -> is_pipeline_last_stage;
freeze_llm -> chain;
freeze_llm -> parameters;
freeze_llm -> freeze_module;
freeze_llm -> hasattr;
load_vision_encoder_weights -> _load_model_weights;
load_vision_encoder_weights -> items;
load_vision_encoder_weights -> load_state_dict;
load_vision_encoder_weights -> print;
load_vision_encoder_weights -> startswith;
load_vision_encoder_weights -> len;
load_vision_encoder_weights -> replace;
_load_model_weights -> dict_list_map_inplace;
_load_model_weights -> load_nemo_model_weights;
_load_model_weights -> getattr;
_load_model_weights -> sharded_state_dict;
load_nemo_model_weights -> is_available;
load_nemo_model_weights -> NLPSaveRestoreConnector;
load_nemo_model_weights -> getcwd;
load_nemo_model_weights -> AppState;
load_nemo_model_weights -> device;
load_nemo_model_weights -> TemporaryDirectory;
load_nemo_model_weights -> isfile;
load_nemo_model_weights -> chdir;
load_nemo_model_weights -> _load_state_dict_from_disk;
load_nemo_model_weights -> _unpack_nemo_file;
load_nemo_model_weights -> _inject_model_parallel_rank_for_ckpt;
load_nemo_model_weights -> join;
load_nemo_model_weights -> dict;
load_nemo_model_weights -> isdir;
load_nemo_model_weights -> load;
load_nemo_model_weights -> splitext;
pad_word_embeddings -> pad;
init_neva_adapter -> _get_all_keys;
init_neva_adapter -> MultimodalProjectorAdapterConfig;
init_neva_adapter -> named_modules;
init_neva_adapter -> _check_and_add_adapter;
init_neva_adapter -> set;
init_neva_adapter -> get;
init_neva_adapter -> replace;
_get_all_keys -> set;
_get_all_keys -> named_parameters;
_get_all_keys -> replace;
_get_all_keys -> _unwrap_model_list;
_get_all_keys -> named_buffers;
_get_all_keys -> keys;
_get_all_keys -> state_dict;
_check_and_add_adapter -> isinstance;
_check_and_add_adapter -> import_class_by_path;
_check_and_add_adapter -> get_accepted_adapter_types;
_check_and_add_adapter -> add_adapter;
_check_and_add_adapter -> swap_mcore_mixin;
_check_and_add_adapter -> to;
setup_optimizer_param_groups -> setup_optimizer_param_groups;
setup_optimizer_param_groups -> get;
setup_optimizer_param_groups -> len;
setup_optimizer_param_groups -> super;
setup_optimizer_param_groups -> named_parameters;
setup_optimizer_param_groups -> append;
setup_optimizer_param_groups -> replace;
setup_optimizer_param_groups -> isinstance;
setup_optimizer_param_groups -> get_params_for_weight_decay_optimization;
setup_optimizer_param_groups -> get_all_params_for_weight_decay_optimization;
setup_optimizer_param_groups -> unfreeze;
setup_optimizer_param_groups -> parameters;
setup_optimizer_param_groups -> named_modules;
setup_optimizer_param_groups -> info;
setup_optimizer_param_groups -> freeze;
setup_optimizer_param_groups -> items;
setup_optimizer_param_groups -> is_adapter_available;
setup_optimizer_param_groups -> set_enabled_adapters;
setup_optimizer_param_groups -> unfreeze_enabled_adapters;
setup_optimizer_param_groups -> getattr;
setup_optimizer_param_groups -> startswith;
setup_optimizer_param_groups -> ValueError;
setup_optimizer_param_groups -> hasattr;
setup_optimizer_param_groups -> summarize;
setup_optimizer_param_groups -> extend;
setup_optimizer_param_groups -> first_stage_of_pipeline;
setup_optimizer_param_groups -> _unwrap_model_list;
setup_optimizer_param_groups -> list;
get_iterator_k_split -> isinstance;
get_iterator_k_split -> chain;
get_iterator_k_split -> list;
get_iterator_k_split -> len;
get_iterator_k_split -> warning;
get_iterator_k_split -> items;
get_iterator_k_split -> tensor_split;
get_iterator_k_split -> dict;
get_iterator_k_split -> is_tensor;
get_iterator_k_split -> ValueError;
get_iterator_k_split -> split_list;
get_iterator_k_split -> append;
get_iterator_k_split -> range;
get_iterator_k_split -> tuple;
get_iterator_k_split -> type;
_make_data_iterator_list -> CachingIterator;
_make_data_iterator_list -> len;
_make_data_iterator_list -> append;
_make_data_iterator_list -> isinstance;
_make_data_iterator_list -> next;
_make_data_iterator_list -> make_proxy;
_make_data_iterator_list -> Queue;
_make_data_iterator_list -> get_nowait;
_make_data_iterator_list -> Proxy;
_make_data_iterator_list -> put;
get_forward_output_only_func -> next;
get_forward_output_only_func -> isinstance;
get_forward_output_only_func -> cuda;
get_forward_output_only_func -> model;
get_forward_output_only_func -> item;
get_forward_output_only_func -> is_pipeline_last_stage;
get_forward_output_only_func -> InferenceParams;
get_forward_output_only_func -> size;
get_forward_output_only_func -> type;
get_forward_output_only_func -> hasattr;
get_forward_output_only_func -> len;
get_forward_output_only_func -> append;
get_last_rank -> get_world_size;
get_last_rank -> is_initialized;
test_epoch_end -> average_losses_across_data_parallel_group;
test_epoch_end -> info;
_get_total_params_across_model_parallel_groups_gpt_bert -> get_model_module_list;
_get_total_params_across_model_parallel_groups_gpt_bert -> isinstance;
_get_total_params_across_model_parallel_groups_gpt_bert -> cuda;
_get_total_params_across_model_parallel_groups_gpt_bert -> all_reduce;
_get_total_params_across_model_parallel_groups_gpt_bert -> get;
_get_total_params_across_model_parallel_groups_gpt_bert -> sum;
_get_total_params_across_model_parallel_groups_gpt_bert -> is_pipeline_last_stage;
_get_total_params_across_model_parallel_groups_gpt_bert -> tensor;
_get_total_params_across_model_parallel_groups_gpt_bert -> get_model_parallel_group;
_get_total_params_across_model_parallel_groups_gpt_bert -> get_pipeline_model_parallel_world_size;
_get_total_params_across_model_parallel_groups_gpt_bert -> shared_embedding_or_output_weight;
_get_total_params_across_model_parallel_groups_gpt_bert -> word_embeddings_weight;
_get_total_params_across_model_parallel_groups_gpt_bert -> nelement;
_get_total_params_across_model_parallel_groups_gpt_bert -> parameters;
_extract_consumed_samples_from_ckpt -> int;
_extract_consumed_samples_from_ckpt -> float;
_extract_consumed_samples_from_ckpt -> warning;
_extract_consumed_samples_from_ckpt -> findall;
setup_transformer_engine_tp_groups -> get_model_module_list;
setup_transformer_engine_tp_groups -> enumerate;
setup_transformer_engine_tp_groups -> modules;
setup_transformer_engine_tp_groups -> hasattr;
setup_transformer_engine_tp_groups -> get_tensor_model_parallel_group;
setup_transformer_engine_tp_groups -> set_tensor_parallel_group;
setup_transformer_engine_tp_groups -> get_bert_module_list;
setup_transformer_engine_tp_groups -> get_t5_module_list;
build_train_valid_test_datasets_energon -> get_data_parallel_rank;
build_train_valid_test_datasets_energon -> get_data_parallel_world_size;
build_train_valid_test_datasets_energon -> get_data_parallel_group;
build_train_valid_test_datasets_energon -> info;
build_train_valid_test_datasets_energon -> WorkerConfig;
build_train_valid_test_datasets_energon -> datasets_provider;
build_train_valid_test_datasets_energon -> get_savable_loader;
build_train_valid_test_datasets_energon -> exists;
build_train_valid_test_datasets_energon -> load;
build_train_valid_test_datasets_energon -> restore_state_rank;
build_train_valid_test_datasets_energon -> get_loader;
build_train_valid_test_datasets_energon -> get_pipeline_model_parallel_rank;
build_train_valid_test_datasets_energon -> get_tensor_model_parallel_rank;
build_train_valid_test_datasets_energon -> get_context_parallel_rank;
build_train_valid_test_datasets_energon -> ShardedObject;
build_train_valid_test_datasets -> info;
build_train_valid_test_datasets -> isinstance;
build_train_valid_test_datasets -> get;
build_train_valid_test_datasets -> NevaPackedSeqDatatset;
build_train_valid_test_datasets -> make_supervised_data_module;
build_train_valid_test_datasets -> len;
build_train_valid_test_datasets -> build_train_valid_test_datasets_blend;
build_train_valid_test_datasets -> TypeError;
build_train_valid_test_datasets -> warning;
build_train_valid_test_datasets -> sum;
build_train_valid_test_datasets -> ValueError;
build_train_valid_test_datasets -> hasattr;
build_train_valid_test_datasets -> endswith;
build_train_valid_test_datasets -> build_train_valid_precached_datasets;
build_train_valid_test_datasets -> build_train_valid_datasets;
build_train_valid_test_datasets -> compute_consumed_samples;
build_train_valid_test_datasets -> EditDataset;
build_train_valid_test_datasets -> build_dataset_cls;
build_train_valid_test_datasets -> build_train_valid_precached_clip_datasets;
build_train_valid_test_datasets -> _build_dataset;
build_train_valid_test_datasets -> maybe_build_test;
build_train_valid_test_datasets -> build_dataset;
build_train_valid_test_datasets -> get_datasets_weights_and_num_samples;
build_train_valid_test_datasets -> map;
build_train_valid_test_datasets -> range;
build_train_valid_test_datasets -> MockT5Dataset;
build_train_valid_test_datasets -> NotImplementedError;
build_train_valid_test_datasets -> int;
build_train_valid_test_datasets -> _build_train_valid_test_datasets;
build_train_valid_test_datasets -> zip;
build_train_valid_test_datasets -> BlendableDataset;
build_train_valid_test_datasets -> to_object;
build_train_valid_test_datasets -> copy;
build_train_valid_test_datasets -> keys;
build_train_valid_test_datasets -> append;
build_train_valid_test_datasets -> MockGPTDataset;
build_train_valid_test_datasets -> gpt_train_valid_test_datasets_provider;
build_train_valid_test_datasets -> get_retro_datasets;
build_train_valid_test_datasets -> warn;
build_train_valid_test_datasets -> RETRODataset;
build_train_valid_test_datasets -> BertEmbeddingDataset;
build_train_valid_test_datasets -> build_train_valid_test_datasets;
build_train_valid_test_datasets -> _reconfigure_limit_batches;
build_train_valid_test_datasets -> add_special_tokens;
build_train_valid_test_datasets -> build;
build_train_valid_test_datasets -> GPTFIMDatasetConfig;
build_train_valid_test_datasets -> GPTDatasetConfig;
build_train_valid_test_datasets -> get_blend_from_list;
build_train_valid_test_datasets -> BlendedMegatronDatasetBuilder;
build_train_valid_test_datasets -> build_mock_train_valid_test_datasets;
build_train_valid_test_datasets -> build_all_datasets;
build_train_valid_test_datasets -> lower;
build_train_valid_test_datasets -> _build_train_dataset;
build_train_valid_test_datasets -> _build_eval_dataset;
build_train_valid_test_datasets -> build_memmap_dataset_from_config;
sync_initial_word_embeddings -> is_initialized;
sync_initial_word_embeddings -> warning;
sync_initial_word_embeddings -> is_rank_in_embedding_group;
sync_initial_word_embeddings -> all_reduce;
sync_initial_word_embeddings -> word_embeddings_weight;
sync_initial_word_embeddings -> get_embedding_group;
build_train_valid_test_datasets_blend -> info;
build_train_valid_test_datasets_blend -> get;
build_train_valid_test_datasets_blend -> get_datasets_weights_and_num_samples;
build_train_valid_test_datasets_blend -> sum;
build_train_valid_test_datasets_blend -> BlendableDataset;
build_train_valid_test_datasets_blend -> ValueError;
build_train_valid_test_datasets_blend -> len;
build_train_valid_test_datasets_blend -> append;
build_train_valid_test_datasets_blend -> isinstance;
build_train_valid_test_datasets_blend -> NevaPackedSeqDatatset;
build_train_valid_test_datasets_blend -> make_supervised_data_module;
build_train_valid_test_datasets_blend -> zip;
build_train_valid_test_datasets_blend -> hasattr;
get_datasets_weights_and_num_samples -> range;
get_datasets_weights_and_num_samples -> len;
get_datasets_weights_and_num_samples -> float;
get_datasets_weights_and_num_samples -> strip;
get_datasets_weights_and_num_samples -> isinstance;
get_datasets_weights_and_num_samples -> append;
get_datasets_weights_and_num_samples -> int;
get_datasets_weights_and_num_samples -> ceil;
build_pretraining_data_loader -> info;
build_pretraining_data_loader -> DataCollatorForSupervisedDataset;
build_pretraining_data_loader -> DataLoader;
build_pretraining_data_loader -> get_pipeline_model_parallel_world_size;
build_pretraining_data_loader -> hasattr;
build_pretraining_data_loader -> ValueError;
build_pretraining_data_loader -> get_data_parallel_world_size;
build_pretraining_data_loader -> MegatronPretrainingSampler;
build_pretraining_data_loader -> MegatronVisionPretrainingRandomSampler;
build_pretraining_data_loader -> len;
build_pretraining_data_loader -> get_data_parallel_rank;
build_pretraining_data_loader -> get;
build_pretraining_data_loader -> MegatronPretrainingRandomSampler;
build_pretraining_data_loader -> Exception;
build_pretraining_data_loader -> data_sampler;
build_pretraining_data_loader -> isinstance;
build_pretraining_data_loader -> partial;
build_pretraining_data_loader -> MegatronPretrainingBatchSampler;
get_keys_to_keep -> list;
critical -> isEnabledFor;
critical -> _log;
critical -> _logged_once;
on_save_checkpoint -> save_state_rank;
on_save_checkpoint -> ShardedObject;
on_save_checkpoint -> get;
on_save_checkpoint -> should_save_dataloader_state;
on_save_checkpoint -> save_dataloader_state;
on_save_checkpoint -> sharded_state_dict;
on_save_checkpoint -> isinstance;
on_save_checkpoint -> hasattr;
on_save_checkpoint -> is_pipeline_first_stage;
on_save_checkpoint -> range;
on_save_checkpoint -> get_tensor_model_parallel_rank;
on_save_checkpoint -> len;
on_save_checkpoint -> state_dict_for_save_checkpoint;
on_save_checkpoint -> get_data_parallel_world_size;
on_save_checkpoint -> get_data_parallel_rank;
on_save_checkpoint -> keys;
on_save_checkpoint -> startswith;
on_save_checkpoint -> list;
on_save_checkpoint -> on_save_checkpoint;
on_save_checkpoint -> AppState;
on_save_checkpoint -> _format_nemo_checkpoint_name;
on_save_checkpoint -> warning;
on_save_checkpoint -> inject_model_parallel_rank;
on_save_checkpoint -> deepcopy;
on_save_checkpoint -> load;
on_save_checkpoint -> load_state_dict;
on_save_checkpoint -> is_initialized;
on_save_checkpoint -> _backup_existing_nemo_ckpt;
on_save_checkpoint -> save_to;
on_save_checkpoint -> info;
on_save_checkpoint -> is_global_rank_zero;
on_save_checkpoint -> rm;
on_save_checkpoint -> super;
on_save_checkpoint -> exists;
on_save_checkpoint -> debug;
on_save_checkpoint -> state_dict;
on_save_checkpoint -> barrier;
on_save_checkpoint -> get_filesystem;
should_save_dataloader_state -> hasattr;
should_save_dataloader_state -> is_pipeline_first_stage;
should_save_dataloader_state -> get_tensor_model_parallel_rank;
save_dataloader_state -> save_state_rank;
save_dataloader_state -> ShardedObject;
save_dataloader_state -> get_data_parallel_world_size;
save_dataloader_state -> get_data_parallel_rank;
state_dict_for_save_checkpoint -> state_dict_for_save_checkpoint;
state_dict_for_save_checkpoint -> state_dict;
get_inference_config -> dict;
get_computeprob_response -> get_computeprob_response;
get_computeprob_response -> is_pipeline_first_stage;
get_computeprob_response -> is_pipeline_last_stage;
get_computeprob_response -> range;
get_computeprob_response -> len;
get_computeprob_response -> isinstance;
get_computeprob_response -> append;
get_computeprob_response -> TypeError;
get_computeprob_response -> text_to_ids;
get_computeprob_response -> int;
get_computeprob_response -> tolist;
get_computeprob_response -> ids_to_text;
get_computeprob_response -> item;
get_computeprob_response -> type;
megatron_neva_generate -> get;
megatron_neva_generate -> enumerate;
megatron_neva_generate -> tokens_to_ids;
megatron_neva_generate -> generate;
megatron_neva_generate -> compile;
megatron_neva_generate -> sub;
megatron_neva_generate -> strip;
megatron_neva_generate -> append;
megatron_neva_generate -> format;
megatron_neva_generate -> replace;
megatron_neva_generate -> finditer;
megatron_neva_generate -> current_device;
megatron_neva_generate -> print;
megatron_neva_generate -> range;
megatron_neva_generate -> encode_time_str;
megatron_neva_generate -> end;
megatron_neva_generate -> decode_time_tokens;
megatron_neva_generate -> split;
megatron_neva_generate -> rsplit;
megatron_neva_generate -> len;
fwd_output_only_func -> next;
fwd_output_only_func -> isinstance;
fwd_output_only_func -> cuda;
fwd_output_only_func -> model;
fwd_output_only_func -> item;
fwd_output_only_func -> is_pipeline_last_stage;
fwd_output_only_func -> InferenceParams;
fwd_output_only_func -> size;
fwd_output_only_func -> type;
fwd_output_only_func -> hasattr;
fwd_output_only_func -> len;
fwd_output_only_func -> _build_forward_args_from_kwargs;
fwd_output_only_func -> contiguous;
fwd_output_only_func -> is_tensor;
fwd_output_only_func -> unsqueeze;
fwd_output_only_func -> transpose;
fwd_output_only_func -> append;
is_module_updatable -> hasattr;
is_module_updatable -> callable;
train_step -> randint;
train_step -> nan_to_num;
train_step -> detach;
train_step -> interpolate;
train_step -> encode_imgs;
train_step -> no_grad;
train_step -> randn_like;
train_step -> add_noise;
train_step -> cat;
train_step -> chunk;
train_step -> unet;
train_step -> mse_loss;
train_step -> float;
train_step -> autocast;
train_step -> q_sample;
train_step -> apply_model;
_shared_predict -> self;
_shared_predict -> numpy;
_shared_predict -> astype;
_shared_predict -> cpu;
_shared_predict -> min;
_shared_predict -> ptp;
_shared_predict -> detach;
get_optimizer -> partial;
get_optimizer -> ValueError;
get_optimizer -> is_available;
get_optimizer -> keys;
get_optimizer -> OptimizerConfig;
get_optimizer -> MegatronOptimizerModule;
build_renderer -> from_config_dict;
build_guidance -> from_config_dict;
build_guidance -> eval;
build_guidance -> parameters;
prepare_embeddings -> get_text_embeds;
get_text_embeds -> no_grad;
get_text_embeds -> tokenizer;
get_text_embeds -> text_encoder;
get_text_embeds -> to;
get_input -> no_grad;
get_input -> get_input;
get_input -> to;
get_input -> current_device;
get_input -> rearrange;
get_input -> float;
get_input -> dict;
get_input -> super;
get_input -> permute;
get_input -> encode_first_stage;
get_input -> detach;
get_input -> rand;
get_input -> get_learned_conditioning;
get_input -> where;
get_input -> size;
get_input -> decode_first_stage;
get_input -> extend;
get_input -> append;
get_input -> get_first_stage_encoding;
get_input -> mode;
get_input -> len;
get_input -> choice;
get_input -> interpolate;
get_input -> arange;
get_input -> endswith;
get_input -> DiagonalGaussianDistribution;
get_input -> squeeze;
get_input -> compute_latent_shifts;
get_input -> random_dropout;
get_input -> isinstance;
apply_model -> isinstance;
apply_model -> diffusion_model;
apply_model -> control_model;
apply_model -> zip;
apply_model -> hasattr;
apply_model -> get_fold_unfold;
apply_model -> unfold;
apply_model -> view;
apply_model -> stack;
apply_model -> model;
apply_model -> len;
apply_model -> next;
apply_model -> fold;
apply_model -> range;
apply_model -> iter;
apply_model -> int;
apply_model -> info;
apply_model -> rearrange;
apply_model -> get_learned_conditioning;
apply_model -> keys;
apply_model -> values;
apply_model -> LongTensor;
apply_model -> cat;
apply_model -> _crop_encoder;
apply_model -> clone;
apply_model -> infer;
apply_model -> device_view;
apply_model -> contiguous;
apply_model -> type;
get_unconditional_conditioning -> no_grad;
get_unconditional_conditioning -> get_learned_conditioning;
get_unconditional_conditioning -> list;
get_unconditional_conditioning -> self;
get_unconditional_conditioning -> zip;
get_unconditional_conditioning -> append;
log_images -> no_grad;
log_images -> dict;
log_images -> next;
log_images -> to;
log_images -> get_input;
log_images -> min;
log_images -> decode_first_stage;
log_images -> log_txt_as_img;
log_images -> current_device;
log_images -> list;
log_images -> range;
log_images -> stack;
log_images -> rearrange;
log_images -> make_grid;
log_images -> sample_log;
log_images -> get_unconditional_conditioning;
log_images -> _get_denoise_row_from_list;
log_images -> repeat;
log_images -> long;
log_images -> randn_like;
log_images -> q_sample;
log_images -> append;
log_images -> tensor;
log_images -> log_images;
log_images -> encode_first_stage;
log_images -> update;
log_images -> all;
log_images -> log_conditionings;
log_images -> isinstance;
log_images -> map;
log_images -> ema_scope;
log_images -> sample;
log_images -> len;
log_images -> self;
log_images -> to_rgb;
log_images -> decode;
log_images -> _get_rows_from_list;
log_images -> intersect1d;
log_images -> keys;
log_images -> hasattr;
log_images -> ismap;
log_images -> ones;
log_images -> progressive_denoising;
log_images -> isimage;
log_txt_as_img -> len;
log_txt_as_img -> list;
log_txt_as_img -> range;
log_txt_as_img -> stack;
log_txt_as_img -> tensor;
log_txt_as_img -> new;
log_txt_as_img -> Draw;
log_txt_as_img -> int;
log_txt_as_img -> join;
log_txt_as_img -> append;
log_txt_as_img -> text;
log_txt_as_img -> info;
log_txt_as_img -> transpose;
log_txt_as_img -> array;
sample_log -> no_grad;
sample_log -> DDIMSampler;
sample_log -> sample;
_get_denoise_row_from_list -> tqdm;
_get_denoise_row_from_list -> len;
_get_denoise_row_from_list -> stack;
_get_denoise_row_from_list -> rearrange;
_get_denoise_row_from_list -> make_grid;
_get_denoise_row_from_list -> append;
_get_denoise_row_from_list -> decode_first_stage;
q_sample -> default;
q_sample -> randn_like;
q_sample -> extract_into_tensor;
q_sample -> isinstance;
q_sample -> type;
q_sample -> right_pad_dims_to;
q_sample -> log_snr_to_alpha_sigma;
q_sample -> full;
q_sample -> log_snr;
low_vram_shift -> cuda;
low_vram_shift -> cpu;
make_zero_conv -> TimestepEmbedSequential;
make_zero_conv -> zero_module;
make_zero_conv -> conv_nd;
conv_nd -> ValueError;
conv_nd -> Conv1d;
conv_nd -> Conv2d;
conv_nd -> Conv3d;
load_from_unet -> print;
load_from_unet -> load;
load_from_unet -> state_dict;
load_from_unet -> keys;
load_from_unet -> items;
load_from_unet -> list;
load_from_unet -> load_state_dict;
load_from_unet -> startswith;
load_from_unet -> len;
load_from_unet -> set;
load_from_unet -> replace;
load_from_unet -> split;
load_from_unet -> int;
load_from_unet -> join;
load_from_unet -> str;
_validate_trainer -> ValueError;
get_module_list -> isinstance;
allreduce_sequence_parallel_gradients -> isinstance;
allreduce_sequence_parallel_gradients -> _flatten_dense_tensors;
allreduce_sequence_parallel_gradients -> all_reduce;
allreduce_sequence_parallel_gradients -> zip;
allreduce_sequence_parallel_gradients -> _append_sequence_parallel_module_grads;
allreduce_sequence_parallel_gradients -> _unflatten_dense_tensors;
allreduce_sequence_parallel_gradients -> copy_;
allreduce_sequence_parallel_gradients -> get_tensor_model_parallel_group;
allreduce_main_grads -> allreduce_buffer;
allreduce_gradients -> parameters;
allreduce_gradients -> _flatten_dense_tensors;
allreduce_gradients -> get_data_parallel_world_size;
allreduce_gradients -> all_reduce;
allreduce_gradients -> zip;
allreduce_gradients -> type;
allreduce_gradients -> append;
allreduce_gradients -> _unflatten_dense_tensors;
allreduce_gradients -> copy_;
allreduce_gradients -> get_data_parallel_group;
_append_sequence_parallel_module_grads -> parameters;
_append_sequence_parallel_module_grads -> getattr;
_append_sequence_parallel_module_grads -> append;
process_batch -> cuda;
process_batch -> isinstance;
process_batch -> autocast;
process_batch -> get_input;
process_batch -> len;
process_batch -> list;
process_batch -> keys;
process_batch -> text_encoder;
process_batch -> cat;
process_batch -> get;
process_batch -> repeat;
process_batch -> NotImplemented;
process_batch -> no_grad;
process_batch -> encode;
process_batch -> to;
process_batch -> encode_first_stage;
process_batch -> current_device;
process_batch -> rearrange;
process_batch -> permute;
process_batch -> prepare_context_tensors;
process_batch -> get_mask_from_lengths;
process_batch -> embed_audio_tokens;
process_batch -> forward;
process_batch -> compute_loss;
process_batch -> audio_to_codes;
process_batch -> prepare_dummy_cond_for_cfg;
process_batch -> compute_alignment_loss;
process_batch -> item;
process_batch -> randint;
process_batch -> size;
process_batch -> unsqueeze;
process_batch -> rand;
process_batch -> enumerate;
process_batch -> items;
process_batch -> issubclass;
log_local -> join;
log_local -> make_grid;
log_local -> squeeze;
log_local -> numpy;
log_local -> astype;
log_local -> format;
log_local -> makedirs;
log_local -> save;
log_local -> transpose;
log_local -> split;
log_local -> fromarray;
log_img -> check_frequency;
log_img -> hasattr;
log_img -> callable;
log_img -> type;
log_img -> log_local;
log_img -> eval;
log_img -> no_grad;
log_img -> log_images;
log_img -> min;
log_img -> isinstance;
log_img -> train;
log_img -> cpu;
log_img -> clamp;
log_img -> detach;
instantiate_text_encoder -> from_config_dict;
instantiate_text_encoder -> train;
instantiate_text_encoder -> eval;
instantiate_text_encoder -> parameters;
instantiate_text_encoder -> hasattr;
instantiate_text_encoder -> len;
instantiate_vae -> from_config_dict;
instantiate_vae -> eval;
instantiate_vae -> parameters;
instantiate_unet -> from_config_dict;
instantiate_unet -> train;
instantiate_unet -> compile;
get_noise_scheduler -> from_config_dict;
get_noise_scheduler -> eval;
apply_step -> diffusion_model;
apply_step -> cat;
apply_step -> NotImplementedError;
register_schedule -> exists;
register_schedule -> cumprod;
register_schedule -> append;
register_schedule -> int;
register_schedule -> partial;
register_schedule -> register_buffer;
register_schedule -> make_beta_schedule;
register_schedule -> to_torch;
register_schedule -> all;
register_schedule -> sqrt;
register_schedule -> log;
register_schedule -> NotImplementedError;
register_schedule -> maximum;
register_schedule -> isnan;
register_schedule -> Tensor;
register_schedule -> ones_like;
register_schedule -> register_schedule;
register_schedule -> make_cond_schedule;
register_schedule -> super;
make_beta_schedule -> numpy;
make_beta_schedule -> linspace;
make_beta_schedule -> pow;
make_beta_schedule -> clip;
make_beta_schedule -> arange;
make_beta_schedule -> cos;
make_beta_schedule -> ValueError;
to_torch -> clone;
to_torch -> detach;
to_torch -> to;
extract_into_tensor -> gather;
extract_into_tensor -> reshape;
extract_into_tensor -> len;
setup_rng -> Generator;
setup_rng -> info;
setup_rng -> manual_seed;
setup_rng -> set_rng;
setup_rng -> get_data_parallel_rank;
setup_rng -> current_device;
setup_rng -> int;
setup_rng -> timestamp;
setup_rng -> now;
get_text_encoder -> T5Encoder;
random_dropout -> cuda;
random_dropout -> to;
random_dropout -> bernoulli;
random_dropout -> ones;
random_dropout -> current_device;
compute_loss -> get_xt;
compute_loss -> forward;
compute_loss -> loss_fn;
compute_loss -> ValueError;
compute_loss -> sqrt;
compute_loss -> batch_mul;
compute_loss -> get_mask_from_lengths;
compute_loss -> range;
compute_loss -> size;
compute_loss -> cross_entropy_loss;
compute_loss -> permute;
compute_loss -> sum;
sample_image -> no_grad;
sample_image -> sampler;
sample_image -> new;
_load_model -> endswith;
_load_model -> set_inference_mode;
_load_model -> restore_from;
_load_model -> eval;
_load_model -> load;
_load_model -> MegatronImagen;
_load_model -> items;
_load_model -> load_state_dict;
_load_model -> Exception;
_load_model -> len;
_load_model -> print;
_load_model -> replace;
_load_model -> cuda;
_load_model -> append;
_load_model -> info;
_load_model -> is_available;
_load_model -> NotImplemented;
_load_model -> ValueError;
_load_model -> hasattr;
_load_customized_model -> print;
_load_customized_model -> _load_model;
_load_customized_model -> append;
_load_customized_model -> setup_trainer_and_models_for_inference;
_load_customized_model -> eval;
_load_customized_model -> set_inference_mode;
_load_customized_model -> cuda;
setup_trainer_and_models_for_inference -> NLPDDPStrategy;
setup_trainer_and_models_for_inference -> Trainer;
setup_trainer_and_models_for_inference -> NLPSaveRestoreConnector;
setup_trainer_and_models_for_inference -> setup_environment;
setup_trainer_and_models_for_inference -> get;
setup_trainer_and_models_for_inference -> append;
setup_trainer_and_models_for_inference -> endswith;
setup_trainer_and_models_for_inference -> launch;
setup_trainer_and_models_for_inference -> cuda;
setup_trainer_and_models_for_inference -> requires_grad_;
setup_trainer_and_models_for_inference -> TorchElasticEnvironment;
setup_trainer_and_models_for_inference -> isdir;
setup_trainer_and_models_for_inference -> restore_from;
setup_trainer_and_models_for_inference -> open_dict;
setup_trainer_and_models_for_inference -> model_cfg_modifier;
setup_trainer_and_models_for_inference -> warning;
setup_trainer_and_models_for_inference -> load_from_checkpoint;
setup_trainer_and_models_for_inference -> ValueError;
setup_trainer_and_models_for_inference -> eval;
get_text_encodings -> no_grad;
get_text_encodings -> isinstance;
get_text_encodings -> encode;
get_text_encodings -> repeat;
get_text_encodings -> len;
forward_with_cond_scale -> forward;
forward_with_cond_scale -> zeros_like;
sample_time -> sample_random_times;
sample_time -> exp;
sample_time -> randn;
sample_random_times -> rand;
get_xt -> q_sample;
get_xt -> randn_like;
get_xt -> sample_time;
get_xt -> batch_mul;
get_condition -> maybe;
init_from_ckpt -> list;
init_from_ckpt -> load;
init_from_ckpt -> items;
init_from_ckpt -> state_dict;
init_from_ckpt -> print;
init_from_ckpt -> replace;
init_from_ckpt -> keys;
init_from_ckpt -> load_state_dict;
init_from_ckpt -> len;
init_from_ckpt -> lstrip;
init_from_ckpt -> size;
init_from_ckpt -> zero_;
init_from_ckpt -> copy_;
init_from_ckpt -> append;
init_from_ckpt -> startswith;
init_from_ckpt -> format;
init_from_ckpt -> info;
get_first_stage_encoding -> isinstance;
get_first_stage_encoding -> sample;
get_first_stage_encoding -> NotImplementedError;
get_first_stage_encoding -> type;
_init_first_stage -> eval;
_init_first_stage -> parameters;
_init_first_stage -> info;
_init_first_stage -> from_config_dict;
get_obj_from_str -> rsplit;
get_obj_from_str -> info;
get_obj_from_str -> getattr;
get_obj_from_str -> import_module;
get_obj_from_str -> reload;
instantiate_from_config -> KeyError;
instantiate_from_config -> get_obj_from_str;
instantiate_from_config -> get;
instantiate_from_config -> dict;
differentiable_decode_first_stage -> autocast;
differentiable_decode_first_stage -> decode;
differentiable_decode_first_stage -> hasattr;
differentiable_decode_first_stage -> get_codebook_entry;
differentiable_decode_first_stage -> contiguous;
differentiable_decode_first_stage -> isinstance;
differentiable_decode_first_stage -> dim;
differentiable_decode_first_stage -> long;
differentiable_decode_first_stage -> get_fold_unfold;
differentiable_decode_first_stage -> unfold;
differentiable_decode_first_stage -> view;
differentiable_decode_first_stage -> stack;
differentiable_decode_first_stage -> fold;
differentiable_decode_first_stage -> rearrange;
differentiable_decode_first_stage -> info;
differentiable_decode_first_stage -> argmax;
differentiable_decode_first_stage -> min;
differentiable_decode_first_stage -> exp;
differentiable_decode_first_stage -> range;
shared_step -> get_input;
shared_step -> encode_first_stage;
shared_step -> self;
on_train_start -> ValueError;
on_train_start -> on_train_start;
on_train_start -> super;
on_train_start -> hasattr;
on_train_start -> get;
on_train_start -> setattr;
on_train_start -> to_container;
on_train_start -> keys;
on_train_start -> isinstance;
on_train_start -> NotImplementedError;
on_train_start -> AppState;
on_train_start -> is_global_rank_zero;
on_train_start -> is_initialized;
on_train_start -> debug;
on_train_start -> nemo_topk_check_previous_run;
on_train_start -> get_git_hash;
on_train_start -> add_err_file_handler;
on_train_start -> add_filehandlers_to_pl_logger;
on_train_start -> barrier;
on_train_start -> len;
on_train_start -> glob;
on_train_start -> Path;
on_train_start -> is_dir;
on_train_start -> exists;
on_train_start -> mkdir;
on_train_start -> move;
on_train_start -> copy;
on_train_start -> open;
on_train_start -> write;
on_train_start -> str;
on_train_start -> join;
on_train_start -> get_git_diff;
on_train_start -> _preemption_handler;
on_train_start -> __enter__;
on_train_start -> StaticBufferLoader;
on_train_start -> CombinedLoader;
on_train_start -> setup;
on_train_start -> iter;
on_train_start -> get_training_step;
on_train_start -> MethodType;
on_train_start -> get_optimizer_step;
on_train_start -> type;
on_train_start -> info;
on_train_start -> getsignal;
on_train_start -> get_rank;
on_train_start -> is_available;
on_train_start -> release;
on_train_start -> signal;
on_train_start -> extract_weights;
on_train_start -> extract_ema_weights;
on_train_start -> zip;
on_train_start -> allclose;
on_train_start -> cpu;
on_train_start -> enumerate;
on_train_start -> set;
on_train_start -> values;
on_train_start -> walk;
on_train_start -> _check_attrs;
on_train_start -> parameters;
on_train_start -> all;
on_train_start -> no_grad;
on_train_start -> fill_;
on_train_start -> uniform;
ema_scope -> store;
ema_scope -> copy_to;
ema_scope -> parameters;
ema_scope -> print;
ema_scope -> restore;
instantiate_optimizer_from_config -> get_obj_from_str;
instantiate_optimizer_from_config -> get;
instantiate_optimizer_from_config -> dict;
log_conditionings -> no_grad;
log_conditionings -> dict;
log_conditionings -> isinstance;
log_conditionings -> dim;
log_conditionings -> log_txt_as_img;
log_conditionings -> NotImplementedError;
log_conditionings -> str;
log_conditionings -> item;
log_conditionings -> range;
log_conditionings -> join;
log_conditionings -> tolist;
encode_to_prequant -> encoder;
encode_to_prequant -> quant_conv;
_validation_step -> get_input;
_validation_step -> self;
_validation_step -> loss;
_validation_step -> log;
_validation_step -> log_dict;
_validation_step -> parse;
_validation_step -> get_last_layer;
to_rgb -> conv2d;
to_rgb -> hasattr;
to_rgb -> register_buffer;
to_rgb -> to;
to_rgb -> max;
to_rgb -> min;
to_rgb -> randn;
to_rgb -> no_grad;
to_rgb -> float;
_load_pretrained_model -> state_dict;
_load_pretrained_model -> list;
_load_pretrained_model -> _state_key_mapping;
_load_pretrained_model -> keys;
_load_pretrained_model -> _find_mismatched_keys;
_load_pretrained_model -> _load_state_dict_into_model;
_load_pretrained_model -> set;
_load_pretrained_model -> Size;
_load_pretrained_model -> unsqueeze;
_load_pretrained_model -> append;
_load_pretrained_model -> _strip_unet_key_prefix;
_load_pretrained_model -> _legacy_unet_ckpt_mapping;
_load_pretrained_model -> info;
_load_pretrained_model -> split;
_load_pretrained_model -> int;
_load_pretrained_model -> join;
_load_pretrained_model -> str;
_state_key_mapping -> keys;
_state_key_mapping -> join;
_state_key_mapping -> compile;
_state_key_mapping -> int;
_state_key_mapping -> items;
_state_key_mapping -> replace;
_state_key_mapping -> findall;
_state_key_mapping -> len;
_state_key_mapping -> str;
_state_key_mapping -> _input_blocks_mapping;
_state_key_mapping -> _output_blocks_mapping;
_state_key_mapping -> _mid_blocks_mapping;
_state_key_mapping -> _other_blocks_mapping;
_state_key_mapping -> _sdxl_embedding_mapping;
_state_key_mapping -> update;
_find_mismatched_keys -> append;
_load_state_dict_into_model -> copy;
_load_state_dict_into_model -> load;
_load_state_dict_into_model -> _load_from_state_dict;
_load_state_dict_into_model -> items;
uniform_on_device -> rand;
count_params -> sum;
count_params -> info;
count_params -> numel;
count_params -> parameters;
q_mean_variance -> extract_into_tensor;
predict_start_from_noise -> extract_into_tensor;
predict_start_from_noise -> log_snr;
predict_start_from_noise -> right_pad_dims_to;
predict_start_from_noise -> log_snr_to_alpha_sigma;
predict_start_from_noise -> clamp;
predict_start_from_z_and_v -> extract_into_tensor;
predict_eps_from_z_and_v -> extract_into_tensor;
q_posterior -> extract_into_tensor;
q_posterior -> default;
q_posterior -> log_snr;
q_posterior -> map;
q_posterior -> log_snr_to_alpha_sigma;
q_posterior -> log;
q_posterior -> partial;
q_posterior -> expm1;
q_posterior -> clamp;
p_mean_variance -> model;
p_mean_variance -> q_posterior;
p_mean_variance -> predict_start_from_noise;
p_mean_variance -> clamp_;
p_mean_variance -> apply_model;
p_mean_variance -> modify_score;
p_mean_variance -> quantize;
p_mean_variance -> NotImplementedError;
p_mean_variance -> thresholding_x0;
p_mean_variance -> forward_with_cond_scale;
p_mean_variance -> predict_start_from_v;
p_mean_variance -> ValueError;
p_sample -> no_grad;
p_sample -> p_mean_variance;
p_sample -> noise_like;
p_sample -> reshape;
p_sample -> float;
p_sample -> exp;
p_sample -> len;
p_sample -> DeprecationWarning;
p_sample -> dropout;
p_sample -> argmax;
p_sample -> randn_like;
p_sample -> isinstance;
p_sample -> type_as;
noise_like -> repeat;
noise_like -> randn;
noise_like -> repeat_noise;
noise_like -> noise;
noise_like -> len;
p_sample_loop -> no_grad;
p_sample_loop -> randn;
p_sample_loop -> tqdm;
p_sample_loop -> reversed;
p_sample_loop -> p_sample;
p_sample_loop -> range;
p_sample_loop -> full;
p_sample_loop -> append;
p_sample_loop -> min;
p_sample_loop -> to;
p_sample_loop -> q_sample;
p_sample_loop -> callback;
p_sample_loop -> img_callback;
p_sample_loop -> randn_like;
get_v -> extract_into_tensor;
get_loss -> abs;
get_loss -> mean;
get_loss -> NotImplementedError;
get_loss -> mse_loss;
get_loss -> reshape;
p_losses -> default;
p_losses -> q_sample;
p_losses -> model;
p_losses -> mean;
p_losses -> update;
p_losses -> randn_like;
p_losses -> get_loss;
p_losses -> get_v;
p_losses -> NotImplementedError;
p_losses -> apply_model;
p_losses -> cuda;
p_losses -> type;
p_losses -> exp;
_get_rows_from_list -> len;
_get_rows_from_list -> rearrange;
_get_rows_from_list -> make_grid;
instantiate_first_stage -> from_config_dict;
instantiate_first_stage -> eval;
instantiate_first_stage -> parameters;
instantiate_cond_stage -> from_config_dict;
instantiate_cond_stage -> info;
instantiate_cond_stage -> eval;
instantiate_cond_stage -> parameters;
make_cond_schedule -> full;
make_cond_schedule -> long;
make_cond_schedule -> round;
make_cond_schedule -> linspace;
delta_border -> view;
delta_border -> meshgrid;
delta_border -> min;
delta_border -> tensor;
delta_border -> cat;
get_weighting -> delta_border;
get_weighting -> clip;
get_weighting -> to;
get_weighting -> repeat;
get_weighting -> view;
get_fold_unfold -> dict;
get_fold_unfold -> Unfold;
get_fold_unfold -> Fold;
get_fold_unfold -> to;
get_fold_unfold -> view;
get_fold_unfold -> get_weighting;
get_fold_unfold -> fold;
fold -> transpose;
fold -> reshape;
_rescale_annotations -> clamp;
_rescale_annotations -> min;
_rescale_annotations -> rescale_bbox;
rescale_bbox -> clamp;
rescale_bbox -> min;
_predict_eps_from_xstart -> extract_into_tensor;
_prior_bpd -> tensor;
_prior_bpd -> q_mean_variance;
_prior_bpd -> normal_kl;
_prior_bpd -> mean_flat;
_prior_bpd -> log;
normal_kl -> isinstance;
normal_kl -> to;
normal_kl -> exp;
normal_kl -> tensor;
mean_flat -> mean;
mean_flat -> list;
mean_flat -> range;
mean_flat -> len;
progressive_denoising -> no_grad;
progressive_denoising -> randn;
progressive_denoising -> isinstance;
progressive_denoising -> min;
progressive_denoising -> tqdm;
progressive_denoising -> reversed;
progressive_denoising -> type;
progressive_denoising -> full;
progressive_denoising -> p_sample;
progressive_denoising -> list;
progressive_denoising -> range;
progressive_denoising -> to;
progressive_denoising -> q_sample;
progressive_denoising -> append;
progressive_denoising -> callback;
progressive_denoising -> img_callback;
progressive_denoising -> current_device;
progressive_denoising -> randn_like;
progressive_denoising -> map;
callback -> ModelTransform;
callback -> PreemptionCallback;
ismap -> isinstance;
ismap -> len;
isimage -> isinstance;
isimage -> len;
non_cuda_graph_capturable -> log_dict;
non_cuda_graph_capturable -> log;
non_cuda_graph_capturable -> tensor;
non_cuda_graph_capturable -> get;
non_cuda_graph_capturable -> compute_consumed_samples;
non_cuda_graph_capturable -> int;
non_cuda_graph_capturable -> time;
_modify_state_dict -> keys;
_modify_state_dict -> replace;
_get_config_and_state_dict_from_nemo -> getcwd;
_get_config_and_state_dict_from_nemo -> NLPSaveRestoreConnector;
_get_config_and_state_dict_from_nemo -> TemporaryDirectory;
_get_config_and_state_dict_from_nemo -> isfile;
_get_config_and_state_dict_from_nemo -> chdir;
_get_config_and_state_dict_from_nemo -> load;
_get_config_and_state_dict_from_nemo -> join;
_get_config_and_state_dict_from_nemo -> inject_model_parallel_rank;
_get_config_and_state_dict_from_nemo -> _load_state_dict_from_disk;
_get_config_and_state_dict_from_nemo -> _unpack_nemo_file;
_get_config_and_state_dict_from_nemo -> dict;
_get_config_and_state_dict_from_nemo -> isdir;
_get_config_and_state_dict_from_nemo -> splitext;
make_schedule -> make_ddim_timesteps;
make_schedule -> register_buffer;
make_schedule -> make_ddim_sampling_parameters;
make_schedule -> to;
make_schedule -> to_torch;
make_schedule -> sqrt;
make_schedule -> current_device;
make_schedule -> log;
make_schedule -> cpu;
make_schedule -> detach;
make_schedule -> clone;
make_schedule -> make_schedule;
make_schedule -> ValueError;
make_schedule -> super;
make_ddim_timesteps -> asarray;
make_ddim_timesteps -> print;
make_ddim_timesteps -> list;
make_ddim_timesteps -> astype;
make_ddim_timesteps -> NotImplementedError;
make_ddim_timesteps -> range;
make_ddim_timesteps -> linspace;
make_ddim_timesteps -> sqrt;
make_ddim_sampling_parameters -> asarray;
make_ddim_sampling_parameters -> sqrt;
make_ddim_sampling_parameters -> print;
make_ddim_sampling_parameters -> tolist;
sampling_fn -> no_grad;
sampling_fn -> enumerate;
sampling_fn -> randn;
sampling_fn -> print;
sampling_fn -> tqdm;
sampling_fn -> full;
sampling_fn -> p_sampling_fn;
sampling_fn -> list;
sampling_fn -> flip;
sampling_fn -> reversed;
sampling_fn -> q_sample;
sampling_fn -> append;
sampling_fn -> callback;
sampling_fn -> img_callback;
sampling_fn -> int;
sampling_fn -> range;
sampling_fn -> len;
sampling_fn -> pop;
sampling_fn -> min;
dpm_sampling_fn -> no_grad;
dpm_sampling_fn -> NoiseScheduleVP;
dpm_sampling_fn -> model_wrapper;
dpm_sampling_fn -> DPMSolver;
dpm_sampling_fn -> sample;
dpm_sampling_fn -> randn;
dpm_sampling_fn -> to;
dpm_sampling_fn -> apply_model;
para_ddim_sampling_fn -> no_grad;
para_ddim_sampling_fn -> print;
para_ddim_sampling_fn -> copy;
para_ddim_sampling_fn -> min;
para_ddim_sampling_fn -> stack;
para_ddim_sampling_fn -> zeros_like;
para_ddim_sampling_fn -> range;
para_ddim_sampling_fn -> numel;
para_ddim_sampling_fn -> randn;
para_ddim_sampling_fn -> randn_like;
para_ddim_sampling_fn -> clone;
para_ddim_sampling_fn -> to;
para_ddim_sampling_fn -> tqdm;
para_ddim_sampling_fn -> flip;
para_ddim_sampling_fn -> repeat;
para_ddim_sampling_fn -> flatten;
para_ddim_sampling_fn -> _get_model_output;
para_ddim_sampling_fn -> reshape;
para_ddim_sampling_fn -> cumsum;
para_ddim_sampling_fn -> pow;
para_ddim_sampling_fn -> pad;
para_ddim_sampling_fn -> int;
para_ddim_sampling_fn -> item;
para_ddim_sampling_fn -> update;
para_ddim_sampling_fn -> tensor;
para_ddim_sampling_fn -> _get_x_prev;
para_ddim_sampling_fn -> norm;
para_ddim_sampling_fn -> argmax;
para_ddim_sampling_fn -> max;
p_sampling_fn -> no_grad;
p_sampling_fn -> _get_model_output;
p_sampling_fn -> _get_x_prev_and_pred_x0;
p_sampling_fn -> len;
single_ddim_denoise_step -> full;
single_ddim_denoise_step -> grad_p_sampling_fn;
grad_p_sampling_fn -> _get_model_output;
grad_p_sampling_fn -> _get_x_prev_and_pred_x0;
_get_model_output -> apply_model;
_get_model_output -> isinstance;
_get_model_output -> predict_eps_from_z_and_v;
_get_model_output -> modify_score;
_get_model_output -> cat;
_get_model_output -> chunk;
_get_x_prev_and_pred_x0 -> full;
_get_x_prev_and_pred_x0 -> predict_start_from_z_and_v;
_get_x_prev_and_pred_x0 -> quantize;
_get_x_prev_and_pred_x0 -> sqrt;
_get_x_prev_and_pred_x0 -> dropout;
_get_x_prev_and_pred_x0 -> noise_like;
stochastic_encode -> no_grad;
stochastic_encode -> sqrt;
stochastic_encode -> randn_like;
stochastic_encode -> extract_into_tensor;
noise_pred_fn -> get_model_input_time;
noise_pred_fn -> expand;
noise_pred_fn -> model;
noise_pred_fn -> dim;
noise_pred_fn -> reshape;
noise_pred_fn -> marginal_alpha;
noise_pred_fn -> marginal_std;
noise_pred_fn -> expand_dims;
cond_grad_fn -> enable_grad;
cond_grad_fn -> requires_grad_;
cond_grad_fn -> classifier_fn;
cond_grad_fn -> grad;
cond_grad_fn -> detach;
cond_grad_fn -> sum;
marginal_std -> sqrt;
marginal_std -> exp;
marginal_std -> marginal_log_mean_coeff;
marginal_alpha -> exp;
marginal_alpha -> marginal_log_mean_coeff;
marginal_log_mean_coeff -> reshape;
marginal_log_mean_coeff -> interpolate_fn;
marginal_log_mean_coeff -> to;
marginal_log_mean_coeff -> log;
marginal_log_mean_coeff -> log_alpha_fn;
marginal_log_mean_coeff -> cos;
interpolate_fn -> cat;
interpolate_fn -> sort;
interpolate_fn -> argmin;
interpolate_fn -> where;
interpolate_fn -> squeeze;
interpolate_fn -> expand;
interpolate_fn -> eq;
interpolate_fn -> tensor;
interpolate_fn -> unsqueeze;
interpolate_fn -> repeat;
interpolate_fn -> gather;
log_alpha_fn -> log;
log_alpha_fn -> cos;
marginal_lambda -> marginal_log_mean_coeff;
marginal_lambda -> log;
marginal_lambda -> exp;
inverse_lambda -> logaddexp;
inverse_lambda -> interpolate_fn;
inverse_lambda -> reshape;
inverse_lambda -> t_fn;
inverse_lambda -> to;
inverse_lambda -> flip;
inverse_lambda -> sqrt;
inverse_lambda -> zeros;
inverse_lambda -> arccos;
inverse_lambda -> exp;
t_fn -> arccos;
t_fn -> exp;
model_fn -> expand;
model_fn -> noise_pred_fn;
model_fn -> get_model_input_time;
model_fn -> cond_grad_fn;
model_fn -> marginal_std;
model_fn -> reshape;
model_fn -> cat;
model_fn -> chunk;
model_fn -> expand_dims;
model_fn -> dim;
model_fn -> data_prediction_fn;
model_fn -> noise_prediction_fn;
noise_prediction_fn -> model;
data_prediction_fn -> noise_prediction_fn;
data_prediction_fn -> dim;
data_prediction_fn -> marginal_alpha;
data_prediction_fn -> marginal_std;
data_prediction_fn -> expand_dims;
data_prediction_fn -> quantile;
data_prediction_fn -> reshape;
data_prediction_fn -> maximum;
data_prediction_fn -> clamp;
data_prediction_fn -> abs;
data_prediction_fn -> to;
data_prediction_fn -> ones_like;
get_time_steps -> marginal_lambda;
get_time_steps -> to;
get_time_steps -> inverse_lambda;
get_time_steps -> linspace;
get_time_steps -> ValueError;
get_time_steps -> tensor;
get_time_steps -> item;
get_time_steps -> format;
get_time_steps -> pow;
get_time_steps -> cpu;
denoise_to_zero_fn -> data_prediction_fn;
dpm_solver_first_update -> dim;
dpm_solver_first_update -> exp;
dpm_solver_first_update -> marginal_lambda;
dpm_solver_first_update -> marginal_log_mean_coeff;
dpm_solver_first_update -> marginal_std;
dpm_solver_first_update -> expm1;
dpm_solver_first_update -> model_fn;
dpm_solver_first_update -> expand_dims;
multistep_dpm_solver_second_update -> dim;
multistep_dpm_solver_second_update -> exp;
multistep_dpm_solver_second_update -> ValueError;
multistep_dpm_solver_second_update -> marginal_lambda;
multistep_dpm_solver_second_update -> marginal_log_mean_coeff;
multistep_dpm_solver_second_update -> marginal_std;
multistep_dpm_solver_second_update -> expand_dims;
multistep_dpm_solver_second_update -> format;
multistep_dpm_solver_third_update -> dim;
multistep_dpm_solver_third_update -> exp;
multistep_dpm_solver_third_update -> marginal_lambda;
multistep_dpm_solver_third_update -> marginal_log_mean_coeff;
multistep_dpm_solver_third_update -> marginal_std;
multistep_dpm_solver_third_update -> expand_dims;
multistep_dpm_solver_update -> dpm_solver_first_update;
multistep_dpm_solver_update -> multistep_dpm_solver_second_update;
multistep_dpm_solver_update -> multistep_dpm_solver_third_update;
multistep_dpm_solver_update -> ValueError;
multistep_dpm_solver_update -> format;
append_zero -> cat;
append_zero -> new_zeros;
append_dims -> ValueError;
get_sigmas_karras -> linspace;
get_sigmas_karras -> to;
get_sigmas_karras -> append_zero;
get_sigmas_exponential -> exp;
get_sigmas_exponential -> append_zero;
get_sigmas_exponential -> linspace;
get_sigmas_exponential -> log;
get_sigmas_polyexponential -> exp;
get_sigmas_polyexponential -> append_zero;
get_sigmas_polyexponential -> linspace;
get_sigmas_polyexponential -> log;
get_sigmas_vp -> linspace;
get_sigmas_vp -> sqrt;
get_sigmas_vp -> append_zero;
get_sigmas_vp -> exp;
to_d -> append_dims;
get_ancestral_step -> min;
get_ancestral_step -> minimum;
default_noise_sampler -> randn_like;
sample_euler -> no_grad;
sample_euler -> float;
sample_euler -> new_ones;
sample_euler -> trange;
sample_euler -> model;
sample_euler -> to_d;
sample_euler -> len;
sample_euler -> min;
sample_euler -> randn_like;
sample_euler -> callback;
sample_heun -> no_grad;
sample_heun -> float;
sample_heun -> new_ones;
sample_heun -> trange;
sample_heun -> model;
sample_heun -> to_d;
sample_heun -> len;
sample_heun -> min;
sample_heun -> randn_like;
sample_heun -> callback;
sample_dpm_2 -> no_grad;
sample_dpm_2 -> float;
sample_dpm_2 -> new_ones;
sample_dpm_2 -> trange;
sample_dpm_2 -> model;
sample_dpm_2 -> to_d;
sample_dpm_2 -> len;
sample_dpm_2 -> min;
sample_dpm_2 -> randn_like;
sample_dpm_2 -> callback;
sample_dpm_2 -> exp;
sample_dpm_2 -> lerp;
sample_dpm_2 -> log;
sample_dpm_2_ancestral -> no_grad;
sample_dpm_2_ancestral -> new_ones;
sample_dpm_2_ancestral -> trange;
sample_dpm_2_ancestral -> default_noise_sampler;
sample_dpm_2_ancestral -> model;
sample_dpm_2_ancestral -> get_ancestral_step;
sample_dpm_2_ancestral -> to_d;
sample_dpm_2_ancestral -> len;
sample_dpm_2_ancestral -> callback;
sample_dpm_2_ancestral -> exp;
sample_dpm_2_ancestral -> lerp;
sample_dpm_2_ancestral -> log;
sample_dpm_2_ancestral -> noise_sampler;
linear_multistep_coeff -> ValueError;
linear_multistep_coeff -> range;
linear_multistep_coeff -> quad;
sample_lms -> no_grad;
sample_lms -> new_ones;
sample_lms -> numpy;
sample_lms -> trange;
sample_lms -> model;
sample_lms -> to_d;
sample_lms -> append;
sample_lms -> min;
sample_lms -> cpu;
sample_lms -> len;
sample_lms -> pop;
sample_lms -> callback;
sample_lms -> linear_multistep_coeff;
sample_lms -> sum;
sample_lms -> range;
sample_lms -> detach;
sample_lms -> zip;
sample_lms -> reversed;
log_likelihood -> no_grad;
log_likelihood -> new_ones;
log_likelihood -> new_tensor;
log_likelihood -> odeint;
log_likelihood -> sum;
log_likelihood -> new_zeros;
log_likelihood -> randint_like;
log_likelihood -> enable_grad;
log_likelihood -> requires_grad_;
log_likelihood -> model;
log_likelihood -> to_d;
log_likelihood -> detach;
log_likelihood -> flatten;
log_likelihood -> grad;
log_likelihood -> log_prob;
log_likelihood -> Normal;
sample_dpm_fast -> no_grad;
sample_dpm_fast -> ValueError;
sample_dpm_fast -> tqdm;
sample_dpm_fast -> DPMSolver;
sample_dpm_fast -> dpm_solver_fast;
sample_dpm_fast -> t;
sample_dpm_fast -> callback;
sample_dpm_fast -> tensor;
sample_dpm_fast -> sigma;
dpm_solver_fast -> linspace;
dpm_solver_fast -> range;
dpm_solver_fast -> default_noise_sampler;
dpm_solver_fast -> ValueError;
dpm_solver_fast -> floor;
dpm_solver_fast -> len;
dpm_solver_fast -> eps;
dpm_solver_fast -> get_ancestral_step;
dpm_solver_fast -> minimum;
dpm_solver_fast -> info_callback;
dpm_solver_fast -> dpm_solver_1_step;
dpm_solver_fast -> sigma;
dpm_solver_fast -> t;
dpm_solver_fast -> dpm_solver_2_step;
dpm_solver_fast -> dpm_solver_3_step;
dpm_solver_fast -> noise_sampler;
sample_dpm_adaptive -> no_grad;
sample_dpm_adaptive -> ValueError;
sample_dpm_adaptive -> tqdm;
sample_dpm_adaptive -> DPMSolver;
sample_dpm_adaptive -> dpm_solver_adaptive;
sample_dpm_adaptive -> t;
sample_dpm_adaptive -> callback;
sample_dpm_adaptive -> tensor;
sample_dpm_adaptive -> sigma;
dpm_solver_adaptive -> tensor;
dpm_solver_adaptive -> PIDStepSizeController;
dpm_solver_adaptive -> default_noise_sampler;
dpm_solver_adaptive -> ValueError;
dpm_solver_adaptive -> abs;
dpm_solver_adaptive -> eps;
dpm_solver_adaptive -> maximum;
dpm_solver_adaptive -> propose_step;
dpm_solver_adaptive -> minimum;
dpm_solver_adaptive -> get_ancestral_step;
dpm_solver_adaptive -> dpm_solver_1_step;
dpm_solver_adaptive -> dpm_solver_2_step;
dpm_solver_adaptive -> dpm_solver_3_step;
dpm_solver_adaptive -> norm;
dpm_solver_adaptive -> info_callback;
dpm_solver_adaptive -> sigma;
dpm_solver_adaptive -> t;
dpm_solver_adaptive -> numel;
dpm_solver_adaptive -> noise_sampler;
sample_dpmpp_2s_ancestral -> no_grad;
sample_dpmpp_2s_ancestral -> new_ones;
sample_dpmpp_2s_ancestral -> trange;
sample_dpmpp_2s_ancestral -> default_noise_sampler;
sample_dpmpp_2s_ancestral -> exp;
sample_dpmpp_2s_ancestral -> neg;
sample_dpmpp_2s_ancestral -> model;
sample_dpmpp_2s_ancestral -> get_ancestral_step;
sample_dpmpp_2s_ancestral -> len;
sample_dpmpp_2s_ancestral -> callback;
sample_dpmpp_2s_ancestral -> to_d;
sample_dpmpp_2s_ancestral -> log;
sample_dpmpp_2s_ancestral -> t_fn;
sample_dpmpp_2s_ancestral -> expm1;
sample_dpmpp_2s_ancestral -> sigma_fn;
sample_dpmpp_2s_ancestral -> noise_sampler;
sigma_fn -> density;
sample_dpmpp_sde -> no_grad;
sample_dpmpp_sde -> new_ones;
sample_dpmpp_sde -> trange;
sample_dpmpp_sde -> min;
sample_dpmpp_sde -> max;
sample_dpmpp_sde -> BrownianTreeNoiseSampler;
sample_dpmpp_sde -> exp;
sample_dpmpp_sde -> neg;
sample_dpmpp_sde -> model;
sample_dpmpp_sde -> len;
sample_dpmpp_sde -> callback;
sample_dpmpp_sde -> to_d;
sample_dpmpp_sde -> get_ancestral_step;
sample_dpmpp_sde -> t_fn;
sample_dpmpp_sde -> log;
sample_dpmpp_sde -> sigma_fn;
sample_dpmpp_sde -> expm1;
sample_dpmpp_sde -> noise_sampler;
sample_dpmpp_2m -> no_grad;
sample_dpmpp_2m -> new_ones;
sample_dpmpp_2m -> trange;
sample_dpmpp_2m -> exp;
sample_dpmpp_2m -> neg;
sample_dpmpp_2m -> model;
sample_dpmpp_2m -> len;
sample_dpmpp_2m -> callback;
sample_dpmpp_2m -> t_fn;
sample_dpmpp_2m -> log;
sample_dpmpp_2m -> expm1;
sample_dpmpp_2m -> sigma_fn;
ode_fn -> enable_grad;
ode_fn -> requires_grad_;
ode_fn -> model;
ode_fn -> to_d;
ode_fn -> sum;
ode_fn -> detach;
ode_fn -> grad;
ode_fn -> flatten;
limiter -> atan;
propose_step -> limiter;
propose_step -> float;
eps -> sigma;
eps -> new_ones;
eps -> eps_callback;
eps -> model;
dpm_solver_1_step -> eps;
dpm_solver_1_step -> sigma;
dpm_solver_1_step -> expm1;
dpm_solver_2_step -> eps;
dpm_solver_2_step -> sigma;
dpm_solver_2_step -> expm1;
dpm_solver_3_step -> eps;
dpm_solver_3_step -> sigma;
dpm_solver_3_step -> expm1;
t_to_sigma -> float;
t_to_sigma -> exp;
t_to_sigma -> long;
t_to_sigma -> frac;
t_to_sigma -> floor;
t_to_sigma -> ceil;
sigma_to_t -> log;
sigma_to_t -> clamp;
sigma_to_t -> view;
sigma_to_t -> argmax;
sigma_to_t -> argmin;
sigma_to_t -> cumsum;
sigma_to_t -> abs;
sigma_to_t -> ge;
get_eps -> apply_model;
_get_x_prev -> prepare_tensor;
_get_x_prev -> flip;
_get_x_prev -> reshape;
_get_x_prev -> sqrt;
_get_x_prev -> quantize;
_get_x_prev -> dropout;
_get_x_prev -> noise_like;
_get_x_prev -> tensor;
_get_x_prev -> repeat;
_get_x_prev -> unsqueeze;
prepare_tensor -> flip;
prepare_tensor -> reshape;
prepare_tensor -> tensor;
prepare_tensor -> repeat;
prepare_tensor -> unsqueeze;
_load_concept_list -> isinstance;
_load_concept_list -> open;
_load_concept_list -> strip;
_load_concept_list -> readlines;
initialize_concept_embeddings -> copy_;
initialize_concept_embeddings -> detach;
mlp_similarity -> broadcast_tensors;
mlp_similarity -> cat;
mlp_similarity -> tanh;
mlp_similarity -> unsqueeze;
mlp_similarity -> squeeze;
mlp_similarity -> mlp_similarity_model;
broadcast_tensors -> _is_distributed;
broadcast_tensors -> broadcast;
broadcast_tensors -> append;
broadcast_tensors -> wait;
broadcast_tensors -> _is_complex_or_float;
build_model -> ValueError;
build_model -> range;
build_model -> isinstance;
build_model -> parameters;
build_model -> model_parallel_is_initialized;
build_model -> format;
build_model -> info;
build_model -> current_device;
build_model -> get_pipeline_model_parallel_world_size;
build_model -> append;
build_model -> model_provider_func;
build_model -> set_defaults_if_not_set_tensor_model_parallel_attributes;
build_model -> get_data_parallel_rank;
build_model -> get_tensor_model_parallel_rank;
build_model -> get_pipeline_model_parallel_rank;
build_model -> _calc_number_of_params;
build_model -> cuda;
build_model -> DistributedDataParallel;
build_model -> is_pipeline_first_stage;
build_model -> is_pipeline_last_stage;
build_model -> get_pipeline_model_parallel_split_rank;
build_model -> is_pipeline_stage_before_split;
build_model -> is_pipeline_stage_after_split;
build_model -> get_data_parallel_group;
build_model -> RuntimeError;
get_forward_embedding_func -> next;
get_forward_embedding_func -> tokenize;
get_forward_embedding_func -> text_encoder;
get_forward_embedding_func -> cuda;
scaled_init_method_normal -> sqrt;
scaled_init_method_normal -> normal_;
get_language_model -> TransformerLanguageModel;
get_language_model -> init_method_normal;
get_language_model -> scaled_init_method_normal;
initialize_word_embeddings -> Exception;
initialize_word_embeddings -> get_pipeline_model_parallel_world_size;
initialize_word_embeddings -> is_pipeline_last_stage;
initialize_word_embeddings -> VocabParallelEmbedding;
initialize_word_embeddings -> fill_;
initialize_word_embeddings -> hasattr;
initialize_word_embeddings -> is_pipeline_first_stage;
initialize_word_embeddings -> zero_parameters;
build_attention_mask -> empty;
build_attention_mask -> fill_;
build_attention_mask -> triu_;
build_attention_mask -> reshape;
build_transformer_config -> lower;
build_transformer_config -> get;
build_transformer_config -> build_transformer_config;
build_transformer_config -> items;
build_transformer_config -> mcore_supports_moe;
build_transformer_config -> setattr;
build_transformer_config -> list;
build_transformer_config -> super;
build_transformer_config -> warning;
build_transformer_config -> ValueError;
build_transformer_config -> filter;
build_transformer_config -> keys;
build_transformer_config -> startswith;
build_transformer_config -> to_container;
build_transformer_config -> build_model_parallel_config;
build_transformer_config -> endswith;
build_transformer_config -> activation_to_func;
build_transformer_config -> init_method_normal;
build_transformer_config -> fields;
build_transformer_config -> TransformerConfig;
build_transformer_config -> scaled_init_method_normal;
build_transformer_config -> getattr;
build_transformer_config -> transformer_config_cls;
build_transformer_config -> open_dict;
build_transformer_config -> print;
build_transformer_config -> update;
build_transformer_config -> format;
_wrap_model_for_O2 -> isinstance;
_wrap_model_for_O2 -> pop;
_wrap_model_for_O2 -> get;
_wrap_model_for_O2 -> hasattr;
_wrap_model_for_O2 -> type;
_wrap_model_for_O2 -> append;
_wrap_model_for_O2 -> Float16Wrapper;
te_version -> lru_cache;
te_version -> Version;
te_version -> version;
get_params_for_weight_decay_optimization -> listify_model;
get_params_for_weight_decay_optimization -> tuple;
get_params_for_weight_decay_optimization -> modules;
get_params_for_weight_decay_optimization -> filter;
get_params_for_weight_decay_optimization -> getattr;
get_params_for_weight_decay_optimization -> isinstance;
get_params_for_weight_decay_optimization -> extend;
get_params_for_weight_decay_optimization -> items;
get_params_for_weight_decay_optimization -> list;
get_params_for_weight_decay_optimization -> endswith;
get_params_for_weight_decay_optimization -> len;
get_params_for_weight_decay_optimization -> is_expert;
get_params_for_weight_decay_optimization -> values;
get_all_params_for_weight_decay_optimization -> listify_model;
get_all_params_for_weight_decay_optimization -> tuple;
get_all_params_for_weight_decay_optimization -> list;
get_all_params_for_weight_decay_optimization -> filter;
get_all_params_for_weight_decay_optimization -> getattr;
get_all_params_for_weight_decay_optimization -> parameters;
get_all_params_for_weight_decay_optimization -> len;
get_all_params_for_weight_decay_optimization -> is_expert;
setup_mcore_distributed_parallel -> get_model_config;
setup_mcore_distributed_parallel -> DistributedDataParallelConfig;
setup_mcore_distributed_parallel -> McoreDDP;
setup_mcore_distributed_parallel -> get;
setup_mcore_distributed_parallel -> enumerate;
setup_mcore_distributed_parallel -> get_data_parallel_group;
setup_mcore_distributed_parallel -> get_expert_data_parallel_group;
setup_mcore_distributed_parallel -> ValueError;
initialize_ub_func -> get;
initialize_ub_func -> initialize_ub;
initialize_ub_func -> warn;
megatron_timer_start -> start;
megatron_timer_start -> megatron_timers;
megatron_timer_stop -> stop;
megatron_timer_stop -> megatron_timers;
_compute_consumed_samples_after_training_step -> compute_consumed_samples;
_compute_consumed_samples_after_training_step -> hasattr;
allreduce_fsdp_sharding_omitted_gradients -> isinstance;
allreduce_fsdp_sharding_omitted_gradients -> len;
allreduce_fsdp_sharding_omitted_gradients -> _flatten_dense_tensors;
allreduce_fsdp_sharding_omitted_gradients -> all_reduce;
allreduce_fsdp_sharding_omitted_gradients -> zip;
allreduce_fsdp_sharding_omitted_gradients -> append;
allreduce_fsdp_sharding_omitted_gradients -> _unflatten_dense_tensors;
allreduce_fsdp_sharding_omitted_gradients -> copy_;
allreduce_fsdp_sharding_omitted_gradients -> get_data_parallel_group;
allreduce_first_last_embeddings -> get_model_module_list;
allreduce_first_last_embeddings -> is_pipeline_first_stage;
allreduce_first_last_embeddings -> get_pipeline_model_parallel_world_size;
allreduce_first_last_embeddings -> is_pipeline_last_stage;
allreduce_first_last_embeddings -> all_reduce;
allreduce_first_last_embeddings -> shared_embedding_or_output_weight;
allreduce_first_last_embeddings -> word_embeddings_weight;
allreduce_first_last_embeddings -> get_embedding_group;
allreduce_first_last_embeddings -> get;
zero_shot_classifier -> get;
zero_shot_classifier -> no_grad;
zero_shot_classifier -> stack;
zero_shot_classifier -> cuda;
zero_shot_classifier -> append;
zero_shot_classifier -> autocast;
zero_shot_classifier -> text_encoder;
zero_shot_classifier -> mean;
zero_shot_classifier -> norm;
zero_shot_classifier -> normalize;
zero_shot_eval -> info;
zero_shot_eval -> zero_shot_classifier;
zero_shot_eval -> get;
zero_shot_eval -> t;
zero_shot_eval -> eq;
zero_shot_eval -> no_grad;
zero_shot_eval -> tqdm;
zero_shot_eval -> expand_as;
zero_shot_eval -> float;
zero_shot_eval -> to;
zero_shot_eval -> cuda;
zero_shot_eval -> accuracy;
zero_shot_eval -> size;
zero_shot_eval -> numpy;
zero_shot_eval -> autocast;
zero_shot_eval -> vision_encoder;
zero_shot_eval -> normalize;
zero_shot_eval -> topk;
zero_shot_eval -> view;
zero_shot_eval -> max;
zero_shot_eval -> cpu;
zero_shot_eval -> sum;
zero_shot_eval -> reshape;
build_model_parallel_config -> to_container;
build_model_parallel_config -> get;
build_model_parallel_config -> fields;
build_model_parallel_config -> ModelParallelConfig;
build_model_parallel_config -> setattr;
build_model_parallel_config -> warning;
build_model_parallel_config -> build_model_parallel_config;
build_model_parallel_config -> super;
activation_to_func -> ValueError;
count_flops_attn -> int;
count_flops_attn -> DoubleTensor;
count_flops_attn -> prod;
count_flops -> count_flops_attn;
check_cuda -> current_device;
check_cuda -> get_device_properties;
check_cuda -> is_available;
check_cuda -> RuntimeError;
check_cuda -> ImportError;
normalization -> GroupNorm;
avg_pool_nd -> ValueError;
avg_pool_nd -> AvgPool1d;
avg_pool_nd -> AvgPool2d;
avg_pool_nd -> AvgPool3d;
update_ema -> zip;
update_ema -> add_;
update_ema -> mul_;
update_ema -> detach;
scale_module -> parameters;
scale_module -> mul_;
scale_module -> detach;
maybe -> wraps;
maybe -> fn;
maybe -> exists;
right_pad_dims_to -> view;
beta_linear_log_snr -> log;
beta_linear_log_snr -> expm1;
alpha_cosine_log_snr -> log;
alpha_cosine_log_snr -> cos;
log_snr_to_alpha_sigma -> sqrt;
log_snr_to_alpha_sigma -> sigmoid;
inner -> wraps;
inner -> fn;
inner -> exists;
get_times -> full;
get_sampling_timesteps -> linspace;
get_sampling_timesteps -> repeat;
get_sampling_timesteps -> stack;
get_sampling_timesteps -> unbind;
q_sample_from_to -> isinstance;
q_sample_from_to -> default;
q_sample_from_to -> log_snr;
q_sample_from_to -> right_pad_dims_to;
q_sample_from_to -> log_snr_to_alpha_sigma;
q_sample_from_to -> full;
q_sample_from_to -> randn_like;
predict_start_from_v -> log_snr;
predict_start_from_v -> right_pad_dims_to;
predict_start_from_v -> log_snr_to_alpha_sigma;
thresholding_x0 -> clamp;
thresholding_x0 -> quantile;
thresholding_x0 -> clamp_;
thresholding_x0 -> right_pad_dims_to;
thresholding_x0 -> type;
thresholding_x0 -> RuntimeError;
thresholding_x0 -> float;
thresholding_x0 -> abs;
thresholding_x0 -> rearrange;
thresholding_derivative -> thresholding_x0;
thresholding_derivative -> batch_div;
thresholding_derivative -> batch_mul;
forward_net -> background_net;
get_encoder -> FreqEncoder_torch;
get_encoder -> FreqEncoder;
get_encoder -> SHEncoder;
get_encoder -> GridEncoder;
get_encoder -> NotImplementedError;
_create_triangle_table -> tensor;
_create_num_triangles_table -> tensor;
_create_base_tet_edges -> tensor;
_sort_edges -> stack;
_sort_edges -> no_grad;
_sort_edges -> long;
_sort_edges -> unsqueeze;
_sort_edges -> gather;
build_layer -> Linear;
build_layer -> ReLU;
build_layer -> block_builder;
build_layer -> isinstance;
build_layer -> LayerType;
build_layer -> Version;
build_layer -> AutocastTransformerLayer;
build_layer -> ParallelTransformerLayer;
build_layer -> get_tensor_model_parallel_world_size;
build_layer -> version;
build_layer -> hasattr;
build_layer -> ParallelVisionTransformerLayer;
forward_density_features -> encode;
forward_density_features -> forward_density;
forward_density_features -> forward_features;
forward_density_features -> zeros;
normal_finite_differences -> view;
normal_finite_differences -> forward_density;
normal_finite_differences -> float;
normal_finite_differences -> chunk;
normal_finite_differences -> to;
normal_finite_differences -> cat;
normal_finite_differences -> eye;
forward_density -> sigma_net;
forward_density -> zeros;
forward_density -> encode;
forward_density -> trunc_exp;
forward_density -> softplus;
forward_density -> NotImplementedError;
forward_density -> density_blob;
forward_features -> features_net;
forward_features -> sigmoid;
forward_features -> zeros;
forward_features -> encode;
sigma_net -> squeeze;
sigma_net -> sigma_tcnn;
sigma_net -> sigma_mlp;
density_blob -> no_grad;
density_blob -> sum;
density_blob -> exp;
density_blob -> NotImplementedError;
density_blob -> sqrt;
features_net -> features_tcnn;
features_net -> features_mlp;
batch_process -> concatenate;
batch_process -> fn;
batch_process -> numpy;
batch_process -> range;
batch_process -> cpu;
batch_process -> detach;
_get_precision_type -> get;
encode_imgs -> encode;
encode_imgs -> sample;
encode_imgs -> image_encoder;
add_noise -> to;
add_noise -> flatten;
add_noise -> len;
add_noise -> unsqueeze;
add_noise -> Pool;
add_noise -> map;
add_noise -> close;
add_noise -> print;
add_noise -> open;
add_noise -> loads;
add_noise -> append;
add_noise -> strip;
image_encoder -> encoder;
image_encoder -> quant_conv;
image_encoder -> DiagonalGaussianDistribution;
set_beta_schedule -> make_beta_schedule;
set_beta_schedule -> cumprod;
set_beta_schedule -> tensor;
set_beta_schedule -> register_buffer;
set_beta_schedule -> int;
set_beta_schedule -> to;
set_beta_schedule -> to_torch;
set_beta_schedule -> current_device;
set_beta_schedule -> sqrt;
set_beta_schedule -> cpu;
set_beta_schedule -> detach;
set_beta_schedule -> clone;
load_vae_from_checkpoint -> device;
load_vae_from_checkpoint -> load_config_and_state_from_nemo;
load_vae_from_checkpoint -> to;
load_vae_from_checkpoint -> items;
load_vae_from_checkpoint -> load_state_dict;
load_vae_from_checkpoint -> get;
load_vae_from_checkpoint -> is_available;
load_vae_from_checkpoint -> LatentDiffusion;
set_engine -> load;
set_engine -> activate;
set_engine -> allocate_buffers;
clip_encode -> tokenizer;
clip_encode -> to;
clip_encode -> clone;
clip_encode -> pad;
clip_encode -> infer;
clip_encode -> device_view;
clip_encode -> type;
device_view -> DeviceView;
device_view -> data_ptr;
laplacian_uniform -> flatten;
laplacian_uniform -> unique;
laplacian_uniform -> ones;
laplacian_uniform -> cat;
laplacian_uniform -> coalesce;
laplacian_uniform -> stack;
laplacian_uniform -> sparse_coo_tensor;
compute_edge_to_face_mapping -> no_grad;
compute_edge_to_face_mapping -> view;
compute_edge_to_face_mapping -> unsqueeze;
compute_edge_to_face_mapping -> cat;
compute_edge_to_face_mapping -> unique;
compute_edge_to_face_mapping -> cuda;
compute_edge_to_face_mapping -> long;
compute_edge_to_face_mapping -> gather;
compute_edge_to_face_mapping -> repeat_interleave;
compute_edge_to_face_mapping -> zeros;
compute_edge_to_face_mapping -> stack;
compute_edge_to_face_mapping -> arange;
get_vertices_and_triangles -> no_grad;
get_vertices_and_triangles -> dmtet;
get_vertices_and_triangles -> numpy;
get_vertices_and_triangles -> tanh;
get_vertices_and_triangles -> cpu;
get_vertices_and_triangles -> detach;
namedtuple_map -> type;
namedtuple_map -> fn;
render_image_with_occgrid -> range;
render_image_with_occgrid -> len;
render_image_with_occgrid -> namedtuple_map;
render_image_with_occgrid -> nerf;
render_image_with_occgrid -> sampling;
render_image_with_occgrid -> rendering;
render_image_with_occgrid -> append;
render_image_with_occgrid -> view;
render_image_with_occgrid -> sum;
render_image_with_occgrid -> density;
render_image_with_occgrid -> iinfo;
render_image_with_occgrid -> isinstance;
render_image_with_occgrid -> cat;
render_image_with_occgrid -> zip;
render_image_with_occgrid -> reshape;
render_image_with_occgrid -> list;
render_image_with_occgrid_test -> no_grad;
render_image_with_occgrid_test -> zeros;
render_image_with_occgrid_test -> bool;
render_image_with_occgrid_test -> full_like;
render_image_with_occgrid_test -> ray_aabb_intersect;
render_image_with_occgrid_test -> size;
render_image_with_occgrid_test -> len;
render_image_with_occgrid_test -> namedtuple_map;
render_image_with_occgrid_test -> nerf;
render_image_with_occgrid_test -> sort;
render_image_with_occgrid_test -> cat;
render_image_with_occgrid_test -> expand;
render_image_with_occgrid_test -> item;
render_image_with_occgrid_test -> max;
render_image_with_occgrid_test -> traverse_grids;
render_image_with_occgrid_test -> rgb_sigma_fn;
render_image_with_occgrid_test -> render_weight_from_density;
render_image_with_occgrid_test -> accumulate_along_rays_;
render_image_with_occgrid_test -> logical_and;
render_image_with_occgrid_test -> clamp_min;
render_image_with_occgrid_test -> view;
render_image_with_occgrid_test -> ones;
render_image_with_occgrid_test -> min;
render_image_with_occgrid_test -> reshape;
render_image_with_occgrid_test -> arange;
render_image_with_occgrid_test -> sum;
render_image_with_occgrid_test -> finfo;
render_image_with_occgrid_test -> squeeze;
render_image_with_occgrid_test -> list;
rgb_sigma_fn -> nerf;
_render -> view;
_render -> Rays;
_render -> render_image_with_occgrid;
_render -> render_image_with_occgrid_test;
_render -> contiguous;
_render -> dmtet;
_render -> int;
_render -> cross;
_render -> normalize;
_render -> zeros_like;
_render -> scatter_add_;
_render -> where;
_render -> float;
_render -> rasterize;
_render -> interpolate;
_render -> detach;
_render -> any;
_render -> material;
_render -> clamp;
_render -> background;
_render -> tanh;
_render -> repeat;
_render -> tensor;
_render -> unsqueeze;
_render -> forward_features;
_render -> randn;
_render -> sum;
_render -> bmm;
_render -> antialias;
_render -> permute;
_render -> pad;
_render -> near_far_from_aabb;
_render -> march_rays_train;
_render -> nerf;
_render -> composite_rays_train;
_render -> zeros;
_render -> arange;
_render -> clone;
_render -> long;
_render -> normal;
_render -> max;
_render -> march_rays;
_render -> composite_rays;
_render -> min;
_render -> flatten_rays;
_render -> randn_like;
occ_eval_fn -> forward_density;
init_tet -> no_grad;
init_tet -> min;
init_tet -> forward_density;
init_tet -> clamp;
init_tet -> amax;
init_tet -> abs;
grad_total_variation -> autocast;
grad_total_variation -> log2;
grad_total_variation -> grad_total_variation;
grad_total_variation -> rand;
grad_total_variation -> view;
grad_total_variation -> ValueError;
grad_weight_decay -> autocast;
grad_weight_decay -> grad_weight_decay;
grad_weight_decay -> ValueError;
uniq -> keys;
max_neg_value -> finfo;
rearrange_heads_outer -> reshape;
rearrange_heads_outer -> transpose;
rearrange_heads_outer -> view;
rearrange_heads_inner -> reshape;
rearrange_heads_inner -> transpose;
rearrange_heads_inner -> view;
geglu -> is_contiguous;
geglu -> geglu_fprop;
geglu -> warn;
geglu -> chunk;
geglu -> gelu;
get_adapter_cfg -> resolve_adapter_module_name_;
get_adapter_cfg -> hasattr;
get_adapter_cfg -> print;
get_adapter_cfg -> structured;
get_adapter_cfg -> ValueError;
get_adapter_cfg -> LinearAdapterConfig;
get_adapter_cfg -> MultiHeadAttentionAdapterConfig;
get_adapter_cfg -> TransformerMultiHeadAttentionAdapterConfig;
get_adapter_cfg -> get;
get_adapter_cfg -> RelPositionMultiHeadAttentionAdapterConfig;
_attention -> rearrange_heads_outer;
_attention -> exists;
_attention -> softmax;
_attention -> einsum;
_attention -> rearrange_heads_inner;
_attention -> view;
_attention -> reshape;
_attention -> masked_fill_;
_attention -> te_dpa;
_attention -> stack;
_attention -> flash_attn;
_attention -> expand;
_attention -> unsqueeze;
w -> weighting;
possibly_quantize_sigma -> idx_to_sigma;
possibly_quantize_sigma -> sigma_to_idx;
possibly_quantize_c_noise -> sigma_to_idx;
sigma_to_idx -> view;
sigma_to_idx -> argmin;
sigma_to_idx -> abs;
generate_roughly_equally_spaced_steps -> astype;
generate_roughly_equally_spaced_steps -> linspace;
prepare_inputs -> dict;
prepare_inputs -> cat;
prepare_inputs -> perception;
prepare_inputs -> transpose;
prepare_inputs -> where;
prepare_inputs -> embed_tokens;
prepare_inputs -> range;
prepare_inputs -> add_;
prepare_inputs -> fp32_precision;
prepare_inputs -> no_grad;
prepare_inputs -> encode;
prepare_inputs -> size;
prepare_inputs -> clamp_;
prepare_inputs -> warning;
prepare_inputs -> full;
prepare_inputs -> get;
prepare_inputs -> to;
prepare_inputs -> ones;
prepare_inputs -> abs;
prepare_inputs -> ones_like;
prepare_inputs -> unsqueeze;
prepare_inputs -> replace_placeholders_and_build_targets;
prepare_inputs -> zip;
instantiate_pretrained -> instantiate_from_config;
instantiate_pretrained -> eval;
instantiate_pretrained -> parameters;
encode_with_pretrained -> no_grad;
encode_with_pretrained -> encode;
encode_with_pretrained -> isinstance;
encode_with_pretrained -> mode;
convert_module_to_dtype -> isinstance;
convert_module_to_dtype -> to;
convert_module_to_fp16 -> convert_module_to_dtype;
convert_module_to_fp32 -> convert_module_to_dtype;
convert_module_to_fp8 -> named_modules;
convert_module_to_fp8 -> split;
convert_module_to_fp8 -> setattr;
convert_module_to_fp8 -> isinstance;
convert_module_to_fp8 -> getattr;
convert_module_to_fp8 -> info;
convert_module_to_fp8 -> te_Linear;
convert_module_to_fp8 -> deepcopy;
convert_module_to_fp8 -> _set_module;
_set_module -> split;
_set_module -> setattr;
_set_module -> getattr;
build_timestep_embedding -> arange;
build_timestep_embedding -> exp;
build_timestep_embedding -> concatenate;
build_timestep_embedding -> cos;
build_timestep_embedding -> sin;
build_timestep_embedding -> zeros_like;
build_timestep_embedding -> log;
convert_to_fp16 -> apply;
convert_to_fp16 -> convert_module_to_fp16;
te_fp8_key_mapping -> keys;
te_fp8_key_mapping -> replace;
_input_blocks_mapping -> items;
_input_blocks_mapping -> int;
_input_blocks_mapping -> replace;
_input_blocks_mapping -> str;
_mid_blocks_mapping -> items;
_mid_blocks_mapping -> replace;
_other_blocks_mapping -> items;
_other_blocks_mapping -> replace;
_output_blocks_mapping -> items;
_output_blocks_mapping -> int;
_output_blocks_mapping -> replace;
_output_blocks_mapping -> str;
_sdxl_embedding_mapping -> items;
_sdxl_embedding_mapping -> replace;
_legacy_unet_ckpt_mapping -> compile;
_legacy_unet_ckpt_mapping -> items;
_legacy_unet_ckpt_mapping -> match;
_legacy_unet_ckpt_mapping -> group;
_legacy_unet_ckpt_mapping -> split;
_strip_unet_key_prefix -> items;
_strip_unet_key_prefix -> startswith;
_strip_unet_key_prefix -> replace;
prepare_sampling_loop -> discretization;
prepare_sampling_loop -> default;
prepare_sampling_loop -> sqrt;
prepare_sampling_loop -> len;
prepare_sampling_loop -> new_ones;
get_sigma_gen -> range;
get_sigma_gen -> print;
get_sigma_gen -> tqdm;
sampler_step -> denoise;
sampler_step -> to_d;
sampler_step -> append_dims;
sampler_step -> euler_step;
sampler_step -> possible_correction_step;
sampler_step -> randn_like;
sampler_step -> get_ancestral_step;
sampler_step -> ancestral_euler_step;
sampler_step -> ancestral_step;
sampler_step -> sum;
sampler_step -> get_variables;
sampler_step -> where;
sampler_step -> to_sigma;
sampler_step -> get_mult;
possible_correction_step -> sum;
possible_correction_step -> denoise;
possible_correction_step -> to_d;
possible_correction_step -> where;
possible_correction_step -> append_dims;
get_gamma -> min;
ancestral_euler_step -> to_d;
ancestral_euler_step -> append_dims;
ancestral_euler_step -> euler_step;
ancestral_step -> where;
ancestral_step -> append_dims;
ancestral_step -> noise_sampler;
get_variables -> to_neg_log_sigma;
to_neg_log_sigma -> neg;
to_neg_log_sigma -> log;
get_mult -> expm1;
get_mult -> to_sigma;
to_sigma -> exp;
to_sigma -> neg;
betas_for_alpha_bar -> range;
betas_for_alpha_bar -> array;
betas_for_alpha_bar -> append;
betas_for_alpha_bar -> min;
betas_for_alpha_bar -> alpha_bar;
get_idx -> arange;
nll -> log;
nll -> Tensor;
nll -> sum;
nll -> pow;
possibly_get_ucg_val -> range;
possibly_get_ucg_val -> len;
possibly_get_ucg_val -> choice;
expand_dims_like -> dim;
expand_dims_like -> unsqueeze;
text_transformer_forward -> enumerate;
text_transformer_forward -> checkpoint;
text_transformer_forward -> r;
text_transformer_forward -> len;
text_transformer_forward -> is_scripting;
text_transformer_forward -> permute;
build_tokenizer -> get_nmt_tokenizer;
build_tokenizer -> get_preprocess_fns;
build_tokenizer -> get;
build_tokenizer -> isinstance;
build_tokenizer -> SentencePieceTokenizer;
build_tokenizer -> add_special_tokens;
build_tokenizer -> TiktokenTokenizer;
build_tokenizer -> GPT2Tokenizer;
build_tokenizer -> ValueError;
build_tokenizer -> NotImplementedError;
build_tokenizer -> is_tensor;
build_tokenizer -> decode;
build_tokenizer -> numpy;
build_tokenizer -> tolist;
build_tokenizer -> type;
build_tokenizer -> cpu;
_vocab_size_with_padding -> info;
pick_and_pop -> list;
pick_and_pop -> dict;
pick_and_pop -> map;
pick_and_pop -> zip;
pick_and_pop -> pop;
group_dict_by_key -> keys;
group_dict_by_key -> dict;
group_dict_by_key -> bool;
group_dict_by_key -> int;
group_dict_by_key -> cond;
string_begins_with -> startswith;
group_by_key_prefix -> group_dict_by_key;
group_by_key_prefix -> partial;
groupby_prefix_and_trim -> group_dict_by_key;
groupby_prefix_and_trim -> dict;
groupby_prefix_and_trim -> partial;
groupby_prefix_and_trim -> map;
groupby_prefix_and_trim -> tuple;
groupby_prefix_and_trim -> items;
groupby_prefix_and_trim -> len;
get_geglu_ext -> load;
geglu_fprop -> custom_op;
geglu_fprop -> is_contiguous;
geglu_fprop -> get_geglu_ext;
geglu_fprop -> empty;
geglu_fprop -> geglu;
geglu_fprop -> data_ptr;
geglu_fprop -> numel;
geglu_fprop -> current_stream;
geglu_fprop_fake -> is_contiguous;
geglu_fprop_fake -> empty;
geglu_bprop -> custom_op;
geglu_bprop -> is_contiguous;
geglu_bprop -> get_geglu_ext;
geglu_bprop -> empty_like;
geglu_bprop -> geglu_bwd;
geglu_bprop -> data_ptr;
geglu_bprop -> numel;
geglu_bprop -> current_stream;
geglu_bprop_fake -> is_contiguous;
geglu_bprop_fake -> empty_like;
setup_context -> save_for_backward;
refit -> Refitter;
refit -> set;
refit -> get_all_weights;
refit -> print;
refit -> Weights;
refit -> set_named_weights;
refit -> add;
refit -> refit_cuda_engine;
refit -> exit;
refit -> half;
refit -> data_ptr;
refit -> numel;
refit -> keys;
refit -> len;
refit -> load_distributed;
refit -> collect;
refit -> empty_cache;
refit -> refit;
refit -> torch_dtype_from_precision;
refit -> gather_and_reshard_model;
refit -> get_nemo_to_trtllm_conversion_dict;
refit -> convert;
refit -> dist_model_to_trt_llm_ckpt;
refit -> maybe_cast_to_trt_dtype;
refit -> items;
refit -> isinstance;
refit -> ValueError;
refit -> remove;
refit -> warning;
refit -> Logger;
refit -> append;
refit -> get_weights_prototype;
refit -> type;
filter_func -> compile;
filter_func -> match;
_threshold_sample -> reshape;
_threshold_sample -> abs;
_threshold_sample -> quantile;
_threshold_sample -> clamp;
_threshold_sample -> unsqueeze;
_threshold_sample -> to;
_threshold_sample -> float;
get_velocity -> to;
get_velocity -> flatten;
get_velocity -> len;
get_velocity -> unsqueeze;
getattr_recursive -> find;
getattr_recursive -> getattr;
getattr_recursive -> getattr_recursive;
setattr_recursive -> setattr;
setattr_recursive -> getattr_recursive;
setattr_recursive -> join;
setattr_recursive -> split;
apply_with_stopping_condition -> stopping_condition;
apply_with_stopping_condition -> apply_condition;
apply_with_stopping_condition -> children;
apply_with_stopping_condition -> apply_fn;
apply_with_stopping_condition -> apply_with_stopping_condition;
_inject_model_parallel_rank_for_ckpt -> join;
_inject_model_parallel_rank_for_ckpt -> inject_model_parallel_rank;
schedule -> min;
schedule -> print;
schedule -> cos;
schedule -> find_in_interval;
pad_with_zeros -> zeros;
pad_with_zeros -> cat;
get_unique_embedder_keys_from_conditioner -> list;
do_sample -> manual_seed;
do_sample -> no_grad;
do_sample -> Generator;
do_sample -> autocast;
do_sample -> ema_scope;
do_sample -> get_batch;
do_sample -> get_unconditional_conditioning;
do_sample -> to;
do_sample -> sampler;
do_sample -> decode_first_stage;
do_sample -> clamp;
do_sample -> get_unique_embedder_keys_from_conditioner;
do_sample -> isinstance;
do_sample -> prod;
do_sample -> denoiser;
do_sample -> filter;
do_sample -> print;
do_sample -> map;
do_sample -> randn;
do_sample -> len;
get_input_image_tensor -> print;
get_input_image_tensor -> map;
get_input_image_tensor -> resize;
get_input_image_tensor -> array;
get_input_image_tensor -> transpose;
get_input_image_tensor -> to;
get_input_image_tensor -> convert;
get_input_image_tensor -> from_numpy;
do_img2img -> manual_seed;
do_img2img -> no_grad;
do_img2img -> Generator;
do_img2img -> autocast;
do_img2img -> ema_scope;
do_img2img -> get_batch;
do_img2img -> get_unconditional_conditioning;
do_img2img -> randn_like;
do_img2img -> discretization;
do_img2img -> to;
do_img2img -> sampler;
do_img2img -> decode_first_stage;
do_img2img -> clamp;
do_img2img -> get_unique_embedder_keys_from_conditioner;
do_img2img -> map;
do_img2img -> encode_first_stage;
do_img2img -> sqrt;
do_img2img -> denoiser;
do_img2img -> filter;
do_img2img -> append_dims;
do_img2img -> randn;
get_discretization_config -> ValueError;
image_to_image -> get_sampler_config;
image_to_image -> to_container;
image_to_image -> do_img2img;
image_to_image -> Img2ImgDiscretizationWrapper;
_do_parallel_data_prefetch -> put;
_do_parallel_data_prefetch -> func;
parallel_data_prefetch -> range;
parallel_data_prefetch -> info;
parallel_data_prefetch -> time;
parallel_data_prefetch -> isinstance;
parallel_data_prefetch -> ValueError;
parallel_data_prefetch -> Queue;
parallel_data_prefetch -> proc;
parallel_data_prefetch -> concatenate;
parallel_data_prefetch -> TypeError;
parallel_data_prefetch -> int;
parallel_data_prefetch -> start;
parallel_data_prefetch -> get;
parallel_data_prefetch -> join;
parallel_data_prefetch -> list;
parallel_data_prefetch -> asarray;
parallel_data_prefetch -> enumerate;
parallel_data_prefetch -> terminate;
parallel_data_prefetch -> extend;
parallel_data_prefetch -> values;
parallel_data_prefetch -> array_split;
parallel_data_prefetch -> len;
parallel_data_prefetch -> type;
_video_speech_collate_fn -> list;
_video_speech_collate_fn -> item;
_video_speech_collate_fn -> stack;
_video_speech_collate_fn -> zip;
_video_speech_collate_fn -> len;
_video_speech_collate_fn -> append;
_video_speech_collate_fn -> tensor;
_video_speech_collate_fn -> ValueError;
_video_speech_collate_fn -> max;
_video_speech_collate_fn -> pad;
get_video_to_text_bpe_dataset_from_config -> get;
get_video_to_text_bpe_dataset_from_config -> warning;
get_video_to_text_bpe_dataset_from_config -> NotImplementedError;
get_video_to_text_bpe_dataset_from_config -> get_tarred_dataset;
get_video_to_text_bpe_dataset_from_config -> get_bpe_dataset;
get_video_to_text_bpe_dataset_from_config -> isclose;
get_video_to_text_bpe_dataset_from_config -> sum;
get_video_to_text_char_dataset_from_config -> get;
get_video_to_text_char_dataset_from_config -> warning;
get_video_to_text_char_dataset_from_config -> Exception;
get_video_to_text_char_dataset_from_config -> get_tarred_dataset;
get_video_to_text_char_dataset_from_config -> get_char_dataset;
get_video_to_text_char_dataset_from_config -> isclose;
get_video_to_text_char_dataset_from_config -> sum;
get_circle_indices -> abs;
get_circle_indices -> flatten;
get_circle_indices -> repeat;
get_circle_indices -> sqrt;
get_circle_indices -> squeeze;
get_circle_indices -> square;
get_circle_indices -> nonzero;
get_circle_indices -> linspace;
get_circle_indices -> unsqueeze;
maybe_cast_to_list -> isinstance;
maybe_cast_to_list -> numpy;
maybe_cast_to_list -> maybe_cast_to_list;
maybe_cast_to_list -> tolist;
maybe_cast_to_list -> cpu;
_speechllm_audio_text_collate_fn -> tensor;
_speechllm_audio_text_collate_fn -> _audio_collate_fn;
_speechllm_audio_text_collate_fn -> LongTensor;
_speechllm_audio_text_collate_fn -> min;
_speechllm_audio_text_collate_fn -> list;
_speechllm_audio_text_collate_fn -> _collate_item;
_speechllm_audio_text_collate_fn -> build_loss_mask;
_speechllm_audio_text_collate_fn -> max;
_speechllm_audio_text_collate_fn -> ceil_to_nearest;
_speechllm_audio_text_collate_fn -> range;
_speechllm_audio_text_collate_fn -> len;
build_loss_mask -> float;
build_loss_mask -> len;
build_loss_mask -> range;
_speechllm_multi_audio_text_collate_fn -> _audio_collate_fn;
_speechllm_multi_audio_text_collate_fn -> range;
_speechllm_multi_audio_text_collate_fn -> _speechllm_audio_text_collate_fn;
_speechllm_multi_audio_text_collate_fn -> list;
_speechllm_multi_audio_text_collate_fn -> LongTensor;
_speechllm_multi_audio_text_collate_fn -> len;
get_tarred_audio_text_dataset -> convert_to_config_list;
get_tarred_audio_text_dataset -> get;
get_tarred_audio_text_dataset -> enumerate;
get_tarred_audio_text_dataset -> get_chain_dataset;
get_tarred_audio_text_dataset -> len;
get_tarred_audio_text_dataset -> ValueError;
get_tarred_audio_text_dataset -> warning;
get_tarred_audio_text_dataset -> zip;
get_tarred_audio_text_dataset -> TarredAudioTextDataset;
get_tarred_audio_text_dataset -> open_dict;
get_tarred_audio_text_dataset -> append;
get_tarred_audio_text_dataset -> isinstance;
get_tarred_audio_text_dataset -> range;
get_concat_tarred_audio_text_dataset -> enumerate;
get_concat_tarred_audio_text_dataset -> get;
get_concat_tarred_audio_text_dataset -> ConcatDataset;
get_concat_tarred_audio_text_dataset -> zip;
get_concat_tarred_audio_text_dataset -> deepcopy;
get_concat_tarred_audio_text_dataset -> get_tarred_audio_text_dataset;
get_concat_tarred_audio_text_dataset -> append;
get_concat_tarred_audio_text_dataset -> info;
get_concat_tarred_audio_text_dataset -> isinstance;
get_concat_tarred_audio_text_dataset -> len;
get_tarred_audio_text_dataset_from_config -> get;
get_tarred_audio_text_dataset_from_config -> get_data_parallel_world_size;
get_tarred_audio_text_dataset_from_config -> get_concat_tarred_audio_text_dataset;
get_tarred_audio_text_dataset_from_config -> get_tarred_audio_text_dataset;
get_tarred_audio_text_dataset_from_config -> warning;
get_audio_text_dataset_from_config -> isinstance;
get_audio_text_dataset_from_config -> info;
get_audio_text_dataset_from_config -> enumerate;
get_audio_text_dataset_from_config -> split;
get_audio_text_dataset_from_config -> get;
get_audio_text_dataset_from_config -> zip;
get_audio_text_dataset_from_config -> get_num_samples_from_files;
get_audio_text_dataset_from_config -> get_datasets_weights_and_num_samples;
get_audio_text_dataset_from_config -> sum;
get_audio_text_dataset_from_config -> data_cls;
get_audio_text_dataset_from_config -> append;
get_audio_text_dataset_from_config -> BlendableDataset;
get_audio_text_dataset_from_config -> len;
get_audio_text_dataset_from_config -> ValueError;
get_audio_text_dataset_from_config -> max;
get_audio_text_dataset_from_config -> getattr;
get_num_samples_from_files -> isinstance;
get_num_samples_from_files -> split;
get_num_samples_from_files -> open;
get_num_samples_from_files -> list;
get_num_samples_from_files -> len;
get_num_samples_from_files -> append;
get_num_samples_from_files -> readlines;
build_speechllm_dataset -> get;
build_speechllm_dataset -> process_augmentations;
build_speechllm_dataset -> warning;
build_speechllm_dataset -> PromptFormatterTextProcessing;
build_speechllm_dataset -> LhotseAudioQuestionAnswerDataset;
build_speechllm_dataset -> get_tarred_audio_text_dataset_from_config;
build_speechllm_dataset -> get_audio_text_dataset_from_config;
build_speechllm_dataset -> get_data_parallel_rank;
build_speechllm_dataset -> get_data_parallel_world_size;
build_speechllm_dataloader -> get;
build_speechllm_dataloader -> info;
build_speechllm_dataloader -> isinstance;
build_speechllm_dataloader -> MegatronPretrainingBatchSampler;
build_speechllm_dataloader -> DataLoader;
build_speechllm_dataloader -> hasattr;
build_speechllm_dataloader -> get_data_parallel_world_size;
build_speechllm_dataloader -> get_lhotse_dataloader_from_config;
build_speechllm_dataloader -> len;
build_speechllm_dataloader -> get_data_parallel_rank;
build_speechllm_dataloader -> update;
build_speechllm_dataloader -> deepcopy;
build_speechllm_dataloader -> append;
build_speechllm_dataloader -> load;
build_speechllm_dataloader -> set_struct;
build_speechllm_dataloader -> Path;
collate_text_data -> len;
collate_text_data -> as_dict;
collate_text_data -> get_max_len;
collate_text_data -> collate_vectors;
collate_text_data -> LongTensor;
collate_text_data -> max;
collate_text_data -> repeat;
collate_text_data -> as_tensor;
collate_text_data -> items;
collate_text_data -> arange;
collate_text_data -> _process_example;
collate_text_data -> build_loss_mask;
collate_text_data -> tolist;
collate_text_data -> stack;
collate_text_data -> zip;
collate_text_data -> numpy;
get_max_len -> max;
get_max_len -> len;
setup_perception_modules -> import_class_by_path;
setup_perception_modules -> imported_cls;
setup_perception_modules -> AudioPerceptionModule;
setup_perception_modules -> MultiAudioPerceptionModule;
setup_perception_modules -> setup_perception_modules;
setup_perception_modules -> super;
_concat_features -> zip;
_concat_features -> stack;
_concat_features -> concat;
_concat_features -> zeros;
_concat_features -> append;
_concat_multi_features -> size;
_concat_multi_features -> range;
_concat_multi_features -> stack;
_concat_multi_features -> to;
_concat_multi_features -> split;
_concat_multi_features -> cat;
_concat_multi_features -> max;
_concat_multi_features -> append;
_concat_multi_features -> len;
_concat_multi_features -> sum;
_concat_multi_features -> pad;
_concat_multi_features -> LongTensor;
inject_perception_input -> get;
inject_perception_input -> word_embeddings;
inject_perception_input -> isinstance;
inject_perception_input -> _create_attention_mask;
inject_perception_input -> build_position_ids;
inject_perception_input -> hasattr;
inject_perception_input -> _concat_features;
inject_perception_input -> _concat_multi_features;
inject_perception_input -> position_embeddings;
inject_perception_input -> contiguous;
inject_perception_input -> scatter_to_sequence_parallel_region;
inject_perception_input -> getattr;
inject_perception_input -> transpose;
inject_perception_input -> view;
inject_perception_input -> zip;
inject_perception_input -> stack;
inject_perception_input -> _concat_embs;
inject_perception_input -> zeros;
inject_perception_input -> append;
inject_perception_input -> tril;
inject_perception_input -> concat;
inject_perception_input -> ones;
inject_perception_input -> float;
inject_perception_input -> embedding_dropout;
inject_perception_input -> clone;
inject_perception_input -> fork;
inject_perception_input -> get_cuda_rng_tracker;
build_position_ids -> size;
build_position_ids -> arange;
build_position_ids -> clone;
build_position_ids -> expand_as;
build_position_ids -> unsqueeze;
_shift_labels_by_emb_len -> zip;
_shift_labels_by_emb_len -> stack;
_shift_labels_by_emb_len -> full;
_shift_labels_by_emb_len -> append;
_get_text_embeddings -> get;
_get_text_embeddings -> word_embeddings;
_get_text_embeddings -> hasattr;
_get_text_embeddings -> transpose;
_get_text_embeddings -> position_embeddings;
_get_text_embeddings -> _construct_forward_input;
_get_text_embeddings -> keys;
_get_text_embeddings -> forward;
_get_text_embeddings -> tolist;
_get_text_embeddings -> to;
_get_text_embeddings -> contiguous;
_get_text_embeddings -> float;
_get_text_embeddings -> scatter_to_sequence_parallel_region;
_get_text_embeddings -> embedding_dropout;
_get_text_embeddings -> clone;
_get_text_embeddings -> fork;
_get_text_embeddings -> get_cuda_rng_tracker;
prepare_llm_input -> get;
prepare_llm_input -> perception;
prepare_llm_input -> inject_perception_input;
prepare_llm_input -> _shift_labels_by_emb_len;
prepare_llm_input -> split;
prepare_llm_input -> stack;
prepare_llm_input -> tolist;
prepare_llm_input -> sum;
prepare_llm_input -> transpose;
prepare_llm_input -> perception_cross_attn;
prepare_llm_input -> _create_attention_mask;
prepare_llm_input -> ValueError;
prepare_llm_input -> hasattr;
prepare_llm_input -> log;
prepare_llm_input -> contiguous;
prepare_llm_input -> scatter_to_sequence_parallel_region;
prepare_llm_input -> _get_text_embeddings;
prepare_llm_input -> mean;
prepare_llm_input -> arange;
_gpt_forward -> type;
_gpt_forward -> model;
_build_dataset -> build_speechllm_dataset;
_build_dataset -> _build_dataset;
_build_dataset -> super;
_build_dataset -> get_indexed_dataset_;
_build_dataset -> info;
_build_dataset -> hasattr;
_build_dataset -> dict;
_build_dataset -> get_dataset;
_build_dataset -> format;
_build_dataset -> get_doc_idx;
_build_dataset -> set_doc_idx;
_build_dataset -> int;
_build_dataset -> get;
_build_dataset -> GPTDataset;
_build_dataset -> arange;
_build_dataset -> zip;
_build_dataset -> get_datasets_weights_and_num_samples;
_build_dataset -> sum;
_build_dataset -> warning;
_build_dataset -> BlendableDataset;
_build_dataset -> GPTEmbeddingDataset;
_build_dataset -> ValueError;
_build_dataset -> len;
_build_dataset -> append;
_build_dataset -> NotImplementedError;
_build_dataset -> isinstance;
_build_dataset -> GPTRerankerDataset;
_build_dataset -> TextToTextXNLIDataset;
_build_dataset -> TextToTextGLUEDataset;
_build_dataset -> get_data_parallel_world_size;
_build_dataset -> dataset_cls;
_build_dataset -> T0Dataset;
build_data_loader -> build_speechllm_dataloader;
build_data_loader -> info;
build_data_loader -> isinstance;
build_data_loader -> MegatronPretrainingBatchSampler;
build_data_loader -> DataLoader;
build_data_loader -> len;
build_data_loader -> get_data_parallel_rank;
build_data_loader -> get_data_parallel_world_size;
build_data_loader -> DistributedSampler;
_modify_audio_encoder_config -> open_dict;
_modify_audio_encoder_config -> get;
_modify_audio_encoder_config -> get_nested_dict_value;
_modify_audio_encoder_config -> values;
_modify_audio_encoder_config -> len;
get_pretraind_audio_model -> get;
get_pretraind_audio_model -> endswith;
get_pretraind_audio_model -> get_class;
get_pretraind_audio_model -> ValueError;
get_pretraind_audio_model -> info;
get_pretraind_audio_model -> restore_from;
get_pretraind_audio_model -> from_pretrained;
get_speaker_model_and_config -> get;
get_speaker_model_and_config -> get_class;
get_speaker_model_and_config -> endswith;
get_speaker_model_and_config -> info;
get_speaker_model_and_config -> restore_from;
get_speaker_model_and_config -> from_pretrained;
get_audio_encoder_models_and_configs -> items;
get_audio_encoder_models_and_configs -> get;
get_audio_encoder_models_and_configs -> get_class;
get_audio_encoder_models_and_configs -> endswith;
get_audio_encoder_models_and_configs -> get_pretraind_audio_model;
get_audio_encoder_models_and_configs -> info;
get_audio_encoder_models_and_configs -> restore_from;
get_audio_encoder_models_and_configs -> from_pretrained;
load_pretrained_audio_weights -> get;
load_pretrained_audio_weights -> info;
load_pretrained_audio_weights -> items;
load_pretrained_audio_weights -> load_state_dict;
load_pretrained_audio_weights -> state_dict;
_build_vocab -> get;
_build_vocab -> _vocab_size_with_padding;
_build_vocab -> add_special_tokens_to_tokenizer;
_build_vocab -> _build_vocab;
_build_vocab -> super;
_build_vocab -> hasattr;
_build_vocab -> setup_multilingual_ids_and_processors;
_build_vocab -> list;
_build_vocab -> setup_pre_and_post_processing_utils;
_build_vocab -> ValueError;
_build_vocab -> values;
get_peft_state_dict -> get_peft_state_dict;
get_peft_state_dict -> super;
get_peft_state_dict -> items;
get_peft_state_dict -> union;
get_peft_state_dict -> hasattr;
get_peft_state_dict -> isinstance;
get_peft_state_dict -> enumerate;
get_peft_state_dict -> filter_state_dict;
get_peft_state_dict -> replace;
get_peft_state_dict -> state_dict;
get_peft_state_dict -> _unwrap_model;
setup_metric -> hasattr;
setup_metric -> ValueError;
setup_metric -> KeyError;
setup_metric -> get;
setup_metric -> len;
setup_metric -> metric_cls;
setup_metric -> isinstance;
setup_metric -> keys;
setup_metric -> metric;
setup_metric -> range;
setup_metric -> ExactStringPerCategoryMatchMetric;
setup_metric -> metric_class;
inference_step -> next;
inference_step -> validation_step;
inference_step -> get;
inference_step -> predict_step;
inference_step -> isnan;
inference_step -> _reconfigure_and_process_inference_batch;
inference_step -> pop;
inference_step -> chain;
inference_step -> get_inference_config;
inference_step -> warning;
inference_step -> set_inference_config;
inference_step -> ids_to_text;
inference_step -> zip;
inference_step -> info;
inference_step -> range;
inference_step -> super;
inference_step -> items;
inference_step -> startswith;
inference_step -> text_to_ids;
inference_step -> append;
inference_step -> remove_punctuations;
inference_step -> len;
inference_step -> tolist;
inference_step -> endswith;
inference_step -> lower;
inference_step -> strip;
inference_step -> item;
inference_step -> _validation_step_internal;
inference_step -> type;
inference_step -> inference_step_validation_call;
inference_step -> isinstance;
inference_step -> fwd_bwd_step;
inference_step -> decode;
inference_step -> enumerate;
inference_step -> update;
inference_step -> cast_for_metric;
inference_step -> metric;
inference_step -> forward_step;
inference_step -> reduce;
inference_step -> forward;
inference_step -> clean_end_string;
_reconfigure_and_process_inference_batch -> size;
_reconfigure_and_process_inference_batch -> get_current_global_batch_size;
_reconfigure_and_process_inference_batch -> get_data_parallel_world_size;
_reconfigure_and_process_inference_batch -> AppState;
_reconfigure_and_process_inference_batch -> reconfigure_num_microbatches_calculator;
_reconfigure_and_process_inference_batch -> _reconfigure_microbatch_calculator;
inference_epoch_end -> isinstance;
inference_epoch_end -> enumerate;
inference_epoch_end -> to;
inference_epoch_end -> AppState;
inference_epoch_end -> _restore_activation_checkpointing_args;
inference_epoch_end -> hasattr;
inference_epoch_end -> all;
inference_epoch_end -> is_pipeline_last_stage;
inference_epoch_end -> broadcast;
inference_epoch_end -> log;
inference_epoch_end -> _determine_log_key;
inference_epoch_end -> append;
inference_epoch_end -> all_gather_object;
inference_epoch_end -> set;
inference_epoch_end -> range;
inference_epoch_end -> barrier;
inference_epoch_end -> clear;
inference_epoch_end -> sum;
inference_epoch_end -> len;
inference_epoch_end -> reconfigure_num_microbatches_calculator;
inference_epoch_end -> warning;
inference_epoch_end -> get;
inference_epoch_end -> cuda;
inference_epoch_end -> get_last_rank;
inference_epoch_end -> get_data_parallel_world_size;
inference_epoch_end -> reset;
inference_epoch_end -> info;
inference_epoch_end -> write_predictions_to_file;
inference_epoch_end -> isinf;
inference_epoch_end -> isnan;
inference_epoch_end -> mean;
inference_epoch_end -> get_data_parallel_group;
inference_epoch_end -> zip;
inference_epoch_end -> compute;
inference_epoch_end -> items;
inference_epoch_end -> ValueError;
inference_epoch_end -> tensor;
inference_epoch_end -> metric_fn;
inference_epoch_end -> item;
inference_epoch_end -> stack;
inference_epoch_end -> vstack;
inference_epoch_end -> type;
inference_epoch_end -> str;
inference_epoch_end -> add;
inference_epoch_end -> Tensor;
inference_epoch_end -> corpus_bleu;
inference_epoch_end -> gather_and_maybe_write_predictions;
inference_epoch_end -> view;
inference_epoch_end -> getattr;
_restore_activation_checkpointing_args -> get_model_module_list;
_restore_activation_checkpointing_args -> get;
_determine_log_key -> hasattr;
_determine_log_key -> isinstance;
_determine_log_key -> get_validation_dataloader_prefix;
_determine_log_key -> startswith;
_determine_log_key -> strip;
_determine_log_key -> get_test_dataloader_prefix;
write_predictions_to_file -> makedirs;
write_predictions_to_file -> join;
write_predictions_to_file -> info;
write_predictions_to_file -> open;
write_predictions_to_file -> zip;
write_predictions_to_file -> len;
write_predictions_to_file -> items;
write_predictions_to_file -> write;
write_predictions_to_file -> dumps;
write_predictions_to_file -> defaultdict;
write_predictions_to_file -> enumerate;
write_predictions_to_file -> split;
write_predictions_to_file -> basename;
write_predictions_to_file -> int;
write_predictions_to_file -> load;
write_predictions_to_file -> debug;
write_predictions_to_file -> dump;
write_predictions_to_file -> get_predicted_dialog;
write_predictions_to_file -> append;
setup_eval_dataloader -> isinstance;
setup_eval_dataloader -> build_data_loader;
setup_eval_dataloader -> append;
setup_eval_dataloader -> build_pretraining_data_loader;
setup_predict_dataloader -> _build_dataset;
setup_predict_dataloader -> isinstance;
setup_predict_dataloader -> build_data_loader;
setup_predict_dataloader -> append;
maybe_build_test -> hasattr;
maybe_build_test -> info;
maybe_build_test -> _build_dataset;
maybe_build_test -> get;
maybe_build_test -> len;
maybe_setup_test -> hasattr;
maybe_setup_test -> setup_eval_dataloader;
maybe_setup_test -> get;
configure_sharded_model -> named_modules;
configure_sharded_model -> find_frozen_submodules;
configure_sharded_model -> append;
configure_sharded_model -> _setup_model;
configure_sharded_model -> cuda;
configure_sharded_model -> extend;
configure_sharded_model -> current_device;
configure_sharded_model -> isinstance;
configure_sharded_model -> list;
configure_sharded_model -> all;
configure_sharded_model -> parameters;
configure_sharded_model -> configure_sharded_model;
configure_sharded_model -> super;
configure_sharded_model -> debug;
find_frozen_submodules -> named_modules;
find_frozen_submodules -> isinstance;
find_frozen_submodules -> list;
find_frozen_submodules -> all;
find_frozen_submodules -> append;
find_frozen_submodules -> parameters;
_setup_model -> AppState;
_setup_model -> get_data_parallel_group;
_setup_model -> _setup_model;
_setup_model -> register_comm_hook;
_setup_model -> super;
load_frozen_model -> get;
load_frozen_model -> restore_from;
load_frozen_model -> deepcopy;
load_frozen_model -> info;
load_frozen_model -> NLPSaveRestoreConnector;
load_frozen_model -> set_struct;
load_frozen_model -> open_dict;
load_frozen_model -> hasattr;
load_frozen_model -> ValueError;
load_frozen_model -> print;
load_frozen_model -> MegatronT5OverrideModel;
load_frozen_model -> sum;
load_frozen_model -> add_phone_tokens_to_special_tokens;
load_frozen_model -> bool;
load_frozen_model -> numel;
load_frozen_model -> parameters;
init_model -> load_frozen_model;
init_model -> get;
init_model -> hasattr;
init_model -> list;
init_model -> VirtualPromptStyle;
init_model -> load_task_templates;
init_model -> get_pseudo_tokens;
init_model -> isinstance;
init_model -> tokens_to_ids;
init_model -> first_stage_of_pipeline;
init_model -> add_special_tokens;
init_model -> ValueError;
init_model -> AccuracyScore;
init_model -> BLEUScore;
init_model -> ROUGEScores;
init_model -> NLPSaveRestoreConnector;
init_model -> isdir;
init_model -> restore_from;
init_model -> setattr;
init_model -> open_dict;
init_model -> to;
init_model -> ids_to_tokens;
init_model -> torch_dtype_from_precision;
_concat_embs -> zip;
_concat_embs -> stack;
_concat_embs -> zeros;
_concat_embs -> append;
_concat_embs -> get;
_concat_embs -> concat;
load_audio_model -> endswith;
load_audio_model -> info;
load_audio_model -> restore_from;
load_audio_model -> from_pretrained;
setup_training_dataloader -> hasattr;
setup_training_dataloader -> compute_consumed_samples;
setup_training_dataloader -> build_data_loader;
_metrics_require_string2category_map -> set;
_validation_step_internal -> eval;
_validation_step_internal -> fwd_bwd_step;
_validation_step_internal -> train;
_validation_step_internal -> append;
_validation_step_internal -> type;
_validation_step_internal -> len;
maybe_preprocess_audio -> ValueError;
maybe_preprocess_audio -> preprocessor;
_have_same_length -> sum;
align_feat_seq_list -> zip;
align_feat_seq_list -> ValueError;
align_feat_seq_list -> size;
align_feat_seq_list -> append;
align_feat_seq_list -> min;
align_feat_seq_list -> max;
align_feat_seq_list -> round;
align_feat_seq_list -> abs;
align_feat_seq_list -> reshape;
align_feat_seq_list -> long;
align_feat_seq_list -> repeat_interleave;
align_feat_seq_list -> cat;
align_feat_seq_list -> mean;
forward_speaker -> encoder;
forward_speaker -> int;
forward_speaker -> view;
forward_speaker -> repeat_interleave;
forward_speaker -> decoder;
forward_speaker -> ValueError;
forward_speaker -> preprocessor;
forward_speaker -> spec_augmentation;
forward_speaker -> cat;
forward_speaker -> zeros;
switch -> type_as;
switch -> unsqueeze;
model_inference_strategy_dispatcher -> isinstance;
model_inference_strategy_dispatcher -> CrossAttendAudioToTextGenerationStrategy;
model_inference_strategy_dispatcher -> AudioToTextGenerationStrategy;
model_inference_strategy_dispatcher -> model_inference_strategy_dispatcher;
model_inference_strategy_dispatcher -> GriffinModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> GPTModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> NevaModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> PromptLearningModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> RetroModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> McoreRetroModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> ValueError;
model_inference_strategy_dispatcher -> RetroQAModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> RetroFileQAModelTextGenerationStrategy;
model_inference_strategy_dispatcher -> SpeechToTextGenerationStrategy;
init_batch -> perception;
init_batch -> inject_perception_input;
init_batch -> split;
init_batch -> shift_tokens_by_multi_audios;
init_batch -> stack;
init_batch -> _shift_labels_by_emb_len;
init_batch -> tolist;
init_batch -> sum;
init_batch -> get;
init_batch -> prepare_llm_input;
init_batch -> build_position_ids;
init_batch -> transpose;
init_batch -> zeros_like;
init_batch -> cuda;
init_batch -> size;
init_batch -> arange;
init_batch -> repeat;
init_batch -> range;
init_batch -> ones_like;
init_batch -> contiguous;
init_batch -> unsqueeze;
init_batch -> get_knn;
init_batch -> append;
init_batch -> _store_retrieved;
init_batch -> loads;
init_batch -> get_ltor_masks_and_position_ids;
init_batch -> LongTensor;
init_batch -> permute;
init_batch -> long;
init_batch -> zeros;
init_batch -> isinstance;
init_batch -> view;
shift_tokens_by_multi_audios -> range;
shift_tokens_by_multi_audios -> stack;
shift_tokens_by_multi_audios -> split;
shift_tokens_by_multi_audios -> cat;
shift_tokens_by_multi_audios -> pad;
shift_tokens_by_multi_audios -> append;
shift_tokens_by_multi_audios -> len;
shift_tokens_by_multi_audios -> zeros;
clip_max_len -> get;
prepare_batch_at_step -> tensor;
prepare_batch_at_step -> view;
prepare_batch_at_step -> _get_text_embeddings;
prepare_batch_at_step -> switch;
prepare_batch_at_step -> unsqueeze;
prepare_batch_at_step -> current_device;
prepare_batch_at_step -> get;
prepare_batch_at_step -> transpose;
prepare_batch_at_step -> perception_cross_attn;
prepare_batch_at_step -> squeeze;
prepare_batch_at_step -> get_knn;
prepare_batch_at_step -> append;
prepare_batch_at_step -> array;
prepare_batch_at_step -> numel;
prepare_batch_at_step -> contiguous;
prepare_batch_at_step -> ones_like;
prepare_batch_at_step -> repeat;
prepare_batch_at_step -> _store_retrieved;
prepare_batch_at_step -> len;
prepare_batch_at_step -> concat;
prepare_batch_at_step -> range;
prepare_batch_at_step -> InferenceParams;
prepare_batch_at_step -> size;
end_of_generation_condition -> set;
end_of_generation_condition -> add;
end_of_generation_condition -> zip;
end_of_generation_condition -> tensor;
end_of_generation_condition -> len;
end_of_generation_condition -> text_to_ids;
end_of_generation_condition -> ids_to_text;
end_of_generation_condition -> append;
end_of_generation_condition -> tolist;
end_of_generation_condition -> any;
end_of_generation_condition -> endswith;
end_of_generation_condition -> item;
end_of_generation_condition -> _get_end_of_generation_tokens_and_strings;
end_of_generation_condition -> isin;
end_of_generation_condition -> enumerate;
end_of_generation_condition -> list;
send_generate_info -> get_model_parallel_group;
send_generate_info -> get_model_parallel_src_rank;
send_generate_info -> FloatTensor;
send_generate_info -> broadcast;
send_generate_info -> as_tensor;
send_generate_info -> size;
send_generate_info -> frombuffer;
send_generate_info -> dumps;
send_generate_info -> current_device;
get_model_parallel_src_rank -> get_world_size;
get_model_parallel_src_rank -> arange;
get_model_parallel_src_rank -> get_tensor_model_parallel_world_size;
get_model_parallel_src_rank -> get_pipeline_model_parallel_world_size;
get_model_parallel_src_rank -> get_data_parallel_rank;
get_model_parallel_src_rank -> AppState;
get_model_parallel_src_rank -> reshape;
get_model_parallel_src_rank -> min;
receive_generate_info -> get_model_parallel_group;
receive_generate_info -> get_model_parallel_src_rank;
receive_generate_info -> empty;
receive_generate_info -> broadcast;
receive_generate_info -> int;
receive_generate_info -> bool;
receive_generate_info -> float;
receive_generate_info -> tobytes;
receive_generate_info -> loads;
receive_generate_info -> item;
receive_generate_info -> current_device;
receive_generate_info -> numpy;
receive_generate_info -> cpu;
synced_generate -> item;
synced_generate -> isinstance;
synced_generate -> is_pipeline_last_stage;
synced_generate -> NotImplementedError;
synced_generate -> sample_sequence_batch;
synced_generate -> get_pipeline_model_parallel_last_rank;
synced_generate -> get_embedding_group;
synced_generate -> is_pipeline_first_stage;
synced_generate -> min;
synced_generate -> broadcast;
synced_generate -> empty;
synced_generate -> size;
synced_generate -> device;
synced_generate -> tab_sample_sequence_batch;
sample_sequence_batch -> AppState;
sample_sequence_batch -> reconfigure_num_microbatches_calculator;
sample_sequence_batch -> get;
sample_sequence_batch -> no_grad;
sample_sequence_batch -> init_batch;
sample_sequence_batch -> item;
sample_sequence_batch -> size;
sample_sequence_batch -> cuda;
sample_sequence_batch -> clip_max_len;
sample_sequence_batch -> prepare_batch_at_step;
sample_sequence_batch -> forward_step;
sample_sequence_batch -> is_pipeline_last_stage;
sample_sequence_batch -> min;
sample_sequence_batch -> byte;
sample_sequence_batch -> clamp;
sample_sequence_batch -> switch;
sample_sequence_batch -> post_process;
sample_sequence_batch -> get_pipeline_model_parallel_last_rank;
sample_sequence_batch -> get_embedding_group;
sample_sequence_batch -> broadcast;
sample_sequence_batch -> end_of_generation_condition;
sample_sequence_batch -> bool;
sample_sequence_batch -> all;
sample_sequence_batch -> get_pipeline_model_parallel_group;
sample_sequence_batch -> is_pipeline_first_stage;
sample_sequence_batch -> ByteTensor;
sample_sequence_batch -> max;
sample_sequence_batch -> long;
sample_sequence_batch -> gather_from_tensor_model_parallel_region;
sample_sequence_batch -> contiguous;
sample_sequence_batch -> view;
sample_sequence_batch -> float;
sample_sequence_batch -> repetition_penalty;
sample_sequence_batch -> top_k_logits;
sample_sequence_batch -> softmax;
sample_sequence_batch -> nan_to_num;
sample_sequence_batch -> empty_like;
sample_sequence_batch -> zeros;
sample_sequence_batch -> log_softmax;
sample_sequence_batch -> unsqueeze;
sample_sequence_batch -> squeeze;
sample_sequence_batch -> cat;
sample_sequence_batch -> ones;
sample_sequence_batch -> argmax;
sample_sequence_batch -> multinomial;
sample_sequence_batch -> gather;
post_generation_process -> append;
post_generation_process -> split;
tokenize_batch -> pad_batch;
tokenize_batch -> LongTensor;
tokenize_batch -> text_to_ids;
tokenize_batch -> len;
tokenize_batch -> append;
tokenize_batch -> get_knn;
tokenize_batch -> array;
tokenize_batch -> pad;
tokenize_batch -> set;
tokenize_batch -> dumps;
tokenize_batch -> tolist;
tokenize_batch -> zip;
tokenize_batch -> astype;
tokenize_batch -> enumerate;
tokenize_batch -> ValueError;
tokenize_batch -> reshape;
tokenize_batch -> is_chat_input;
tokenize_batch -> getattr;
tokenize_batch -> list;
tokenize_batch -> map;
tokenize_batch -> hasattr;
tokenize_batch -> explode_chat_template_input;
tokenize_batch -> get_prefix_tokens;
tokenize_batch -> type;
tokenize_batch -> neva_process_prompts;
repetition_penalty -> gather;
repetition_penalty -> scatter;
top_k_logits -> float;
top_k_logits -> sort;
top_k_logits -> cumsum;
top_k_logits -> clone;
top_k_logits -> softmax;
top_k_logits -> range;
top_k_logits -> arange;
top_k_logits -> numpy;
top_k_logits -> size;
top_k_logits -> topk;
top_k_logits -> cpu;
replace_prefix -> startswith;
replace_prefix -> replace;
get_text_processor_from_cfg -> TextProcessing;
get_text_processor_from_cfg -> get;
_find_substring_indices -> size;
_find_substring_indices -> unfold;
_find_substring_indices -> all;
_find_substring_indices -> flatten;
_find_substring_indices -> tensor;
_find_substring_indices -> nonzero;
smart_resize -> resize;
smart_resize -> ValueError;
smart_resize -> round;
smart_resize -> sqrt;
smart_resize -> floor;
smart_resize -> max;
smart_resize -> min;
smart_resize -> ceil;
make_builder -> MMapIndexedDatasetBuilder;
make_builder -> MMapRetrievalIndexedDatasetBuilder;
make_builder -> IndexedDatasetBuilder;
make_builder -> __best_fitting_dtype;
_load_tiktoken_bpe -> open;
_load_tiktoken_bpe -> read;
_load_tiktoken_bpe -> b64decode;
_load_tiktoken_bpe -> int;
_load_tiktoken_bpe -> split;
_load_tiktoken_bpe -> splitlines;
__getstate__ -> copy;
__setstate__ -> update;
__setstate__ -> Encoding;
__setstate__ -> _do_init;
__setstate__ -> __setstate__;
__setstate__ -> setdefault;
__setstate__ -> super;
_add_tokens -> ValueError;
_add_tokens -> isinstance;
_convert_id_to_token -> ValueError;
_convert_token_to_id -> ValueError;
_check_files_exist -> exists;
_check_files_exist -> FileNotFoundError;
_get_examples -> info;
_get_examples -> open;
_get_examples -> enumerate;
_get_examples -> zip;
_get_examples -> text_to_ids;
_get_examples -> append;
_get_examples -> strip;
_get_examples -> len;
_get_examples -> TextMemMapDataset;
_get_examples -> _build_samples_mapping;
_get_examples -> _get_indexed_dataset;
_get_sample -> isinstance;
_get_sample -> item;
_get_sample -> len;
_get_sample -> range;
_get_sample -> append;
_get_sample -> get;
_get_sample -> concatenate;
_get_sample -> astype;
_get_sample -> default_rng;
_get_sample -> integers;
get_samples_mapping -> format;
get_samples_mapping -> join;
get_samples_mapping -> print;
get_samples_mapping -> time;
get_samples_mapping -> info;
get_samples_mapping -> build_mapping;
get_samples_mapping -> save;
get_samples_mapping -> barrier;
get_samples_mapping -> LongTensor;
get_samples_mapping -> all_reduce;
get_samples_mapping -> load;
get_samples_mapping -> hasattr;
get_samples_mapping -> deallocate_indexed_dataset_memory;
get_samples_mapping -> ValueError;
get_samples_mapping -> basename;
get_samples_mapping -> get_rank;
get_samples_mapping -> isfile;
get_samples_mapping -> make_indexed_dataset_compatibility;
get_samples_mapping -> is_global_rank_zero;
get_samples_mapping -> item;
get_samples_mapping -> iinfo;
get_samples_mapping -> getattr;
get_samples_mapping -> compile_helper;
get_samples_mapping -> ImportError;
get_samples_mapping -> get_data_parallel_group;
get_samples_mapping -> get_pipeline_model_parallel_group;
get_samples_mapping -> get_world_size;
get_samples_mapping -> get_tensor_model_parallel_group;
_get_indexed_dataset -> get_indexed_dataset_;
get_indexed_dataset_ -> info;
get_indexed_dataset_ -> time;
get_indexed_dataset_ -> make_indexed_dataset;
get_indexed_dataset_ -> make_indexed_dataset_compatibility;
get_indexed_dataset_ -> format;
normalize_chinese_answer -> separate_char;
normalize_chinese_answer -> join;
normalize_chinese_answer -> remove_punc;
normalize_chinese_answer -> append;
separate_char -> append;
normalize_answer -> white_space_fix;
normalize_answer -> sub;
normalize_answer -> join;
normalize_answer -> set;
normalize_answer -> lower;
normalize_answer -> remove_articles;
normalize_answer -> split;
normalize_answer -> remove_punc;
get_label_stats -> Counter;
get_label_stats -> sum;
get_label_stats -> open;
get_label_stats -> most_common;
get_label_stats -> values;
get_label_stats -> write;
get_label_stats -> max;
get_label_stats -> info;
get_label_stats -> keys;
get_label_stats -> round;
get_multi_label_stats -> len;
get_multi_label_stats -> enumerate;
get_multi_label_stats -> sorted;
get_multi_label_stats -> info;
partition_data -> len;
partition_data -> int;
partition_data -> set;
partition_data -> append;
partition_data -> enumerate;
partition_data -> sample;
partition_data -> range;
write_files -> open;
write_files -> write;
write_files -> strip;
write_data -> open;
write_data -> write;
write_data -> close;
write_data -> join;
write_data -> lower;
write_data -> str;
write_vocab -> open;
write_vocab -> write;
get_dataset -> get_data;
get_dataset -> len;
get_dataset -> partition;
get_dataset -> ValueError;
get_dataset -> NotImplementedError;
get_dataset -> info;
get_dataset -> arange;
get_dataset -> T5Dataset;
get_dataset -> BertDataset;
get_dataset -> T5LMAdaptedDataset;
get_dataset -> BARTDataset;
get_dataset -> get;
get_dataset -> UL2Dataset;
get_dataset -> instantiate;
get_dataset -> get_sampler;
get_dataset -> open_dict;
get_dataset -> pop;
get_data -> set;
get_data -> append;
get_data -> open;
get_data -> load;
get_data -> add;
get_data -> split;
get_data -> extend;
get_data -> strip;
get_data -> len;
partition -> len;
partition -> int;
partition -> set;
partition -> enumerate;
partition -> sample;
partition -> range;
partition -> append;
map_entities -> set;
map_entities -> append;
map_entities -> extend;
get_entities -> reverse_dict;
get_entities -> open;
get_entities -> load;
get_entities -> map_entities;
get_intent_labels -> open;
get_intent_labels -> strip;
get_stats -> info;
get_stats -> asarray;
get_stats -> min;
get_stats -> max;
get_stats -> mean;
get_stats -> median;
get_stats -> percentile;
is_whitespace -> ord;
get_labels_to_labels_id_mapping -> readlines;
get_labels_to_labels_id_mapping -> strip;
get_labels_to_labels_id_mapping -> open;
get_labels_to_labels_id_mapping -> range;
get_labels_to_labels_id_mapping -> len;
remove_punctuation_from_sentence -> sub;
remove_punctuation_from_sentence -> lower;
dataset_to_ids -> str;
dataset_to_ids -> isfile;
dataset_to_ids -> info;
dataset_to_ids -> load;
dataset_to_ids -> readlines;
dataset_to_ids -> tqdm;
dataset_to_ids -> open;
dataset_to_ids -> decode;
dataset_to_ids -> text_to_ids;
dataset_to_ids -> append;
dataset_to_ids -> dump;
dataset_to_ids -> rstrip;
dataset_to_ids -> is_initialized;
dataset_to_ids -> get_envint;
get_envint -> get_env;
get_freq_weights -> values;
get_freq_weights -> items;
get_freq_weights -> len;
get_freq_weights_bce_with_logits_loss -> items;
get_freq_weights_bce_with_logits_loss -> float;
fill_class_weights -> range;
fill_class_weights -> keys;
fill_class_weights -> len;
fill_class_weights -> max;
find_newlines -> index;
find_newlines -> decode;
find_newlines -> len;
find_newlines -> replace;
find_newlines -> split;
load_data_indices -> isfile;
load_data_indices -> rfind;
load_data_indices -> open;
load_data_indices -> load;
get_train_examples -> NotImplementedError;
get_train_examples -> get_dialog_examples;
get_train_examples -> info;
get_train_examples -> _create_examples;
get_train_examples -> _read_tsv;
get_train_examples -> join;
get_dev_examples -> NotImplementedError;
get_dev_examples -> get_dialog_examples;
get_dev_examples -> _create_examples;
get_dev_examples -> _read_tsv;
get_dev_examples -> join;
get_labels -> NotImplementedError;
get_labels -> ValueError;
get_labels -> append;
deprecated_warning -> join;
deprecated_warning -> warning;
deprecated_warning -> sleep;
deprecated_warning -> len;
get_dialog_examples -> open_file;
get_dialog_examples -> range;
get_dialog_examples -> format;
get_dialog_examples -> len;
get_dialog_examples -> split;
get_dialog_examples -> get_continuous_slots;
get_dialog_examples -> DialogueInputExample;
get_dialog_examples -> append;
get_dialog_examples -> int;
get_dialog_examples -> join;
get_dialog_examples -> items;
get_dialog_examples -> open_csv;
get_dialog_examples -> get_relevant_idxs;
get_dialog_examples -> sorted;
get_dialog_examples -> list;
get_dialog_examples -> set;
get_dialog_examples -> isinstance;
get_dialog_examples -> replace;
get_dialog_examples -> enumerate;
get_dialog_examples -> values;
get_dialog_examples -> str;
get_dialog_examples -> open_json;
get_dialog_examples -> literal_eval;
get_dialog_examples -> info;
get_dialog_examples -> ValueError;
get_dialog_examples -> open;
get_dialog_examples -> load;
get_dialog_examples -> exists;
get_dialog_examples -> getsize;
convert_slot_position_to_slot_ids -> range;
convert_slot_position_to_slot_ids -> min;
convert_slot_position_to_slot_ids -> len;
convert_slot_position_to_slot_ids -> split;
truncate_and_pad -> enumerate;
truncate_and_pad -> info;
truncate_and_pad -> append;
truncate_and_pad -> len;
truncate_and_pad -> tokens_to_ids;
get_lm_samples -> range;
get_lm_samples -> info;
get_lm_samples -> len;
get_lm_samples -> get_n_tokens_in_sentence;
get_lm_samples -> max;
get_lm_samples -> append;
get_lm_samples -> format;
get_lm_samples -> format_target;
get_lm_samples -> format_prompt;
preprocess_feature -> max;
preprocess_feature -> transform;
preprocess_feature -> add;
preprocess_feature -> len;
get_n_tokens_in_sentence -> tokenizer;
get_n_tokens_in_sentence -> squeeze;
get_n_tokens_in_sentence -> len;
get_n_tokens_in_sentence -> size;
default_encode -> tokenizer;
default_encode -> squeeze;
linearize_slots -> join;
linearize_slots -> format;
linearize_slots -> items;
linearize_slots -> isinstance;
format_target -> linearize_slots;
format_target -> ValueError;
format_prompt -> sample;
format_prompt -> range;
format_prompt -> len;
format_prompt -> join;
format_prompt -> sorted;
format_prompt -> list;
format_prompt -> split;
remove_invalid_samples -> range;
remove_invalid_samples -> split;
remove_invalid_samples -> len;
remove_invalid_samples -> append;
remove_invalid_samples -> strip;
find_max_n_candidates -> range;
find_max_n_candidates -> len;
find_max_n_candidates -> max;
_create_examples -> set;
_create_examples -> range;
_create_examples -> len;
_create_examples -> add;
_create_examples -> tokenizer;
_create_examples -> append;
_create_examples -> format;
_create_examples -> tensor;
_create_examples -> enumerate;
_create_examples -> InputExample;
format_actions -> join;
format_actions -> lower;
format_actions -> append;
format_actions -> format;
format_actions -> ValueError;
load_features -> open;
load_features -> load;
process_features -> get_dialog_examples;
process_features -> range;
process_features -> len;
process_features -> bert_process_one_sample;
save_features -> open;
save_features -> save;
bert_process_one_sample -> _tokenize;
bert_process_one_sample -> SGDInputExample;
bert_process_one_sample -> get_service_schema;
bert_process_one_sample -> range;
bert_process_one_sample -> append;
bert_process_one_sample -> enumerate;
bert_process_one_sample -> make_copy;
bert_process_one_sample -> extend;
bert_process_one_sample -> add_utterance_features;
bert_process_one_sample -> add_intents;
bert_process_one_sample -> add_requested_slots;
bert_process_one_sample -> add_categorical_slots;
bert_process_one_sample -> len;
bert_process_one_sample -> _find_subword_indices;
bert_process_one_sample -> add_noncategorical_slots;
bert_process_one_sample -> get_categorical_slot_values;
bert_process_one_sample -> choice;
bert_process_one_sample -> make_copy_of_non_categorical_features;
bert_process_one_sample -> make_copy_of_categorical_features;
bert_process_one_sample -> min;
bert_process_one_sample -> max;
_naive_tokenize -> split;
make_copy -> SGDInputExample;
make_copy -> copy;
add_utterance_features -> truncate_seq_pair;
add_utterance_features -> append;
add_utterance_features -> enumerate;
add_utterance_features -> tokens_to_ids;
add_utterance_features -> debug;
add_utterance_features -> len;
add_categorical_slots -> get;
add_categorical_slots -> get_categorical_slot_value_id;
_find_subword_indices -> items;
_find_subword_indices -> len;
_find_subword_indices -> min;
add_noncategorical_slots -> get;
add_noncategorical_slots -> debug;
add_noncategorical_slots -> str;
make_copy_of_non_categorical_features -> make_copy;
make_copy_of_non_categorical_features -> list;
make_copy_of_categorical_features -> make_copy;
convert_examples_to_features -> enumerate;
convert_examples_to_features -> hasattr;
convert_examples_to_features -> append;
convert_examples_to_features -> info;
convert_examples_to_features -> text_to_tokens;
convert_examples_to_features -> tokenize;
convert_examples_to_features -> _truncate_seq_pair;
convert_examples_to_features -> len;
convert_examples_to_features -> tokens_to_ids;
convert_examples_to_features -> convert_tokens_to_ids;
convert_examples_to_features -> ValueError;
convert_examples_to_features -> InputFeatures;
convert_examples_to_features -> float32;
convert_examples_to_features -> KeyError;
convert_examples_to_features -> join;
convert_examples_to_features -> list;
convert_examples_to_features -> map;
convert_examples_to_features -> get_t5_prompted_query;
convert_examples_to_features -> text_to_ids;
convert_examples_to_features -> label2string;
convert_examples_to_features -> trange;
convert_examples_to_features -> get_doc_tokens_and_offset_from_context_id;
convert_examples_to_features -> get_docspans;
convert_examples_to_features -> keep_relevant_docspans;
convert_examples_to_features -> tuple;
convert_examples_to_features -> check_if_sufficient_memory;
convert_examples_to_features -> _improve_answer_span;
convert_examples_to_features -> range;
convert_examples_to_features -> _check_is_max_context;
convert_examples_to_features -> str;
convert_examples_to_features -> items;
_truncate_seq_pair -> len;
_truncate_seq_pair -> pop;
open_file -> join;
open_file -> open;
open_file -> strip;
open_file -> readlines;
map_bio_format_slots_to_unified_slots -> enumerate;
map_bio_format_slots_to_unified_slots -> str;
map_bio_format_slots_to_unified_slots -> replace;
map_bio_format_slots_to_unified_slots -> append;
normalize_zero_shot_intent -> split;
normalize_zero_shot_intent -> replace;
get_continuous_slots -> range;
get_continuous_slots -> len;
get_continuous_slots -> append;
get_continuous_slots -> enumerate;
get_continuous_slots -> join;
get_continuous_slots -> format;
get_continuous_slots -> items;
get_test_examples -> get_dialog_examples;
get_test_examples -> NotImplementedError;
get_relevant_idxs -> int;
get_relevant_idxs -> sample;
get_relevant_idxs -> list;
get_relevant_idxs -> set;
get_relevant_idxs -> ValueError;
get_relevant_idxs -> range;
open_csv -> join;
open_csv -> to_dict;
open_csv -> open;
open_csv -> read_csv;
open_json -> join;
open_json -> open;
open_json -> load;
get_dialogue_files -> join;
get_dialogue_files -> format;
load_dialogues -> sorted;
load_dialogues -> open;
load_dialogues -> extend;
load_dialogues -> close;
load_dialogues -> load;
save_dialog_examples -> info;
save_dialog_examples -> _generate_dialog_examples;
save_dialog_examples -> exists;
save_dialog_examples -> makedirs;
save_dialog_examples -> open;
save_dialog_examples -> dump;
_generate_dialog_examples -> info;
_generate_dialog_examples -> load_dialogues;
_generate_dialog_examples -> defaultdict;
_generate_dialog_examples -> enumerate;
_generate_dialog_examples -> items;
_generate_dialog_examples -> join;
_generate_dialog_examples -> extend;
_generate_dialog_examples -> format;
_generate_dialog_examples -> _create_examples_from_dialog;
_generate_dialog_examples -> append;
_create_examples_from_dialog -> enumerate;
_create_examples_from_dialog -> format;
_create_examples_from_dialog -> _create_examples_from_turn;
_create_examples_from_dialog -> extend;
_create_examples_from_dialog -> items;
_create_examples_from_dialog -> len;
_create_examples_from_turn -> defaultdict;
_create_examples_from_turn -> items;
_create_examples_from_turn -> _get_state_update;
_create_examples_from_turn -> get;
_create_examples_from_turn -> split;
_create_examples_from_turn -> append;
_create_examples_from_turn -> int;
_create_examples_from_turn -> get_service_id;
_create_examples_from_turn -> get_service_schema;
_create_examples_from_turn -> DialogueInputExample;
_create_examples_from_turn -> preprocess_intent;
_create_examples_from_turn -> get_categorical_slot_values;
_get_state_update -> dict;
_get_state_update -> items;
_get_state_update -> pop;
convert_camelcase_to_lower -> findall;
convert_camelcase_to_lower -> join;
convert_camelcase_to_lower -> lower;
convert_camelcase_to_lower -> split;
preprocess_intent -> convert_camelcase_to_lower;
preprocess_intent -> ValueError;
preprocess_intent -> get_service_schema;
truncate_seq_pair -> len;
truncate_seq_pair -> pop;
truncate_seq_pair -> ValueError;
truncate_seq_pair -> random;
readable_summary -> sum;
readable_summary -> ids_to_tokens;
readable_summary -> list;
readable_summary -> zip;
readable_summary -> get_intent_from_id;
readable_summary -> get_categorical_slot_value_from_id;
readable_summary -> get_non_categorical_slot_from_id;
readable_summary -> replace;
readable_summary -> get_categorical_slot_from_id;
readable_summary -> join;
get_service_set -> set;
get_service_set -> open;
get_service_set -> load;
get_service_set -> close;
get_service_set -> add;
get_in_domain_services -> get_service_set;
get_dataset_as_dict -> isinstance;
get_dataset_as_dict -> sorted;
get_dataset_as_dict -> debug;
get_dataset_as_dict -> glob;
get_dataset_as_dict -> open;
get_dataset_as_dict -> load;
get_dataset_as_dict -> close;
get_dataset_as_dict -> update;
get_active_intent_accuracy -> float;
get_slot_tagging_f1 -> compute_f1;
get_requested_slots_f1 -> compute_f1;
get_average_and_joint_goal_accuracy -> compare_slot_values;
get_average_and_joint_goal_accuracy -> mean;
get_average_and_joint_goal_accuracy -> prod;
get_average_and_joint_goal_accuracy -> zip;
set_cat_slot -> enumerate;
set_cat_slot -> max;
set_cat_slot -> item;
set_noncat_slot -> enumerate;
get_predicted_dialog -> defaultdict;
get_predicted_dialog -> enumerate;
get_predicted_dialog -> format;
get_predicted_dialog -> get_service_schema;
get_predicted_dialog -> pop;
get_predicted_dialog -> get_predicted_intent;
get_predicted_dialog -> get_requested_slot;
get_predicted_dialog -> set_cat_slot;
get_predicted_dialog -> items;
get_predicted_dialog -> set_noncat_slot;
get_predicted_dialog -> OrderedDict;
get_predicted_dialog -> get;
get_predicted_dialog -> len;
get_predicted_intent -> max;
get_predicted_intent -> len;
get_requested_slot -> list;
get_requested_slot -> map;
state_slots -> set;
state_slots -> update;
save_to_file -> open;
save_to_file -> dump;
get_examples -> _create_examples;
get_examples -> _read_tsv;
get_examples -> ValueError;
get_examples -> open;
get_examples -> items;
get_examples -> replace;
get_examples -> info;
get_examples -> format;
get_examples -> QAExample;
get_examples -> append;
get_examples -> mean;
get_examples -> max;
get_examples -> len;
get_examples -> SquadExample;
label2string -> float;
label2string -> NotImplementedError;
get_t5_prompted_query -> NotImplementedError;
make_history_mask_3d -> arange;
make_history_mask_3d -> repeat;
convert_xnli_examples_to_features -> enumerate;
convert_xnli_examples_to_features -> split;
convert_xnli_examples_to_features -> append;
parse_npz -> isfile;
parse_npz -> tokenize_dataset;
parse_npz -> zeros;
parse_npz -> savez;
parse_npz -> load;
parse_npz -> len;
parse_pkl -> isfile;
parse_pkl -> load;
parse_pkl -> tokenize_dataset;
parse_pkl -> dump;
parse_pkl -> open;
preprocess_line -> split;
preprocess_line -> text_to_ids;
preprocess_line -> ValueError;
preprocess_line -> strip;
preprocess_line -> int;
construct_input -> len;
construct_input -> array;
construct_input -> ones_like;
preprocess_bert -> stack;
preprocess_bert -> construct_input;
preprocess_bert -> append;
preprocess_bert -> _psgid2tokens;
preprocess_dpr -> construct_input;
preprocess_dpr -> stack;
preprocess_dpr -> append;
preprocess_dpr -> _psgid2tokens;
psgid2tokens_npz -> tolist;
parse_query_to_passages -> readlines;
parse_query_to_passages -> split;
parse_query_to_passages -> shuffle;
parse_query_to_passages -> range;
parse_query_to_passages -> open;
parse_query_to_passages -> ValueError;
parse_query_to_passages -> int;
parse_query_to_passages -> len;
label2idx -> readlines;
label2idx -> strip;
label2idx -> open;
label2idx -> range;
label2idx -> len;
intent_slot_dicts -> readlines;
intent_slot_dicts -> strip;
intent_slot_dicts -> open;
load_h5 -> File;
get_document -> isdir;
get_document -> join;
get_document -> open;
get_document -> seek;
get_document -> decode;
get_document -> text_to_ids;
get_document -> readline;
match_target_seq_length -> len;
match_target_seq_length -> get_document;
match_target_seq_length -> randrange;
mask_ids -> token_to_id;
mask_ids -> startswith;
mask_ids -> ids_to_tokens;
mask_ids -> append;
mask_ids -> extend;
mask_ids -> random;
mask_ids -> len;
mask_ids -> randrange;
pack_data_into_batches -> enumerate;
pack_data_into_batches -> OrderedDict;
pack_data_into_batches -> items;
pack_data_into_batches -> len;
pack_data_into_batches -> sorted;
pack_data_into_batches -> append;
pack_data_into_batches -> ValueError;
pack_data_into_batches -> list;
pack_data_into_batches -> keys;
pack_data_into_batches -> pop;
pack_data_into_batches -> max;
pad_batches -> zip;
pad_batches -> enumerate;
pad_batches -> append;
pad_batches -> ones;
pad_batches -> len;
pad_batches -> max;
_build_index_from_memdata -> tolist;
_build_index_from_memdata -> asarray;
_build_index_from_memdata -> close;
_build_index_from_memdata -> memmap;
_build_index_from_memdata -> where;
_build_index_from_memdata -> pop;
_build_index_from_memdata -> len;
_lightning_prepare_data -> any;
_lightning_prepare_data -> stack;
create_masked_lm_predictions -> enumerate;
create_masked_lm_predictions -> list;
create_masked_lm_predictions -> min;
create_masked_lm_predictions -> arange;
create_masked_lm_predictions -> range;
create_masked_lm_predictions -> shuffle;
create_masked_lm_predictions -> set;
create_masked_lm_predictions -> sorted;
create_masked_lm_predictions -> ValueError;
create_masked_lm_predictions -> len;
create_masked_lm_predictions -> max;
create_masked_lm_predictions -> warning;
create_masked_lm_predictions -> sum;
create_masked_lm_predictions -> append;
create_masked_lm_predictions -> zip;
create_masked_lm_predictions -> is_start_piece;
create_masked_lm_predictions -> int;
create_masked_lm_predictions -> array;
create_masked_lm_predictions -> choice;
create_masked_lm_predictions -> add;
create_masked_lm_predictions -> MaskedLmInstance;
create_masked_lm_predictions -> round;
create_masked_lm_predictions -> keys;
create_masked_lm_predictions -> geometric;
create_masked_lm_predictions -> _truncate_to_nearest;
create_masked_lm_predictions -> random;
create_masked_lm_predictions -> randint;
pad_and_convert_to_numpy -> len;
pad_and_convert_to_numpy -> array;
pad_and_convert_to_numpy -> astype;
pad_and_convert_to_numpy -> extend;
pad_and_convert_to_numpy -> rand;
pad_and_convert_to_numpy -> append;
pad_and_convert_to_numpy -> range;
pad_and_convert_to_numpy -> deque;
pad_and_convert_to_numpy -> popleft;
get_train_valid_test_split_ -> sum;
get_train_valid_test_split_ -> enumerate;
get_train_valid_test_split_ -> range;
get_train_valid_test_split_ -> find;
get_train_valid_test_split_ -> len;
get_train_valid_test_split_ -> ValueError;
get_train_valid_test_split_ -> append;
get_train_valid_test_split_ -> float;
get_train_valid_test_split_ -> split;
get_train_valid_test_split_ -> int;
get_train_valid_test_split_ -> round;
find_subsequence_location -> enumerate;
find_subsequence_location -> ValueError;
find_subsequence_location -> len;
_insert_virtual_token_placeholders -> range;
_insert_virtual_token_placeholders -> len;
_insert_virtual_token_placeholders -> join;
_insert_virtual_token_placeholders -> replace;
_truncate_input -> info;
_truncate_input -> _add_leading_space;
_truncate_input -> text_to_ids;
_truncate_input -> find_subsequence_location;
_truncate_input -> keys;
_truncate_input -> len;
_truncate_input -> min;
_truncate_input -> ids_to_text;
_truncate_input -> _insert_text_in_template;
_truncate_input -> _insert_virtual_token_placeholders;
_add_leading_space -> find;
_input_sanity_checks -> list;
_input_sanity_checks -> sum;
_input_sanity_checks -> count;
_input_sanity_checks -> len;
_input_sanity_checks -> set;
_input_sanity_checks -> keys;
pad_taskname_ids -> max;
pad_taskname_ids -> tensor;
pad_taskname_ids -> len;
build_training_sample -> truncate_segments;
build_training_sample -> create_tokens_and_tokentypes;
build_training_sample -> create_masked_lm_predictions;
build_training_sample -> pad_and_convert_to_numpy;
build_training_sample -> get_a_and_b_segments;
build_training_sample -> range;
build_training_sample -> len;
build_training_sample -> int;
build_training_sample -> extend;
truncate_segments -> random;
truncate_segments -> pop;
create_tokens_and_tokentypes -> append;
get_a_and_b_segments -> len;
get_a_and_b_segments -> range;
get_a_and_b_segments -> randint;
get_a_and_b_segments -> extend;
get_a_and_b_segments -> random;
compile_helper -> abspath;
compile_helper -> run;
compile_helper -> dirname;
compile_helper -> error;
compile_helper -> exit;
create_data_mmap -> create_data_mmap;
create_data_mmap -> _create_data_mmap;
test_index_blending -> ion;
test_index_blending -> MemoryEfficientBlendableDataset;
test_index_blending -> figure;
test_index_blending -> plot;
test_index_blending -> legend;
test_index_blending -> grid;
test_index_blending -> title;
test_index_blending -> get_ds_sample_idx;
test_index_blending -> list;
test_index_blending -> DS;
test_index_blending -> range;
test_index_blending -> zip;
is_start_piece -> startswith;
_truncate_to_nearest -> abs;
create_extreme_masked_lm_predictions -> list;
create_extreme_masked_lm_predictions -> int;
create_extreme_masked_lm_predictions -> arange;
create_extreme_masked_lm_predictions -> range;
create_extreme_masked_lm_predictions -> shuffle;
create_extreme_masked_lm_predictions -> set;
create_extreme_masked_lm_predictions -> sorted;
create_extreme_masked_lm_predictions -> min;
create_extreme_masked_lm_predictions -> array;
create_extreme_masked_lm_predictions -> len;
create_extreme_masked_lm_predictions -> append;
create_extreme_masked_lm_predictions -> sum;
create_extreme_masked_lm_predictions -> max;
create_extreme_masked_lm_predictions -> choice;
create_extreme_masked_lm_predictions -> add;
create_extreme_masked_lm_predictions -> MaskedLmInstance;
create_extreme_masked_lm_predictions -> keys;
create_extreme_masked_lm_predictions -> round;
create_extreme_masked_lm_predictions -> geometric;
create_extreme_masked_lm_predictions -> _truncate_to_nearest;
create_extreme_masked_lm_predictions -> clip;
create_extreme_masked_lm_predictions -> normal;
create_extreme_masked_lm_predictions -> sqrt;
_build_train_valid_test_datasets -> get_indexed_dataset_;
_build_train_valid_test_datasets -> get_train_valid_test_split_;
_build_train_valid_test_datasets -> info;
_build_train_valid_test_datasets -> print_split_stats;
_build_train_valid_test_datasets -> build_dataset;
_build_train_valid_test_datasets -> format;
_build_train_valid_test_datasets -> hasattr;
_build_train_valid_test_datasets -> dict;
_build_train_valid_test_datasets -> get_dataset;
_build_train_valid_test_datasets -> get_doc_idx;
_build_train_valid_test_datasets -> set_doc_idx;
_build_train_valid_test_datasets -> int;
_build_train_valid_test_datasets -> getattr;
_build_train_valid_test_datasets -> get;
_build_train_valid_test_datasets -> arange;
_build_train_valid_test_datasets -> GPTDataset;
_build_train_valid_test_datasets -> KNNIndex;
_build_train_valid_test_datasets -> RETRODataset;
print_split_stats -> info;
print_split_stats -> format;
make_indexed_dataset_compatibility -> arange;
make_indexed_dataset_compatibility -> ones;
make_indexed_dataset_compatibility -> AttributeError;
make_indexed_dataset_compatibility -> len;
make_indexed_dataset_compatibility -> getattr;
deallocate_indexed_dataset_memory -> isinstance;
_get_padding_indices -> range;
_create_ltor_masks_and_position_ids -> no_grad;
_create_ltor_masks_and_position_ids -> numel;
_create_ltor_masks_and_position_ids -> unsqueeze;
_create_ltor_masks_and_position_ids -> ones;
_create_ltor_masks_and_position_ids -> arange;
_create_ltor_masks_and_position_ids -> clone;
_create_ltor_masks_and_position_ids -> range;
_create_ltor_masks_and_position_ids -> tril;
_build_index_mappings -> _num_tokens;
_build_index_mappings -> _num_epochs;
_build_index_mappings -> RandomState;
_build_index_mappings -> format;
_build_index_mappings -> barrier;
_build_index_mappings -> LongTensor;
_build_index_mappings -> all_reduce;
_build_index_mappings -> join;
_build_index_mappings -> get_rank;
_build_index_mappings -> item;
_build_index_mappings -> time;
_build_index_mappings -> info;
_build_index_mappings -> load;
_build_index_mappings -> broadcast_object_list;
_build_index_mappings -> basename;
_build_index_mappings -> _build_doc_idx;
_build_index_mappings -> save;
_build_index_mappings -> build_sample_idx;
_build_index_mappings -> _build_shuffle_idx;
_build_index_mappings -> get_data_parallel_group;
_build_index_mappings -> get_pipeline_model_parallel_group;
_build_index_mappings -> get_world_size;
_build_index_mappings -> isfile;
_build_index_mappings -> print;
_build_index_mappings -> compile_helper;
_build_index_mappings -> int;
_build_index_mappings -> ImportError;
_build_index_mappings -> get_tensor_model_parallel_group;
_num_tokens -> sum;
_build_doc_idx -> _build_doc_idx;
_build_doc_idx -> concatenate;
_build_doc_idx -> reshape;
_build_doc_idx -> astype;
_build_doc_idx -> shuffle;
_build_doc_idx -> info;
_build_doc_idx -> len;
_build_shuffle_idx -> print;
_build_shuffle_idx -> arange;
_build_shuffle_idx -> shuffle;
_build_shuffle_idx -> concatenate;
_build_shuffle_idx -> format;
_build_shuffle_idx -> iinfo;
_build_sample_idx -> zeros;
_build_sample_idx -> len;
_query_document_sample_shuffle_indices -> concatenate;
_query_document_sample_shuffle_indices -> argwhere;
_query_document_sample_shuffle_indices -> append;
_query_document_sample_shuffle_indices -> range;
_query_document_sample_shuffle_indices -> nditer;
_query_document_sample_shuffle_indices -> _fim_split_and_permute_sequence;
_query_document_sample_shuffle_indices -> array;
_query_document_sample_shuffle_indices -> get;
_query_document_sample_shuffle_indices -> full;
_fim_split_and_permute_sequence -> argwhere;
_fim_split_and_permute_sequence -> nditer;
_fim_split_and_permute_sequence -> _fim_permute_sequence;
_fim_split_and_permute_sequence -> append;
_fim_split_and_permute_sequence -> concatenate;
_fim_split_and_permute_sequence -> binomial;
_fim_permute_sequence -> _permute;
_permute -> binomial;
_permute -> ids_to_text;
_permute -> array;
_permute -> startswith;
_permute -> list;
_permute -> sort;
_permute -> concatenate;
_permute -> randint;
_permute -> print;
_permute -> len;
_permute -> text_to_ids;
_permute -> full;
_insert_text_in_template -> strip;
_insert_text_in_template -> keys;
_insert_text_in_template -> replace;
_find_answer_start -> _add_leading_space;
_find_answer_start -> text_to_ids;
_find_answer_start -> len;
pad_batch_and_build_loss_mask -> zip;
pad_batch_and_build_loss_mask -> tensor;
pad_batch_and_build_loss_mask -> stack;
pad_batch_and_build_loss_mask -> len;
pad_batch_and_build_loss_mask -> append;
pad_batch_and_build_loss_mask -> extend;
pad_batch_and_build_loss_mask -> float;
pad_batch_and_build_loss_mask -> range;
pad_batch_and_build_loss_mask -> contiguous;
pad_batch_and_build_loss_mask -> max;
pad_batch_and_build_loss_mask -> LongTensor;
pad_batch_and_build_loss_mask -> long;
pad_batch_and_build_loss_mask -> pad_taskname_ids;
pad_batch_and_build_loss_mask -> isinstance;
pad_batch_and_build_loss_mask -> get_mask_from_lengths;
pad_batch_and_build_loss_mask -> enumerate;
pad_batch_and_build_loss_mask -> item;
pad_batch_and_build_loss_mask -> cat;
pad_batch_and_build_loss_mask -> general_padding;
pad_batch_and_build_loss_mask -> pad;
pad_batch_and_build_loss_mask -> pad_text_to_speech_dims;
pad_batch_and_build_loss_mask -> zeros;
pad_batch_and_build_loss_mask -> as_tensor;
inference_collate_fn -> zip;
inference_collate_fn -> LongTensor;
inference_collate_fn -> item;
inference_collate_fn -> pad_batch_and_build_loss_mask;
inference_collate_fn -> cuda;
inference_collate_fn -> len;
inference_collate_fn -> max;
get_prompt_template_example -> _get_header_conversation_type_mask_role;
identify_start_index_of_subsequence -> range;
identify_start_index_of_subsequence -> equal;
identify_start_index_of_subsequence -> size;
response_value_formater -> isinstance;
response_value_formater -> ValueError;
response_value_formater -> type;
infer_dataset_impl -> exists;
infer_dataset_impl -> print;
infer_dataset_impl -> open;
infer_dataset_impl -> read;
infer_dataset_impl -> index_file_path;
make_dataset -> ValueError;
make_dataset -> TextMemMapDataset;
make_dataset -> exists;
make_dataset -> print;
make_dataset -> infer_dataset_impl;
make_dataset -> IndexedDataset;
make_dataset -> CSVMemMapDataset;
make_dataset -> IndexedCachedDataset;
make_dataset -> MMapIndexedDataset;
make_dataset -> MMapRetrievalIndexedDataset;
make_dataset -> expanduser;
make_dataset -> cast;
make_dataset -> sorted;
make_dataset -> keys;
make_dataset -> join;
make_dataset -> extend;
make_dataset -> has_file_allowed_extension;
make_dataset -> isdir;
make_dataset -> walk;
make_dataset -> is_valid_file;
make_dataset -> append;
make_dataset -> int;
make_dataset -> len;
make_dataset -> make_dataset;
dataset_exists -> exists;
read_longs -> empty;
read_longs -> readinto;
write_longs -> write;
write_longs -> array;
code -> keys;
code -> ValueError;
create_doc_idx -> enumerate;
create_doc_idx -> append;
_warmup_mmap_file -> open;
_warmup_mmap_file -> read;
read_data -> open;
read_data -> data_file_path;
check_index -> IndexError;
prefetch -> all;
prefetch -> sorted;
prefetch -> empty;
prefetch -> clear;
prefetch -> read_data;
prefetch -> set;
prefetch -> seek;
prefetch -> readinto;
prefetch -> close;
merge_file_ -> IndexedDataset;
merge_file_ -> extend;
merge_file_ -> append;
merge_file_ -> open;
merge_file_ -> data_file_path;
merge_file_ -> read;
merge_file_ -> write;
merge_file_ -> Index;
merge_file_ -> index_file_path;
merge_file_ -> copyfileobj;
_do_init -> Index;
_do_init -> index_file_path;
_do_init -> _create_data_mmap;
_do_init -> info;
_do_init -> memmap;
_do_init -> memoryview;
_do_init -> _warmup_mmap_file;
_do_init -> data_file_path;
_create_data_mmap -> info;
_create_data_mmap -> memmap;
_create_data_mmap -> memoryview;
_create_data_mmap -> _warmup_mmap_file;
_create_data_mmap -> data_file_path;
writer -> _Writer;
writer -> open;
writer -> write;
writer -> _get_pointers;
writer -> array;
writer -> close;
writer -> pack;
writer -> dtype;
writer -> append;
writer -> tobytes;
writer -> code;
writer -> len;
writer -> memmap;
writer -> memoryview;
writer -> frombuffer;
writer -> flush;
writer -> _get_chunk_id_and_address;
writer -> ValueError;
writer -> range;
writer -> int;
_get_pointers -> dtype;
_get_pointers -> append;
merge_knn_files -> sorted;
merge_knn_files -> KNNIndex;
merge_knn_files -> info;
merge_knn_files -> writer;
merge_knn_files -> write;
get_KNN_chunk_ids -> ValueError;
get_chunk_id -> get_chunk_id;
get_chunk_id -> item;
get_chunk_id -> ValueError;
from_chunk_id_to_doc_id -> from_chunk_id_to_doc_id;
from_chunk_id_to_doc_id -> searchsorted;
from_chunk_id_to_doc_id -> ValueError;
_get_chunk_id_and_address -> ValueError;
_get_chunk_id_and_address -> dtype;
_get_chunk_id_and_address -> append;
_get_chunk_id_and_address -> len;
_get_chunk_id_and_address -> range;
get_prefix_lm_sample -> min;
get_prefix_lm_sample -> astype;
get_prefix_lm_sample -> concatenate;
get_prefix_lm_sample -> ValueError;
get_prefix_lm_sample -> randint;
get_prefix_lm_sample -> len;
get_prefix_lm_sample -> clip;
get_prefix_lm_sample -> int;
get_prefix_lm_sample -> normal;
update_global_batch_size -> RuntimeError;
global_batch_size -> warn;
global_batch_size -> update_global_batch_size;
mask_prompt -> split;
mask_prompt -> enumerate;
mask_prompt -> join;
mask_prompt -> text_to_ids;
mask_prompt -> LongTensor;
gpt_train_valid_test_datasets_provider -> MultiSplitGPTDatasetConfig;
gpt_train_valid_test_datasets_provider -> print;
gpt_train_valid_test_datasets_provider -> build;
gpt_train_valid_test_datasets_provider -> get_blend_from_list;
gpt_train_valid_test_datasets_provider -> get;
gpt_train_valid_test_datasets_provider -> BlendedMegatronDatasetBuilder;
gpt_train_valid_test_datasets_provider -> is_pipeline_first_stage;
gpt_train_valid_test_datasets_provider -> is_pipeline_last_stage;
gpt_train_valid_test_datasets_provider -> get_tensor_model_parallel_rank;
is_dataset_built_on_rank -> is_pipeline_first_stage;
is_dataset_built_on_rank -> is_pipeline_last_stage;
is_dataset_built_on_rank -> get_tensor_model_parallel_rank;
build_mock_train_valid_test_datasets -> get_train_valid_test_split_;
build_mock_train_valid_test_datasets -> info;
build_mock_train_valid_test_datasets -> print_split_stats;
build_mock_train_valid_test_datasets -> build_dataset;
build_mock_train_valid_test_datasets -> format;
build_mock_train_valid_test_datasets -> MockRETRODataset;
_validate_pad_id -> frombuffer;
_validate_pad_id -> all;
_validate_pad_id -> dtype;
_get_chunks -> range;
_get_chunks -> get_KNN_chunk_ids;
_get_chunks -> append;
_get_chunks -> get_chunk;
_determine_tokenizer_type -> isinstance;
_determine_tokenizer_type -> ValueError;
_build -> len;
convert_data_file_format -> info;
convert_data_file_format -> open;
convert_data_file_format -> enumerate;
convert_data_file_format -> zip;
convert_data_file_format -> append;
convert_data_file_format -> write;
convert_data_file_format -> len;
convert_data_file_format -> dumps;
get_r_masking_training_sample -> build_training_sample;
get_r_masking_training_sample -> _prepend_mask_type_token;
_prepend_mask_type_token -> text_to_ids;
_prepend_mask_type_token -> concatenate;
_prepend_mask_type_token -> len;
get_s_masking_training_sample -> get_prefix_lm_sample;
get_s_masking_training_sample -> _prepend_mask_type_token;
get_x_masking_training_sample -> build_extreme_masking_training_sample;
get_x_masking_training_sample -> _prepend_mask_type_token;
build_extreme_masking_training_sample -> randint;
build_extreme_masking_training_sample -> create_extreme_masked_lm_predictions;
build_extreme_masking_training_sample -> pad_and_convert_to_numpy;
create_sample -> choice;
create_sample -> randint;
create_sample -> list;
create_sample -> len;
create_sample -> concatenate;
create_sample -> _prepend_mask_type_token;
create_sample -> get_x_masking_training_sample;
create_sample -> keys;
create_sample -> get_s_masking_training_sample;
create_sample -> values;
create_sample -> get_r_masking_training_sample;
clean_src_and_target -> range;
clean_src_and_target -> len;
clean_src_and_target -> ValueError;
clean_src_and_target -> append;
clean_src_and_target -> max;
clean_src_and_target -> abs;
get_enc_dec_tokenizers -> get_nmt_tokenizer;
train_tokenizers -> makedirs;
train_tokenizers -> isinstance;
train_tokenizers -> list;
train_tokenizers -> print;
train_tokenizers -> join;
train_tokenizers -> values;
train_tokenizers -> isfile;
train_tokenizers -> info;
train_tokenizers -> dirname;
train_tokenizers -> create_spt_model;
train_tokenizers -> rename;
train_tokenizers -> TemporaryDirectory;
train_tokenizers -> system;
preprocess_parallel_dataset -> makedirs;
preprocess_parallel_dataset -> join;
preprocess_parallel_dataset -> glob;
preprocess_parallel_dataset -> len;
preprocess_parallel_dataset -> ValueError;
preprocess_parallel_dataset -> info;
preprocess_parallel_dataset -> _get_lines_partition;
preprocess_parallel_dataset -> sum;
preprocess_parallel_dataset -> open;
preprocess_parallel_dataset -> close;
preprocess_parallel_dataset -> remove;
preprocess_parallel_dataset -> enumerate;
preprocess_parallel_dataset -> dump;
preprocess_parallel_dataset -> Parallel;
preprocess_parallel_dataset -> getmembers;
preprocess_parallel_dataset -> rename;
preprocess_parallel_dataset -> addfile;
preprocess_parallel_dataset -> delayed;
preprocess_parallel_dataset -> extractfile;
tar_files_to_string -> len;
tar_files_to_string -> split;
tar_files_to_string -> join;
get_monolingual_tokenizer -> SentencePieceTokenizer;
get_monolingual_tokenizer -> get_tokenizer;
get_monolingual_tokenizer -> ValueError;
_get_lines_partition -> range;
_get_lines_partition -> pop;
_get_lines_partition -> append;
_get_num_lines -> open;
_get_num_lines -> enumerate;
_process_fragment -> NamedTemporaryFile;
_process_fragment -> close;
_process_fragment -> write_parallel_batches_to_tarfiles;
_process_fragment -> remove;
_process_fragment -> open;
_process_fragment -> enumerate;
_process_fragment -> zip;
_process_fragment -> write;
write_parallel_batches_to_tarfiles -> TranslationDataset;
write_parallel_batches_to_tarfiles -> get_enc_dec_tokenizers;
write_parallel_batches_to_tarfiles -> batchify;
write_parallel_batches_to_tarfiles -> join;
write_parallel_batches_to_tarfiles -> open;
write_parallel_batches_to_tarfiles -> items;
write_parallel_batches_to_tarfiles -> close;
write_parallel_batches_to_tarfiles -> dump;
write_parallel_batches_to_tarfiles -> add;
write_parallel_batches_to_tarfiles -> remove;
write_parallel_batches_to_tarfiles -> ValueError;
write_parallel_batches_to_tarfiles -> getattr;
write_parallel_batches_to_tarfiles -> append;
write_parallel_batches_to_tarfiles -> hasattr;
write_parallel_batches_to_tarfiles -> add_special_tokens;
write_parallel_batches_to_tarfiles -> id_to_piece;
write_parallel_batches_to_tarfiles -> pad_id;
write_parallel_batches_to_tarfiles -> bos_id;
write_parallel_batches_to_tarfiles -> eos_id;
preprocess_monolingual_dataset -> makedirs;
preprocess_monolingual_dataset -> NamedTemporaryFile;
preprocess_monolingual_dataset -> open;
preprocess_monolingual_dataset -> join;
preprocess_monolingual_dataset -> close;
preprocess_monolingual_dataset -> write_monolingual_batches_to_tarfiles;
preprocess_monolingual_dataset -> remove;
preprocess_monolingual_dataset -> dump;
preprocess_monolingual_dataset -> glob;
preprocess_monolingual_dataset -> len;
preprocess_monolingual_dataset -> print;
preprocess_monolingual_dataset -> ValueError;
preprocess_monolingual_dataset -> write;
write_monolingual_batches_to_tarfiles -> SentenceDataset;
write_monolingual_batches_to_tarfiles -> dump;
write_monolingual_batches_to_tarfiles -> add;
write_monolingual_batches_to_tarfiles -> remove;
write_monolingual_batches_to_tarfiles -> open;
write_monolingual_batches_to_tarfiles -> close;
write_monolingual_batches_to_tarfiles -> join;
_set_cached_features_filename -> getattr;
_set_cached_features_filename -> format;
_set_cached_features_filename -> str;
load_features_from_cache -> info;
load_features_from_cache -> open;
load_features_from_cache -> load;
_convert_examples_to_features -> info;
_convert_examples_to_features -> trange;
_convert_examples_to_features -> len;
_convert_examples_to_features -> get_doc_tokens_and_offset_from_context_id;
_convert_examples_to_features -> enumerate;
_convert_examples_to_features -> get_docspans;
_convert_examples_to_features -> keep_relevant_docspans;
_convert_examples_to_features -> tuple;
_convert_examples_to_features -> check_if_sufficient_memory;
_convert_examples_to_features -> append;
_convert_examples_to_features -> improve_answer_span;
_convert_examples_to_features -> range;
_convert_examples_to_features -> tokens_to_ids;
_convert_examples_to_features -> text_to_tokens;
_convert_examples_to_features -> check_is_max_context;
_convert_examples_to_features -> join;
_convert_examples_to_features -> str;
_convert_examples_to_features -> items;
_convert_examples_to_features -> tokenize;
_convert_examples_to_features -> _prep_query;
_convert_examples_to_features -> _prep_answer;
_convert_examples_to_features -> _prep_context;
_convert_examples_to_features -> _encode_all_context_spans;
dump_features_to_cache -> info;
dump_features_to_cache -> is_initialized;
dump_features_to_cache -> get_rank;
dump_features_to_cache -> open;
dump_features_to_cache -> dump;
get_doc_tokens_and_offset_from_context_id -> split_into_words;
get_doc_tokens_and_offset_from_context_id -> min;
get_doc_tokens_and_offset_from_context_id -> len;
get_docspans -> namedtuple;
get_docspans -> len;
get_docspans -> append;
get_docspans -> min;
get_docspans -> _DocSpan;
keep_relevant_docspans -> ValueError;
keep_relevant_docspans -> sort;
keep_relevant_docspans -> get_average_dist_to_tok_start_and_end;
check_if_sufficient_memory -> virtual_memory;
check_if_sufficient_memory -> ValueError;
improve_answer_span -> join;
improve_answer_span -> range;
improve_answer_span -> text_to_tokens;
check_is_max_context -> get_best_span_index;
get_best_span_index -> lru_cache;
get_best_span_index -> enumerate;
get_best_span_index -> min;
get_average_dist_to_tok_start_and_end -> abs;
split_into_words -> is_whitespace;
split_into_words -> append;
split_into_words -> len;
_prep_query -> _get_truncated_sentence_and_len;
_prep_query -> tokenize;
_prep_answer -> _get_truncated_sentence_and_len;
_prep_context -> tokenize;
_prep_context -> get_docspans;
_prep_context -> tuple;
_prep_context -> len;
_encode_all_context_spans -> enumerate;
_encode_all_context_spans -> convert_tokens_to_string;
_encode_all_context_spans -> _get_truncated_sentence_and_len;
_encode_all_context_spans -> tokenizer;
_encode_all_context_spans -> squeeze;
_encode_all_context_spans -> update_labels_for_no_pad_loss;
_encode_all_context_spans -> append;
_encode_all_context_spans -> _encode_answer;
_get_truncated_sentence_and_len -> convert_tokens_to_string;
_get_truncated_sentence_and_len -> len;
_get_truncated_sentence_and_len -> tokenize;
update_labels_for_no_pad_loss -> copy;
update_labels_for_no_pad_loss -> eq;
update_labels_for_no_pad_loss -> tensor;
update_labels_for_no_pad_loss -> squeeze;
update_labels_for_no_pad_loss -> range;
update_labels_for_no_pad_loss -> len;
_encode_answer -> tokenizer;
_encode_answer -> squeeze;
_check_is_max_context -> get_best_span_index;
_improve_answer_span -> join;
_improve_answer_span -> range;
_improve_answer_span -> text_to_tokens;
get_predictions -> defaultdict;
get_predictions -> enumerate;
get_predictions -> namedtuple;
get_predictions -> OrderedDict;
get_predictions -> append;
get_predictions -> get_doc_tokens_and_offset_from_context_id;
get_predictions -> sorted;
get_predictions -> _compute_softmax;
get_predictions -> len;
get_predictions -> get_best_indexes;
get_predictions -> _PrelimPrediction;
get_predictions -> join;
get_predictions -> replace;
get_predictions -> strip;
get_predictions -> get_final_text;
get_predictions -> _NbestPrediction;
get_predictions -> insert;
get_predictions -> list;
get_predictions -> split;
get_predictions -> isinstance;
get_predictions -> get;
get_predictions -> decode;
get_predictions -> ids_to_text;
get_predictions -> _get_best_indexes;
get_predictions -> _get_final_text;
get_best_indexes -> argsort;
get_final_text -> BasicTokenizer;
get_final_text -> join;
get_final_text -> find;
get_final_text -> _strip_spaces;
get_final_text -> items;
get_final_text -> OrderedDict;
get_final_text -> enumerate;
get_final_text -> tokenize;
get_final_text -> len;
get_final_text -> append;
get_final_text -> warning;
get_raw_scores -> max;
get_raw_scores -> warning;
get_raw_scores -> normalize_answer;
get_raw_scores -> exact_match_score;
get_raw_scores -> f1_score;
apply_no_ans_threshold -> items;
apply_no_ans_threshold -> float;
make_eval_dict -> len;
make_eval_dict -> OrderedDict;
make_eval_dict -> sum;
make_eval_dict -> values;
make_eval_dict -> float;
find_all_best_thresh -> _find_best_thresh;
exact_match_score -> int;
exact_match_score -> normalize_answer;
_strip_spaces -> OrderedDict;
_strip_spaces -> enumerate;
_strip_spaces -> join;
_strip_spaces -> append;
_strip_spaces -> len;
_find_best_thresh -> sum;
_find_best_thresh -> sorted;
_find_best_thresh -> enumerate;
_find_best_thresh -> len;
build_bert_example -> _get_input_features;
build_bert_example -> replace;
build_bert_example -> _map_characters_to_subwords;
build_bert_example -> BertExample;
build_bert_example -> ValueError;
build_bert_example -> split;
build_bert_example -> list;
build_bert_example -> zip;
build_bert_example -> _get_fragment_indices;
build_bert_example -> _get_spans;
build_bert_example -> print;
build_bert_example -> count;
build_bert_example -> len;
build_bert_example -> map;
build_bert_example -> int;
build_bert_example -> str;
build_bert_example -> range;
build_bert_example -> EditingTask;
build_bert_example -> _split_to_wordpieces;
build_bert_example -> _truncate_list;
build_bert_example -> convert_tokens_to_ids;
build_bert_example -> pad_to_max_length;
build_bert_example -> _compute_tags;
build_bert_example -> KeyError;
build_bert_example -> Tag;
build_bert_example -> append;
build_bert_example -> IndexError;
_get_input_features -> split;
_get_input_features -> range;
_get_input_features -> convert_tokens_to_ids;
_get_input_features -> _split_to_wordpieces;
_get_input_features -> _split_to_wordpieces_with_labels;
_get_input_features -> len;
_get_input_features -> extend;
_get_input_features -> ValueError;
_get_input_features -> str;
_map_characters_to_subwords -> convert_ids_to_tokens;
_map_characters_to_subwords -> range;
_map_characters_to_subwords -> len;
_map_characters_to_subwords -> IndexError;
_map_characters_to_subwords -> startswith;
_map_characters_to_subwords -> str;
_get_fragment_indices -> split;
_get_fragment_indices -> zip;
_get_fragment_indices -> int;
_get_fragment_indices -> min;
_get_fragment_indices -> append;
_get_fragment_indices -> join;
_get_fragment_indices -> find;
_get_fragment_indices -> rfind;
_get_fragment_indices -> len;
_get_spans -> split;
_get_spans -> append;
_get_spans -> KeyError;
_get_spans -> int;
_split_to_wordpieces -> enumerate;
_split_to_wordpieces -> append;
_split_to_wordpieces -> tokenize;
_split_to_wordpieces -> extend;
_split_to_wordpieces -> len;
_split_to_wordpieces_with_labels -> enumerate;
_split_to_wordpieces_with_labels -> append;
_split_to_wordpieces_with_labels -> tokenize;
_split_to_wordpieces_with_labels -> extend;
_split_to_wordpieces_with_labels -> len;
read_input_file -> info;
read_input_file -> exists;
read_input_file -> ValueError;
read_input_file -> open;
read_input_file -> split;
read_input_file -> append;
read_input_file -> len;
read_input_file -> format;
read_input_file -> build_bert_example;
read_input_file -> rstrip;
read_input_file -> warning;
read_input_file -> str;
read_input_file -> enumerate;
read_input_file -> yield_sources_and_targets;
collate_train_dataset -> LongTensor;
collate_train_dataset -> len;
collate_train_dataset -> append;
collate_train_dataset -> array;
collate_train_dataset -> pad;
collate_train_dataset -> ones;
collate_test_dataset -> LongTensor;
collate_test_dataset -> len;
collate_test_dataset -> append;
collate_test_dataset -> zeros;
collate_test_dataset -> array;
collate_test_dataset -> pad;
replace_diacritics -> sub;
load_ngram_mappings -> defaultdict;
load_ngram_mappings -> set;
load_ngram_mappings -> open;
load_ngram_mappings -> split;
load_ngram_mappings -> replace;
load_ngram_mappings -> ValueError;
load_ngram_mappings -> strip;
load_ngram_mappings -> int;
load_ngram_mappings -> add;
load_ngram_mappings_for_dp -> defaultdict;
load_ngram_mappings_for_dp -> open;
load_ngram_mappings_for_dp -> split;
load_ngram_mappings_for_dp -> replace;
load_ngram_mappings_for_dp -> join;
load_ngram_mappings_for_dp -> max;
load_ngram_mappings_for_dp -> int;
load_ngram_mappings_for_dp -> ValueError;
load_ngram_mappings_for_dp -> strip;
load_ngram_mappings_for_dp -> count;
get_alignment_by_dp -> namedtuple;
get_alignment_by_dp -> defaultdict;
get_alignment_by_dp -> DpInfo;
get_alignment_by_dp -> range;
get_alignment_by_dp -> append;
get_alignment_by_dp -> reversed;
get_alignment_by_dp -> split;
get_alignment_by_dp -> len;
get_alignment_by_dp -> join;
get_alignment_by_dp -> get;
get_alignment_by_dp -> float;
get_alignment_by_dp -> ValueError;
get_alignment_by_dp -> min;
get_alignment_by_dp -> log;
get_alignment_by_dp -> print;
load_index -> defaultdict;
load_index -> open;
load_index -> split;
load_index -> int;
load_index -> float;
load_index -> append;
load_index -> len;
search_in_index -> zeros;
search_in_index -> range;
search_in_index -> ValueError;
search_in_index -> set;
search_in_index -> len;
search_in_index -> min;
search_in_index -> join;
search_in_index -> add;
search_in_index -> str;
get_all_candidates_coverage -> jit;
get_all_candidates_coverage -> range;
get_all_candidates_coverage -> len;
get_all_candidates_coverage -> sum;
get_all_candidates_coverage -> count;
get_candidates -> search_in_index;
get_candidates -> get_all_candidates_coverage;
get_candidates -> sorted;
get_candidates -> shuffle;
get_candidates -> enumerate;
get_candidates -> range;
get_candidates -> append;
get_candidates -> len;
get_candidates -> print;
get_candidates -> choice;
get_candidates -> join;
get_candidates -> count;
get_candidates -> sum;
get_candidates -> list;
get_candidates -> split;
get_candidates -> replace;
read_spellmapper_predictions -> open;
read_spellmapper_predictions -> split;
read_spellmapper_predictions -> replace;
read_spellmapper_predictions -> list;
read_spellmapper_predictions -> append;
read_spellmapper_predictions -> map;
read_spellmapper_predictions -> len;
read_spellmapper_predictions -> IndexError;
read_spellmapper_predictions -> strip;
read_spellmapper_predictions -> int;
read_spellmapper_predictions -> float;
read_spellmapper_predictions -> sort;
substitute_replacements_in_text -> sort;
substitute_replacements_in_text -> reversed;
substitute_replacements_in_text -> len;
substitute_replacements_in_text -> print;
substitute_replacements_in_text -> replace;
apply_replacements_to_text -> sort;
apply_replacements_to_text -> range;
apply_replacements_to_text -> substitute_replacements_in_text;
apply_replacements_to_text -> len;
apply_replacements_to_text -> join;
apply_replacements_to_text -> check_banned_replacements;
apply_replacements_to_text -> append;
apply_replacements_to_text -> list;
apply_replacements_to_text -> get_alignment_by_dp;
apply_replacements_to_text -> replace;
apply_replacements_to_text -> pop;
check_banned_replacements -> endswith;
check_banned_replacements -> startswith;
update_manifest_with_spellmapper_corrections -> defaultdict;
update_manifest_with_spellmapper_corrections -> read_spellmapper_predictions;
update_manifest_with_spellmapper_corrections -> open;
update_manifest_with_spellmapper_corrections -> close;
update_manifest_with_spellmapper_corrections -> load_ngram_mappings_for_dp;
update_manifest_with_spellmapper_corrections -> strip;
update_manifest_with_spellmapper_corrections -> split;
update_manifest_with_spellmapper_corrections -> append;
update_manifest_with_spellmapper_corrections -> find;
update_manifest_with_spellmapper_corrections -> loads;
update_manifest_with_spellmapper_corrections -> write;
update_manifest_with_spellmapper_corrections -> apply_replacements_to_text;
update_manifest_with_spellmapper_corrections -> dumps;
extract_and_split_text_from_manifest -> set;
extract_and_split_text_from_manifest -> open;
extract_and_split_text_from_manifest -> loads;
extract_and_split_text_from_manifest -> split;
extract_and_split_text_from_manifest -> range;
extract_and_split_text_from_manifest -> write;
extract_and_split_text_from_manifest -> strip;
extract_and_split_text_from_manifest -> ValueError;
extract_and_split_text_from_manifest -> len;
extract_and_split_text_from_manifest -> join;
extract_and_split_text_from_manifest -> add;
convert_label_ids -> copy;
calc_class_weights -> info;
calc_class_weights -> get_label_stats;
calc_class_weights -> get_freq_weights;
calc_class_weights -> fill_class_weights;
calc_class_weights -> exists;
calc_class_weights -> FileNotFoundError;
calc_class_weights -> open;
calc_class_weights -> readlines;
calc_class_weights -> split;
calc_class_weights -> append;
calc_class_weights -> ValueError;
calc_class_weights -> int;
calc_class_weights -> strip;
list2str -> join;
list2str -> str;
__process_raw_entries -> set;
__process_raw_entries -> tqdm;
__process_raw_entries -> list;
__process_raw_entries -> sort;
__process_raw_entries -> enumerate;
__process_raw_entries -> zip;
__process_raw_entries -> update;
__process_raw_entries -> DecoderDataInstance;
__process_raw_entries -> append;
__process_raw_entries -> randint;
__tokenize_samples -> tqdm;
__tokenize_samples -> info;
__tokenize_samples -> tokenizer;
__tokenize_samples -> range;
__tokenize_samples -> strip;
__tokenize_samples -> len;
__tokenize_samples -> append;
__tokenize_samples -> startswith;
__tokenize_samples -> max;
__tokenize_samples -> open;
__tokenize_samples -> dump;
encode_tags -> enumerate;
encode_tags -> word_ids;
encode_tags -> append;
is_same -> normalize_str;
is_same -> int;
is_same -> remove_puncts;
normalize_str -> replace;
normalize_str -> lower;
normalize_str -> strip;
remove_puncts -> translate;
remove_puncts -> maketrans;
compute_sent_accuracy -> zip;
compute_sent_accuracy -> len;
compute_sent_accuracy -> is_same;
compute_class_accuracy -> enumerate;
compute_class_accuracy -> len;
compute_class_accuracy -> defaultdict;
compute_class_accuracy -> zip;
compute_class_accuracy -> range;
compute_class_accuracy -> is_same;
compute_class_accuracy -> warning;
compute_class_accuracy -> append;
compute_class_accuracy -> join;
input_preprocessing -> convert_superscript;
input_preprocessing -> convert_fraction;
input_preprocessing -> add_space_around_dash;
input_preprocessing -> replace;
input_preprocessing -> enumerate;
yield_sources_and_targets -> open;
yield_sources_and_targets -> split;
yield_sources_and_targets -> rstrip;
pad_to_max_length -> extend;
pad_to_max_length -> len;
pad_to_max_length -> ValueError;
pad_to_max_length -> format;
get_token_labels -> append;
get_token_labels -> len;
_compute_tags -> split;
_compute_tags -> len;
_compute_tags -> ValueError;
_compute_tags -> append;
_compute_tags -> Tag;
_compute_tags -> str;
is_begin -> startswith;
is_end -> endswith;
get_token_list -> split;
realize_output -> zip;
realize_output -> range;
realize_output -> replace;
realize_output -> join;
realize_output -> split;
realize_output -> sub;
realize_output -> ValueError;
realize_output -> len;
realize_output -> format;
realize_output -> append;
realize_output -> pop;
realize_output -> insert;
realize_output -> startswith;
realize_output -> endswith;
realize_output -> Token;
realize_output -> str;
realize_output -> strip;
read_label_map -> open;
read_label_map -> strip;
read_label_map -> len;
read_label_map -> ValueError;
read_semiotic_classes -> open;
read_semiotic_classes -> strip;
read_semiotic_classes -> len;
read_semiotic_classes -> ValueError;
split_text_by_isalpha -> groupby;
split_text_by_isalpha -> join;
legacy_data_config_to_new_data_config -> structured;
legacy_data_config_to_new_data_config -> get;
legacy_data_config_to_new_data_config -> ValueError;
legacy_data_config_to_new_data_config -> cls;
legacy_data_config_to_new_data_config -> to_yaml;
_check_number_of_labels -> len;
_check_number_of_labels -> ValueError;
_show_prog -> all;
_show_prog -> ValueError;
_show_prog -> tqdm;
_show_prog -> len;
_show_prog -> enumerate;
_show_prog -> sleep;
_show_prog -> update;
_show_prog -> zip;
_show_prog -> get;
_show_prog -> close;
_show_prog -> warning;
_get_features -> min;
_get_features -> list;
_get_features -> tuple;
_get_features -> info;
_get_features -> len;
_get_features -> zip;
_get_features -> Progress;
_get_features -> finish;
_get_features -> get_stats;
_get_features -> range;
_get_features -> cpu_count;
_get_features -> max;
_get_features -> get_queues;
_get_features -> Pool;
_get_features -> starmap;
_get_features -> append;
_get_features -> TokenizeCreateMasksClipWorker;
_get_features -> chain;
_get_features -> join;
_get_features -> map;
finish -> join;
finish -> put;
create_masks_and_segment_ids -> zeros_like;
create_masks_and_segment_ids -> not_equal;
create_masks_and_segment_ids -> equal;
create_label_ids -> sorted;
create_label_ids -> remove;
create_label_ids -> len;
load_label_ids -> open;
load_label_ids -> enumerate;
load_label_ids -> strip;
save_label_ids -> mkdir;
save_label_ids -> open;
save_label_ids -> zip;
save_label_ids -> write;
save_label_ids -> join;
save_label_ids -> sorted;
save_label_ids -> items;
raise_not_equal_labels_error -> ValueError;
raise_not_equal_labels_error -> len;
raise_not_equal_labels_error -> set;
raise_not_equal_labels_error -> dict;
raise_not_equal_labels_error -> list;
raise_not_equal_labels_error -> items;
_maybe_clip -> len;
_check_constructor_parameters -> is_initialized;
_check_constructor_parameters -> ValueError;
_check_constructor_parameters -> FileNotFoundError;
_check_constructor_parameters -> expanduser;
_check_constructor_parameters -> load_label_ids;
_check_constructor_parameters -> TypeError;
_check_constructor_parameters -> get_world_size;
_check_constructor_parameters -> exists;
_check_constructor_parameters -> raise_not_equal_labels_error;
_check_constructor_parameters -> isinstance;
_check_constructor_parameters -> Path;
_get_path_to_pkl_features -> getattr;
_get_path_to_pkl_features -> expanduser;
_get_path_to_pkl_features -> format;
_get_path_to_pkl_features -> Path;
_read_dataset -> open;
_read_dataset -> readlines;
_read_dataset -> set;
_read_dataset -> enumerate;
_read_dataset -> len;
_read_dataset -> ValueError;
_read_dataset -> list;
_read_dataset -> zip;
_read_dataset -> split;
_read_dataset -> append;
_read_dataset -> update;
_read_dataset -> all;
_check_label_ids_loaded_from_pkl -> isinstance;
_check_label_ids_loaded_from_pkl -> ValueError;
_check_label_ids_loaded_from_pkl -> raise_not_equal_labels_error;
_check_label_ids_loaded_from_pkl -> type;
_calculate_and_save_label_frequencies -> from_iterable;
_calculate_and_save_label_frequencies -> mkdir;
_calculate_and_save_label_frequencies -> get_label_stats;
_calculate_and_save_label_frequencies -> info;
_calculate_and_save_label_frequencies -> str;
_pack_into_batches -> list;
_pack_into_batches -> shuffle;
_pack_into_batches -> zip;
_pack_into_batches -> _mark_up_batches;
_pack_into_batches -> len;
_pack_into_batches -> tqdm;
_pack_into_batches -> pad;
_pack_into_batches -> append;
_pack_into_batches -> put;
_pack_into_batches -> sorted;
_pack_into_batches -> astype;
_pack_into_batches -> create_masks_and_segment_ids;
_pack_into_batches -> max;
_form_batches -> list;
_form_batches -> len;
_form_batches -> zip;
_form_batches -> append;
_form_batches -> astype;
_check_label_ids_vs_unique_labels -> set;
_check_label_ids_vs_unique_labels -> list;
_check_label_ids_vs_unique_labels -> ValueError;
_check_label_ids_vs_unique_labels -> len;
calc_batch_seq_length -> ceil;
calc_batch_seq_length -> max;
calc_batch_seq_length -> len;
_adjust_number_of_batches -> copy;
_adjust_number_of_batches -> warning;
_adjust_number_of_batches -> len;
_adjust_number_of_batches -> map;
_adjust_number_of_batches -> sum;
_adjust_number_of_batches -> zip;
_adjust_number_of_batches -> calc_batch_seq_length;
_adjust_number_of_batches -> append;
_adjust_number_of_batches -> sorted;
_mark_up_batches -> range;
_mark_up_batches -> tqdm;
_mark_up_batches -> enumerate;
_mark_up_batches -> max;
_mark_up_batches -> len;
_mark_up_batches -> calc_batch_seq_length;
_mark_up_batches -> append;
_mark_up_batches -> _adjust_number_of_batches;
_mark_up_batches -> sum;
_mark_up_batches -> put;
_mark_up_batches -> ceil;
_mark_up_batches -> warning;
repack_batches_with_shuffle -> info;
repack_batches_with_shuffle -> _pack_into_batches;
save_labels_and_get_file_paths -> save_label_ids;
save_labels_and_get_file_paths -> mkdir;
save_labels_and_get_file_paths -> copy;
save_labels_and_get_file_paths -> str;
get_features_infer -> enumerate;
get_features_infer -> _check_max_seq_length_and_margin_and_step;
get_features_infer -> info;
get_features_infer -> get_stats;
get_features_infer -> zip;
get_features_infer -> _get_subtokens_and_subtokens_mask;
get_features_infer -> append;
get_features_infer -> len;
get_features_infer -> min;
get_features_infer -> range;
get_features_infer -> list;
get_features_infer -> max;
get_features_infer -> chain;
get_features_infer -> isinstance;
get_features_infer -> ModuleNotFoundError;
get_features_infer -> tokens_to_ids;
get_features_infer -> count_nonzero;
get_features_infer -> from_file;
get_features_infer -> BytesIO;
get_features_infer -> strip;
_check_max_seq_length_and_margin_and_step -> ValueError;
_check_max_seq_length_and_margin_and_step -> warning;
_get_subtokens_and_subtokens_mask -> isinstance;
_get_subtokens_and_subtokens_mask -> split;
_get_subtokens_and_subtokens_mask -> enumerate;
_get_subtokens_and_subtokens_mask -> text_to_tokens;
_get_subtokens_and_subtokens_mask -> extend;
_get_subtokens_and_subtokens_mask -> append;
_get_subtokens_and_subtokens_mask -> strip;
_get_subtokens_and_subtokens_mask -> len;
count_lines_and_get_fragment_starting_positions -> open;
count_lines_and_get_fragment_starting_positions -> readline;
count_lines_and_get_fragment_starting_positions -> append;
count_lines_and_get_fragment_starting_positions -> tell;
get_fragment_start_bytes -> info;
get_fragment_start_bytes -> Parallel;
get_fragment_start_bytes -> ValueError;
get_fragment_start_bytes -> len;
get_fragment_start_bytes -> delayed;
process_fragment -> get_tokenizer;
process_fragment -> unlink;
process_fragment -> TarWriter;
process_fragment -> enumerate;
process_fragment -> close;
process_fragment -> put;
process_fragment -> mkstemp;
process_fragment -> BertPunctuationCapitalizationDataset;
process_fragment -> format;
process_fragment -> str;
process_fragment -> write;
process_fragment -> len;
process_fragment -> rename;
process_fragment -> save_labels_and_get_file_paths;
process_fragment -> rmtree;
process_fragment -> open;
process_fragment -> fdopen;
process_fragment -> seek;
process_fragment -> range;
process_fragment -> exists;
process_fragment -> remove;
process_fragment -> readline;
remove_unexpected_files_and_dirs -> compile;
remove_unexpected_files_and_dirs -> exists;
remove_unexpected_files_and_dirs -> is_dir;
remove_unexpected_files_and_dirs -> format;
remove_unexpected_files_and_dirs -> warning;
remove_unexpected_files_and_dirs -> unlink;
remove_unexpected_files_and_dirs -> iterdir;
remove_unexpected_files_and_dirs -> any;
remove_unexpected_files_and_dirs -> len;
remove_unexpected_files_and_dirs -> join;
remove_unexpected_files_and_dirs -> match;
remove_unexpected_files_and_dirs -> str;
collect_unique_labels_from_fragment -> set;
collect_unique_labels_from_fragment -> open;
collect_unique_labels_from_fragment -> seek;
collect_unique_labels_from_fragment -> range;
collect_unique_labels_from_fragment -> put;
collect_unique_labels_from_fragment -> readline;
collect_unique_labels_from_fragment -> split;
collect_unique_labels_from_fragment -> zip;
collect_unique_labels_from_fragment -> update;
collect_unique_labels_from_fragment -> all;
collect_unique_labels_from_fragment -> ValueError;
collect_unique_labels_from_fragment -> enumerate;
collect_unique_labels_from_fragment -> len;
create_label_dictionaries -> zip;
create_label_dictionaries -> union;
create_label_dictionaries -> Progress;
create_label_dictionaries -> create_label_ids;
create_label_dictionaries -> Parallel;
create_label_dictionaries -> set;
create_label_dictionaries -> min;
create_label_dictionaries -> delayed;
create_label_dictionaries -> enumerate;
create_label_dictionaries -> len;
check_label_ids -> ValueError;
check_label_ids -> len;
check_label_ids -> format;
process_error -> callable;
process_error -> ValueError;
process_error -> isclass;
process_error -> issubclass;
process_error -> error_class_or_function;
process_error -> type;
get_label_dictionaries -> check_label_ids;
get_label_dictionaries -> ValueError;
get_label_dictionaries -> load_label_ids;
get_label_dictionaries -> create_label_dictionaries;
decode_pyd -> loads;
repack_tar_files_with_not_enough_batches -> sorted;
repack_tar_files_with_not_enough_batches -> info;
repack_tar_files_with_not_enough_batches -> deque;
repack_tar_files_with_not_enough_batches -> len;
repack_tar_files_with_not_enough_batches -> close;
repack_tar_files_with_not_enough_batches -> unlink;
repack_tar_files_with_not_enough_batches -> match;
repack_tar_files_with_not_enough_batches -> iterdir;
repack_tar_files_with_not_enough_batches -> popleft;
repack_tar_files_with_not_enough_batches -> TarWriter;
repack_tar_files_with_not_enough_batches -> DataPipeline;
repack_tar_files_with_not_enough_batches -> iter;
repack_tar_files_with_not_enough_batches -> pop;
repack_tar_files_with_not_enough_batches -> int;
repack_tar_files_with_not_enough_batches -> format;
repack_tar_files_with_not_enough_batches -> str;
repack_tar_files_with_not_enough_batches -> SimpleShardList;
repack_tar_files_with_not_enough_batches -> tarfile_to_samples;
repack_tar_files_with_not_enough_batches -> decode;
repack_tar_files_with_not_enough_batches -> to_tuple;
repack_tar_files_with_not_enough_batches -> write;
repack_tar_files_with_not_enough_batches -> group;
repack_tar_files_with_not_enough_batches -> handle_extension;
repack_tar_files_with_not_enough_batches -> next;
create_metadata_file -> enumerate;
create_metadata_file -> info;
create_metadata_file -> int;
create_metadata_file -> rename;
create_metadata_file -> append;
create_metadata_file -> open;
create_metadata_file -> dump;
create_metadata_file -> group;
create_metadata_file -> format;
create_metadata_file -> iterdir;
create_metadata_file -> match;
_check_pad_label -> ValueError;
check_for_label_consistency_with_model_config -> dict;
check_for_label_consistency_with_model_config -> expanduser;
check_for_label_consistency_with_model_config -> load_label_ids;
check_for_label_consistency_with_model_config -> raise_not_equal_labels_error;
check_for_label_consistency_with_model_config -> Path;
check_for_label_consistency_with_model_config -> format;
remove_punctuation -> replace;
remove_punctuation -> sub;
remove_punctuation -> strip;
remove_punctuation -> lower;
create_text_and_labels -> makedirs;
create_text_and_labels -> basename;
create_text_and_labels -> join;
create_text_and_labels -> print;
create_text_and_labels -> exists;
create_text_and_labels -> ValueError;
create_text_and_labels -> open;
create_text_and_labels -> split;
create_text_and_labels -> write;
create_text_and_labels -> remove_punctuation;
create_text_and_labels -> len;
create_text_and_labels -> isupper;
create_text_and_labels -> lower;
create_text_and_labels -> strip;
get_label_ids -> info;
get_label_ids -> dirname;
get_label_ids -> set;
get_label_ids -> join;
get_label_ids -> exists;
get_label_ids -> ValueError;
get_label_ids -> open;
get_label_ids -> sorted;
get_label_ids -> splitext;
get_label_ids -> get_label_stats;
get_label_ids -> split;
get_label_ids -> extend;
get_label_ids -> update;
get_label_ids -> remove;
get_label_ids -> len;
get_label_ids -> zip;
get_label_ids -> write;
get_label_ids -> basename;
get_label_ids -> load;
get_label_ids -> get_freq_weights;
get_label_ids -> fill_class_weights;
get_label_ids -> dump;
get_label_ids -> strip;
get_label_ids -> items;
calc_class_weights_from_dataloader -> info;
calc_class_weights_from_dataloader -> get_label_stats;
calc_class_weights_from_dataloader -> get_freq_weights;
calc_class_weights_from_dataloader -> fill_class_weights;
calc_class_weights_from_dataloader -> extend;
calc_class_weights_from_dataloader -> join;
calc_class_weights_from_dataloader -> ValueError;
calc_class_weights_from_dataloader -> tensor2list;
tensor2list -> tolist;
tensor2list -> cpu;
tensor2list -> detach;
_helper -> flatten;
save_predictions -> range;
save_predictions -> len;
save_predictions -> append;
save_predictions -> open;
save_predictions -> write;
save_predictions -> dumps;
_get_one_f1 -> split;
_get_one_f1 -> sum;
_get_one_f1 -> array;
_get_one_f1 -> Counter;
_get_one_f1 -> values;
_get_one_f1 -> len;
get_f1 -> array;
get_f1 -> mean;
get_f1 -> _get_one_f1;
get_f1 -> range;
get_f1 -> len;
get_bleu -> corpus_bleu;
get_bleu -> range;
get_bleu -> len;
split_label_and_slots -> append;
split_label_and_slots -> isinstance;
split_label_and_slots -> strip;
split_label_and_slots -> len;
split_label_and_slots -> split;
get_slot_filling_metrics -> range;
get_slot_filling_metrics -> len;
get_slot_filling_metrics -> sorted;
get_slot_filling_metrics -> int;
get_slot_filling_metrics -> append;
get_slot_filling_metrics -> mean;
get_slot_filling_metrics -> list;
get_slot_filling_metrics -> set;
get_score -> zip;
get_score -> len;
get_score -> tensor;
get_score -> corpus_score;
get_score -> range;
get_score -> tolist;
get_score -> score;
get_score -> append;
get_score -> mean;
get_score -> array;
_get_normalized_tokens -> split;
_get_normalized_tokens -> normalize_answer;
get_one_f1 -> _get_normalized_tokens;
get_one_f1 -> sum;
get_one_f1 -> Counter;
get_one_f1 -> values;
get_one_f1 -> int;
get_one_f1 -> len;
get_one_exact_match -> int;
get_one_exact_match -> normalize_answer;
convert_dict_outputs_to_lists -> enumerate;
convert_dict_outputs_to_lists -> range;
convert_dict_outputs_to_lists -> isinstance;
convert_dict_outputs_to_lists -> len;
convert_dict_outputs_to_lists -> extend;
convert_dict_outputs_to_lists -> tensor2list;
get_exact_match_and_f1 -> max;
get_exact_match_and_f1 -> normalize_answer;
get_exact_match_and_f1 -> get_one_exact_match;
get_exact_match_and_f1 -> get_one_f1;
merge_eval_dicts -> OrderedDict;
dump_predicted_answers_to_file -> info;
dump_predicted_answers_to_file -> open;
dump_predicted_answers_to_file -> tqdm;
dump_predicted_answers_to_file -> write;
dump_predicted_answers_to_file -> dumps;
dump_nbest_predictions_to_file -> info;
dump_nbest_predictions_to_file -> open;
dump_nbest_predictions_to_file -> tqdm;
dump_nbest_predictions_to_file -> write;
dump_nbest_predictions_to_file -> append;
dump_nbest_predictions_to_file -> dumps;
compute_f1 -> Counter;
compute_f1 -> sum;
compute_f1 -> F1Scores;
compute_f1 -> values;
compute_f1 -> float;
fuzzy_string_match -> token_sort_ratio;
noncat_slot_value_match -> max;
noncat_slot_value_match -> fuzzy_string_match;
noncat_slot_value_match -> float;
compare_slot_values -> append;
compare_slot_values -> len;
compare_slot_values -> float;
compare_slot_values -> noncat_slot_value_match;
get_megatron_pretrained_bert_models -> list_available_models;
get_lm_model -> get;
get_lm_model -> get_megatron_pretrained_bert_models;
get_lm_model -> warning;
get_lm_model -> Identity;
get_lm_model -> get_huggingface_lm_model;
get_lm_model -> restore_from;
get_lm_model -> from_pretrained;
get_lm_model -> AppState;
get_lm_model -> restore_weights;
get_lm_model -> get_pretrained_lm_models_list;
get_lm_model -> list_available_models;
get_lm_model -> __init__;
get_lm_model -> ValueError;
get_lm_model -> exists;
get_lm_model -> super;
register_bert_model -> isinstance;
register_bert_model -> replace;
register_bert_model -> join;
register_bert_model -> to_json_file;
register_bert_model -> register_artifact;
register_bert_model -> hasattr;
register_bert_model -> info;
register_bert_model -> open;
register_bert_model -> write;
register_bert_model -> dumps;
_register_vocab_from_tokenizer -> ValueError;
_register_vocab_from_tokenizer -> isinstance;
_register_vocab_from_tokenizer -> get_vocab;
_register_vocab_from_tokenizer -> dict;
_register_vocab_from_tokenizer -> md5;
_register_vocab_from_tokenizer -> encode;
_register_vocab_from_tokenizer -> update;
_register_vocab_from_tokenizer -> hexdigest;
_register_vocab_from_tokenizer -> join;
_register_vocab_from_tokenizer -> makedirs;
_register_vocab_from_tokenizer -> register_artifact;
_register_vocab_from_tokenizer -> save_vocabulary;
_register_vocab_from_tokenizer -> info;
_register_vocab_from_tokenizer -> sorted;
_register_vocab_from_tokenizer -> open;
_register_vocab_from_tokenizer -> write;
_register_vocab_from_tokenizer -> items;
_register_vocab_from_tokenizer -> dumps;
is_model_parallel_initialized -> AppState;
get_binary_score_labels -> zeros_like;
get_binary_score_labels -> range;
get_binary_score_labels -> size;
eval_step_helper -> self;
eval_step_helper -> log;
eval_step_helper -> format;
eval_step_helper -> rank_candidates;
eval_step_helper -> batch_decode;
eval_step_helper -> generate_candidates;
eval_step_helper -> binary_score_candidates;
eval_step_helper -> ValueError;
eval_step_helper -> loss;
eval_step_helper -> cat;
eval_step_helper -> argmax;
eval_step_helper -> Softmax;
eval_step_helper -> softmax;
eval_step_helper -> unbind;
eval_step_helper -> size;
eval_step_helper -> view;
eval_step_helper -> repeat;
eval_step_helper -> where;
eval_step_helper -> floor_divide;
eval_step_helper -> fmod;
eval_step_helper -> range;
eval_step_helper -> all_gather;
eval_step_helper -> append;
eval_step_helper -> Sigmoid;
eval_step_helper -> max;
eval_step_helper -> unsqueeze;
eval_step_helper -> zeros;
eval_step_helper -> arange;
eval_step_helper -> empty_like;
eval_step_helper -> get_device;
eval_epoch_end -> split_label_and_slots;
eval_epoch_end -> makedirs;
eval_epoch_end -> join;
eval_epoch_end -> save_predictions;
eval_epoch_end -> mean;
eval_epoch_end -> to;
eval_epoch_end -> classification_report;
eval_epoch_end -> compute;
eval_epoch_end -> reset;
eval_epoch_end -> get_slot_filling_metrics;
eval_epoch_end -> info;
eval_epoch_end -> log;
eval_epoch_end -> format;
eval_epoch_end -> int;
eval_epoch_end -> tensor;
eval_epoch_end -> save;
eval_epoch_end -> range;
eval_epoch_end -> state_dict;
eval_epoch_end -> len;
eval_epoch_end -> get_f1;
eval_epoch_end -> get_bleu;
eval_epoch_end -> exp;
eval_epoch_end -> append;
eval_epoch_end -> item;
eval_epoch_end -> round;
eval_epoch_end -> isinstance;
eval_epoch_end -> enumerate;
eval_epoch_end -> AppState;
eval_epoch_end -> hasattr;
eval_epoch_end -> is_pipeline_last_stage;
eval_epoch_end -> broadcast;
eval_epoch_end -> list;
eval_epoch_end -> all_gather_object;
eval_epoch_end -> all_reduce;
eval_epoch_end -> clear;
eval_epoch_end -> reconfigure_num_microbatches_calculator;
eval_epoch_end -> get_last_rank;
eval_epoch_end -> chain;
eval_epoch_end -> set;
eval_epoch_end -> numpy;
eval_epoch_end -> get_data_parallel_group;
eval_epoch_end -> get_data_parallel_world_size;
eval_epoch_end -> corpus_bleu;
eval_epoch_end -> randint;
eval_epoch_end -> FloatTensor;
eval_epoch_end -> cpu;
eval_epoch_end -> _log_multilingual_bleu_and_loss;
eval_epoch_end -> stack;
eval_epoch_end -> zip;
eval_epoch_end -> add;
eval_epoch_end -> eval_epoch_end;
eval_epoch_end -> items;
eval_epoch_end -> super;
eval_epoch_end -> get;
eval_epoch_end -> getattr;
eval_epoch_end -> strip;
get_prompt_token_labels_for_megatron_gpt -> full;
get_prompt_token_labels_for_megatron_gpt -> to;
get_prompt_token_labels_for_megatron_gpt -> LongTensor;
get_prompt_token_labels_for_megatron_gpt -> tile;
get_prompt_token_labels_for_megatron_gpt -> size;
get_prompt_token_labels_for_megatron_gpt -> array;
get_virtual_prompt_ids_for_megatron_gpt -> text_to_ids;
get_virtual_prompt_ids_for_megatron_gpt -> to;
get_virtual_prompt_ids_for_megatron_gpt -> repeat;
get_virtual_prompt_ids_for_megatron_gpt -> tensor;
get_virtual_prompt_ids_for_megatron_gpt -> size;
mask_and_reduce_loss -> float;
mask_and_reduce_loss -> sum;
mask_and_reduce_loss -> view;
mask_and_reduce_loss_per_sample -> float;
mask_and_reduce_loss_per_sample -> mean;
mask_and_reduce_loss_per_sample -> view;
mask_and_reduce_loss_per_sample -> size;
binary_score_candidates -> range;
binary_score_candidates -> stack;
binary_score_candidates -> process_into_structured_fields;
binary_score_candidates -> size;
binary_score_candidates -> float;
binary_score_candidates -> append;
binary_score_candidates -> self;
binary_score_candidates -> item;
binary_score_candidates -> equal;
binary_score_candidates -> get_binary_score_labels;
process_into_structured_fields -> range;
process_into_structured_fields -> process_ground_truth_field;
process_into_structured_fields -> size;
process_into_structured_fields -> strip;
process_into_structured_fields -> append;
process_into_structured_fields -> item;
process_into_structured_fields -> decode;
rank_candidates -> range;
rank_candidates -> stack;
rank_candidates -> process_into_structured_fields;
rank_candidates -> size;
rank_candidates -> item;
rank_candidates -> self;
rank_candidates -> argmin;
rank_candidates -> append;
rank_candidates -> equal;
generate_candidates -> process_into_structured_fields;
generate_candidates -> range;
generate_candidates -> cat;
generate_candidates -> size;
generate_candidates -> append;
generate_candidates -> max;
generate_candidates -> get_virtual_prompt_ids_for_megatron_gpt;
generate_candidates -> get_prompt_token_labels_for_megatron_gpt;
generate_candidates -> stack;
generate_candidates -> type;
generate_candidates -> megatron_gpt_generate;
generate_candidates -> LongTensor;
generate_candidates -> generate;
generate_candidates -> hasattr;
generate_candidates -> len;
generate_candidates -> get_default_sampling_params;
generate_candidates -> to;
generate_candidates -> ones;
generate_candidates -> item;
generate_candidates -> prepare_megatron_generation;
generate_candidates -> complete;
generate_candidates -> post_process_megatron_generation;
generate_candidates -> reconfigure_num_microbatches_calculator;
generate_candidates -> decode;
megatron_gpt_generate -> generate;
megatron_gpt_generate -> copy;
megatron_gpt_generate -> get_computeprob_response;
megatron_gpt_generate -> isinstance;
megatron_gpt_generate -> NotImplementedError;
megatron_gpt_generate -> get;
megatron_gpt_generate -> type;
batch_decode -> decode;
batch_decode -> isinstance;
batch_decode -> is_tensor;
batch_decode -> tolist;
batch_decode -> enumerate;
batch_decode -> decode_ids;
batch_decode -> strip;
batch_decode -> numpy;
batch_decode -> cpu;
process_ground_truth_field -> range;
process_ground_truth_field -> size;
process_ground_truth_field -> tuple;
process_ground_truth_field -> append;
process_ground_truth_field -> strip;
process_ground_truth_field -> decode;
init_prompt_encoder -> PromptEncoderType;
init_prompt_encoder -> PromptEncoder;
init_prompt_encoder -> lower;
init_prompt_encoder -> get;
update_data_dirs -> info;
update_data_dirs -> exists;
update_data_dirs -> ValueError;
prepare_megatron_generation -> size;
prepare_megatron_generation -> tolist;
prepare_megatron_generation -> zip;
prepare_megatron_generation -> list;
prepare_megatron_generation -> append;
prepare_megatron_generation -> unsqueeze;
prepare_megatron_generation -> range;
prepare_megatron_generation -> set;
prepare_megatron_generation -> to;
prepare_megatron_generation -> enumerate;
prepare_megatron_generation -> tensor;
prepare_megatron_generation -> len;
post_process_megatron_generation -> tokenizer;
complete -> AppState;
complete -> reconfigure_num_microbatches_calculator;
complete -> freeze;
complete -> join;
complete -> decode;
complete -> tolist;
complete -> hasattr;
complete -> ids_to_tokens;
complete -> tokens_to_text;
complete -> list;
complete -> unfreeze;
complete -> int;
complete -> index;
complete -> zip;
complete -> numpy;
complete -> values;
complete -> cpu;
complete -> llm_completion_callback;
complete -> generate;
complete -> CompletionResponse;
mean_pooling -> float;
mean_pooling -> sum;
mean_pooling -> clamp;
mean_pooling -> expand;
mean_pooling -> size;
mean_pooling -> unsqueeze;
create_loss_module -> hasattr;
create_loss_module -> CrossEntropyLoss;
_setup_infer_dataloader -> ZeroShotIntentInferenceDataset;
_setup_infer_dataloader -> DataLoader;
_setup_infer_dataloader -> DialogueIntentSlotInferenceDataset;
_setup_infer_dataloader -> IntentSlotInferenceDataset;
_setup_infer_dataloader -> SpellcheckingAsrCustomizationTestDataset;
_setup_infer_dataloader -> get;
_setup_infer_dataloader -> TextClassificationDataset;
_setup_infer_dataloader -> ThutmoseTaggerTestDataset;
_setup_infer_dataloader -> BertPunctuationCapitalizationInferDataset;
_setup_infer_dataloader -> BertTokenClassificationInferDataset;
_setup_infer_dataloader -> CTCG2PBPEDataset;
_setup_infer_dataloader -> HeteronymClassificationDataset;
_setup_infer_dataloader -> T5G2PDataset;
_reconfigure_classifier -> SequenceTokenClassifier;
_reconfigure_classifier -> AggregatorLoss;
_reconfigure_classifier -> ClassificationReport;
_reconfigure_classifier -> CrossEntropyLoss;
_reconfigure_classifier -> len;
_reconfigure_classifier -> MultiLabelClassificationReport;
_reconfigure_classifier -> BCEWithLogitsLoss;
_set_defaults_data_desc -> hasattr;
_set_defaults_data_desc -> set_struct;
_set_data_desc_to_cfg -> IntentSlotDataDesc;
_set_data_desc_to_cfg -> set_struct;
_set_data_desc_to_cfg -> list;
_set_data_desc_to_cfg -> join;
_set_data_desc_to_cfg -> _save_label_ids;
_set_data_desc_to_cfg -> register_artifact;
_set_data_desc_to_cfg -> keys;
_set_data_desc_to_cfg -> create;
_set_data_desc_to_cfg -> hasattr;
_set_data_desc_to_cfg -> Path;
_set_data_desc_to_cfg -> MultiLabelIntentSlotDataDesc;
_save_label_ids -> open;
_save_label_ids -> zip;
_save_label_ids -> write;
_save_label_ids -> info;
_save_label_ids -> join;
_save_label_ids -> sorted;
_save_label_ids -> items;
update_data_dir_for_training -> info;
update_data_dir_for_training -> _set_data_desc_to_cfg;
update_data_dir_for_training -> _reconfigure_classifier;
get_utterance_tokens -> convert_ids_to_tokens;
get_utterance_tokens -> enumerate;
get_utterance_tokens -> item;
get_utterance_tokens -> join;
get_utterance_tokens -> append;
get_utterance_tokens -> replace;
get_unified_metrics -> convert_intent_ids_to_intent_names;
get_unified_metrics -> mask_unused_subword_slots;
get_unified_metrics -> range;
get_unified_metrics -> makedirs;
get_unified_metrics -> join;
get_unified_metrics -> save_predictions;
get_unified_metrics -> get_slot_filling_metrics;
get_unified_metrics -> len;
get_unified_metrics -> get_utterance_tokens;
get_unified_metrics -> split;
get_unified_metrics -> get_continuous_slots;
get_unified_metrics -> append;
convert_intent_ids_to_intent_names -> append;
convert_intent_ids_to_intent_names -> int;
mask_unused_subword_slots -> zip;
mask_unused_subword_slots -> append;
mask_unused_subword_slots -> strip;
mask_unused_subword_slots -> int;
multi_eval_epoch_end_helper -> cat;
multi_eval_epoch_end_helper -> get_str_example_id;
multi_eval_epoch_end_helper -> list;
multi_eval_epoch_end_helper -> items;
multi_eval_epoch_end_helper -> join;
multi_eval_epoch_end_helper -> makedirs;
multi_eval_epoch_end_helper -> get_dialogue_files;
multi_eval_epoch_end_helper -> get_in_domain_services;
multi_eval_epoch_end_helper -> combine_predictions_in_example;
multi_eval_epoch_end_helper -> write_predictions_to_file;
multi_eval_epoch_end_helper -> evaluate;
multi_eval_epoch_end_helper -> format;
multi_eval_epoch_end_helper -> map;
multi_eval_epoch_end_helper -> range;
multi_eval_epoch_end_helper -> get_seen_services;
multi_eval_epoch_end_helper -> tensor2list;
multi_eval_epoch_end_helper -> chunk;
multi_eval_epoch_end_helper -> view;
get_str_example_id -> list;
get_str_example_id -> format;
get_str_example_id -> map;
get_str_example_id -> tensor2list;
combine_predictions_in_example -> items;
combine_predictions_in_example -> range;
combine_predictions_in_example -> chunk;
combine_predictions_in_example -> view;
format_turn_id -> format;
_generate_predictions -> no_grad;
_generate_predictions -> generate;
_generate_predictions -> batch_decode;
_generate_predictions -> get;
_generate_predictions -> forward;
_generate_predictions -> enumerate;
_generate_predictions -> _generate_audio;
_generate_predictions -> zip;
_generate_predictions -> Path;
_generate_predictions -> numpy;
_generate_predictions -> ImageArtifact;
_generate_predictions -> append;
_generate_predictions -> AudioArtifact;
_generate_predictions -> cpu;
get_formatted_string -> join;
get_formatted_string -> append;
get_formatted_string -> len;
decode_tag_preds -> enumerate;
decode_tag_preds -> append;
_postprocess_tag_preds -> enumerate;
_postprocess_tag_preds -> append;
_postprocess_tag_preds -> has_numbers;
has_numbers -> any;
has_numbers -> isdigit;
_is_model_being_restored -> AppState;
compute_metrics -> metric_fn;
compute_metrics -> len;
compute_metrics -> ValueError;
acc_and_f1 -> mean;
acc_and_f1 -> f1_score;
mcc -> matthews_corrcoef;
pearson_and_spearman -> pearsonr;
pearson_and_spearman -> spearmanr;
get_lm_model_with_padded_embedding -> get_lm_model;
get_lm_model_with_padded_embedding -> zeros;
get_lm_model_with_padded_embedding -> cat;
get_lm_model_with_padded_embedding -> ceil;
get_lm_model_with_padded_embedding -> to_container;
calculate_mean_reciprocal_rank -> mean;
calculate_mean_reciprocal_rank -> append;
calculate_mean_reciprocal_rank -> enumerate;
calculate_mean_reciprocal_rank -> argsort;
compute_scores_and_loss -> size;
compute_scores_and_loss -> view;
compute_scores_and_loss -> log_softmax;
compute_scores_and_loss -> to;
compute_scores_and_loss -> loss;
compute_scores_and_loss -> cat;
compute_scores_and_loss -> self;
compute_scores_and_loss -> long;
compute_scores_and_loss -> ones_like;
compute_scores_and_loss -> diag;
compute_scores_and_loss -> arange;
compute_scores_and_loss -> zeros_like;
listify -> cpu;
listify -> append;
listify -> unsqueeze;
listify -> range;
listify -> isinstance;
build_LDDL_data -> info;
build_LDDL_data -> get_data_parallel_world_size;
build_LDDL_data -> get_bert_pretrain_data_loader;
build_LDDL_data -> ImportError;
build_LDDL_data -> compute_consumed_samples;
build_LDDL_data -> len;
build_LDDL_data -> get_data_parallel_rank;
gather_and_maybe_write_predictions -> all_gather_object;
gather_and_maybe_write_predictions -> range;
gather_and_maybe_write_predictions -> info;
gather_and_maybe_write_predictions -> get;
gather_and_maybe_write_predictions -> get_data_parallel_world_size;
gather_and_maybe_write_predictions -> _compute_consumed_samples_after_training_step;
gather_and_maybe_write_predictions -> write_embeddings_to_file;
gather_and_maybe_write_predictions -> get_data_parallel_group;
gather_and_maybe_write_predictions -> listify;
gather_and_maybe_write_predictions -> zip;
gather_and_maybe_write_predictions -> ValueError;
gather_and_maybe_write_predictions -> len;
gather_and_maybe_write_predictions -> hasattr;
gather_and_maybe_write_predictions -> append;
gather_and_maybe_write_predictions -> _determine_log_key;
gather_and_maybe_write_predictions -> compute;
gather_and_maybe_write_predictions -> reset;
gather_and_maybe_write_predictions -> write_predictions_to_file;
gather_and_maybe_write_predictions -> metric_fn;
gather_and_maybe_write_predictions -> items;
gather_and_maybe_write_predictions -> log;
gather_and_maybe_write_predictions -> item;
gather_and_maybe_write_predictions -> set;
gather_and_maybe_write_predictions -> str;
gather_and_maybe_write_predictions -> add;
write_embeddings_to_file -> cat;
write_embeddings_to_file -> numpy;
write_embeddings_to_file -> makedirs;
write_embeddings_to_file -> save;
write_embeddings_to_file -> open;
write_embeddings_to_file -> float;
write_embeddings_to_file -> write;
write_embeddings_to_file -> strip;
inference_loss_func -> zeros;
inference_loss_func -> normalize;
_gather_global_inbatch_representations -> contiguous;
_gather_global_inbatch_representations -> all_gather_no_backprop;
_gather_global_inbatch_representations -> cat;
_gather_global_inbatch_representations -> all_gather_with_backprop;
_gather_global_inbatch_representations -> zeros_like;
_gather_global_inbatch_representations -> get_data_parallel_rank;
_gather_global_inbatch_representations -> range;
_gather_global_inbatch_representations -> get_data_parallel_group;
_gather_global_inbatch_representations -> get_data_parallel_world_size;
_gather_global_inbatch_representations -> all_gather;
training_step_fwd_bwd_step_call -> fwd_bwd_step;
training_step_fwd_bwd_step_call -> item;
training_step_fwd_bwd_step_call -> log;
inference_step_validation_call -> get;
inference_step_validation_call -> local_validation_step;
inference_step_validation_call -> chain;
inference_step_validation_call -> len;
inference_step_validation_call -> validation_step;
inference_step_validation_call -> predict_step;
inference_step_validation_call -> super;
inference_step_validation_call -> get_inference_config;
inference_step_validation_call -> set_inference_config;
inference_step_validation_call -> ids_to_text;
inference_step_validation_call -> tolist;
inference_step_validation_call -> zip;
inference_step_validation_call -> item;
local_validation_step -> next;
local_validation_step -> isinstance;
local_validation_step -> get;
local_validation_step -> fwd_bwd_step;
local_validation_step -> chain;
local_validation_step -> initialize_ub_func;
local_validation_step -> eval;
local_validation_step -> train;
local_validation_step -> append;
local_validation_step -> type;
local_validation_step -> len;
constrastive_scores -> cat;
constrastive_scores -> mm;
constrastive_scores -> diag;
constrastive_scores -> mean;
constrastive_scores -> clamp;
constrastive_scores -> transpose;
constrastive_scores -> long;
constrastive_scores -> detach;
constrastive_scores -> arange;
constrastive_scores -> zeros;
constrastive_scores -> unsqueeze;
constrastive_scores -> clone;
prediction_probabilities -> eval;
prediction_probabilities -> to;
prediction_probabilities -> _setup_infer_dataloader;
prediction_probabilities -> concatenate;
prediction_probabilities -> train;
prediction_probabilities -> is_available;
prediction_probabilities -> forward;
prediction_probabilities -> append;
prediction_probabilities -> numpy;
prediction_probabilities -> cpu;
prediction_probabilities -> detach;
prediction_probabilities -> sigmoid;
_compute_losses -> mlm_loss;
_compute_losses -> nsp_loss;
_compute_losses -> agg_loss;
_setup_preprocessed_dataloader -> isdir;
_setup_preprocessed_dataloader -> sort;
_setup_preprocessed_dataloader -> BertPretrainingPreprocessedDataloader;
_setup_preprocessed_dataloader -> join;
_setup_preprocessed_dataloader -> listdir;
_setup_preprocessed_dataloader -> isfile;
_setup_dataloader -> BertPretrainingDataset;
_setup_dataloader -> DataLoader;
_setup_dataloader -> get;
_validate_cfg -> get;
_validate_cfg -> ValueError;
_validate_cfg -> hasattr;
_validate_cfg -> ceil;
_build_train_valid_test_datasets_kwargs -> dict;
_build_train_valid_test_datasets_kwargs -> get;
_enable_nvidia_optimizations -> getenv;
_enable_nvidia_optimizations -> fullmatch;
_enable_nvidia_optimizations -> is_official_release_version;
_enable_nvidia_optimizations -> strftime;
_enable_nvidia_optimizations -> int;
_enable_nvidia_optimizations -> _jit_set_profiling_executor;
_enable_nvidia_optimizations -> _jit_set_profiling_mode;
_enable_nvidia_optimizations -> _jit_override_can_fuse_on_cpu;
_enable_nvidia_optimizations -> _jit_override_can_fuse_on_gpu;
_enable_nvidia_optimizations -> _jit_set_texpr_fuser_enabled;
_enable_nvidia_optimizations -> _jit_set_nvfuser_enabled;
_enable_nvidia_optimizations -> _debug_set_autodiff_subgraph_inlining;
_enable_nvidia_optimizations -> now;
_enable_nvidia_optimizations -> split;
_validate_and_override_config -> AppState;
_validate_and_override_config -> get;
_validate_and_override_config -> info;
_validate_and_override_config -> ValueError;
_validate_and_override_config -> open_dict;
_build_tokenizer -> hasattr;
_build_tokenizer -> get_nmt_tokenizer;
_build_tokenizer -> get;
_build_tokenizer -> to_object;
_build_tokenizer -> add_special_tokens;
_build_tokenizer -> register_artifact;
_build_tokenizer -> getattr;
_build_tokenizer -> setup_enc_dec_tokenizers;
_build_tokenizer -> SentencePieceSpeechLLMTTSTokenizer;
_build_tokenizer -> _build_tokenizer;
_build_tokenizer -> super;
setup_transformer_engine_cp_groups -> Stream;
setup_transformer_engine_cp_groups -> get_model_module_list;
setup_transformer_engine_cp_groups -> enumerate;
setup_transformer_engine_cp_groups -> modules;
setup_transformer_engine_cp_groups -> hasattr;
setup_transformer_engine_cp_groups -> set_context_parallel_group;
setup_transformer_engine_cp_groups -> get_context_parallel_group;
setup_transformer_engine_cp_groups -> get_context_parallel_global_ranks;
extract_module -> isinstance;
extract_module -> extract_module;
is_official_release_version -> fullmatch;
get_parameters_with_grad -> append;
configure_gradient_clipping -> float;
configure_gradient_clipping -> log;
configure_gradient_clipping -> configure_gradient_clipping;
configure_gradient_clipping -> clip_grad_norm_distributed_optimizer;
configure_gradient_clipping -> clip_grad_norm_fp32;
configure_gradient_clipping -> get_parameters_with_grad;
configure_gradient_clipping -> super;
clip_grad_norm_distributed_optimizer -> isinstance;
clip_grad_norm_distributed_optimizer -> parameters;
clip_grad_norm_distributed_optimizer -> grad_norm;
clip_grad_norm_distributed_optimizer -> clip_grad_norm;
clip_grad_norm_distributed_optimizer -> param_is_not_shared;
clip_grad_norm_distributed_optimizer -> param_is_not_tensor_parallel_duplicate;
clip_grad_norm_distributed_optimizer -> append;
clip_grad_norm_fp32 -> no_grad;
clip_grad_norm_fp32 -> isinstance;
clip_grad_norm_fp32 -> float;
clip_grad_norm_fp32 -> squeeze;
clip_grad_norm_fp32 -> clamp;
clip_grad_norm_fp32 -> warning;
clip_grad_norm_fp32 -> all_reduce;
clip_grad_norm_fp32 -> _foreach_mul_;
clip_grad_norm_fp32 -> len;
clip_grad_norm_fp32 -> zeros;
clip_grad_norm_fp32 -> max;
clip_grad_norm_fp32 -> detach;
clip_grad_norm_fp32 -> append;
clip_grad_norm_fp32 -> param_is_not_shared;
clip_grad_norm_fp32 -> param_is_not_tensor_parallel_duplicate;
clip_grad_norm_fp32 -> multi_tensor_applier;
clip_grad_norm_fp32 -> norm;
clip_grad_norm_fp32 -> get_model_parallel_group;
clip_grad_norm_fp32 -> get_data_parallel_group;
clip_grad_norm_fp32 -> fill_;
clip_grad_norm_fp32 -> abs;
reduce_overlap_gradients -> try_grad_sync;
reduce_overlap_gradients -> parameters;
try_grad_sync -> list;
try_grad_sync -> _try_start_bucket_grad_sync;
try_grad_sync -> filter;
try_grad_sync -> _grad_copy;
try_grad_sync -> getattr;
sync_overlap_parameters -> _try_start_bucket_param_sync;
_optim_config_copy -> isinstance;
_optim_config_copy -> deepcopy;
_optim_config_copy -> create;
_optim_config_copy -> hasattr;
get_config_arg -> get;
str_to_dtype -> isinstance;
str_to_dtype -> lower;
str_to_dtype -> startswith;
str_to_dtype -> replace;
str_to_dtype -> ValueError;
str_to_dtype -> strip;
str_to_dtype -> str;
_get_max_steps -> len;
_get_max_steps -> getattr;
_get_max_steps -> warning;
_get_max_steps -> isinstance;
_get_max_steps -> min;
_get_max_steps -> int;
_get_max_steps -> compute_max_steps;
_get_max_steps -> get_num_workers;
_get_max_steps -> get_batch_size;
prepare_lr_scheduler -> isinstance;
prepare_lr_scheduler -> get;
prepare_lr_scheduler -> get_scheduler;
prepare_lr_scheduler -> scheduler_cls;
prepare_lr_scheduler -> info;
prepare_lr_scheduler -> maybe_update_config_version;
prepare_lr_scheduler -> to_container;
prepare_lr_scheduler -> is_dataclass;
prepare_lr_scheduler -> create;
prepare_lr_scheduler -> instantiate;
prepare_lr_scheduler -> vars;
prepare_lr_scheduler -> pop;
prepare_lr_scheduler -> str;
prepare_lr_scheduler -> to_yaml;
prepare_lr_scheduler -> deepcopy;
prepare_lr_scheduler -> replace;
prepare_lr_scheduler -> warning;
prepare_lr_scheduler -> get_scheduler_config;
prepare_lr_scheduler -> scheduler_params_cls;
prepare_lr_scheduler -> len;
prepare_lr_scheduler -> compute_max_steps;
prepare_lr_scheduler -> signature;
prepare_lr_scheduler -> format;
prepare_lr_scheduler -> hasattr;
prepare_lr_scheduler -> ValueError;
init_params_bucket -> isinstance;
init_params_bucket -> len;
init_params_bucket -> init_params_bucket;
init_params_bucket -> getattr;
init_params_bucket -> is_float8tensor;
init_params_bucket -> numel;
init_params_bucket -> ParameterFragment;
init_params_bucket -> append;
init_params_bucket -> chain;
init_params_bucket -> super;
init_params_bucket -> add_param_to_bucket;
init_param_buffer -> no_grad;
init_param_buffer -> init_params;
init_param_buffer -> defaultdict;
init_param_buffer -> items;
init_param_buffer -> list;
init_param_buffer -> enumerate;
init_param_buffer -> _multi_tensor_copy;
init_param_buffer -> zip;
init_param_buffer -> dtypes;
init_param_buffer -> max;
init_param_buffer -> getattr;
init_param_buffer -> parameters;
init_param_buffer -> numel;
init_param_buffer -> detach;
init_param_buffer -> is_float8tensor;
init_param_buffer -> append;
init_param_buffer -> zeros;
init_param_buffer -> RuntimeError;
init_param_buffer -> is_contiguous;
init_param_buffer -> view;
init_param_buffer -> as_strided;
init_param_buffer -> nccl_mem;
init_param_buffer -> permute;
init_param_buffer -> size;
init_param_buffer -> stride;
init_param_buffer -> storage_offset;
is_data_parallel_rank_zero -> is_global_rank_zero;
is_data_parallel_rank_zero -> get_data_parallel_rank;
word_embeddings_weight -> hasattr;
word_embeddings_weight -> Exception;
word_embeddings_weight -> ValueError;
_get_total_params_across_model_parallel_groups_enc_dec -> sum;
_get_total_params_across_model_parallel_groups_enc_dec -> cuda;
_get_total_params_across_model_parallel_groups_enc_dec -> all_reduce;
_get_total_params_across_model_parallel_groups_enc_dec -> is_pipeline_stage_before_split;
_get_total_params_across_model_parallel_groups_enc_dec -> is_pipeline_stage_after_split;
_get_total_params_across_model_parallel_groups_enc_dec -> nelement;
_get_total_params_across_model_parallel_groups_enc_dec -> get_pipeline_model_parallel_world_size;
_get_total_params_across_model_parallel_groups_enc_dec -> is_pipeline_last_stage;
_get_total_params_across_model_parallel_groups_enc_dec -> is_pipeline_stage_at_split;
_get_total_params_across_model_parallel_groups_enc_dec -> is_pipeline_first_stage;
_get_total_params_across_model_parallel_groups_enc_dec -> get;
_get_total_params_across_model_parallel_groups_enc_dec -> tensor;
_get_total_params_across_model_parallel_groups_enc_dec -> get_model_parallel_group;
_get_total_params_across_model_parallel_groups_enc_dec -> parameters;
_get_total_params_across_model_parallel_groups_enc_dec -> get_pipeline_model_parallel_rank;
_get_total_params_across_model_parallel_groups_enc_dec -> word_embeddings_weight;
_get_total_params_across_model_parallel_groups_enc_dec -> encoder_relative_position_embeddings_weight;
_get_total_params_across_model_parallel_groups_enc_dec -> decoder_relative_position_embeddings_weight;
_get_total_params_across_model_parallel_groups_enc_dec -> position_embeddings_weight;
encoder_relative_position_embeddings_weight -> hasattr;
encoder_relative_position_embeddings_weight -> ValueError;
decoder_relative_position_embeddings_weight -> hasattr;
decoder_relative_position_embeddings_weight -> ValueError;
position_embeddings_weight -> hasattr;
position_embeddings_weight -> ValueError;
_val_iterator_done -> next;
_val_iterator_done -> chain;
optimizer_step -> megatron_timer_start;
optimizer_step -> optimizer_step;
optimizer_step -> megatron_timer_stop;
optimizer_step -> super;
optimizer_step -> isinstance;
optimizer_step -> closure;
optimizer_step -> copy_model_grads_to_main_grads;
optimizer_step -> unscale_;
optimizer_step -> _after_closure;
optimizer_step -> step;
optimizer_step -> update;
optimizer_step -> log;
optimizer_step -> hasattr;
optimizer_step -> is_param_in_hook_signature;
optimizer_step -> wait_stream;
optimizer_step -> synchronize;
optimizer_step -> sleep;
optimizer_step -> rank_zero_info;
optimizer_step -> replay;
optimizer_step -> from_training_step_output;
optimizer_step -> non_cuda_graph_capturable;
optimizer_step -> current_stream;
optimizer_step -> stream;
optimizer_step -> zero_grad;
optimizer_step -> __orig_optimizer_step__;
optimizer_step -> "graph";
get_pseudo_tokens -> range;
get_pseudo_tokens -> str;
load_task_templates -> max;
load_task_templates -> all;
load_task_templates -> findall;
load_task_templates -> get;
first_stage_of_pipeline -> get_pipeline_model_parallel_rank;
first_stage_of_pipeline -> is_pipeline_first_stage;
freeze_existing_word_embeddings -> parameters;
embed_input -> clone;
embed_input -> expand;
embed_input -> type;
embed_input -> scatter_;
embed_input -> any;
embed_input -> size;
embed_input -> prompt_encoder;
embed_input -> ValueError;
embed_input -> word_embeddings;
embed_input -> reshape;
embed_input -> nonzero;
build_virtual_prompt_dataset -> GPTPromptLearningDataset;
build_virtual_prompt_dataset -> get_data_parallel_rank;
build_virtual_prompt_dataset -> get_data_parallel_world_size;
build_virtual_prompt_dataset -> DistributedSampler;
build_virtual_prompt_dataset -> DataLoader;
build_virtual_prompt_dataset -> get;
build_virtual_prompt_dataset -> partial;
build_virtual_prompt_dataset -> get_tensor_model_parallel_world_size;
build_virtual_prompt_dataset -> T5PromptLearningDataset;
build_virtual_prompt_dataset -> print;
build_virtual_prompt_dataset -> len;
build_virtual_prompt_dataset -> T5SpeechLMDataset;
build_virtual_prompt_dataset -> info;
_reconfigure_batch_sizes -> AppState;
_reconfigure_batch_sizes -> reconfigure_num_microbatches_calculator;
_reconfigure_batch_sizes -> get_data_parallel_world_size;
_reconfigure_batch_sizes -> _reconfigure_microbatch_calculator;
make_proxy -> append;
make_proxy -> Proxy;
get_bert_module_list -> isinstance;
average_pool -> masked_fill;
average_pool -> sum;
average_pool -> bool;
get_falcon_layer_spec -> TransformerLayerSubmodules;
get_falcon_layer_spec -> ModuleSpec;
get_falcon_layer_spec -> ImportError;
get_falcon_layer_spec -> SelfAttentionSubmodules;
get_falcon_layer_spec -> MLPSubmodules;
get_gemma2_layer_spec -> ModuleSpec;
get_gemma2_layer_spec -> TransformerLayerSubmodules;
get_gemma2_layer_spec -> SelfAttentionSubmodules;
get_gemma2_layer_spec -> MLPSubmodules;
get_gpt_layer_with_te_and_hyena_spec -> get_gpt_layer_with_transformer_engine_spec;
get_gpt_layer_with_te_and_hyena_spec -> get_hyena_layer_with_transformer_engine_spec;
drop_layers -> len;
drop_layers -> info;
drop_layers -> clone;
mcore_model_customize -> get;
mcore_model_customize -> is_pipeline_first_stage;
mcore_model_customize -> extend_instance;
mcore_model_customize -> apply_rope_scaling;
mcore_model_customize -> drop_layers;
noop_forward_patch -> clone;
is_float8tensor -> isinstance;
make_parameter_bucket -> any;
make_parameter_bucket -> list;
make_parameter_bucket -> parameters;
make_parameter_bucket -> is_float8tensor;
make_parameter_bucket -> filter;
make_parameter_bucket -> getattr;
initialize_last_rank_embeddings -> get_pipeline_model_parallel_world_size;
initialize_last_rank_embeddings -> get;
initialize_last_rank_embeddings -> enumerate;
initialize_last_rank_embeddings -> get_model_module_list;
initialize_last_rank_embeddings -> sync_embeddings;
mgpt_wrapper -> MegatronGPTExportableModel;
_reset_activation_checkpointing_args -> get_model_module_list;
_reset_activation_checkpointing_args -> get;
_reset_sequence_parallelism_args -> get_model_module_list;
_reset_sequence_parallelism_args -> modules;
_reset_sequence_parallelism_args -> hasattr;
_restore_sequence_parallelism_args -> get_model_module_list;
_restore_sequence_parallelism_args -> modules;
_restore_sequence_parallelism_args -> hasattr;
cast_for_metric -> replace;
cast_for_metric -> to;
cast_for_metric -> float;
cast_for_metric -> ValueError;
cast_for_metric -> FloatTensor;
cast_for_metric -> int;
cast_for_metric -> index;
cast_for_metric -> LongTensor;
decoder_cross_attention_relative_position_embeddings_weight -> hasattr;
decoder_cross_attention_relative_position_embeddings_weight -> ValueError;
_handle_bias_activation_fusion_args -> get;
_handle_bias_activation_fusion_args -> hasattr;
_handle_bias_activation_fusion_args -> warning;
_populate_encoder_decoder_configs_for_backward_compatibility -> deepcopy;
_populate_encoder_decoder_configs_for_backward_compatibility -> set_struct;
_populate_encoder_decoder_configs_for_backward_compatibility -> open_dict;
_populate_encoder_decoder_configs_for_backward_compatibility -> get;
_populate_encoder_decoder_configs_for_backward_compatibility -> _handle_bias_activation_fusion_args;
_execute_fwd_bwd_function -> get_forward_backward_func;
_execute_fwd_bwd_function -> fwd_bwd_function;
_execute_fwd_bwd_function -> keys;
_execute_fwd_bwd_function -> cuda;
_execute_fwd_bwd_function -> get_forward_output_and_loss_func;
_execute_fwd_bwd_function -> get_num_microbatches;
_execute_fwd_bwd_function -> get_micro_batch_size;
_execute_fwd_bwd_function -> mean;
_execute_fwd_bwd_function -> tensor;
_execute_fwd_bwd_function -> stack;
allreduce_word_and_position_embeddings -> is_rank_in_embedding_group;
allreduce_word_and_position_embeddings -> is_rank_in_position_embedding_group;
allreduce_word_and_position_embeddings -> get;
allreduce_word_and_position_embeddings -> get_pipeline_model_parallel_world_size;
allreduce_word_and_position_embeddings -> word_embeddings_weight;
allreduce_word_and_position_embeddings -> all_reduce;
allreduce_word_and_position_embeddings -> ValueError;
allreduce_word_and_position_embeddings -> get_pipeline_model_parallel_split_rank;
allreduce_word_and_position_embeddings -> position_embeddings_weight;
allreduce_word_and_position_embeddings -> is_rank_in_encoder_relative_position_embedding_group;
allreduce_word_and_position_embeddings -> encoder_relative_position_embeddings_weight;
allreduce_word_and_position_embeddings -> is_rank_in_decoder_relative_position_embedding_group;
allreduce_word_and_position_embeddings -> decoder_relative_position_embeddings_weight;
allreduce_word_and_position_embeddings -> decoder_cross_attention_relative_position_embeddings_weight;
allreduce_word_and_position_embeddings -> get_embedding_group;
allreduce_word_and_position_embeddings -> get_position_embedding_group;
allreduce_word_and_position_embeddings -> get_encoder_relative_position_embedding_group;
allreduce_word_and_position_embeddings -> get_decoder_relative_position_embedding_group;
max_decoder_seq_length -> get;
_process_batch -> get;
_process_batch -> pad_audio;
_process_batch -> audio_encoder;
_process_batch -> audio_decoder;
_process_batch -> encoder_noise;
_process_batch -> vector_quantizer;
_process_batch -> audio_to_melspec_precessor;
_kwargs_to_arg_idx -> lru_cache;
_kwargs_to_arg_idx -> getfullargspec;
_kwargs_to_arg_idx -> zip;
_kwargs_to_arg_idx -> range;
_kwargs_to_arg_idx -> len;
_build_forward_args_from_kwargs -> any;
_build_forward_args_from_kwargs -> _kwargs_to_arg_idx;
_build_forward_args_from_kwargs -> items;
_build_forward_args_from_kwargs -> zip;
_build_forward_args_from_kwargs -> len;
_build_forward_args_from_kwargs -> ValueError;
_build_forward_args_from_kwargs -> append;
_build_forward_args_from_kwargs -> max;
_build_forward_args_from_kwargs -> list;
_build_forward_args_from_kwargs -> keys;
_get_forward_output_only_func -> isinstance;
_get_forward_output_only_func -> next;
_get_forward_output_only_func -> _build_forward_args_from_kwargs;
_get_forward_output_only_func -> contiguous;
_get_forward_output_only_func -> is_tensor;
_get_forward_output_only_func -> cuda;
_get_forward_output_only_func -> unsqueeze;
_get_forward_output_only_func -> transpose;
_get_forward_output_only_func -> model;
_test_validation_step -> fwd_bwd_step;
_test_validation_epoch_end -> items;
_test_validation_epoch_end -> clear;
_test_validation_epoch_end -> warning;
_test_validation_epoch_end -> is_pipeline_last_stage;
_test_validation_epoch_end -> len;
_test_validation_epoch_end -> broadcast;
_test_validation_epoch_end -> log;
_test_validation_epoch_end -> mean;
_test_validation_epoch_end -> cuda;
_test_validation_epoch_end -> get_last_rank;
_test_validation_epoch_end -> keys;
_test_validation_epoch_end -> endswith;
_test_validation_epoch_end -> stack;
_test_validation_epoch_end -> tensor;
process_micro_batch -> long;
process_micro_batch -> float;
_process_global_batch_without_megatron_batch_sampler -> max;
_process_global_batch_without_megatron_batch_sampler -> concat;
_process_global_batch_without_megatron_batch_sampler -> process_micro_batch;
_process_global_batch_without_megatron_batch_sampler -> append;
_process_global_batch_without_megatron_batch_sampler -> pad;
sync_initial_position_embeddings -> is_rank_in_position_embedding_group;
sync_initial_position_embeddings -> position_embeddings_weight;
sync_initial_position_embeddings -> all_reduce;
sync_initial_position_embeddings -> get_pipeline_model_parallel_split_rank;
sync_initial_position_embeddings -> get_position_embedding_group;
sync_initial_encoder_relative_position_embeddings -> is_rank_in_encoder_relative_position_embedding_group;
sync_initial_encoder_relative_position_embeddings -> encoder_relative_position_embeddings_weight;
sync_initial_encoder_relative_position_embeddings -> all_reduce;
sync_initial_encoder_relative_position_embeddings -> get_encoder_relative_position_embedding_group;
sync_initial_decoder_relative_position_embeddings -> is_rank_in_decoder_relative_position_embedding_group;
sync_initial_decoder_relative_position_embeddings -> decoder_relative_position_embeddings_weight;
sync_initial_decoder_relative_position_embeddings -> all_reduce;
sync_initial_decoder_relative_position_embeddings -> get_decoder_relative_position_embedding_group;
sync_initial_decoder_cross_attention_relative_position_embeddings -> is_rank_in_decoder_relative_position_embedding_group;
sync_initial_decoder_cross_attention_relative_position_embeddings -> decoder_cross_attention_relative_position_embeddings_weight;
sync_initial_decoder_cross_attention_relative_position_embeddings -> all_reduce;
sync_initial_decoder_cross_attention_relative_position_embeddings -> get_decoder_relative_position_embedding_group;
get_t5_module_list -> isinstance;
get_sampling_token_fn -> copy;
get_sampling_token_fn -> update;
get_sampling_token_fn -> partial;
get_sampling_token_fn -> ValueError;
get_sampling_token_fn -> keys;
compute_beam_search_len_penalty -> pow;
id_func -> isinstance;
set_base_shapes -> _extract_shapes;
set_base_shapes -> get_shapes;
set_base_shapes -> _zip_infshape_dict;
set_base_shapes -> apply_infshapes;
set_base_shapes -> save_base_shapes;
set_base_shapes -> assert_hidden_size_inf;
set_base_shapes -> named_modules;
set_base_shapes -> isinstance;
set_base_shapes -> _rescale_parameters;
set_base_shapes -> rescale_linear_bias;
build_all_datasets -> RetroQAFineTuneDataset;
build_all_datasets -> get;
load_retro_config -> get_retro_config_path;
load_retro_config -> exists;
load_retro_config -> get;
load_retro_config -> open;
load_retro_config -> SimpleNamespace;
load_retro_config -> get_retro_data_dir;
load_retro_config -> list;
load_retro_config -> range;
load_retro_config -> join;
load_retro_config -> open_dict;
load_retro_config -> load;
load_retro_config -> len;
build_retro_config -> get;
build_retro_config -> info;
build_retro_config -> Version;
build_retro_config -> version;
build_retro_config -> getenv;
build_retro_config -> Exception;
compute_accuracy -> decode;
compute_accuracy -> tolist;
compute_accuracy -> enumerate;
compute_accuracy -> zip;
compute_accuracy -> hasattr;
compute_accuracy -> ids_to_text;
compute_accuracy -> append;
compute_accuracy -> numpy;
compute_accuracy -> index;
compute_accuracy -> cpu;
_get_component_cfg -> get;
_get_component_cfg -> open_dict;
_add_adapters_to_component -> named_modules;
_add_adapters_to_component -> isinstance;
_add_adapters_to_component -> _get_adapter_cfg;
_add_adapters_to_component -> import_class_by_path;
_add_adapters_to_component -> get_accepted_adapter_types;
_add_adapters_to_component -> add_adapter;
_add_adapters_to_component -> print;
_get_adapter_cfg -> ParallelLinearAdapterConfig;
_get_adapter_cfg -> LinearAdapterConfig;
_get_adapter_cfg -> get;
_get_adapter_cfg -> LoraKQVAdapterConfig;
_get_adapter_cfg -> LoraKVAdapterConfig;
_get_adapter_cfg -> LoraQAdapterConfig;
_get_adapter_cfg -> RuntimeError;
_get_adapter_cfg -> MLPInfusedAdapterConfig;
_get_adapter_cfg -> ValueError;
_get_adapter_cfg -> InfusedAdapterConfig;
_component_state_dict -> named_modules;
_component_state_dict -> isinstance;
_component_state_dict -> is_adapter_available;
_component_state_dict -> set_enabled_adapters;
_component_state_dict -> get_adapter_module;
_component_state_dict -> join;
_component_state_dict -> state_dict;
_load_component_state_dict -> named_modules;
_load_component_state_dict -> isinstance;
_load_component_state_dict -> is_adapter_available;
_load_component_state_dict -> set_enabled_adapters;
_load_component_state_dict -> get_adapter_module;
_load_component_state_dict -> join;
_load_component_state_dict -> load_state_dict;
add_special_tokens_to_tokenizer -> add_special_tokens;
add_special_tokens_to_tokenizer -> _add_base_special_tokens;
add_special_tokens_to_tokenizer -> extend;
add_special_tokens_to_tokenizer -> get;
add_special_tokens_to_tokenizer -> _add_sentinel_tokens;
add_special_tokens_to_tokenizer -> range;
add_special_tokens_to_tokenizer -> len;
add_special_tokens_to_tokenizer -> text_to_ids;
_add_sentinel_tokens -> range;
_add_sentinel_tokens -> len;
_add_sentinel_tokens -> add_special_tokens;
_add_sentinel_tokens -> text_to_ids;
_add_base_special_tokens -> hasattr;
_add_base_special_tokens -> add_special_tokens;
_add_base_special_tokens -> id_to_piece;
_add_base_special_tokens -> bos_id;
_add_base_special_tokens -> eos_id;
_add_base_special_tokens -> pad_id;
on_predict_epoch_end -> list;
on_predict_epoch_end -> all_gather_object;
on_predict_epoch_end -> chain;
on_predict_epoch_end -> len;
on_predict_epoch_end -> get_data_parallel_rank;
on_predict_epoch_end -> info;
on_predict_epoch_end -> range;
on_predict_epoch_end -> get_data_parallel_group;
on_predict_epoch_end -> set;
on_predict_epoch_end -> append;
on_predict_epoch_end -> get_data_parallel_world_size;
on_predict_epoch_end -> zip;
setup_eval_data -> build_data_loader;
setup_eval_data -> append;
setup_eval_data -> hasattr;
_build_train_dataset -> ValueError;
_build_train_dataset -> hasattr;
_build_train_dataset -> isinstance;
_build_train_dataset -> zip;
_build_train_dataset -> len;
_build_train_dataset -> ConcatMapDataset;
_build_train_dataset -> SequenceToSequenceDataset;
_build_train_dataset -> append;
_build_train_dataset -> get_data_parallel_world_size;
_build_train_dataset -> T5SFTDataset;
_build_train_dataset -> get;
_build_eval_dataset -> ValueError;
_build_eval_dataset -> hasattr;
_build_eval_dataset -> isinstance;
_build_eval_dataset -> zip;
_build_eval_dataset -> get_data_parallel_world_size;
_build_eval_dataset -> SequenceToSequenceDataset;
_build_eval_dataset -> append;
_build_eval_dataset -> len;
_build_eval_dataset -> T5SFTDataset;
_build_eval_dataset -> get;
_build_eval_dataset -> _setup_eval_dataset_from_config;
get_transformer -> isinstance;
get_transformer -> get_nemo_transformer;
get_transformer -> asdict;
get_transformer -> isfile;
get_transformer -> get_huggingface_transformer;
get_transformer -> ValueError;
eval_step -> range;
eval_step -> self;
eval_step -> eval_loss_fn;
eval_step -> eval_loss;
eval_step -> eval_ppl;
eval_step -> len;
eval_step -> append;
eval_step -> squeeze;
eval_step -> next;
eval_step -> process_global_batch_for_text_translation_datasets;
eval_step -> AppState;
eval_step -> reconfigure_num_microbatches_calculator;
eval_step -> fwd_bwd_step;
eval_step -> decode;
eval_step -> postprocess_outputs;
eval_step -> isinstance;
eval_step -> chain;
eval_step -> update;
eval_step -> size;
eval_step -> get_data_parallel_world_size;
eval_step -> type;
eval_step -> loss;
eval_step -> dict;
eval_step -> batch_translate;
eval_step -> numpy;
eval_step -> item;
eval_step -> NamedTimer;
eval_step -> ids_to_text;
eval_step -> detokenize;
eval_step -> items;
eval_step -> getattr;
eval_step -> cpu;
eval_step -> split;
eval_step -> sum;
eval_step -> is_tensor;
eval_step -> export;
eval_step -> detach;
eval_step -> not_equal;
eval_step -> _make_step;
eval_step -> argmax;
eval_step -> to;
post_language_model_processing -> parallel_lm_logits;
post_language_model_processing -> contiguous;
post_language_model_processing -> get_tensor_model_parallel_world_size;
post_language_model_processing -> vocab_parallel_cross_entropy;
post_language_model_processing -> transpose;
post_language_model_processing -> float;
post_language_model_processing -> lm_head;
post_language_model_processing -> binary_head;
parallel_lm_logits -> linear_with_grad_accumulation_and_async_allreduce;
parallel_lm_logits -> get_tensor_model_parallel_world_size;
parallel_lm_logits -> copy_to_tensor_model_parallel_region;
parallel_lm_logits -> gather_from_tensor_model_parallel_region;
vocab_parallel_cross_entropy -> apply;
bert_extended_attention_mask -> unsqueeze;
get_linear_layer -> Linear;
get_linear_layer -> init_method;
get_linear_layer -> no_grad;
get_linear_layer -> zero_;
get_layer_norm -> FastLayerNorm;
get_layer_norm -> MixedFusedLayerNorm;
get_griffin_layers -> range;
get_griffin_layers -> append;
create_block -> build_module;
allocate_inference_cache -> allocate_inference_cache;
allocate_inference_cache -> enumerate;
griffin_position_ids -> size;
griffin_position_ids -> arange;
griffin_position_ids -> expand_as;
griffin_position_ids -> unsqueeze;
embedding_forward -> griffin_position_ids;
embedding_forward -> embedding;
embedding_forward -> type_as;
embedding_forward -> tensor;
embedding_forward -> sqrt;
_embedding_decode_ -> contiguous;
_embedding_decode_ -> tanh;
_embedding_decode_ -> transpose;
_scan_preprocess_ -> exp;
_scan_preprocess_ -> sqrt;
_scan_preprocess_ -> permute;
_scan_preprocess_ -> contiguous;
_scan_preprocess_ -> softplus;
_scan_preprocess_ -> type;
rnn_scan -> _scan_preprocess_;
rnn_scan -> type_as;
rnn_scan -> permute;
rnn_scan -> scan;
rnn_scan -> float;
rnn_param_init -> rand;
rnn_param_init -> log;
rnn_param_init -> NotImplementedError;
rnn_param_init -> exp;
_fused_permute_add_ -> permute;
_fused_permute_mult_ -> permute;
w_init_ -> sqrt;
w_init_ -> normal_;
_fused_pre_reshape_ -> reshape;
_fused_pre_reshape_ -> permute;
_post_add_reshape_sigmoid_ -> reshape;
_post_add_reshape_sigmoid_ -> sigmoid;
_post_add_reshape_sigmoid_ -> permute;
a_param_init -> rnn_param_init;
_fused_pst_gates_ -> exp;
_fused_pst_gates_ -> sqrt;
_fused_pst_gates_ -> softplus;
_fused_pst_gates_ -> type;
_determine_multilingual_training_type -> isinstance;
_determine_multilingual_training_type -> ValueError;
_setup_multilingual_special_tokens -> set;
_setup_multilingual_special_tokens -> ValueError;
setup_enc_dec_tokenizers -> get_nmt_tokenizer;
setup_enc_dec_tokenizers -> NotImplementedError;
setup_enc_dec_tokenizers -> ValueError;
setup_enc_dec_tokenizers -> getattr;
setup_enc_dec_tokenizers -> append;
setup_enc_dec_tokenizers -> hasattr;
setup_enc_dec_tokenizers -> add_special_tokens;
setup_enc_dec_tokenizers -> id_to_piece;
setup_enc_dec_tokenizers -> pad_id;
setup_enc_dec_tokenizers -> bos_id;
setup_enc_dec_tokenizers -> eos_id;
setup_multilingual_ids_and_processors -> OrderedDict;
setup_multilingual_ids_and_processors -> zip;
setup_multilingual_ids_and_processors -> isinstance;
setup_multilingual_ids_and_processors -> list;
setup_multilingual_ids_and_processors -> setup_pre_and_post_processing_utils;
setup_multilingual_ids_and_processors -> append;
setup_multilingual_ids_and_processors -> len;
setup_multilingual_ids_and_processors -> set;
setup_multilingual_ids_and_processors -> add_special_tokens;
setup_multilingual_ids_and_processors -> text_to_ids;
setup_pre_and_post_processing_utils -> ByteLevelProcessor;
setup_pre_and_post_processing_utils -> EnJaProcessor;
setup_pre_and_post_processing_utils -> JaMecabProcessor;
setup_pre_and_post_processing_utils -> ChineseProcessor;
setup_pre_and_post_processing_utils -> IndicProcessor;
setup_pre_and_post_processing_utils -> MosesProcessor;
process_global_batch_for_text_translation_datasets -> _process_global_batch_without_megatron_batch_sampler;
process_global_batch_for_text_translation_datasets -> long;
postprocess_outputs -> tolist;
postprocess_outputs -> hasattr;
postprocess_outputs -> ids_to_text;
postprocess_outputs -> append;
postprocess_outputs -> numpy;
postprocess_outputs -> index;
postprocess_outputs -> detokenize;
postprocess_outputs -> split;
postprocess_outputs -> cpu;
postprocess_outputs -> values;
_setup_eval_dataloader_from_config -> get_data_parallel_rank;
_setup_eval_dataloader_from_config -> get_data_parallel_world_size;
_setup_eval_dataloader_from_config -> DistributedSampler;
_setup_eval_dataloader_from_config -> append;
_setup_eval_dataloader_from_config -> DataLoader;
_setup_eval_dataloader_from_config -> get;
_setup_eval_dataloader_from_config -> RandomSampler;
_setup_eval_dataloader_from_config -> SequentialSampler;
_setup_eval_dataloader_from_config -> isinstance;
_log_multilingual_bleu_and_loss -> isinstance;
_log_multilingual_bleu_and_loss -> log;
_setup_megatron_dataloader_from_config -> info;
_setup_megatron_dataloader_from_config -> isinstance;
_setup_megatron_dataloader_from_config -> MegatronPretrainingBatchSampler;
_setup_megatron_dataloader_from_config -> DataLoader;
_setup_megatron_dataloader_from_config -> len;
_setup_megatron_dataloader_from_config -> get_data_parallel_rank;
_setup_megatron_dataloader_from_config -> get_data_parallel_world_size;
_setup_eval_dataset_from_config -> get;
_setup_eval_dataset_from_config -> enumerate;
_setup_eval_dataset_from_config -> ValueError;
_setup_eval_dataset_from_config -> isinstance;
_setup_eval_dataset_from_config -> len;
_setup_eval_dataset_from_config -> TranslationDataset;
_setup_eval_dataset_from_config -> batchify;
_setup_eval_dataset_from_config -> append;
_setup_eval_dataset_from_config -> str;
_setup_eval_dataset_from_config -> expanduser;
_setup_eval_dataset_from_config -> Path;
build_memmap_dataset_from_config -> isinstance;
build_memmap_dataset_from_config -> ValueError;
build_memmap_dataset_from_config -> zip;
build_memmap_dataset_from_config -> get_datasets_weights_and_num_samples;
build_memmap_dataset_from_config -> sum;
build_memmap_dataset_from_config -> enumerate;
build_memmap_dataset_from_config -> BlendableDataset;
build_memmap_dataset_from_config -> _instantiate_memmap_dataset;
build_memmap_dataset_from_config -> len;
build_memmap_dataset_from_config -> append;
_instantiate_memmap_dataset -> get;
_instantiate_memmap_dataset -> BinarizedMemmapSequenceToSequenceDataset;
_instantiate_memmap_dataset -> BinarizedMemmapCrossLingualMLMAndTranslationDataset;
_instantiate_memmap_dataset -> TextMemmapSequenceToSequenceDataset;
_instantiate_memmap_dataset -> TextMemmapCrossLingualMLMAndTranslationDataset;
itn_translate_tn -> translate;
itn_translate_tn -> normalize;
build_linear_or_identity -> Linear;
build_linear_or_identity -> Identity;
encode_latent -> hidden2latent_mean;
encode_latent -> zeros_like;
encode_latent -> hidden2latent_logv;
encode_latent -> clamp_min;
encode_latent -> randn_like;
encode_latent -> exp;
test_encoder_ids -> logical_or;
test_encoder_ids -> any;
test_encoder_ids -> ValueError;
test_decoder_ids -> logical_or;
test_decoder_ids -> any;
test_decoder_ids -> ValueError;
_validate_encoder_decoder_hidden_size -> ValueError;
log_param_stats -> named_parameters;
log_param_stats -> add_histogram;
log_param_stats -> add_scalars;
log_param_stats -> mean;
log_param_stats -> std;
log_param_stats -> max;
log_param_stats -> min;
_setup_dataset_from_config -> get;
_setup_dataset_from_config -> isinstance;
_setup_dataset_from_config -> enumerate;
_setup_dataset_from_config -> FileNotFoundError;
_setup_dataset_from_config -> ValueError;
_setup_dataset_from_config -> TarredTranslationDataset;
_setup_dataset_from_config -> append;
_setup_dataset_from_config -> len;
_setup_dataset_from_config -> ConcatDataset;
_setup_dataset_from_config -> TranslationDataset;
_setup_dataset_from_config -> batchify;
_setup_dataset_from_config -> open;
_setup_dataset_from_config -> load;
_setup_dataset_from_config -> abspath;
_setup_dataset_from_config -> info;
_setup_dataset_from_config -> str;
_setup_dataset_from_config -> dirname;
_setup_dataset_from_config -> exists;
_setup_dataset_from_config -> expanduser;
_setup_dataset_from_config -> join;
_setup_dataset_from_config -> basename;
_setup_dataset_from_config -> RuntimeError;
_setup_dataset_from_config -> Path;
setup_inference_data -> create;
setup_inference_data -> _setup_dataloader_from_config;
_get_per_sample_perplexity -> no_grad;
_get_per_sample_perplexity -> CrossEntropyLoss;
_get_per_sample_perplexity -> loss_fct;
_get_per_sample_perplexity -> reshape;
_get_per_sample_perplexity -> exp;
_get_per_sample_perplexity -> view;
_get_per_sample_perplexity -> size;
_get_per_sample_perplexity -> sum;
_get_best_indexes -> argsort;
_get_final_text -> BasicTokenizer;
_get_final_text -> join;
_get_final_text -> find;
_get_final_text -> _strip_spaces;
_get_final_text -> items;
_get_final_text -> OrderedDict;
_get_final_text -> enumerate;
_get_final_text -> tokenize;
_get_final_text -> len;
_get_final_text -> append;
_get_final_text -> warning;
_generate_candidates -> range;
_generate_candidates -> cat;
_generate_candidates -> _get_answers_from_generated_tokens;
_generate_candidates -> size;
_generate_candidates -> append;
_generate_candidates -> max;
_generate_candidates -> ValueError;
_generate_candidates -> generate;
_generate_candidates -> to;
_generate_candidates -> ones;
_generate_candidates -> batch_decode;
_generate_candidates -> strip;
_inference -> enumerate;
_inference -> _prep_inference_labels;
_inference -> forward;
_inference -> append;
_inference -> to;
_inference -> _generate_candidates;
_prep_inference_labels -> batch_decode;
_prep_inference_labels -> _generate_candidates;
_prep_inference_labels -> tokenizer;
_prep_inference_labels -> update_labels_for_no_pad_loss;
_prep_inference_labels -> to;
_prep_inference_labels -> len;
_prep_inference_labels -> unsqueeze;
_prep_inference_labels -> zip;
_prep_inference_labels -> squeeze;
_get_answers_from_generated_tokens -> range;
_get_answers_from_generated_tokens -> size;
_get_answers_from_generated_tokens -> strip;
_get_answers_from_generated_tokens -> append;
_get_answers_from_generated_tokens -> item;
_get_answers_from_generated_tokens -> decode;
_aget_query_embedding -> _get_query_embedding;
_get_query_embedding -> _construct_forward_input;
_get_query_embedding -> keys;
_get_query_embedding -> forward;
_get_query_embedding -> transpose;
_get_query_embedding -> tolist;
_get_query_embedding -> to;
_aget_text_embedding -> _get_text_embedding;
_get_text_embedding -> _construct_forward_input;
_get_text_embedding -> keys;
_get_text_embedding -> forward;
_get_text_embedding -> transpose;
_get_text_embedding -> tolist;
_get_text_embedding -> to;
_construct_forward_input -> min;
_construct_forward_input -> LongTensor;
_construct_forward_input -> stack;
_construct_forward_input -> zeros_like;
_construct_forward_input -> text_to_ids;
_construct_forward_input -> len;
_construct_forward_input -> _ceil_to_nearest;
_construct_forward_input -> zeros;
_construct_forward_input -> _create_attention_mask2;
_construct_forward_input -> max;
metadata -> LLMMetadata;
stream_complete -> llm_completion_callback;
stream_complete -> generate;
stream_complete -> CompletionResponse;
setup_dataloader_from_config -> Text2SparqlDataset;
setup_dataloader_from_config -> DataLoader;
setup_dataloader_from_config -> get;
legacy_model_config_to_new_model_config -> get;
legacy_model_config_to_new_model_config -> structured;
legacy_model_config_to_new_model_config -> PunctuationCapitalizationModelConfig;
legacy_model_config_to_new_model_config -> open_dict;
legacy_model_config_to_new_model_config -> keys;
legacy_model_config_to_new_model_config -> CommonDatasetParametersConfig;
legacy_model_config_to_new_model_config -> HeadConfig;
legacy_model_config_to_new_model_config -> legacy_data_config_to_new_data_config;
_make_step -> self;
_make_step -> loss_punct;
_make_step -> loss_capit;
_make_step -> agg_loss;
_make_step -> loss;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> list;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> enumerate;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> zip;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> _remove_margins;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> numpy;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> softmax;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> append;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> count_nonzero;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> cpu;
_transform_logit_to_prob_and_remove_margins_and_extract_word_probs -> detach;
_move_acc_probs_to_token_preds -> ValueError;
_move_acc_probs_to_token_preds -> list;
_move_acc_probs_to_token_preds -> argmax;
_get_labels -> zip;
_get_labels -> len;
_get_labels -> items;
_apply_punct_capit_predictions -> isinstance;
_apply_punct_capit_predictions -> split;
_apply_punct_capit_predictions -> enumerate;
_apply_punct_capit_predictions -> len;
_apply_punct_capit_predictions -> strip;
_apply_punct_capit_predictions -> items;
_apply_punct_capit_predictions -> capitalize;
_update_accumulated_probabilities -> concatenate;
_set_label_ids -> _extract_label_vocab_files_from_config;
_set_label_ids -> register_artifact;
_set_label_ids -> str;
_set_label_ids -> warning;
_set_label_ids -> to_container;
_set_label_ids -> load_label_ids;
_set_label_ids -> ValueError;
_multi_eval_epoch_end -> compute;
_multi_eval_epoch_end -> reset;
_multi_eval_epoch_end -> info;
_check_label_config_parameters -> _extract_label_vocab_files_from_config;
_check_label_config_parameters -> load_label_ids;
_check_label_config_parameters -> ValueError;
_check_label_config_parameters -> raise_not_equal_labels_error;
_get_eval_metrics_kwargs -> len;
_setup_metrics_dictionary -> ModuleDict;
_setup_metrics_dictionary -> ModuleList;
_setup_metrics_dictionary -> deepcopy;
_extract_label_vocab_files_from_config -> _is_model_being_restored;
_extract_label_vocab_files_from_config -> expanduser;
_extract_label_vocab_files_from_config -> Path;
_remove_margins -> clone;
_remove_margins -> detach;
plot_confusion_matrix -> _plot_confusion_matrix;
plot_confusion_matrix -> confusion_matrix;
plot_confusion_matrix -> figure;
plot_confusion_matrix -> add_subplot;
plot_confusion_matrix -> matshow;
plot_confusion_matrix -> set_xticks;
plot_confusion_matrix -> set_yticks;
plot_confusion_matrix -> set_xticklabels;
plot_confusion_matrix -> set_yticklabels;
plot_confusion_matrix -> set_ylabel;
plot_confusion_matrix -> set_xlabel;
plot_confusion_matrix -> makedirs;
plot_confusion_matrix -> colorbar;
plot_confusion_matrix -> strip;
plot_confusion_matrix -> join;
plot_confusion_matrix -> savefig;
plot_confusion_matrix -> info;
plot_confusion_matrix -> set;
plot_confusion_matrix -> where;
plot_confusion_matrix -> arange;
plot_confusion_matrix -> items;
plot_confusion_matrix -> sorted;
plot_confusion_matrix -> sum;
plot_confusion_matrix -> astype;
plot_confusion_matrix -> len;
plot_confusion_matrix -> strftime;
plot_confusion_matrix -> values;
get_classification_report -> classification_report;
get_classification_report -> set;
get_classification_report -> sorted;
get_classification_report -> str;
get_classification_report -> items;
restore_weights -> info;
restore_weights -> load;
restore_weights -> match;
restore_weights -> state_dict;
restore_weights -> update;
restore_weights -> load_state_dict;
restore_weights -> exists;
restore_weights -> warning;
restore_weights -> keys;
restore_weights -> group;
restore_weights -> len;
restore_weights -> list;
restore_weights -> items;
restore_weights -> type;
_process_chat_messages -> isinstance;
_process_chat_messages -> get_mimetype;
_process_chat_messages -> str;
_process_chat_messages -> ValueError;
_process_chat_messages -> len;
_process_chat_messages -> convert;
postprocess -> isinstance;
postprocess -> append;
postprocess -> len;
postprocess -> _process_chat_messages;
style -> style;
style -> get;
style -> warn;
pad_batch -> max;
pad_batch -> len;
pad_batch -> append;
pad_batch -> extend;
get_pretrained_lm_models_list -> get_huggingface_pretrained_lm_models_list;
get_huggingface_pretrained_lm_models_list -> extend;
get_huggingface_lm_model -> from_pretrained;
get_huggingface_lm_model -> type;
get_huggingface_lm_model -> ValueError;
get_huggingface_lm_model -> model_class;
get_huggingface_lm_model -> exists;
get_huggingface_lm_model -> warning;
get_huggingface_lm_model -> from_json_file;
get_huggingface_lm_model -> config_class;
get_huggingface_transformer -> HuggingFaceEncoderModule;
get_huggingface_transformer -> HuggingFaceDecoderModule;
check_gradio_import -> ImportError;
create_gen_function -> text_generation;
create_gen_function -> int;
create_gen_function -> find;
create_gen_function -> replace;
create_gen_function -> strip;
create_gen_function -> len;
create_gen_function -> split;
text_generation -> put;
text_generation -> json;
text_generation -> dumps;
get_demo -> check_gradio_import;
get_demo -> set_event_loop;
get_demo -> Blocks;
get_demo -> launch;
get_demo -> Row;
get_demo -> Column;
get_demo -> Number;
get_demo -> Textbox;
get_demo -> Checkbox;
get_demo -> Dropdown;
get_demo -> Slider;
get_demo -> change;
get_demo -> Button;
get_demo -> click;
get_demo -> queue;
get_demo -> list;
get_demo -> print;
get_demo -> keys;
get_demo -> values;
get_demo -> create_gen_function;
change -> add;
get_chatbot_demo -> check_gradio_import;
get_chatbot_demo -> set_event_loop;
get_chatbot_demo -> Blocks;
get_chatbot_demo -> launch;
get_chatbot_demo -> Row;
get_chatbot_demo -> Column;
get_chatbot_demo -> State;
get_chatbot_demo -> Number;
get_chatbot_demo -> Dropdown;
get_chatbot_demo -> change;
get_chatbot_demo -> HTML;
get_chatbot_demo -> Textbox;
get_chatbot_demo -> style;
get_chatbot_demo -> Button;
get_chatbot_demo -> then;
get_chatbot_demo -> click;
get_chatbot_demo -> list;
get_chatbot_demo -> Accordion;
get_chatbot_demo -> Slider;
get_chatbot_demo -> CheckboxGroup;
get_chatbot_demo -> append;
get_chatbot_demo -> replace;
get_chatbot_demo -> enumerate;
get_chatbot_demo -> endswith;
get_chatbot_demo -> print;
get_chatbot_demo -> clear;
get_chatbot_demo -> keys;
get_chatbot_demo -> Chatbot;
get_chatbot_demo -> len;
get_chatbot_demo -> join;
get_chatbot_demo -> get_value_str;
get_chatbot_demo -> create_gen_function;
get_chatbot_demo -> submit;
get_chatbot_demo -> update;
get_chatbot_demo -> strip;
get_chatbot_demo -> values;
get_value_str -> enumerate;
get_value_str -> len;
get_value_str -> join;
get_value_str -> append;
get_generation -> text_generation;
get_generation -> int;
get_generation -> find;
get_generation -> replace;
get_generation -> strip;
get_generation -> len;
get_generation -> split;
get_retro_generation -> update_weight;
get_retro_generation -> text_generation;
get_retro_generation -> int;
get_retro_generation -> convert_retrieved_to_md;
get_retro_generation -> strip;
get_retro_generation -> split;
get_retro_generation -> len;
update_weight -> request_data;
convert_retrieved_to_md -> enumerate;
convert_retrieved_to_md -> len;
request_data -> put;
request_data -> json;
request_data -> dumps;
add_doc -> request_data;
reset_index -> request_data;
run_demo -> check_gradio_import;
run_demo -> launch;
run_demo -> Blocks;
run_demo -> Row;
run_demo -> Column;
run_demo -> Checkbox;
run_demo -> Number;
run_demo -> Slider;
run_demo -> Textbox;
run_demo -> Label;
run_demo -> click;
run_demo -> Button;
run_demo -> HTML;
set_sampling -> list;
set_sampling -> values;
set_sampling -> update;
on_submit -> print;
on_submit -> create_gen_function;
user -> append;
user -> replace;
bot -> enumerate;
bot -> endswith;
bot -> print;
bot -> append;
bot -> get_value_str;
bot -> create_gen_function;
bot -> strip;
bot -> len;
clear_fun -> clear;
change_visibility -> append;
change_visibility -> update;
clear_prompt_embedding_weights -> fill_;
set_prompt_embedding_weights -> type_as;
set_prompt_table -> set_prompt_embedding_weights;
get_prompt_table -> forward;
clear_prompt_table -> clear_prompt_embedding_weights;
fused_bias_gelu -> _cast_if_autocast_enabled;
fused_bias_gelu -> autocast;
fused_bias_gelu -> apply;
set_inference_table -> clone;
set_inference_table -> set_prompt_table;
set_inference_table -> detach;
clear_inference_table -> clear_prompt_table;
clear_inference_table -> fill_;
get_inference_table -> get_prompt_table;
update_neighbors -> set;
update_neighbors -> str;
neighbors -> int;
neighbors -> get;
tokenize_batch_with_context_and_completion -> pad_batch;
tokenize_batch_with_context_and_completion -> LongTensor;
tokenize_batch_with_context_and_completion -> text_to_ids;
tokenize_batch_with_context_and_completion -> len;
tokenize_batch_with_context_and_completion -> append;
_store_retrieved -> range;
_store_retrieved -> len;
_store_retrieved -> ids_to_text;
_store_retrieved -> append;
get_knn -> enumerate;
get_knn -> concatenate;
get_knn -> get_knn;
get_knn -> int;
get_knn -> append;
get_knn -> len;
get_knn -> isinstance;
get_knn -> request_data;
get_knn -> array;
get_knn -> ids_to_text;
get_knn -> b64decode;
get_knn -> loads;
get_knn -> astype;
get_knn -> encode;
get_knn -> search;
get_knn -> get_chunk;
get_knn -> stack;
get_knn -> repeat;
get_knn -> range;
send_do_generate -> LongTensor;
send_do_generate -> broadcast;
convert_messages -> append;
convert_messages -> capitalize;
completion -> jsonify;
completion -> send_do_generate;
completion -> get;
completion -> generate;
completion -> len;
completion -> isinstance;
completion -> split;
completion -> int;
completion -> tolist;
completion -> time;
completion -> uuid4;
chat_completion -> convert_messages;
chat_completion -> _get_header_conversation_type_mask_role;
chat_completion -> len;
chat_completion -> jsonify;
chat_completion -> send_do_generate;
chat_completion -> get;
chat_completion -> generate;
chat_completion -> split;
chat_completion -> isinstance;
chat_completion -> int;
chat_completion -> tolist;
chat_completion -> time;
chat_completion -> uuid4;
neva_process_prompts -> tolist;
neva_process_prompts -> append;
neva_process_prompts -> preprocess_multimodal;
neva_process_prompts -> find;
neva_process_prompts -> deepcopy;
neva_process_prompts -> preprocess_nvgpt;
neva_process_prompts -> preprocess_nv_dpo;
neva_process_prompts -> preprocess_llama_2;
neva_process_prompts -> get;
neva_process_prompts -> sub;
neva_process_prompts -> preprocess_yi_34b;
neva_process_prompts -> preprocess_llama_3;
neva_process_prompts -> preprocess_v1;
neva_process_prompts -> ValueError;
_get_end_of_generation_tokens_and_strings -> text_to_ids;
_get_end_of_generation_tokens_and_strings -> set;
_get_end_of_generation_tokens_and_strings -> add;
_get_end_of_generation_tokens_and_strings -> warn;
_get_end_of_generation_tokens_and_strings -> append;
_get_end_of_generation_tokens_and_strings -> len;
tokenize_neighbors_batch -> range;
tokenize_neighbors_batch -> LongTensor;
tokenize_neighbors_batch -> len;
tokenize_neighbors_batch -> append;
tokenize_neighbors_batch -> ValueError;
tokenize_neighbors_batch -> text_to_ids;
decode_time_tokens -> text_to_ids;
decode_time_tokens -> len;
decode_time_tokens -> range;
decode_time_tokens -> extend;
decode_time_tokens -> ids_to_text;
decode_time_tokens -> index;
decode_time_tokens -> min;
decode_time_tokens -> round;
decode_time_tokens -> int;
decode_time_tokens -> ids_to_tokens;
decode_time_tokens -> max;
decode_time_tokens -> str;
decode_time_tokens -> float;
encode_time_str -> sub;
encode_time_str -> strip;
encode_time_str -> float;
encode_time_str -> int;
encode_time_str -> format;
encode_time_str -> round;
encode_time_str -> time_to_string;
encode_time_str -> group;
time_to_string -> float;
time_to_string -> int;
time_to_string -> format;
time_to_string -> round;
tab_logits -> float;
tab_sample_sequence_batch -> AppState;
tab_sample_sequence_batch -> reconfigure_num_microbatches_calculator;
tab_sample_sequence_batch -> len;
tab_sample_sequence_batch -> range;
tab_sample_sequence_batch -> sum;
tab_sample_sequence_batch -> extend;
tab_sample_sequence_batch -> no_grad;
tab_sample_sequence_batch -> item;
tab_sample_sequence_batch -> init_batch;
tab_sample_sequence_batch -> size;
tab_sample_sequence_batch -> cuda;
tab_sample_sequence_batch -> get_range;
tab_sample_sequence_batch -> where;
tab_sample_sequence_batch -> prepare_batch_at_step;
tab_sample_sequence_batch -> forward_step;
tab_sample_sequence_batch -> is_pipeline_last_stage;
tab_sample_sequence_batch -> min;
tab_sample_sequence_batch -> byte;
tab_sample_sequence_batch -> float;
tab_sample_sequence_batch -> gather_from_tensor_model_parallel_region;
tab_sample_sequence_batch -> contiguous;
tab_sample_sequence_batch -> softmax;
tab_sample_sequence_batch -> view;
tab_sample_sequence_batch -> clamp;
tab_sample_sequence_batch -> switch;
tab_sample_sequence_batch -> post_process;
tab_sample_sequence_batch -> get_pipeline_model_parallel_last_rank;
tab_sample_sequence_batch -> get_embedding_group;
tab_sample_sequence_batch -> broadcast;
tab_sample_sequence_batch -> bool;
tab_sample_sequence_batch -> all;
tab_sample_sequence_batch -> get_pipeline_model_parallel_group;
tab_sample_sequence_batch -> is_pipeline_first_stage;
tab_sample_sequence_batch -> ByteTensor;
tab_sample_sequence_batch -> max;
tab_sample_sequence_batch -> long;
tab_sample_sequence_batch -> tab_logits;
tab_sample_sequence_batch -> log_softmax;
tab_sample_sequence_batch -> unsqueeze;
tab_sample_sequence_batch -> squeeze;
tab_sample_sequence_batch -> cat;
tab_sample_sequence_batch -> empty_like;
tab_sample_sequence_batch -> zeros;
tab_sample_sequence_batch -> multinomial;
tab_sample_sequence_batch -> ones;
tab_sample_sequence_batch -> gather;
sample_token_greedy -> max;
sample_token_greedy -> log_softmax;
sample_token_topk -> float;
sample_token_topk -> top_k_logits;
sample_token_topk -> log_softmax;
sample_token_topk -> view;
sample_token_topk -> squeeze;
sample_token_topk -> multinomial;
sample_token_topk -> gather;
sample_token_topk -> exp;
sample_token_topk -> unsqueeze;
sample_token_topk_beam_search -> topk;
sample_token_topk_beam_search -> log_softmax;
repl -> float;
repl -> time_to_string;
repl -> group;
get_tokenizer_list -> set;
get_tokenizer_list -> update;
get_tokenizer_list -> get_huggingface_pretrained_lm_models_list;
get_tokenizer_list -> list;
get_megatron_tokenizer -> _check_megatron_name;
get_megatron_vocab_file -> _check_megatron_name;
get_megatron_vocab_file -> join;
get_megatron_vocab_file -> _download;
get_megatron_merges_file -> _check_megatron_name;
get_megatron_merges_file -> join;
get_megatron_merges_file -> _download;
get_megatron_merges_file -> lower;
auto_assign_attrs -> items;
auto_assign_attrs -> setattr;
_safari_fft -> to;
_safari_fft -> safari_fftconv_fn;
_flash_fft -> contiguous;
_flash_fft -> flashfftconv;
_flash_fft -> unsqueeze;
conv_single_head -> rearrange;
conv_single_head -> split;
conv_single_head -> enumerate;
conv_single_head -> reversed;
conv_single_head -> dropout;
conv_single_head -> long_conv;
conv_multi_head -> split;
conv_multi_head -> contiguous;
conv_multi_head -> long_conv;
get_hyena_layer_with_transformer_engine_spec -> ModuleSpec;
get_hyena_layer_with_transformer_engine_spec -> ImportError;
get_hyena_layer_with_transformer_engine_spec -> HyenaOperatorSubmodules;
get_hyena_layer_with_transformer_engine_spec -> HyenaFilterSubmodules;
_allocate_memory -> empty;
_allocate_memory -> current_device;
_transpose_last_dim -> size;
_transpose_last_dim -> view;
_transpose_last_dim -> contiguous;
_transpose_last_dim -> transpose;
_cast_if_autocast_enabled -> is_autocast_enabled;
_cast_if_autocast_enabled -> isinstance;
_cast_if_autocast_enabled -> to;
_cast_if_autocast_enabled -> get_autocast_gpu_dtype;
_cast_if_autocast_enabled -> get_autocast_cpu_dtype;
_cast_if_autocast_enabled -> NotImplementedError;
torch_attention_with_prior -> empty;
torch_attention_with_prior -> baddbmm;
torch_attention_with_prior -> view;
torch_attention_with_prior -> scale_mask_softmax;
torch_attention_with_prior -> rearrange;
torch_attention_with_prior -> bmm;
torch_attention_with_prior -> attention_dropout;
torch_attention_with_prior -> log_softmax;
torch_attention_with_prior -> fork;
torch_attention_with_prior -> get_cuda_rng_tracker;
torch_attention -> empty;
torch_attention -> baddbmm;
torch_attention -> view;
torch_attention -> scale_mask_softmax;
torch_attention -> rearrange;
torch_attention -> bmm;
torch_attention -> attention_dropout;
torch_attention -> fork;
torch_attention -> get_cuda_rng_tracker;
flash_attention -> rearrange;
flash_attention -> _cast_if_autocast_enabled;
flash_attention -> flash_attention_triton;
flash_attention -> flash_attention_cuda;
flash_attention_triton -> flash_attn_func_triton;
flash_attention_triton -> permute;
flash_attention_triton -> NotImplementedError;
flash_attention_triton -> len;
flash_attention_triton -> unsqueeze;
flash_attention_triton -> masked_fill;
flash_attention_triton -> any;
flash_attention_triton -> finfo;
flash_attention_triton -> eq;
flash_attention_cuda -> len;
flash_attention_cuda -> permute;
flash_attention_cuda -> bool;
flash_attention_cuda -> unique;
flash_attention_cuda -> flash_attn_func;
flash_attention_cuda -> unpad_input;
flash_attention_cuda -> flash_attn_unpadded_func;
flash_attention_cuda -> pad_input;
flash_attention_cuda -> squeeze;
flash_attention_cuda -> ones;
flash_attention_cuda -> sum;
flash_attention_cuda -> any;
flash_attention_cuda -> eq;
_calc_number_of_params -> isinstance;
_calc_number_of_params -> sum;
_calc_number_of_params -> nelement;
_calc_number_of_params -> parameters;
param_is_not_shared -> hasattr;
count_zeros_fp32 -> isinstance;
count_zeros_fp32 -> all_reduce;
count_zeros_fp32 -> item;
count_zeros_fp32 -> param_is_not_shared;
count_zeros_fp32 -> param_is_not_tensor_parallel_duplicate;
count_zeros_fp32 -> detach;
count_zeros_fp32 -> get_model_parallel_group;
count_zeros_fp32 -> numel;
count_zeros_fp32 -> count_nonzero;
grad_norm -> grad_norm;
grad_norm -> list;
grad_norm -> _local_grad_norm;
grad_norm -> all_reduce;
grad_norm -> sqrt;
grad_norm -> super;
dropout_add -> dropout;
dropout_add -> ValueError;
bias_dropout_add -> dropout;
bias_dropout_add_fused_train_ -> bias_dropout_add;
bias_dropout_add_fused_train -> enable_grad;
bias_dropout_add_fused_train -> _cast_if_autocast_enabled;
bias_dropout_add_fused_train -> autocast;
bias_dropout_add_fused_train -> bias_dropout_add_fused_train_;
bias_dropout_add_fused_inference_ -> bias_dropout_add;
bias_dropout_add_fused_inference -> _cast_if_autocast_enabled;
bias_dropout_add_fused_inference -> autocast;
bias_dropout_add_fused_inference -> bias_dropout_add_fused_inference_;
bias_geglu -> bias_gelu;
bias_gelu -> tanh;
bias_geglu_back -> bias_gelu_back;
bias_geglu_back -> bias_gelu;
bias_gelu_back -> tanh;
fused_bias_geglu -> _cast_if_autocast_enabled;
fused_bias_geglu -> autocast;
fused_bias_geglu -> apply;
symbolic -> op;
symbolic -> tensor;
forward_torch_softmax -> float;
forward_torch_softmax -> mask_func;
forward_torch_softmax -> Softmax;
forward_torch_softmax -> all;
forward_torch_softmax -> half;
forward_torch_softmax -> bfloat16;
forward_torch_softmax -> type;
build_relative_position -> mul;
build_relative_position -> is_available;
build_relative_position -> abs;
build_relative_position -> to;
build_relative_position -> current_device;
build_relative_position -> arange;
build_slopes -> unsqueeze;
build_slopes -> is_available;
build_slopes -> to;
build_slopes -> current_device;
build_slopes -> Tensor;
build_slopes -> get_slopes;
zero_parameters -> fill_;
add_tokentype_embeddings -> Embedding;
add_tokentype_embeddings -> init_method;
add_tokentype_embeddings -> Exception;
add_tokentype_embeddings -> get_rank;
add_tokentype_embeddings -> print;
add_tokentype_embeddings -> format;
get_position_embedding_on_this_context_parallel_rank -> get_context_parallel_world_size;
get_position_embedding_on_this_context_parallel_rank -> get_context_parallel_rank;
get_position_embedding_on_this_context_parallel_rank -> cuda;
get_position_embedding_on_this_context_parallel_rank -> view;
get_position_embedding_on_this_context_parallel_rank -> index_select;
get_position_embedding_on_this_context_parallel_rank -> tensor;
get_decoder_model -> init_method_normal;
get_decoder_model -> scaled_init_method_normal;
get_decoder_model -> MegatronTransformerDecoderModule;
get_decoder_model -> MegatronRetrievalTransformerDecoderModule;
get_decoder_model -> ValueError;
get_encoder_model -> init_method_normal;
get_encoder_model -> scaled_init_method_normal;
get_encoder_model -> MegatronTransformerEncoderModule;
get_encoder_model -> MultiMegatronTransformerEncoderModule;
get_encoder_model -> MegatronRetrievalTransformerEncoderModule;
get_encoder_model -> MegatronPerceiverEncoderModule;
get_encoder_model -> ValueError;
get_hiddens_mask -> isinstance;
get_hiddens_mask -> to;
get_hiddens_mask -> ones;
get_hiddens_mask -> size;
apply_hidden_transforms -> copy;
apply_hidden_transforms -> update;
apply_hidden_transforms -> transform;
_set_random_seed -> seed;
_set_random_seed -> manual_seed;
_set_random_seed -> ValueError;
_set_random_seed -> device_count;
_set_random_seed -> model_parallel_cuda_manual_seed;
_set_random_seed -> format;
_set_random_seed -> get_pipeline_model_parallel_rank;
set_jit_fusion_options -> _jit_set_profiling_executor;
set_jit_fusion_options -> _jit_set_profiling_mode;
set_jit_fusion_options -> _jit_override_can_fuse_on_cpu;
set_jit_fusion_options -> _jit_override_can_fuse_on_gpu;
set_jit_fusion_options -> _jit_set_texpr_fuser_enabled;
set_jit_fusion_options -> _jit_set_nvfuser_enabled;
set_jit_fusion_options -> _debug_set_autodiff_subgraph_inlining;
generator_wrapper -> get_ranks;
generator_wrapper -> zip;
generator_wrapper -> cycle;
generator_wrapper -> len;
_build_cross_attn_layer -> ParallelTransformer;
_build_self_attn_layer -> ParallelTransformer;
attn_mask_postprocess -> unsqueeze;
build_attention_mask_3d -> build_attention_mask_3d_padding;
build_attention_mask_3d -> build_attention_mask_3d_causal;
build_attention_mask_3d -> ValueError;
get_megatron_lm_models_list -> list;
get_megatron_lm_models_list -> keys;
get_megatron_config -> _check_megatron_name;
_check_megatron_name -> get_megatron_lm_models_list;
_check_megatron_name -> ValueError;
_download -> is_initialized;
_download -> makedirs;
_download -> info;
_download -> download;
_download -> move;
_download -> barrier;
_download -> exists;
_download -> FileNotFoundError;
_download -> get_rank;
get_megatron_checkpoint -> _check_megatron_name;
get_megatron_checkpoint -> join;
get_megatron_checkpoint -> _download;
is_lower_cased_megatron -> _check_megatron_name;
sinkhorn -> exp;
sinkhorn -> ones;
sinkhorn -> size;
sinkhorn -> mean;
sinkhorn -> unsqueeze;
sinkhorn -> abs;
sinkhorn -> sum;
conversion_helper -> isinstance;
conversion_helper -> conversion;
conversion_helper -> conversion_helper;
conversion_helper -> tuple;
fp32_to_float16 -> conversion_helper;
fp32_to_float16 -> isinstance;
fp32_to_float16 -> float16_converter;
float16_converter -> bfloat16;
float16_converter -> half;
float16_to_fp32 -> conversion_helper;
float16_to_fp32 -> isinstance;
float16_to_fp32 -> float;
half_conversion -> isinstance;
half_conversion -> float16_converter;
float_conversion -> isinstance;
float_conversion -> float;
_calculate_dec_att_mask -> build_attention_mask_3d;
_calculate_dec_att_mask -> zip;
_calculate_dec_att_mask -> item;
get_hiddens_module -> info;
get_hiddens_module -> get;
get_hiddens_module -> isinstance;
get_hiddens_module -> MegatronHiddensModule;
get_hiddens_module -> items;
get_hiddens_module -> to_container;
get_hiddens_module -> pop;
get_hiddens_module -> append;
get_hiddens_module -> KeyError;
get_hiddens_module -> import_class_by_path;
get_hiddens_module -> error;
get_hiddens_module -> keys;
_validate_enc_dec_hidden_size -> ValueError;
_validate_perceiver_config -> ValueError;
_validate_perceiver_config -> get;
apply_loss_transforms -> enumerate;
apply_loss_transforms -> to;
apply_loss_transforms -> loss;
apply_loss_transforms -> pop;
apply_loss_transforms -> intersection;
apply_loss_transforms -> len;
apply_loss_transforms -> update;
apply_loss_transforms -> set;
apply_loss_transforms -> ValueError;
apply_loss_transforms -> tensor;
apply_loss_transforms -> keys;
apply_loss_transforms -> items;
apply_loss_transforms -> list;
get_decoder_embeddings -> dim;
get_decoder_embeddings -> decoder_embedding;
get_decoder_embeddings -> range;
get_decoder_embeddings -> size;
get_decoder_embeddings -> permute;
get_bias_dropout_add -> bias_dropout_add;
get_dropout_add -> dropout_add;
remove_bias_from_layernorm -> modules;
remove_bias_from_layernorm -> hasattr;
remove_bias_from_layernorm -> isinstance;
remove_bias_from_layernorm -> register_parameter;
_bias_dropout_add -> bias_dropout_add;
_bias_dropout_add -> _bias_dropout_add_func_internvit;
_dropout_add -> dropout_add;
_get_bias_droput_add_func -> get_dropout_add;
_get_bias_droput_add_func -> get_bias_dropout_add;
get_num_layers -> get_pipeline_model_parallel_world_size;
get_num_layers -> get_pipeline_model_parallel_split_rank;
get_num_layers -> is_pipeline_stage_before_split;
get_num_layers -> ValueError;
ApproxGELUActivation -> sigmoid;
attention_mask_func -> masked_fill_;
erf_gelu -> to;
erf_gelu -> erf;
erf_gelu -> ones_like;
enc_dec_extended_attention_mask -> attn_mask_postprocess;
make_inference_attention_mask_3d -> make_attention_mask_3d;
make_inference_history_mask_3d -> arange;
make_inference_history_mask_3d -> expand;
build_attention_mask_3d_padding -> make_attention_mask_3d;
build_attention_mask_3d_causal -> make_inference_history_mask_3d;
build_attention_mask_3d_causal -> make_attention_mask_3d;
swap_mcore_mixin -> mcore_register_adapters;
mcore_register_adapters -> NotImplementedError;
mcore_register_adapters -> set_accepted_adapter_types;
mcore_register_adapters -> hasattr;
inner_forward -> unsqueeze;
inner_forward -> first;
inner_forward -> fused_bias_gelu;
inner_forward -> second;
inner_forward -> transpose;
inner_forward -> embedding;
tie_weights -> set_position;
tie_weights -> _unwrap_layers_model_list;
tie_weights -> isinstance;
tie_weights -> get_adapter_module;
tie_weights -> print;
tie_weights -> RuntimeError;
tie_weights -> tie_weights;
flat_square -> size;
flat_square -> view;
flat_square -> contiguous;
flat_square -> cat;
flat_square -> int;
flat_square -> permute;
flat_square -> to;
flat_square -> zeros;
nf4_quantize -> cuda;
nf4_quantize -> NF4Weight;
qlora_load_model -> replace_linear;
qlora_load_model -> get;
qlora_load_model -> items;
qlora_load_model -> load_state_dict;
qlora_load_model -> named_children;
qlora_load_model -> get_target_modules;
qlora_load_model -> any;
qlora_load_model -> to;
qlora_load_model -> info;
qlora_load_model -> replace;
qlora_load_model -> setattr;
qlora_load_model -> NF4LinearWrapper;
qlora_load_model -> NF4LayerNormLinearWrapper;
replace_linear -> named_children;
replace_linear -> to;
replace_linear -> info;
replace_linear -> get;
replace_linear -> replace_linear;
replace_linear -> setattr;
replace_linear -> NF4LinearWrapper;
replace_linear -> NF4LayerNormLinearWrapper;
get_target_modules -> get;
get_target_modules -> append;
dequantize -> _nf4_quantizer;
dequantize -> typecheck;
dequantize -> rearrange;
dequantize -> decode;
dequantize -> ValueError;
dequantize -> NeuralType;
dequantize -> TokenIndex;
dequantize -> tuple;
dequantize -> LengthsType;
dequantize -> EncodedRepresentation;
_create_layer_norm_fn -> safe_import_from;
_create_layer_norm_fn -> ValueError;
safe_import_from -> import_module;
safe_import_from -> getattr;
safe_import_from -> format_exc;
safe_import_from -> debug;
safe_import_from -> info;
safe_import_from -> UnavailableMeta;
safe_import_from -> safe_import_from;
get_registered_hiddens -> list;
get_registered_hiddens -> keys;
register_hidden_loss -> info;
register_hidden_loss -> ValueError;
register_hidden_transform -> info;
register_hidden_transform -> ValueError;
hidden_outputs -> union;
hidden_outputs -> list;
hidden_outputs -> set;
loss_inputs -> union;
loss_inputs -> list;
loss_inputs -> set;
_validate_inputs -> issubset;
_validate_inputs -> ValueError;
_validate_inputs -> set;
_validate_inputs -> keys;
input_names -> _input_names;
input_names -> get_io_names;
zip_infshape -> zip;
zip_infshape -> InfShape;
zip_infshape -> isinstance;
zip_infshape -> copy;
zip_infshape -> append;
zip_infshape -> ValueError;
zip_infshape -> InfDim;
zip_infshape -> type;
width_mult -> isinf;
width_mult -> width_mult;
fanin_fanout -> len;
fanin_fanout_mult_ratio -> fanin_fanout;
fanin_fanout_mult_ratio -> width_mult;
ninf -> sum;
ninf -> isinf;
deserialize -> zip;
deserialize -> InfShape;
deserialize -> append;
deserialize -> InfDim;
from_base_shape -> InfShape;
from_base_shape -> InfDim;
constant_std_init_ -> hasattr;
constant_std_init_ -> ninf;
constant_std_init_ -> sampler_;
constant_std_init_ -> NotImplementedError;
constant_std_init_ -> width_mult;
sampler_ -> _no_grad_uniform_;
sampler_ -> _no_grad_normal_;
sampler_ -> _no_grad_fill_;
sampler_ -> _no_grad_trunc_normal_;
_inf_fan_adjust_xavier -> sqrt;
_inf_fan_adjust_xavier -> ninf;
_inf_fan_adjust_xavier -> NotImplementedError;
_inf_fan_adjust_xavier -> isinf;
_inf_fan_adjust_xavier -> width_mult;
_inf_fan_adjust_kaiming -> ninf;
_inf_fan_adjust_kaiming -> isinf;
_inf_fan_adjust_kaiming -> NotImplementedError;
_inf_fan_adjust_kaiming -> width_mult;
_inf_fan_adjust_kaiming -> sqrt;
trunc_normal_ -> constant_std_init_;
trunc_normal_ -> _no_grad_trunc_normal_;
trunc_normal_ -> ninf;
trunc_normal_ -> warn;
rescale_linear_bias -> width_mult;
rescale_linear_bias -> hasattr;
rescale_linear_bias -> RuntimeError;
process_param_groups -> list;
process_param_groups -> isinstance;
process_param_groups -> get;
MuAdam -> process_param_groups;
MuAdam -> impl;
MuAdam -> defaultdict;
MuAdam -> new_group;
MuAdam -> items;
MuAdam -> extend;
MuAdam -> hasattr;
MuAdam -> ninf;
MuAdam -> append;
MuAdam -> list;
MuAdam -> NotImplementedError;
MuAdam -> values;
MuAdam -> width_mult;
new_group -> items;
MuAdamW -> MuAdam;
MuSGD -> process_param_groups;
MuSGD -> impl;
MuSGD -> defaultdict;
MuSGD -> new_group;
MuSGD -> items;
MuSGD -> extend;
MuSGD -> hasattr;
MuSGD -> ninf;
MuSGD -> append;
MuSGD -> list;
MuSGD -> NotImplementedError;
MuSGD -> values;
MuSGD -> width_mult;
MuSGD -> fanin_fanout_mult_ratio;
get_shapes -> named_parameters;
get_infshapes -> named_parameters;
save_base_shapes -> isinstance;
save_base_shapes -> dump;
save_base_shapes -> get_infshapes;
save_base_shapes -> base_shape;
save_base_shapes -> open;
save_base_shapes -> write;
save_base_shapes -> deepcopy;
save_base_shapes -> ValueError;
save_base_shapes -> items;
load_base_shapes -> open;
load_base_shapes -> safe_load;
load_base_shapes -> from_base_shape;
load_base_shapes -> items;
_dataparallel_hack -> all;
_dataparallel_hack -> startswith;
_dataparallel_hack -> strip;
_dataparallel_hack -> items;
_extract_shapes -> isinstance;
_extract_shapes -> get_shapes;
_extract_shapes -> deepcopy;
_extract_shapes -> load_base_shapes;
_extract_shapes -> ValueError;
_extract_shapes -> type;
_zip_infshape_dict -> _dataparallel_hack;
_zip_infshape_dict -> set;
_zip_infshape_dict -> items;
_zip_infshape_dict -> keys;
_zip_infshape_dict -> zip_infshape;
zip_infshapes -> _extract_shapes;
zip_infshapes -> _zip_infshape_dict;
clear_dims -> deepcopy;
clear_dims -> items;
apply_infshapes -> named_parameters;
assert_hidden_size_inf -> named_modules;
assert_hidden_size_inf -> isinstance;
assert_hidden_size_inf -> isinf;
get_slopes_power_of_2 -> range;
get_slopes_power_of_2 -> log2;
_rotate_half -> rearrange;
_rotate_half -> unbind;
_rotate_half -> cat;
_relative_position_bucket -> min;
_relative_position_bucket -> where;
_relative_position_bucket -> abs;
_relative_position_bucket -> to;
_relative_position_bucket -> full_like;
_relative_position_bucket -> zeros_like;
_relative_position_bucket -> log;
_relative_position_bucket -> float;
_compute_relative_position_bucket -> _relative_position_bucket;
_compute_relative_position_bucket -> arange;
_compute_relative_position_bias -> relative_position_embedding;
_compute_relative_position_bias -> unsqueeze;
_compute_relative_position_bias -> permute;
fixed_pos_embedding -> to;
fixed_pos_embedding -> sin;
fixed_pos_embedding -> cos;
fixed_pos_embedding -> einsum;
fixed_pos_embedding -> arange;
rotate_every_two -> stack;
rotate_every_two -> flatten;
duplicate_interleave -> view;
duplicate_interleave -> repeat;
start_sentence_bert_server -> SentenceBertServer;
start_sentence_bert_server -> run;
start_sentence_bert_server -> sleep;
get_emb -> isinstance;
get_emb -> encode_multi_process;
get_emb -> ids_to_text;
get_emb -> append;
get_emb -> get;
add_docs_to_index -> enumerate;
add_docs_to_index -> add_docs_to_index;
add_docs_to_index -> text_to_ids;
add_docs_to_index -> array;
add_docs_to_index -> pad;
add_docs_to_index -> range;
add_docs_to_index -> request_data;
add_docs_to_index -> b64decode;
add_docs_to_index -> loads;
add_docs_to_index -> add;
add_docs_to_index -> append;
add_docs_to_index -> len;
add_docs_to_index -> encode;
add_docs_to_index -> ids_to_text;
add_docs_to_index -> NotImplementedError;
add_docs_to_index -> isinstance;
gather_grad_values -> range;
gather_grad_values -> named_parameters;
gather_grad_values -> append;
gather_grad_values -> getattr;
gather_reset_training_mode_values -> range;
gather_reset_training_mode_values -> len;
gather_reset_training_mode_values -> train;
gather_reset_training_mode_values -> getattr;
reset_grad_values -> range;
reset_grad_values -> named_parameters;
reset_grad_values -> pop;
reset_grad_values -> getattr;
get_megatron_transformer -> ValueError;
_get_intents -> intent_layer;
_get_requested_slots -> requested_slots_layer;
_get_categorical_slot_goals -> slot_status_layer;
_get_categorical_slot_goals -> cat_slot_value_layer;
_get_noncategorical_slot_goals -> slot_status_layer;
_get_noncategorical_slot_goals -> noncat_layer1;
_get_noncategorical_slot_goals -> noncat_activation;
_get_noncategorical_slot_goals -> noncat_layer2;
_get_noncategorical_slot_goals -> to;
_get_noncategorical_slot_goals -> unsqueeze;
_get_noncategorical_slot_goals -> where;
_get_noncategorical_slot_goals -> ones;
_get_noncategorical_slot_goals -> size;
_get_noncategorical_slot_goals -> finfo;
_get_noncategorical_slot_goals -> get_device;
_get_negative_logits -> ones;
_get_negative_logits -> size;
_get_negative_logits -> finfo;
_get_negative_logits -> get_device;
_grad_scaler -> GradScaler;
_grad_scaler -> get;
_callbacks -> get;
_callbacks -> append;
_callbacks -> CustomProgressBar;
_callbacks -> AsyncFinalizerCallback;
_callbacks -> FLOPsMeasurementCallback;
_callbacks -> _callbacks;
_callbacks -> ModelSummary;
_callbacks -> super;
init_model_parallel -> AppState;
init_model_parallel -> destroy_model_parallel;
init_model_parallel -> is_initialized;
init_model_parallel -> initialize_model_parallel;
init_model_parallel -> get_tensor_model_parallel_group;
init_model_parallel -> get_data_parallel_group;
init_model_parallel -> get_data_parallel_rank;
init_model_parallel -> get_data_parallel_world_size;
init_model_parallel -> get_pipeline_model_parallel_group;
init_model_parallel -> get_tensor_model_parallel_rank;
init_model_parallel -> get_pipeline_model_parallel_rank;
init_model_parallel -> Version;
init_model_parallel -> version;
init_model_parallel -> new_group;
init_model_parallel -> parameters;
init_model_parallel -> hasattr;
init_model_parallel -> apply_convert_module_fn;
init_model_parallel -> cuda;
init_model_parallel -> set_defaults_if_not_set_tensor_model_parallel_attributes;
init_model_parallel -> model_parallel_is_initialized;
init_model_parallel -> _calc_number_of_params;
init_model_parallel -> _calc_number_of_trainable_params;
init_model_parallel -> info;
init_model_parallel -> init_ddp;
init_model_parallel -> current_device;
init_model_parallel -> list;
init_model_parallel -> str;
init_model_parallel -> get_expert_tensor_parallel_rank;
init_model_parallel -> init_model_parallel;
_get_sharded_state_dict_context -> ShardedStateDictConfig;
_get_sharded_state_dict_context -> ShardedOptimStateDictConfig;
_get_sharded_state_dict_context -> state_dict_type;
_get_full_state_dict_context -> FullOptimStateDictConfig;
_get_full_state_dict_context -> FullStateDictConfig;
_get_full_state_dict_context -> state_dict_type;
setup_distributed -> setup_distributed;
setup_distributed -> model_parallel_is_initialized;
setup_distributed -> AppState;
setup_distributed -> super;
setup_distributed -> init_model_parallel;
setup_distributed -> total_seconds;
setup_distributed -> setup_parallel_ranks;
setup_distributed -> reset_seed;
setup_distributed -> set_world_ranks;
setup_distributed -> _get_process_group_backend;
setup_distributed -> is_initialized;
setup_distributed -> global_rank;
setup_distributed -> world_size;
setup_distributed -> str;
setup_distributed -> info;
setup_distributed -> init_process_group;
setup_distributed -> rank_zero_info;
setup_distributed -> is_available;
setup_distributed -> RuntimeError;
setup_distributed -> debug;
setup_distributed -> getenv;
setup_distributed -> timedelta;
setup_distributed -> register;
setup_distributed -> isinstance;
setup_distributed -> setup;
setup_distributed -> int;
configure_ddp -> AppState;
configure_ddp -> hasattr;
configure_ddp -> setup_mcore_distributed_parallel;
configure_ddp -> info;
configure_ddp -> DistributedDataParallel;
configure_ddp -> configure_ddp;
configure_ddp -> register_comm_hook;
configure_ddp -> get_data_parallel_group;
configure_ddp -> super;
configure_ddp -> debug;
configure_ddp -> _setup_model;
configure_ddp -> _register_ddp_hooks;
optimizer_sharded_state_dict -> optimizers;
optimizer_sharded_state_dict -> sharded_state_dict;
optimizer_sharded_state_dict -> isinstance;
optimizer_sharded_state_dict -> init_optimizer_states;
optimizer_sharded_state_dict -> state_dict;
optimizer_sharded_state_dict -> get_param_id_to_sharded_param_map;
optimizer_sharded_state_dict -> optim_state_to_sharding_state;
optimizer_sharded_state_dict -> len;
optimizer_sharded_state_dict -> items;
optimizer_sharded_state_dict -> from_iterable;
optimizer_sharded_state_dict -> make_sharded_optimizer_tensor;
optimizer_sharded_state_dict -> zip;
optimizer_sharded_state_dict -> endswith;
optimizer_sharded_state_dict -> ValueError;
optimizer_sharded_state_dict -> get_safe;
optimizer_sharded_state_dict -> hasattr;
optimizer_sharded_state_dict -> optimizer_sharded_state_dict;
init_optimizer_states -> isinstance;
init_optimizer_states -> len;
init_optimizer_states -> zeros_like;
init_optimizer_states -> get;
get_safe -> ValueError;
ckpt_to_dir -> isinstance;
ckpt_to_dir -> Path;
ckpt_to_dir -> with_name;
ckpt_to_dir -> with_suffix;
ckpt_to_dir -> is_dir;
_fix_tensors_device -> is_initialized;
_fix_tensors_device -> device;
_fix_tensors_device -> dict_list_map_outplace;
_fix_tensors_device -> is_available;
_fix_tensors_device -> current_device;
_fix_tensors_device -> isinstance;
_fix_tensors_device -> to;
_check_param_groups_mismatch -> load_common_state_dict;
_check_param_groups_mismatch -> _get_param_group;
_check_param_groups_mismatch -> get;
_check_param_groups_mismatch -> len;
_fix_param_groups -> load_common_state_dict;
_fix_param_groups -> _get_param_group;
_fix_param_groups -> any;
_fix_param_groups -> load_checkpoint;
_fix_param_groups -> warning;
_fix_param_groups -> next;
_fix_param_groups -> get;
_fix_param_groups -> insert;
_fix_param_groups -> ValueError;
_fix_param_groups -> pop;
_fix_param_groups -> enumerate;
_fix_param_groups -> LocalNonpersistentObject;
_integrate_original_checkpoint_data -> dump_checkpoint;
remove_checkpoint -> AppState;
remove_checkpoint -> inject_model_parallel_rank;
remove_checkpoint -> remove_checkpoint;
remove_checkpoint -> info;
remove_checkpoint -> ckpt_to_dir;
remove_checkpoint -> get_filesystem;
remove_checkpoint -> exists;
remove_checkpoint -> rm;
remove_checkpoint -> debug;
remove_checkpoint -> format;
remove_checkpoint -> islink;
remove_checkpoint -> unlink;
remove_checkpoint -> rmtree;
remove_checkpoint -> _debug_time;
remove_checkpoint -> is_s3_url;
remove_checkpoint -> remove_object;
remove_checkpoint -> super;
use_distributed_checkpointing -> isinstance;
use_distributed_checkpointing -> hasattr;
use_distributed_checkpointing -> warning;
use_distributed_checkpointing -> from_config;
use_distributed_checkpointing -> TorchCheckpointIO;
use_distributed_checkpointing -> sharded_state_dict;
distributed_sampler_kwargs -> AppState;
distributed_sampler_kwargs -> dict;
distributed_sampler_kwargs -> super;
unwrapped_checkpoint_io -> isinstance;
_set_mixed_precision_recipe -> MixedPrecision;
_set_mixed_precision_recipe -> torch_dtype_from_precision;
_set_mixed_precision_recipe -> ValueError;
lightning_module_state_dict -> state_dict_context;
lightning_module_state_dict -> state_dict;
lightning_module_state_dict -> get_tensor_model_parallel_world_size;
lightning_module_state_dict -> getattr;
lightning_module_state_dict -> list;
lightning_module_state_dict -> barrier;
lightning_module_state_dict -> keys;
lightning_module_state_dict -> pop;
lightning_module_state_dict -> lower;
lightning_module_state_dict -> to_cpu;
lightning_module_state_dict -> name_has_lora;
optimizer_state -> isinstance;
optimizer_state -> state_dict_context;
optimizer_state -> optim_state_dict;
optimizer_state -> state_dict;
load_optimizer_state_dict -> zip;
load_optimizer_state_dict -> isinstance;
load_optimizer_state_dict -> state_dict_context;
load_optimizer_state_dict -> _get_osd;
load_optimizer_state_dict -> optim_state_dict_to_load;
load_optimizer_state_dict -> load_state_dict;
load_optimizer_state_dict -> _optimizer_to_device;
load_optimizer_state_dict -> list;
load_optimizer_state_dict -> shard_full_optim_state_dict;
load_optimizer_state_dict -> keys;
load_optimizer_state_dict -> summon_full_params;
load_optimizer_state_dict -> rekey_optim_state_dict;
load_optimizer_state_dict -> print;
load_optimizer_state_dict -> exit;
load_optimizer_state_dict -> from_group;
load_optimizer_state_dict -> should_restore_optimizer_states;
load_optimizer_state_dict -> get_data_parallel_group;
load_optimizer_state_dict -> OrderedDict;
load_optimizer_state_dict -> values;
load_optimizer_state_dict -> items;
load_optimizer_state_dict -> from_local;
load_optimizer_state_dict -> Shard;
_get_osd -> isinstance;
_get_osd -> list;
_get_osd -> keys;
_save_state_dict_to_disk -> save;
_handle_artifacts -> AppState;
_handle_artifacts -> named_nemo_modules;
_handle_artifacts -> set;
_handle_artifacts -> get_model_metadata_from_guid;
_handle_artifacts -> modules;
_handle_artifacts -> has_artifacts;
_handle_artifacts -> dict;
_handle_artifacts -> items;
_handle_artifacts -> add;
_handle_artifacts -> isinstance;
_handle_artifacts -> warning;
_handle_artifacts -> getcwd;
_handle_artifacts -> append;
_handle_artifacts -> len;
_handle_artifacts -> TemporaryDirectory;
_handle_artifacts -> hasattr;
_handle_artifacts -> basename;
_handle_artifacts -> copy2;
_handle_artifacts -> _filtered_recursive_walk;
_handle_artifacts -> _filtered_tar_info;
_handle_artifacts -> chdir;
_handle_artifacts -> exists;
_handle_artifacts -> FileNotFoundError;
_handle_artifacts -> join;
_handle_artifacts -> ValueError;
_handle_artifacts -> ArtifactItem;
_handle_artifacts -> split;
_handle_artifacts -> _unpack_nemo_file;
_handle_artifacts -> uuid4;
_update_artifact_paths -> hasattr;
_update_artifact_paths -> load;
_update_artifact_paths -> items;
_update_artifact_paths -> len;
_update_artifact_paths -> open;
_update_artifact_paths -> save;
_update_artifact_paths -> update;
modify_state_dict -> get;
modify_state_dict -> keys;
modify_state_dict -> replace;
modify_state_dict -> should_process;
modify_state_dict -> split;
modify_state_dict -> int;
modify_state_dict -> join;
modify_state_dict -> range;
modify_state_dict -> str;
should_process -> range;
load_config_and_state_dict -> getcwd;
load_config_and_state_dict -> AppState;
load_config_and_state_dict -> is_available;
load_config_and_state_dict -> TemporaryDirectory;
load_config_and_state_dict -> device;
load_config_and_state_dict -> chdir;
load_config_and_state_dict -> set_struct;
load_config_and_state_dict -> _set_model_restore_state;
load_config_and_state_dict -> from_config_dict;
load_config_and_state_dict -> to;
load_config_and_state_dict -> _load_state_dict_from_disk;
load_config_and_state_dict -> isdir;
load_config_and_state_dict -> info;
load_config_and_state_dict -> _filtered_tar_info;
load_config_and_state_dict -> _unpack_nemo_file;
load_config_and_state_dict -> isinstance;
load_config_and_state_dict -> load;
load_config_and_state_dict -> _inject_model_parallel_rank_for_ckpt;
load_config_and_state_dict -> to_container;
load_config_and_state_dict -> create;
load_config_and_state_dict -> join;
load_instance_with_state_dict -> load_state_dict;
load_instance_with_state_dict -> _set_model_restore_state;
_filtered_tar_info -> _tar_open;
_filtered_tar_info -> getmembers;
_filtered_tar_info -> filter_fn;
_lazy_init_scale_growth_tracker -> _lazy_init_scale_growth_tracker;
_lazy_init_scale_growth_tracker -> tensor;
_lazy_init_scale_growth_tracker -> super;
_unscale_grads_ -> getattr;
_unscale_grads_ -> unscale_grads;
_unscale_grads_ -> _unscale_grads_;
_unscale_grads_ -> super;
_maybe_opt_step -> tuple;
_maybe_opt_step -> sum;
_maybe_opt_step -> all_reduce;
_maybe_opt_step -> item;
_maybe_opt_step -> values;
_maybe_opt_step -> step;
_maybe_opt_step -> stack;
_maybe_opt_step -> get_model_parallel_group;
_maybe_opt_step -> FloatTensor;
copy_model_grads_to_main_grads -> zip;
copy_model_grads_to_main_grads -> float;
_fetch_next_batch -> on_fetch_start;
_fetch_next_batch -> on_fetch_end;
_fetch_next_batch -> next;
_fetch_next_batch -> isinstance;
_fetch_next_batch -> range;
_fetch_next_batch -> len;
_fetch_next_batch -> get_num_microbatches;
init_train_tqdm -> init_train_tqdm;
init_train_tqdm -> super;
get_current_epoch_step -> hasattr;
get_current_epoch_step -> max;
_fix_device -> isinstance;
_fix_device -> to;
_calculate_kv_channels -> get;
_create_lora_config -> adapter_cfg_cls;
_create_lora_config -> get;
_create_lora_config -> update;
_create_lora_config -> pop;
_create_lora_config -> RuntimeError;
_plot_confusion_matrix -> confusion_matrix;
_plot_confusion_matrix -> info;
_plot_confusion_matrix -> figure;
_plot_confusion_matrix -> add_subplot;
_plot_confusion_matrix -> matshow;
_plot_confusion_matrix -> title;
_plot_confusion_matrix -> colorbar;
_plot_confusion_matrix -> xlabel;
_plot_confusion_matrix -> ylabel;
_plot_confusion_matrix -> makedirs;
_plot_confusion_matrix -> savefig;
_plot_confusion_matrix -> join;
_plot_confusion_matrix -> strftime;
is_last_rank -> get_rank;
is_last_rank -> get_world_size;
_check_and_add_peft_cfg -> items;
_check_and_add_peft_cfg -> hasattr;
_check_and_add_peft_cfg -> get_config_dict;
_check_and_add_peft_cfg -> _unwrap_layers_model_list;
_check_and_add_peft_cfg -> named_modules;
_check_and_add_peft_cfg -> getattr;
_check_and_add_peft_cfg -> isinstance;
_check_and_add_peft_cfg -> info;
_check_and_add_peft_cfg -> warning;
_check_and_add_peft_cfg -> _check_and_add_adapter;
_check_and_add_peft_cfg -> list;
_check_and_add_peft_cfg -> range;
set_tunable_base_params -> named_parameters;
set_tunable_base_params -> _unwrap_model;
set_tunable_base_params -> add;
_unwrap_model -> hasattr;
_unwrap_model -> isinstance;
_unwrap_model_list -> getattr;
_unwrap_model_list -> isinstance;
_unwrap_layers_model_list -> ModuleList;
_unwrap_layers_model_list -> _unwrap_model_list;
_unwrap_layers_model_list -> extend;
_unwrap_layers_model_list -> _get_layers_from_model;
filter_state_dict -> union;
filter_state_dict -> replace;
data_cfg -> ValueError;
get_text_processor -> get;
get_text_processor -> MultimodalConversationTextProcessor;
get_text_processor -> warning;
_parse_lhotse_data_name -> get;
_parse_lhotse_data_name -> info;
_parse_lhotse_data_name -> isinstance;
_parse_lhotse_data_name -> append;
_parse_lhotse_data_name -> load;
_parse_lhotse_data_name -> len;
_parse_lhotse_data_name -> Path;
_create_nemo_dataloader -> get;
_create_nemo_dataloader -> isinstance;
_create_nemo_dataloader -> WrappedDataLoader;
_create_nemo_dataloader -> info;
_create_nemo_dataloader -> hasattr;
_create_nemo_dataloader -> get_data_parallel_world_size;
_create_lhotse_dataloader -> get;
_create_lhotse_dataloader -> info;
_create_lhotse_dataloader -> get_lhotse_dataloader_from_config;
_create_lhotse_dataloader -> isinstance;
_create_lhotse_dataloader -> get_data_parallel_rank;
_create_lhotse_dataloader -> get_data_parallel_world_size;
_create_lhotse_dataloader -> deepcopy;
_create_lhotse_dataloader -> append;
_create_lhotse_dataloader -> load;
_create_lhotse_dataloader -> len;
predict_dataloader -> _create_dataset;
predict_dataloader -> get;
predict_dataloader -> _create_lhotse_dataloader;
predict_dataloader -> isinstance;
predict_dataloader -> _create_nemo_dataloader;
predict_dataloader -> len;
predict_dataloader -> OnesDataset;
predict_dataloader -> DataLoader;
transform_dataloader -> getattr;
transform_dataloader -> isinstance;
transform_dataloader -> transform_dataloader;
transform_dataloader -> info;
transform_dataloader -> len;
transform_dataloader -> super;
transform_dataloader -> NotImplementedError;
transform_dataloader -> get_data_parallel_rank;
transform_dataloader -> get_data_parallel_world_size;
transform_dataloader -> add_megatron_sampler;
process_sample -> len;
process_sample -> prompt_format_fn;
process_sample -> TextProcessorOutput;
process_sample -> isinstance;
process_sample -> ValueError;
process_sample -> tolist;
process_sample -> split;
process_sample -> enumerate;
process_sample -> warning;
process_sample -> ids_to_text;
process_sample -> append;
process_sample -> extend;
process_sample -> long;
process_sample -> tensor;
process_sample -> numpy;
process_sample -> text_to_ids;
process_sample -> type;
process_sample -> cpu;
process_sample -> load_speech_overlap_segments_from_rttm;
process_sample -> sum;
process_sample -> get_nonspeech_segments;
process_sample -> max;
process_sample -> duration;
process_sample -> Path;
process_sample -> str;
collate_audio_data -> max;
collate_audio_data -> collate_vectors;
collate_audio_data -> long;
collate_audio_data -> extend;
collate_audio_data -> len;
collate_audio_data -> tensor;
_get_metadata -> append;
_get_metadata -> getattr;
_get_metadata -> type;
_process_cut -> reshape;
_process_cut -> _convert_cut_sample;
_process_cut -> text_processor;
_process_cut -> load_audio;
_process_cut -> len;
_process_multimodal_conversation -> text_processor;
_process_multimodal_conversation -> reshape;
_process_multimodal_conversation -> len;
_process_multimodal_conversation -> isinstance;
_process_multimodal_conversation -> load_audio;
_convert_cut_sample -> hasattr;
_convert_cut_sample -> NeMoMultimodalConversation;
_convert_cut_sample -> getattr;
_convert_cut_sample -> TextTurn;
_convert_cut_sample -> AudioTurn;
pad_or_trim_to_max_length -> transpose;
pad_or_trim_to_max_length -> ceil_to_nearest;
pad_or_trim_to_max_length -> size;
pad_or_trim_to_max_length -> cat;
pad_or_trim_to_max_length -> dim;
pad_or_trim_to_max_length -> full;
pad_or_trim_to_max_length -> ValueError;
estimate_encoded_max_length -> int;
estimate_encoded_max_length -> ceil;
estimate_encoded_max_length -> size;
_set_model_guid -> hasattr;
_set_model_guid -> AppState;
_set_model_guid -> str;
_set_model_guid -> register_model_guid;
_set_model_guid -> uuid4;
_set_model_guid -> _is_model_being_restored;
freeze_module -> parameters;
unfreeze_module -> parameters;
setup_multi_validation_data -> getattr;
setup_multi_validation_data -> warning;
setup_multi_validation_data -> info;
setup_multi_validation_data -> len;
setup_multi_validation_data -> ValueError;
setup_multi_validation_data -> range;
setup_multi_test_data -> getattr;
setup_multi_test_data -> warning;
setup_multi_test_data -> info;
setup_multi_test_data -> len;
setup_multi_test_data -> ValueError;
setup_multi_test_data -> range;
register_model_guid -> ModelMetadataRegistry;
register_model_guid -> len;
recursively_propagate_guid -> children;
recursively_propagate_guid -> recursively_propagate_guid;
validation_step_outputs -> range;
validation_step_outputs -> append;
validation_step_outputs -> isinstance;
validation_step_outputs -> len;
test_step_outputs -> range;
test_step_outputs -> append;
test_step_outputs -> isinstance;
test_step_outputs -> len;
fsdp2_strategy_parallelize -> parallelize_helper;
fsdp2_strategy_parallelize -> fully_shard;
fsdp2_strategy_parallelize -> MixedPrecisionPolicy;
fsdp2_strategy_parallelize -> isinstance;
fsdp2_strategy_parallelize -> size;
fsdp2_strategy_parallelize -> parallelize_module;
fsdp2_strategy_parallelize -> enumerate;
fsdp2_strategy_parallelize -> named_children;
fsdp2_strategy_parallelize -> get_hf_tp_shard_plan;
fsdp2_strategy_parallelize -> get;
fsdp2_strategy_parallelize -> int;
fsdp2_strategy_parallelize -> len;
speech_to_text_llm_data_step -> next;
speech_to_text_llm_data_step -> set;
speech_to_text_llm_data_step -> is_pipeline_first_stage;
speech_to_text_llm_data_step -> is_pipeline_last_stage;
speech_to_text_llm_data_step -> isinstance;
speech_to_text_llm_data_step -> update;
speech_to_text_llm_data_step -> get_context_parallel_world_size;
speech_to_text_llm_data_step -> len;
speech_to_text_llm_data_step -> move_data_to_device;
speech_to_text_llm_data_step -> items;
speech_to_text_llm_data_step -> sum;
speech_to_text_llm_forward_step -> model;
speech_to_text_llm_forward_step -> get;
speech_to_text_llm_forward_step -> get_packed_seq_params;
_freeze_module -> parameters;
_maybe_load_pretrained_llm -> info;
_maybe_load_pretrained_llm -> check_is_distributed_checkpoint;
_maybe_load_pretrained_llm -> get_rank;
_maybe_load_pretrained_llm -> sleep;
_maybe_load_pretrained_llm -> import_class_by_path;
_maybe_load_pretrained_llm -> import_ckpt;
_maybe_load_pretrained_llm -> dict;
_maybe_load_pretrained_llm -> load;
_maybe_load_pretrained_llm -> load_state_dict;
_maybe_load_pretrained_llm -> is_initialized;
_maybe_load_pretrained_llm -> RuntimeError;
_maybe_load_pretrained_llm -> llm_model_cls;
_maybe_load_pretrained_llm -> removeprefix;
_maybe_load_pretrained_llm -> sharded_state_dict;
_maybe_load_pretrained_llm -> ckpt_to_weights_subdir;
_maybe_load_pretrained_llm -> items;
_maybe_load_asr_and_modality_adapter -> info;
_maybe_load_asr_and_modality_adapter -> load_distributed_ckpt;
_maybe_load_asr_and_modality_adapter -> load_state_dict;
_maybe_load_asr_and_modality_adapter -> items;
_maybe_load_asr_and_modality_adapter -> startswith;
_maybe_load_asr_and_modality_adapter -> len;
load_distributed_ckpt -> ckpt_to_weights_subdir;
load_distributed_ckpt -> FileSystemReader;
load_distributed_ckpt -> read_metadata;
load_distributed_ckpt -> load;
load_distributed_ckpt -> isinstance;
load_distributed_ckpt -> Path;
load_distributed_ckpt -> empty;
load_distributed_ckpt -> items;
load_distributed_ckpt -> type;
get_nested_attr -> split;
get_nested_attr -> getattr;
get_nested_attr -> hasattr;
get_nested_attr -> AttributeError;
_get_llm_input_for_context_parallel -> get_context_parallel_world_size;
_get_llm_input_for_context_parallel -> contiguous;
_get_llm_input_for_context_parallel -> pad_or_trim_to_max_length;
_get_llm_input_for_context_parallel -> _create_attention_mask;
_get_llm_input_for_context_parallel -> get_batch_on_this_cp_rank;
_get_llm_input_for_context_parallel -> transpose;
freeze_speech -> freeze_module;
freeze_speech -> hasattr;
freeze_modality_adapter -> freeze_module;
freeze_modality_adapter -> hasattr;
unfreeze_llm -> unfreeze_module;
unfreeze_llm -> hasattr;
unfreeze_speech -> unfreeze_module;
unfreeze_speech -> hasattr;
unfreeze_modality_adapter -> unfreeze_module;
unfreeze_modality_adapter -> hasattr;
trainable_parameters -> items;
trainable_parameters -> state_dict;
trainable_parameters -> startswith;
trainable_parameters -> append;
trainable_parameters -> endswith;
clean_end_string -> ids_to_text;
clean_end_string -> isinstance;
clean_end_string -> text_to_ids;
clean_end_string -> append;
clean_end_string -> endswith;
clean_end_string -> strip;
clean_end_string -> len;
get_inference_strategy -> text_generation_strategy;
configure_nemo_asr_model -> import_class_by_path;
configure_nemo_asr_model -> endswith;
configure_nemo_asr_model -> to_container;
configure_nemo_asr_model -> create;
configure_nemo_asr_model -> imported_cls;
configure_nemo_asr_model -> maybe_init_from_pretrained_checkpoint;
configure_nemo_asr_model -> get_nested_attr;
configure_nemo_asr_model -> ValueError;
configure_nemo_asr_model -> from_config_dict;
configure_nemo_asr_model -> hasattr;
configure_nemo_asr_model -> restore_from;
configure_nemo_asr_model -> from_pretrained;
configure_nemo_asr_model -> to_dict_config;
configure_nemo_asr_model -> warning;
configure_nemo_asr_model -> str;
to_dict_config -> isinstance;
to_dict_config -> create;
configure_hf_auto_model -> from_pretrained;
configure_hf_auto_model -> HFWrappedPreprocessor;
configure_hf_auto_model -> HFWrappedEncoder;
configure_hf_auto_model -> from_config;
configure_hf_auto_model -> get_nested_attr;
dump_config -> mkdir;
dump_config -> str;
dump_config -> Path;
dump_config -> open;
dump_config -> write;
dump_config -> to_yaml;
dump_config -> cwd;
build_components -> set_typecheck_enabled;
build_components -> to_container;
build_components -> info;
build_components -> SpeechToTextLLMConfig;
build_components -> SpeechToTextLLM;
build_components -> AudioToTextDataModule;
build_components -> from_config_dict;
build_components -> get_object_list_from_config;
build_components -> get;
build_components -> append;
build_components -> Trainer;
build_components -> PipelineComponents;
build_components -> prepare_pretrained_llm_dist_ckpt;
build_components -> TimingCallback;
build_components -> SpeechToTextLLMPEFT;
build_components -> AutoTokenizer;
build_components -> ValueError;
build_components -> ASRModuleConfig;
build_components -> ModalityAdapterConfig;
build_components -> PreemptionCallback;
build_components -> to_yaml;
build_components -> StatelessTimer;
get_object_list_from_config -> isinstance;
get_object_list_from_config -> list;
get_object_list_from_config -> from_config_dict;
get_object_list_from_config -> values;
get_object_list_from_config -> ValueError;
get_object_list_from_config -> type;
prepare_pretrained_llm_dist_ckpt -> check_is_distributed_checkpoint;
prepare_pretrained_llm_dist_ckpt -> info;
prepare_pretrained_llm_dist_ckpt -> import_class_by_path;
prepare_pretrained_llm_dist_ckpt -> import_ckpt;
prepare_pretrained_llm_dist_ckpt -> llm_model_cls;
speech_to_text_llm_generate -> NotImplementedError;
importer -> _get_connector;
on_import_ckpt -> hasattr;
get_wrappped_io -> partial;
_transform_module -> walk;
_transform_module -> hasattr;
freeze_model -> parameters;
freeze_model -> dir;
freeze_model -> append;
freeze_model -> startswith;
freeze_model -> isinstance;
freeze_model -> getattr;
freeze_model -> ValueError;
freeze_model -> freeze;
freeze_model -> is_trainer_attached;
freeze_model -> train;
freeze_model -> len;
freeze_model -> freeze_model;
freeze_model -> super;
set_params_to_save -> set;
set_params_to_save -> len;
set_params_to_save -> RuntimeError;
set_params_to_save -> trainable_parameters;
set_params_to_save -> named_modules;
set_params_to_save -> hasattr;
set_params_to_save -> named_buffers;
set_params_to_save -> named_parameters;
set_params_to_save -> add;
_load_checkpoint -> load_checkpoint;
_load_checkpoint -> dict;
_maybe_get_adapter_path -> info;
_maybe_get_adapter_path -> AdapterPath;
_maybe_get_adapter_path -> exists;
_maybe_get_adapter_path -> Path;
get_trainer_ckpt_path -> AppState;
get_trainer_ckpt_path -> info;
get_trainer_ckpt_path -> get_weights_path;
get_trainer_ckpt_path -> _maybe_get_adapter_path;
get_trainer_ckpt_path -> _find_trainer_ckpt_path;
get_trainer_ckpt_path -> is_dir;
get_trainer_ckpt_path -> exists;
get_trainer_ckpt_path -> ValueError;
get_trainer_ckpt_path -> AdapterPath;
get_trainer_ckpt_path -> Path;
get_trainer_ckpt_path -> _get_base_model_path_for_adapter;
get_weights_path -> Path;
_find_trainer_ckpt_path -> AppState;
_find_trainer_ckpt_path -> len;
_find_trainer_ckpt_path -> _filter_out_unfinished_checkpoints;
_find_trainer_ckpt_path -> Path;
_find_trainer_ckpt_path -> ValueError;
_find_trainer_ckpt_path -> list;
_find_trainer_ckpt_path -> is_dir;
_find_trainer_ckpt_path -> match;
_find_trainer_ckpt_path -> exists;
_find_trainer_ckpt_path -> warning;
_find_trainer_ckpt_path -> glob;
_find_trainer_ckpt_path -> NotFoundError;
_find_trainer_ckpt_path -> any;
_find_trainer_ckpt_path -> str;
_find_trainer_ckpt_path -> uninject_model_parallel_rank;
_find_trainer_ckpt_path -> sorted;
_find_trainer_ckpt_path -> lstat;
_get_dp_rank -> is_available;
_get_dp_rank -> is_initialized;
_get_dp_rank -> hasattr;
_get_dp_rank -> get_rank;
_get_dp_rank -> get_coordinate;
_get_world_size -> is_available;
_get_world_size -> is_initialized;
_get_world_size -> hasattr;
_get_world_size -> get_world_size;
_build_test_dataloader -> copy;
_build_test_dataloader -> items;
_build_test_dataloader -> CombinedLoader;
_build_test_dataloader -> get_lhotse_dataloader_from_config;
_build_test_dataloader -> open_dict;
_build_test_dataloader -> _build_test_dataloader;
_build_test_dataloader -> merge;
_build_test_dataloader -> _get_dp_rank;
_build_test_dataloader -> _get_world_size;
collate_token_channel -> get_pad_id;
collate_token_channel -> tensor;
collate_token_channel -> collate_vectors;
collate_token_channel -> build_token_channel;
collate_token_channel -> len;
get_pad_id -> warn;
build_token_channel -> compute_num_frames;
build_token_channel -> getattr;
build_token_channel -> ones;
build_token_channel -> as_tensor;
build_token_channel -> len;
build_token_channel -> warning;
build_token_channel -> text_to_ids;
build_token_channel -> RuntimeError;
_strip_timestamps -> compile;
_strip_timestamps -> sub;
_strip_timestamps -> strip;
replace_control_speech_codes -> where;
replace_control_speech_codes -> isin;
tokens_to_str -> zip;
tokens_to_str -> cpu;
tokens_to_str -> append;
tokens_to_str -> ids_to_text;
setup_audio_codec -> parameters;
setup_audio_codec -> hasattr;
setup_audio_codec -> fp32_precision;
setup_audio_codec -> eval;
setup_audio_codec -> next;
setup_audio_codec -> load_pretrained_nemo;
maybe_install_lora -> LoraConfig;
maybe_install_lora -> get_peft_model;
maybe_install_lora -> append;
maybe_install_lora -> info;
maybe_install_lora -> hasattr;
maybe_install_lora -> isinstance;
setup_speech_encoder -> eval;
setup_speech_encoder -> train;
setup_speech_encoder -> load_state_dict;
setup_speech_encoder -> open_dict;
setup_speech_encoder -> state_dict;
setup_speech_encoder -> load_pretrained_nemo;
setup_speech_encoder -> AudioPerceptionModule;
load_pretrained_hf -> from_pretrained;
load_pretrained_hf -> from_config;
text_pad_id -> get_pad_id;
text_pad_id -> warn;
fp32_precision -> get_default_dtype;
fp32_precision -> set_default_dtype;
fp32_precision -> autocast;
fp32_precision -> is_available;
is_frozen -> all;
is_frozen -> parameters;
offline_inference -> no_grad;
offline_inference -> perception;
offline_inference -> get;
offline_inference -> DynamicCache;
offline_inference -> empty;
offline_inference -> _get_bos_embedding;
offline_inference -> self;
offline_inference -> range;
offline_inference -> tensor;
offline_inference -> all_reduce;
offline_inference -> int;
offline_inference -> argmax;
offline_inference -> embed_tokens;
offline_inference -> tokens_to_str;
offline_inference -> replace_control_speech_codes;
offline_inference -> item;
offline_inference -> repeat;
offline_inference -> cat;
offline_inference -> fp32_precision;
offline_inference -> decode;
offline_inference -> transpose;
offline_inference -> reset_input_and_kv_cache;
offline_inference -> full;
_get_bos_embedding -> full;
_get_bos_embedding -> embed_tokens;
_get_bos_embedding -> range;
_get_bos_embedding -> add_;
reset_input_and_kv_cache -> _init_cache;
reset_input_and_kv_cache -> reset_cache;
reset_input_and_kv_cache -> print;
replace_placeholders_and_build_targets -> size;
replace_placeholders_and_build_targets -> range;
replace_placeholders_and_build_targets -> max;
replace_placeholders_and_build_targets -> zeros;
replace_placeholders_and_build_targets -> enumerate;
replace_placeholders_and_build_targets -> append;
replace_placeholders_and_build_targets -> len;
replace_placeholders_and_build_targets -> ValueError;
replace_placeholders_and_build_targets -> full;
replace_placeholders_and_build_targets -> repeat;
replace_placeholders_and_build_targets -> zip;
replace_placeholders_and_build_targets -> nonzero;
replace_placeholders_and_build_targets -> cat;
replace_placeholders_and_build_targets -> clone;
replace_placeholders_and_build_targets -> ones;
audio_locator_tag_id -> token_to_id;
move_embedding -> isinstance;
all_logits_to_each_codebooks_logits -> range;
all_logits_to_each_codebooks_logits -> contiguous;
all_logits_to_each_codebooks_logits -> append;
all_logits_to_each_codebooks_logits -> transpose;
embed_audio_tokens -> range;
embed_audio_tokens -> size;
sample_codes_from_logits -> range;
sample_codes_from_logits -> long;
sample_codes_from_logits -> clone;
sample_codes_from_logits -> float;
sample_codes_from_logits -> softmax;
sample_codes_from_logits -> multinomial;
sample_codes_from_logits -> append;
sample_codes_from_logits -> topk;
sample_codes_from_logits -> unsqueeze;
sample_codes_from_logits -> cat;
reset_cache -> _init_cache;
reset_cache -> reset_cache;
_from_pretrained -> cached_file;
_from_pretrained -> to_container;
_from_pretrained -> _from_pretrained;
_from_pretrained -> RuntimeError;
_from_pretrained -> load;
_from_pretrained -> super;
freeze_and_subset -> info;
freeze_and_subset -> compile;
freeze_and_subset -> warning;
freeze_and_subset -> _exclude;
freeze_and_subset -> numel;
freeze_and_subset -> match;
freeze_and_subset -> _must_keep;
freeze_and_subset -> items;
freeze_and_subset -> join;
_exclude -> match;
_must_keep -> match;
load_pretrained_nemo -> exists;
load_pretrained_nemo -> endswith;
load_pretrained_nemo -> restore_from;
load_pretrained_nemo -> from_pretrained;
load_pretrained_nemo -> Path;
filter_files -> info;
filter_files -> append;
filter_files -> open;
filter_files -> set;
filter_files -> remove;
filter_files -> expanduser;
filter_files -> load;
filter_files -> len;
filter_files -> Path;
get_base_dir -> common_path;
get_base_dir -> relative_to;
get_base_dir -> is_relative_to;
get_base_dir -> Path;
add_log_mel -> pop;
add_log_mel -> mkdir;
add_log_mel -> isinstance;
add_log_mel -> Path;
add_durations -> pop;
add_durations -> load;
add_durations -> Path;
add_durations -> append;
add_durations -> NotImplementedError;
add_align_prior_matrix -> pop;
add_align_prior_matrix -> BetaBinomialInterpolator;
add_align_prior_matrix -> warning;
add_pitch -> pop;
add_pitch -> mkdir;
add_pitch -> isinstance;
add_pitch -> note_to_hz;
add_pitch -> Path;
add_pitch -> open;
add_pitch -> load;
add_voiced_mask -> pop;
add_voiced_mask -> mkdir;
add_voiced_mask -> Path;
add_p_voiced -> pop;
add_p_voiced -> mkdir;
add_p_voiced -> Path;
add_energy -> pop;
add_energy -> mkdir;
add_energy -> isinstance;
add_energy -> Path;
add_reference_audio -> pop;
add_reference_audio -> defaultdict;
add_reference_audio -> enumerate;
add_reference_audio -> add;
add_reference_audio -> NotImplementedError;
add_reference_audio -> choice;
add_reference_audio -> tuple;
get_spec -> autocast;
get_spec -> stft;
get_spec -> sqrt;
get_spec -> view_as_real;
get_spec -> sum;
get_spec -> pow;
get_log_mel -> autocast;
get_log_mel -> get_spec;
get_log_mel -> matmul;
get_log_mel -> log;
get_log_mel -> to;
get_log_mel -> clamp;
get_log_mel -> finfo;
pitch_shift -> Path;
pitch_shift -> exists;
pitch_shift -> load;
pitch_shift -> uniform;
pitch_shift -> choice;
pitch_shift -> pitch_shift;
pitch_shift -> tensor;
pitch_shift -> save;
_pad_wav_to_multiple -> cat;
_pad_wav_to_multiple -> zeros;
__setitem__ -> NotImplementedError;
__setitem__ -> UnavailableError;
beta_binomial_prior_distribution -> rearrange;
beta_binomial_prior_distribution -> FloatTensor;
beta_binomial_prior_distribution -> numpy;
beta_binomial_prior_distribution -> arange;
beta_binomial_prior_distribution -> exp;
beta_binomial_prior_distribution -> logbetabinom;
join_data -> tuple;
join_data -> append;
join_data -> issubclass;
general_collate_fn -> zip;
general_collate_fn -> item;
general_collate_fn -> enumerate;
general_collate_fn -> max;
general_collate_fn -> zeros;
general_collate_fn -> general_padding;
general_collate_fn -> append;
general_collate_fn -> stack;
general_collate_fn -> finfo;
general_collate_fn -> len;
_albert -> from_pretrained;
_albert -> _convert_token_to_id;
_albert -> enumerate;
_albert -> text_preprocessing_func;
_albert -> encode;
_albert -> isinstance;
add_lm_tokens -> pop;
add_lm_tokens -> _albert;
add_lm_tokens -> NotImplementedError;
_get_wav_from_filepath -> segment_from_file;
_get_wav_from_filepath -> tensor;
_get_wav_from_filepath -> long;
_get_wav_from_filepath -> cat;
_get_wav_from_filepath -> zeros;
get_ssl_features -> join;
get_ssl_features -> exists;
get_ssl_features -> long;
get_ssl_features -> load;
get_ssl_features -> ValueError;
get_ssl_features -> tensor;
get_pitch_contour -> join;
get_pitch_contour -> exists;
get_pitch_contour -> load;
get_pitch_contour -> ValueError;
get_pitch_contour -> pyin;
get_pitch_contour -> tensor;
get_pitch_contour -> item;
get_pitch_contour -> numpy;
get_pitch_contour -> note_to_hz;
get_pitch_contour -> mean;
get_pitch_contour -> std;
get_mel_spectrogram -> join;
get_mel_spectrogram -> exists;
get_mel_spectrogram -> load;
get_mel_spectrogram -> ValueError;
get_mel_spectrogram -> stft;
get_mel_spectrogram -> sqrt;
get_mel_spectrogram -> matmul;
get_mel_spectrogram -> log;
get_mel_spectrogram -> view_as_real;
get_mel_spectrogram -> to;
get_mel_spectrogram -> clamp;
get_mel_spectrogram -> sum;
get_mel_spectrogram -> pow;
get_mel_spectrogram -> finfo;
get_mel_spectrogram -> window_fn;
pad_collate_fn -> defaultdict;
pad_collate_fn -> max;
pad_collate_fn -> pad;
pad_collate_fn -> append;
pad_collate_fn -> stack;
pad_collate_fn -> item;
pad_collate_fn -> size;
_create_buckets -> range;
_create_buckets -> len;
_create_buckets -> _bisect;
_create_buckets -> append;
_create_buckets -> pop;
_bisect -> len;
_bisect -> _bisect;
_preprocess_manifest -> read_manifest;
_preprocess_manifest -> filter_dataset_by_duration;
_preprocess_manifest -> info;
_preprocess_manifest -> DatasetSample;
_preprocess_manifest -> append;
_preprocess_manifest -> len;
_preprocess_manifest -> Path;
get_sampler -> get_weighted_sampler;
get_weighted_sampler -> tensor;
get_weighted_sampler -> WeightedRandomSampler;
filter_dataset_by_duration -> append;
stack_tensors -> stack;
stack_tensors -> enumerate;
stack_tensors -> pad;
stack_tensors -> append;
get_num_audio_samples_to_slice -> int;
_read_audio -> range;
_read_audio -> ValueError;
_read_audio -> from_file;
_read_audio -> print_exc;
audio_collate_fn -> IntTensor;
audio_collate_fn -> int;
audio_collate_fn -> stack_tensors;
audio_collate_fn -> append;
audio_collate_fn -> item;
audio_collate_fn -> max;
preprocess_manifest -> read_manifest;
preprocess_manifest -> filter_dataset_by_duration;
preprocess_manifest -> info;
preprocess_manifest -> DatasetSample;
preprocess_manifest -> append;
preprocess_manifest -> len;
preprocess_manifest -> Path;
sample_audio -> get_audio_filepaths;
sample_audio -> get;
sample_audio -> _segment_audio;
sample_audio -> get_duration;
sample_audio -> min;
sample_audio -> max;
sample_audio -> normalize_volume;
get_full_list_puncts -> set;
get_full_list_puncts -> sorted;
get_full_list_puncts -> get_ipa_punctuation_list;
get_full_list_puncts -> update;
_get_default_text_tokenizer_conf -> create;
_get_default_text_tokenizer_conf -> EnglishIpaG2pConfig;
_get_default_text_tokenizer_conf -> EnglishIpaTextTokenizer;
_get_default_text_tokenizer_conf -> EnglishIpaTextTokenizerConfig;
_get_default_text_tokenizer_conf -> G2PConfig;
_get_default_text_tokenizer_conf -> TextTokenizer;
_get_default_text_tokenizer_conf -> TextTokenizerConfig;
_get_default_text_tokenizer_conf -> to_yaml;
pad_text_to_speech_dims -> cat;
pad_text_to_speech_dims -> ones;
pad_text_to_speech_dims -> unsqueeze;
_insert_data_in_template -> keys;
_insert_data_in_template -> Exception;
_insert_data_in_template -> _get_tokens;
list_to_tensor -> max;
list_to_tensor -> long;
list_to_tensor -> cat;
list_to_tensor -> isinstance;
list_to_tensor -> append;
list_to_tensor -> len;
list_to_tensor -> as_tensor;
list_to_tensor -> tensor;
list_to_tensor -> full;
list_to_tensor -> size;
_truncate_input_speech -> _get_len;
_truncate_input_speech -> _get_element_len;
_truncate_input_speech -> min;
_get_element_len -> isinstance;
_get_element_len -> dim;
_get_element_len -> size;
_get_text_tokens -> text_to_ids;
_get_phoneme_tokens -> encode;
_get_phoneme_tokens -> any_locale_text_preprocessing;
_get_phoneme_tokens -> text_to_ids;
_get_phoneme_tokens -> append;
_get_phoneme_tokens -> join;
_load_audio -> int;
_load_audio -> segment_from_file;
_load_audio -> tensor;
_load_audio -> process;
_load_audio -> _pad_wav_to_multiple;
_load_audio -> long;
convert_audio -> dim;
convert_audio -> unsqueeze;
convert_audio -> expand;
get_codec -> convert_audio;
get_codec -> encode;
get_codec -> cat;
get_codec -> squeeze;
get_quantizer_codebook -> zeros;
get_quantizer_codebook -> range;
get_quantizer_codebook -> squeeze;
get_quantizer_codebook -> decode;
get_quantizer_codebook -> item;
get_quantizer_codebook -> size;
get_quantizer_codebook -> unsqueeze;
_get_speech_tokens -> with_suffix;
_get_speech_tokens -> replace;
_get_speech_tokens -> _load_audio;
_get_speech_tokens -> exists;
_get_speech_tokens -> long;
_get_speech_tokens -> save;
_get_speech_tokens -> relative_to;
_get_speech_tokens -> str;
_get_speech_tokens -> print;
_get_speech_tokens -> get_codec;
_get_speech_tokens -> Path;
_get_speech_tokens -> load;
_get_speech_tokens -> BytesIO;
get_position_ids -> append;
get_position_ids -> cat;
get_position_ids -> contiguous;
get_position_ids -> dim;
get_position_ids -> build_position_ids;
get_mask_from_lengths -> arange;
get_mask_from_lengths -> ones;
get_mask_from_lengths -> unsqueeze;
get_mask_from_lengths -> max;
read_wordids -> exists;
read_wordids -> ValueError;
read_wordids -> open;
read_wordids -> reader;
read_wordids -> enumerate;
read_wordids -> len;
get_wordid_to_phonemes -> exists;
get_wordid_to_phonemes -> ValueError;
get_wordid_to_phonemes -> open;
get_wordid_to_phonemes -> enumerate;
get_wordid_to_phonemes -> split;
get_wordid_to_phonemes -> lower;
get_wordid_to_phonemes -> strip;
get_heteronym_spans -> split;
get_heteronym_spans -> append;
get_heteronym_spans -> lower;
get_heteronym_spans -> remove_punctuation;
get_heteronym_spans -> index;
get_heteronym_spans -> len;
set_grapheme_case -> upper;
set_grapheme_case -> lower;
set_grapheme_case -> ValueError;
_prepare_sample -> zip;
_prepare_sample -> hasattr;
_prepare_sample -> len;
_prepare_sample -> debug;
_prepare_sample -> append;
_prepare_sample -> info;
_prepare_sample -> text_to_tokens;
_prepare_sample -> lower;
_prepare_sample -> group;
_prepare_sample -> finditer;
_prepare_sample -> text_to_ids;
_prepare_sample -> extend;
_prepare_sample -> start;
_prepare_sample -> end;
_prepare_sample -> index;
setup_heteronym_model -> set_wordid_to_phonemes;
setup_heteronym_model -> warning;
setup_heteronym_model -> error;
set_wordid_to_phonemes -> warning;
set_wordid_to_phonemes -> get_wordid_to_phonemes;
set_wordid_to_phonemes -> info;
set_wordid_to_phonemes -> exists;
setup_grapheme_tokenizer -> from_pretrained;
setup_grapheme_tokenizer -> get;
setup_grapheme_tokenizer -> register_artifact;
setup_grapheme_tokenizer -> instantiate;
setup_grapheme_tokenizer -> ValueError;
setup_grapheme_tokenizer -> replace;
setup_grapheme_tokenizer -> open;
setup_grapheme_tokenizer -> write;
_parse_as_cmu_dict -> compile;
_parse_as_cmu_dict -> warning;
_parse_as_cmu_dict -> dict;
_parse_as_cmu_dict -> open;
_parse_as_cmu_dict -> is_available;
_parse_as_cmu_dict -> is_initialized;
_parse_as_cmu_dict -> is_global_rank_zero;
_parse_as_cmu_dict -> barrier;
_parse_as_cmu_dict -> error;
_parse_as_cmu_dict -> sleep;
_parse_as_cmu_dict -> len;
_parse_as_cmu_dict -> split;
_parse_as_cmu_dict -> sub;
_parse_as_cmu_dict -> lower;
_parse_as_cmu_dict -> find;
_parse_as_cmu_dict -> append;
_parse_as_cmu_dict -> download;
_parse_as_cmu_dict -> strip;
_parse_file_by_lines -> open;
_parse_file_by_lines -> rstrip;
_parse_file_by_lines -> readlines;
is_unique_in_phoneme_dict -> len;
parse_one_word -> search;
parse_one_word -> endswith;
parse_one_word -> random;
parse_one_word -> list;
parse_one_word -> len;
parse_one_word -> is_unique_in_phoneme_dict;
parse_one_word -> apply_to_oov_word;
parse_one_word -> set_grapheme_case;
parse_one_word -> zip;
parse_one_word -> upper;
parse_one_word -> _prepend_prefix_for_one_word;
parse_one_word -> startswith;
make_step -> forward;
make_step -> loss;
make_step -> zeros_like;
_process_sentence -> enumerate;
_process_sentence -> len;
_process_sentence -> join;
_disambiguate -> no_grad;
_disambiguate -> eval;
_disambiguate -> to;
_disambiguate -> _setup_infer_dataloader;
_disambiguate -> train;
_disambiguate -> is_available;
_disambiguate -> make_step;
_disambiguate -> tensor2list;
_disambiguate -> len;
_disambiguate -> append;
_disambiguate -> argmax;
_parse_phoneme_dict -> isinstance;
_parse_phoneme_dict -> defaultdict;
_parse_phoneme_dict -> compile;
_parse_phoneme_dict -> info;
_parse_phoneme_dict -> items;
_parse_phoneme_dict -> open;
_parse_phoneme_dict -> normalize_unicode_text;
_parse_phoneme_dict -> update;
_parse_phoneme_dict -> len;
_parse_phoneme_dict -> split;
_parse_phoneme_dict -> sub;
_parse_phoneme_dict -> append;
_parse_phoneme_dict -> type;
_parse_phoneme_dict -> list;
_parse_phoneme_dict -> strip;
_normalize_dict -> defaultdict;
_normalize_dict -> set;
_normalize_dict -> items;
_normalize_dict -> set_grapheme_case;
_normalize_dict -> list;
_normalize_dict -> sub;
_normalize_dict -> update;
_normalize_dict -> _prepend_prefix_for_one_word;
_normalize_dict -> append;
_normalize_dict -> isupper;
_normalize_dict -> upper;
replace_dict -> _parse_phoneme_dict;
_parse_ja_phoneme_dict -> defaultdict;
_parse_ja_phoneme_dict -> open;
_parse_ja_phoneme_dict -> split;
_parse_ja_phoneme_dict -> startswith;
_parse_ja_phoneme_dict -> len;
_parse_ja_phoneme_dict -> rstrip;
_parse_ja_phoneme_dict -> strip;
_parse_as_pinyin_dict -> defaultdict;
_parse_as_pinyin_dict -> open;
_parse_as_pinyin_dict -> split;
_parse_as_pinyin_dict -> lower;
_parse_as_pinyin_dict -> startswith;
_parse_as_pinyin_dict -> len;
_parse_as_pinyin_dict -> set_grapheme_case;
_parse_as_pinyin_dict -> strip;
_compute_spectrogram -> stft;
_compute_spectrogram -> view_as_real;
_compute_spectrogram -> sqrt;
_compute_spectrogram -> log;
_compute_spectrogram -> mask_sequence_tensor;
_compute_spectrogram -> sum;
_compute_spectrogram -> pow;
mask_from_lens -> arange;
mask_from_lens -> lt;
mask_from_lens -> max;
mask_from_lens -> unsqueeze;
compute_flow_loss -> enumerate;
compute_flow_loss -> len;
compute_flow_loss -> sum;
compute_regression_loss -> len;
compute_regression_loss -> binary_cross_entropy_with_logits;
compute_regression_loss -> mse_loss;
compute_regression_loss -> sum;
compute_regression_loss -> format;
_setup_normalizer -> instantiate;
_setup_normalizer -> error;
_setup_normalizer -> register_artifact;
g2p_backward_compatible_support -> deprecated;
g2p_backward_compatible_support -> replace;
_metrics -> forward_sum_loss;
_metrics -> binarize_attention;
_metrics -> bin_loss;
_metrics -> get_mask_from_lengths;
_metrics -> mse_loss;
_metrics -> clamp_min;
_metrics -> long;
_metrics -> transpose;
_metrics -> mean;
_metrics -> squeeze;
_metrics -> log;
_metrics -> float;
_metrics -> sum;
_metrics -> exp;
_metrics -> round;
_metrics -> average_features;
_metrics -> unsqueeze;
_metrics -> abs;
binarize_attention -> no_grad;
binarize_attention -> numpy;
binarize_attention -> zeros_like;
binarize_attention -> range;
binarize_attention -> mas_width1;
binarize_attention -> tensor;
binarize_attention -> cpu;
binarize_attention -> get_device;
binarize_attention -> mas;
plot_alignment_to_numpy -> imshow;
plot_alignment_to_numpy -> set_title;
plot_alignment_to_numpy -> colorbar;
plot_alignment_to_numpy -> xlabel;
plot_alignment_to_numpy -> ylabel;
plot_alignment_to_numpy -> tight_layout;
plot_alignment_to_numpy -> draw;
plot_alignment_to_numpy -> save_figure_to_numpy;
plot_alignment_to_numpy -> close;
plot_alignment_to_numpy -> subplots;
plot_alignment_to_numpy -> set_yticks;
plot_alignment_to_numpy -> set_yticklabels;
plot_alignment_to_numpy -> hlines;
plot_alignment_to_numpy -> arange;
plot_alignment_to_numpy -> len;
plot_alignment_to_numpy -> max;
plot_alignment_to_numpy -> get_xticks;
_loader -> instantiate;
_loader -> DataLoader;
_loader -> warning;
get_speaker_embedding -> unsqueeze;
get_speaker_embedding -> no_grad;
get_speaker_embedding -> resample;
get_speaker_embedding -> error;
get_speaker_embedding -> ModuleNotFoundError;
get_speaker_embedding -> speaker_encoder;
get_speaker_embedding -> ValueError;
get_speaker_embedding -> speaker_emb;
get_speaker_embedding -> stack;
get_speaker_embedding -> to;
get_speaker_embedding -> forward_for_export;
get_speaker_embedding -> mean;
get_speaker_embedding -> norm;
get_speaker_embedding -> load_wav;
get_speaker_embedding -> segment_wav;
get_speaker_embedding -> append;
get_speaker_embedding -> tensor;
get_speaker_embedding -> len;
get_speaker_embedding -> range;
get_speaker_embedding -> int;
encode_audio -> typecheck;
encode_audio -> pad_audio;
encode_audio -> audio_encoder;
encode_audio -> NeuralType;
encode_audio -> AudioSignal;
encode_audio -> tuple;
encode_audio -> LengthsType;
encode_audio -> EncodedRepresentation;
decode_audio -> typecheck;
decode_audio -> audio_decoder;
decode_audio -> NeuralType;
decode_audio -> EncodedRepresentation;
decode_audio -> tuple;
decode_audio -> LengthsType;
decode_audio -> AudioSignal;
update_lr -> lr_schedulers;
update_lr -> step;
_setup_train_dataloader -> get_dataset;
_setup_train_dataloader -> DataLoader;
_setup_train_dataloader -> nullcontext;
_setup_train_dataloader -> hasattr;
_setup_train_dataloader -> get_sampler;
_setup_train_dataloader -> set_phone_prob;
_setup_train_dataloader -> instantiate;
_setup_train_dataloader -> _setup_tokenizers;
_setup_test_dataloader -> instantiate;
_setup_test_dataloader -> DataLoader;
_setup_test_dataloader -> nullcontext;
_setup_test_dataloader -> hasattr;
_setup_test_dataloader -> set_phone_prob;
_setup_test_dataloader -> get_dataset;
_setup_test_dataloader -> _setup_tokenizers;
max_steps -> compute_max_steps;
max_steps -> get;
max_steps -> ValueError;
max_steps -> get_num_workers;
max_steps -> len;
max_steps -> get_batch_size;
compute_max_steps -> ceil;
compute_max_steps -> _round;
compute_max_steps -> warning;
compute_max_steps -> isinstance;
compute_max_steps -> min;
compute_max_steps -> max;
compute_max_steps -> int;
compute_max_steps -> float;
get_batch_size -> ValueError;
nemo_infer -> ExitStack;
nemo_infer -> enter_context;
nemo_infer -> temp_mode;
nemo_infer -> no_grad;
check_children_attributes -> to;
check_children_attributes -> stft;
check_children_attributes -> view_as_real;
check_children_attributes -> yet_another_patch;
check_children_attributes -> istft;
check_children_attributes -> AttributeError;
check_children_attributes -> sqrt;
check_children_attributes -> atan2;
check_children_attributes -> complex;
check_children_attributes -> sum;
check_children_attributes -> cos;
check_children_attributes -> sin;
check_children_attributes -> pow;
yet_another_patch -> stft;
yet_another_patch -> view_as_real;
yet_another_patch -> sqrt;
yet_another_patch -> atan2;
yet_another_patch -> sum;
yet_another_patch -> pow;
update_bias_spect -> check_children_attributes;
update_bias_spect -> nemo_infer;
update_bias_spect -> to;
update_bias_spect -> convert_spectrogram_to_audio;
update_bias_spect -> stft;
update_bias_spect -> zeros;
tb_logger -> isinstance;
plot_spectrogram_to_numpy -> astype;
plot_spectrogram_to_numpy -> subplots;
plot_spectrogram_to_numpy -> imshow;
plot_spectrogram_to_numpy -> colorbar;
plot_spectrogram_to_numpy -> xlabel;
plot_spectrogram_to_numpy -> ylabel;
plot_spectrogram_to_numpy -> tight_layout;
plot_spectrogram_to_numpy -> draw;
plot_spectrogram_to_numpy -> save_figure_to_numpy;
plot_spectrogram_to_numpy -> close;
sample_tts_input -> randint;
sample_tts_input -> clamp;
sample_tts_input -> randn;
sample_tts_input -> zeros;
sample_tts_input -> range;
sample_tts_input -> len;
sample_tts_input -> numpy;
sample_tts_input -> cpu;
sample_tts_input -> detach;
batch_from_ragged -> to;
batch_from_ragged -> max;
batch_from_ragged -> ones;
batch_from_ragged -> zeros;
interpolate_speaker -> detach;
interpolate_speaker -> Exception;
interpolate_speaker -> size;
interpolate_speaker -> clone;
interpolate_speaker -> speaker_emb;
interpolate_speaker -> cuda;
interpolate_speaker -> tensor;
vocode_spectrogram -> error;
vocode_spectrogram -> no_grad;
vocode_spectrogram -> to;
vocode_spectrogram -> numpy;
vocode_spectrogram -> generator;
vocode_spectrogram -> cpu;
vocode_spectrogram -> unsqueeze;
vocode_spectrogram -> from_numpy;
compute_encoding -> permute;
compute_encoding -> content_projection_layer;
compute_encoding -> speaker_projection_layer;
compute_encoding -> repeat;
compute_encoding -> cat;
compute_encoding -> dataset_embedding_layer;
plot_multipitch_to_numpy -> subplots;
plot_multipitch_to_numpy -> plot;
plot_multipitch_to_numpy -> xlabel;
plot_multipitch_to_numpy -> ylabel;
plot_multipitch_to_numpy -> legend;
plot_multipitch_to_numpy -> tight_layout;
plot_multipitch_to_numpy -> draw;
plot_multipitch_to_numpy -> save_figure_to_numpy;
plot_multipitch_to_numpy -> close;
plot_multipitch_to_numpy -> ylim;
generate_wav -> size;
generate_wav -> to;
generate_wav -> compute_encoding;
generate_wav -> mask_from_lens;
generate_wav -> self;
generate_wav -> range;
generate_wav -> encoder;
generate_wav -> numpy;
generate_wav -> vocode_spectrogram;
generate_wav -> append;
generate_wav -> long;
generate_wav -> get;
generate_wav -> squeeze;
generate_wav -> ones_like;
generate_wav -> ValueError;
generate_wav -> float;
generate_wav -> average_features;
generate_wav -> ones;
generate_wav -> unsqueeze;
generate_wav -> cpu;
average_features -> long;
average_features -> pad;
average_features -> size;
average_features -> expand;
average_features -> float;
average_features -> where;
average_features -> cumsum;
average_features -> gather;
get_warmup_steps -> ValueError;
_bias_denoise -> stft;
_bias_denoise -> clamp;
_bias_denoise -> unsqueeze;
_bias_denoise -> view_as_real;
_bias_denoise -> sqrt;
_bias_denoise -> atan2;
_bias_denoise -> stack;
_bias_denoise -> istft;
_bias_denoise -> self;
_bias_denoise -> squeeze;
_bias_denoise -> view_as_complex;
_bias_denoise -> get;
_bias_denoise -> zeros_like;
_bias_denoise -> cos;
_bias_denoise -> sin;
setup_tokenizers -> AggregatedTTSTokenizer;
setup_tokenizers -> append;
setup_tokenizers -> from_pretrained;
setup_tokenizers -> instantiate;
setup_tokenizers -> hasattr;
setup_tokenizers -> set_phone_prob;
worker_init_fn -> info;
worker_init_fn -> get_worker_info;
worker_init_fn -> setup_tokenizers;
_setup_tokenizers -> setup_tokenizers;
audio_to_codes -> eval;
audio_to_codes -> no_grad;
audio_to_codes -> encode;
audio_to_codes -> full;
audio_to_codes -> cat;
audio_to_codes -> range;
audio_to_codes -> ValueError;
audio_to_codes -> size;
audio_to_codes -> long;
codes_to_audio -> eval;
codes_to_audio -> no_grad;
codes_to_audio -> decode;
get_speaker_embeddings -> eval;
get_speaker_embeddings -> no_grad;
get_speaker_embeddings -> forward;
logits_to_audio_codes -> range;
logits_to_audio_codes -> stack;
logits_to_audio_codes -> get_mask_from_lengths;
logits_to_audio_codes -> softmax;
logits_to_audio_codes -> argmax;
logits_to_audio_codes -> append;
logits_to_audio_codes -> unsqueeze;
log_attention_probs -> no_grad;
log_attention_probs -> cat;
log_attention_probs -> mean;
log_attention_probs -> range;
log_attention_probs -> min;
log_attention_probs -> numpy;
log_attention_probs -> plot_alignment_to_numpy;
log_attention_probs -> add_image;
log_attention_probs -> size;
log_attention_probs -> cpu;
log_attention_probs -> detach;
log_train_val_example -> logits_to_audio_codes;
log_train_val_example -> codes_to_audio;
log_train_val_example -> range;
log_train_val_example -> min;
log_train_val_example -> numpy;
log_train_val_example -> add_audio;
log_train_val_example -> size;
log_train_val_example -> cpu;
log_train_val_example -> detach;
log_train_val_example -> float;
scale_prior -> no_grad;
compute_alignment_loss -> cat;
compute_alignment_loss -> mean;
compute_alignment_loss -> alignment_loss;
prepare_context_tensors -> text_embedding;
prepare_context_tensors -> get_mask_from_lengths;
prepare_context_tensors -> get;
prepare_context_tensors -> scale_prior;
prepare_context_tensors -> get_speaker_embeddings;
prepare_context_tensors -> speaker_projection_layer;
prepare_context_tensors -> encoder;
prepare_context_tensors -> unsqueeze;
prepare_context_tensors -> embed_audio_tokens;
prepare_context_tensors -> audio_to_codes;
prepare_context_tensors -> context_text_embedding;
prepare_context_tensors -> float;
prepare_context_tensors -> ValueError;
prepare_context_tensors -> size;
prepare_context_tensors -> zeros;
prepare_context_tensors -> cat;
prepare_context_tensors -> context_encoder;
prepare_dummy_cond_for_cfg -> isinstance;
prepare_dummy_cond_for_cfg -> zeros_like;
prepare_dummy_cond_for_cfg -> ones_like;
prepare_dummy_cond_for_cfg -> append;
prepare_dummy_cond_for_cfg -> ValueError;
prepare_dummy_cond_for_cfg -> type;
infer_batch -> no_grad;
infer_batch -> reset_cache;
infer_batch -> prepare_context_tensors;
infer_batch -> long;
infer_batch -> get_mask_from_lengths;
infer_batch -> range;
infer_batch -> stack;
infer_batch -> codes_to_audio;
infer_batch -> empty_cache;
infer_batch -> prepare_dummy_cond_for_cfg;
infer_batch -> embed_audio_tokens;
infer_batch -> sample_codes_from_logits;
infer_batch -> append;
infer_batch -> cat;
infer_batch -> get;
infer_batch -> full;
infer_batch -> print;
infer_batch -> size;
infer_batch -> isinstance;
infer_batch -> forward;
infer_batch -> len;
infer_batch -> tensor;
infer_batch -> item;
infer_batch -> unsqueeze;
infer_batch -> zip;
infer_batch -> format;
transcribe_with_whisper -> load;
transcribe_with_whisper -> to;
transcribe_with_whisper -> batch_decode;
transcribe_with_whisper -> get_decoder_prompt_ids;
transcribe_with_whisper -> whisper_processor;
transcribe_with_whisper -> no_grad;
transcribe_with_whisper -> generate;
get_speaker_embeddings_from_filepaths -> long;
get_speaker_embeddings_from_filepaths -> int;
get_speaker_embeddings_from_filepaths -> stack_tensors;
get_speaker_embeddings_from_filepaths -> forward;
get_speaker_embeddings_from_filepaths -> read;
get_speaker_embeddings_from_filepaths -> tensor;
get_speaker_embeddings_from_filepaths -> append;
get_speaker_embeddings_from_filepaths -> item;
get_speaker_embeddings_from_filepaths -> resample;
get_speaker_embeddings_from_filepaths -> size;
get_speaker_embeddings_from_filepaths -> max;
_get_batch_logps -> squeeze;
_get_batch_logps -> sum;
_get_batch_logps -> gather;
_get_batch_logps -> log_softmax;
_get_batch_logps -> unsqueeze;
preference_loss -> detach;
preference_loss -> logsigmoid;
preference_loss -> exp;
preference_loss -> NotImplementedError;
preference_loss -> format;
process_batch_dpo -> process_batch;
process_batch_dpo -> range;
process_batch_dpo -> all;
process_batch_dpo -> preference_loss;
process_batch_dpo -> mean;
process_batch_dpo -> get;
process_batch_dpo -> no_grad;
process_batch_dpo -> _get_batch_logps;
_get_lm_embeddings -> NotImplementedError;
_get_lm_embeddings -> from_pretrained;
_get_lm_padding_value -> _convert_token_to_id;
_get_lm_padding_value -> NotImplementedError;
_get_lm_padding_value -> from_pretrained;
_get_lm_model_tokenizer -> getattr;
_get_lm_model_tokenizer -> from_pretrained;
_get_lm_model_tokenizer -> NotImplementedError;
run_aligner -> symbol_emb;
run_aligner -> aligner;
run_aligner -> binarize_attention_parallel;
run_aligner -> all;
run_aligner -> permute;
run_aligner -> sum;
run_aligner -> eq;
binarize_attention_parallel -> to;
binarize_attention_parallel -> no_grad;
binarize_attention_parallel -> numpy;
binarize_attention_parallel -> b_mas;
binarize_attention_parallel -> from_numpy;
binarize_attention_parallel -> cpu;
binarize_attention_parallel -> log;
regulate_len -> long;
regulate_len -> sum;
regulate_len -> max;
regulate_len -> to;
regulate_len -> matmul;
regulate_len -> float;
regulate_len -> index_put_;
regulate_len -> cumsum;
regulate_len -> clamp_max;
regulate_len -> floor;
regulate_len -> pad;
regulate_len -> div;
regulate_len -> arange;
plot_pitch_to_numpy -> subplots;
plot_pitch_to_numpy -> plot;
plot_pitch_to_numpy -> xlabel;
plot_pitch_to_numpy -> ylabel;
plot_pitch_to_numpy -> tight_layout;
plot_pitch_to_numpy -> draw;
plot_pitch_to_numpy -> save_figure_to_numpy;
plot_pitch_to_numpy -> close;
plot_pitch_to_numpy -> ylim;
batch_dict -> len;
batch_dict -> to;
batch_dict -> cuda;
batch_dict -> tensor;
batch_dict -> size;
remove_norms -> named_modules;
remove_norms -> to;
remove_norms -> next;
remove_norms -> parameters;
remove_norms -> remove_spectral_norm;
remove_norms -> print;
remove_norms -> remove_weight_norm;
remove_norms -> format;
move_to_correct_device -> to_device_recursive;
move_to_correct_device -> next;
move_to_correct_device -> iter;
move_to_correct_device -> parameters;
to_device_recursive -> isinstance;
to_device_recursive -> to_device_recursive;
to_device_recursive -> to;
to_device_recursive -> items;
normalize_spectrograms -> mask_sequence_tensor;
unnormalize_spectrograms -> mask_sequence_tensor;
generate_zs -> move_to_correct_device;
generate_zs -> randrange;
generate_zs -> random;
generate_zs -> randn;
generate_noise -> rand;
generate_noise -> move_to_correct_device;
pad_spectrograms -> pad;
forward_with_custom_noise -> rearrange;
forward_with_custom_noise -> pad_spectrograms;
forward_with_custom_noise -> generator;
forward_with_custom_noise -> ValueError;
forward_with_custom_noise -> generate_zs;
forward_with_custom_noise -> generate_noise;
forward_with_custom_noise -> normalize_spectrograms;
forward_with_custom_noise -> unnormalize_spectrograms;
forward_with_custom_noise -> style_mapping;
log_illustration -> int;
log_illustration -> clamp;
log_illustration -> item;
log_illustration -> cpu;
log_illustration -> isinstance;
log_illustration -> make_grid;
log_illustration -> add_image;
log_illustration -> flush;
log_illustration -> stack;
log_illustration -> log_image;
log_illustration -> warning;
log_illustration -> flatten;
log_illustration -> str;
log_illustration -> type;
tacotron2_log_to_tb_func -> add_image;
tacotron2_log_to_tb_func -> plot_alignment_to_numpy;
tacotron2_log_to_tb_func -> plot_spectrogram_to_numpy;
tacotron2_log_to_tb_func -> plot_gate_outputs_to_numpy;
tacotron2_log_to_tb_func -> mel;
tacotron2_log_to_tb_func -> exp;
tacotron2_log_to_tb_func -> griffin_lim;
tacotron2_log_to_tb_func -> add_audio;
tacotron2_log_to_tb_func -> numpy;
tacotron2_log_to_tb_func -> dot;
tacotron2_log_to_tb_func -> max;
tacotron2_log_to_tb_func -> cpu;
tacotron2_log_to_tb_func -> abs;
tacotron2_log_to_tb_func -> sigmoid;
tacotron2_log_to_wandb_func -> log;
tacotron2_log_to_wandb_func -> Image;
tacotron2_log_to_wandb_func -> mel;
tacotron2_log_to_wandb_func -> exp;
tacotron2_log_to_wandb_func -> griffin_lim;
tacotron2_log_to_wandb_func -> plot_alignment_to_numpy;
tacotron2_log_to_wandb_func -> plot_spectrogram_to_numpy;
tacotron2_log_to_wandb_func -> plot_gate_outputs_to_numpy;
tacotron2_log_to_wandb_func -> numpy;
tacotron2_log_to_wandb_func -> dot;
tacotron2_log_to_wandb_func -> Audio;
tacotron2_log_to_wandb_func -> cpu;
tacotron2_log_to_wandb_func -> max;
tacotron2_log_to_wandb_func -> abs;
tacotron2_log_to_wandb_func -> sigmoid;
convert_mel_spectrogram_to_linear -> tensordot;
convert_mel_spectrogram_to_linear -> permute;
griffin_lim -> exp;
griffin_lim -> istft;
griffin_lim -> range;
griffin_lim -> all;
griffin_lim -> warning;
griffin_lim -> array;
griffin_lim -> magphase;
griffin_lim -> rand;
griffin_lim -> stft;
griffin_lim -> isfinite;
slice_segments -> zeros_like;
slice_segments -> range;
slice_segments -> size;
slice_segments -> pad;
clip_grad_value_ -> isinstance;
clip_grad_value_ -> list;
clip_grad_value_ -> float;
clip_grad_value_ -> filter;
clip_grad_value_ -> norm;
clip_grad_value_ -> item;
clip_grad_value_ -> clamp_;
convert_text_to_waveform -> typecheck;
convert_text_to_waveform -> squeeze;
convert_text_to_waveform -> NeuralType;
convert_text_to_waveform -> self;
convert_text_to_waveform -> TokenIndex;
convert_text_to_waveform -> AudioSignal;
remove_weightnorm -> remove_weight_norm;
remove_weightnorm -> remove;
waveglow_log_to_tb_func -> add_image;
waveglow_log_to_tb_func -> numpy;
waveglow_log_to_tb_func -> plot_spectrogram_to_numpy;
waveglow_log_to_tb_func -> magphase;
waveglow_log_to_tb_func -> squeeze;
waveglow_log_to_tb_func -> log;
waveglow_log_to_tb_func -> stft;
waveglow_log_to_tb_func -> clip;
waveglow_log_to_tb_func -> cpu;
waveglow_log_to_tb_func -> nan_to_num;
waveglow_log_to_tb_func -> matmul;
waveglow_log_to_tb_func -> detach;
build_virtual_prompt_tarred_dataset -> T5SpeechLMTarredDataset;
build_virtual_prompt_tarred_dataset -> get_data_parallel_rank;
build_virtual_prompt_tarred_dataset -> get_data_parallel_world_size;
build_virtual_prompt_tarred_dataset -> DataLoader;
build_virtual_prompt_tarred_dataset -> info;
build_virtual_prompt_tarred_dataset -> get;
build_virtual_prompt_tarred_dataset -> len;
decode_wav_from_codec_model -> cuda;
decode_wav_from_codec_model -> decode;
decode_wav_from_codec_model -> NotImplementedError;
decode_wav_from_codec_model -> long;
decode_wav_from_codec_model -> unsqueeze;
decode_wav_from_codec_model -> zeros;
decode_wav_from_codec_model -> Tensor;
get_embeddings_and_combine -> cat;
get_embeddings_and_combine -> append;
get_embeddings_and_combine -> get_embeddings;
convert_tokens_to_range -> clone;
convert_tokens_to_range -> clamp;
convert_tokens_to_range -> get;
convert_tokens_to_range -> range;
convert_tokens_to_range -> stack;
convert_tokens_to_range -> append;
plot_alignment_to_numpy_for_speechllm -> clip;
plot_alignment_to_numpy_for_speechllm -> subplots;
plot_alignment_to_numpy_for_speechllm -> imshow;
plot_alignment_to_numpy_for_speechllm -> set_title;
plot_alignment_to_numpy_for_speechllm -> colorbar;
plot_alignment_to_numpy_for_speechllm -> xlabel;
plot_alignment_to_numpy_for_speechllm -> ylabel;
plot_alignment_to_numpy_for_speechllm -> tight_layout;
plot_alignment_to_numpy_for_speechllm -> draw;
plot_alignment_to_numpy_for_speechllm -> save_figure_to_numpy;
plot_alignment_to_numpy_for_speechllm -> close;
plot_alignment_to_numpy_for_speechllm -> set_yticks;
plot_alignment_to_numpy_for_speechllm -> set_yticklabels;
plot_alignment_to_numpy_for_speechllm -> hlines;
plot_alignment_to_numpy_for_speechllm -> arange;
plot_alignment_to_numpy_for_speechllm -> get_yticks;
plot_alignment_to_numpy_for_speechllm -> len;
plot_alignment_to_numpy_for_speechllm -> max;
plot_alignment_to_numpy_for_speechllm -> append;
plot_alignment_to_numpy_for_speechllm -> get_xticks;
plot_alignment_to_numpy_for_speechllm -> set_xticklabels;
plot_codec_to_numpy -> subplots;
plot_codec_to_numpy -> heatmap;
plot_codec_to_numpy -> tight_layout;
plot_codec_to_numpy -> draw;
plot_codec_to_numpy -> save_figure_to_numpy;
plot_codec_to_numpy -> close;
_apply_mask -> rearrange;
_apply_mask -> masked_fill_;
get_euclidean_dist -> rearrange;
get_euclidean_dist -> sum;
get_cosine_dist -> rearrange;
get_cosine_dist -> cosine_similarity;
get_mean_dist_by_durations -> size;
get_mean_dist_by_durations -> all;
get_mean_dist_by_durations -> _apply_mask;
get_mean_dist_by_durations -> range;
get_mean_dist_by_durations -> tensor;
get_mean_dist_by_durations -> eq;
get_mean_dist_by_durations -> append;
get_mean_dist_by_durations -> sum;
get_mean_dist_by_durations -> mean;
get_mean_dist_by_durations -> arange;
get_mean_dist_by_durations -> repeat_interleave;
get_attribute_prediction_model -> DAP;
get_attribute_prediction_model -> Exception;
get_attribute_prediction_model -> format;
get_padding_2d -> get_padding;
get_padding -> int;
zero_mean_unit_var_norm -> sqrt;
zero_mean_unit_var_norm -> unsqueeze;
zero_mean_unit_var_norm -> mean;
zero_mean_unit_var_norm -> var;
load_fsspec -> isdir;
load_fsspec -> isfile;
load_fsspec -> load;
load_fsspec -> error;
load_fsspec -> ModuleNotFoundError;
load_fsspec -> open;
ssl_model -> fixture;
ssl_model -> DictConfig;
ssl_model -> SpeechEncDecSelfSupervisedModel;
ssl_model -> dict;
create_layer -> append;
create_layer -> range;
create_layer -> Sequential;
create_layer -> block;
create_layer -> Conv2d;
create_layer -> BatchNorm2d;
_init_layers -> modules;
_init_layers -> isinstance;
_init_layers -> kaiming_normal_;
_init_layers -> constant_;
get_torch_mel_spectrogram_class -> Sequential;
get_torch_mel_spectrogram_class -> PreEmphasis;
get_torch_mel_spectrogram_class -> MelSpectrogram;
new_parameter -> Parameter;
new_parameter -> xavier_normal_;
new_parameter -> FloatTensor;
_get_extra_padding_for_conv1d -> to;
_get_extra_padding_for_conv1d -> ceil;
_pad1d -> max;
_pad1d -> pad;
compute_stft -> stft;
compute_stft -> rearrange;
compute_stft -> stack;
codebook_size -> item;
codebook_size -> prod;
codes -> arange;
codes -> rearrange;
codes -> decode;
codes -> squeeze;
compress -> where;
compress -> tan;
compress -> tanh;
inputs_to_codes -> typecheck;
inputs_to_codes -> compress;
inputs_to_codes -> round;
inputs_to_codes -> NeuralType;
inputs_to_codes -> EncodedRepresentation;
inputs_to_codes -> tuple;
inputs_to_codes -> LengthsType;
inputs_to_codes -> Index;
validate_mel_bands -> zeros;
validate_mel_bands -> all;
validate_mel_bands -> where;
validate_mel_bands -> ValueError;
fused_add_tanh_sigmoid_multiply -> tanh;
fused_add_tanh_sigmoid_multiply -> sigmoid;
get_radtts_encoder -> ConvLSTMLinear;
lstm_sorted -> pack_padded_sequence;
lstm_sorted -> bilstm;
lstm_sorted -> cpu;
lstm_sorted -> pad_packed_sequence;
lstm_sorted -> long;
sort_tensor -> sort;
sort_tensor -> index_select;
unsort_tensor -> index_select;
unsort_tensor -> argsort;
lstm_nocast -> autocast;
lstm_nocast -> to;
lstm_nocast -> new_zeros;
lstm_nocast -> lstm;
get_scaling_and_logs -> exp;
get_scaling_and_logs -> log;
get_scaling_and_logs -> isinstance;
get_scaling_and_logs -> tanh;
get_scaling_and_logs -> sigmoid;
get_scaling_and_logs -> range;
get_scaling_and_logs -> cat;
get_scaling_and_logs -> ValueError;
get_scaling_and_logs -> append;
_ema_inplace -> add_;
_ema_inplace -> mul_;
_laplace_smoothing -> sum;
_compute_distances -> rearrange;
_compute_distances -> sum;
_compute_distances -> pow;
_sample_vectors -> randint;
_sample_vectors -> randperm;
_k_means -> _sample_vectors;
_k_means -> range;
_k_means -> _compute_distances;
_k_means -> repeat;
_k_means -> bincount;
_k_means -> rearrange;
_k_means -> new_zeros;
_k_means -> scatter_add_;
_k_means -> where;
_k_means -> min;
_k_means -> clamp;
_mask_3d -> type_as;
_mask_3d -> rearrange;
_mask_3d -> cumsum;
_mask_3d -> ones;
_init_codes -> _k_means;
_init_codes -> copy_;
_init_codes -> broadcast_tensors;
_init_codes -> clone;
_init_codes -> Tensor;
_init_codes -> buffers;
_expire_codes -> _sample_vectors;
_expire_codes -> rearrange;
_expire_codes -> where;
_expire_codes -> copy_;
_expire_codes -> broadcast_tensors;
_expire_codes -> any;
_expire_codes -> buffers;
_update_codes -> type;
_update_codes -> rearrange;
_update_codes -> sum;
_update_codes -> _ema_inplace;
_update_codes -> _laplace_smoothing;
_update_codes -> copy_;
_update_codes -> one_hot;
_quantize -> _compute_distances;
_quantize -> min;
_dequantize -> embedding;
num_codebooks_per_group -> ValueError;
codebook_dim_per_group -> ValueError;
log_to_duration -> clamp;
log_to_duration -> squeeze;
log_to_duration -> exp;
create_channel_mix_layer -> SameLensMaskedLinear;
create_time_mix_layer -> get_same_padding;
create_time_mix_layer -> SameLensMaskedConv1d;
pad_dur -> pad;
pad_energy_avg_and_f0 -> int;
pad_energy_avg_and_f0 -> pad;
adjust_f0 -> std_mean;
adjust_f0 -> to;
adjust_f0 -> masked_fill;
adjust_f0 -> mean;
adjust_f0 -> std;
encode_speaker -> speaker_embedding;
encode_text -> transpose;
encode_text -> embedding;
encode_text -> encoder;
preprocess_context -> expand;
preprocess_context -> cat;
preprocess_context -> unfold;
preprocess_context -> context_lstm;
preprocess_context -> transpose;
mas_width1 -> jit;
mas_width1 -> type;
mas_width1 -> copy;
mas_width1 -> range;
mas_width1 -> zeros_like;
mas_width1 -> max;
get_first_order_features -> cat;
get_first_order_features -> zeros_like;
apply_voice_mask_to_text -> unsqueeze;
apply_voice_mask_to_text -> sigmoid;
apply_voice_mask_to_text -> tanh;
infer_f0 -> infer;
infer_f0 -> masked_fill_;
infer_f0 -> to;
infer_f0 -> len;
infer_f0 -> exp;
infer_energy -> infer;
add_scaled_condition -> interpolate;
add_scaled_condition -> mask_sequence_tensor;
add_scaled_condition -> long;
add_scaled_condition -> ceil;
upsample_factor -> sum;
check_support_condition_types -> ValueError;
masked_instance_norm -> sum;
masked_instance_norm -> sqrt;
get_alignment_energies -> query_layer;
get_alignment_energies -> location_layer;
get_alignment_energies -> v;
get_alignment_energies -> squeeze;
get_alignment_energies -> unsqueeze;
get_alignment_energies -> tanh;
init_parameters -> constant_;
calculate_post_conv_lengths -> range;
lengths_to_masks -> expand;
lengths_to_masks -> unsqueeze;
lengths_to_masks -> max;
lengths_to_masks -> to;
lengths_to_masks -> arange;
overwrite_precomputed_emb -> Parameter;
train_forward -> unsqueeze;
train_forward -> parse_decoder_inputs;
train_forward -> cat;
train_forward -> prenet;
train_forward -> initialize_decoder_states;
train_forward -> parse_decoder_outputs;
train_forward -> len;
train_forward -> decode;
train_forward -> get_go_frame;
train_forward -> size;
train_forward -> squeeze;
train_forward -> get_mask_from_lengths;
train_forward -> typecheck;
train_forward -> NeuralType;
train_forward -> ElementType;
get_go_frame -> size;
get_go_frame -> Variable;
get_go_frame -> zero_;
get_go_frame -> new;
initialize_decoder_states -> size;
initialize_decoder_states -> Variable;
initialize_decoder_states -> memory_layer;
initialize_decoder_states -> zero_;
initialize_decoder_states -> new;
parse_decoder_inputs -> transpose;
parse_decoder_inputs -> view;
parse_decoder_inputs -> size;
parse_decoder_inputs -> int;
parse_decoder_outputs -> transpose;
parse_decoder_outputs -> contiguous;
parse_decoder_outputs -> view;
parse_decoder_outputs -> size;
parse_decoder_outputs -> stack;
parse_decoder_outputs -> squeeze;
attn_naive -> compute_qkv_and_mask;
attn_naive -> transpose;
attn_naive -> dropout;
attn_naive -> matmul;
attn_naive -> view;
attn_naive -> masked_fill_;
attn_naive -> log;
attn_naive -> repeat;
attn_naive -> softmax;
attn_naive -> masked_fill;
attn_naive -> float;
attn_naive -> log_softmax;
attn_naive -> contiguous;
compute_qkv_and_mask -> reshape;
compute_qkv_and_mask -> chunk;
compute_qkv_and_mask -> squeeze;
compute_qkv_and_mask -> qkv_net;
compute_qkv_and_mask -> cat;
compute_qkv_and_mask -> q_net;
compute_qkv_and_mask -> kv_net;
_init_weights_gpt2 -> isinstance;
_init_weights_gpt2 -> normal_;
_init_weights_gpt2 -> zeros_;
location_variable_convolution -> pad;
location_variable_convolution -> unfold;
location_variable_convolution -> transpose;
location_variable_convolution -> einsum;
location_variable_convolution -> to;
location_variable_convolution -> view;
location_variable_convolution -> int;
location_variable_convolution -> unsqueeze;
location_variable_convolution -> contiguous;
piecewise_rational_quadratic_transform -> spline_fn;
rand_slice_segments -> size;
rand_slice_segments -> to;
rand_slice_segments -> slice_segments;
rand_slice_segments -> rand;
maximum_path -> astype;
maximum_path -> zeros;
maximum_path -> maximum_path_c;
maximum_path -> to;
maximum_path -> numpy;
maximum_path -> from_numpy;
maximum_path -> cpu;
maximum_path -> sum;
generate_path -> cumsum;
generate_path -> view;
generate_path -> to;
generate_path -> transpose;
generate_path -> get_mask_from_lengths;
generate_path -> pad;
generate_path -> reshape;
generate_path -> convert_pad_shape;
generate_path -> unsqueeze;
generate_path -> Tensor;
voice_conversion -> unsqueeze;
voice_conversion -> enc_q;
voice_conversion -> flow;
voice_conversion -> dec;
voice_conversion -> emb_g;
_get_relative_embeddings -> max;
_get_relative_embeddings -> pad;
_get_relative_embeddings -> convert_pad_shape;
_matmul_with_relative_keys -> matmul;
_matmul_with_relative_keys -> transpose;
_matmul_with_relative_keys -> unsqueeze;
_relative_position_to_absolute_position -> size;
_relative_position_to_absolute_position -> pad;
_relative_position_to_absolute_position -> view;
_relative_position_to_absolute_position -> convert_pad_shape;
_absolute_position_to_relative_position -> size;
_absolute_position_to_relative_position -> pad;
_absolute_position_to_relative_position -> view;
_absolute_position_to_relative_position -> convert_pad_shape;
_matmul_with_relative_values -> matmul;
_matmul_with_relative_values -> unsqueeze;
_attention_bias_proximal -> arange;
_attention_bias_proximal -> unsqueeze;
_attention_bias_proximal -> log1p;
_attention_bias_proximal -> abs;
_causal_padding -> pad;
_causal_padding -> convert_pad_shape;
_same_padding -> pad;
_same_padding -> convert_pad_shape;
norm_dist_to_audio -> upsample;
norm_dist_to_audio -> view;
norm_dist_to_audio -> permute;
norm_dist_to_audio -> Size;
norm_dist_to_audio -> split;
norm_dist_to_audio -> reversed;
norm_dist_to_audio -> size;
norm_dist_to_audio -> range;
norm_dist_to_audio -> cat;
norm_dist_to_audio -> contiguous;
norm_dist_to_audio -> split_view;
norm_dist_to_audio -> to;
norm_dist_to_audio -> exp;
norm_dist_to_audio -> randn;
audio_to_normal_dist -> upsample;
audio_to_normal_dist -> permute;
audio_to_normal_dist -> view;
audio_to_normal_dist -> range;
audio_to_normal_dist -> append;
audio_to_normal_dist -> size;
audio_to_normal_dist -> int;
audio_to_normal_dist -> cat;
audio_to_normal_dist -> split_view;
audio_to_normal_dist -> contiguous;
audio_to_normal_dist -> exp;
split_view -> reshape;
split_view -> reverse;
split_view -> pad;
split_view -> len;
maximum_path_c -> jit;
maximum_path_c -> prange;
maximum_path_c -> maximum_path_each;
maximum_path_each -> jit;
maximum_path_each -> range;
maximum_path_each -> max;
maximum_path_each -> min;
adapter_module_names -> extend;
adapter_module_names -> super;
get_start_and_end_of_speech_frames -> range;
get_start_and_end_of_speech_frames -> all;
get_start_and_end_of_speech_frames -> warning;
pad_sample_indices -> int;
pad_sample_indices -> max;
pad_sample_indices -> min;
trim_audio -> _signal_to_frame_nonsilent;
trim_audio -> get_start_and_end_of_speech_frames;
trim_audio -> frames_to_samples;
trim_audio -> pad_sample_indices;
trim_audio -> normalize_volume;
trim_audio -> array;
trim_audio -> _detect_speech;
trim_audio -> resample;
trim_audio -> _scale_sample_indices;
normalize_volume -> max;
normalize_volume -> ValueError;
normalize_volume -> abs;
_detect_speech -> transpose;
_detect_speech -> tensor;
_detect_speech -> vad_model;
_detect_speech -> softmax;
_detect_speech -> numpy;
_detect_speech -> array;
_detect_speech -> frame;
_detect_speech -> cpu;
_detect_speech -> detach;
_scale_sample_indices -> int;
_get_feature_filepath -> get_audio_filepaths;
_get_feature_filepath -> with_suffix;
get_audio_filepaths -> Path;
get_audio_filepaths -> get_abs_rel_paths;
_features_exists -> _get_feature_filepath;
_features_exists -> exists;
_save_feature -> _get_feature_filepath;
_save_feature -> mkdir;
_save_feature -> save;
_save_feature -> str;
_load_feature -> _get_feature_filepath;
_load_feature -> str;
_load_feature -> from_numpy;
_load_feature -> load;
_load_feature -> copy;
_get_frame_indices -> time_to_frames;
_collate_feature -> max;
_collate_feature -> stack_tensors;
_collate_feature -> append;
compute_mel_spec -> get_audio_filepaths;
compute_mel_spec -> load;
compute_mel_spec -> tensor;
compute_mel_spec -> preprocessor;
compute_mel_spec -> numpy;
compute_mel_spec -> normalize_volume;
compute_mel_spec -> detach;
compute_energy -> compute_mel_spec;
compute_energy -> norm;
compute_pitch -> get_audio_filepaths;
compute_pitch -> load;
compute_pitch -> astype;
compute_pitch -> normalize_volume;
compute_pitch -> pyin;
compute_pitch -> int;
compute_pitch -> range;
compute_pitch -> concatenate;
compute_pitch -> ceil;
compute_pitch -> append;
_clamp_guard -> clamp;
_load_vocoder -> str;
_load_vocoder -> eval;
_load_vocoder -> from_pretrained;
_load_vocoder -> endswith;
_load_vocoder -> ValueError;
_load_vocoder -> restore_from;
_load_vocoder -> load_from_checkpoint;
create_id -> str;
create_id -> replace;
create_id -> with_suffix;
_log_image -> create_plot;
_log_image -> mkdir;
_log_image -> add_image;
_log_image -> log;
_log_image -> Image;
create_plot -> subplots;
create_plot -> imshow;
create_plot -> colorbar;
create_plot -> xlabel;
create_plot -> ylabel;
create_plot -> tight_layout;
create_plot -> draw;
create_plot -> save_figure_to_numpy;
create_plot -> close;
create_plot -> savefig;
_log_artifacts -> mkdir;
_log_artifacts -> _log_audio;
_log_artifacts -> _log_image;
generate_artifacts -> get;
generate_artifacts -> audio_to_melspec_precessor;
generate_artifacts -> enumerate;
generate_artifacts -> create_id;
generate_artifacts -> no_grad;
generate_artifacts -> forward;
generate_artifacts -> rearrange;
generate_artifacts -> zip;
generate_artifacts -> Path;
generate_artifacts -> numpy;
generate_artifacts -> AudioArtifact;
generate_artifacts -> append;
generate_artifacts -> cpu;
generate_artifacts -> _generate_audio;
generate_artifacts -> _generate_images;
generate_artifacts -> _create_ground_truth_artifacts;
generate_artifacts -> _generate_predictions;
generate_artifacts -> _generate_gta_predictions;
_generate_audio -> enumerate;
_generate_audio -> no_grad;
_generate_audio -> model;
_generate_audio -> zip;
_generate_audio -> Path;
_generate_audio -> numpy;
_generate_audio -> AudioArtifact;
_generate_audio -> append;
_generate_audio -> cpu;
_generate_audio -> to;
_generate_audio -> frames_to_samples;
_generate_audio -> convert_spectrogram_to_audio;
_generate_images -> enumerate;
_generate_images -> no_grad;
_generate_images -> encode_audio;
_generate_images -> quantize;
_generate_images -> dequantize;
_generate_images -> zip;
_generate_images -> Path;
_generate_images -> numpy;
_generate_images -> ImageArtifact;
_generate_images -> append;
_generate_images -> cpu;
_create_ground_truth_artifacts -> get;
_create_ground_truth_artifacts -> preprocessor;
_create_ground_truth_artifacts -> enumerate;
_create_ground_truth_artifacts -> zip;
_create_ground_truth_artifacts -> Path;
_create_ground_truth_artifacts -> numpy;
_create_ground_truth_artifacts -> AudioArtifact;
_create_ground_truth_artifacts -> append;
_create_ground_truth_artifacts -> ImageArtifact;
_create_ground_truth_artifacts -> cpu;
_generate_gta_predictions -> get;
_generate_gta_predictions -> preprocessor;
_generate_gta_predictions -> no_grad;
_generate_gta_predictions -> forward;
_generate_gta_predictions -> rearrange;
_generate_gta_predictions -> enumerate;
_generate_gta_predictions -> _generate_audio;
_generate_gta_predictions -> zip;
_generate_gta_predictions -> Path;
_generate_gta_predictions -> numpy;
_generate_gta_predictions -> ImageArtifact;
_generate_gta_predictions -> append;
_generate_gta_predictions -> AudioArtifact;
_generate_gta_predictions -> cpu;
_is_distributed -> is_initialized;
_is_distributed -> get_world_size;
_is_complex_or_float -> is_floating_point;
_is_complex_or_float -> is_complex;
mas -> jit;
mas -> zeros_like;
mas -> log;
mas -> range;
mas -> all;
mas -> arange;
mas -> array;
mas -> argmax;
mas -> sum;
mas -> max;
b_mas -> jit;
b_mas -> zeros_like;
b_mas -> prange;
b_mas -> mas_width1;
log_audio_to_tb -> mel;
log_audio_to_tb -> exp;
log_audio_to_tb -> griffin_lim;
log_audio_to_tb -> add_audio;
log_audio_to_tb -> numpy;
log_audio_to_tb -> dot;
log_audio_to_tb -> max;
log_audio_to_tb -> cpu;
log_audio_to_tb -> abs;
plot_gate_outputs_to_numpy -> subplots;
plot_gate_outputs_to_numpy -> scatter;
plot_gate_outputs_to_numpy -> xlabel;
plot_gate_outputs_to_numpy -> ylabel;
plot_gate_outputs_to_numpy -> tight_layout;
plot_gate_outputs_to_numpy -> draw;
plot_gate_outputs_to_numpy -> save_figure_to_numpy;
plot_gate_outputs_to_numpy -> close;
plot_gate_outputs_to_numpy -> range;
plot_gate_outputs_to_numpy -> len;
save_figure_to_numpy -> array;
save_figure_to_numpy -> buffer_rgba;
deprecated -> wrapper;
deprecated -> partial;
deprecated -> wrapped;
deprecated -> keys;
deprecated -> warning;
deprecated -> isclass;
deprecated -> sleep;
rank_zero_only -> wraps;
rank_zero_only -> error;
rank_zero_only -> exit;
wrapped_fn -> wraps;
wrapped_fn -> error;
wrapped_fn -> exit;
piecewise_linear_transform -> Softmax;
piecewise_linear_transform -> to;
piecewise_linear_transform -> squeeze;
piecewise_linear_transform -> roll;
piecewise_linear_transform -> clamp;
piecewise_linear_transform -> float;
piecewise_linear_transform -> third_dimension_softmax;
piecewise_linear_transform -> item;
piecewise_linear_transform -> any;
piecewise_linear_transform -> AvertedCUDARuntimeError;
piecewise_linear_transform -> finfo;
piecewise_linear_transform -> sum;
piecewise_linear_transform -> gather;
piecewise_linear_transform -> cumsum;
piecewise_linear_transform -> detach;
piecewise_linear_transform -> log;
piecewise_linear_transform -> floor;
piecewise_linear_transform -> unsqueeze;
piecewise_linear_transform -> isnan;
piecewise_linear_transform -> logical_or;
piecewise_linear_inverse_transform -> Softmax;
piecewise_linear_inverse_transform -> roll;
piecewise_linear_inverse_transform -> detach;
piecewise_linear_inverse_transform -> to;
piecewise_linear_inverse_transform -> squeeze;
piecewise_linear_inverse_transform -> clamp;
piecewise_linear_inverse_transform -> float;
piecewise_linear_inverse_transform -> third_dimension_softmax;
piecewise_linear_inverse_transform -> item;
piecewise_linear_inverse_transform -> any;
piecewise_linear_inverse_transform -> AvertedCUDARuntimeError;
piecewise_linear_inverse_transform -> finfo;
piecewise_linear_inverse_transform -> cumsum;
piecewise_linear_inverse_transform -> gather;
piecewise_linear_inverse_transform -> sum;
piecewise_linear_inverse_transform -> unsqueeze;
piecewise_linear_inverse_transform -> argmin;
piecewise_linear_inverse_transform -> log;
piecewise_linear_inverse_transform -> isnan;
piecewise_linear_inverse_transform -> logical_or;
unbounded_piecewise_quadratic_transform -> zeros_like;
unbounded_piecewise_quadratic_transform -> piecewise_quadratic_transform;
piecewise_quadratic_transform -> softmax;
piecewise_quadratic_transform -> weighted_softmax;
piecewise_quadratic_transform -> cumsum;
piecewise_quadratic_transform -> pad;
piecewise_quadratic_transform -> squeeze;
piecewise_quadratic_transform -> searchsorted;
piecewise_quadratic_transform -> log;
piecewise_quadratic_transform -> clamp;
piecewise_quadratic_transform -> unsqueeze;
piecewise_quadratic_transform -> gather;
piecewise_quadratic_transform -> sqrt;
piecewise_quadratic_transform -> finfo;
piecewise_quadratic_transform -> lerp;
weighted_softmax -> sum;
weighted_softmax -> exp;
weighted_softmax -> max;
unconstrained_rational_quadratic_spline -> zeros_like;
unconstrained_rational_quadratic_spline -> rational_quadratic_spline;
unconstrained_rational_quadratic_spline -> pad;
unconstrained_rational_quadratic_spline -> log;
unconstrained_rational_quadratic_spline -> RuntimeError;
unconstrained_rational_quadratic_spline -> format;
unconstrained_rational_quadratic_spline -> exp;
rational_quadratic_spline -> softmax;
rational_quadratic_spline -> cumsum;
rational_quadratic_spline -> pad;
rational_quadratic_spline -> ValueError;
rational_quadratic_spline -> softplus;
rational_quadratic_spline -> gather;
rational_quadratic_spline -> all;
rational_quadratic_spline -> min;
rational_quadratic_spline -> max;
rational_quadratic_spline -> searchsorted;
rational_quadratic_spline -> pow;
rational_quadratic_spline -> log;
rational_quadratic_spline -> sqrt;
get_abs_rel_paths -> isabs;
get_abs_rel_paths -> relative_to;
logbeta -> gammaln;
logcombinations -> gammaln;
logbetabinom -> logbeta;
logbetabinom -> logcombinations;
common_path -> is_relative_to;
_segment_audio -> range;
_segment_audio -> ValueError;
_segment_audio -> segment_from_file;
_segment_audio -> uniform;
_segment_audio -> print_exc;
rotate_with_fill -> rotate;
rotate_with_fill -> composite;
rotate_with_fill -> convert;
rotate_with_fill -> new;
set_epoch -> set_value;
has_file_allowed_extension -> endswith;
has_file_allowed_extension -> lower;
is_image_file -> has_file_allowed_extension;
is_valid_file -> has_file_allowed_extension;
is_valid_file -> cast;
accimage_loader -> Image;
accimage_loader -> pil_loader;
default_loader -> get_image_backend;
default_loader -> accimage_loader;
default_loader -> pil_loader;
_find_classes -> sort;
_find_classes -> scandir;
_find_classes -> is_dir;
_find_classes -> int;
_find_classes -> enumerate;
_find_classes -> len;
_to_torch_data_type -> ValueError;
gen_mask -> zeros;
gen_mask -> randint;
gen_mask -> range;
gen_mask -> reversed;
gen_mask -> clamp;
gen_mask -> len;
isPerfectSquare -> sqrt;
isPerfectSquare -> int;
twod_interpolate_position_embeddings_hook -> get;
twod_interpolate_position_embeddings_hook -> keys;
twod_interpolate_position_embeddings_hook -> isPerfectSquare;
twod_interpolate_position_embeddings_hook -> zeros;
twod_interpolate_position_embeddings_hook -> int;
twod_interpolate_position_embeddings_hook -> contiguous;
twod_interpolate_position_embeddings_hook -> reshape;
twod_interpolate_position_embeddings_hook -> float;
twod_interpolate_position_embeddings_hook -> interpolate;
twod_interpolate_position_embeddings_hook -> half;
twod_interpolate_position_embeddings_hook -> cat;
twod_interpolate_position_embeddings_hook -> sqrt;
twod_interpolate_position_embeddings_hook -> transpose;
interpolate_pos_encoding -> isPerfectSquare;
interpolate_pos_encoding -> int;
interpolate_pos_encoding -> contiguous;
interpolate_pos_encoding -> reshape;
interpolate_pos_encoding -> float;
interpolate_pos_encoding -> interpolate;
interpolate_pos_encoding -> cat;
interpolate_pos_encoding -> sqrt;
interpolate_pos_encoding -> transpose;
get_layer_spec -> get_mlp_module_spec;
get_layer_spec -> ModuleSpec;
get_layer_spec -> RuntimeError;
get_layer_spec -> TransformerLayerSubmodules;
get_layer_spec -> SelfAttentionSubmodules;
get_mlp_module_spec -> ModuleSpec;
get_mlp_module_spec -> MLPSubmodules;
get_layer_spec_te -> get_norm_mlp_module_spec_te;
get_layer_spec_te -> ModuleSpec;
get_layer_spec_te -> TransformerLayerSubmodules;
get_layer_spec_te -> SelfAttentionSubmodules;
get_norm_mlp_module_spec_te -> ModuleSpec;
get_norm_mlp_module_spec_te -> MLPSubmodules;
cook_raw_iamges -> dict;
cook_raw_iamges -> info;
cook_raw_iamges -> basic_sample_keys;
clip_forward_step -> model;
clip_data_step -> next;
clip_data_step -> isinstance;
clip_data_step -> squeeze;
clip_data_step -> len;
clip_data_step -> cuda;
clip_data_step -> items;
import_qkv -> size;
import_qkv -> view;
import_qkv -> range;
import_qkv -> cat;
import_qkv -> reshape;
import_qkv -> append;
_import_vision_qkv -> state_transform;
_import_vision_qkv -> import_qkv;
_import_vision_qkv -> _merge_qkv;
_import_vision_qkv -> int;
_import_vision_qkv_bias -> state_transform;
_import_vision_qkv_bias -> squeeze;
_import_vision_qkv_bias -> import_qkv;
_import_vision_qkv_bias -> unsqueeze;
_import_vision_qkv_bias -> int;
_import_language_qkv_bias -> state_transform;
_import_language_qkv_bias -> squeeze;
_import_language_qkv_bias -> import_qkv;
_import_language_qkv_bias -> unsqueeze;
_import_language_qkv -> state_transform;
_import_language_qkv -> import_qkv;
_import_cls_token -> state_transform;
_import_cls_token -> reshape;
encode_vqa_sample -> min;
encode_vqa_sample -> range;
encode_vqa_sample -> apply_chat_template;
encode_vqa_sample -> split;
encode_vqa_sample -> tensor;
encode_vqa_sample -> contiguous;
encode_vqa_sample -> predict_seq_len;
encode_vqa_sample -> ones_like;
encode_vqa_sample -> unsqueeze;
encode_vqa_sample -> DataSample;
encode_vqa_sample -> append;
encode_vqa_sample -> isinstance;
encode_vqa_sample -> len;
encode_vqa_sample -> replace;
encode_vqa_sample -> _find_pattern_indices;
encode_vqa_sample -> escape;
encode_vqa_sample -> tokenizer;
encode_vqa_sample -> warning;
encode_vqa_sample -> pad;
encode_vqa_sample -> preprocess;
encode_vqa_sample -> extend;
encode_vqa_sample -> hf_processor;
encode_vqa_sample -> squeeze;
encode_vqa_sample -> get;
encode_vqa_sample -> full_like;
encode_vqa_sample -> to;
encode_vqa_sample -> empty;
encode_vqa_sample -> numel;
search_for_fit -> bisect;
predict_seq_len_with_padding -> len;
prepare_image_inputs -> randint;
prepare_image_inputs -> fromarray;
prepare_image_inputs -> moveaxis;
gemma3vl_data_step -> next;
gemma3vl_data_step -> set;
gemma3vl_data_step -> update;
gemma3vl_data_step -> is_pipeline_first_stage;
gemma3vl_data_step -> is_pipeline_last_stage;
gemma3vl_data_step -> isinstance;
gemma3vl_data_step -> len;
gemma3vl_data_step -> cuda;
gemma3vl_data_step -> items;
gemma3vl_forward_step -> model;
gemma3vl_forward_step -> get;
gemma3vl_forward_step -> get_packed_seq_params;
restore_model_weights -> dict;
restore_model_weights -> load;
restore_model_weights -> load_state_dict;
restore_model_weights -> removeprefix;
restore_model_weights -> sharded_state_dict;
restore_model_weights -> ckpt_to_weights_subdir;
restore_model_weights -> items;
_preprocess_data -> _compute_attention_mask;
_preprocess_data -> expand_as;
_preprocess_data -> view;
_preprocess_data -> masked_scatter;
_preprocess_data -> unsqueeze;
_preprocess_data -> no_grad;
_preprocess_data -> sum;
_preprocess_data -> split;
_preprocess_data -> tensor;
_preprocess_data -> max;
_preprocess_data -> _get_shard_factor;
_preprocess_data -> where;
_preprocess_data -> clone;
_preprocess_data -> full;
_preprocess_data -> zeros;
_preprocess_data -> contiguous;
_preprocess_data -> arange;
_preprocess_data -> tolist;
_preprocess_data -> cumsum;
_preprocess_data -> len;
_preprocess_data -> get_tensor_model_parallel_world_size;
_preprocess_data -> int;
_preprocess_data -> repeat;
_preprocess_data -> reshape;
_preprocess_data -> transpose;
_preprocess_data -> permute;
_preprocess_data -> item;
_preprocess_data -> to;
_preprocess_data -> scatter_to_sequence_parallel_region;
_preprocess_data -> ValueError;
_process_sequence_parallel -> dict;
_process_sequence_parallel -> contiguous;
_process_sequence_parallel -> get_batch_on_this_cp_rank;
_process_sequence_parallel -> size;
_process_sequence_parallel -> rank;
_process_sequence_parallel -> items;
_process_sequence_parallel -> scatter_to_sequence_parallel_region;
_process_sequence_parallel -> thd_get_partitioned_indices;
_process_sequence_parallel -> index_select;
_process_sequence_parallel -> transpose;
_compute_attention_mask -> to;
_compute_attention_mask -> pad;
_compute_attention_mask -> cumsum;
_compute_attention_mask -> logical_and;
_compute_attention_mask -> logical_or;
_compute_attention_mask -> tril;
_compute_attention_mask -> unsqueeze;
_compute_attention_mask -> ones;
_vision_projector_permute -> permute;
_export_language_qkv -> state_transform;
_export_language_qkv -> export_qkv;
_export_language_qkv -> reshape;
_export_language_qkv -> cat;
_export_language_qkv -> arange;
_export_language_qkv -> cpu;
_export_language_qkv -> range;
export_qkv -> reshape;
export_qkv -> size;
export_qkv -> cat;
export_qkv -> arange;
export_qkv -> cpu;
export_qkv -> range;
_export_vision_qkv -> state_transform;
_export_vision_qkv -> export_qkv;
_export_vision_qkv -> reshape;
_export_vision_qkv -> cat;
_export_vision_qkv -> arange;
_export_vision_qkv -> cpu;
_export_vision_qkv -> range;
_export_vision_qkv -> _split_qkv;
_export_vision_qkv_bias -> state_transform;
_export_vision_qkv_bias -> export_qkv_bias;
_export_vision_qkv_bias -> reshape;
_export_vision_qkv_bias -> cat;
_export_vision_qkv_bias -> arange;
_export_vision_qkv_bias -> cpu;
_export_vision_qkv_bias -> range;
export_qkv_bias -> reshape;
export_qkv_bias -> cat;
export_qkv_bias -> arange;
export_qkv_bias -> cpu;
export_qkv_bias -> range;
mk_hf_vlm_dataset_fineweb_edu -> extract_skipped_token_ids;
mk_hf_vlm_dataset_fineweb_edu -> HFDatasetDataModule;
mk_hf_vlm_dataset_fineweb_edu -> processor;
mk_hf_vlm_dataset_fineweb_edu -> cat;
mk_hf_vlm_dataset_fineweb_edu -> clone;
mk_hf_vlm_dataset_fineweb_edu -> isin;
mk_hf_vlm_dataset_fineweb_edu -> collate_fn;
mk_hf_vlm_dataset_fineweb_edu -> has_dist_env_init_or_rank_env_var;
mk_hf_vlm_dataset_fineweb_edu -> ones_like;
mk_hf_vlm_dataset_rdr -> extract_skipped_token_ids;
mk_hf_vlm_dataset_rdr -> HFDatasetDataModule;
mk_hf_vlm_dataset_rdr -> map;
mk_hf_vlm_dataset_rdr -> processor;
mk_hf_vlm_dataset_rdr -> to;
mk_hf_vlm_dataset_rdr -> cat;
mk_hf_vlm_dataset_rdr -> append;
mk_hf_vlm_dataset_rdr -> clone;
mk_hf_vlm_dataset_rdr -> isin;
mk_hf_vlm_dataset_rdr -> apply_chat_template;
mk_hf_vlm_dataset_rdr -> collate_fn;
mk_hf_vlm_dataset_rdr -> convert;
mk_hf_vlm_dataset_rdr -> ones_like;
json2token -> type;
json2token -> join;
json2token -> str;
json2token -> len;
json2token -> sorted;
json2token -> keys;
json2token -> json2token;
mk_hf_vlm_dataset_cord_v2 -> extract_skipped_token_ids;
mk_hf_vlm_dataset_cord_v2 -> HFDatasetDataModule;
mk_hf_vlm_dataset_cord_v2 -> processor;
mk_hf_vlm_dataset_cord_v2 -> to;
mk_hf_vlm_dataset_cord_v2 -> cat;
mk_hf_vlm_dataset_cord_v2 -> loads;
mk_hf_vlm_dataset_cord_v2 -> choice;
mk_hf_vlm_dataset_cord_v2 -> append;
mk_hf_vlm_dataset_cord_v2 -> apply_chat_template;
mk_hf_vlm_dataset_cord_v2 -> clone;
mk_hf_vlm_dataset_cord_v2 -> isin;
mk_hf_vlm_dataset_cord_v2 -> isinstance;
mk_hf_vlm_dataset_cord_v2 -> train_collate_fn;
mk_hf_vlm_dataset_cord_v2 -> json2token;
mk_hf_vlm_dataset_cord_v2 -> ones_like;
train_collate_fn -> processor;
train_collate_fn -> to;
train_collate_fn -> cat;
train_collate_fn -> loads;
train_collate_fn -> choice;
train_collate_fn -> append;
train_collate_fn -> apply_chat_template;
train_collate_fn -> clone;
train_collate_fn -> isin;
train_collate_fn -> isinstance;
train_collate_fn -> json2token;
train_collate_fn -> ones_like;
fmt -> convert;
fmt -> isinstance;
fmt -> text_to_ids;
fmt -> format;
get_data_sampler -> DistributedSampler;
configure_processor -> from_pretrained;
setup_inference_wrapper -> cuda;
setup_inference_wrapper -> to;
setup_inference_wrapper -> eval;
setup_inference_wrapper -> isinstance;
setup_inference_wrapper -> wrapper_cls;
setup_inference_wrapper -> InferenceWrapperConfig;
setup_inference_wrapper -> ValueError;
prep_inference_input -> cuda;
prep_inference_input -> reshape;
prep_inference_input -> size;
prep_inference_input -> expand_as;
prep_inference_input -> InferenceParams;
prep_inference_input -> unsqueeze;
prep_inference_input -> default_collate;
prep_inference_input -> arange;
prep_inference_input -> max;
prep_inference_input -> pad;
prep_inference_input -> tensor;
prep_inference_input -> list;
prep_inference_input -> prep_inference_input;
prep_inference_input -> map;
prep_inference_input -> values;
forward_pass_without_pipeline_parallel -> model;
forward_pass_without_pipeline_parallel -> gather_from_tensor_model_parallel_region;
forward_pass_without_pipeline_parallel -> size;
forward_pass_without_pipeline_parallel -> create_vision_mask_tensor;
create_vision_mask_tensor -> squeeze;
create_vision_mask_tensor -> reversed;
create_vision_mask_tensor -> tensor;
create_vision_mask_tensor -> numel;
create_vision_mask_tensor -> empty;
create_vision_mask_tensor -> append;
create_vision_mask_tensor -> range;
create_vision_mask_tensor -> nonzero;
create_vision_mask_tensor -> item;
create_vision_mask_tensor -> len;
tokenize_prompt -> tokenize;
tokenize_prompt -> dict;
tokenize_prompt -> preprocess;
tokenize_prompt -> zeros;
tokenize_prompt -> tensor;
tokenize_prompt -> items;
llama4_data_step -> next;
llama4_data_step -> set;
llama4_data_step -> update;
llama4_data_step -> is_pipeline_first_stage;
llama4_data_step -> is_pipeline_last_stage;
llama4_data_step -> get;
llama4_data_step -> isinstance;
llama4_data_step -> get_context_parallel_world_size;
llama4_data_step -> len;
llama4_data_step -> cuda;
llama4_data_step -> items;
llama4_data_step -> getattr;
llama4_data_step -> sum;
llama4_data_step -> setattr;
llama4_forward_step -> model;
llama4_forward_step -> get;
llama4_forward_step -> next;
_process_embedding_token_parallel -> _get_shard_factor;
_process_embedding_token_parallel -> dict;
_process_embedding_token_parallel -> scatter_to_sequence_parallel_region;
_process_embedding_token_parallel -> update;
_process_embedding_token_parallel -> get_batch_on_this_cp_rank;
_process_embedding_token_parallel -> get_context_parallel_world_size;
_process_embedding_token_parallel -> get_context_parallel_rank;
_process_embedding_token_parallel -> items;
_process_embedding_token_parallel -> contiguous;
_process_embedding_token_parallel -> transpose;
_process_embedding_token_parallel -> thd_get_partitioned_indices;
_process_embedding_token_parallel -> index_select;
_process_embedding_token_parallel -> error;
_process_embedding_token_parallel -> size;
_export_cls_token -> state_transform;
_export_cls_token -> squeeze;
_export_cls_token -> reshape;
pixel_shuffle_op -> size;
pixel_shuffle_op -> view;
pixel_shuffle_op -> contiguous;
pixel_shuffle_op -> int;
pixel_shuffle_op -> permute;
get_rope_emb -> arange;
get_rope_emb -> reshape;
get_rope_emb -> cat;
get_rope_emb -> empty;
get_rope_emb -> fill_;
get_rope_emb -> get_rope_freqs;
get_rope_emb -> compute_rope_freqs;
get_rope_emb -> masked_fill;
get_rope_emb -> squeeze;
get_rope_emb -> view;
get_rope_emb -> cuda;
get_rope_emb -> contiguous;
get_rope_emb -> stack;
get_rope_emb -> float;
get_rope_freqs -> float;
get_rope_freqs -> arange;
compute_rope_freqs -> autocast;
compute_rope_freqs -> einsum;
compute_rope_freqs -> repeat_interleave;
compute_rope_freqs -> type;
_encode -> conv1;
_encode -> permute;
_encode -> contiguous;
_encode -> decoder;
_encode -> expand;
_encode -> cat;
_encode -> position_embeddings;
_encode -> ln_pre;
_encode -> ln_post;
image_size_to_num_patches -> select_best_resolution;
image_size_to_num_patches -> range;
image_size_to_num_patches -> isinstance;
image_size_to_num_patches -> TypeError;
image_size_to_num_patches -> tolist;
image_size_to_num_patches -> type;
select_best_resolution -> float;
select_best_resolution -> min;
select_best_resolution -> int;
get_number_of_features -> select_best_resolution;
get_number_of_features -> get_unpadded_features;
flatten_if_nested -> any;
flatten_if_nested -> list;
flatten_if_nested -> isinstance;
flatten_if_nested -> from_iterable;
convert_to_packed_llava_next -> enumerate;
convert_to_packed_llava_next -> unsqueeze;
convert_to_packed_llava_next -> ones_like;
convert_to_packed_llava_next -> IntTensor;
convert_to_packed_llava_next -> PackedSeqParams;
convert_to_packed_llava_next -> zip;
convert_to_packed_llava_next -> len;
convert_to_packed_llava_next -> append;
convert_to_packed_llava_next -> pad;
convert_to_packed_llava_next -> arange;
convert_to_packed_llava_next -> cat;
convert_to_packed_llava_next -> int;
convert_to_packed_llava_next -> max;
llava_next_data_step -> next;
llava_next_data_step -> set;
llava_next_data_step -> update;
llava_next_data_step -> is_pipeline_first_stage;
llava_next_data_step -> is_pipeline_last_stage;
llava_next_data_step -> get;
llava_next_data_step -> isinstance;
llava_next_data_step -> get_context_parallel_world_size;
llava_next_data_step -> len;
llava_next_data_step -> cuda;
llava_next_data_step -> items;
llava_next_data_step -> getattr;
llava_next_data_step -> sum;
llava_next_data_step -> setattr;
llava_next_forward_step -> model;
llava_next_forward_step -> get;
pack_image_features -> LlavaNextConfig;
pack_image_features -> enumerate;
pack_image_features -> cat;
pack_image_features -> tensor;
pack_image_features -> append;
pack_image_features -> get_anyres_image_grid_shape;
pack_image_features -> view;
pack_image_features -> contiguous;
pack_image_features -> flatten;
pack_image_features -> unpad_image;
pack_image_features -> transpose;
pack_image_features -> size;
pack_image_features -> ValueError;
pack_image_features -> permute;
pack_image_features -> to;
pack_image_features -> expand;
_export_language_linear_fc1 -> state_transform;
_export_language_linear_fc1 -> chunk;
_export_language_head -> state_transform;
unpad_image -> isinstance;
unpad_image -> tolist;
unpad_image -> int;
unpad_image -> TypeError;
unpad_image -> type;
get_anyres_image_grid_shape -> select_best_resolution;
get_anyres_image_grid_shape -> isinstance;
get_anyres_image_grid_shape -> TypeError;
get_anyres_image_grid_shape -> tolist;
get_anyres_image_grid_shape -> type;
_apply_prompt_templates -> _fix_roles;
_apply_prompt_templates -> enumerate;
_apply_prompt_templates -> get_prompt;
_apply_prompt_templates -> append_message;
_apply_prompt_templates -> len;
_apply_prompt_templates -> get;
_apply_prompt_templates -> replace;
_apply_prompt_templates -> count;
_tokenize_and_label -> tokenize_special_token;
_tokenize_and_label -> range;
_tokenize_and_label -> ones_like;
_tokenize_and_label -> len;
_tokenize_and_label -> getattr;
_tokenize_and_label -> find_pattern_indices;
_tokenize_and_label -> encode;
_tokenize_and_label -> warning;
_tokenize_and_label -> truncate_tokens;
_tokenize_and_label -> tensor;
_process_images -> len;
_process_images -> preprocess;
_process_images -> dict;
_process_images -> isinstance;
_process_images -> open_image;
_process_images -> append;
_process_images -> warning;
_process_images -> items;
_process_images -> zeros;
_process_images -> tensor;
_process_images -> process_image;
_process_images -> stack;
pad_or_truncate -> size;
pad_or_truncate -> pad;
mllama_data_step -> next;
mllama_data_step -> set;
mllama_data_step -> update;
mllama_data_step -> is_pipeline_first_stage;
mllama_data_step -> is_pipeline_last_stage;
mllama_data_step -> get_batch_on_this_cp_rank;
mllama_data_step -> isinstance;
mllama_data_step -> len;
mllama_data_step -> cuda;
mllama_data_step -> items;
mllama_forward_step -> model;
mllama_forward_step -> get;
mllama_forward_step -> get_packed_seq_params;
max_aspect_ratio_id -> len;
_init_fusion_schedule -> list;
_init_fusion_schedule -> ceil;
_init_fusion_schedule -> range;
_init_fusion_schedule -> len;
compute_xattn_caches_masks -> _pad_attention_masks;
compute_xattn_caches_masks -> rearrange;
compute_xattn_caches_masks -> _generate_cross_attention_mask;
compute_xattn_caches_masks -> compute_xattn_kv_cache;
compute_xattn_caches_masks -> next;
compute_xattn_caches_masks -> parameters;
_pad_attention_masks -> len;
_pad_attention_masks -> max;
_pad_attention_masks -> full;
_pad_attention_masks -> enumerate;
_pad_attention_masks -> zip;
_pad_attention_masks -> min;
_pad_attention_masks -> fill_;
_generate_cross_attention_mask -> unsqueeze;
_generate_cross_attention_mask -> _get_full_row_masked_out_mask;
_generate_cross_attention_mask -> repeat_interleave;
_generate_cross_attention_mask -> to;
_generate_cross_attention_mask -> view;
compute_xattn_kv_cache -> _compute_xattn_kv_cache;
get_partially_trainable_embedding -> zeros_like;
get_partially_trainable_embedding -> ones_like;
get_partially_trainable_embedding -> minimum;
get_partially_trainable_embedding -> unsqueeze;
get_partially_trainable_embedding -> transpose;
get_partially_trainable_embedding -> type_as;
get_partially_trainable_embedding -> tensor;
get_partially_trainable_embedding -> maximum;
get_partially_trainable_embedding -> where;
get_partially_trainable_embedding -> embedding;
get_partially_trainable_embedding -> learnable_embedding;
_compute_xattn_kv_cache -> get_key_value_tensors;
_compute_xattn_kv_cache -> stack;
get_key_value_tensors -> linear_kv;
get_key_value_tensors -> view;
get_key_value_tensors -> split_tensor_along_last_dim;
get_key_value_tensors -> k_layernorm;
get_key_value_tensors -> contiguous;
get_key_value_tensors -> size;
get_query_tensor -> linear_q;
get_query_tensor -> view;
get_query_tensor -> q_layernorm;
get_query_tensor -> size;
_rename_xattn_layer_nums_hf -> items;
_rename_xattn_layer_nums_hf -> int;
_rename_xattn_layer_nums_hf -> group;
_rename_xattn_layer_nums_hf -> sub;
_import_embedding_hf -> split;
_import_patch_embedding_hf -> reshape;
_merge_qkv -> size;
_merge_qkv -> view;
_merge_qkv -> range;
_merge_qkv -> cat;
_merge_qkv -> reshape;
_merge_qkv -> append;
_import_text_qkv -> _merge_qkv;
_import_text_kv -> _merge_kv;
_merge_kv -> size;
_merge_kv -> view;
_merge_kv -> stack;
_merge_kv -> reshape;
_import_simple_concat -> cat;
_split_kv -> reshape;
_split_kv -> arange;
_split_kv -> cpu;
_export_patch_embedding_hf -> reshape;
_export_text_kv -> _split_kv;
_export_text_qkv -> _split_qkv;
_export_simple_split -> chunk;
_export_embedding_hf -> cat;
local_path -> local_path;
local_path -> super;
local_path -> Path;
local_path -> replace;
local_path -> str;
local_path -> startswith;
_language_model_config -> CrossAttentionTextConfig;
_language_model_config -> len;
_language_model_config -> _calculate_num_layers;
_language_model_config -> dtype_from_hf;
_vision_model_config -> CrossAttentionVisionConfig;
_vision_model_config -> dtype_from_hf;
_calculate_num_layers -> len;
_modify_mllama_source_state -> range;
_modify_mllama_source_state -> items;
_modify_mllama_source_state -> _ModelState;
_modify_mllama_source_state -> int;
_modify_mllama_source_state -> ValueError;
_modify_mllama_source_state -> group;
_modify_mllama_source_state -> pop;
_modify_mllama_source_state -> sub;
convert_layer_num -> int;
convert_layer_num -> group;
convert_layer_num -> ValueError;
_get_full_row_masked_out_mask -> type_as;
_get_full_row_masked_out_mask -> any;
to_2tuple -> isinstance;
build_encoder_attention_mask -> ones;
build_encoder_attention_mask -> view;
build_encoder_attention_mask -> unsqueeze;
build_encoder_attention_mask -> append;
build_encoder_attention_mask -> to;
build_encoder_attention_mask -> finfo;
build_encoder_attention_mask -> stack;
get_image_transformer_layer_spec -> TransformerLayerSubmodules;
get_image_transformer_layer_spec -> ModuleSpec;
get_image_transformer_layer_spec -> SelfAttentionSubmodules;
get_image_transformer_layer_spec -> MLPSubmodules;
forward_with_return_intermediate -> make_viewless_tensor;
forward_with_return_intermediate -> fork;
forward_with_return_intermediate -> nullcontext;
forward_with_return_intermediate -> TEDelayedScaling;
forward_with_return_intermediate -> model_parallel_is_initialized;
forward_with_return_intermediate -> fp8_autocast;
forward_with_return_intermediate -> get_amax_reduction_group;
forward_with_return_intermediate -> _checkpointed_forward;
forward_with_return_intermediate -> enumerate;
forward_with_return_intermediate -> final_layernorm;
forward_with_return_intermediate -> get_cuda_rng_tracker;
forward_with_return_intermediate -> ValueError;
forward_with_return_intermediate -> stack;
forward_with_return_intermediate -> append;
forward_with_return_intermediate -> layer;
forward_with_return_intermediate -> is_grad_enabled;
forward_with_return_intermediate -> group_prefetch_offload_commit_async;
apply_positional_embedding -> view;
apply_positional_embedding -> gated_tile_positional_embedding;
apply_positional_embedding -> reshape;
apply_positional_embedding -> tanh;
apply_class_embedding -> cat;
apply_class_embedding -> to;
apply_class_embedding -> zeros;
process_chat_template -> from_pretrained;
process_chat_template -> apply_chat_template;
process_chat_template -> append;
process_chat_template -> lower;
process_chat_template -> len;
tokenize_special_token -> split;
tokenize_special_token -> tensor;
tokenize_special_token -> join;
tokenize_special_token -> append;
tokenize_special_token -> len;
tokenize_special_token -> extend;
tokenize_special_token -> escape;
tokenize_special_token -> keys;
tokenize_special_token -> tokenizer;
tokenize_special_token -> prod;
find_pattern_indices -> len;
find_pattern_indices -> range;
find_pattern_indices -> all;
find_pattern_indices -> tensor;
_fix_roles -> len;
_get_crop_size -> isinstance;
custom_on_megatron_step_start -> replace;
neva_data_step -> next;
neva_data_step -> set;
neva_data_step -> update;
neva_data_step -> is_pipeline_first_stage;
neva_data_step -> is_pipeline_last_stage;
neva_data_step -> get;
neva_data_step -> isinstance;
neva_data_step -> get_context_parallel_world_size;
neva_data_step -> len;
neva_data_step -> items;
neva_data_step -> getattr;
neva_data_step -> sum;
neva_data_step -> cuda;
neva_data_step -> setattr;
neva_forward_step -> model;
neva_forward_step -> get;
_import_linear_fc1 -> state_transform;
_import_linear_fc1 -> cat;
process_vision -> isinstance;
process_vision -> processor;
infer_seqlen -> min;
infer_seqlen -> max;
infer_seqlen -> int;
extract_dialogue_pairs -> len;
extract_dialogue_pairs -> sum;
extract_dialogue_pairs -> append;
truncate_tokens -> len;
truncate_tokens -> extract_dialogue_pairs;
truncate_tokens -> enumerate;
truncate_tokens -> infer_seqlen;
truncate_tokens -> ValueError;
truncate_tokens -> tensor;
truncate_tokens -> append;
truncate_tokens -> decode;
truncate_tokens -> int;
_process_vision -> _normalize_vision_paths;
_process_vision -> _fetch_vision_content;
_process_vision -> process_vision;
_normalize_vision_paths -> get;
_normalize_vision_paths -> normalize_paths;
_normalize_vision_paths -> enumerate;
_normalize_vision_paths -> normpath;
_normalize_vision_paths -> isinstance;
_normalize_vision_paths -> any;
_normalize_vision_paths -> isabs;
_normalize_vision_paths -> join;
normalize_paths -> enumerate;
normalize_paths -> normpath;
normalize_paths -> isinstance;
normalize_paths -> any;
normalize_paths -> isabs;
normalize_paths -> join;
_fetch_vision_content -> append;
_fetch_vision_content -> len;
_fetch_vision_content -> fetch_image;
_fetch_vision_content -> fetch_video;
convert_to_qwen2vl_content -> format;
convert_to_qwen2vl_content -> defaultdict;
convert_to_qwen2vl_content -> finditer;
convert_to_qwen2vl_content -> span;
convert_to_qwen2vl_content -> append;
convert_to_qwen2vl_content -> len;
convert_to_qwen2vl_content -> str;
convert_to_qwen2vl_content -> strip;
cook_chatml_sample -> get;
cook_chatml_sample -> ChatMLSample;
cook_chatml_sample -> loads;
cook_chatml_sample -> warning;
cook_chatml_sample -> isinstance;
cook_chatml_sample -> basic_sample_keys;
cook_chatml_sample -> len;
cook_chatml_sample -> fromarray;
qwen2vl_2b -> Qwen2VLModel;
qwen2vl_2b -> Qwen2VLConfig2B;
qwen2vl_7b -> Qwen2VLModel;
qwen2vl_7b -> Qwen2VLConfig7B;
qwen2vl_72b -> Qwen2VLModel;
qwen2vl_72b -> Qwen2VLConfig72B;
qwen2vl_data_step -> next;
qwen2vl_data_step -> set;
qwen2vl_data_step -> update;
qwen2vl_data_step -> is_pipeline_first_stage;
qwen2vl_data_step -> is_pipeline_last_stage;
qwen2vl_data_step -> get_batch_on_this_cp_rank;
qwen2vl_data_step -> isinstance;
qwen2vl_data_step -> len;
qwen2vl_data_step -> cuda;
qwen2vl_data_step -> items;
qwen2vl_forward_step -> model;
qwen2vl_forward_step -> get;
qwen2vl_forward_step -> get_packed_seq_params;
get_rope_index -> clone;
get_rope_index -> ones;
get_rope_index -> enumerate;
get_rope_index -> unsqueeze;
get_rope_index -> ones_like;
get_rope_index -> squeeze;
get_rope_index -> sum;
get_rope_index -> tolist;
get_rope_index -> range;
get_rope_index -> reshape;
get_rope_index -> to;
get_rope_index -> append;
get_rope_index -> masked_fill_;
get_rope_index -> expand;
get_rope_index -> zeros;
get_rope_index -> flatten;
get_rope_index -> len;
get_rope_index -> tensor;
get_rope_index -> cumsum;
get_rope_index -> max;
get_rope_index -> argwhere;
get_rope_index -> index;
get_rope_index -> item;
get_rope_index -> cat;
get_rope_index -> view;
get_rope_index -> long;
get_rope_index -> stack;
get_rope_index -> arange;
_export_language_qkv_bias -> state_transform;
_export_language_qkv_bias -> export_qkv_bias;
_export_linear_fc1 -> state_transform;
_export_linear_fc1 -> chunk;
rot_pos_emb -> cat;
rot_pos_emb -> max;
rot_pos_emb -> rotary_pos_emb;
rot_pos_emb -> flatten;
rot_pos_emb -> expand;
rot_pos_emb -> reshape;
rot_pos_emb -> permute;
rot_pos_emb -> append;
rot_pos_emb -> repeat;
rot_pos_emb -> unsqueeze;
rot_pos_emb -> stack;
rot_pos_emb -> arange;
_bias_dropout_add_func_internvit -> to;
_bias_dropout_add_func_internvit -> dropout;
bias_dropout_add_unfused_internvit -> _bias_dropout_add_func_internvit;
get_bias_dropout_add_internvit -> bias_dropout_add_unfused_internvit;
get_internvit_layer_spec -> get_mlp_module_spec;
get_internvit_layer_spec -> ModuleSpec;
get_internvit_layer_spec -> TransformerLayerSubmodules;
get_internvit_layer_spec -> SelfAttentionSubmodules;
_import_position_embedding -> state_transform;
_import_position_embedding -> squeeze;
_gather_var -> get_tensor_model_parallel_world_size;
_gather_var -> get_tensor_model_parallel_rank;
_gather_var -> range;
_gather_var -> all_gather;
_gather_var -> contiguous;
_gather_var -> sum;
_gather_var -> dim;
_gather_var -> empty_like;
_gather_var -> append;
_gather_var -> get_tensor_model_parallel_group;
_gather_var -> cat;
_validate_input_types -> TypecheckMetadata;
_validate_input_types -> len;
_validate_input_types -> items;
_validate_input_types -> TypeError;
_validate_input_types -> hasattr;
_validate_input_types -> is_semantic_typecheck_enabled;
_validate_input_types -> enumerate;
_validate_input_types -> insert;
_validate_input_types -> append;
_validate_input_types -> join;
_validate_input_types -> isinstance;
_validate_input_types -> compare;
_validate_input_types -> __check_neural_type;
_validate_input_types -> keys;
compare -> is_scripting;
compare -> type;
compare -> issubclass;
compare -> set;
compare -> items;
compare -> keys;
compare -> __compare_axes;
compare -> compare;
compare -> isinstance;
__check_neural_type -> hasattr;
__check_neural_type -> isinstance;
__check_neural_type -> TypeError;
__check_neural_type -> is_semantic_typecheck_enabled;
__check_neural_type -> __check_neural_type;
__check_neural_type -> compare;
__check_neural_type -> len;
_attach_and_validate_output_types -> TypecheckMetadata;
_attach_and_validate_output_types -> list;
_attach_and_validate_output_types -> isinstance;
_attach_and_validate_output_types -> items;
_attach_and_validate_output_types -> hasattr;
_attach_and_validate_output_types -> TypeError;
_attach_and_validate_output_types -> enumerate;
_attach_and_validate_output_types -> len;
_attach_and_validate_output_types -> format;
_attach_and_validate_output_types -> __attach_neural_type;
_attach_and_validate_output_types -> type;
__attach_neural_type -> hasattr;
__attach_neural_type -> isinstance;
__attach_neural_type -> TypeError;
__attach_neural_type -> __attach_neural_type;
__attach_neural_type -> len;
_inspect_signature_for_trainer -> hasattr;
_inspect_signature_for_trainer -> signature;
from_config_file -> issubclass;
from_config_file -> load;
from_config_file -> from_config_dict;
from_config_file -> NotImplementedError;
__hash__ -> hash;
__hash__ -> UnavailableError;
_get_hf_hub_pretrained_model_info -> get_hf_token;
_get_hf_hub_pretrained_model_info -> HfApi;
_get_hf_hub_pretrained_model_info -> file_exists;
_get_hf_hub_pretrained_model_info -> try_to_load_from_cache;
_get_hf_hub_pretrained_model_info -> hf_hub_download;
_get_hf_hub_pretrained_model_info -> repo_info;
_get_hf_hub_pretrained_model_info -> joinpath;
_get_hf_hub_pretrained_model_info -> sorted;
_get_hf_hub_pretrained_model_info -> join;
_get_hf_hub_pretrained_model_info -> hexdigest;
_get_hf_hub_pretrained_model_info -> exists;
_get_hf_hub_pretrained_model_info -> snapshot_download;
_get_hf_hub_pretrained_model_info -> split;
_get_hf_hub_pretrained_model_info -> resolve_cache_dir;
_get_hf_hub_pretrained_model_info -> lower;
_get_hf_hub_pretrained_model_info -> len;
_get_hf_hub_pretrained_model_info -> rmtree;
_get_hf_hub_pretrained_model_info -> info;
_get_hf_hub_pretrained_model_info -> makedirs;
_get_hf_hub_pretrained_model_info -> append;
_get_hf_hub_pretrained_model_info -> md5;
_get_hf_hub_pretrained_model_info -> listdir;
_get_hf_hub_pretrained_model_info -> encode;
_get_hf_hub_pretrained_model_info -> format;
_get_ngc_pretrained_model_info -> list_available_models;
_get_ngc_pretrained_model_info -> replace;
_get_ngc_pretrained_model_info -> joinpath;
_get_ngc_pretrained_model_info -> hexdigest;
_get_ngc_pretrained_model_info -> maybe_download_from_cloud;
_get_ngc_pretrained_model_info -> info;
_get_ngc_pretrained_model_info -> FileNotFoundError;
_get_ngc_pretrained_model_info -> split;
_get_ngc_pretrained_model_info -> resolve_cache_dir;
_get_ngc_pretrained_model_info -> md5;
_get_ngc_pretrained_model_info -> encode;
file_exists -> broadcast;
file_exists -> exists;
file_exists -> ckpt_to_dir;
file_exists -> is_multistorageclient_url;
generate_model_card -> deepcopy;
generate_model_card -> _get_hf_model_card;
generate_model_card -> ValueError;
_get_hf_model_card -> ModelCardData;
_get_hf_model_card -> items;
_get_hf_model_card -> ModelCard;
_get_hf_model_card -> to_yaml;
_get_hf_model_card -> replace;
_get_hf_model_card -> strip;
wrapped_call -> decorator;
wrapped_call -> _validate_input_types;
wrapped_call -> wrapped;
wrapped_call -> _attach_and_validate_output_types;
wrapped_call -> RuntimeError;
wrapped_call -> isinstance;
wrapped_call -> hasattr;
wrapped_call -> TypeError;
wrapped_call -> len;
decorator -> wraps;
decorator -> task_function;
decorator -> get_args_parser;
decorator -> parse_args;
decorator -> append;
decorator -> _run_hydra;
decorator -> instance;
decorator -> store;
decorator -> split;
decorator -> write;
decorator -> exit;
decorator -> str;
wrapped -> attr;
wrapped -> items;
wrapped -> _get_param_type;
wrapped -> func;
wrapped -> TypeError;
wrapped -> len;
wrapped -> ValueError;
wrapped -> keys;
wrapped -> str;
wrapped -> hasattr;
wrapped -> wraps;
wrapped -> isinstance;
wrapped -> _DataLoaderIterDataFetcher;
disable_semantic_checks -> set_semantic_check_enabled;
enable_wrapping -> set_typecheck_enabled;
get_export_subnet -> getattr;
augment_filename -> split;
augment_filename -> join;
_export -> copy;
_export -> pop;
_export -> eval;
_export -> parameters;
_export -> modules;
_export -> get_export_format;
_export -> isinstance;
_export -> set_typecheck_enabled;
_export -> wrap_forward_method;
_export -> enable_wrapping;
_export -> _export_teardown;
_export -> locals;
_export -> append;
_export -> inference_mode;
_export -> no_grad;
_export -> optimized_execution;
_export -> _jit_is_scripting;
_export -> _prepare_for_export;
_export -> parse_input_example;
_export -> forward;
_export -> input_example;
_export -> trace_module;
_export -> freeze;
_export -> save;
_export -> load;
_export -> type;
_export -> info;
_export -> verify_torchscript;
_export -> ValueError;
_export -> dynamic_shapes_for_export;
_export -> export;
_export -> verify_runtime;
_export -> tuple;
_export -> monkeypatched;
_export -> sum;
_export -> ExportOptions;
_export -> dynamo_export;
_export -> rename_onnx_io;
_export -> values;
_export -> run_decompositions;
_export -> nelement;
_export -> element_size;
_export -> buffers;
get_export_format -> splitext;
get_export_format -> lower;
get_export_format -> ValueError;
wrap_forward_method -> type;
wrap_forward_method -> hasattr;
parse_input_example -> list;
parse_input_example -> isinstance;
verify_torchscript -> info;
verify_torchscript -> parse_input_example;
verify_torchscript -> autocast;
verify_torchscript -> forward;
verify_torchscript -> load;
verify_torchscript -> run_ts_and_compare;
dynamic_shapes_for_export -> get_dynamic_axes;
verify_runtime -> load;
verify_runtime -> SessionOptions;
verify_runtime -> InferenceSession;
verify_runtime -> info;
verify_runtime -> warning;
verify_runtime -> check_model;
verify_runtime -> SerializeToString;
verify_runtime -> parse_input_example;
verify_runtime -> forward;
verify_runtime -> to_onnxrt_input;
verify_runtime -> isinstance;
verify_runtime -> run_ort_and_compare;
monkeypatched -> getattr;
monkeypatched -> setattr;
rename_onnx_io -> load;
rename_onnx_io -> zip;
rename_onnx_io -> range;
rename_onnx_io -> save;
rename_onnx_io -> len;
replace_for_export -> replace_modules;
replace_for_export -> wrap_module;
get_dynamic_axes -> defaultdict;
get_dynamic_axes -> Dim;
get_dynamic_axes -> items;
get_dynamic_axes -> update;
get_dynamic_axes -> extract_dynamic_axes;
get_dynamic_axes -> str;
get_dynamic_axes -> range;
get_dynamic_axes -> len;
get_dynamic_axes -> append;
get_export_config -> getattr;
wrap_training_step -> wrapped;
wrap_training_step -> isinstance;
wrap_training_step -> pop;
wrap_training_step -> log_dict;
_setup_profiling -> get;
_setup_profiling -> type;
_setup_profiling -> info;
_setup_profiling -> ValueError;
_setup_profiling -> isdir;
_setup_chakra_profiling -> get;
_setup_chakra_profiling -> Path;
_setup_chakra_profiling -> get_envint;
_setup_chakra_profiling -> mkdir;
_setup_chakra_profiling -> isinstance;
_setup_chakra_profiling -> ExecutionTraceObserver;
_setup_chakra_profiling -> profile;
_setup_chakra_profiling -> ValueError;
_setup_chakra_profiling -> info;
_setup_chakra_profiling -> Exception;
_setup_chakra_profiling -> isdir;
_setup_chakra_profiling -> schedule;
_setup_chakra_profiling -> type;
register_debug_hooks -> is_initialized;
register_debug_hooks -> named_parameters;
register_debug_hooks -> named_modules;
register_debug_hooks -> get_rank;
register_debug_hooks -> register_hook;
register_debug_hooks -> register_forward_hook;
register_debug_hooks -> register_full_backward_hook;
register_debug_hooks -> get_tensor_hook;
register_debug_hooks -> get_forward_hook;
register_debug_hooks -> get_backward_hook;
has_artifacts -> hasattr;
has_artifacts -> len;
has_native_or_submodules_artifacts -> modules;
has_native_or_submodules_artifacts -> isinstance;
has_native_or_submodules_artifacts -> hasattr;
has_native_or_submodules_artifacts -> len;
has_nemo_submodules -> len;
named_nemo_modules -> items;
named_nemo_modules -> hasattr;
named_nemo_modules -> NeMoBaseException;
named_nemo_modules -> getattr;
named_nemo_modules -> named_nemo_modules;
is_multistorageclient_url -> isinstance;
is_multistorageclient_url -> startswith;
is_multistorageclient_url -> ValueError;
maybe_make_save_dir -> is_multistorageclient_url;
maybe_make_save_dir -> exists;
maybe_make_save_dir -> mkdir;
update_save_restore_connector -> hasattr;
update_save_restore_connector -> setattr;
import_multistorageclient -> ValueError;
resolve_validation_dataloaders -> deepcopy;
resolve_validation_dataloaders -> resolve_dataset_name_from_cfg;
resolve_validation_dataloaders -> isinstance;
resolve_validation_dataloaders -> error;
resolve_validation_dataloaders -> exit;
resolve_validation_dataloaders -> to_container;
resolve_validation_dataloaders -> pop;
resolve_validation_dataloaders -> create;
resolve_validation_dataloaders -> debug;
resolve_validation_dataloaders -> setup_validation_data;
resolve_validation_dataloaders -> unique_names_check;
resolve_validation_dataloaders -> get;
resolve_validation_dataloaders -> format;
resolve_validation_dataloaders -> append;
resolve_validation_dataloaders -> len;
resolve_validation_dataloaders -> ValueError;
resolve_validation_dataloaders -> parse_dataset_as_name;
resolve_test_dataloaders -> deepcopy;
resolve_test_dataloaders -> resolve_dataset_name_from_cfg;
resolve_test_dataloaders -> isinstance;
resolve_test_dataloaders -> error;
resolve_test_dataloaders -> exit;
resolve_test_dataloaders -> to_container;
resolve_test_dataloaders -> pop;
resolve_test_dataloaders -> create;
resolve_test_dataloaders -> debug;
resolve_test_dataloaders -> setup_test_data;
resolve_test_dataloaders -> unique_names_check;
resolve_test_dataloaders -> get;
resolve_test_dataloaders -> format;
resolve_test_dataloaders -> append;
resolve_test_dataloaders -> len;
resolve_test_dataloaders -> ValueError;
resolve_test_dataloaders -> parse_dataset_as_name;
setup_megatron_optimization -> get_model_config;
setup_megatron_optimization -> OptimizerConfig;
setup_megatron_optimization -> get;
parse_optimizer_args -> deepcopy;
parse_optimizer_args -> maybe_update_config_version;
parse_optimizer_args -> isinstance;
parse_optimizer_args -> hasattr;
parse_optimizer_args -> to_container;
parse_optimizer_args -> create;
parse_optimizer_args -> instantiate;
parse_optimizer_args -> vars;
parse_optimizer_args -> get_optimizer_config;
parse_optimizer_args -> format;
parse_optimizer_args -> pop;
parse_optimizer_args -> get;
parse_optimizer_args -> optimizer_params_cls;
load_part_of_state_dict -> items;
load_part_of_state_dict -> load_state_dict;
load_part_of_state_dict -> info;
load_part_of_state_dict -> len;
load_part_of_state_dict -> append;
extract_state_dict_from -> update_save_restore_connector;
extract_state_dict_from -> extract_state_dict_from;
extract_state_dict_from -> SaveRestoreConnector;
extract_state_dict_from -> exists;
extract_state_dict_from -> FileExistsError;
extract_state_dict_from -> getcwd;
extract_state_dict_from -> abspath;
extract_state_dict_from -> makedirs;
extract_state_dict_from -> TemporaryDirectory;
extract_state_dict_from -> _unpack_nemo_file;
extract_state_dict_from -> chdir;
extract_state_dict_from -> join;
extract_state_dict_from -> _load_state_dict_from_disk;
extract_state_dict_from -> info;
extract_state_dict_from -> _save_state_dict_to_disk;
extract_state_dict_from -> set;
extract_state_dict_from -> split;
extract_state_dict_from -> keys;
num_weights -> parameters;
num_weights -> numel;
num_weights -> _num_weights;
cfg -> _set_hparams;
cfg -> create;
cfg -> hasattr;
cfg -> to_object;
hparams -> _set_hparams;
hparams -> create;
hparams -> hasattr;
hparams -> isinstance;
hparams -> to_object;
hparams -> super;
_cleanup_on_execution_end -> hasattr;
_cleanup_on_execution_end -> delattr;
on_predict_end -> _cleanup_on_execution_end;
_num_weights -> parameters;
_num_weights -> numel;
access_cfg -> hasattr;
access_cfg -> getattr;
access_cfg -> propagate_model_guid;
access_cfg -> DictConfig;
register_adapter -> AdapterRegistryInfo;
register_adapter -> ValueError;
register_adapter -> issubclass;
_prepare_default_adapter_config -> create;
_prepare_default_adapter_config -> open_dict;
update_module_class_with_adapter_class -> items;
update_module_class_with_adapter_class -> isinstance;
update_module_class_with_adapter_class -> get_registered_adapter;
update_module_class_with_adapter_class -> inplace_recursive_walk_dict;
update_module_class_with_adapter_class -> info;
inplace_recursive_walk_dict -> items;
inplace_recursive_walk_dict -> isinstance;
inplace_recursive_walk_dict -> inplace_recursive_walk_dict;
inplace_recursive_walk_dict -> info;
check_supported_adapter_type_ -> get_accepted_adapter_types;
check_supported_adapter_type_ -> len;
check_supported_adapter_type_ -> import_class_by_path;
check_supported_adapter_type_ -> issubclass;
check_supported_adapter_type_ -> ValueError;
check_supported_adapter_type_ -> to_yaml;
replace_adapter_compatible_modules -> named_modules;
replace_adapter_compatible_modules -> update_module_class_with_adapter_class;
get_hf_model_filter -> dict;
search_huggingface_models -> get_hf_token;
search_huggingface_models -> HfApi;
search_huggingface_models -> list_models;
search_huggingface_models -> get_hf_model_filter;
push_to_hf_hub -> split;
push_to_hf_hub -> HfApi;
push_to_hf_hub -> ValueError;
push_to_hf_hub -> get_hf_token;
push_to_hf_hub -> create_repo;
push_to_hf_hub -> SoftTemporaryDirectory;
push_to_hf_hub -> mkdir;
push_to_hf_hub -> save_to;
push_to_hf_hub -> str;
push_to_hf_hub -> write_text;
push_to_hf_hub -> upload_folder;
push_to_hf_hub -> len;
push_to_hf_hub -> Path;
push_to_hf_hub -> hasattr;
push_to_hf_hub -> NotImplementedError;
push_to_hf_hub -> join;
push_to_hf_hub -> generate_model_card;
push_to_hf_hub -> replace;
push_to_hf_hub -> capitalize;
_get_gpu_name -> nvmlInit;
_get_gpu_name -> nvmlDeviceGetHandleByIndex;
_get_gpu_name -> nvmlDeviceGetCudaComputeCapability;
_get_gpu_name -> nvmlShutdown;
wrapper -> wraps;
wrapper -> task_function;
wrapper -> get_args_parser;
wrapper -> parse_args;
wrapper -> append;
wrapper -> _run_hydra;
wrapper -> instance;
wrapper -> store;
wrapper -> split;
wrapper -> write;
wrapper -> exit;
wrapper -> ModuleNotFoundError;
wrapper -> func;
wrapper -> isinstance;
wrapper -> to_capture;
wrapper -> hasattr;
wrapper -> Partial;
wrapper -> type_factory;
wrapper -> NewType;
wrapper -> error;
wrapper -> type;
wrapper -> StateDictTransform;
wrapper -> wrapped;
wrapper -> keys;
wrapper -> warning;
wrapper -> isclass;
wrapper -> sleep;
register_optimizer_params -> ValueError;
get_optimizer_config -> partial;
get_optimizer_config -> ValueError;
get_optimizer_config -> create;
get_optimizer_config -> merge;
get_optimizer_config -> len;
get_optimizer_config -> scheduler_params;
get_optimizer_config -> keys;
register_scheduler_params -> ValueError;
get_scheduler_config -> partial;
get_scheduler_config -> ValueError;
get_scheduler_config -> keys;
_update_subconfigs -> load;
_update_subconfigs -> named_nemo_modules;
_update_subconfigs -> has_nemo_submodules;
_update_subconfigs -> update;
_update_subconfigs -> open;
_update_subconfigs -> save;
_filtered_recursive_walk -> walk;
_filtered_recursive_walk -> isdir;
_filtered_recursive_walk -> NotADirectoryError;
_filtered_recursive_walk -> join;
_filtered_recursive_walk -> filter_fn;
_filtered_recursive_walk -> append;
_make_nemo_file_from_folder_with_multistorageclient -> import_multistorageclient;
_make_nemo_file_from_folder_with_multistorageclient -> split;
_make_nemo_file_from_folder_with_multistorageclient -> TemporaryDirectory;
_make_nemo_file_from_folder_with_multistorageclient -> join;
_make_nemo_file_from_folder_with_multistorageclient -> open;
_make_nemo_file_from_folder_with_multistorageclient -> add;
_make_nemo_file_from_folder_with_multistorageclient -> time;
_make_nemo_file_from_folder_with_multistorageclient -> upload_file;
_make_nemo_file_from_folder_with_multistorageclient -> debug;
upload_file -> getsize;
upload_file -> _get_s3_resource;
upload_file -> parse_s3_url;
upload_file -> TransferConfig;
upload_file -> perf_counter;
upload_file -> _upload_file_with_retry;
upload_file -> info;
upload_file -> exists;
upload_file -> remove;
_is_safe_path -> normpath;
_is_safe_path -> join;
_is_safe_path -> isabs;
_is_safe_path -> commonprefix;
_is_safe_path -> issym;
_is_safe_path -> islnk;
_is_safe_path -> split;
_safe_extract -> realpath;
_safe_extract -> getmembers;
_safe_extract -> _is_safe_path;
_safe_extract -> extract;
_safe_extract -> warning;
_tar_open -> open;
_tar_open -> exists;
_tar_open -> FileNotFoundError;
_tar_open -> close;
_unpack_nemo_file_with_multistorageclient -> import_multistorageclient;
_unpack_nemo_file_with_multistorageclient -> exists;
_unpack_nemo_file_with_multistorageclient -> FileNotFoundError;
_unpack_nemo_file_with_multistorageclient -> TemporaryDirectory;
_unpack_nemo_file_with_multistorageclient -> join;
_unpack_nemo_file_with_multistorageclient -> time;
_unpack_nemo_file_with_multistorageclient -> download_file;
_unpack_nemo_file_with_multistorageclient -> info;
_unpack_nemo_file_with_multistorageclient -> open;
_unpack_nemo_file_with_multistorageclient -> close;
_unpack_nemo_file_with_multistorageclient -> split;
_unpack_nemo_file_with_multistorageclient -> _safe_extract;
check_artifact_and_query_basename_match -> basename;
check_artifact_and_query_basename_match -> split;
t_with_string -> startswith;
t_with_string -> endswith;
t_with_string -> __str__;
_init_internal -> VoidType;
_init_internal -> isinstance;
_init_internal -> ValueError;
_init_internal -> __check_sanity;
_init_internal -> tuple;
_init_internal -> append;
_init_internal -> AxisType;
_init_internal -> from_str;
__check_sanity -> ValueError;
__check_sanity -> isinstance;
__compare_axes -> dict;
__compare_axes -> zip;
__compare_axes -> keys;
__compare_axes -> items;
__compare_axes -> len;
compare_and_raise_error -> is_scripting;
compare_and_raise_error -> compare;
compare_and_raise_error -> NeuralPortNmTensorMismatchError;
compare_and_raise_error -> str;
_get_lr -> min;
_get_lr -> max;
_get_lr -> sqrt;
_get_lr -> _square_annealing;
_get_lr -> _squareroot_annealing;
_get_lr -> _get_linear_warmup_with_cosine_annealing_lr;
_get_lr -> ValueError;
_get_lr -> _cosine_annealing;
_get_lr -> _noam_hold_annealing;
_get_lr -> _poly_decay;
_get_options -> len;
_rms -> norm;
_rms -> numel;
_approx_sq_grad -> unsqueeze;
_approx_sq_grad -> rsqrt;
_approx_sq_grad -> mul;
_approx_sq_grad -> rsqrt_;
_approx_sq_grad -> mean;
_single_tensor_adan -> enumerate;
_single_tensor_adan -> mul_;
_single_tensor_adan -> add_;
_single_tensor_adan -> addcmul_;
_single_tensor_adan -> addcdiv_;
_single_tensor_adan -> div_;
_single_tensor_adan -> zero_;
_single_tensor_adan -> sqrt;
_multi_tensor_adan -> _foreach_mul_;
_multi_tensor_adan -> _foreach_add_;
_multi_tensor_adan -> _foreach_addcmul_;
_multi_tensor_adan -> _foreach_sqrt;
_multi_tensor_adan -> _foreach_div_;
_multi_tensor_adan -> _foreach_zero_;
_multi_tensor_adan -> len;
_multi_tensor_adan -> _foreach_addcdiv_;
_fused_adan_multi_tensor -> MultiTensorApply;
_fused_adan_multi_tensor -> IntTensor;
_fused_adan_multi_tensor -> multi_tensor_applier;
_fused_adan_multi_tensor -> _foreach_zero_;
_fused_adan_multi_tensor -> _foreach_add_;
_fused_adan_single_tensor -> enumerate;
_fused_adan_single_tensor -> float;
_fused_adan_single_tensor -> add_;
_fused_adan_single_tensor -> device;
_fused_adan_single_tensor -> adan_single_tensor;
_fused_adan_single_tensor -> zero_;
restart_opt -> no_grad;
restart_opt -> zeros_like;
quantize_param_fragment -> _quantize_param_fragment_impl;
_quantize_param_fragment_impl -> Float8Tensor;
_quantize_param_fragment_impl -> update_quantized;
_quantize_param_fragment_impl -> size;
_quantize_param_fragment_impl -> cast_to_fp8;
_quantize_param_fragment_impl -> view;
_quantize_param_fragment_impl -> RuntimeError;
get_fp8_scale_and_amax -> _get_fp8_scale_and_amax_impl;
_get_fp8_scale_and_amax_impl -> RuntimeError;
create_distribute_within_nodes_pgs -> is_initialized;
create_distribute_within_nodes_pgs -> get_world_size;
create_distribute_within_nodes_pgs -> get_rank;
create_distribute_within_nodes_pgs -> device_count;
create_distribute_within_nodes_pgs -> range;
create_distribute_within_nodes_pgs -> warning;
create_distribute_within_nodes_pgs -> new_group;
create_distribute_within_nodes_pgs -> append;
is_mxfp8tensor -> isinstance;
release -> signal;
_make_post_backward_hook -> getattr;
_make_post_backward_hook -> RuntimeError;
_make_post_backward_hook -> _lock_with_timeout;
_make_post_backward_hook -> _init_param_state;
_make_post_backward_hook -> _grad_copy;
_make_post_backward_hook -> _try_start_bucket_grad_sync;
_init_param_state -> float;
_init_param_state -> _init_param_state;
_init_param_state -> update;
_init_param_state -> is_float8tensor;
_init_param_state -> super;
add_param_to_bucket -> numel;
add_param_to_bucket -> ParameterFragment;
add_param_to_bucket -> append;
_param_copy_fragments -> no_grad;
_param_copy_fragments -> list;
_param_copy_fragments -> _multi_tensor_copy;
_param_copy_fragments -> set;
_param_copy_fragments -> parameter;
_param_copy_fragments -> is_float8tensor;
_param_copy_fragments -> append;
_param_copy_fragments -> _reset_caches;
_param_copy_fragments -> view;
_param_copy_fragments -> is_floating_point;
_param_copy_fragments -> is_contiguous;
_param_copy_fragments -> min;
_param_copy_fragments -> permute;
_param_copy_fragments -> size;
_param_copy_fragments -> zero_;
_param_copy_fragments -> unsqueeze;
_param_copy_fragments -> detach;
_check_params_shard_dtypes -> no_grad;
_check_params_shard_dtypes -> sum;
_check_params_shard_dtypes -> dict;
_check_params_shard_dtypes -> items;
_check_params_shard_dtypes -> extend;
_check_params_shard_dtypes -> _check_params_shard_dtypes;
_check_params_shard_dtypes -> getattr;
_check_params_shard_dtypes -> keys;
_check_params_shard_dtypes -> len;
_check_params_shard_dtypes -> parameters;
_check_params_shard_dtypes -> empty;
_check_params_shard_dtypes -> _multi_tensor_copy;
_check_params_shard_dtypes -> reciprocal;
_check_params_shard_dtypes -> all_reduce;
_check_params_shard_dtypes -> empty_like;
_check_params_shard_dtypes -> parameter;
_check_params_shard_dtypes -> slice;
_check_params_shard_dtypes -> quantize_param_fragment;
_check_params_shard_dtypes -> get_fp8_scale_and_amax;
_check_params_shard_dtypes -> append;
_check_params_shard_dtypes -> view;
_check_params_shard_dtypes -> super;
_check_params_shard_dtypes -> is_float8tensor;
_check_params_shard_dtypes -> dtypes;
_check_params_shard_dtypes -> set;
_check_params_shard_dtypes -> range;
hook -> getattr;
hook -> RuntimeError;
hook -> _lock_with_timeout;
hook -> _init_param_state;
hook -> _grad_copy;
hook -> _try_start_bucket_grad_sync;
is_grad_copy_enabled -> getattr;
rename_fp32_params -> isinstance;
rename_fp32_params -> startswith;
rename_fp32_params -> replace;
lock_with_timeout -> acquire;
lock_with_timeout -> release;
lock_with_timeout -> print;
_squareroot_annealing -> max;
_square_annealing -> max;
_cosine_annealing -> cos;
_linear_warmup_with_cosine_annealing -> float;
_linear_warmup_with_cosine_annealing -> cos;
_poly_decay -> min;
_poly_decay -> pow;
_poly_decay -> ceil;
_noam_hold_annealing -> max;
register_scheduler -> format;
register_scheduler -> register_scheduler_params;
register_scheduler -> ValueError;
get_scheduler -> partial;
get_scheduler -> ValueError;
get_scheduler -> pop;
get_scheduler -> signature;
get_scheduler -> keys;
get_lr -> _get_lr;
get_lr -> warn;
get_lr -> _get_warmup_lr;
get_lr -> _get_constant_lr;
get_lr -> len;
get_lr -> keys;
get_lr -> max;
get_lr -> _noam_annealing;
get_lr -> ValueError;
get_lr -> __orig_get_lr__;
get_lr -> range;
get_lr -> hasattr;
get_lr -> copy_;
_get_warmup_lr -> _get_warmup_lr;
_get_warmup_lr -> _get_linear_warmup_with_cosine_annealing_lr;
_get_warmup_lr -> super;
_get_constant_lr -> _get_linear_warmup_with_cosine_annealing_lr;
_get_linear_warmup_with_cosine_annealing_lr -> _linear_warmup_with_cosine_annealing;
_noam_annealing -> max;
_noam_annealing -> min;
reload_model_params -> reload_model_params;
reload_model_params -> _copy_model_params_to_main_params;
nvtx_range_push -> append;
nvtx_range_push -> range_push;
nvtx_range_push -> _nvtx_enabled;
nvtx_range_pop -> pop;
nvtx_range_pop -> range_pop;
nvtx_range_pop -> _nvtx_enabled;
nvtx_range_pop -> RuntimeError;
nvtx_range_pop -> ValueError;
_get_state -> hasattr;
save_parameter_state -> save_parameter_state;
load_parameter_state -> load_parameter_state;
_get_param_groups -> hasattr;
disable_pre_hook -> disable_pre_hook;
enable_pre_hook -> enable_pre_hook;
_check_valid_opt_params -> ValueError;
_zero_grad_group_helper -> zero_;
_zero_grad_group_helper -> detach_;
_zero_grad_group_helper -> requires_grad_;
_multi_tensor_copy_this_to_that -> multi_tensor_applier;
_multi_tensor_copy_this_to_that -> zip;
_multi_tensor_copy_this_to_that -> copy_;
_get_grad_data_group -> get_expert_data_parallel_group;
_get_grad_data_group -> get_data_parallel_group;
zero -> zero_;
allreduce_buffer -> div_;
allreduce_buffer -> all_reduce;
allreduce_buffer -> get_data_parallel_world_size;
update_chunk_info -> keys;
_make_param_hook -> get_data_parallel_world_size;
_make_param_hook -> _get_grad_data_group;
_make_param_hook -> float;
_make_param_hook -> add_;
_make_param_hook -> all_reduce;
_make_param_hook -> div_;
_make_param_hook -> update_chunk_info;
_make_param_hook -> allreduce_grads;
_make_param_hook -> get_allreduce_tensor;
_make_param_hook -> _make_nccl_premul_sum;
allreduce_grads -> all_reduce;
allreduce_grads -> div_;
allreduce_grads -> _make_nccl_premul_sum;
_get_model_and_main_params_data_float16 -> zip;
_get_model_and_main_params_data_float16 -> append;
_set_overflow_buffer -> IntTensor;
_set_overflow_buffer -> fill_;
_copy_main_params_to_model_params -> _get_model_and_main_params_data_float16;
_copy_main_params_to_model_params -> _set_overflow_buffer;
_copy_main_params_to_model_params -> _multi_tensor_copy_this_to_that;
_copy_model_params_to_main_params -> _get_model_and_main_params_data_float16;
_copy_model_params_to_main_params -> _set_overflow_buffer;
_copy_model_params_to_main_params -> _multi_tensor_copy_this_to_that;
_get_defaults -> hasattr;
param_hook -> get_data_parallel_world_size;
param_hook -> _get_grad_data_group;
param_hook -> float;
param_hook -> add_;
param_hook -> all_reduce;
param_hook -> div_;
param_hook -> update_chunk_info;
param_hook -> allreduce_grads;
param_hook -> get_allreduce_tensor;
param_hook -> _make_nccl_premul_sum;
skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported -> check_cuda_python_cuda_graphs_conditional_nodes_supported;
skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported -> skip;
assert_drv -> isinstance;
assert_drv -> RuntimeError;
assert_drv -> format;
extract_dynamic_axes -> defaultdict;
extract_dynamic_axes -> type;
extract_dynamic_axes -> unpack_nested_neural_type;
extract_dynamic_axes -> enumerate;
extract_dynamic_axes -> append;
unpack_nested_neural_type -> type;
unpack_nested_neural_type -> unpack_nested_neural_type;
with_numba_compat_strictness -> is_numba_compat_strict;
with_numba_compat_strictness -> set_numba_compat_strictness;
numba_cpu_is_supported -> check_lib_version;
skip_numba_cuda_test_if_unsupported -> numba_cuda_is_supported;
skip_numba_cuda_test_if_unsupported -> skip;
is_lib_available -> find_spec;
_lib_required -> wraps;
_lib_required -> ModuleNotFoundError;
function_stub_with_error_decorator -> wraps;
function_stub_with_error_decorator -> ModuleNotFoundError;
execute_job -> setup_globals;
execute_job -> set_state;
execute_job -> load_sweep_config;
execute_job -> set_config;
execute_job -> join;
execute_job -> abspath;
execute_job -> encode;
execute_job -> hexdigest;
execute_job -> deepcopy;
execute_job -> save;
execute_job -> to_container;
execute_job -> enumerate;
execute_job -> Popen;
execute_job -> Thread;
execute_job -> start;
execute_job -> JobReturn;
execute_job -> getcwd;
execute_job -> list;
execute_job -> open_dict;
execute_job -> format;
execute_job -> str;
execute_job -> exists;
execute_job -> makedirs;
execute_job -> pop;
execute_job -> append;
execute_job -> instance;
execute_job -> sha256;
execute_job -> to_yaml;
_init_nemo_model -> _is_model_deployable;
_init_nemo_model -> restore_from;
_init_nemo_model -> get_module_and_class;
_init_nemo_model -> getattr;
_init_nemo_model -> freeze;
_init_nemo_model -> Exception;
_init_nemo_model -> import_module;
_init_nemo_model -> Trainer;
_init_nemo_model -> warning;
_is_model_deployable -> issubclass;
_is_model_deployable -> Exception;
_is_model_deployable -> type;
get_module_and_class -> rindex;
get_module_and_class -> len;
typedict2tensor -> tuple;
typedict2tensor -> get_origin;
typedict2tensor -> _map_type;
typedict2tensor -> Tensor;
typedict2tensor -> get_args;
typedict2tensor -> items;
typedict2tensor -> _get_tensor_params;
typedict2tensor -> Exception;
typedict2tensor -> get_type_hints;
_map_type -> Exception;
_get_tensor_params -> get_origin;
_get_tensor_params -> _map_type;
_get_tensor_params -> get_args;
nemo_checkpoint_version -> isdir;
nemo_checkpoint_version -> Path;
nemo_checkpoint_version -> TarPath;
nemo_checkpoint_version -> exists;
str_list2numpy -> encode;
str_list2numpy -> array;
str_ndarray2list -> astype;
str_ndarray2list -> decode;
str_ndarray2list -> squeeze;
str_ndarray2list -> tolist;
ndarray2img -> fromarray;
cast_output -> isinstance;
cast_output -> astype;
cast_output -> numpy;
cast_output -> array;
cast_output -> cpu;
cast_output -> encode;
broadcast_list -> broadcast_object_list;
broadcast_list -> is_initialized;
broadcast_list -> RuntimeError;
broadcast_list -> get_rank;
setup_media -> VideoReader;
setup_media -> array;
setup_media -> asnumpy;
setup_media -> frame_len;
setup_media -> get_subsampled_frames;
setup_media -> expand_dims;
setup_media -> startswith;
setup_media -> get;
setup_media -> convert;
setup_media -> read;
setup_media -> RuntimeError;
setup_media -> open;
setup_media -> BytesIO;
setup_media -> len;
frame_len -> len;
frame_len -> int;
frame_len -> ceil;
frame_len -> round;
frame_len -> float;
get_subsampled_frames -> astype;
get_subsampled_frames -> round;
get_subsampled_frames -> linspace;
get_subsampled_frames -> len;
_load -> cuda;
_load -> from_pretrained;
_load -> ValueError;
_load -> format;
_load -> pop;
_load -> exists;
_load -> listdir;
_load -> Path;
_load -> len;
_load -> _load_config_file;
_load -> get_tokenizer;
_load -> load;
_load -> _load_prompt_tables;
_load -> RuntimeError;
_load -> join;
_load -> open;
_load -> SimpleNamespace;
_load -> TRTLLMRunner;
_load -> MultimodalModelRunner;
_load -> SpeechllmModelRunner;
_load -> set_level;
_load -> mpi_rank;
_load -> SamplingConfig;
_load -> from_dir;
_load -> print;
_load -> warning;
get_triton_input -> Tensor;
get_triton_input -> NotImplementedError;
get_triton_input -> tuple;
get_triton_input -> get_input_media_tensors;
get_triton_output -> Tensor;
get_triton_output -> NotImplementedError;
triton_infer_fn -> str_ndarray2list;
triton_infer_fn -> int;
triton_infer_fn -> is_initialized;
triton_infer_fn -> generate;
triton_infer_fn -> isinstance;
triton_infer_fn -> pop;
triton_infer_fn -> format;
triton_infer_fn -> cast_output;
triton_infer_fn -> get_world_size;
triton_infer_fn -> broadcast;
triton_infer_fn -> broadcast_list;
triton_infer_fn -> keys;
triton_infer_fn -> transpose;
triton_infer_fn -> str;
triton_infer_fn -> tensor;
triton_infer_fn -> numpy;
triton_infer_fn -> len;
triton_infer_fn -> append;
triton_infer_fn -> array;
triton_infer_fn -> detach;
triton_infer_fn -> cpu;
triton_infer_fn -> first_value;
triton_infer_fn -> CommonInferenceParams;
triton_infer_fn -> remove_eos_token;
triton_infer_fn -> str_to_dict;
triton_infer_fn -> apply_chat_template;
triton_infer_fn -> NotImplementedError;
triton_infer_fn -> decode;
triton_infer_fn -> tolist;
triton_infer_fn -> forward;
triton_infer_fn -> astype;
triton_infer_fn -> _pad_logits;
triton_infer_fn -> unsqueeze;
triton_infer_fn -> Exception;
triton_infer_fn -> run;
triton_infer_fn -> ndarray2img;
triton_infer_fn -> range;
triton_infer_fn -> _forward_regular;
triton_infer_fn -> _add_triton_request_to_engine;
triton_infer_fn -> dict;
triton_infer_fn -> ones;
triton_infer_fn -> mean;
noop_decorator -> func;
get_deployable -> nemo_checkpoint_version;
get_deployable -> MegatronLLMDeployableNemo2;
get_deployable -> Exception;
remove_eos_token -> append;
remove_eos_token -> rsplit;
str_to_dict -> loads;
query_llm_streaming -> str_list2numpy;
query_llm_streaming -> full;
query_llm_streaming -> encode;
query_llm_streaming -> DecoupledModelClient;
query_llm_streaming -> infer_batch;
query_llm_streaming -> len;
query_llm_streaming -> decode;
query_llm_streaming -> astype;
health_check -> get;
check_triton_health -> get;
check_triton_health -> info;
check_triton_health -> str;
check_triton_health -> HTTPException;
convert_numpy -> isinstance;
convert_numpy -> tolist;
convert_numpy -> convert_numpy;
convert_numpy -> items;
_helper_fun -> NemoQueryLLMPyTorch;
_helper_fun -> query_llm;
query_llm_async -> get_event_loop;
query_llm_async -> ThreadPoolExecutor;
query_llm_async -> run_in_executor;
completions_v1 -> post;
completions_v1 -> info;
completions_v1 -> convert_numpy;
completions_v1 -> isinstance;
completions_v1 -> query_llm_async;
completions_v1 -> NemoQueryLLM;
completions_v1 -> query_llm;
completions_v1 -> str;
completions_v1 -> error;
dict_to_str -> dumps;
chat_completions_v1 -> post;
chat_completions_v1 -> info;
chat_completions_v1 -> convert_numpy;
chat_completions_v1 -> isinstance;
chat_completions_v1 -> dict_to_str;
chat_completions_v1 -> query_llm_async;
set_greedy_params -> model_validator;
set_greedy_params -> warning;
_load_runtime -> exists;
_load_runtime -> InferenceSession;
_load_runtime -> from_pretrained;
_load_runtime -> Path;
_load_runtime -> get_inputs;
_load_runtime -> get_outputs;
is_nemo2_checkpoint -> Path;
is_nemo2_checkpoint -> is_dir;
_load_hf_model -> eval;
_load_hf_model -> from_pretrained;
_export_to_onnx -> isinstance;
_export_to_onnx -> to;
_export_to_onnx -> mkdir;
_export_to_onnx -> info;
_export_to_onnx -> save_pretrained;
_export_to_onnx -> get_example_inputs;
_export_to_onnx -> tensor;
_export_to_onnx -> autocast;
_export_to_onnx -> export;
_export_to_onnx -> Path;
_export_to_onnx -> get_model_device_type;
get_example_inputs -> dict;
get_example_inputs -> tokenizer;
get_model_device_type -> union;
get_model_device_type -> len;
get_model_device_type -> ValueError;
get_model_device_type -> pop;
get_model_device_type -> parameters;
get_model_device_type -> buffers;
export_onnx_to_trt -> info;
export_onnx_to_trt -> Logger;
export_onnx_to_trt -> Builder;
export_onnx_to_trt -> create_network;
export_onnx_to_trt -> create_builder_config;
export_onnx_to_trt -> OnnxParser;
export_onnx_to_trt -> build_serialized_network;
export_onnx_to_trt -> Path;
export_onnx_to_trt -> mkdir;
export_onnx_to_trt -> write_bytes;
export_onnx_to_trt -> parse_from_file;
export_onnx_to_trt -> warning;
export_onnx_to_trt -> range;
export_onnx_to_trt -> set_flag;
export_onnx_to_trt -> _override_layernorm_precision_to_fp32;
export_onnx_to_trt -> _override_layers_to_fp32;
export_onnx_to_trt -> Exception;
export_onnx_to_trt -> int;
export_onnx_to_trt -> error;
export_onnx_to_trt -> create_optimization_profile;
export_onnx_to_trt -> add_optimization_profile;
export_onnx_to_trt -> validate_fp8_network;
export_onnx_to_trt -> ValueError;
export_onnx_to_trt -> get_error;
export_onnx_to_trt -> get_input;
export_onnx_to_trt -> set_shape;
_override_layernorm_precision_to_fp32 -> enumerate;
_override_layernorm_precision_to_fp32 -> items;
_override_layernorm_precision_to_fp32 -> range;
_override_layernorm_precision_to_fp32 -> all;
_override_layernorm_precision_to_fp32 -> getattr;
_override_layernorm_precision_to_fp32 -> get_layer;
_override_layernorm_precision_to_fp32 -> _override_layer_precision_to_fp32;
_override_layernorm_precision_to_fp32 -> output_type_is_set;
_override_layernorm_precision_to_fp32 -> get_input;
_override_layernorm_precision_to_fp32 -> get_output_type;
_override_layers_to_fp32 -> range;
_override_layers_to_fp32 -> get_layer;
_override_layers_to_fp32 -> any;
_override_layers_to_fp32 -> info;
_override_layers_to_fp32 -> startswith;
_override_layers_to_fp32 -> get_output_type;
_override_layers_to_fp32 -> set_output_type;
_override_layers_to_fp32 -> get_input;
validate_fp8_network -> Counter;
validate_fp8_network -> ValueError;
validate_fp8_network -> append;
_override_layer_precision_to_fp32 -> set_output_type;
bos_token_id -> bos_id;
bos_token_id -> tokens_to_ids;
eos_token_id -> eos_id;
eos_token_id -> tokens_to_ids;
unpack_tarball -> open;
unpack_tarball -> extractall;
__truediv__ -> TarPath;
__truediv__ -> join;
__truediv__ -> UnavailableError;
suffix -> rfind;
suffix -> len;
rglob -> getmembers;
rglob -> split;
rglob -> range;
rglob -> startswith;
rglob -> len;
rglob -> join;
rglob -> fnmatch;
rglob -> TarPath;
__contains__ -> is_file;
__contains__ -> any;
__contains__ -> values;
__contains__ -> dir;
__contains__ -> hasattr;
__contains__ -> callable;
__contains__ -> getattr;
__contains__ -> startswith;
__delitem__ -> NotImplementedError;
__delitem__ -> UnavailableError;
get_profile_shapes -> scale_batch_size;
cuassert -> RuntimeError;
cuassert -> len;
make_tensor -> isinstance;
make_tensor -> cuda;
make_tensor -> tensor;
unroll_input -> isinstance;
unroll_input -> range;
unroll_input -> make_tensor;
unroll_input -> len;
parse_groups -> tuple;
parse_groups -> range;
parse_groups -> len;
parse_groups -> ValueError;
trt_forward -> forward;
wrap -> hasattr;
wrap -> TrtCompiler;
wrap -> MethodType;
find_sub -> find;
find_sub -> getattr;
find_sub -> find_sub;
set_inputs -> infer_shapes;
set_inputs -> len;
set_inputs -> get;
set_inputs -> try_set_inputs;
set_inputs -> contiguous;
set_inputs -> set_input_shape;
set_inputs -> set_tensor_address;
set_inputs -> set_optimization_profile_async;
set_inputs -> data_ptr;
try_set_inputs -> get;
try_set_inputs -> contiguous;
try_set_inputs -> set_input_shape;
try_set_inputs -> set_tensor_address;
try_set_inputs -> data_ptr;
_inputs_to_dict -> enumerate;
_load_engine -> TRTEngine;
_load_engine -> info;
_load_engine -> startswith;
_build_and_save -> add_casts_around_norms;
_build_and_save -> replace_for_export;
_build_and_save -> list;
_build_and_save -> convert_method_to_trt_engine;
_build_and_save -> get_dynamic_axes;
_build_and_save -> write;
_build_and_save -> append;
_build_and_save -> values;
_build_and_save -> get_profile_shapes;
_build_and_save -> Input;
_build_and_save -> get_torch_trt_input;
_build_and_save -> items;
_build_and_save -> len;
_build_and_save -> update;
_build_and_save -> TemporaryDirectory;
_build_and_save -> get;
_build_and_save -> str;
_build_and_save -> info;
_build_and_save -> export;
_build_and_save -> _onnx_to_trt;
_build_and_save -> ValueError;
_build_and_save -> fold_constants;
_build_and_save -> save_onnx;
_build_and_save -> open;
_build_and_save -> isinstance;
_build_and_save -> range;
_build_and_save -> keys;
_build_and_save -> Path;
_build_and_save -> onnx_from_path;
_build_and_save -> add_profile;
_build_and_save -> unroll_input;
_onnx_to_trt -> copy;
_onnx_to_trt -> info;
_onnx_to_trt -> network_from_onnx_path;
_onnx_to_trt -> engine_bytes_from_network;
_onnx_to_trt -> Profile;
_onnx_to_trt -> items;
_onnx_to_trt -> append;
_onnx_to_trt -> add;
_onnx_to_trt -> CreateConfig;
add_casts_around_norms -> replace_modules;
add_casts_around_norms -> wrap_module;
get_torch_trt_input -> get_profile_shapes;
get_torch_trt_input -> Input;
add_profile -> len;
prepare_directory_for_export -> Path;
prepare_directory_for_export -> exists;
prepare_directory_for_export -> mkdir;
prepare_directory_for_export -> rmtree;
prepare_directory_for_export -> any;
prepare_directory_for_export -> iterdir;
prepare_directory_for_export -> RuntimeError;
is_rank -> mpi_rank;
is_rank -> isinstance;
is_rank -> ValueError;
is_rank -> type;
is_qnemo_checkpoint -> isdir;
is_qnemo_checkpoint -> Path;
is_qnemo_checkpoint -> TarPath;
is_qnemo_checkpoint -> format;
is_qnemo_checkpoint -> exists;
_export_to_nim_format -> join;
_export_to_nim_format -> isfile;
_export_to_nim_format -> get;
_export_to_nim_format -> copy;
_export_to_nim_format -> open;
_export_to_nim_format -> dump;
_export_to_nim_format -> write;
qnemo_to_tensorrt_llm -> warn;
qnemo_to_tensorrt_llm -> len;
qnemo_to_tensorrt_llm -> from_json_file;
qnemo_to_tensorrt_llm -> replace;
qnemo_to_tensorrt_llm -> print;
qnemo_to_tensorrt_llm -> run;
qnemo_to_tensorrt_llm -> glob;
qnemo_to_tensorrt_llm -> join;
qnemo_to_tensorrt_llm -> format;
load_nemo_model -> nemo_to_path;
load_nemo_model -> exists;
load_nemo_model -> TypeError;
load_nemo_model -> UnpackedNemoCheckpointDir;
load_nemo_model -> isinstance;
load_nemo_model -> load_distributed_model_weights;
load_nemo_model -> close;
load_nemo_model -> get;
load_nemo_model -> from_pretrained;
load_nemo_model -> update_tokenizer_paths;
load_nemo_model -> copy_tokenizer_files;
load_nemo_model -> build_tokenizer;
load_nemo_model -> copytree;
load_nemo_model -> Exception;
load_nemo_model -> items;
load_nemo_model -> load_context;
load_nemo_model -> open;
load_nemo_model -> safe_load;
load_nemo_model -> rsplit;
get_weights_dtype -> load_nemo_config;
get_weights_dtype -> removeprefix;
get_weights_dtype -> info;
get_weights_dtype -> warning;
get_weights_dtype -> get;
get_weights_dtype -> str;
get_weights_dtype -> torch_dtype_from_precision;
determine_quantization_settings -> get;
get_transformer_config -> get;
get_transformer_config -> TransformerConfig;
model_to_trtllm_ckpt -> determine_quantization_settings;
model_to_trtllm_ckpt -> get;
model_to_trtllm_ckpt -> range;
model_to_trtllm_ckpt -> info;
model_to_trtllm_ckpt -> dist_model_to_trt_llm_ckpt;
model_to_trtllm_ckpt -> convert_model_to_trt_llm_ckpt;
model_to_trtllm_ckpt -> non_gated_version;
model_to_trtllm_ckpt -> append;
model_to_trtllm_ckpt -> Mapping;
model_to_trtllm_ckpt -> pp_layers;
model_to_trtllm_ckpt -> items;
model_to_trtllm_ckpt -> is_first_pp_rank;
model_to_trtllm_ckpt -> is_last_pp_rank;
model_to_trtllm_ckpt -> get_config;
model_to_trtllm_ckpt -> pad_vocab_size;
model_to_trtllm_ckpt -> pad;
model_to_trtllm_ckpt -> split;
model_to_trtllm_ckpt -> float;
model_to_trtllm_ckpt -> endswith;
model_to_trtllm_ckpt -> int;
model_to_trtllm_ckpt -> replace;
model_to_trtllm_ckpt -> contiguous;
build_and_save_engine -> set_level;
build_and_save_engine -> PluginConfig;
build_and_save_engine -> check_max_num_tokens;
build_and_save_engine -> from_dict;
build_and_save_engine -> from_config;
build_and_save_engine -> optimize_model;
build_and_save_engine -> preprocess_weights;
build_and_save_engine -> load;
build_and_save_engine -> build_trtllm;
build_and_save_engine -> save;
build_and_save_engine -> getattr;
build_and_save_engine -> enable_paged_kv_cache;
build_and_save_engine -> LoraConfig;
build_and_save_engine -> AttributeError;
export_hf_model -> info;
export_hf_model -> prepare_directory_for_export;
export_hf_model -> PluginConfig;
export_hf_model -> check_max_num_tokens;
export_hf_model -> from_dict;
export_hf_model -> range;
export_hf_model -> glob;
export_hf_model -> _load;
export_hf_model -> ValueError;
export_hf_model -> get_hf_model_dtype;
export_hf_model -> print;
export_hf_model -> enable_paged_kv_cache;
export_hf_model -> Mapping;
export_hf_model -> from_hugging_face;
export_hf_model -> build_trtllm;
export_hf_model -> save;
export_hf_model -> join;
export_hf_model -> copy;
export_hf_model -> keys;
get_hf_model_dtype -> Path;
get_hf_model_dtype -> exists;
get_hf_model_dtype -> FileNotFoundError;
get_hf_model_dtype -> open;
get_hf_model_dtype -> load;
get_hf_model_dtype -> ValueError;
get_hf_model_dtype -> RuntimeError;
get_hf_model_dtype -> str;
convert_to_safe_tensors -> exists;
convert_to_safe_tensors -> mkdir;
convert_to_safe_tensors -> mpi_rank;
convert_to_safe_tensors -> TemporaryDirectory;
convert_to_safe_tensors -> Path;
convert_to_safe_tensors -> load_nemo_model;
convert_to_safe_tensors -> model_to_trtllm_ckpt;
convert_to_safe_tensors -> zip;
convert_to_safe_tensors -> to_json_file;
convert_to_safe_tensors -> join;
convert_to_safe_tensors -> cleanup;
convert_to_safe_tensors -> mpi_world_size;
convert_to_safe_tensors -> mpi_barrier;
convert_to_safe_tensors -> listdir;
convert_to_safe_tensors -> items;
convert_to_safe_tensors -> save_file;
convert_to_safe_tensors -> copy;
convert_to_safe_tensors -> len;
convert_to_safe_tensors -> Exception;
convert_to_safe_tensors -> isinstance;
convert_to_safe_tensors -> save_pretrained;
convert_to_safe_tensors -> rmtree;
convert_to_safe_tensors -> numpy_to_torch;
convert_to_safe_tensors -> remove;
gather_and_reshard_model -> get_tensor_model_parallel_world_size;
gather_and_reshard_model -> get_pipeline_model_parallel_rank;
gather_and_reshard_model -> get_pipeline_model_parallel_first_rank;
gather_and_reshard_model -> get_pipeline_model_parallel_last_rank;
gather_and_reshard_model -> get_pipeline_model_parallel_world_size;
gather_and_reshard_model -> get_pipeline_model_parallel_group;
gather_and_reshard_model -> get_virtual_pipeline_model_parallel_world_size;
gather_and_reshard_model -> update;
gather_and_reshard_model -> enumerate;
gather_and_reshard_model -> ValueError;
gather_and_reshard_model -> split;
gather_and_reshard_model -> int;
gather_and_reshard_model -> str;
gather_and_reshard_model -> join;
gather_and_reshard_model -> info;
gather_and_reshard_model -> items;
gather_and_reshard_model -> get;
gather_and_reshard_model -> broadcast_object_list;
gather_and_reshard_model -> broadcast;
gather_and_reshard_model -> get_tensor_if_available;
gather_and_reshard_model -> _get_layer_index;
gather_and_reshard_model -> NotImplementedError;
gather_and_reshard_model -> all_gather;
gather_and_reshard_model -> range;
gather_and_reshard_model -> get_rank;
gather_and_reshard_model -> cuda;
gather_and_reshard_model -> contiguous;
gather_and_reshard_model -> state_dict;
gather_and_reshard_model -> is_tensor;
gather_and_reshard_model -> zeros_like;
gather_and_reshard_model -> rename_layer_num;
gather_and_reshard_model -> get_layer_num;
gather_and_reshard_model -> empty;
get_tensor_if_available -> get;
get_tensor_if_available -> broadcast_object_list;
get_tensor_if_available -> broadcast;
get_tensor_if_available -> get_rank;
get_tensor_if_available -> cuda;
get_tensor_if_available -> contiguous;
get_tensor_if_available -> empty;
_get_layer_index -> enumerate;
_get_layer_index -> ValueError;
rename_layer_num -> split;
rename_layer_num -> int;
rename_layer_num -> str;
rename_layer_num -> join;
rename_layer_num -> _get_layer_index;
get_layer_num -> split;
get_layer_num -> int;
get_layer_num -> _get_layer_index;
get_nemo_to_trtllm_conversion_dict -> get_layer_prefix;
get_nemo_to_trtllm_conversion_dict -> items;
get_nemo_to_trtllm_conversion_dict -> keys;
get_layer_prefix -> split;
get_layer_prefix -> startswith;
init_model_parallel_from_nemo -> get_pipeline_model_parallel_world_size;
init_model_parallel_from_nemo -> get_tensor_model_parallel_world_size;
init_model_parallel_from_nemo -> get_data_parallel_world_size;
init_model_parallel_from_nemo -> get_tensor_model_parallel_rank;
init_model_parallel_from_nemo -> get_pipeline_model_parallel_rank;
init_model_parallel_from_nemo -> get_data_parallel_rank;
init_model_parallel_from_nemo -> split;
init_model_parallel_from_nemo -> Split;
init_model_parallel_from_nemo -> get_rank;
init_model_parallel_from_nemo -> mpi_comm;
load_distributed -> isinstance;
load_distributed -> parse_file;
load_distributed -> range;
load_distributed -> from_buffer;
load_distributed -> from_engine;
load_distributed -> Path;
load_distributed -> append;
load_distributed -> open;
load_distributed -> bytearray;
load_distributed -> read;
load_distributed -> RuntimeError;
load_distributed -> pop;
load_distributed -> current_device;
load_distributed -> get_rank;
dist_model_to_trt_llm_ckpt -> no_grad;
dist_model_to_trt_llm_ckpt -> get_tensor_model_parallel_rank;
dist_model_to_trt_llm_ckpt -> get_tensor_model_parallel_world_size;
dist_model_to_trt_llm_ckpt -> get_tensor_model_parallel_group;
dist_model_to_trt_llm_ckpt -> get_pipeline_model_parallel_rank;
dist_model_to_trt_llm_ckpt -> get_pipeline_model_parallel_first_rank;
dist_model_to_trt_llm_ckpt -> get_pipeline_model_parallel_last_rank;
dist_model_to_trt_llm_ckpt -> get_pipeline_model_parallel_world_size;
dist_model_to_trt_llm_ckpt -> get_pipeline_model_parallel_group;
dist_model_to_trt_llm_ckpt -> is_pipeline_last_stage;
dist_model_to_trt_llm_ckpt -> is_pipeline_first_stage;
dist_model_to_trt_llm_ckpt -> get_virtual_pipeline_model_parallel_world_size;
dist_model_to_trt_llm_ckpt -> get;
dist_model_to_trt_llm_ckpt -> torch_dtype_from_precision;
dist_model_to_trt_llm_ckpt -> get_layer_prefix;
dist_model_to_trt_llm_ckpt -> extract_layers_with_prefix;
dist_model_to_trt_llm_ckpt -> items;
dist_model_to_trt_llm_ckpt -> tqdm;
dist_model_to_trt_llm_ckpt -> info;
dist_model_to_trt_llm_ckpt -> state_dict;
dist_model_to_trt_llm_ckpt -> enumerate;
dist_model_to_trt_llm_ckpt -> append;
dist_model_to_trt_llm_ckpt -> broadcast_object_list;
dist_model_to_trt_llm_ckpt -> try_get_model_level_weight;
dist_model_to_trt_llm_ckpt -> get_remove_vocab_padding;
dist_model_to_trt_llm_ckpt -> save_val;
dist_model_to_trt_llm_ckpt -> split_and_save_weight;
dist_model_to_trt_llm_ckpt -> NotImplementedError;
dist_model_to_trt_llm_ckpt -> is_tensor;
dist_model_to_trt_llm_ckpt -> all_gather;
dist_model_to_trt_llm_ckpt -> range;
dist_model_to_trt_llm_ckpt -> startswith;
dist_model_to_trt_llm_ckpt -> get_rank;
dist_model_to_trt_llm_ckpt -> isinstance;
dist_model_to_trt_llm_ckpt -> broadcast_item;
dist_model_to_trt_llm_ckpt -> broadcast;
dist_model_to_trt_llm_ckpt -> get_layer_name;
dist_model_to_trt_llm_ckpt -> vocab_range_from_global_vocab_size;
dist_model_to_trt_llm_ckpt -> list;
dist_model_to_trt_llm_ckpt -> zeros;
dist_model_to_trt_llm_ckpt -> all_reduce;
dist_model_to_trt_llm_ckpt -> zeros_like;
dist_model_to_trt_llm_ckpt -> rename_layer_num;
dist_model_to_trt_llm_ckpt -> cuda;
dist_model_to_trt_llm_ckpt -> contiguous;
dist_model_to_trt_llm_ckpt -> size;
dist_model_to_trt_llm_ckpt -> get_layer_num;
dist_model_to_trt_llm_ckpt -> rename_key;
dist_model_to_trt_llm_ckpt -> current_device;
_get_prompt_embedding_table -> cuda;
_get_prompt_embedding_table -> warning;
_get_prompt_embedding_table -> from_numpy;
_get_prompt_embedding_table -> size;
_get_prompt_embedding_table -> Exception;
_get_prompt_embedding_table -> isinstance;
_get_prompt_embedding_table -> TypeError;
_get_prompt_embedding_table -> len;
_get_prompt_embedding_table -> _get_prompt_embedding_table_ckpt;
_get_prompt_embedding_table -> to;
_get_prompt_embedding_table -> format;
_get_prompt_embedding_table -> is_nemo_tarfile;
_get_prompt_embedding_table -> str_dtype_to_torch;
generate_streaming -> prepare_input_tensors;
generate_streaming -> len;
generate_streaming -> forward;
generate_streaming -> IntTensor;
generate_streaming -> to;
generate_streaming -> encode;
generate_streaming -> current_device;
generate_streaming -> range;
generate_streaming -> repeat;
generate_streaming -> append;
generate_streaming -> batch_decode;
generate_streaming -> unsqueeze;
add_prompt_table -> _get_prompt_embedding_table;
add_prompt_table -> append;
add_prompt_table -> _prep_ptuning_table;
add_prompt_table -> Exception;
add_prompt_table -> open;
add_prompt_table -> dump;
add_prompt_table -> join;
add_prompt_table -> format;
_prep_ptuning_table -> enumerate;
_prep_ptuning_table -> size;
_prep_ptuning_table -> zeros;
_prep_ptuning_table -> append;
_prep_ptuning_table -> len;
_prep_ptuning_table -> view;
_prep_ptuning_table -> Exception;
_prep_ptuning_table -> stack;
remove_prompt_table -> range;
remove_prompt_table -> _prep_ptuning_table;
remove_prompt_table -> len;
remove_prompt_table -> pop;
remove_prompt_table -> open;
remove_prompt_table -> dump;
remove_prompt_table -> join;
_pad_logits -> max;
_pad_logits -> enumerate;
_pad_logits -> pad;
triton_infer_fn_streaming -> first_value;
triton_infer_fn_streaming -> forward;
triton_infer_fn_streaming -> str_ndarray2list;
triton_infer_fn_streaming -> pop;
triton_infer_fn_streaming -> decode;
triton_infer_fn_streaming -> tolist;
triton_infer_fn_streaming -> format;
triton_infer_fn_streaming -> cast_output;
triton_infer_fn_streaming -> astype;
triton_infer_fn_streaming -> str;
triton_infer_fn_streaming -> len;
triton_infer_fn_streaming -> range;
triton_infer_fn_streaming -> _forward_streaming;
triton_infer_fn_streaming -> _add_triton_request_to_engine;
triton_infer_fn_streaming -> append;
_load_prompt_tables -> Path;
_load_prompt_tables -> exists;
_load_prompt_tables -> join;
_load_prompt_tables -> _prep_ptuning_table;
_load_prompt_tables -> open;
_load_prompt_tables -> load;
_get_prompt_embedding_table_ckpt -> TarPath;
_get_prompt_embedding_table_ckpt -> detach;
_get_prompt_embedding_table_ckpt -> exists;
_get_prompt_embedding_table_ckpt -> open;
_get_prompt_embedding_table_ckpt -> load;
_get_prompt_embedding_table_ckpt -> Exception;
_get_prompt_embedding_table_ckpt -> FileNotFoundError;
_get_prompt_embedding_table_ckpt -> format;
_get_prompt_embedding_table_ckpt -> cpu;
is_nemo_tarfile -> Path;
is_nemo_tarfile -> exists;
_load_config_file -> exists;
_load_config_file -> Path;
_load_config_file -> FileNotFoundError;
_load_config_file -> open;
_load_config_file -> load;
unload_engine -> unload_engine;
unload_engine -> info;
unload_engine -> isinstance;
unload_engine -> ValueError;
unload_engine -> type;
build_mllama_engine -> convert_mllama_nemo_to_hf;
build_mllama_engine -> MllamaForConditionalGeneration;
build_mllama_engine -> to;
build_mllama_engine -> load_state_dict;
build_mllama_engine -> TemporaryDirectory;
build_mllama_engine -> join;
build_mllama_engine -> save_pretrained;
build_mllama_engine -> build_mllama_visual_engine;
build_mllama_engine -> build_mllama_trtllm_engine;
build_trtllm_engine -> TensorRTLLM;
build_trtllm_engine -> export;
build_perception_engine -> load_perception_model;
build_perception_engine -> randn;
build_perception_engine -> tensor;
build_perception_engine -> feature_extractor;
build_perception_engine -> to;
build_perception_engine -> export;
build_perception_engine -> PerceptionWrapper;
build_perception_engine -> export_perception_wrapper_onnx;
build_perception_engine -> max;
build_perception_engine -> build_trt_engine;
build_perception_engine -> load;
build_perception_engine -> AudioPerceptionModule;
build_perception_engine -> load_state_dict;
build_perception_engine -> eval;
build_perception_engine -> exists;
build_perception_engine -> makedirs;
build_perception_engine -> disable_checks;
build_perception_engine -> join;
build_perception_engine -> __init__;
build_perception_engine -> encoder;
build_perception_engine -> modality_adapter;
build_perception_engine -> proj;
build_perception_engine -> transpose;
build_perception_engine -> super;
build_visual_engine -> build_neva_engine;
build_visual_engine -> build_video_neva_engine;
build_visual_engine -> RuntimeError;
extract_lora_ckpt -> exists;
extract_lora_ckpt -> join;
extract_lora_ckpt -> items;
extract_lora_ckpt -> load;
extract_lora_ckpt -> RuntimeError;
extract_lora_ckpt -> TemporaryDirectory;
extract_lora_ckpt -> save;
extract_lora_ckpt -> open;
extract_lora_ckpt -> add;
load_test_media -> convert;
load_test_media -> RuntimeError;
load_test_media -> open;
load_test_media -> read;
load_test_media -> array;
load_test_media -> len;
get_input_media_tensors -> Tensor;
_prepare_lora_checkpoints -> LoRAConfig;
_prepare_lora_checkpoints -> join;
_prepare_lora_checkpoints -> info;
_prepare_lora_checkpoints -> convert_lora_nemo_to_canonical;
_prepare_lora_checkpoints -> append;
_prepare_lora_checkpoints -> max;
_prepare_lora_checkpoints -> isfile;
_prepare_lora_checkpoints -> FileNotFoundError;
_prepare_lora_checkpoints -> len;
convert_and_store_nemo_weights -> isinstance;
convert_and_store_nemo_weights -> exists;
convert_and_store_nemo_weights -> _load_nemo_checkpoint_state;
convert_and_store_nemo_weights -> _standardize_nemo2_naming;
convert_and_store_nemo_weights -> info;
convert_and_store_nemo_weights -> save_file;
convert_and_store_nemo_weights -> convert_weights;
convert_lora_nemo_to_canonical -> TarPath;
convert_lora_nemo_to_canonical -> get;
convert_lora_nemo_to_canonical -> range;
convert_lora_nemo_to_canonical -> open;
convert_lora_nemo_to_canonical -> load;
convert_lora_nemo_to_canonical -> convert_lora_weights_to_canonical;
convert_lora_nemo_to_canonical -> reformat_module_names_to_hf;
convert_lora_nemo_to_canonical -> mkdir;
convert_lora_nemo_to_canonical -> save;
convert_lora_nemo_to_canonical -> dump;
convert_lora_nemo_to_canonical -> TemporaryDirectory;
convert_lora_nemo_to_canonical -> dirname;
convert_lora_nemo_to_canonical -> makedirs;
convert_lora_nemo_to_canonical -> items;
convert_lora_nemo_to_canonical -> Path;
convert_lora_nemo_to_canonical -> add;
convert_lora_nemo_to_canonical -> replace_number_add_offset;
convert_lora_nemo_to_canonical -> device;
_add_request_to_engine -> SamplingParams;
_add_request_to_engine -> str;
_add_request_to_engine -> add_request;
_add_request_to_engine -> LoRARequest;
_add_request_to_engine -> int;
_add_request_to_engine -> len;
_forward_regular -> len;
_forward_regular -> all;
_forward_regular -> step;
_forward_regular -> index;
_forward_streaming -> len;
_forward_streaming -> all;
_forward_streaming -> step;
_forward_streaming -> index;
_add_triton_request_to_engine -> _add_request_to_engine;
_add_triton_request_to_engine -> int;
_add_triton_request_to_engine -> decode;
build_mllama_trtllm_engine -> PluginConfig;
build_mllama_trtllm_engine -> enable_paged_kv_cache;
build_mllama_trtllm_engine -> check_max_num_tokens;
build_mllama_trtllm_engine -> from_dict;
build_mllama_trtllm_engine -> range;
build_mllama_trtllm_engine -> print;
build_mllama_trtllm_engine -> Mapping;
build_mllama_trtllm_engine -> from_hugging_face;
build_mllama_trtllm_engine -> build_trtllm;
build_mllama_trtllm_engine -> save;
export_visual_wrapper_onnx -> log;
export_visual_wrapper_onnx -> makedirs;
export_visual_wrapper_onnx -> export;
export_perception_wrapper_onnx -> log;
export_perception_wrapper_onnx -> makedirs;
export_perception_wrapper_onnx -> export;
build_neva_engine -> isdir;
build_neva_engine -> from_pretrained;
build_neva_engine -> to;
build_neva_engine -> empty;
build_neva_engine -> export_visual_wrapper_onnx;
build_neva_engine -> build_trt_engine;
build_neva_engine -> is_available;
build_neva_engine -> device;
build_neva_engine -> join;
build_neva_engine -> range;
build_neva_engine -> open;
build_neva_engine -> safe_load;
build_neva_engine -> load;
build_neva_engine -> TemporaryDirectory;
build_neva_engine -> Path;
build_neva_engine -> load_nemo_model;
build_neva_engine -> int;
build_neva_engine -> reshape;
build_neva_engine -> flat_square;
build_neva_engine -> size;
build_neva_engine -> view;
build_neva_engine -> contiguous;
build_neva_engine -> __init__;
build_neva_engine -> encoder;
build_neva_engine -> connector;
build_neva_engine -> load_state_dict;
build_neva_engine -> Linear;
build_neva_engine -> VisionEncoderWrapper;
build_neva_engine -> Sequential;
build_neva_engine -> ValueError;
build_neva_engine -> permute;
build_neva_engine -> super;
build_neva_engine -> GELU;
build_neva_engine -> cat;
build_neva_engine -> DownSampleBlock;
build_neva_engine -> LayerNorm;
build_neva_engine -> zeros;
build_video_neva_engine -> from_pretrained;
build_video_neva_engine -> Linear;
build_video_neva_engine -> load_state_dict;
build_video_neva_engine -> to;
build_video_neva_engine -> empty;
build_video_neva_engine -> export_visual_wrapper_onnx;
build_video_neva_engine -> build_trt_engine;
build_video_neva_engine -> is_available;
build_video_neva_engine -> device;
build_video_neva_engine -> open;
build_video_neva_engine -> safe_load;
build_video_neva_engine -> extractfile;
build_video_neva_engine -> load;
build_video_neva_engine -> __init__;
build_video_neva_engine -> view;
build_video_neva_engine -> encoder;
build_video_neva_engine -> connector;
build_video_neva_engine -> VisionEncoderWrapper;
build_video_neva_engine -> super;
load_perception_model -> load;
load_perception_model -> AudioPerceptionModule;
load_perception_model -> load_state_dict;
load_perception_model -> eval;
load_perception_model -> join;
build_mllama_visual_engine -> from_pretrained;
build_mllama_visual_engine -> MLLaMAVisionWrapper;
build_mllama_visual_engine -> new;
build_mllama_visual_engine -> to;
build_mllama_visual_engine -> export_visual_wrapper_onnx;
build_mllama_visual_engine -> copy;
build_mllama_visual_engine -> items;
build_mllama_visual_engine -> build_trt_engine;
build_mllama_visual_engine -> tuple;
build_mllama_visual_engine -> __init__;
build_mllama_visual_engine -> output_proj;
build_mllama_visual_engine -> processor;
build_mllama_visual_engine -> vision_model;
build_mllama_visual_engine -> list;
build_mllama_visual_engine -> super;
convert_mllama_nemo_to_hf -> from_pretrained;
convert_mllama_nemo_to_hf -> MegatronStrategy;
convert_mllama_nemo_to_hf -> Trainer;
convert_mllama_nemo_to_hf -> to_fabric;
convert_mllama_nemo_to_hf -> MLlamaModel;
convert_mllama_nemo_to_hf -> load_model;
convert_mllama_nemo_to_hf -> state_dict;
convert_mllama_nemo_to_hf -> range;
convert_mllama_nemo_to_hf -> update;
convert_mllama_nemo_to_hf -> MLlamaConfig11BInstruct;
convert_mllama_nemo_to_hf -> extend;
convert_mllama_nemo_to_hf -> convert_vision_qkv_weight;
convert_mllama_nemo_to_hf -> convert_patch_embeding;
convert_mllama_nemo_to_hf -> convert_language_qkv_weight;
convert_mllama_nemo_to_hf -> convert_gate;
convert_mllama_nemo_to_hf -> convert_embedding;
convert_mllama_nemo_to_hf -> convert_mllama_config;
convert_mllama_nemo_to_hf -> MegatronMixedPrecision;
convert_mllama_nemo_to_hf -> split_qkv_weight;
convert_mllama_nemo_to_hf -> reshape;
convert_mllama_nemo_to_hf -> split_gate_weight;
convert_mllama_nemo_to_hf -> cat;
convert_mllama_nemo_to_hf -> split_kv_weight;
split_qkv_weight -> reshape;
split_qkv_weight -> empty;
split_qkv_weight -> range;
split_kv_weight -> reshape;
split_kv_weight -> empty;
split_kv_weight -> range;
split_gate_weight -> chunk;
convert_mllama_config -> MllamaVisionConfig;
convert_mllama_config -> MllamaTextConfig;
convert_mllama_config -> MllamaConfig;
convert_mllama_config -> enumerate;
convert_mllama_config -> _init_fusion_schedule;
convert_vision_qkv_weight -> range;
convert_vision_qkv_weight -> split_qkv_weight;
convert_vision_qkv_weight -> reshape;
convert_patch_embeding -> reshape;
convert_language_qkv_weight -> range;
convert_language_qkv_weight -> split_kv_weight;
convert_language_qkv_weight -> split_qkv_weight;
convert_language_qkv_weight -> reshape;
convert_gate -> range;
convert_gate -> split_gate_weight;
convert_embedding -> cat;
trt_dtype_to_torch -> TypeError;
init_tokenizer -> exists;
init_tokenizer -> join;
init_tokenizer -> from_pretrained;
init_tokenizer -> SentencePieceProcessor;
init_tokenizer -> HFTokenizerInterface;
init_tokenizer -> eos_id;
init_tokenizer -> bos_id;
init_tokenizer -> pad_id;
init_tokenizer -> convert_tokens_to_ids;
init_tokenizer -> piece_to_id;
init_tokenizer -> encode;
init_tokenizer -> return_obj;
init_tokenizer -> decode;
init_tokenizer -> AttributeError;
init_tokenizer -> tensor;
init_tokenizer -> tolist;
init_tokenizer -> get_nmt_tokenizer;
init_llm -> from_dir;
init_llm -> mpi_rank;
init_image_encoder -> join;
init_image_encoder -> info;
init_image_encoder -> from_serialized_engine;
init_image_encoder -> open;
init_image_encoder -> read;
init_vision_preprocessor -> open;
init_vision_preprocessor -> safe_load;
init_vision_preprocessor -> from_pretrained;
init_vision_preprocessor -> join;
init_vision_preprocessor -> ValueError;
video_preprocess -> isinstance;
video_preprocess -> from_pretrained;
video_preprocess -> to;
video_preprocess -> unsqueeze;
video_preprocess -> VideoReader;
video_preprocess -> preprocess;
video_preprocess -> str_dtype_to_torch;
video_preprocess -> min;
video_preprocess -> linspace;
video_preprocess -> convert;
video_preprocess -> len;
video_preprocess -> fromarray;
video_preprocess -> asnumpy;
insert_tokens_by_index -> tolist;
insert_tokens_by_index -> range;
insert_tokens_by_index -> insert;
insert_tokens_by_index -> pop;
insert_tokens_by_index -> unsqueeze;
insert_tokens_by_index -> squeeze;
insert_tokens_by_index -> tensor;
insert_tokens_by_index -> nonzero;
setup_fake_prompts -> arange;
setup_fake_prompts -> reshape;
setup_fake_prompts -> to;
setup_fake_prompts -> ptuning_setup;
setup_fake_prompts -> hasattr;
setup_fake_prompts -> view;
setup_fake_prompts -> contiguous;
setup_fake_prompts -> cat;
get_visual_features -> infer_shapes;
get_visual_features -> run;
get_visual_features -> synchronize;
get_visual_features -> to;
get_visual_features -> TensorInfo;
get_visual_features -> append;
get_visual_features -> empty;
get_visual_features -> str_dtype_to_torch;
get_visual_features -> str_dtype_to_trt;
get_visual_features -> tuple;
get_visual_features -> ones;
get_visual_features -> trt_dtype_to_torch;
get_visual_features -> size;
tokenizer_image_token -> insert_separator;
tokenizer_image_token -> tensor;
tokenizer_image_token -> expand;
tokenizer_image_token -> append;
tokenizer_image_token -> extend;
tokenizer_image_token -> tokenizer;
tokenizer_image_token -> split;
tokenizer_image_token -> len;
tokenizer_image_token -> unsqueeze;
tokenizer_image_token -> zip;
split_prompt_by_images -> squeeze;
split_prompt_by_images -> append;
split_prompt_by_images -> len;
split_prompt_by_images -> nonzero;
split_prompt_by_images -> unsqueeze;
split_prompt_by_images -> numel;
setup_fake_prompts_vila -> to;
setup_fake_prompts_vila -> reshape;
setup_fake_prompts_vila -> ptuning_setup;
setup_fake_prompts_vila -> squeeze;
setup_fake_prompts_vila -> unsqueeze;
setup_fake_prompts_vila -> len;
setup_fake_prompts_vila -> enumerate;
setup_fake_prompts_vila -> contiguous;
setup_fake_prompts_vila -> arange;
setup_fake_prompts_vila -> append;
setup_fake_prompts_vila -> cat;
preprocess_lita_visual -> min;
preprocess_lita_visual -> astype;
preprocess_lita_visual -> reduce;
preprocess_lita_visual -> rearrange;
preprocess_lita_visual -> avg_pool2d;
preprocess_lita_visual -> ValueError;
preprocess_lita_visual -> round;
preprocess_lita_visual -> linspace;
insert_separator -> zip;
insert_separator -> len;
ptuning_setup -> cat;
ptuning_setup -> cuda;
ptuning_setup -> view;
ptuning_setup -> to;
ptuning_setup -> tensor;
ptuning_setup -> str_dtype_to_torch;
ptuning_setup -> empty;
ptuning_setup -> zeros;
ptuning_setup -> sum;
expand2square_pt -> len;
expand2square_pt -> Tensor;
expand2square_pt -> clone;
expand2square_pt -> repeat;
load_video -> isinstance;
load_video -> preprocess_frames;
load_video -> set_bridge;
load_video -> VideoReader;
load_video -> astype;
load_video -> get_batch;
load_video -> cat;
load_video -> tensor;
load_video -> round;
load_video -> linspace;
load_video -> asnumpy;
load_video -> len;
preprocess_frames -> rearrange;
preprocess_frames -> expand2square_pt;
preprocess_frames -> preprocess;
preprocess_frames -> tuple;
preprocess_frames -> int;
get_num_sample_frames -> int;
get_num_sample_frames -> ceil;
get_num_sample_frames -> round;
get_num_sample_frames -> float;
process_lita_video -> isinstance;
process_lita_video -> len;
process_lita_video -> get_num_sample_frames;
process_lita_video -> to;
process_lita_video -> VideoReader;
process_lita_video -> unsqueeze;
process_lita_video -> load_video;
process_vila_img -> all;
process_vila_img -> process_image;
process_vila_img -> stack;
setup_inputs -> to;
setup_inputs -> Compose;
setup_inputs -> unsqueeze;
setup_inputs -> process_lita_video;
setup_inputs -> process_vila_img;
setup_inputs -> video_preprocess;
setup_inputs -> dim;
setup_inputs -> contiguous;
setup_inputs -> Resize;
setup_inputs -> ToTensor;
setup_inputs -> Normalize;
setup_inputs -> RuntimeError;
setup_inputs -> expand;
setup_inputs -> transform;
setup_inputs -> process_audio;
setup_inputs -> isinstance;
setup_inputs -> len;
print_result -> info;
print_result -> range;
print_result -> tokenizer;
print_result -> lower;
print_result -> msec_per_batch;
print_result -> len;
print_result -> elapsed_time_in_sec;
print_result -> capitalize;
init_speech_preprocessor -> load;
init_speech_preprocessor -> eval;
init_modality_encoder -> listdir;
init_modality_encoder -> join;
init_modality_encoder -> info;
init_modality_encoder -> from_serialized_engine;
init_modality_encoder -> endswith;
init_modality_encoder -> open;
init_modality_encoder -> read;
get_modality_encoder_features -> items;
get_modality_encoder_features -> infer_shapes;
get_modality_encoder_features -> run;
get_modality_encoder_features -> synchronize;
get_modality_encoder_features -> append;
get_modality_encoder_features -> empty;
get_modality_encoder_features -> TensorInfo;
get_modality_encoder_features -> tuple;
get_modality_encoder_features -> torch_dtype_to_trt;
get_modality_encoder_features -> trt_dtype_to_torch;
_sample_output -> info;
_sample_output -> generate;
temporary_directory -> is_global_rank_zero;
temporary_directory -> broadcast_object_list;
temporary_directory -> barrier;
temporary_directory -> cleanup;
temporary_directory -> TemporaryDirectory;
save_artifacts -> AppState;
save_artifacts -> deepcopy;
save_artifacts -> isfile;
save_artifacts -> hasattr;
save_artifacts -> save_pretrained;
save_artifacts -> isdir;
save_artifacts -> model_file_handler;
save_artifacts -> items;
save_artifacts -> save;
save_artifacts -> FileNotFoundError;
save_artifacts -> detect_prefix;
save_artifacts -> split;
save_artifacts -> join;
save_artifacts -> update;
save_artifacts -> getnames;
save_artifacts -> extract;
save_artifacts -> rename;
save_artifacts -> copy;
save_artifacts -> abspath;
save_artifacts -> basename;
_read_config -> get;
_read_config -> ModelConfig;
_read_config -> open;
_read_config -> load;
_read_config -> device_count;
_read_config -> from_quant_algo;
_read_config -> QuantMode;
maybe_cast_to_trt_dtype -> isinstance;
maybe_cast_to_trt_dtype -> torch_dtype_to_trt;
maybe_cast_to_trt_dtype -> NotImplementedError;
maybe_cast_to_trt_dtype -> type;
prepare_input_tensors -> range;
prepare_input_tensors -> IntTensor;
prepare_input_tensors -> encode;
prepare_input_tensors -> len;
prepare_input_tensors -> list;
to_word_list_format -> encode;
to_word_list_format -> max;
to_word_list_format -> enumerate;
to_word_list_format -> transpose;
to_word_list_format -> isinstance;
to_word_list_format -> append;
to_word_list_format -> zip;
to_word_list_format -> pad;
to_word_list_format -> list;
to_word_list_format -> array;
to_word_list_format -> cumsum;
to_word_list_format -> decode;
to_word_list_format -> reader;
to_word_list_format -> warning;
to_word_list_format -> len;
unload -> TensorrtLLMWorkerContext;
unload -> shutdown;
prompt_convert -> enumerate;
prompt_convert -> max;
prompt_convert -> stack;
prompt_convert -> info;
prompt_convert -> get;
prompt_convert -> append;
prompt_convert -> zeros;
convert_model_to_trt_llm_ckpt -> no_grad;
convert_model_to_trt_llm_ckpt -> create_export_dir;
convert_model_to_trt_llm_ckpt -> str_dtype_to_torch;
convert_model_to_trt_llm_ckpt -> get;
convert_model_to_trt_llm_ckpt -> get_layer_prefix;
convert_model_to_trt_llm_ckpt -> defaultdict;
convert_model_to_trt_llm_ckpt -> handle_model_level_weights;
convert_model_to_trt_llm_ckpt -> extract_layers_with_prefix;
convert_model_to_trt_llm_ckpt -> load_scaling_factors;
convert_model_to_trt_llm_ckpt -> items;
convert_model_to_trt_llm_ckpt -> tqdm;
convert_model_to_trt_llm_ckpt -> update;
convert_model_to_trt_llm_ckpt -> keys;
convert_model_to_trt_llm_ckpt -> get_layer_name;
convert_model_to_trt_llm_ckpt -> concatenate;
convert_model_to_trt_llm_ckpt -> cpu;
convert_model_to_trt_llm_ckpt -> append;
convert_model_to_trt_llm_ckpt -> Pool;
convert_model_to_trt_llm_ckpt -> starmap;
convert_model_to_trt_llm_ckpt -> split_and_save_weight;
convert_model_to_trt_llm_ckpt -> len;
convert_model_to_trt_llm_ckpt -> range;
convert_model_to_trt_llm_ckpt -> pad_vocab_size;
convert_model_to_trt_llm_ckpt -> pad;
convert_model_to_trt_llm_ckpt -> to;
convert_model_to_trt_llm_ckpt -> size;
convert_model_to_trt_llm_ckpt -> rename_key_dist_ckpt;
extract_layers_with_prefix -> len;
extract_layers_with_prefix -> get;
extract_layers_with_prefix -> keys;
extract_layers_with_prefix -> startswith;
get_layer_name -> ValueError;
rename_key -> replace;
rename_key_dist_ckpt -> rename_key;
rename_key_dist_ckpt -> split;
rename_key_dist_ckpt -> insert;
rename_key_dist_ckpt -> join;
rename_key_dist_ckpt -> str;
load_scaling_factors -> items;
load_scaling_factors -> get;
load_scaling_factors -> is_scaling_factor;
load_scaling_factors -> range;
load_scaling_factors -> rename_key_dist_ckpt;
load_scaling_factors -> save_scaling_factor;
save_scaling_factor -> get_scaling_factor_keys;
save_scaling_factor -> get;
save_scaling_factor -> is_scaling_factor;
save_scaling_factor -> view;
save_scaling_factor -> any_word_in_key;
create_export_dir -> Path;
create_export_dir -> exists;
create_export_dir -> mkdir;
handle_model_level_weights -> cpu;
handle_model_level_weights -> append;
handle_model_level_weights -> get;
handle_model_level_weights -> get_layer_name;
handle_model_level_weights -> pad_vocab_size;
handle_model_level_weights -> pad;
handle_model_level_weights -> to;
split_and_save_weight -> no_grad;
split_and_save_weight -> get;
split_and_save_weight -> get_trt_llm_keyname;
split_and_save_weight -> cast_val_datatype;
split_and_save_weight -> isinstance;
split_and_save_weight -> is_tensor;
split_and_save_weight -> any_word_in_key;
split_and_save_weight -> save_val;
split_and_save_weight -> len;
split_and_save_weight -> float;
split_and_save_weight -> torch_to_numpy;
split_and_save_weight -> concatenate;
split_and_save_weight -> split;
split_and_save_weight -> save_split;
split_and_save_weight -> replace;
split_and_save_weight -> generate_int8;
split_and_save_weight -> write_int8;
split_and_save_weight -> cpu;
split_and_save_weight -> split_val_gate;
split_and_save_weight -> get_trt_llm_prefix;
split_and_save_weight -> get_suffix;
split_and_save_weight -> reshape;
split_and_save_weight -> FloatTensor;
split_and_save_weight -> range;
split_and_save_weight -> Exception;
split_and_save_weight -> save_expert_split;
split_and_save_weight -> format;
split_and_save_weight -> print;
split_and_save_weight -> zip;
try_get_model_level_weight -> get_rank;
try_get_model_level_weight -> isinstance;
try_get_model_level_weight -> broadcast_item;
try_get_model_level_weight -> broadcast;
try_get_model_level_weight -> get;
try_get_model_level_weight -> is_tensor;
try_get_model_level_weight -> cuda;
try_get_model_level_weight -> contiguous;
try_get_model_level_weight -> zeros;
get_remove_vocab_padding -> get;
get_remove_vocab_padding -> vocab_range_from_global_vocab_size;
get_remove_vocab_padding -> list;
get_remove_vocab_padding -> zeros;
get_remove_vocab_padding -> all_reduce;
get_remove_vocab_padding -> size;
get_remove_vocab_padding -> current_device;
save_val -> is_tensor;
save_val -> contiguous;
save_val -> copy_;
save_val -> len;
save_val -> reshape;
save_val -> transpose;
save_val -> empty;
save_val -> ascontiguousarray;
save_val -> detach;
save_val -> size;
broadcast_item -> broadcast_object_list;
save_split -> enumerate;
save_split -> save_val;
save_expert_split -> enumerate;
generate_int8 -> array;
generate_int8 -> broadcast_to;
generate_int8 -> astype;
generate_int8 -> to_i8;
generate_int8 -> numpy;
generate_int8 -> ValueError;
generate_int8 -> item;
generate_int8 -> clip;
generate_int8 -> cpu;
generate_int8 -> max;
generate_int8 -> round;
generate_int8 -> reshape;
to_i8 -> astype;
to_i8 -> clip;
to_i8 -> round;
write_int8 -> save_split;
write_int8 -> split;
write_int8 -> save_val;
get_suffix -> split;
get_trt_llm_prefix -> split;
any_word_in_key -> any;
sequential_key_map -> any_word_in_key;
get_trt_llm_infix -> sequential_key_map;
get_trt_llm_keyname -> any_word_in_key;
get_trt_llm_keyname -> replace;
get_trt_llm_keyname -> get_trt_llm_infix;
get_trt_llm_keyname -> get_suffix;
get_trt_llm_keyname -> get_trt_llm_prefix;
get_scaling_factor_keys -> get_trt_llm_keyname;
get_scaling_factor_keys -> join;
get_scaling_factor_keys -> get_trt_llm_prefix;
get_scaling_factor_keys -> split;
cast_val_datatype -> to;
cast_val_datatype -> split;
cast_val_datatype -> keys;
cast_val_datatype -> endswith;
split_val_gate -> list;
split_val_gate -> split;
split_val_gate -> zip;
split_val_gate -> chunk;
load_extra_state_from_bytes -> isinstance;
load_extra_state_from_bytes -> seek;
load_extra_state_from_bytes -> load;
load_extra_state_from_bytes -> tobytes;
load_extra_state_from_bytes -> loads;
load_extra_state_from_bytes -> numel;
load_extra_state_from_bytes -> numpy;
load_extra_state_from_bytes -> detach;
preprocess_scaling_factors_for_local_export -> items;
preprocess_scaling_factors_for_local_export -> load_extra_state_from_bytes;
preprocess_scaling_factors_for_local_export -> split;
preprocess_scaling_factors_for_local_export -> str;
preprocess_scaling_factors_for_local_export -> stack;
preprocess_scaling_factors_for_local_export -> cpu;
preprocess_scaling_factors_for_local_export -> append;
preprocess_scaling_factors_for_local_export -> join;
preprocess_scaling_factors_for_local_export -> get;
rename_extra_states -> items;
rename_extra_states -> split;
rename_extra_states -> replace;
rename_extra_states -> isinstance;
rename_extra_states -> isnumeric;
torch_to_numpy_state_dict -> items;
torch_to_numpy_state_dict -> view;
torch_to_numpy_state_dict -> numpy;
update_tokenizer_paths -> _update_config_entry;
update_tokenizer_paths -> get;
update_tokenizer_paths -> Path;
update_tokenizer_paths -> get_tokenizer_file_path;
update_tokenizer_paths -> debug;
update_tokenizer_paths -> exists;
update_tokenizer_paths -> warning;
_update_config_entry -> get;
_update_config_entry -> Path;
_update_config_entry -> get_tokenizer_file_path;
_update_config_entry -> debug;
_update_config_entry -> exists;
_update_config_entry -> warning;
get_tokenizer_file_path -> debug;
get_tokenizer_file_path -> startswith;
get_tokenizer_file_path -> list;
get_tokenizer_file_path -> split;
get_tokenizer_file_path -> glob;
get_tokenizer_file_path -> Path;
get_tokenizer_file_path -> warning;
get_tokenizer_file_path -> len;
copy_tokenizer_files -> keys;
copy_tokenizer_files -> isinstance;
copy_tokenizer_files -> str;
copy_tokenizer_files -> debug;
copy_tokenizer_files -> get;
copy_tokenizer_files -> Path;
copy_tokenizer_files -> exists;
copy_tokenizer_files -> open;
copy_tokenizer_files -> write;
copy_tokenizer_files -> read;
get_tokenizer_from_nemo2_context -> load_context;
get_tokenizer_from_nemo2_context -> build_tokenizer;
get_tokenizer_from_nemo2_context -> startswith;
get_tokenizer_from_nemo2_context -> removeprefix;
get_tokenizer_from_nemo2_context -> open;
get_tokenizer_from_nemo2_context -> safe_load;
get_tokenizer_from_nemo2_context -> SentencePieceTokenizer;
get_tokenizer_from_nemo2_context -> from_pretrained;
get_tokenizer_from_nemo2_context -> ValueError;
get_tokenizer_from_nemo2_context -> str;
get_tokenizer_from_nemo2_context -> get;
load_nemo_config -> is_dir;
load_nemo_config -> Path;
load_nemo_config -> TarPath;
load_nemo_config -> exists;
load_nemo_config -> UnpackedNemoCheckpointDir;
load_nemo_config -> open;
load_nemo_config -> safe_load;
load_model_weights -> nemo_to_path;
load_model_weights -> nemo_weights_directory;
load_model_weights -> NotImplementedError;
load_model_weights -> open;
load_model_weights -> load;
load_model_weights -> load_sharded_metadata_zarr;
load_model_weights -> _mock_import;
load_model_weights -> load_sharded_metadata_torch_dist;
nemo_to_path -> str;
nemo_to_path -> isdir;
nemo_to_path -> TarPath;
nemo_to_path -> Path;
cpu_map_location -> cpu;
gpu_map_location -> startswith;
gpu_map_location -> int;
gpu_map_location -> cuda;
gpu_map_location -> device_count;
gpu_map_location -> cpu;
gpu_map_location -> ValueError;
gpu_map_location -> split;
model_config -> list;
model_config -> debug;
model_config -> rglob;
model_config -> sorted;
model_config -> warning;
model_config -> len;
model_config -> open;
model_config -> load;
model_config -> safe_load;
model_config -> BertEmbeddingMiniConfig;
model_config -> type;
get_checkpoints_paths -> _inject_parallel_ranks;
get_checkpoints_paths -> range;
checkpoint_name -> ValueError;
checkpoint_name -> sorted;
checkpoint_name -> list;
checkpoint_name -> rglob;
replace_number_add_offset -> sub;
replace_number_add_offset -> str;
replace_number_add_offset -> int;
replace_number_add_offset -> group;
rename_qkv_keys -> append;
rename_qkv_keys -> replace;
reformat_module_names_to_hf -> dict;
reformat_module_names_to_hf -> set;
reformat_module_names_to_hf -> items;
reformat_module_names_to_hf -> replace;
reformat_module_names_to_hf -> list;
reformat_module_names_to_hf -> add;
convert_lora_weights_to_canonical -> int;
convert_lora_weights_to_canonical -> cat;
convert_lora_weights_to_canonical -> arange;
convert_lora_weights_to_canonical -> keys;
convert_lora_weights_to_canonical -> get;
convert_lora_weights_to_canonical -> pop;
convert_lora_weights_to_canonical -> replace;
convert_lora_weights_to_canonical -> append;
convert_lora_weights_to_canonical -> rename_qkv_keys;
convert_lora_weights_to_canonical -> range;
convert_lora_weights_to_canonical -> size;
convert_lora_weights_to_canonical -> zip;
convert_lora_weights_to_canonical -> split;
convert_lora_weights_to_canonical -> len;
convert_lora_weights_to_canonical -> reshape;
add_offset -> str;
add_offset -> int;
add_offset -> group;
load_sharded_metadata_torch_dist -> TarFileSystemReader;
load_sharded_metadata_torch_dist -> read_metadata;
load_sharded_metadata_torch_dist -> load;
load_sharded_metadata_torch_dist -> empty;
load_sharded_metadata_torch_dist -> update;
load_sharded_metadata_torch_dist -> items;
load_sharded_metadata_torch_dist -> isinstance;
load_sharded_pickle_extra_state_scale -> list;
load_sharded_pickle_extra_state_scale -> glob;
load_sharded_pickle_extra_state_scale -> split;
load_sharded_pickle_extra_state_scale -> open;
load_sharded_pickle_extra_state_scale -> load;
contains_extra_states -> list;
contains_extra_states -> glob;
load_sharded_metadata_zarr -> iterdir;
load_sharded_metadata_zarr -> add_safe_globals;
load_sharded_metadata_zarr -> is_dir;
load_sharded_metadata_zarr -> contains_extra_states;
load_sharded_metadata_zarr -> update;
load_sharded_metadata_zarr -> exists;
load_sharded_metadata_zarr -> load_sharded_pickle_extra_state_scale;
load_sharded_metadata_zarr -> ZarrPathStore;
load_sharded_metadata_zarr -> open;
load_sharded_metadata_zarr -> view;
load_sharded_metadata_zarr -> from_numpy;
nemo_weights_directory -> exists;
_mock_import -> import_module;
_mock_import -> warning;
_mock_import -> copy;
_mock_import -> DummyModule;
_mock_import -> split;
_mock_import -> append;
get_model_converter -> get;
get_model_converter -> cls;
_change_paths_to_absolute_paths -> get;
_change_paths_to_absolute_paths -> str;
_change_paths_to_absolute_paths -> exists;
_change_paths_to_absolute_paths -> resolve;
_load_hf_arguments -> items;
_load_hf_arguments -> isinstance;
_load_hf_arguments -> get;
convert_config -> get;
convert_config -> update_config_with_dtype_overrides;
convert_config -> BertConfig;
try_get_generation_config -> Path;
try_get_generation_config -> exists;
try_get_generation_config -> open;
try_get_generation_config -> load;
convert_weights -> range;
convert_weights -> get;
convert_weights -> int;
convert_weights -> reshape;
convert_weights -> cat;
convert_weights -> arange;
convert_weights -> chunk;
convert_weights -> empty;
convert_weights -> from_pretrained;
convert_weights -> OrderedDict;
convert_weights -> print;
convert_weights -> items;
convert_weights -> save;
convert_weights -> TemporaryDirectory;
convert_weights -> load;
convert_weights -> startswith;
convert_weights -> format;
convert_weights -> state_dict;
convert_weights -> join;
convert_weights -> len;
convert_weights -> ValueError;
convert_weights -> keys;
convert_weights -> split;
convert_weights -> _get_model_type_block_layer;
convert_weights -> replace;
_load_nemo_checkpoint_state -> info;
_load_nemo_checkpoint_state -> load_model_weights;
_standardize_nemo2_naming -> replace;
_standardize_nemo2_naming -> items;
load_weights -> range;
load_weights -> load;
load_weights -> save;
idempotent_path_append -> isinstance;
create_dataloader -> DataLoader;
setup_microbatch_calculator -> AppState;
setup_microbatch_calculator -> lower;
setup_microbatch_calculator -> warning;
setup_microbatch_calculator -> init_num_microbatches_calculator;
setup_microbatch_calculator -> isinstance;
setup_microbatch_calculator -> get;
setup_microbatch_calculator -> Exception;
setup_microbatch_calculator -> get_current_global_batch_size;
setup_microbatch_calculator -> get_micro_batch_size;
setup_microbatch_calculator -> get_num_microbatches;
add_megatron_sampler -> DataLoader;
add_megatron_sampler -> MegatronPretrainingSampler;
add_megatron_sampler -> _IndexBatchSamplerWrapper;
add_megatron_sampler -> MegatronPretrainingRandomSampler;
add_megatron_sampler -> len;
add_megatron_sampler -> MegatronPretrainingBatchSampler;
add_megatron_sampler -> Exception;
default_data_step -> next;
default_data_step -> move_data_to_device;
default_data_step -> get_context_parallel_world_size;
default_data_step -> ValueError;
default_data_step -> isinstance;
default_data_step -> current_device;
default_data_step -> len;
default_forward_step -> model;
extract_ddp_funcs -> getattr;
extract_ddp_funcs -> len;
getattr_proxy -> __getattr__;
getattr_proxy -> super;
getattr_proxy -> getattr;
getattr_proxy -> AttributeError;
_calc_number_of_trainable_params -> isinstance;
_calc_number_of_trainable_params -> sum;
_calc_number_of_trainable_params -> numel;
_calc_number_of_trainable_params -> parameters;
is_list_of_iterators -> all;
is_list_of_iterators -> isinstance;
masked_token_loss -> float;
masked_token_loss -> sum;
masked_token_loss -> view;
moe_loss_tracker_ctx -> reduce_aux_losses_tracker_across_ranks;
moe_loss_tracker_ctx -> clear_aux_losses_tracker;
aggregate_moe_loss_stats -> no_grad;
aggregate_moe_loss_stats -> moe_loss_tracker_ctx;
aggregate_moe_loss_stats -> get_moe_layer_wise_logging_tracker;
aggregate_moe_loss_stats -> items;
aggregate_moe_loss_stats -> item;
aggregate_moe_loss_stats -> float;
aggregate_moe_loss_stats -> mean;
reinit -> isinstance;
reinit -> build;
reinit -> reinit;
reinit -> hasattr;
reinit -> ValueError;
transform_event -> get;
transform_event -> getattr;
transform_event -> callable;
transform_event -> callback_method;
transform_event -> isinstance;
transform_event -> type;
event -> get;
event -> getattr;
event -> callable;
event -> signature;
event -> values;
event -> any;
event -> callback_method;
event -> items;
event -> zip;
wrapped_forward_step -> wraps;
wrapped_forward_step -> isinstance;
wrapped_forward_step -> _data_step;
wrapped_forward_step -> event;
wrapped_forward_step -> _forward_step;
wrapped_forward_step -> _setup_module;
wrapped_forward_step -> data_step;
wrapped_forward_step -> loss_reduction;
wrapped_forward_step -> forward_step;
wrapped_forward_step -> is_pipeline_first_stage;
wrapped_forward_step -> convert_input;
wrapped_forward_step -> is_pipeline_last_stage;
wrapped_forward_step -> convert_output;
from_data_step -> hasattr;
from_data_step -> _ModuleStepFunction;
from_forward_step -> is_pipeline_last_stage;
from_forward_step -> _ModuleStepFunction;
from_forward_step -> hasattr;
from_forward_step -> getattr;
from_forward_step -> ValueError;
from_loss_reduction -> hasattr;
from_loss_reduction -> _ModuleStepFunction;
_setup_module -> hasattr;
_setup_module -> setup;
_setup_module -> getfullargspec;
_setup_module -> items;
convert_input -> _convert;
convert_input -> isinstance;
convert_input -> convert_input;
convert_input -> items;
convert_input -> is_floating_point;
convert_input -> to;
convert_input -> super;
convert_input -> is_tensor;
apply_convert_module_fn -> range;
apply_convert_module_fn -> len;
apply_convert_module_fn -> convert_module_fn;
init_ddp -> enumerate;
init_ddp -> extract_ddp_funcs;
init_ddp -> isinstance;
init_ddp -> FunctionType;
init_ddp -> update;
init_ddp -> all;
init_ddp -> hasattr;
init_ddp -> init_ddp_context;
init_ddp -> unwrap_model;
init_ddp -> getattr;
init_ddp -> FullyShardedDataParallel;
init_ddp -> setattr;
init_ddp -> warning;
init_ddp -> DDP;
init_ddp -> parameters;
init_ddp -> get_data_parallel_group;
init_ddp -> get_data_modulo_expert_parallel_group;
teardown_ddp -> hasattr;
_call_module -> _setup_module;
_call_module -> function;
_call_module -> getfullargspec;
_call_module -> items;
_module_sharded_state_dict -> hasattr;
_module_sharded_state_dict -> ValueError;
_module_sharded_state_dict -> sharded_state_dict;
_module_sharded_state_dict -> join;
_module_sharded_state_dict -> _module_sharded_state_dict;
_module_sharded_state_dict -> pop;
enable_forward_pre_hook -> enable_forward_pre_hook;
enable_forward_pre_hook -> isinstance;
disable_forward_pre_hook -> disable_forward_pre_hook;
disable_forward_pre_hook -> isinstance;
force_param_sync -> start_param_sync;
force_param_sync -> isinstance;
__iadd__ -> items;
__iadd__ -> isinstance;
__iadd__ -> ValueError;
__iadd__ -> extend;
__iadd__ -> UnavailableError;
infer_micro_batch_size -> isinstance;
infer_micro_batch_size -> size;
infer_micro_batch_size -> infer_micro_batch_size;
infer_micro_batch_size -> next;
infer_micro_batch_size -> iter;
infer_micro_batch_size -> len;
infer_micro_batch_size -> values;
infer_seq_length -> isinstance;
infer_seq_length -> size;
infer_seq_length -> infer_seq_length;
infer_seq_length -> next;
infer_seq_length -> iter;
infer_seq_length -> len;
infer_seq_length -> values;
infer_num_microbatches -> isinstance;
get_data_iterator_and_seq_length -> to_data_iterator_list;
get_data_iterator_and_seq_length -> next;
get_data_iterator_and_seq_length -> get_iterator_k_split;
get_data_iterator_and_seq_length -> isinstance;
get_data_iterator_and_seq_length -> size;
get_data_iterator_and_seq_length -> chain;
get_data_iterator_and_seq_length -> len;
to_data_iterator_list -> isinstance;
to_data_iterator_list -> cast;
to_data_iterator_list -> _make_data_iterator_list;
to_data_iterator_list -> all;
to_data_iterator_list -> iter;
adjust_tensor_shapes_fn -> get_tensor_shapes_adjust_fn_for_distillation;
has_global_batch_sampler -> getattr;
has_global_batch_sampler -> isinstance;
wrapped_forward_step_func -> wraps;
wrapped_forward_step_func -> isinstance;
wrapped_forward_step_func -> _data_step;
wrapped_forward_step_func -> event;
wrapped_forward_step_func -> _forward_step;
wrapped_forward_step_func -> _setup_module;
wrapped_forward_step_func -> data_step;
wrapped_forward_step_func -> loss_reduction;
wrapped_forward_step_func -> forward_step;
wrapped_forward_step_func -> is_pipeline_first_stage;
wrapped_forward_step_func -> convert_input;
wrapped_forward_step_func -> is_pipeline_last_stage;
wrapped_forward_step_func -> convert_output;
_setup_files_to_move -> exists;
_setup_files_to_move -> iterdir;
_setup_files_to_move -> Path;
_setup_files_to_move -> is_file;
_setup_files_to_move -> append;
_setup_file_logging -> get_envbool;
_setup_file_logging -> add_handlers_to_mcore_logger;
_setup_file_logging -> add_file_handler;
_handle_task_config -> save_config_img;
_handle_task_config -> dump_json;
_handle_task_config -> open;
_handle_task_config -> write;
_handle_task_config -> warning;
_handle_task_config -> format;
_setup_trainer_loggers -> configure_logger;
_setup_trainer_loggers -> isinstance;
_setup_trainer_loggers -> warning;
_setup_trainer_loggers -> Path;
_setup_trainer_loggers -> relpath;
_setup_trainer_loggers -> format;
_setup_trainer_model_checkpoint -> enumerate;
_setup_trainer_model_checkpoint -> append;
_setup_trainer_model_checkpoint -> isinstance;
_setup_trainer_model_checkpoint -> warning;
_setup_trainer_model_checkpoint -> error;
_setup_trainer_model_checkpoint -> Path;
_setup_trainer_model_checkpoint -> format;
get_envbool -> get_env;
add_handlers_to_mcore_logger -> getLogger;
add_handlers_to_mcore_logger -> values;
add_handlers_to_mcore_logger -> setLevel;
add_handlers_to_mcore_logger -> addHandler;
add_file_handler -> FileHandler;
add_file_handler -> setFormatter;
add_file_handler -> addHandler;
add_file_handler -> get;
add_file_handler -> RuntimeError;
add_file_handler -> formatter;
add_file_handler -> setTarget;
add_file_handler -> close;
_try_restore_tokenizer -> isinstance;
_try_restore_tokenizer -> load_context;
_try_restore_tokenizer -> warning;
_extract_path -> isinstance;
_extract_path -> startswith;
_extract_path -> split;
_extract_path -> join;
_extract_path -> Path;
get_context_path -> AppState;
get_context_path -> _find_trainer_ckpt_path;
get_context_path -> is_dir;
get_context_path -> Path;
_get_base_model_path_for_adapter -> Path;
_get_base_model_path_for_adapter -> open;
_get_base_model_path_for_adapter -> load;
_get_base_model_path_for_adapter -> exists;
_get_base_model_path_for_adapter -> is_dir;
_filter_out_unfinished_checkpoints -> is_checkpoint_unfinished;
_filter_out_unfinished_checkpoints -> warning;
_filter_out_unfinished_checkpoints -> append;
init_parallel_ranks -> AppState;
init_parallel_ranks -> initialize_model_parallel_for_nemo;
init_parallel_ranks -> lower;
init_parallel_ranks -> ValueError;
init_parallel_ranks -> getattr;
init_parallel_ranks -> get;
set_model_parallel_attributes -> isinstance;
set_model_parallel_attributes -> getattr;
set_model_parallel_attributes -> hasattr;
set_model_parallel_attributes -> filter;
set_model_parallel_attributes -> dir;
set_model_parallel_attributes -> setattr;
set_model_parallel_attributes -> __post_init__;
set_model_parallel_attributes -> startswith;
megatron_lazy_init_context -> original;
enable_nvidia_optimizations -> getenv;
enable_nvidia_optimizations -> int;
enable_nvidia_optimizations -> _jit_set_profiling_executor;
enable_nvidia_optimizations -> _jit_set_profiling_mode;
enable_nvidia_optimizations -> _jit_override_can_fuse_on_cpu;
enable_nvidia_optimizations -> _jit_override_can_fuse_on_gpu;
enable_nvidia_optimizations -> _jit_set_texpr_fuser_enabled;
enable_nvidia_optimizations -> _debug_set_autodiff_subgraph_inlining;
enable_nvidia_optimizations -> split;
_sync_from_last_pipeline_stage -> get_pipeline_model_parallel_world_size;
_sync_from_last_pipeline_stage -> get_pipeline_model_parallel_last_rank;
_sync_from_last_pipeline_stage -> get_process_group_ranks;
_sync_from_last_pipeline_stage -> broadcast;
_sync_from_last_pipeline_stage -> get_pipeline_model_parallel_group;
_sync_from_last_pipeline_stage -> send;
_sync_from_last_pipeline_stage -> get_rank;
_sync_from_last_pipeline_stage -> recv;
setup_megatron_optimizer -> isinstance;
setup_megatron_optimizer -> get_megatron_optimizer;
setup_megatron_optimizer -> McoreOpt;
setup_megatron_optimizer -> getattr;
setup_megatron_optimizer -> type;
setup_megatron_optimizer -> sharded_state_dict;
setup_megatron_optimizer -> get;
setup_megatron_optimizer -> signature;
setup_megatron_optimizer -> len;
setup_megatron_optimizer -> hasattr;
setup_megatron_optimizer -> setup_megatron_optimizer;
setup_megatron_optimizer -> convert_config;
_get_extra_te_kwargs_meta -> original;
_is_slurm_interactive_mode -> job_name;
_is_slurm_interactive_mode -> endswith;
_ddp_converter -> register;
_ddp_converter -> DDPStrategy;
_fsdp_converter -> register;
_fsdp_converter -> FSDPStrategy;
_mixed_precision_converter -> register;
_mixed_precision_converter -> MixedPrecision;
_fsdp_precision_converter -> register;
_fsdp_precision_converter -> FSDPPrecision;
setup_module -> setup_module;
setup_module -> isinstance;
setup_module -> super;
setup_module -> set_model_parallel_attributes;
setup_module -> hasattr;
setup_module -> MegatronParallel;
setup_module -> convert_config;
setup_module -> configure_model;
setup_module -> init_model_parallel;
setup_module -> add;
setup_module -> AppState;
setup_module -> get_model_config;
setup_module -> get_data_parallel_group;
setup_module -> register_comm_hook;
setup_module -> seed_everything;
setup_module -> init_process_group;
setup_module -> initialize_model_parallel;
import_model -> import_from;
import_model -> load_model;
import_model -> issubclass;
import_model -> TypeError;
import_from -> init;
import_from -> import_ckpt;
import_from -> _get_connector;
setup_datamodule -> setup;
setup_datamodule -> hasattr;
setup_datamodule -> process_datamodule;
process_datamodule -> setup;
process_datamodule -> hasattr;
process_datamodule -> global_rank;
_convert_megatron_mixed_precision -> register;
_convert_megatron_mixed_precision -> FabricMegatronMixedPrecision;
update_config_with_dtype_overrides -> hasattr;
update_config_with_dtype_overrides -> fields;
update_config_with_dtype_overrides -> update_config_with_dtype_overrides;
update_config_with_dtype_overrides -> getattr;
update_config_with_dtype_overrides -> setattr;
update_config_with_dtype_overrides -> debug;
update_config_with_dtype_overrides -> type;
convert_module -> hasattr;
convert_module -> get_model_config;
convert_module -> isinstance;
convert_module -> Float16Module;
convert_optimizer -> get_optim_config;
get_optim_config -> isinstance;
get_optim_config -> map;
get_optim_config -> ValueError;
convert_megatron_strategy -> register;
convert_megatron_strategy -> FabricMegatronStrategy;
_setup_distributed -> _set_world_ranks;
_setup_distributed -> init_parallel_ranks;
_setup_distributed -> _setup_distributed;
_setup_distributed -> set_device;
_setup_distributed -> init_model_parallel;
_setup_distributed -> local_rank;
_setup_distributed -> world_size;
_setup_distributed -> global_rank;
_setup_distributed -> super;
_setup_distributed -> reset_seed;
_setup_distributed -> set_world_ranks;
_setup_distributed -> _get_process_group_backend;
_setup_distributed -> is_initialized;
_setup_distributed -> str;
_setup_distributed -> info;
_setup_distributed -> init_process_group;
_setup_distributed -> rank_zero_info;
_setup_distributed -> is_available;
_setup_distributed -> RuntimeError;
_setup_distributed -> debug;
_setup_distributed -> register;
process_dataloader -> _MegatronDataLoaderIterDataFetcher;
process_dataloader -> setup;
process_dataloader -> iter;
process_dataloader -> transform_dataloader;
process_dataloader -> CombinedLoader;
setup_optimizer -> hasattr;
setup_optimizer -> add;
setup_optimizer -> setup_optimizer;
module_init_context -> module_init_context;
module_init_context -> megatron_context;
module_init_context -> ExitStack;
module_init_context -> enter_context;
module_init_context -> device;
megatron_context -> original;
load_module_state_dict -> load_model_state_dict;
checkpoint_io -> MegatronCheckpointIO;
checkpoint_io -> isinstance;
checkpoint_io -> create_checkpoint_io;
checkpoint_io -> HFCheckpointIO;
parallelism -> ParallelismConfig;
model_importer -> register_importer;
register_importer -> str;
model_exporter -> register_exporter;
register_exporter -> str;
capture -> wraps;
capture -> isinstance;
capture -> to_capture;
capture -> capture;
capture -> hasattr;
capture -> Partial;
capture -> type_factory;
capture -> NewType;
capture -> error;
capture -> type;
type_factory -> type;
type_factory -> NewType;
type_factory -> warning;
is_in_cache -> exists;
is_in_cache -> local_path;
maybe_finalize_save_checkpoint -> _debug_time;
maybe_finalize_save_checkpoint -> time;
maybe_finalize_save_checkpoint -> maybe_finalize_async_calls;
maybe_finalize_save_checkpoint -> info;
maybe_finalize_save_checkpoint -> get_num_unfinalized_calls;
maybe_finalize_save_checkpoint -> debug;
maybe_finalize_save_checkpoint -> len;
_make_torch_importable -> SingleImportable;
_make_torch_nn_importable -> SingleImportable;
is_torch_tensor -> isinstance;
convert_torch_tensor_to_cst -> Call;
convert_torch_tensor_to_cst -> Attribute;
convert_torch_tensor_to_cst -> Arg;
convert_torch_tensor_to_cst -> kwarg_to_cst;
convert_torch_tensor_to_cst -> convert_child;
convert_torch_tensor_to_cst -> Name;
convert_torch_tensor_to_cst -> tolist;
_modified_serialize -> isinstance;
_modified_serialize -> _original_serialize;
_modified_serialize -> _pyref;
_modified_serialize -> to_config;
is_rank_0 -> is_available;
is_rank_0 -> is_initialized;
is_rank_0 -> get_rank;
nemo_to_hf -> replace;
hf_to_nemo -> replace;
_save_adapter_weights_only -> list;
_save_adapter_weights_only -> keys;
_save_adapter_weights_only -> pop;
_save_adapter_weights_only -> save_file;
_save_adapter_weights_only -> nemo_to_hf;
_save_adapter_weights_only -> OSError;
_save_adapter_weights_only -> format;
_load_adapter_weights_only -> get_filesystem;
_load_adapter_weights_only -> exists;
_load_adapter_weights_only -> FileNotFoundError;
_load_adapter_weights_only -> isdir;
_load_adapter_weights_only -> ValueError;
_load_adapter_weights_only -> Path;
_load_adapter_weights_only -> format;
_load_adapter_weights_only -> safe_open;
_load_adapter_weights_only -> keys;
_load_adapter_weights_only -> OSError;
_load_adapter_weights_only -> get_tensor;
_load_adapter_weights_only -> hf_to_nemo;
_ordered_arguments_with_default -> ordered_arguments;
_ordered_arguments_with_default -> items;
_ordered_arguments_with_default -> isinstance;
_ordered_arguments_with_default -> ValueError;
_ordered_arguments_with_default -> _ordered_arguments_with_default;
_ordered_arguments_with_default -> _is_default_factory;
_ordered_arguments_with_default -> is_dataclass;
_ordered_arguments_with_default -> getmodule;
_ordered_arguments_with_default -> get_callable;
_ordered_arguments_with_default -> fields;
_ordered_arguments_with_default -> default_factory;
_config_representer_with_defaults -> _ordered_arguments_with_default;
_config_representer_with_defaults -> represent_data;
_partial_representer_with_defaults -> _config_representer_with_defaults;
_safe_object_representer -> represent_data;
_safe_object_representer -> getmodule;
_process_module -> getmembers;
_process_module -> isclass;
_process_module -> _is_defined_in_module_or_submodules;
_process_module -> setattr;
_process_module -> _add_io_to_class;
_io_wrap_init -> getattr;
_io_wrap_init -> wraps;
_io_wrap_init -> hasattr;
_io_wrap_init -> original_init;
_io_wrap_init -> io_transform_args;
_io_wrap_init -> _io_transform_args;
_io_wrap_init -> io_init;
_io_wrap_init -> _io_init;
_io_register_serialization -> register_node_traverser;
_add_io_to_class -> isclass;
_add_io_to_class -> hasattr;
_add_io_to_class -> _io_wrap_init;
_add_io_to_class -> _io_register_serialization;
_add_io_to_class -> type;
_is_defined_in_module_or_submodules -> startswith;
_io_transform_args -> signature;
_io_transform_args -> bind_partial;
_io_transform_args -> isinstance;
_io_transform_args -> is_dataclass;
_io_transform_args -> items;
_io_transform_args -> convert_dataclasses_to_configs;
_io_transform_args -> append;
_io_init -> Config;
_io_init -> type;
_io_init -> RuntimeError;
_io_init -> str;
io_transform_args -> _io_transform_args;
_io_flatten_object -> __flatten__;
_io_flatten_object -> dump_json;
_io_flatten_object -> Path;
_io_flatten_object -> open;
_io_flatten_object -> dump;
_io_flatten_object -> hasattr;
_io_flatten_object -> getattr;
_io_flatten_object -> str;
_io_flatten_object -> uuid4;
_io_unflatten_object -> __unflatten__;
_io_unflatten_object -> hasattr;
_io_unflatten_object -> len;
_io_unflatten_object -> open;
_io_unflatten_object -> pickle_load;
_io_unflatten_object -> Path;
_io_path_elements_fn -> __path_elements__;
_io_path_elements_fn -> dump_json;
_io_path_elements_fn -> IdentityElement;
_artifact_transform_save -> Path;
_artifact_transform_save -> getattr;
_artifact_transform_save -> dir;
_artifact_transform_save -> dump;
_artifact_transform_save -> setattr;
_artifact_transform_save -> to_config;
_artifact_transform_save -> ValueError;
_artifact_transform_save -> isinstance;
_artifact_transform_save -> hasattr;
_artifact_transform_save -> _artifact_transform_save;
_artifact_transform_load -> getattr;
_artifact_transform_load -> dir;
_artifact_transform_load -> isinstance;
_artifact_transform_load -> str;
_artifact_transform_load -> setattr;
_artifact_transform_load -> Path;
_artifact_transform_load -> _artifact_transform_load;
_artifact_transform_load -> build;
drop_unexpected_params -> analyze;
drop_unexpected_params -> isinstance;
drop_unexpected_params -> signature;
drop_unexpected_params -> any;
drop_unexpected_params -> items;
drop_unexpected_params -> debug;
drop_unexpected_params -> warning;
drop_unexpected_params -> values;
_io_dump_yaml -> copy;
_io_dump_yaml -> add_representer;
_io_dump_yaml -> add_multi_representer;
_io_dump_yaml -> YamlSerializer;
_io_dump_yaml -> serialize;
_io_dump_yaml -> getattr;
_get_connector -> str;
_get_connector -> connector;
_get_connector -> split;
_get_connector -> get;
_get_connector -> ValueError;
wrapped_init -> wraps;
wrapped_init -> hasattr;
wrapped_init -> original_init;
wrapped_init -> io_transform_args;
wrapped_init -> _io_transform_args;
wrapped_init -> io_init;
wrapped_init -> _io_init;
is_distributed_ckpt -> ckpt_to_dir;
is_distributed_ckpt -> get_filesystem;
is_distributed_ckpt -> isdir;
is_distributed_ckpt -> check_is_distributed_checkpoint;
_get_iteration_from_checkpoint -> get;
construct_extra -> hasattr;
adjust_non_strict_load -> load_tensors_metadata;
adjust_non_strict_load -> extract_matching_values;
adjust_non_strict_load -> info;
adjust_non_strict_load -> isinstance;
adjust_non_strict_load -> append;
_determine_dist_ckpt_save_strategy -> hasattr;
_determine_dist_ckpt_save_strategy -> info;
_determine_dist_ckpt_save_strategy -> warning;
_determine_dist_ckpt_save_strategy -> ValueError;
_determine_dist_ckpt_save_strategy -> dict;
_determine_dist_ckpt_save_strategy -> TorchDistSaveShardedStrategy;
_determine_dist_ckpt_save_strategy -> get_default_save_sharded_strategy;
_determine_dist_ckpt_save_strategy -> FullyParallelSaveStrategyWrapper;
_determine_dist_ckpt_save_strategy -> get_data_parallel_group;
save_sharded_strategy -> _determine_dist_ckpt_save_strategy;
iter_finalize_fn -> info;
iter_finalize_fn -> int;
should_remove_missing_sharded_base -> isinstance;
should_remove_missing_sharded_base -> append;
extract_dtypes -> hasattr;
_match_keys -> compile;
_match_keys -> len;
_match_keys -> filter;
_match_keys -> range;
_match_keys -> empty;
_match_keys -> match;
_match_keys -> sort;
_match_keys -> append;
_match_keys -> enumerate;
_match_keys -> groups;
_match_keys -> index;
_match_keys -> tuple;
_match_keys -> isdigit;
_match_keys -> int;
call_transform -> len;
call_transform -> any;
call_transform -> transform;
call_transform -> signature;
call_transform -> ValueError;
call_transform -> values;
split_qkv -> reshape;
split_qkv -> size;
split_qkv -> cat;
split_qkv -> arange;
split_qkv -> cpu;
split_qkv -> range;
split_qkv_bias -> reshape;
split_qkv_bias -> cat;
split_qkv_bias -> arange;
split_qkv_bias -> cpu;
split_qkv_bias -> range;
merge_qkv -> size;
merge_qkv -> view;
merge_qkv -> range;
merge_qkv -> cat;
merge_qkv -> reshape;
merge_qkv -> append;
merge_qkv_bias -> view;
merge_qkv_bias -> type_as;
merge_qkv_bias -> range;
merge_qkv_bias -> reshape;
merge_qkv_bias -> cat;
merge_qkv_bias -> empty;
merge_fc1 -> cat;
split_fc1 -> chunk;
handle_partial -> register_class;
handle_partial -> Partial;
register_class -> register;
register_class -> isinstance;
pathize -> isinstance;
pathize -> Path;
copy_file -> exists;
copy_file -> copy2;
copy_file -> pathize;
copy_file -> FileExistsError;
copy_file -> str;
from_pretrained_kwargs -> copy;
from_pretrained_kwargs -> update;
from_pretrained_kwargs -> hasattr;
handle_hf_pretrained -> register;
handle_hf_pretrained -> Config;
handle_hf_pretrained -> startswith;
handle_hf_pretrained -> hasattr;
handle_hf_pretrained -> isclass;
handle_hf_pretrained -> getattr;
update_trainer_local_checkpoint_io -> any;
update_trainer_local_checkpoint_io -> getattr;
update_trainer_local_checkpoint_io -> LocalCheckpointManager;
update_trainer_local_checkpoint_io -> MCoreHierarchicalCheckpointIO;
update_trainer_local_checkpoint_io -> isinstance;
update_trainer_local_checkpoint_io -> type;
update_trainer_local_checkpoint_io -> LazyCliqueReplicationStrategy;
update_trainer_local_checkpoint_io -> join;
update_trainer_local_checkpoint_io -> AsyncFinalizableCheckpointIO;
update_trainer_local_checkpoint_io -> gethostname;
to_tensor_aware_state_dict -> from_state_dict;
to_tensor_aware_state_dict -> dict_list_map_inplace;
to_tensor_aware_state_dict -> isinstance;
to_tensor_aware_state_dict -> debug;
to_tensor_aware_state_dict -> to;
from_tensor_aware_state_dict -> isinstance;
from_tensor_aware_state_dict -> to_state_dict;
from_tensor_aware_state_dict -> warning;
from_tensor_aware_state_dict -> type;
to_cpu -> isinstance;
to_cpu -> debug;
to_cpu -> to;
to_cpu -> cpu;
to_cpu -> ValueError;
to_cpu -> full_tensor;
to_cpu -> str;
_should_check_val_fx -> _should_check_val_fx;
_should_check_val_fx -> super;
add_io -> isinstance;
add_io -> values;
add_io -> add_io;
add_io -> find_node_traverser;
add_io -> track_io;
add_io -> type;
dtype_from_str -> isinstance;
is_trainer_attached -> hasattr;
get_automodel_from_trainer -> getattr;
get_automodel_from_trainer -> hasattr;
_apply_basic_module_replacement -> named_children;
_apply_basic_module_replacement -> isinstance;
_apply_basic_module_replacement -> any;
_apply_basic_module_replacement -> Linear;
_apply_basic_module_replacement -> copy_;
_apply_basic_module_replacement -> setattr;
_apply_basic_module_replacement -> LayerNorm;
_apply_basic_module_replacement -> RMSNorm;
_apply_basic_module_replacement -> _apply_basic_module_replacement;
apply_fp8_autocast -> warning;
apply_fp8_autocast -> pop;
apply_fp8_autocast -> DelayedScaling;
apply_fp8_autocast -> _contextual_fp8_autocast;
apply_fp8_autocast -> hasattr;
apply_fp8_autocast -> to_kwargs;
apply_fp8_autocast -> getattr;
apply_fp8_autocast -> MethodType;
is_te_accelerated -> warning;
is_te_accelerated -> named_modules;
is_te_accelerated -> isinstance;
_contextual_fp8_autocast -> fp8_autocast;
_contextual_fp8_autocast -> model_forward;
pl_has_dist_opt_with_ovelap -> getattr;
pl_check_param_hashes_across_dp_replicas -> pl_has_dist_opt_with_ovelap;
pl_check_param_hashes_across_dp_replicas -> check_param_hashes_across_dp_replicas;
pl_check_param_hashes_across_dp_replicas -> barrier;
pl_check_param_hashes_across_dp_replicas -> all_gather_object;
pl_check_param_hashes_across_dp_replicas -> all;
pl_check_param_hashes_across_dp_replicas -> disable_pre_hook;
pl_check_param_hashes_across_dp_replicas -> range;
pl_check_param_hashes_across_dp_replicas -> get_data_parallel_group_gloo;
pl_check_param_hashes_across_dp_replicas -> enable_pre_hook;
pl_check_param_hashes_across_dp_replicas -> get_data_parallel_world_size;
collect_precision -> isinstance;
collect_precision -> str;
collect_precision_and_shape -> isinstance;
collect_precision_and_shape -> str;
_apply_user_funcs -> named_parameters;
_apply_user_funcs -> find_grad_tensor;
_apply_user_funcs -> replace;
_apply_user_funcs -> append;
_apply_user_funcs -> zip;
_apply_user_funcs -> set;
_apply_user_funcs -> any;
_apply_user_funcs -> PrettyTable;
_apply_user_funcs -> add_column;
_apply_user_funcs -> info;
_apply_user_funcs -> isinstance;
_apply_user_funcs -> update;
_apply_user_funcs -> getattr;
_apply_user_funcs -> keys;
_apply_user_funcs -> get_string;
_apply_user_funcs -> fn;
_apply_user_funcs -> get;
find_grad_tensor -> isinstance;
find_grad_tensor -> getattr;
extract_module_attr_name -> hasattr;
extract_module_attr_name -> ValueError;
get_modules_from_selector -> isinstance;
get_modules_from_selector -> split;
get_modules_from_selector -> enumerate;
get_modules_from_selector -> getattr;
get_modules_from_selector -> named_children;
get_modules_from_selector -> hasattr;
get_modules_from_selector -> AttributeError;
get_modules_from_selector -> match;
get_modules_from_selector -> replace;
get_modules_from_selector -> _get_name;
compile_module -> compile;
compile_module -> NvtxProfileTransform;
compile_module -> ThunderCompiler;
_get_model_comm_overlap_cfgs -> _CommOverlapConfig;
_get_model_comm_overlap_cfgs -> _override_user_cfgs;
_get_model_comm_overlap_cfgs -> warning;
_override_user_cfgs -> isinstance;
_override_user_cfgs -> fields;
_override_user_cfgs -> getattr;
_override_user_cfgs -> setattr;
_get_optimizer_overlap_cfgs -> AppState;
_get_optimizer_overlap_cfgs -> _CommOverlapConfig;
_get_optimizer_overlap_cfgs -> _override_user_cfgs;
_apply_cfgs -> fields;
_apply_cfgs -> hasattr;
_apply_cfgs -> setattr;
_apply_cfgs -> getattr;
_check_num_cuda_device_max_connections -> AppState;
_check_num_cuda_device_max_connections -> get_device_capability;
_check_num_cuda_device_max_connections -> warning;
_check_num_cuda_device_max_connections -> get;
_init_te_userbuffers -> get_micro_batch_size;
_init_te_userbuffers -> warning;
_init_te_userbuffers -> asdict;
_init_te_userbuffers -> initialize_ub;
_init_te_userbuffers -> get_context_parallel_world_size;
_init_te_userbuffers -> Exception;
_init_te_userbuffers -> items;
_init_te_userbuffers -> get_tensor_model_parallel_world_size;
on_predict_start -> _init_te_userbuffers;
enable_on_rank -> get_rank;
_wrap_func -> signature;
_wrap_func -> items;
_wrap_func -> _get_param_type;
_wrap_func -> func;
_wrap_func -> TypeError;
_wrap_func -> len;
_wrap_func -> ValueError;
_wrap_func -> keys;
_wrap_func -> str;
_wrap_func -> hasattr;
_get_param_type -> lower;
nemo_topk_check_previous_run -> list;
nemo_topk_check_previous_run -> sorted;
nemo_topk_check_previous_run -> max;
nemo_topk_check_previous_run -> debug;
nemo_topk_check_previous_run -> _has_ema_ckpts;
nemo_topk_check_previous_run -> range;
nemo_topk_check_previous_run -> str;
nemo_topk_check_previous_run -> len;
nemo_topk_check_previous_run -> pop;
nemo_topk_check_previous_run -> _del_model_without_trainer;
nemo_topk_check_previous_run -> AttributeError;
nemo_topk_check_previous_run -> search;
nemo_topk_check_previous_run -> float;
nemo_topk_check_previous_run -> exists;
nemo_topk_check_previous_run -> find;
nemo_topk_check_previous_run -> _ema_format_filepath;
nemo_topk_check_previous_run -> _is_ema_filepath;
nemo_topk_check_previous_run -> start;
nemo_topk_check_previous_run -> is_dir;
nemo_topk_check_previous_run -> uninject_model_parallel_rank;
get_git_hash -> decode;
get_git_hash -> format;
get_git_hash -> check_output;
add_err_file_handler -> FileHandler;
add_err_file_handler -> addFilter;
add_err_file_handler -> setFormatter;
add_err_file_handler -> addHandler;
add_err_file_handler -> get;
add_err_file_handler -> RuntimeError;
add_err_file_handler -> formatter;
add_err_file_handler -> setTarget;
add_err_file_handler -> close;
add_filehandlers_to_pl_logger -> FileHandler;
add_filehandlers_to_pl_logger -> addHandler;
add_filehandlers_to_pl_logger -> addFilter;
add_filehandlers_to_pl_logger -> get;
add_filehandlers_to_pl_logger -> setTarget;
add_filehandlers_to_pl_logger -> close;
get_git_diff -> decode;
get_git_diff -> format;
get_git_diff -> check_output;
_has_ema_ckpts -> any;
_has_ema_ckpts -> _is_ema_filepath;
_del_model_without_trainer -> Path;
_del_model_without_trainer -> is_global_rank_zero;
_del_model_without_trainer -> is_initialized;
_del_model_without_trainer -> barrier;
_del_model_without_trainer -> ckpt_to_dir;
_del_model_without_trainer -> rmtree;
_del_model_without_trainer -> info;
_del_model_without_trainer -> is_dir;
_del_model_without_trainer -> AppState;
_del_model_without_trainer -> inject_model_parallel_rank;
_del_model_without_trainer -> rm;
_ema_format_filepath -> replace;
_is_ema_filepath -> endswith;
_is_ema_filepath -> str;
_remove_invalid_entries_from_topk -> isdir;
_remove_invalid_entries_from_topk -> len;
_remove_invalid_entries_from_topk -> sorted;
_remove_invalid_entries_from_topk -> removesuffix;
_remove_invalid_entries_from_topk -> items;
_remove_invalid_entries_from_topk -> __is_ckpt_ok;
_remove_invalid_entries_from_topk -> is_checkpoint_unfinished;
_remove_invalid_entries_from_topk -> isfile;
_remove_invalid_entries_from_topk -> inject_model_parallel_rank;
__is_ckpt_ok -> isdir;
__is_ckpt_ok -> removesuffix;
__is_ckpt_ok -> is_checkpoint_unfinished;
__is_ckpt_ok -> isfile;
__is_ckpt_ok -> inject_model_parallel_rank;
is_checkpoint_unfinished -> exists;
is_checkpoint_unfinished -> format_checkpoint_unfinished_marker_path;
_remove_unfinished_checkpoints -> Path;
_remove_unfinished_checkpoints -> is_global_rank_zero;
_remove_unfinished_checkpoints -> AssertionError;
_remove_unfinished_checkpoints -> resolve;
_remove_unfinished_checkpoints -> format_checkpoint_unfinished_marker_path;
_remove_unfinished_checkpoints -> remove;
_remove_unfinished_checkpoints -> glob;
_remove_unfinished_checkpoints -> is_file;
_remove_unfinished_checkpoints -> rglob;
_remove_unfinished_checkpoints -> warning;
_remove_unfinished_checkpoints -> is_dir;
_remove_unfinished_checkpoints -> rmtree;
_remove_unfinished_checkpoints -> is_multistorageclient_url;
_remove_unfinished_checkpoints -> import_multistorageclient;
_remove_unfinished_checkpoints -> get_filesystem;
_remove_unfinished_checkpoints -> rm;
_monitor_candidates -> _monitor_candidates;
_monitor_candidates -> findall;
_monitor_candidates -> super;
_monitor_candidates -> isinstance;
_monitor_candidates -> tensor;
_monitor_candidates -> _sync_from_last_pipeline_stage;
_monitor_candidates -> current_device;
_ema_callback -> isinstance;
format_checkpoint_unfinished_marker_path -> removesuffix;
format_checkpoint_unfinished_marker_path -> Path;
format_checkpoint_unfinished_marker_path -> str;
format_checkpoint_unfinished_marker_path -> uninject_model_parallel_rank;
set_checkpoint_unfinished_marker -> is_global_rank_zero;
set_checkpoint_unfinished_marker -> format_checkpoint_unfinished_marker_path;
set_checkpoint_unfinished_marker -> mkdir;
set_checkpoint_unfinished_marker -> touch;
set_checkpoint_unfinished_marker -> is_initialized;
set_checkpoint_unfinished_marker -> barrier;
touch -> open;
touch -> utime;
remove_checkpoint_unfinished_marker -> is_global_rank_zero;
remove_checkpoint_unfinished_marker -> is_initialized;
remove_checkpoint_unfinished_marker -> barrier;
remove_checkpoint_unfinished_marker -> format_checkpoint_unfinished_marker_path;
remove_checkpoint_unfinished_marker -> exists;
remove_checkpoint_unfinished_marker -> unlink;
_link_checkpoint -> ckpt_to_dir;
_link_checkpoint -> _link_checkpoint;
_link_checkpoint -> replace;
_link_checkpoint -> str;
_link_checkpoint -> _save_checkpoint;
_link_checkpoint -> super;
_save_checkpoint -> set_checkpoint_unfinished_marker;
_save_checkpoint -> _ema_callback;
_save_checkpoint -> str;
_save_checkpoint -> remove_checkpoint_unfinished_marker;
_save_checkpoint -> _get_finalize_save_checkpoint_callback;
_save_checkpoint -> save_checkpoint;
_save_checkpoint -> ckpt_to_dir;
_save_checkpoint -> endswith;
_save_checkpoint -> ValueError;
_save_checkpoint -> save_original_optimizer_state;
_save_checkpoint -> _save_checkpoint;
_save_checkpoint -> save_ema_model;
_save_checkpoint -> rank_zero_info;
_save_checkpoint -> _ema_format_filepath;
_save_checkpoint -> dict;
_save_checkpoint -> append;
_save_checkpoint -> is_global_rank_zero;
_save_checkpoint -> io_dump;
_save_checkpoint -> info;
_save_checkpoint -> finalize_fn;
_save_checkpoint -> isinstance;
_save_checkpoint -> super;
_save_checkpoint -> from_trainer;
_save_checkpoint -> _drop_optimizer_states;
_save_checkpoint -> time;
_get_finalize_save_checkpoint_callback -> debug;
_get_finalize_save_checkpoint_callback -> remove_checkpoint_unfinished_marker;
_get_finalize_save_checkpoint_callback -> info;
_get_finalize_save_checkpoint_callback -> pop;
_get_finalize_save_checkpoint_callback -> str;
_get_finalize_save_checkpoint_callback -> _link_checkpoint;
_get_finalize_save_checkpoint_callback -> _remove_checkpoint;
_get_finalize_save_checkpoint_callback -> after_save_checkpoint;
_get_finalize_save_checkpoint_callback -> proxy;
_get_finalize_save_checkpoint_callback -> time;
_remove_checkpoint -> set_checkpoint_unfinished_marker;
_remove_checkpoint -> _ema_callback;
_remove_checkpoint -> remove_checkpoint_unfinished_marker;
_remove_checkpoint -> append;
_remove_checkpoint -> _remove_checkpoint;
_remove_checkpoint -> _ema_format_filepath;
_remove_checkpoint -> warning;
_remove_checkpoint -> super;
after_save_checkpoint -> _log_model;
after_save_checkpoint -> exists;
_saved_checkpoint_paths -> filter;
_saved_checkpoint_paths -> glob;
_saved_checkpoint_paths -> is_dir;
_saved_checkpoint_paths -> rglob;
_saved_checkpoint_paths -> Path;
_saved_checkpoint_paths -> is_checkpoint_unfinished;
_saved_checkpoint_paths -> is_multistorageclient_url;
_saved_checkpoint_paths -> import_multistorageclient;
_should_remove_checkpoint -> absolute;
_should_remove_checkpoint -> _is_local_file_protocol;
_should_remove_checkpoint -> ValueError;
_should_remove_checkpoint -> Path;
_should_remove_checkpoint -> endswith;
_should_remove_checkpoint -> str;
_cb -> debug;
_cb -> remove_checkpoint_unfinished_marker;
_cb -> info;
_cb -> pop;
_cb -> str;
_cb -> _link_checkpoint;
_cb -> _remove_checkpoint;
_cb -> after_save_checkpoint;
_cb -> proxy;
_cb -> time;
_call_counter -> wraps;
_call_counter -> func;
_maybe_apply_transform -> apply_transform;
apply_transform -> model_transform;
apply_transform -> str;
apply_transform -> join;
apply_transform -> info;
apply_transform -> summarize;
apply_transform -> split;
apply_transform -> set_params_to_save;
apply_transform -> hasattr;
apply_transform -> getattr;
apply_transform -> apply_transform;
apply_transform -> restore_automodel;
apply_transform -> init_model_parallel;
apply_transform -> setup_optimizers;
apply_transform -> load_checkpoint;
apply_transform -> load_model_state_dict;
apply_transform -> isinstance;
apply_transform -> should_restore_optimizer_states;
apply_transform -> load_optimizer_state_dict;
apply_transform -> on_fit_start;
apply_transform -> get_automodel_from_trainer;
apply_transform -> warning;
apply_transform -> super;
apply_transform -> automodel_setup_optimizers;
apply_transform -> items;
apply_transform -> adapter_key_filter;
apply_transform -> optimizer_sharded_state_dict;
apply_transform -> zip;
apply_transform -> Path;
apply_transform -> get;
apply_transform -> load_state_dict;
apply_transform -> sharded_state_dict;
_rank_is_active -> isinstance;
_rank_is_active -> is_initialized;
_rank_is_active -> get_rank;
create_checkpoint_io -> get;
create_checkpoint_io -> HFCheckpointIO;
create_checkpoint_io -> MegatronCheckpointIO;
create_checkpoint_io -> wrapping_ckpt_io;
create_checkpoint_io -> AsyncFinalizableCheckpointIO;
restore_automodel -> load_checkpoint;
restore_automodel -> state_dict;
restore_automodel -> keys;
restore_automodel -> load_model_state_dict;
restore_automodel -> named_parameters;
restore_automodel -> split;
restore_automodel -> join;
restore_automodel -> requires_grad_;
restore_automodel -> automodel_setup_optimizers;
restore_automodel -> load_optimizer_state_dict;
restore_automodel -> zip;
restore_automodel -> pop_fqn_prefix;
restore_automodel -> to_cpu;
restore_automodel -> get;
restore_automodel -> load_state_dict;
restore_automodel -> items;
setup_optimizers -> setup_optimizers;
setup_optimizers -> hasattr;
setup_optimizers -> _optimizers_to_device;
setup_optimizers -> convert_optimizer;
setup_optimizers -> super;
adapter_key_filter -> isinstance;
adapter_key_filter -> endswith;
_create_lora_hf_config -> extract_matched_module_names;
_create_lora_hf_config -> LoraConfig;
_create_lora_hf_config -> to_dict;
_create_lora_hf_config -> list;
_create_lora_hf_config -> join;
_create_lora_hf_config -> set;
_create_lora_hf_config -> filter;
_create_lora_hf_config -> len;
_create_lora_hf_config -> map;
_create_lora_hf_config -> update;
_create_lora_hf_config -> isinstance;
_create_lora_hf_config -> findall;
_create_lora_hf_config -> replace;
extract_matched_module_names -> list;
extract_matched_module_names -> join;
extract_matched_module_names -> set;
extract_matched_module_names -> filter;
extract_matched_module_names -> len;
extract_matched_module_names -> map;
extract_matched_module_names -> update;
extract_matched_module_names -> findall;
extract_matched_module_names -> replace;
_preemption_handler -> getsignal;
_preemption_handler -> warning;
_preemption_handler -> info;
_preemption_handler -> debug;
_preemption_handler -> get_rank;
_preemption_handler -> signal;
_check_preemption_support -> is_available;
_check_preemption_support -> is_initialized;
preemption_supported -> _check_preemption_support;
interrupted -> tensor;
interrupted -> broadcast;
interrupted -> bool;
interrupted -> item;
interrupted -> current_device;
master_handler -> info;
master_handler -> release;
ignoring_handler -> debug;
ignoring_handler -> release;
calculate_data_parallel_groups -> AppState;
format_string -> items;
format_string -> isinstance;
format_string -> is_integer;
format_string -> int;
average_metrics_dict -> isinstance;
log_megatron_timers -> get_all_timers_string;
on_test_batch_start -> int;
on_test_batch_start -> has_dataloader_changed;
on_test_batch_start -> get_num_microbatches;
on_test_batch_start -> _on_batch_start;
on_test_batch_end -> int;
on_test_batch_end -> should_log;
on_test_batch_end -> print;
on_test_batch_end -> get_num_microbatches;
on_test_batch_end -> _on_batch_end;
on_test_batch_end -> is_pipeline_last_stage;
on_test_batch_end -> isinstance;
on_test_batch_end -> append;
on_test_batch_end -> get_rank;
trace_handler -> get_rank;
trace_handler -> export_chrome_trace;
trace_handler -> info;
trace_handler -> str;
_stop_profiler -> info;
_stop_profiler -> stop;
_stop_profiler -> unregister_callback;
_stop_profiler -> warning;
scheduler -> NotImplementedError;
scheduler -> WarmupPolicy;
scheduler -> WarmupHoldPolicy;
scheduler -> SquareAnnealing;
scheduler -> SquareRootAnnealing;
scheduler -> NoamAnnealing;
scheduler -> NoamHoldAnnealing;
scheduler -> WarmupAnnealing;
scheduler -> InverseSquareRootAnnealing;
scheduler -> T5InverseSquareRootAnnealing;
scheduler -> PolynomialDecayAnnealing;
scheduler -> PolynomialHoldDecayAnnealing;
scheduler -> CosineAnnealing;
lr_scheduler -> Mock;
custom_configure_optimizers -> self;
finalize_model_grads -> finalize_model_grads;
finalize_model_grads_func -> finalize_model_grads;
_extract_model_params_for_optim -> named_parameters;
_extract_model_params_for_optim -> list;
_extract_model_params_for_optim -> max;
_extract_model_params_for_optim -> no_weight_decay_cond;
_extract_model_params_for_optim -> filter;
_extract_model_params_for_optim -> map;
_extract_model_params_for_optim -> zip;
_extract_model_params_for_optim -> append;
_extract_model_params_for_optim -> parameters;
optimizer_fn -> Mock;
optimizer_fn -> SGD;
on_megatron_step_start -> replace;
on_megatron_step_end -> compute_consumed_samples;
on_megatron_step_end -> update_num_microbatches;
on_megatron_step_end -> log;
on_megatron_step_end -> warning;
on_megatron_step_end -> getattr;
num_microbatches -> get_num_microbatches;
num_microbatches -> warning;
current_global_batch_size -> get_current_global_batch_size;
current_global_batch_size -> warning;
clip_gradients -> ValueError;
_load_optimizer_state_dict -> zip;
_load_optimizer_state_dict -> set_optimizer_state_dict;
parallelize -> parallelize_fn;
parallelize -> warning;
_get_loss_reduction -> hasattr;
_get_loss_reduction -> getattr;
_step_proxy -> _get_loss_reduction;
_step_proxy -> _forward_redirection;
_step_proxy -> forward;
_step_proxy -> getattr;
current_epoch_step -> max;
setup_parallel_ranks -> cast;
setup_parallel_ranks -> getattr;
setup_parallel_ranks -> init_parallel_ranks;
setup_parallel_ranks -> ModelParallelConfig;
setup_parallel_ranks -> world_size;
setup_parallel_ranks -> global_rank;
setup_parallel_ranks -> local_rank;
setup_data_sampler -> getattr;
setup_data_sampler -> hasattr;
setup_data_sampler -> setup;
setup_data_sampler -> connect;
setup_data_sampler -> reconfigure_limit_batches;
setup_data_sampler -> global_rank;
fix_progress_bar -> cast;
fix_progress_bar -> getattr;
fix_progress_bar -> isinstance;
fix_progress_bar -> enumerate;
fix_progress_bar -> ProgressPrinter;
fix_progress_bar -> disable;
pyt_to_mcore_state_dict -> items;
pyt_to_mcore_state_dict -> len;
pyt_to_mcore_state_dict -> isinstance;
pyt_to_mcore_state_dict -> to_local;
pyt_to_mcore_state_dict -> list;
pyt_to_mcore_state_dict -> enumerate;
pyt_to_mcore_state_dict -> from_rank_offsets;
pyt_to_mcore_state_dict -> metadata;
pyt_to_mcore_state_dict -> local_shards;
pyt_to_mcore_state_dict -> all;
pyt_to_mcore_state_dict -> range;
pyt_to_mcore_state_dict -> ShardedObject;
pyt_to_mcore_state_dict -> startswith;
pyt_to_mcore_state_dict -> endswith;
pyt_to_mcore_state_dict -> _convert;
pyt_to_mcore_state_dict -> get_data_parallel_rank;
pyt_to_mcore_state_dict -> max;
pyt_to_mcore_state_dict -> split;
pyt_to_mcore_state_dict -> int;
pyt_to_mcore_state_dict -> join;
pyt_to_mcore_state_dict -> append;
pyt_to_mcore_state_dict -> is_replicate;
pyt_to_mcore_state_dict -> _get_extra_state_offsets;
pyt_to_mcore_state_dict -> _dtensor_to_mcore_sharded_tensor;
pyt_to_mcore_state_dict -> pop;
pyt_to_mcore_state_dict -> get_local_rank;
pyt_to_mcore_state_dict -> _torch_to_mcore_sharded_tensor;
pyt_to_mcore_state_dict -> _torch_to_mcore_sharded_object;
mcore_to_pyt_sharded_state_dict -> from_local;
mcore_to_pyt_sharded_state_dict -> zip;
mcore_to_pyt_sharded_state_dict -> sharded_tensor_to_torch_sharded_tensor;
mcore_to_pyt_sharded_state_dict -> isinstance;
mcore_to_pyt_sharded_state_dict -> _convert;
mcore_to_pyt_sharded_state_dict -> validate_metadata_integrity;
mcore_to_pyt_sharded_state_dict -> len;
mcore_to_pyt_sharded_state_dict -> Replicate;
mcore_to_pyt_sharded_state_dict -> Shard;
mcore_to_pyt_sharded_state_dict -> _mcore_to_pyt_dtensor;
mcore_to_pyt_sharded_state_dict -> _mcore_to_pyt_sharded_tensor;
_data_fetcher_wrapper -> wraps;
_data_fetcher_wrapper -> isinstance;
_data_fetcher_wrapper -> _DataLoaderIterDataFetcher;
pipeline_dtype -> getattr;
broadcast_params -> parameters;
broadcast_params -> broadcast;
broadcast_params -> getattr;
broadcast_params -> get_expert_data_parallel_group;
broadcast_params -> get_data_parallel_group;
broadcast_params -> get_global_rank;
model_sharded_context -> model_sharded_context;
model_sharded_context -> hasattr;
model_sharded_context -> ExitStack;
model_sharded_context -> enter_context;
model_sharded_context -> megatron_lazy_init_context;
model_sharded_context -> super;
_update_step_kwargs -> _get_data_step;
_update_step_kwargs -> _get_forward_step;
_update_step_kwargs -> _get_loss_reduction;
_convert -> isinstance;
_convert -> _convert;
_convert -> _mcore_to_pyt_dtensor;
_convert -> _mcore_to_pyt_sharded_tensor;
_convert -> items;
_convert -> _dtensor_to_mcore_sharded_tensor;
_convert -> _torch_to_mcore_sharded_tensor;
_convert -> _torch_to_mcore_sharded_object;
_convert -> is_floating_point;
_convert -> to;
_convert -> is_tensor;
_mcore_to_pyt_dtensor -> from_local;
_mcore_to_pyt_dtensor -> len;
_mcore_to_pyt_dtensor -> Replicate;
_mcore_to_pyt_dtensor -> Shard;
_mcore_to_pyt_sharded_tensor -> zip;
_mcore_to_pyt_sharded_tensor -> sharded_tensor_to_torch_sharded_tensor;
_mcore_to_pyt_sharded_tensor -> validate_metadata_integrity;
_dtensor_to_mcore_sharded_tensor -> len;
_dtensor_to_mcore_sharded_tensor -> isinstance;
_dtensor_to_mcore_sharded_tensor -> to_local;
_dtensor_to_mcore_sharded_tensor -> list;
_dtensor_to_mcore_sharded_tensor -> enumerate;
_dtensor_to_mcore_sharded_tensor -> from_rank_offsets;
_dtensor_to_mcore_sharded_tensor -> range;
_dtensor_to_mcore_sharded_tensor -> append;
_dtensor_to_mcore_sharded_tensor -> is_replicate;
_dtensor_to_mcore_sharded_tensor -> get_local_rank;
_torch_to_mcore_sharded_tensor -> len;
_torch_to_mcore_sharded_tensor -> isinstance;
_torch_to_mcore_sharded_tensor -> metadata;
_torch_to_mcore_sharded_tensor -> local_shards;
_torch_to_mcore_sharded_tensor -> all;
_torch_to_mcore_sharded_tensor -> list;
_torch_to_mcore_sharded_tensor -> range;
_torch_to_mcore_sharded_tensor -> from_rank_offsets;
_torch_to_mcore_sharded_tensor -> append;
_torch_to_mcore_sharded_object -> ShardedObject;
_torch_to_mcore_sharded_object -> get_data_parallel_rank;
_torch_to_mcore_sharded_object -> _get_extra_state_offsets;
parallelize_helper -> isinstance;
parallelize_helper -> enumerate;
parallelize_helper -> named_children;
parallelize_helper -> fully_shard;
parallelize_helper -> parallelize_helper;
parallelize_helper -> int;
parallelize_helper -> len;
get_hf_tp_shard_plan -> hasattr;
get_hf_tp_shard_plan -> update;
get_hf_tp_shard_plan -> translate_to_torch_parallel_style;
get_hf_tp_shard_plan -> items;
translate_to_torch_parallel_style -> isinstance;
translate_to_torch_parallel_style -> ValueError;
translate_to_torch_parallel_style -> ColwiseParallel;
translate_to_torch_parallel_style -> RowwiseParallel;
translate_to_torch_parallel_style -> type;
translate_to_torch_parallel_style -> Replicate;
translate_to_torch_parallel_style -> SequenceParallel;
_destroy_dist_connection -> signal;
_destroy_dist_connection -> is_available;
_destroy_dist_connection -> is_initialized;
_destroy_dist_connection -> destroy_process_group;
context -> ExitStack;
context -> enter_context;
context -> loss_parallel;
context -> maybe_enable_compiled_autograd;
context -> sdpa_kernel;
_merge_callbacks -> hasattr;
_merge_callbacks -> deepcopy;
_merge_callbacks -> append;
get_vboost_srun_cmd -> join;
get_vboost_srun_cmd -> quote;
model_restore_path -> len;
model_restore_path -> append;
reset_model_guid_registry -> clear;
add_optimizer_args -> ArgumentParser;
add_optimizer_args -> add_argument;
add_scheduler_args -> ArgumentParser;
add_scheduler_args -> add_argument;
add_asr_args -> ArgumentParser;
add_asr_args -> add_argument;
add_nlp_args -> ArgumentParser;
add_nlp_args -> add_argument;
avoid_bfloat16_autocast_context -> is_autocast_enabled;
avoid_bfloat16_autocast_context -> autocast;
avoid_bfloat16_autocast_context -> nullcontext;
avoid_bfloat16_autocast_context -> get_autocast_gpu_dtype;
cast_tensor -> to;
initialize_sagemaker -> register;
initialize_sagemaker -> _patch_torch_metrics;
initialize_sagemaker -> _install_system_libraries;
initialize_sagemaker -> system;
initialize_sagemaker -> get;
initialize_sagemaker -> init_process_group;
initialize_sagemaker -> get_local_rank;
initialize_sagemaker -> barrier;
initialize_sagemaker -> hash;
initialize_sagemaker -> id;
initialize_sagemaker -> tuple;
_patch_torch_metrics -> hash;
_patch_torch_metrics -> id;
_patch_torch_metrics -> tuple;
_install_system_libraries -> system;
cluster_environment -> LightningEnvironment;
cluster_environment -> int;
__new_hash__ -> hash;
__new_hash__ -> id;
__new_hash__ -> tuple;
_update_subconfig -> error;
_update_subconfig -> exit;
_update_subconfig -> open_dict;
_update_subconfig -> pop;
_add_subconfig_keys -> error;
_add_subconfig_keys -> exit;
_add_subconfig_keys -> open_dict;
_add_subconfig_keys -> deepcopy;
_add_subconfig_keys -> merge;
assert_dataclass_signature_match -> signature;
assert_dataclass_signature_match -> dict;
assert_dataclass_signature_match -> pop;
assert_dataclass_signature_match -> set;
assert_dataclass_signature_match -> intersection;
assert_dataclass_signature_match -> keys;
assert_dataclass_signature_match -> items;
assert_dataclass_signature_match -> info;
assert_dataclass_signature_match -> error;
assert_dataclass_signature_match -> len;
assert_dataclass_signature_match -> remove;
assert_dataclass_signature_match -> add;
ais_cache_base -> get;
ais_cache_base -> endswith;
ais_cache_base -> join;
ais_cache_base -> as_posix;
ais_cache_base -> dirname;
ais_cache_base -> resolve_cache_dir;
ais_cache_base -> resolve;
ais_cache_base -> Path;
ais_endpoint -> getenv;
bucket_and_object_from_uri -> PurePath;
bucket_and_object_from_uri -> is_datastore_path;
bucket_and_object_from_uri -> ValueError;
bucket_and_object_from_uri -> str;
ais_endpoint_to_dir -> urlparse;
ais_endpoint_to_dir -> join;
ais_endpoint_to_dir -> ValueError;
ais_endpoint_to_dir -> str;
ais_binary -> which;
ais_binary -> warning;
ais_binary -> isfile;
ais_binary -> debug;
ais_binary -> info;
ais_binary -> RuntimeError;
datastore_path_to_local_path -> is_datastore_path;
datastore_path_to_local_path -> ais_endpoint;
datastore_path_to_local_path -> join;
datastore_path_to_local_path -> bucket_and_object_from_uri;
datastore_path_to_local_path -> ValueError;
datastore_path_to_local_path -> RuntimeError;
datastore_path_to_local_path -> ais_cache_base;
datastore_path_to_local_path -> ais_endpoint_to_dir;
datastore_object_get -> get;
get_forward_hook -> makedirs;
get_forward_hook -> open;
get_forward_hook -> flush;
get_forward_hook -> enumerate;
get_forward_hook -> isinstance;
get_forward_hook -> append;
get_forward_hook -> write;
get_forward_hook -> norm;
get_forward_hook -> logger;
get_forward_hook -> join;
get_backward_hook -> makedirs;
get_backward_hook -> open;
get_backward_hook -> flush;
get_backward_hook -> enumerate;
get_backward_hook -> isinstance;
get_backward_hook -> append;
get_backward_hook -> write;
get_backward_hook -> norm;
get_backward_hook -> logger;
get_backward_hook -> join;
get_tensor_hook -> makedirs;
get_tensor_hook -> open;
get_tensor_hook -> get_parameter;
get_tensor_hook -> norm;
get_tensor_hook -> logger;
get_tensor_hook -> append;
get_tensor_hook -> write;
get_tensor_hook -> flush;
get_tensor_hook -> join;
forward_hook -> flush;
forward_hook -> enumerate;
forward_hook -> isinstance;
forward_hook -> append;
forward_hook -> write;
forward_hook -> norm;
forward_hook -> logger;
forward_hook -> join;
backward_hook -> flush;
backward_hook -> enumerate;
backward_hook -> isinstance;
backward_hook -> append;
backward_hook -> write;
backward_hook -> norm;
backward_hook -> logger;
backward_hook -> join;
tensor_hook -> get_parameter;
tensor_hook -> norm;
tensor_hook -> logger;
tensor_hook -> append;
tensor_hook -> write;
tensor_hook -> flush;
tensor_hook -> join;
gather_objects -> get_data_parallel_rank;
gather_objects -> get_data_parallel_world_size;
gather_objects -> all_gather_object;
gather_objects -> is_initialized;
gather_objects -> extend;
gather_objects -> range;
webdataset_split_by_workers -> get_worker_info;
webdataset_split_by_workers -> list;
_missing_ -> join;
_missing_ -> ValueError;
_missing_ -> map;
_get_env -> coerce;
_get_env -> CoercionError;
_get_env -> RequiredSettingMissingError;
_bool -> isinstance;
_bool -> lower;
_int -> int;
_float -> float;
_decimal -> Decimal;
_dict -> loads;
_datetime -> parse;
_date -> date;
_date -> parse;
get_env -> get;
get_env -> _get_env;
get_env -> len;
get_envfloat -> get_env;
get_envdecimal -> get_env;
get_envdate -> get_env;
get_envdatetime -> get_env;
get_envlist -> get;
get_envlist -> get_env;
get_envlist -> split;
get_envdict -> get_env;
forward_method -> hasattr;
to_onnxrt_input -> reversed;
to_onnxrt_input -> extend;
to_onnxrt_input -> zip;
to_onnxrt_input -> values;
to_onnxrt_input -> numpy;
to_onnxrt_input -> len;
to_onnxrt_input -> cpu;
to_onnxrt_input -> pop;
run_ts_and_compare -> ts_model;
run_ts_and_compare -> enumerate;
run_ts_and_compare -> is_tensor;
run_ts_and_compare -> to;
run_ts_and_compare -> debug;
run_ts_and_compare -> info;
run_ts_and_compare -> allclose;
run_ts_and_compare -> cpu;
run_ort_and_compare -> run;
run_ort_and_compare -> enumerate;
run_ort_and_compare -> is_tensor;
run_ort_and_compare -> from_numpy;
run_ort_and_compare -> debug;
run_ort_and_compare -> info;
run_ort_and_compare -> allclose;
run_ort_and_compare -> cpu;
simple_replace -> DestT;
simple_replace -> isinstance;
simple_replace -> getattr;
replace_MatchedScaleMaskSoftmax -> MatchedScaleMaskSoftmax;
wrap_module -> DestT;
swap_modules -> items;
swap_modules -> split;
replace_modules -> named_modules;
replace_modules -> swap_modules;
replace_modules -> len;
replace_modules -> info;
replace_modules -> type;
script_module -> script;
replace_FusedLayerNorm -> next;
replace_FusedLayerNorm -> state_dict;
replace_FusedLayerNorm -> LayerNorm;
replace_FusedLayerNorm -> load_state_dict;
replace_FusedLayerNorm -> parameters;
replace_FusedLayerNorm -> isinstance;
replace_MixedFusedRMSNorm -> next;
replace_MixedFusedRMSNorm -> isinstance;
replace_MixedFusedRMSNorm -> parameters;
replace_MixedFusedRMSNorm -> to;
replace_MixedFusedRMSNorm -> TorchRMSNorm;
replace_MixedFusedRMSNorm -> state_dict;
replace_ParallelLinear -> to;
replace_ParallelLinear -> state_dict;
replace_ParallelLinear -> load_state_dict;
replace_ParallelLinear -> ValueError;
replace_ParallelLinear -> next;
replace_ParallelLinear -> isinstance;
replace_ParallelLinear -> parameters;
replace_ParallelLinear -> LinearWithBiasSkip;
replace_FusedScaleMaskSoftmax -> FusedScaleMaskSoftmax;
replace_FusedScaleMaskSoftmax -> isinstance;
replace_FusedScaleMaskSoftmax -> warning;
expansion_fn -> DestT;
expansion_fn -> isinstance;
expansion_fn -> getattr;
error_checks -> initialized;
error_checks -> ValueError;
error_checks -> LoggerMisconfigurationError;
error_checks -> error;
error_checks -> get_original_cwd;
error_checks -> getcwd;
error_checks -> check_slurm;
error_checks -> isinstance;
get_log_dir -> check_explicit_log_dir;
get_log_dir -> str;
get_log_dir -> Path;
get_log_dir -> LoggerMisconfigurationError;
get_log_dir -> get;
get_log_dir -> cwd;
get_log_dir -> warning;
get_log_dir -> is_global_rank_zero;
get_log_dir -> strftime;
get_log_dir -> TensorBoardLogger;
check_resume -> is_global_rank_zero;
check_resume -> ValueError;
check_resume -> str;
check_resume -> info;
check_resume -> exists;
check_resume -> is_s3_url;
check_resume -> iterdir;
check_resume -> len;
check_resume -> glob;
check_resume -> Path;
check_resume -> mkdir;
check_resume -> format;
check_resume -> s3_path_exists;
check_resume -> is_multistorageclient_url;
check_resume -> is_dir;
check_resume -> move;
check_resume -> decode;
check_resume -> find_files_with_suffix;
check_resume -> import_multistorageclient;
check_resume -> _filter_out_unfinished_checkpoints;
check_resume -> warning;
check_resume -> NotFoundError;
check_resume -> is_file;
check_resume -> append;
check_resume -> sorted;
check_resume -> list;
check_resume -> any;
check_resume -> startswith;
check_resume -> endswith;
check_resume -> match;
check_resume -> rglob;
check_resume -> uninject_model_parallel_rank;
configure_loggers -> configure_logger;
configure_loggers -> TensorBoardLogger;
configure_loggers -> append;
configure_loggers -> info;
configure_loggers -> makedirs;
configure_loggers -> WandbLogger;
configure_loggers -> MLFlowLogger;
configure_loggers -> DLLogger;
configure_loggers -> ClearMLLogger;
configure_loggers -> NeptuneLogger;
configure_loggers -> ValueError;
configure_loggers -> get;
configure_loggers -> getenv;
configure_checkpointing -> debug;
configure_checkpointing -> NeMoModelCheckpoint;
configure_checkpointing -> append;
configure_checkpointing -> isinstance;
configure_checkpointing -> Path;
configure_checkpointing -> AppState;
configure_checkpointing -> uninject_model_parallel_rank;
configure_checkpointing -> is_available;
configure_checkpointing -> CheckpointMisconfigurationError;
configure_checkpointing -> warning;
configure_checkpointing -> open_dict;
configure_checkpointing -> LoggerMisconfigurationError;
configure_checkpointing -> error;
configure_checkpointing -> PreemptionCallback;
configure_checkpointing -> info;
is_s3_url -> isinstance;
is_s3_url -> str;
is_s3_url -> startswith;
is_s3_url -> strip;
is_s3_url -> is_s3_url;
s3_path_exists -> parse_s3_url;
s3_path_exists -> _get_s3_resource;
s3_path_exists -> get;
s3_path_exists -> len;
s3_path_exists -> startswith;
s3_path_exists -> list_objects_v2;
find_files_with_suffix -> _get_s3_resource;
find_files_with_suffix -> parse_s3_url;
find_files_with_suffix -> perf_counter;
find_files_with_suffix -> Bucket;
find_files_with_suffix -> _scan_objects_with_retry;
find_files_with_suffix -> info;
find_files_with_suffix -> list;
find_files_with_suffix -> filter;
find_files_with_suffix -> build_s3_url;
find_files_with_suffix -> endswith;
check_explicit_log_dir -> LoggerMisconfigurationError;
check_explicit_log_dir -> error;
check_explicit_log_dir -> is_global_rank_zero;
check_explicit_log_dir -> exists;
check_explicit_log_dir -> warning;
check_explicit_log_dir -> Path;
check_explicit_log_dir -> str;
_on_batch_start -> is_active;
_on_batch_start -> start;
_on_batch_start -> reset;
_on_batch_start -> warning;
is_active -> get;
_on_batch_end -> stop;
_on_batch_end -> log;
_on_batch_end -> as_tensor;
_on_batch_end -> time;
_on_batch_end -> info;
_on_batch_end -> is_initialized;
_on_batch_end -> synchronize;
on_before_backward -> _on_batch_start;
_on_epoch_start -> time;
_on_epoch_start -> is_initialized;
_on_epoch_start -> synchronize;
resume_start -> perf_counter;
resume_start -> resume_start;
resume_start -> info;
resume_start -> super;
resume_start -> get_rank;
_check_time_remaining -> _check_time_remaining;
_check_time_remaining -> _TunerExitException;
_check_time_remaining -> super;
_check_time_remaining -> _monitor_candidates;
_check_time_remaining -> _save_last_checkpoint;
neva_projection -> ValueError;
deepseekv3 -> isinstance;
deepseekv3 -> range;
hyena -> HyenaConfig;
hyena -> _hyena_layer_count;
hyena -> log2;
null_decorator -> callable;
null_decorator -> len;
is_unavailable -> type;
gpu_only_import -> safe_import;
gpu_only_import_from -> safe_import_from;
__gt__ -> UnavailableError;
__le__ -> UnavailableError;
__ge__ -> UnavailableError;
__abs__ -> UnavailableError;
__floordiv__ -> UnavailableError;
__rfloordiv__ -> UnavailableError;
__ifloordiv__ -> UnavailableError;
__lshift__ -> UnavailableError;
__rlshift__ -> UnavailableError;
__mul__ -> UnavailableError;
__rmul__ -> UnavailableError;
__imul__ -> UnavailableError;
__ilshift__ -> UnavailableError;
__pow__ -> UnavailableError;
__rpow__ -> UnavailableError;
__ipow__ -> UnavailableError;
__rshift__ -> UnavailableError;
__rrshift__ -> UnavailableError;
__irshift__ -> UnavailableError;
__sub__ -> UnavailableError;
__rsub__ -> UnavailableError;
__isub__ -> UnavailableError;
__rtruediv__ -> UnavailableError;
__itruediv__ -> UnavailableError;
__divmod__ -> UnavailableError;
__rdivmod__ -> UnavailableError;
__neg__ -> UnavailableError;
__invert__ -> UnavailableError;
__index__ -> UnavailableError;
__get__ -> UnavailableError;
__delete__ -> UnavailableError;
add_memory_handlers_to_pl_logger -> MemoryHandler;
add_memory_handlers_to_pl_logger -> addFilter;
add_memory_handlers_to_pl_logger -> addHandler;
detect_prefix -> filter;
detect_prefix -> removesuffix;
detect_prefix -> len;
resolve_dataset_name_from_cfg -> items;
resolve_dataset_name_from_cfg -> isinstance;
resolve_dataset_name_from_cfg -> type;
resolve_dataset_name_from_cfg -> str;
resolve_dataset_name_from_cfg -> len;
resolve_dataset_name_from_cfg -> exists;
resolve_dataset_name_from_cfg -> isdir;
resolve_dataset_name_from_cfg -> is_datastore_path;
parse_dataset_as_name -> replace;
parse_dataset_as_name -> exists;
parse_dataset_as_name -> isdir;
parse_dataset_as_name -> is_datastore_path;
parse_dataset_as_name -> str;
parse_dataset_as_name -> ValueError;
parse_dataset_as_name -> Path;
unique_names_check -> set;
unique_names_check -> warning;
unique_names_check -> add;
_convert_config -> error;
_convert_config -> exit;
_convert_config -> pop;
_convert_config -> items;
_convert_config -> isinstance;
_convert_config -> warning;
_convert_config -> _convert_config;
recursive_subclass_walk -> __subclasses__;
recursive_subclass_walk -> recursive_subclass_walk;
recursive_subclass_walk -> list_available_models;
recursive_subclass_walk -> len;
recursive_subclass_walk -> add;
_define_logger -> getLogger;
_define_logger -> remove_stream_handlers;
_define_logger -> get_envbool;
_define_logger -> is_global_rank_zero;
_define_logger -> MemoryHandler;
_define_logger -> setFormatter;
_define_logger -> addHandler;
_define_logger -> set_verbosity;
_define_logger -> captureWarnings;
_define_logger -> getLogRecordFactory;
_define_logger -> setLogRecordFactory;
_define_logger -> add_stream_handlers;
_define_logger -> addFilter;
_define_logger -> formatter;
_define_logger -> old_factory;
remove_stream_handlers -> RuntimeError;
remove_stream_handlers -> removeHandler;
add_stream_handlers -> get_envbool;
add_stream_handlers -> setFormatter;
add_stream_handlers -> addHandler;
add_stream_handlers -> RuntimeError;
add_stream_handlers -> StreamHandler;
add_stream_handlers -> addFilter;
add_stream_handlers -> formatter;
reset_stream_handler -> remove_stream_handlers;
reset_stream_handler -> add_stream_handlers;
getEffectiveLevel -> getEffectiveLevel;
patch_stderr_handler -> RuntimeError;
patch_stderr_handler -> acquire;
patch_stderr_handler -> flush;
patch_stderr_handler -> release;
patch_stdout_handler -> RuntimeError;
patch_stdout_handler -> acquire;
patch_stdout_handler -> flush;
patch_stdout_handler -> release;
temp_verbosity -> get_verbosity;
temp_verbosity -> set_verbosity;
_showwarning -> formatwarning;
_showwarning -> _warning_is_ignored;
_showwarning -> warning;
_logged_once -> add;
record_factory -> old_factory;
build_manifest -> open;
build_manifest -> lower;
build_manifest -> replace;
build_manifest -> strip;
build_manifest -> join;
build_manifest -> duration;
build_manifest -> dump;
build_manifest -> write;
build_manifest -> find;
build_manifest -> rfind;
build_manifest -> get_duration;
download_an4 -> print;
download_an4 -> makedirs;
download_an4 -> exists;
download_an4 -> download;
download_an4 -> open;
download_an4 -> extractall;
download_an4 -> glob;
download_an4 -> isfile;
download_an4 -> build_manifest;
download_an4 -> run;
_nvtx_enabled -> lru_cache;
_nvtx_enabled -> AppState;
_scan_objects_with_retry -> filter;
_scan_objects_with_retry -> list;
is_slow_down_error -> error;
is_slow_down_error -> str;
is_slow_down_error -> isinstance;
is_slow_down_error -> info;
is_slow_down_error -> __repr__;
_download_fileobj_with_retry -> retry;
_download_fileobj_with_retry -> download_fileobj;
_download_fileobj_with_retry -> wait_exponential;
_download_fileobj_with_retry -> stop_after_delay;
_download_fileobj_with_retry -> retry_if_exception;
_download_fileobj_with_retry -> before_sleep_log;
_download_file_with_retry -> retry;
_download_file_with_retry -> download_file;
_download_file_with_retry -> wait_exponential;
_download_file_with_retry -> stop_after_delay;
_download_file_with_retry -> retry_if_exception;
_download_file_with_retry -> before_sleep_log;
_upload_fileobj_with_retry -> retry;
_upload_fileobj_with_retry -> upload_fileobj;
_upload_fileobj_with_retry -> wait_exponential;
_upload_fileobj_with_retry -> stop_after_delay;
_upload_fileobj_with_retry -> retry_if_exception;
_upload_fileobj_with_retry -> before_sleep_log;
_upload_file_with_retry -> retry;
_upload_file_with_retry -> upload_file;
_upload_file_with_retry -> wait_exponential;
_upload_file_with_retry -> stop_after_delay;
_upload_file_with_retry -> retry_if_exception;
_upload_file_with_retry -> before_sleep_log;
parse_s3_url -> match;
parse_s3_url -> groups;
_get_s3_resource -> Config;
_get_s3_resource -> ValueError;
_get_s3_resource -> resource;
_get_s3_resource -> Session;
remove_object -> _get_s3_resource;
remove_object -> parse_s3_url;
remove_object -> delete_object;
download_s3_file_to_stream -> BytesIO;
download_s3_file_to_stream -> _get_s3_resource;
download_s3_file_to_stream -> parse_s3_url;
download_s3_file_to_stream -> TransferConfig;
download_s3_file_to_stream -> perf_counter;
download_s3_file_to_stream -> _download_fileobj_with_retry;
download_s3_file_to_stream -> info;
download_s3_file_to_stream -> seek;
download_s3_file_to_path -> _get_s3_resource;
download_s3_file_to_path -> parse_s3_url;
download_s3_file_to_path -> TransferConfig;
download_s3_file_to_path -> info;
download_s3_file_to_path -> perf_counter;
download_s3_file_to_path -> _download_file_with_retry;
upload_file_stream_to_s3 -> _get_s3_resource;
upload_file_stream_to_s3 -> parse_s3_url;
upload_file_stream_to_s3 -> TransferConfig;
upload_file_stream_to_s3 -> seek;
upload_file_stream_to_s3 -> perf_counter;
upload_file_stream_to_s3 -> _upload_fileobj_with_retry;
upload_file_stream_to_s3 -> info;
build_s3_url -> build_s3_url;
parse_prefix_with_step -> search;
parse_prefix_with_step -> group;
find_first_bin_that_fits -> enumerate;
find_first_bin_that_fits -> sum;
_reduction_fn -> getattr;
active_timers -> items;
struct_copy_one -> isinstance;
struct_copy_one -> tuple;
struct_copy_one -> list;
struct_copy_one -> struct_copy_one;
struct_copy_one -> cuda;
struct_copy_one -> detach;
struct_copy_one -> clone;
struct_copy_two -> isinstance;
struct_copy_two -> Exception;
struct_copy_two -> range;
struct_copy_two -> len;
struct_copy_two -> type;
struct_copy_two -> struct_copy_two;
struct_copy_two -> copy_;
to_tensor -> squeeze;
to_tensor -> isinstance;
to_tensor -> detach;
to_tensor -> tensor;
to_tensor -> ValueError;
to_tensor -> numel;
to_tensor -> clone;
get_optimizer_step -> hasattr;
get_optimizer_step -> is_param_in_hook_signature;
get_optimizer_step -> wait_stream;
get_optimizer_step -> synchronize;
get_optimizer_step -> sleep;
get_optimizer_step -> rank_zero_info;
get_optimizer_step -> replay;
get_optimizer_step -> from_training_step_output;
get_optimizer_step -> non_cuda_graph_capturable;
get_optimizer_step -> current_stream;
get_optimizer_step -> stream;
get_optimizer_step -> zero_grad;
get_optimizer_step -> __orig_optimizer_step__;
get_optimizer_step -> "graph";
get_training_step -> __orig_training_step__;
get_training_step -> struct_copy_one;
get_training_step -> no_grad;
get_training_step -> struct_copy_two;
get_amp_autocast_init -> __orig_init__;
get_amp_autocast_init -> rank_zero_info;
get_ddp_init -> rank_zero_info;
get_ddp_init -> stream;
get_ddp_init -> __orig_init__;
amp_autocast_init -> __orig_init__;
amp_autocast_init -> rank_zero_info;
_debug_time -> time;
_debug_time -> debug;
_get_checkpoint_io -> isinstance;
_get_checkpoint_io -> ValueError;
_format_nemo_checkpoint_name -> is_multistorageclient_url;
_format_nemo_checkpoint_name -> abspath;
_format_nemo_checkpoint_name -> expanduser;
_format_nemo_checkpoint_name -> join;
_backup_existing_nemo_ckpt -> _format_nemo_checkpoint_name;
_backup_existing_nemo_ckpt -> barrier;
_backup_existing_nemo_ckpt -> file_exists;
_backup_existing_nemo_ckpt -> info;
_backup_existing_nemo_ckpt -> is_multistorageclient_url;
_backup_existing_nemo_ckpt -> move;
_drop_optimizer_states -> _get_checkpoints_list;
_drop_optimizer_states -> len;
_drop_optimizer_states -> info;
_drop_optimizer_states -> load_checkpoint;
_drop_optimizer_states -> _load_current_state_dict;
_drop_optimizer_states -> save_checkpoint;
_drop_optimizer_states -> is_global_rank_zero;
_drop_optimizer_states -> is_initialized;
_drop_optimizer_states -> dict;
_drop_optimizer_states -> remove_checkpoint;
_drop_optimizer_states -> move;
_drop_optimizer_states -> barrier;
_drop_optimizer_states -> ckpt_to_dir;
_get_checkpoints_list -> dirname;
_get_checkpoints_list -> sorted;
_get_checkpoints_list -> join;
_get_checkpoints_list -> listdir;
_get_checkpoints_list -> isdir;
_get_checkpoints_list -> int;
_get_checkpoints_list -> split;
_load_current_state_dict -> _call_lightning_module_hook;
_load_current_state_dict -> load_model_state_dict;
_clean_up_conflicting_checkpoint -> is_s3_url;
_clean_up_conflicting_checkpoint -> parse_prefix_with_step;
_clean_up_conflicting_checkpoint -> info;
_clean_up_conflicting_checkpoint -> find_files_with_suffix;
_clean_up_conflicting_checkpoint -> remove_object;
_upload_file_to_s3 -> _clean_up_conflicting_checkpoint;
_upload_file_to_s3 -> upload_file;
_upload_bytes_to_s3 -> _clean_up_conflicting_checkpoint;
_upload_bytes_to_s3 -> upload_file_stream_to_s3;
dummy_func -> sleep;
_serialize_checkpoint_to_shm -> perf_counter;
_serialize_checkpoint_to_shm -> NamedTemporaryFile;
_serialize_checkpoint_to_shm -> save;
_serialize_checkpoint_to_shm -> info;
_serialize_checkpoint_to_shm -> get_rank;
_serialize_checkpoint_to_bytes -> perf_counter;
_serialize_checkpoint_to_bytes -> BytesIO;
_serialize_checkpoint_to_bytes -> save;
_serialize_checkpoint_to_bytes -> info;
_serialize_checkpoint_to_bytes -> get_rank;
_check_uploading_results_so_far -> perf_counter;
_check_uploading_results_so_far -> debug;
_check_uploading_results_so_far -> done;
_check_uploading_results_so_far -> append;
_check_uploading_results_so_far -> result;
_check_uploading_results_so_far -> remove;
_check_uploading_results_so_far -> error;
experimental -> warning;
experimental -> wrapped;
_normalize_docstring -> splitlines;
_normalize_docstring -> join;
_normalize_docstring -> lstrip;
_normalize_docstring -> strip;
_normalize_docstring -> pop;
_normalize_docstring -> expandtabs;
_normalize_docstring -> min;
_normalize_docstring -> append;
_normalize_docstring -> rstrip;
_normalize_docstring -> len;
add_port_docs -> wrapper;
add_port_docs -> _normalize_docstring;
add_port_docs -> __setattr__;
add_port_docs -> partial;
add_port_docs -> wrapped;
add_port_docs -> decorated;
add_port_docs -> items;
add_port_docs -> str;
check_color_support -> get_envbool;
check_color_support -> startswith;
check_color_support -> lower;
to_unicode -> isinstance;
to_unicode -> decode;
to_unicode -> TypeError;
to_unicode -> repr;
to_unicode -> type;
code_to_chars -> str;
clear_screen -> str;
clear_line -> str;
UP -> str;
DOWN -> str;
FORWARD -> str;
BACK -> str;
POS -> str;
log_hyperparams -> isinstance;
log_hyperparams -> apply_to_collection;
log_hyperparams -> to_yaml;
log_hyperparams -> update_design;
log_hyperparams -> vars;
log_hyperparams -> dict;
log_hyperparams -> _sanitize_callable_params;
log_hyperparams -> log;
log_hyperparams -> _flatten_dict;
log_hyperparams -> _convert_params;
log_table -> insert;
log_table -> report_table;
log_table -> len;
_log_model -> exists;
_log_model -> update_weights;
_log_model -> warning;
_log_model -> set_all_metadata;
_log_model -> _get_default_report_storage_uri;
construct_negatives -> read_csv;
construct_negatives -> open;
construct_negatives -> range;
construct_negatives -> len;
construct_negatives -> randint;
construct_negatives -> print;
construct_negatives -> tolist;
construct_negatives -> str;
construct_negatives -> join;
decoding_step -> getEffectiveLevel;
decoding_step -> setLevel;
decoding_step -> change_decoding_strategy;
decoding_step -> isinstance;
decoding_step -> open;
decoding_step -> tqdm;
decoding_step -> enumerate;
decoding_step -> close;
decoding_step -> run_word_spotter;
decoding_step -> argmax;
decoding_step -> split;
decoding_step -> list;
decoding_step -> eval;
decoding_step -> len;
decoding_step -> range;
decoding_step -> tensor;
decoding_step -> merge_alignment_with_ws_hyps;
decoding_step -> unsqueeze;
decoding_step -> print;
decoding_step -> int;
decoding_step -> no_grad;
decoding_step -> zeros;
decoding_step -> rnnt_decoder_predictions_tensor;
decoding_step -> info;
decoding_step -> dumps;
decoding_step -> ceil;
decoding_step -> max;
decoding_step -> ctc_decoder_predictions_tensor;
decoding_step -> min;
decoding_step -> write;
decoding_step -> format;
__build_dataset_from_text -> split;
__build_dataset_from_text -> info;
__build_dataset_from_text -> len;
__build_dataset_from_text -> open;
__build_dataset_from_text -> tqdm;
__build_dataset_from_text -> enumerate;
__build_dataset_from_text -> format;
__build_dataset_from_text -> iter;
__build_dataset_from_text -> strip;
__build_dataset_from_text -> lower;
__build_dataset_from_text -> append;
__build_dataset_from_text -> readline;
__build_dataset_from_text -> replace;
__build_dataset_from_text -> set_description;
__tokenize_str -> text_to_ids;
__tokenize_str -> extend;
__tokenize_text -> info;
__tokenize_text -> iter;
__tokenize_text -> max;
__tokenize_text -> exists;
__tokenize_text -> makedirs;
__tokenize_text -> __build_dataset_from_text;
__tokenize_text -> Parallel;
__tokenize_text -> cpu_count;
__tokenize_text -> next;
__tokenize_text -> append;
__tokenize_text -> parallel;
__tokenize_text -> clear;
__tokenize_text -> join;
__tokenize_text -> asarray;
__tokenize_text -> save;
__tokenize_text -> len;
__tokenize_text -> delayed;
__create_chunk -> open;
__create_chunk -> splitext;
__create_chunk -> replace;
__create_chunk -> add;
__create_chunk -> close;
__create_chunk -> join;
__create_chunk -> load;
__create_chunk -> len;
__write_tarred_tokenized_text_dataset -> len;
__write_tarred_tokenized_text_dataset -> enumerate;
__write_tarred_tokenized_text_dataset -> join;
__write_tarred_tokenized_text_dataset -> sum;
__write_tarred_tokenized_text_dataset -> tqdm;
__write_tarred_tokenized_text_dataset -> __create_chunk;
__write_tarred_tokenized_text_dataset -> open;
__write_tarred_tokenized_text_dataset -> dump;
__write_tarred_tokenized_text_dataset -> info;
linear_search_wer -> linspace;
linear_search_wer -> plot;
linear_search_wer -> title;
linear_search_wer -> ylabel;
linear_search_wer -> xlabel;
linear_search_wer -> show;
linear_search_wer -> item;
linear_search_wer -> compute_wer;
linear_search_wer -> append;
linear_search_wer -> abs;
linear_search_wer -> mean;
compute_wer -> item;
compute_wer -> max;
compute_wer -> sum;
compute_wer -> gather;
beam_search_eval -> getEffectiveLevel;
beam_search_eval -> setLevel;
beam_search_eval -> isinstance;
beam_search_eval -> info;
beam_search_eval -> change_decoding_strategy;
beam_search_eval -> open;
beam_search_eval -> tqdm;
beam_search_eval -> range;
beam_search_eval -> tensor;
beam_search_eval -> enumerate;
beam_search_eval -> len;
beam_search_eval -> close;
beam_search_eval -> format;
beam_search_eval -> int;
beam_search_eval -> no_grad;
beam_search_eval -> zeros;
beam_search_eval -> ctc_decoder_predictions_tensor;
beam_search_eval -> split;
beam_search_eval -> list;
beam_search_eval -> ceil;
beam_search_eval -> max;
beam_search_eval -> eval;
beam_search_eval -> min;
beam_search_eval -> write;
beam_search_eval -> do_lowercase;
beam_search_eval -> rm_punctuation;
beam_search_eval -> separate_punctuation;
beam_search_eval -> to;
Words -> list;
Words -> keys;
AddCount -> print;
AddCount -> format;
AddCount -> AddCount;
AddCount -> len;
AddRawCountsFromLine -> range;
AddRawCountsFromLine -> len;
AddRawCountsFromLine -> max;
AddRawCountsFromLine -> tuple;
AddRawCountsFromLine -> AddCount;
AddRawCountsFromLine -> exit;
AddRawCountsFromLine -> format;
AddRawCountsFromLine -> int;
AddRawCountsFromLine -> split;
AddRawCountsFromStandardInput -> readline;
AddRawCountsFromStandardInput -> AddRawCountsFromLine;
AddRawCountsFromStandardInput -> print;
AddRawCountsFromStandardInput -> format;
ApplyBackoff -> reversed;
ApplyBackoff -> GetNumNgrams;
ApplyBackoff -> list;
ApplyBackoff -> items;
ApplyBackoff -> print;
ApplyBackoff -> range;
ApplyBackoff -> Words;
ApplyBackoff -> AddCount;
ApplyBackoff -> format;
GetNumNgrams -> range;
GetNumNgrams -> values;
GetNumNgrams -> GetNumNgrams;
GetNumNgrams -> len;
Print -> print;
Print -> items;
Print -> format;
Print -> str;
GetHistToStateMap -> dict;
GetHistToStateMap -> range;
GetHistToStateMap -> keys;
GetProb -> float;
GetProb -> print;
GetProb -> GetProb;
GetProb -> len;
GetProb -> format;
GetProb -> exit;
PruneEmptyStates -> set;
PruneEmptyStates -> reversed;
PruneEmptyStates -> list;
PruneEmptyStates -> items;
PruneEmptyStates -> print;
PruneEmptyStates -> range;
PruneEmptyStates -> len;
PruneEmptyStates -> add;
PruneEmptyStates -> str;
EnsureStructurallyNeededNgramsExist -> reversed;
EnsureStructurallyNeededNgramsExist -> GetNumNgrams;
EnsureStructurallyNeededNgramsExist -> list;
EnsureStructurallyNeededNgramsExist -> items;
EnsureStructurallyNeededNgramsExist -> print;
EnsureStructurallyNeededNgramsExist -> range;
EnsureStructurallyNeededNgramsExist -> format;
EnsureStructurallyNeededNgramsExist -> keys;
PrintAsFst -> GetHistToStateMap;
PrintAsFst -> list;
PrintAsFst -> range;
PrintAsFst -> keys;
PrintAsFst -> sorted;
PrintAsFst -> log;
PrintAsFst -> print;
PrintAsFst -> GetProb;
PrintAsFst -> len;
GetProtectedNgrams -> set;
GetProtectedNgrams -> range;
GetProtectedNgrams -> items;
GetProtectedNgrams -> reversed;
GetProtectedNgrams -> list;
GetProtectedNgrams -> keys;
GetProtectedNgrams -> add;
PruneNgram -> AddCount;
PruneNgram -> len;
PruningLogprobChange -> log;
PruningLogprobChange -> print;
PruningLogprobChange -> format;
GetLikeChangeFromPruningNgram -> PruningLogprobChange;
GetLikeChangeFromPruningNgram -> float;
GetLikeChangeFromPruningNgram -> len;
GetLikeChangeFromPruningNgram -> GetProb;
GetLikeChangeFromPruningNgram -> print;
GetLikeChangeFromPruningNgram -> exit;
GetLikeChangeFromPruningNgram -> format;
PruneToIntermediateTarget -> GetProtectedNgrams;
PruneToIntermediateTarget -> GetNumExtraNgrams;
PruneToIntermediateTarget -> range;
PruneToIntermediateTarget -> sort;
PruneToIntermediateTarget -> PruneEmptyStates;
PruneToIntermediateTarget -> items;
PruneToIntermediateTarget -> len;
PruneToIntermediateTarget -> print;
PruneToIntermediateTarget -> PruneNgram;
PruneToIntermediateTarget -> Print;
PruneToIntermediateTarget -> format;
PruneToIntermediateTarget -> join;
PruneToIntermediateTarget -> GetLikeChangeFromPruningNgram;
PruneToIntermediateTarget -> append;
PruneToIntermediateTarget -> str;
GetNumExtraNgrams -> range;
GetNumExtraNgrams -> GetNumNgrams;
PruneToFinalTarget -> GetNumExtraNgrams;
PruneToFinalTarget -> list;
PruneToFinalTarget -> sort;
PruneToFinalTarget -> print;
PruneToFinalTarget -> range;
PruneToFinalTarget -> set;
PruneToFinalTarget -> format;
PruneToFinalTarget -> PruneToIntermediateTarget;
PruneToFinalTarget -> int;
PruneToFinalTarget -> append;
IntToString -> str;
PrintAsArpa -> print;
PrintAsArpa -> range;
PrintAsArpa -> keys;
PrintAsArpa -> format;
PrintAsArpa -> GetProb;
PrintAsArpa -> GetNumNgrams;
PrintAsArpa -> join;
PrintAsArpa -> log10;
PrintAsArpa -> IntToString;
farcompile -> join;
farcompile -> setup_tokenizer;
farcompile -> Popen;
farcompile -> iter_files;
farcompile -> communicate;
farcompile -> split;
make_kenlm -> isfile;
make_kenlm -> info;
make_kenlm -> run;
make_kenlm -> join;
make_symbol_list -> isfile;
make_symbol_list -> info;
make_symbol_list -> endswith;
make_symbol_list -> isinstance;
make_symbol_list -> restore_from;
make_symbol_list -> warning;
make_symbol_list -> from_pretrained;
make_symbol_list -> len;
make_symbol_list -> chr;
make_symbol_list -> open;
make_symbol_list -> enumerate;
make_symbol_list -> range;
make_symbol_list -> write;
make_symbol_list -> device;
make_symbol_list -> str;
make_arpa -> isfile;
make_arpa -> info;
make_arpa -> run;
make_arpa -> join;
test_perplexity -> farcompile;
test_perplexity -> perplexity;
test_perplexity -> run_class_perplexity_test;
_parse_args -> ArgumentParser;
_parse_args -> add_argument;
_parse_args -> parse_args;
ngrammerge -> isfile;
ngrammerge -> info;
ngrammerge -> join;
ngrammerge -> str;
ngrammerge -> run;
arpa2mod -> isfile;
arpa2mod -> run;
arpa2mod -> join;
process_config -> ValueError;
process_config -> open_dict;
process_config -> pop;
process_config -> type;
process_config -> replace;
process_config -> split;
process_config -> strip;
process_config -> join;
process_config -> str;
replace_hf_weights -> from_pretrained;
replace_hf_weights -> load;
replace_hf_weights -> load_state_dict;
replace_hf_weights -> save_pretrained;
replace_hf_weights -> info;
adjust_nemo_config -> get;
adjust_nemo_config -> ValueError;
create_rename_keys -> range;
create_rename_keys -> extend;
rename_model_keys -> set;
rename_model_keys -> keys;
rename_model_keys -> print;
rename_model_keys -> remove;
hf_tokenizer -> warning;
hf_tokenizer -> Config;
hf_tokenizer -> join;
convert_state_dict -> items;
convert_state_dict -> replace;
convert_state_dict -> get_new_key;
convert_state_dict -> startswith;
get_new_key -> replace;
get_new_key -> startswith;
load_falcon_config -> from_pretrained;
load_falcon_config -> items;
load_falcon_config -> setattr;
get_original_key -> startswith;
get_original_key -> replace;
get_original_key -> len;
verify -> info;
verify -> hf_tokenizer;
verify -> eval;
verify -> hf_model;
verify -> _set_global_memory_buffer;
verify -> zip;
verify -> argmax;
verify -> cuda;
verify -> unsqueeze;
verify -> get_ltor_masks_and_position_ids;
verify -> nemo_model;
verify -> items;
verify -> LongTensor;
verify -> cpu;
verify -> decode;
verify -> squeeze;
verify -> _convert_id_to_token;
verify_forward -> info;
verify_forward -> from_pretrained;
verify_forward -> tokenizer;
verify_forward -> cuda;
verify_forward -> eval;
verify_forward -> model;
verify_forward -> argmax;
verify_forward -> items;
verify_forward -> Trainer;
verify_forward -> restore_from;
verify_forward -> zip;
verify_forward -> ValueError;
verify_forward -> unsqueeze;
verify_forward -> get_ltor_masks_and_position_ids;
verify_forward -> convert_ids_to_tokens;
verify_forward -> NLPDDPStrategy;
verify_forward -> LongTensor;
verify_forward -> cpu;
verify_forward -> squeeze;
replace_hf_weights_and_tokenizer -> from_pretrained;
replace_hf_weights_and_tokenizer -> load;
replace_hf_weights_and_tokenizer -> load_state_dict;
replace_hf_weights_and_tokenizer -> save_pretrained;
replace_hf_weights_and_tokenizer -> info;
replace_hf_weights_and_tokenizer -> convert_slow_tokenizer;
replace_hf_weights_and_tokenizer -> GemmaTokenizerFast;
replace_hf_weights_and_tokenizer -> len;
replace_hf_weights_and_tokenizer -> resize_token_embeddings;
replace_hf_weights_and_tokenizer -> LlamaTokenizerFast;
replace_hf_weights_and_tokenizer -> warning;
replace_hf_weights_and_tokenizer -> Qwen2TokenizerFast;
_set_default_tensor_type -> set_default_dtype;
get_mcore_model_from_nemo_file -> restore_from;
get_mcore_model_from_nemo_file -> info;
get_mcore_model_from_nemo_file -> Trainer;
get_mcore_model_from_nemo_file -> AppState;
get_mcore_model_from_nemo_file -> isdir;
get_mcore_model_from_nemo_file -> MegatronGPTModel;
get_mcore_model_from_nemo_file -> to_yaml;
get_mcore_model_from_nemo_file -> warning;
get_mcore_model_from_nemo_file -> NLPDDPStrategy;
print_mcore_parameter_names -> get_mcore_model_from_nemo_file;
print_mcore_parameter_names -> print;
print_mcore_parameter_names -> join;
print_mcore_parameter_names -> sorted;
print_mcore_parameter_names -> str;
print_mcore_parameter_names -> named_parameters;
restore_model -> Trainer;
restore_model -> restore_from;
restore_model -> get;
restore_model -> device;
restore_model -> endswith;
restore_model -> warning;
restore_model -> NLPDDPStrategy;
run_sanity_checks -> tuple;
run_sanity_checks -> eval;
run_sanity_checks -> debug;
run_sanity_checks -> summarize;
run_sanity_checks -> info;
run_sanity_checks -> state_dict;
run_sanity_checks -> items;
run_sanity_checks -> to_yaml;
run_sanity_checks -> open_dict;
run_sanity_checks -> len;
run_sanity_checks -> restore_model;
run_sanity_checks -> build_key_mapping;
run_sanity_checks -> pop;
run_sanity_checks -> endswith;
run_sanity_checks -> allclose;
run_sanity_checks -> replace;
run_sanity_checks -> cat;
run_sanity_checks -> any;
run_sanity_checks -> named_buffers;
reverse_adjust_tensor_shapes -> list;
reverse_adjust_tensor_shapes -> keys;
reverse_adjust_tensor_shapes -> replace;
reverse_adjust_tensor_shapes -> chunk;
reverse_adjust_tensor_shapes -> reshape;
reverse_adjust_tensor_shapes -> empty;
reverse_adjust_tensor_shapes -> range;
reverse_adjust_tensor_shapes -> state_dict;
restore_model_from_checkpoint -> _set_model_restore_state;
restore_model_from_checkpoint -> ptl_load_state;
restore_model_from_checkpoint -> cls;
restore_model_from_checkpoint -> named_parameters;
restore_model_from_checkpoint -> named_buffers;
restore_model_from_checkpoint -> len;
restore_model_from_checkpoint -> RuntimeError;
restore_model_from_checkpoint -> register_artifact;
restore_model_from_checkpoint -> to;
restore_model_from_checkpoint -> pop;
restore_model_from_checkpoint -> print;
restore_model_from_checkpoint -> keys;
restore_model_from_checkpoint -> exists;
load_mistral_ckpt -> join;
load_mistral_ckpt -> exists;
load_mistral_ckpt -> from_pretrained;
load_mistral_ckpt -> open;
load_mistral_ckpt -> load;
load_mistral_ckpt -> print;
load_mistral_ckpt -> LazyStateDict;
load_mistral_ckpt -> state_dict;
parse_precision -> int;
parse_precision -> float;
parse_precision -> is_available;
parse_precision -> is_bf16_supported;
parse_precision -> warning;
make_trainer -> load_mistral_ckpt;
make_trainer -> load_config;
make_trainer -> parse_precision;
make_trainer -> print;
make_trainer -> Trainer;
make_trainer -> get;
make_trainer -> GradScaler;
make_trainer -> append;
make_trainer -> NLPDDPStrategy;
make_trainer -> MegatronHalfPrecisionPlugin;
make_trainer -> PipelineMixedPrecisionPlugin;
make_trainer -> load_mixtral_ckpt;
make_trainer -> get_tokenizer_path;
md5_checksum -> md5;
md5_checksum -> hexdigest;
md5_checksum -> open;
md5_checksum -> iter;
md5_checksum -> update;
md5_checksum -> read;
save_to_nemo -> info;
save_to_nemo -> load_mistral_ckpt;
save_to_nemo -> load_config;
save_to_nemo -> parse_precision;
save_to_nemo -> get;
save_to_nemo -> make_trainer;
save_to_nemo -> restore_model_from_checkpoint;
save_to_nemo -> NLPSaveRestoreConnector;
save_to_nemo -> save_to;
save_to_nemo -> list;
save_to_nemo -> getattr;
save_to_nemo -> hexdigest;
save_to_nemo -> keys;
save_to_nemo -> pop;
save_to_nemo -> md5_checksum;
save_to_nemo -> len;
save_to_nemo -> warning;
save_to_nemo -> replace;
save_to_nemo -> sub;
save_to_nemo -> open_dict;
save_to_nemo -> set;
save_to_nemo -> add;
save_to_nemo -> items;
save_to_nemo -> md5;
save_to_nemo -> create;
save_to_nemo -> values;
save_to_nemo -> make_token_name;
save_to_nemo -> encode;
save_to_nemo -> load_mixtral_ckpt;
save_to_nemo -> get_tokenizer_path;
make_token_name -> sub;
make_token_name -> len;
load_hf_model_args -> join;
load_hf_model_args -> exists;
load_hf_model_args -> open;
load_hf_model_args -> load;
load_mixtral_ckpt -> load_hf_model_args;
load_mixtral_ckpt -> from_pretrained;
load_mixtral_ckpt -> state_dict;
get_tokenizer_path -> make_sentencepiece_tokenizer;
make_sentencepiece_tokenizer -> insert;
make_sentencepiece_tokenizer -> list;
make_sentencepiece_tokenizer -> sort;
make_sentencepiece_tokenizer -> init_spm;
make_sentencepiece_tokenizer -> items;
make_sentencepiece_tokenizer -> SentencePiece;
make_sentencepiece_tokenizer -> append;
make_sentencepiece_tokenizer -> open;
make_sentencepiece_tokenizer -> write;
make_sentencepiece_tokenizer -> print;
make_sentencepiece_tokenizer -> quit;
make_sentencepiece_tokenizer -> SerializeToString;
make_sentencepiece_tokenizer -> ModelProto;
make_sentencepiece_tokenizer -> startswith;
make_sentencepiece_tokenizer -> len;
make_sentencepiece_tokenizer -> set;
make_sentencepiece_tokenizer -> float;
init_spm -> ParseDict;
init_spm -> ModelProto;
load_fp8_config -> load_config;
get_nemo2_model -> isdir;
get_nemo2_model -> load_fp8_config;
get_nemo2_model -> model_cls;
get_nemo2_model -> load_context;
get_nemo2_model -> join;
get_nemo2_model -> ValueError;
get_nemo2_model -> config_cls;
get_nemo2_model -> Path;
get_nemo2_model -> list;
get_nemo2_model -> keys;
convert_hf_config -> dump;
convert_hf_config -> get;
convert_hf_config -> open;
convert_tiktoken -> remove;
convert_tiktoken -> open;
convert_tiktoken -> load;
convert_tiktoken -> append;
convert_tiktoken -> write;
extract_nemotron_tokenizer -> endswith;
extract_nemotron_tokenizer -> from_pretrained;
extract_nemotron_tokenizer -> PreTrainedTokenizerFast;
extract_nemotron_tokenizer -> save_pretrained;
extract_nemotron_tokenizer -> info;
extract_nemotron_tokenizer -> open;
extract_nemotron_tokenizer -> extract;
extract_nemotron_tokenizer -> close;
extract_nemotron_tokenizer -> rename;
extract_nemotron_tokenizer -> isdir;
extract_nemotron_tokenizer -> join;
extract_nemotron_tokenizer -> convert_tiktoken;
extract_nemotron_tokenizer -> converted;
extract_nemotron_tokenizer -> remove;
extract_nemotron_tokenizer -> isinstance;
extract_nemotron_tokenizer -> copy;
extract_nemotron_tokenizer -> ValueError;
extract_nemotron_tokenizer -> TikTokenConverter;
extract_nemotron_tokenizer -> LlamaConverter;
filter_keys -> list;
filter_keys -> keys;
filter_keys -> rule;
map_keys -> rule;
map_keys -> items;
split_name -> split;
split_name -> join;
numdots -> count;
model_to_tree -> list;
model_to_tree -> SegTree;
model_to_tree -> keys;
model_to_tree -> add;
load_hf_ckpt -> isdir;
load_hf_ckpt -> safe_open;
load_hf_ckpt -> keys;
load_hf_ckpt -> get_tensor;
dup_convert_name_recursive -> items;
dup_convert_name_recursive -> dup_convert_name_recursive;
hf_to_nemo_mapping -> items;
hf_to_nemo_mapping -> is_leaf;
hf_to_nemo_mapping -> hf_to_nemo_mapping;
convert_input_keys -> dup_convert_name_recursive;
convert_input_keys -> sorted;
convert_input_keys -> list;
convert_input_keys -> get;
convert_input_keys -> keys;
convert_input_keys -> str;
convert_input_keys -> SegTree;
convert_input_keys -> len;
convert_input_keys -> map_resnet_block;
convert_input_keys -> warning;
convert_input_keys -> map_attention_block;
map_resnet_block -> dup_convert_name_recursive;
map_resnet_block -> get;
map_attention_block -> check_att_type;
map_attention_block -> dup_convert_name_recursive;
map_attention_block -> list;
map_attention_block -> warning;
map_attention_block -> keys;
clean_convert_names -> items;
clean_convert_names -> clean_convert_names;
is_leaf -> len;
convert_cond_keys -> get;
convert_cond_keys -> info;
convert_cond_keys -> dup_convert_name_recursive;
convert_middle_keys -> map_resnet_block;
convert_middle_keys -> map_attention_block;
convert_output_keys -> sorted;
convert_output_keys -> list;
convert_output_keys -> get;
convert_output_keys -> keys;
convert_output_keys -> str;
convert_output_keys -> SegTree;
convert_output_keys -> len;
convert_output_keys -> dup_convert_name_recursive;
convert_output_keys -> map_resnet_block;
convert_output_keys -> warning;
convert_output_keys -> map_attention_block;
convert_finalout_keys -> dup_convert_name_recursive;
convert_encoder -> dup_convert_name_recursive;
convert_encoder -> items;
convert_encoder -> get;
convert_encoder -> SegTree;
convert_encoder -> len;
convert_decoder -> dup_convert_name_recursive;
convert_decoder -> len;
convert_decoder -> items;
convert_decoder -> str;
convert_decoder -> get;
convert_decoder -> SegTree;
convert_decoder -> int;
load_sc2_ckpt -> join;
load_sc2_ckpt -> exists;
load_sc2_ckpt -> from_pretrained;
load_sc2_ckpt -> state_dict;
load_sc2_ckpt -> open;
load_sc2_ckpt -> load;
corrupt_linear_weight_ -> state_dict;
corrupt_linear_weight_ -> keys;
corrupt_linear_weight_ -> load_state_dict;
corrupt_linear_weight_ -> any;
corrupt_linear_weight_ -> dequantize;
corrupt_linear_weight_ -> nf4_quantize;
map_target_modules_to_canonical -> set;
map_target_modules_to_canonical -> items;
map_target_modules_to_canonical -> ValueError;
reformat_module_names_to_canonical -> dict;
reformat_module_names_to_canonical -> items;
reformat_module_names_to_canonical -> replace;
convert_lora -> loads;
convert_lora -> load;
convert_lora -> reformat_module_names_to_canonical;
convert_lora -> read;
convert_lora -> TemporaryDirectory;
convert_lora -> save;
convert_lora -> _make_nemo_file_from_folder;
convert_lora -> open_dict;
convert_lora -> map_target_modules_to_canonical;
convert_lora -> open;
fix_for_O2 -> items;
fix_for_O2 -> replace;
calculate_score -> predict;
calculate_score -> confusion_matrix;
calculate_score -> sum;
calculate_score -> diag;
train_model_selection -> fit;
train_model_selection -> make_pipeline;
train_model_selection -> append;
train_model_selection -> calculate_score;
train_model_selection -> info;
train_model_selection -> StandardScaler;
train_model_selection -> LogisticRegression;
train_model_selection -> exp;
train_model_selection -> str;
train_model_selection -> linspace;
train_model_selection -> log;
subsample_manifest -> open;
subsample_manifest -> readlines;
subsample_manifest -> len;
subsample_manifest -> sample;
subsample_manifest -> write;
subsample_manifest -> join;
cleanup_subsampled_manifests -> remove;
compute_all_confidences -> get_filtered_logprobs;
compute_all_confidences -> get_confidence_aggregation_bank;
compute_all_confidences -> get_confidence_measure_bank;
compute_all_confidences -> item;
compute_all_confidences -> ConfidenceSpec;
compute_all_confidences -> cpu;
compute_all_confidences -> aggr_func;
compute_all_confidences -> conf_func;
find_best_confidence -> info;
find_best_confidence -> tqdm;
find_best_confidence -> len;
find_best_confidence -> keys;
find_best_confidence -> array;
find_best_confidence -> train_model_selection;
find_best_confidence -> to_confidence_config;
find_best_confidence -> append;
find_best_confidence -> list;
find_best_confidence -> zip;
find_best_confidence -> str;
get_grid_size -> len;
test_confidence_ensemble -> parametrize;
test_confidence_ensemble -> Path;
test_confidence_ensemble -> run;
test_confidence_ensemble -> EvaluationConfig;
test_confidence_ensemble -> main;
test_confidence_ensemble -> getenv;
test_confidence_ensemble -> ValueError;
test_confidence_ensemble -> str;
test_confidence_ensemble -> TextProcessingConfig;
get_out_dir_name -> join;
get_out_dir_name -> str;
process_row -> from_file;
process_row -> NoisePerturbation;
process_row -> get_out_dir_name;
process_row -> makedirs;
process_row -> join;
process_row -> exists;
process_row -> deepcopy;
process_row -> perturb;
process_row -> max;
process_row -> write;
process_row -> basename;
process_row -> abs;
process_row -> transpose;
process_row -> replace;
process_row -> splitext;
__convert_audio -> run;
__process_set -> glob;
__process_set -> ProcessPoolExecutor;
__process_set -> tqdm;
__process_set -> as_completed;
__process_set -> shutdown;
__process_set -> close;
__process_set -> exists;
__process_set -> makedirs;
__process_set -> splitext;
__process_set -> join;
__process_set -> append;
__process_set -> update;
__process_set -> basename;
__process_set -> format;
__process_set -> submit;
__process_set -> len;
__retrieve_with_progress -> open;
__retrieve_with_progress -> urlopen;
__retrieve_with_progress -> write;
__retrieve_with_progress -> tqdm;
__retrieve_with_progress -> update;
__retrieve_with_progress -> len;
__extract_all_files -> exists;
__extract_all_files -> extract_file;
__extract_all_files -> join;
__extract_all_files -> walk;
__extract_all_files -> info;
__extract_all_files -> open;
__extract_all_files -> extractall;
__extract_all_files -> close;
extract_file -> open;
extract_file -> extractall;
extract_file -> close;
extract_file -> info;
extract_file -> ZipFile;
extract_file -> str;
__process_data -> join;
__process_data -> sorted;
__process_data -> exists;
__process_data -> makedirs;
__process_data -> open;
__process_data -> walk;
__process_data -> items;
__process_data -> strip;
__process_data -> split;
__process_data -> replace;
__process_data -> write;
__process_data -> check_output;
__process_data -> float;
__process_data -> append;
__process_data -> format;
__process_data -> dumps;
__process_data -> get;
__process_data -> abspath;
__process_data -> filter;
__process_data -> Pool;
__process_data -> partial;
__process_data -> imap;
__process_data -> tqdm;
__process_data -> extend;
__process_data -> len;
__process_data -> chdir;
__process_data -> glob;
__process_data -> print;
__process_data -> int;
__process_data -> move;
__process_data -> copy;
__process_data -> range;
__process_data -> str;
__process_data -> rstrip;
__process_data -> splitext;
__process_data -> basename;
__process_data -> listdir;
__process_data -> upper;
__process_data -> read;
__process_data -> __process_one_file;
__process_data -> compile;
__process_data -> set;
__process_data -> info;
__process_data -> __construct_filepaths;
__process_data -> close;
__process_data -> RandomState;
__process_data -> shuffle;
__process_data -> sum;
__process_data -> match;
__process_data -> ceil;
__process_data -> add;
__process_data -> __get_mp_chunksize;
__process_data -> group;
__process_data -> extract_file;
__process_data -> __process_flac_audio;
__process_data -> create_manifest;
__process_data -> download;
__process_data -> Path;
__process_data -> warning;
__process_data -> StratifiedShuffleSplit;
__process_data -> write_file;
__process_data -> load;
__process_data -> get_duration;
__process_data -> list;
__process_data -> dump;
__process_data -> write_wav;
__process_data -> __process_transcript;
__process_data -> save;
__process_data -> Random;
__process_data -> search;
__process_data -> loads;
__process_data -> readlines;
__process_data -> round;
__process_data -> readline;
__process_data -> Normalizer;
__process_data -> normalize;
__process_data -> normalizer_call;
__process_data -> duration;
__process_data -> ValueError;
__process_data -> create_spt_model;
__process_data -> BertWordPieceTokenizer;
__process_data -> train;
__process_data -> save_model;
__process_data -> remove;
process_files -> join;
process_files -> makedirs;
process_files -> info;
process_files -> dirname;
process_files -> strip;
process_files -> duration;
process_files -> format;
process_files -> open;
process_files -> DictReader;
process_files -> next;
process_files -> splitext;
process_files -> getsize;
process_files -> warning;
process_files -> exists;
process_files -> Transformer;
process_files -> rate;
process_files -> channels;
process_files -> build;
process_files -> append;
process_files -> ThreadPool;
process_files -> list;
process_files -> basename;
process_files -> lower;
process_files -> endswith;
process_files -> tqdm;
process_files -> imap;
process_files -> len;
__create_manifest -> basename;
__create_manifest -> glob;
__create_manifest -> sort;
__create_manifest -> makedirs;
__create_manifest -> join;
__create_manifest -> open;
__create_manifest -> dirname;
__create_manifest -> check_output;
__create_manifest -> write;
__create_manifest -> format;
__create_manifest -> float;
__create_manifest -> dumps;
__process_transcript -> dirname;
__process_transcript -> open;
__process_transcript -> strip;
__process_transcript -> join;
__process_transcript -> check_output;
__process_transcript -> abspath;
__process_transcript -> float;
__process_transcript -> append;
__process_transcript -> exists;
__process_transcript -> build;
__process_transcript -> format;
__process_transcript -> lower;
__process_transcript -> index;
__process_transcript -> Transformer;
__process_transcript -> mkdir;
__process_transcript -> OpenCC;
__process_transcript -> Normalizer;
__process_transcript -> set;
__process_transcript -> enumerate;
__process_transcript -> normalize;
__process_transcript -> sorted;
__process_transcript -> convert;
__process_transcript -> normalizer_call;
__process_transcript -> Path;
__process_transcript -> str;
__process_transcript -> split;
__process_transcript -> replace;
__process_transcript -> add;
__process_transcript -> run;
__process_transcript -> int;
__process_transcript -> readlines;
__get_vocab -> join;
__get_vocab -> sorted;
__get_vocab -> open;
__get_vocab -> close;
__get_vocab -> exists;
__get_vocab -> makedirs;
__get_vocab -> items;
__get_vocab -> write;
__get_vocab -> split;
__get_vocab -> upper;
__get_vocab -> strip;
__write_sample -> __partition_name;
__write_sample -> join;
__write_sample -> write;
__write_sample -> open;
__write_sample -> dump;
__normalize -> maketrans;
__normalize -> translate;
__normalize -> sub;
__normalize -> fromkeys;
__normalize -> replace;
__normalize -> lower;
__process_utterance -> split;
__process_utterance -> join;
__process_utterance -> get;
__process_utterance -> items;
__process_utterance -> __normalize;
__process_utterance -> startswith;
__process_utterance -> float;
__process_utterance -> print;
__process_utterance -> replace;
__process_utterance -> strip;
__process_utterance -> str;
__process_one_file -> open;
__process_one_file -> readline;
__process_one_file -> __process_utterance;
__process_one_file -> append;
__process_one_file -> __write_sample;
__process_one_file -> concatenate;
__process_one_file -> floor;
__process_one_file -> ceil;
get_utt_id -> format;
get_utt_id -> int;
convert_utterances -> run;
create_wavs -> join;
create_wavs -> glob;
create_wavs -> tqdm;
create_wavs -> splitext;
create_wavs -> run;
create_wavs -> basename;
process_transcripts -> join;
process_transcripts -> set;
process_transcripts -> open;
process_transcripts -> startswith;
process_transcripts -> replace;
process_transcripts -> lower;
process_transcripts -> search;
process_transcripts -> StmUtterance;
process_transcripts -> _replace;
process_transcripts -> get;
process_transcripts -> append;
process_transcripts -> update;
process_transcripts -> strip;
process_transcripts -> get_utt_id;
process_transcripts -> list;
process_transcripts -> groups;
process_transcripts -> float;
write_one_segment -> join;
write_one_segment -> write;
write_one_segment -> open;
write_one_segment -> dump;
segment_audio -> sorted;
segment_audio -> append;
segment_audio -> attrgetter;
segment_audio -> read;
segment_audio -> write_one_segment;
segment_audio -> join;
segment_audio -> lower;
segment_audio -> concatenate;
segment_audio -> floor;
segment_audio -> ceil;
download_slurp -> Path;
download_slurp -> mkdir;
download_slurp -> print;
download_slurp -> str;
download_slurp -> __maybe_download_file;
download_slurp -> __extract_all_files;
download_slurp -> split;
process_raw_annotations -> Path;
process_raw_annotations -> print;
process_raw_annotations -> join;
process_raw_annotations -> DataFrame;
process_raw_annotations -> open;
process_raw_annotations -> readlines;
process_raw_annotations -> tqdm;
process_raw_annotations -> strip;
process_raw_annotations -> loads;
process_raw_annotations -> count;
process_raw_annotations -> range;
process_raw_annotations -> write;
process_raw_annotations -> len;
process_raw_annotations -> append;
process_raw_annotations -> str;
process_raw_annotations -> dumps;
process_raw_annotations -> lower;
process_raw_annotations -> split;
decode_resample_slurp -> mkdir;
decode_resample_slurp -> Path;
decode_resample_slurp -> is_dir;
decode_resample_slurp -> print;
decode_resample_slurp -> list;
decode_resample_slurp -> load_data;
decode_resample_slurp -> process_map;
decode_resample_slurp -> glob;
decode_resample_slurp -> str;
decode_resample_slurp -> open;
decode_resample_slurp -> tqdm;
decode_resample_slurp -> len;
decode_resample_slurp -> cpu_count;
decode_resample_slurp -> write;
decode_resample_slurp -> dumps;
__construct_filepaths -> defaultdict;
__construct_filepaths -> match;
__construct_filepaths -> append;
__construct_filepaths -> group;
__construct_silence_set -> load;
__construct_silence_set -> range;
__construct_silence_set -> join;
__construct_silence_set -> write;
__construct_silence_set -> append;
__construct_silence_set -> len;
__construct_silence_set -> uniform;
__construct_silence_set -> basename;
__rebalance_files -> RandomState;
__rebalance_files -> asarray;
__rebalance_files -> len;
__rebalance_files -> choice;
__rebalance_files -> append;
__prepare_metadata -> dumps;
__prepare_metadata -> get_duration;
split_train_val_test -> train_test_split;
split_train_val_test -> info;
split_train_val_test -> listdir;
split_train_val_test -> open;
split_train_val_test -> write;
split_train_val_test -> choice;
split_train_val_test -> isdir;
split_train_val_test -> join;
split_train_val_test -> extend;
split_train_val_test -> int;
split_train_val_test -> endswith;
split_train_val_test -> len;
split_train_val_test -> glob;
split_train_val_test -> append;
split_train_val_test -> split;
process_google_speech_train -> listdir;
process_google_speech_train -> copy;
process_google_speech_train -> update;
process_google_speech_train -> info;
process_google_speech_train -> open;
process_google_speech_train -> splitlines;
process_google_speech_train -> set;
process_google_speech_train -> write;
process_google_speech_train -> isdir;
process_google_speech_train -> extend;
process_google_speech_train -> split;
process_google_speech_train -> join;
process_google_speech_train -> glob;
process_google_speech_train -> read;
process_google_speech_train -> len;
load_list_write_manifest -> join;
load_list_write_manifest -> write_manifest;
load_list_write_manifest -> open;
load_list_write_manifest -> splitlines;
load_list_write_manifest -> split;
load_list_write_manifest -> read;
rebalance_json -> join;
rebalance_json -> info;
rebalance_json -> open;
rebalance_json -> split;
rebalance_json -> len;
rebalance_json -> choice;
rebalance_json -> append;
rebalance_json -> dump;
rebalance_json -> write;
rebalance_json -> flush;
rebalance_json -> loads;
generate_variety_noise -> join;
generate_variety_noise -> RandomState;
generate_variety_noise -> info;
generate_variety_noise -> len;
generate_variety_noise -> split;
generate_variety_noise -> exists;
generate_variety_noise -> mkdir;
generate_variety_noise -> open;
generate_variety_noise -> splitlines;
generate_variety_noise -> load;
generate_variety_noise -> range;
generate_variety_noise -> write;
generate_variety_noise -> format;
generate_variety_noise -> uniform;
generate_variety_noise -> append;
generate_variety_noise -> read;
convert_arp_to_ipa -> split;
convert_arp_to_ipa -> syllabify;
convert_arp_to_ipa -> enumerate;
convert_arp_to_ipa -> strip;
convert_arp_to_ipa -> replace;
convert_arp_to_ipa -> isdigit;
convert_arp_to_ipa -> from_iterable;
convert_arp_to_ipa -> ValueError;
syllabify -> list;
syllabify -> enumerate;
syllabify -> range;
syllabify -> len;
syllabify -> insert;
syllabify -> zip;
syllabify -> from_iterable;
syllabify -> ValueError;
syllabify -> append;
syllabify -> pop;
syllabify -> tuple;
_get_arpabet_to_ipa_mapping -> open;
_get_arpabet_to_ipa_mapping -> split;
_get_arpabet_to_ipa_mapping -> strip;
convert_cmu_arpabet_to_ipa -> _get_arpabet_to_ipa_mapping;
convert_cmu_arpabet_to_ipa -> print;
convert_cmu_arpabet_to_ipa -> open;
convert_cmu_arpabet_to_ipa -> startswith;
convert_cmu_arpabet_to_ipa -> write;
convert_cmu_arpabet_to_ipa -> split;
convert_cmu_arpabet_to_ipa -> convert_arp_to_ipa;
convert_cmu_arpabet_to_ipa -> abspath;
convert_cmu_arpabet_to_ipa -> strip;
read_wikihomograph_file -> open;
read_wikihomograph_file -> reader;
read_wikihomograph_file -> enumerate;
read_wikihomograph_file -> correct_wikihomograph_data;
read_wikihomograph_file -> append;
read_wikihomograph_file -> int;
read_wikihomograph_file -> lower;
read_wikihomograph_file -> count;
read_wikihomograph_file -> index;
read_wikihomograph_file -> ValueError;
read_wikihomograph_file -> len;
correct_wikihomograph_data -> replace;
convert_wikihomograph_data_to_manifest -> print;
convert_wikihomograph_data_to_manifest -> open;
convert_wikihomograph_data_to_manifest -> tqdm;
convert_wikihomograph_data_to_manifest -> glob;
convert_wikihomograph_data_to_manifest -> read_wikihomograph_file;
convert_wikihomograph_data_to_manifest -> enumerate;
convert_wikihomograph_data_to_manifest -> write;
convert_wikihomograph_data_to_manifest -> dumps;
convert_cpp_data_to_manifest -> defaultdict;
convert_cpp_data_to_manifest -> print;
convert_cpp_data_to_manifest -> open;
convert_cpp_data_to_manifest -> write;
convert_cpp_data_to_manifest -> items;
convert_cpp_data_to_manifest -> enumerate;
convert_cpp_data_to_manifest -> readlines;
convert_cpp_data_to_manifest -> strip;
convert_cpp_data_to_manifest -> index;
convert_cpp_data_to_manifest -> replace;
convert_cpp_data_to_manifest -> add;
convert_cpp_data_to_manifest -> dumps;
destress -> append;
process_data -> seed;
process_data -> shuffle;
process_data -> len;
process_data -> int;
process_data -> gen_file;
process_data -> extract_questions;
gen_file -> print;
gen_file -> open;
gen_file -> tqdm;
gen_file -> split;
gen_file -> strip;
gen_file -> write;
gen_file -> dumps;
copy_input_files -> info;
copy_input_files -> makedirs;
copy_input_files -> exists;
copy_input_files -> copytree;
get_intents -> sort;
get_intents -> info;
get_intents -> listdir;
get_intents -> len;
get_intent_queries -> enumerate;
get_intent_queries -> readlines;
get_intent_queries -> split;
get_intent_queries -> append;
get_intent_queries -> open;
get_intent_queries -> str;
get_slot_queries -> len;
get_slot_queries -> readlines;
get_slot_queries -> split;
get_slot_queries -> append;
get_slot_queries -> open;
get_slot_queries -> strip;
get_slot_queries -> str;
process_assistant -> if_exist;
process_assistant -> info;
process_assistant -> makedirs;
process_assistant -> copy_input_files;
process_assistant -> get_intents;
process_assistant -> write_files;
process_assistant -> get_slots;
process_assistant -> get_intent_queries;
process_assistant -> get_slot_queries;
process_assistant -> format;
process_assistant -> enumerate;
augment_nemo_data -> makedirs;
augment_nemo_data -> read_csv;
augment_nemo_data -> list;
augment_nemo_data -> index;
augment_nemo_data -> tolist;
augment_nemo_data -> set;
augment_nemo_data -> range;
augment_nemo_data -> DataFrame;
augment_nemo_data -> append;
augment_nemo_data -> reset_index;
augment_nemo_data -> to_csv;
augment_nemo_data -> open;
augment_nemo_data -> splitlines;
augment_nemo_data -> ValueError;
augment_nemo_data -> map;
augment_nemo_data -> len;
augment_nemo_data -> sample;
augment_nemo_data -> read;
augment_nemo_data -> tuple;
augment_nemo_data -> product;
augment_nemo_data -> min;
augment_nemo_data -> join;
augment_nemo_data -> enumerate;
augment_nemo_data -> split;
augment_nemo_data -> sorted;
augment_nemo_data -> union;
convert_atis_multi_label -> read_csv;
convert_atis_multi_label -> iterrows;
convert_atis_multi_label -> DataFrame;
convert_atis_multi_label -> to_csv;
convert_atis_multi_label -> open;
convert_atis_multi_label -> splitlines;
convert_atis_multi_label -> enumerate;
convert_atis_multi_label -> append;
convert_atis_multi_label -> int;
convert_atis_multi_label -> split;
convert_atis_multi_label -> read;
convert_intent_dictionary -> makedirs;
convert_intent_dictionary -> join;
convert_intent_dictionary -> open;
convert_intent_dictionary -> splitlines;
convert_intent_dictionary -> read;
convert_intent_dictionary -> write;
ids2text -> join;
ids2text -> int;
process_atis -> get_vocab;
process_atis -> if_exist;
process_atis -> info;
process_atis -> makedirs;
process_atis -> copyfile;
process_atis -> open;
process_atis -> write;
process_atis -> readlines;
process_atis -> enumerate;
process_atis -> close;
process_atis -> format;
process_atis -> join;
process_atis -> ids2text;
process_atis -> lower;
process_atis -> split;
process_atis -> strip;
process_snips -> info;
process_snips -> makedirs;
process_snips -> append;
process_snips -> get_dataset;
process_snips -> create_dataset;
process_snips -> exists;
process_snips -> ValueError;
process_snips -> if_exist;
process_snips -> format;
process_jarvis_datasets -> if_exist;
process_jarvis_datasets -> info;
process_jarvis_datasets -> makedirs;
process_jarvis_datasets -> open;
process_jarvis_datasets -> write;
process_jarvis_datasets -> close;
process_jarvis_datasets -> readlines;
process_jarvis_datasets -> enumerate;
process_jarvis_datasets -> format;
process_jarvis_datasets -> join;
process_jarvis_datasets -> split;
process_jarvis_datasets -> strip;
process_jarvis_datasets -> sort;
process_jarvis_datasets -> len;
process_jarvis_datasets -> lower;
process_jarvis_datasets -> append;
process_jarvis_datasets -> extend;
process_jarvis_datasets -> str;
process_jarvis_datasets -> int;
process_data_for_prompt_learning -> open;
process_data_for_prompt_learning -> print;
process_data_for_prompt_learning -> enumerate;
process_data_for_prompt_learning -> join;
process_data_for_prompt_learning -> tqdm;
process_data_for_prompt_learning -> split;
process_data_for_prompt_learning -> int;
process_data_for_prompt_learning -> strip;
process_data_for_prompt_learning -> get_slots;
process_data_for_prompt_learning -> write;
process_data_for_prompt_learning -> dumps;
extract_questions -> extend;
extract_questions -> append;
extract_questions -> range;
extract_questions -> len;
__process_flac_audio -> makedirs;
__process_flac_audio -> listdir;
__process_flac_audio -> join;
__process_flac_audio -> Path;
__process_flac_audio -> exists;
__process_flac_audio -> build;
__process_flac_audio -> Transformer;
__remove_tarred_files -> exists;
__remove_tarred_files -> isfile;
__remove_tarred_files -> info;
__remove_tarred_files -> remove;
_generate_manifest -> str;
_generate_manifest -> create_manifest;
_generate_manifest -> open;
_generate_manifest -> write;
_generate_manifest -> join;
_generate_manifest -> listdir;
get_audio -> join;
get_audio -> system;
get_audio -> exists;
get_audio -> range;
get_audio -> len;
get_audio -> str;
get_audio -> append;
get_audio -> print;
get_audio -> open;
get_audio -> write;
get_text -> open;
get_text -> close;
get_text -> strip;
get_text -> split;
get_text -> enumerate;
get_text -> str;
get_text -> startswith;
get_text -> sub;
get_text -> replace;
get_text -> replace_diacritics;
get_text -> write;
get_text -> endswith;
get_text -> match;
_compute_stats -> cat;
_compute_stats -> item;
_compute_stats -> mean;
_compute_stats -> std;
_get_sup_data_filepath -> Path;
_get_sup_data_filepath -> relative_to;
_get_sup_data_filepath -> with_suffix;
_get_sup_data_filepath -> replace;
_get_sup_data_filepath -> str;
get_pitch_stats -> cat;
get_pitch_stats -> print;
get_pitch_stats -> item;
get_pitch_stats -> mean;
get_pitch_stats -> std;
get_pitch_stats -> min;
get_pitch_stats -> max;
preprocess_ds_for_fastpitch_align -> tqdm;
preprocess_ds_for_fastpitch_align -> get_pitch_stats;
preprocess_ds_for_fastpitch_align -> squeeze;
preprocess_ds_for_fastpitch_align -> append;
preprocess_ds_for_fastpitch_align -> len;
preprocess_ds_for_mixer_tts_x -> tqdm;
preprocess_ds_for_mixer_tts_x -> get_pitch_stats;
preprocess_ds_for_mixer_tts_x -> squeeze;
preprocess_ds_for_mixer_tts_x -> append;
preprocess_ds_for_mixer_tts_x -> len;
__load_wav -> transpose;
__load_wav -> SoundFile;
__load_wav -> read;
__generate_mels -> __load_wav;
__generate_mels -> to;
__generate_mels -> unsqueeze;
__generate_mels -> no_grad;
__generate_mels -> preprocessor;
__generate_mels -> save;
__generate_mels -> str;
__generate_mels -> tensor;
__generate_mels -> parse;
__generate_mels -> BetaBinomialInterpolator;
__generate_mels -> forward;
__generate_mels -> numpy;
__generate_mels -> from_numpy;
__generate_mels -> Path;
__generate_mels -> beta_binomial_interpolator;
__generate_mels -> beta_binomial_prior_distribution;
__generate_mels -> item;
_process_entry -> Path;
_process_entry -> get_abs_rel_paths;
_process_entry -> with_suffix;
_process_entry -> mkdir;
_process_entry -> round;
_process_entry -> isabs;
_process_entry -> exists;
_process_entry -> get_duration;
_process_entry -> load;
_process_entry -> str;
_process_entry -> trim_audio;
_process_entry -> resample;
_process_entry -> normalize_volume;
_process_entry -> write;
_process_entry -> int;
_process_entry -> normalize;
_process_entry -> lower;
chunks -> zip_longest;
chunks -> list;
chunks -> iter;
prepare_paired_mel_spectrograms -> load_model;
prepare_paired_mel_spectrograms -> merge;
prepare_paired_mel_spectrograms -> TTSDatasetResynthesizer;
prepare_paired_mel_spectrograms -> read_manifest;
prepare_paired_mel_spectrograms -> mkdir;
prepare_paired_mel_spectrograms -> tqdm;
prepare_paired_mel_spectrograms -> write_manifest;
prepare_paired_mel_spectrograms -> DictConfig;
prepare_paired_mel_spectrograms -> zip;
prepare_paired_mel_spectrograms -> cpu;
prepare_paired_mel_spectrograms -> flatten;
prepare_paired_mel_spectrograms -> enumerate;
prepare_paired_mel_spectrograms -> str;
prepare_paired_mel_spectrograms -> resynthesized_batches;
prepare_paired_mel_spectrograms -> chunks;
prepare_paired_mel_spectrograms -> print;
prepare_paired_mel_spectrograms -> numpy;
prepare_paired_mel_spectrograms -> save;
prepare_paired_mel_spectrograms -> append;
prepare_paired_mel_spectrograms -> absolute;
prepare_paired_mel_spectrograms -> tolist;
prepare_paired_mel_spectrograms -> Path;
prepare_paired_mel_spectrograms -> clone;
resynthesized_batches -> setup_training_data;
resynthesized_batches -> iter;
resynthesized_batches -> process_batch;
resynthesized_batches -> resynthesize_batch;
argument_parser -> ArgumentParser;
argument_parser -> add_argument;
resynthesize_batch -> no_grad;
resynthesize_batch -> to_device_recursive;
resynthesize_batch -> preprocessor;
resynthesize_batch -> get;
resynthesize_batch -> forward;
resynthesize_batch -> keys;
resynthesize_batch -> isinstance;
resynthesize_batch -> NotImplementedError;
resynthesize_batch -> dict;
resynthesize_batch -> zip;
normalizer_call -> normalize;
__save_json -> info;
__save_json -> open;
__save_json -> write;
__save_json -> dumps;
__text_normalization -> Normalizer;
__text_normalization -> info;
__text_normalization -> normalize;
__text_normalization -> normalizer_call;
__text_normalization -> update;
__text_normalization -> open;
__text_normalization -> readlines;
__text_normalization -> str;
__text_normalization -> Parallel;
__text_normalization -> write;
__text_normalization -> delayed;
__text_normalization -> loads;
__text_normalization -> tqdm;
__text_normalization -> dumps;
add_normalized_text -> normalizer_call;
add_normalized_text -> update;
get_trt_deployable -> TensorRTMMExporter;
get_trt_deployable -> info;
get_trt_deployable -> mkdir;
get_trt_deployable -> ValueError;
get_trt_deployable -> isdir;
get_trt_deployable -> export;
get_trt_deployable -> Path;
get_trt_deployable -> RuntimeError;
get_trt_deployable -> str;
nemo_deploy -> get_args;
nemo_deploy -> setLevel;
nemo_deploy -> info;
nemo_deploy -> get_trt_deployable;
nemo_deploy -> stop;
nemo_deploy -> format;
nemo_deploy -> DeployPyTriton;
nemo_deploy -> deploy;
nemo_deploy -> serve;
nemo_deploy -> error;
nemo_deploy -> str;
nemo_deploy -> MegatronLLMDeployableNemo2;
nemo_deploy -> is_initialized;
nemo_deploy -> ValueError;
nemo_deploy -> get_rank;
nemo_deploy -> broadcast;
nemo_deploy -> tensor;
nemo_deploy -> generate_other_ranks;
nemo_deploy -> lower;
nemo_deploy -> store_args_to_json;
nemo_deploy -> get_trtllm_deployable;
nemo_deploy -> run;
nemo_deploy -> get_nemo_deployable;
nemo_deploy -> TemporaryDirectory;
nemo_deploy -> get_vllm_deployable;
nemo_deploy -> exists;
nemo_deploy -> makedirs;
nemo_deploy -> cleanup;
run_benchmark -> NemoQueryLLMPyTorch;
run_benchmark -> print;
run_benchmark -> range;
run_benchmark -> array;
run_benchmark -> query_llm;
run_benchmark -> min;
run_benchmark -> time;
run_benchmark -> mean;
run_benchmark -> median;
run_benchmark -> percentile;
run_benchmark -> max;
run_benchmark -> std;
run_benchmark -> append;
run_benchmark -> len;
run_benchmark -> isinstance;
print_benchmark_results -> print;
benchmark -> get_args;
benchmark -> run_benchmark;
benchmark -> print_benchmark_results;
setup_torch_dist -> set_device;
setup_torch_dist -> init_process_group;
hf_deploy -> get_args;
hf_deploy -> setLevel;
hf_deploy -> info;
hf_deploy -> HuggingFaceLLMDeploy;
hf_deploy -> is_initialized;
hf_deploy -> format;
hf_deploy -> ValueError;
hf_deploy -> int;
hf_deploy -> stop;
hf_deploy -> barrier;
hf_deploy -> destroy_process_group;
hf_deploy -> setup_torch_dist;
hf_deploy -> warning;
hf_deploy -> get_rank;
hf_deploy -> DeployPyTriton;
hf_deploy -> deploy;
hf_deploy -> serve;
hf_deploy -> error;
hf_deploy -> get_world_size;
hf_deploy -> broadcast;
hf_deploy -> generate_other_ranks;
hf_deploy -> tensor;
hf_deploy -> str;
get_parser -> ArgumentParser;
get_parser -> add_argument;
get_parser -> list;
str_to_bool -> lower;
str_to_bool -> UsageError;
str_to_bool -> ArgumentTypeError;
store_args_to_json -> open;
store_args_to_json -> dump;
get_nemo_deployable -> MegatronLLMDeployable;
get_nemo_deployable -> ValueError;
get_vllm_deployable -> vLLMExporter;
get_vllm_deployable -> export;
load_lora -> TemporaryDirectory;
load_lora -> _unpack_nemo_file;
load_lora -> load;
load_lora -> device;
load_lora -> range;
load_lora -> items;
load_lora -> replace_number_add_offset;
multimodal_datamodule -> DiffusionDataModule;
multimodal_datamodule -> Config;
simple_datamodule -> EnergonMultiModalDataModule;
simple_datamodule -> Config;
multimodal_fake_datamodule -> VideoLatentFakeDataModule;
multimodal_fake_datamodule -> Config;
pretrain_xl -> factory;
pretrain_xl -> pretrain;
pretrain_xl -> Config;
pretrain_l -> factory;
pretrain_l -> pretrain;
pretrain_l -> Config;
train_mock -> factory;
train_mock -> pretrain;
train_mock -> Config;
train_mock -> multimodal_fake_datamodule;
mock_ditllama5b_8k -> factory;
mock_ditllama5b_8k -> pretrain;
mock_ditllama5b_8k -> Config;
mock_ditllama5b_8k -> multimodal_fake_datamodule;
mock_ditllama5b_8k -> pop;
mock_ditllama5b_8k -> append;
mock_dit7b_8k -> factory;
mock_dit7b_8k -> mock_ditllama5b_8k;
mock_dit7b_8k -> Config;
pretrain_7b -> factory;
pretrain_7b -> pretrain;
pretrain_7b -> Config;
pretrain_7b_pack -> factory;
pretrain_7b_pack -> pretrain_7b;
pretrain_7b_256p_joint -> factory;
pretrain_7b_256p_joint -> pretrain_7b;
pretrain_7b_256p_joint_pack -> factory;
pretrain_7b_256p_joint_pack -> pretrain_7b_256p_joint;
pretrain_ditllama5b -> factory;
pretrain_ditllama5b -> pretrain_7b;
pretrain_ditllama5b -> Config;
pretrain_ditllama30b -> factory;
pretrain_ditllama30b -> pretrain_ditllama5b;
pretrain_ditllama30b -> Config;
pretrain_ditllama30b_stage2_mock -> factory;
pretrain_ditllama30b_stage2_mock -> pretrain_ditllama5b;
pretrain_ditllama30b_stage2_mock -> Config;
pretrain_ditllama30b_stage2_mock -> multimodal_fake_datamodule;
pretrain_ditllama30b_stage3_mock -> factory;
pretrain_ditllama30b_stage3_mock -> pretrain_ditllama5b;
pretrain_ditllama30b_stage3_mock -> Config;
pretrain_ditllama30b_stage3_mock -> multimodal_fake_datamodule;
pretrain_ditllama5b_stage3_mock_with_pp -> factory;
pretrain_ditllama5b_stage3_mock_with_pp -> pretrain_ditllama5b;
pretrain_ditllama5b_stage3_mock_with_pp -> multimodal_fake_datamodule;
pretrain_ditllama30b_stage3_mock_with_pp -> factory;
pretrain_ditllama30b_stage3_mock_with_pp -> pretrain_ditllama5b;
pretrain_ditllama30b_stage3_mock_with_pp -> Config;
pretrain_ditllama30b_stage3_mock_with_pp -> multimodal_fake_datamodule;
pretrain_ditllama1b -> factory;
pretrain_ditllama1b -> pretrain_ditllama5b;
pretrain_ditllama1b -> Config;
pretrain_ditllama3b -> factory;
pretrain_ditllama3b -> pretrain_ditllama1b;
pretrain_ditllama3b -> Config;
pretrain_ecditllama1b -> factory;
pretrain_ecditllama1b -> pretrain_ditllama1b;
pretrain_ecditllama1b -> Config;
dreambooth -> factory;
dreambooth -> pretrain;
dreambooth -> multimodal_datamodule;
dreambooth -> Config;
nemo_export_trt_llm -> get_args;
nemo_export_trt_llm -> setLevel;
nemo_export_trt_llm -> info;
nemo_export_trt_llm -> TensorRTLLM;
nemo_export_trt_llm -> export;
nemo_export_trt_llm -> pformat;
nemo_export_trt_llm -> vars;
get_clip_score -> no_grad;
get_clip_score -> isinstance;
get_clip_score -> float;
get_clip_score -> norm;
get_clip_score -> to;
get_clip_score -> open;
get_clip_score -> encode_image;
get_clip_score -> tokenize;
get_clip_score -> encode_text;
get_clip_score -> unsqueeze;
get_clip_score -> preprocess;
plot_fid_vs_clip -> read_csv;
plot_fid_vs_clip -> sort_values;
plot_fid_vs_clip -> range;
plot_fid_vs_clip -> plot;
plot_fid_vs_clip -> enumerate;
plot_fid_vs_clip -> set_xlabel;
plot_fid_vs_clip -> set_ylabel;
plot_fid_vs_clip -> set_title;
plot_fid_vs_clip -> len;
plot_fid_vs_clip -> annotate;
plot_fid_vs_clip -> merge;
flux_datamodule -> DiffusionDataModule;
flux_datamodule -> Config;
flux_controlnet_training -> factory;
flux_controlnet_training -> Partial;
flux_controlnet_training -> Config;
flux_controlnet_training -> flux_mock_datamodule;
flux_controlnet_training -> NeMoLogger;
flux_controlnet_training -> int;
flux_controlnet_training -> MegatronMixedPrecision;
flux_controlnet_training -> get;
flux_controlnet_training -> WandbLogger;
flux_controlnet_training -> default_resume;
flux_controlnet_training -> tensorboard_logger;
convergence_test -> factory;
convergence_test -> flux_controlnet_training;
convergence_test -> Config;
convergence_test -> flux_datamodule;
convergence_test -> flux_training;
fp8_test -> factory;
fp8_test -> flux_controlnet_training;
fp8_test -> Config;
fp8_test -> flux_datamodule;
fp8_test -> flux_training;
convergence_tp2 -> factory;
convergence_tp2 -> flux_controlnet_training;
convergence_tp2 -> Config;
convergence_tp2 -> flux_datamodule;
full_model_tp2_dp4_mock -> factory;
full_model_tp2_dp4_mock -> flux_controlnet_training;
full_model_tp2_dp4_mock -> append;
full_model_tp2_dp4_mock -> Config;
full_model_tp2_dp4_mock -> flux_training;
unit_test -> factory;
unit_test -> flux_controlnet_training;
unit_test -> Config;
unit_test -> flux_training;
flux_training -> factory;
flux_training -> Partial;
flux_training -> Config;
flux_training -> flux_mock_datamodule;
flux_training -> NeMoLogger;
flux_training -> int;
flux_training -> MegatronMixedPrecision;
flux_training -> get;
flux_training -> WandbLogger;
flux_training -> default_resume;
flux_training -> tensorboard_logger;
initialize_oauth -> exists;
initialize_oauth -> unpickle_object;
initialize_oauth -> OAuth2Session;
initialize_oauth -> authorization_url;
initialize_oauth -> print;
initialize_oauth -> input;
initialize_oauth -> fetch_token;
initialize_oauth -> pickle_object;
unpickle_object -> exists;
unpickle_object -> FileNotFoundError;
unpickle_object -> open;
unpickle_object -> load;
pickle_object -> open;
pickle_object -> dump;
instantiate_session -> unpickle_object;
instantiate_session -> OAuth2Session;
instantiate_session -> HTTPAdapter;
instantiate_session -> mount;
refresh_token -> print;
refresh_token -> refresh_token;
refresh_token -> pickle_object;
is_resource_limited -> print;
is_resource_limited -> sleep;
prepare_client -> set_token;
prepare_client -> print;
get_text_query_with_resource_limit_checks -> text_search;
get_text_query_with_resource_limit_checks -> instantiate_session;
get_text_query_with_resource_limit_checks -> refresh_token;
get_text_query_with_resource_limit_checks -> close;
get_text_query_with_resource_limit_checks -> unpickle_object;
get_text_query_with_resource_limit_checks -> prepare_client;
get_text_query_with_resource_limit_checks -> print;
get_text_query_with_resource_limit_checks -> is_resource_limited;
get_text_query_with_resource_limit_checks -> join;
get_text_query_with_resource_limit_checks -> str;
get_text_query_with_resource_limit_checks -> with_traceback;
get_resource_with_auto_refresh -> get;
get_resource_with_auto_refresh -> refresh_token;
get_resource_with_auto_refresh -> print;
download_song -> decode;
download_song -> replace;
download_song -> join;
download_song -> exists;
download_song -> print;
download_song -> instantiate_session;
download_song -> sleep;
download_song -> encode;
download_song -> load;
download_song -> close;
download_song -> remove;
download_song -> open;
download_song -> write;
download_song -> getsize;
download_song -> get_resource_with_auto_refresh;
download_song -> is_resource_limited;
get_songs_by_category -> print;
get_songs_by_category -> min;
get_songs_by_category -> int;
get_songs_by_category -> get_text_query_with_resource_limit_checks;
get_songs_by_category -> replace;
get_songs_by_category -> join;
get_songs_by_category -> exists;
get_songs_by_category -> makedirs;
get_songs_by_category -> open;
get_songs_by_category -> write;
get_songs_by_category -> flush;
get_songs_by_category -> max;
get_songs_by_category -> Parallel;
get_songs_by_category -> parallel;
get_songs_by_category -> len;
get_songs_by_category -> append;
get_songs_by_category -> next_page;
get_songs_by_category -> delayed;
resample_file -> split;
resample_file -> splitext;
resample_file -> join;
resample_file -> exists;
resample_file -> Transformer;
resample_file -> set_output_format;
resample_file -> convert;
resample_file -> makedirs;
resample_file -> print;
resample_file -> build;
resample_file -> load;
resample_file -> set_input_format;
parallelCCompile -> _setup_compile;
parallelCCompile -> _get_cc_args;
parallelCCompile -> ThreadPool;
parallelCCompile -> list;
parallelCCompile -> _compile;
parallelCCompile -> imap;
compile_test -> join;
compile_test -> dirname;
compile_test -> system;
_single_compile -> _compile;
get_data_module -> data_module_cls;
get_data_module -> info;
get_data_module -> warning;
read_chat_template -> open;
read_chat_template -> strip;
read_chat_template -> read;
find_audio_files -> walk;
find_audio_files -> sorted;
find_audio_files -> append;
find_audio_files -> replace;
find_audio_files -> endswith;
find_audio_files -> int;
find_audio_files -> len;
find_audio_files -> split;
find_audio_files -> join;
create_chosen_rejected_records -> deepcopy;
create_chosen_rejected_records -> range;
create_chosen_rejected_records -> print;
create_chosen_rejected_records -> len;
create_chosen_rejected_records -> enumerate;
create_chosen_rejected_records -> pareto_rank;
create_chosen_rejected_records -> ValueError;
create_chosen_rejected_records -> append;
create_chosen_rejected_records -> max;
filter_best_and_worst_records -> len;
filter_best_and_worst_records -> print;
filter_best_and_worst_records -> append;
normalize_rejected_rewards -> sqrt;
normalize_rejected_rewards -> sum;
normalize_rejected_rewards -> len;
normalize_rejected_rewards -> standard_normal_cdf;
pareto_rank -> sort;
pareto_rank -> range;
pareto_rank -> len;
pareto_rank -> append;
pareto_rank -> remove;
pareto_rank -> is_dominated;
standard_normal_cdf -> erf;
standard_normal_cdf -> sqrt;
calculate_rouge -> RougeScorer;
calculate_rouge -> BootstrapAggregator;
calculate_rouge -> zip;
calculate_rouge -> aggregate;
calculate_rouge -> argmax;
calculate_rouge -> add_scores;
calculate_rouge -> round;
calculate_rouge -> score;
calculate_rouge -> append;
calculate_rouge -> items;
load_ref -> readlines;
load_ref -> strip;
load_ref -> loads;
load_ref -> isinstance;
load_ref -> append;
load_ref -> open;
load_preds -> open;
load_preds -> strip;
load_preds -> readlines;
load_preds -> split;
metric_max_over_ground_truths -> max;
metric_max_over_ground_truths -> metric_fn;
metric_max_over_ground_truths -> append;
generate_question_answers -> request_nvidia_api;
generate_question_answers -> loads;
generate_question_answers -> print;
rewrite_dense_caption -> request_nvidia_api;
rewrite_dense_caption -> loads;
rewrite_dense_caption -> print;
generate_one -> generate_question_answers;
generate_one -> rewrite_dense_caption;
generate_one -> randint;
generate_one -> range;
generate_one -> Conversation;
generate_one -> len;
generate_one -> append;
generate_one -> print;
generate_one -> Message;
wrapped_generate -> generate_one;
wrapped_generate -> append;
wrapped_generate -> len;
wrapped_generate -> sleep;
wrapped_generate -> asdict;
batch_generate -> Path;
batch_generate -> mkdir;
batch_generate -> set;
batch_generate -> tqdm;
batch_generate -> print;
batch_generate -> Pool;
batch_generate -> glob;
batch_generate -> open;
batch_generate -> dump;
batch_generate -> imap_unordered;
batch_generate -> extend;
batch_generate -> len;
batch_generate -> load;
batch_generate -> loads;
batch_generate -> read_text;
convert_single_parquet_to_tar -> read_parquet;
convert_single_parquet_to_tar -> Path;
convert_single_parquet_to_tar -> makedirs;
convert_single_parquet_to_tar -> rmtree;
convert_single_parquet_to_tar -> replace;
convert_single_parquet_to_tar -> open;
convert_single_parquet_to_tar -> range;
convert_single_parquet_to_tar -> len;
convert_single_parquet_to_tar -> dict;
convert_single_parquet_to_tar -> items;
convert_single_parquet_to_tar -> dump;
convert_single_parquet_to_tar -> add;
convert_single_parquet_to_tar -> append;
convert_single_parquet_to_tar -> split;
convert_single_parquet_to_tar -> basename;
convert_single_parquet_to_tar -> reshape;
convert_single_parquet_to_tar -> frombuffer;
generate_wdinfo -> glob;
generate_wdinfo -> print;
generate_wdinfo -> join;
generate_wdinfo -> sorted;
generate_wdinfo -> open;
generate_wdinfo -> dump;
generate_wdinfo -> append;
generate_wdinfo -> len;
generate_wdinfo -> getsize;
generate_wdinfo -> exists;
generate_wdinfo -> basename;
nemo_convert -> get_args;
nemo_convert -> getLogger;
nemo_convert -> basicConfig;
nemo_convert -> info;
nemo_convert -> TrainerConfig;
nemo_convert -> to_container;
nemo_convert -> Trainer;
nemo_convert -> getattr;
nemo_convert -> format;
nemo_convert -> create;
nemo_convert -> save_to;
nemo_convert -> upper;
nemo_convert -> isinstance;
nemo_convert -> ValueError;
nemo_convert -> removeHandler;
nemo_convert -> restore_from;
nemo_convert -> error;
nemo_convert -> NLPSaveRestoreConnector;
nemo_convert -> set_struct;
nemo_convert -> open_dict;
read_batch -> range;
read_batch -> readline;
read_batch -> append;
read_batch -> strip;
tokenize_line -> rstrip;
tokenize_line -> text_to_ids;
line_len -> tokenize_line;
line_len -> len;
get_lang -> predict;
get_lang -> split;
get_edges_in_1_file -> open;
get_edges_in_1_file -> len;
get_edges_in_1_file -> append;
get_edges_in_1_file -> encode;
get_edges_in_1_file -> int;
get_edges_in_1_file -> range;
get_edges_and_num_lines -> get_edges_in_1_file;
get_edges_and_num_lines -> len;
get_edges_and_num_lines -> range;
get_edges_and_num_lines -> ValueError;
get_edges_and_num_lines -> repr;
filter_pairs -> load_model;
filter_pairs -> ImportError;
filter_pairs -> str;
filter_pairs -> Path;
filter_pairs -> open;
filter_pairs -> seek;
filter_pairs -> readline;
filter_pairs -> strip;
filter_pairs -> get_lang;
filter_pairs -> get_lock;
filter_pairs -> tell;
filter_pairs -> write;
filter_pairs -> ValueError;
filter_pairs -> len;
filter_pairs -> split;
filter_singles -> debug;
filter_singles -> load_model;
filter_singles -> ImportError;
filter_singles -> str;
filter_singles -> Path;
filter_singles -> open;
filter_singles -> seek;
filter_singles -> readline;
filter_singles -> tell;
filter_singles -> strip;
filter_singles -> get_lang;
filter_singles -> get_lock;
filter_singles -> write;
filter_by_lang -> debug;
filter_by_lang -> filter_singles;
filter_by_lang -> filter_pairs;
filter_by_lang -> warn;
_cat_results -> compile;
_cat_results -> open;
_cat_results -> sorted;
_cat_results -> iterdir;
_cat_results -> is_file;
_cat_results -> warn;
_cat_results -> search;
_cat_results -> str;
_cat_results -> write;
cat_results -> zip;
cat_results -> _cat_results;
cat_results -> warn;
filter_by_length_and_ratio -> debug;
filter_by_length_and_ratio -> filter_pairs;
plot_timing -> scatter;
plot_timing -> xticks;
plot_timing -> yticks;
plot_timing -> tight_layout;
plot_timing -> figure;
plot_timing -> xlabel;
plot_timing -> ylabel;
plot_timing -> grid;
plot_timing -> title;
tokenize_normalize -> open;
tokenize_normalize -> info;
tokenize_normalize -> close;
tokenize_normalize -> strip;
tokenize_normalize -> write;
tokenize_normalize -> normalize;
tokenize_normalize -> tokenize;
aug_switch_near_letters -> rand;
aug_switch_near_letters -> len;
aug_switch_near_letters -> randint;
aug_drop_letter -> rand;
aug_drop_letter -> len;
aug_drop_letter -> randint;
build_map -> njit;
build_map -> len;
build_map -> prange;
build_map -> max;
_dedup -> njit;
_dedup -> prange;
_dedup -> len;
dedup -> _dedup;
dedup -> ValueError;
dedup -> len;
calculate_start_end -> list;
calculate_start_end -> range;
calculate_start_end -> ValueError;
process_sentence_chunks -> put;
process_sentence_chunks -> calculate_start_end;
process_sentence_chunks -> info;
process_sentence_chunks -> Pool;
process_sentence_chunks -> time;
process_sentence_chunks -> get_chunk;
process_sentence_chunks -> min;
process_sentence_chunks -> map;
process_sentence_chunks -> slice;
process_sentence_chunks -> len;
process_sentence_chunks -> int;
process_sentence_chunks -> randint;
process_sentence_chunks -> append;
process_sentence_chunks -> list;
process_sentence_chunks -> range;
process_sentence_chunks -> ValueError;
get_sentence_chunks -> get;
calculate_embedding -> put;
calculate_embedding -> get_sentence_chunks;
calculate_embedding -> time;
calculate_embedding -> encode_multi_process;
calculate_embedding -> info;
calculate_embedding -> len;
_get_model_type_block_layer -> startswith;
_get_model_type_block_layer -> int;
_get_model_type_block_layer -> ValueError;
_get_model_type_block_layer -> split;
package_into_nemo_file -> Trainer;
package_into_nemo_file -> load;
package_into_nemo_file -> open_dict;
package_into_nemo_file -> TemporaryDirectory;
package_into_nemo_file -> from_pretrained;
package_into_nemo_file -> to;
package_into_nemo_file -> NLPSaveRestoreConnector;
package_into_nemo_file -> load_state_dict;
package_into_nemo_file -> save_to;
package_into_nemo_file -> NLPDDPStrategy;
package_into_nemo_file -> save_vocabulary;
package_into_nemo_file -> keys;
package_into_nemo_file -> ValueError;
package_into_nemo_file -> MegatronT5Model;
package_into_nemo_file -> replace;
pre_pad_dataset -> items;
pre_pad_dataset -> len;
pre_pad_dataset -> info;
initializer -> get_tokenizer;
initializer -> load;
initializer -> IdentitySplitter;
initializer -> print;
initializer -> exit;
initializer -> PunktSentenceTokenizer;
initializer -> CustomLanguageVars;
remove_newline_and_detokenize -> sub;
remove_newline_and_detokenize -> strip;
remove_newline_and_detokenize -> detokenize;
write_dataset_to_file -> print;
write_dataset_to_file -> load;
write_dataset_to_file -> open;
write_dataset_to_file -> is_empty;
write_dataset_to_file -> proc_func;
write_dataset_to_file -> write;
write_dataset_to_file -> dumps;
write_dataset_to_file -> remove_newline_and_detokenize;
write_dataset_to_file -> decode;
write_dataset_to_file -> tolist;
write_dataset_to_file -> numpy;
process_folder -> MosesDetokenizer;
process_folder -> AutoTokenizer;
process_folder -> isdir;
process_folder -> exists;
process_folder -> print;
process_folder -> enumerate;
process_folder -> write_dataset_to_file;
process_folder -> Pool;
process_folder -> starmap;
process_folder -> system;
process_folder -> join;
process_folder -> append;
process_folder -> len;
process_folder -> strip;
process_folder -> open;
process_folder -> FileNotFoundError;
process_folder -> endswith;
process_folder -> replace;
process_folder -> listdir;
process_folder -> write_train_val_test_dataset_to_file;
calculate_key -> join;
process_result -> range;
process_result -> zip;
process_result -> len;
process_result -> req;
process_result -> get_prompt;
process_result -> print;
process_result -> update;
process_result -> strip;
process_result -> split;
process_result -> append;
process_result -> endswith;
process_result -> write;
process_result -> flush;
process_result -> join;
process_result -> int;
process_result -> dumps;
request -> text_generation;
request -> int;
data_clean -> get_nmt_tokenizer;
data_clean -> GPTSFTChatDataset;
data_clean -> len;
data_clean -> set;
data_clean -> range;
data_clean -> add_special_tokens;
data_clean -> open;
data_clean -> print;
data_clean -> enumerate;
data_clean -> item;
data_clean -> add;
data_clean -> loads;
data_clean -> write;
data_clean -> sum;
data_clean -> dumps;
encode_labels -> join;
encode_labels -> append;
encode_labels -> round;
parse_conversations -> encode_labels;
parse_conversations -> get;
parse_conversations -> add;
parse_conversations -> parse_conversations;
parse_conversations -> extend;
parse_conversations -> len;
parse_conversations -> append;
parse_conversations -> ValueError;
parse_conversations -> split;
parse_conversations -> set;
get_data_records -> parse_conversations;
get_data_records -> append;
get_data_records -> len;
merge_train_folder -> enumerate;
merge_train_folder -> items;
merge_train_folder -> exists;
merge_train_folder -> makedirs;
merge_train_folder -> open;
merge_train_folder -> listdir;
merge_train_folder -> close;
merge_train_folder -> print;
merge_train_folder -> join;
merge_train_folder -> endswith;
merge_train_folder -> startswith;
merge_train_folder -> len;
merge_train_folder -> loads;
merge_train_folder -> write;
merge_train_folder -> strip;
merge_train_folder -> dumps;
_feature_config -> FixedLenFeature;
_feature_config -> FixedLenSequenceFeature;
write_train_val_test_dataset_to_file -> TFRecordDataset;
write_train_val_test_dataset_to_file -> map;
write_train_val_test_dataset_to_file -> write_dataset_to_file;
write_train_val_test_dataset_to_file -> glob;
write_train_val_test_dataset_to_file -> _feature_config;
write_train_val_test_dataset_to_file -> join;
write_train_val_test_dataset_to_file -> items;
write_train_val_test_dataset_to_file -> parse_single_example;
write_train_val_test_dataset_to_file -> cast;
process_all_folders -> MosesDetokenizer;
process_all_folders -> isdir;
process_all_folders -> print;
process_all_folders -> listdir;
process_all_folders -> Pool;
process_all_folders -> starmap;
process_all_folders -> exists;
process_all_folders -> system;
process_all_folders -> append;
process_all_folders -> join;
process_all_folders -> len;
find_task_splits_and_features_dict -> defaultdict;
find_task_splits_and_features_dict -> items;
find_task_splits_and_features_dict -> keys;
find_task_splits_and_features_dict -> append;
parse_cli_args -> ArgumentParser;
parse_cli_args -> add_argument;
parse_cli_args -> split;
parse_cli_args -> get_nemorun_home;
parse_cli_args -> join;
parse_cli_args -> lower;
parse_cli_args -> ValueError;
parse_cli_args -> int;
bool_arg -> lower;
bool_arg -> ValueError;
list_of_strings -> split;
get_user_configs -> str;
get_user_configs -> join;
get_user_configs -> info;
get_user_configs -> DataFrame;
get_user_configs -> isfile;
get_user_configs -> absolute;
get_user_configs -> read_csv;
get_user_configs -> replace;
get_user_configs -> warning;
get_user_configs -> get;
get_user_configs -> bool;
get_user_configs -> int;
get_user_configs -> isinstance;
get_user_configs -> len;
get_user_configs -> to_dict;
get_user_configs -> lower;
get_user_configs -> split;
get_user_configs -> Path;
set_primary_perf_configs -> info;
set_primary_perf_configs -> bool;
set_primary_perf_configs -> get_comm_overlap_callback_idx;
set_primary_perf_configs -> warning;
set_primary_perf_configs -> hasattr;
set_primary_perf_configs -> lower;
set_primary_perf_configs -> bf16_with_fp8_mixed;
set_primary_perf_configs -> bf16_with_fp8_current_scaling_mixed;
set_primary_perf_configs -> bf16_with_mxfp8_mixed;
get_comm_overlap_callback_idx -> enumerate;
set_exp_logging_configs -> append;
set_exp_logging_configs -> wandb_logger;
set_exp_logging_configs -> Config;
import_ckpt_experiment -> deepcopy;
import_ckpt_experiment -> Partial;
isfile_train_pack_metadata -> getenv;
isfile_train_pack_metadata -> replace;
isfile_train_pack_metadata -> join;
isfile_train_pack_metadata -> exists;
isfile_train_pack_metadata -> isfile;
override_recipe_configs -> pretrain_recipe;
override_recipe_configs -> set_primary_perf_configs;
override_recipe_configs -> set_exp_logging_configs;
override_recipe_configs -> finetune_recipe;
override_recipe_configs -> Config;
override_recipe_configs -> append;
override_recipe_configs -> hf_tokenizer;
override_recipe_configs -> hasattr;
override_recipe_configs -> isfile_train_pack_metadata;
override_recipe_configs -> get_comm_overlap_callback_idx;
override_recipe_configs -> lower;
override_recipe_configs -> cast;
override_recipe_configs -> convert_dataclasses_to_configs;
override_recipe_configs -> ValueError;
override_recipe_configs -> bf16_with_fp8_mixed;
override_recipe_configs -> warning;
mlperf_lora_llama2_70b_recipe -> Config;
mlperf_lora_llama2_70b_recipe -> nemo_resume;
mlperf_lora_llama2_70b_recipe -> Partial;
mlperf_lora_llama2_70b_recipe -> TransformerLayerTPOverlapCfg;
mlperf_lora_llama2_70b_recipe -> RingExchangeOverlapCfg;
mlperf_lora_llama2_70b_recipe -> PipelineOverlapCfg;
mlperf_lora_llama2_70b_recipe -> BulkOverlapCfg;
get_seg_info_from_ctm_line -> float;
get_seg_info_from_ctm_line -> round;
get_seg_info_from_ctm_line -> type;
get_seg_info_from_ctm_line -> strip;
get_unaligned_files -> open;
get_unaligned_files -> readlines;
get_unaligned_files -> strip;
get_unaligned_files -> append;
get_unaligned_files -> split;
load_librispeech_alignment -> open;
load_librispeech_alignment -> readlines;
load_librispeech_alignment -> strip;
load_librispeech_alignment -> split;
create_librispeech_ctm_alignments -> read_manifest;
create_librispeech_ctm_alignments -> join;
create_librispeech_ctm_alignments -> exists;
create_librispeech_ctm_alignments -> replace;
create_librispeech_ctm_alignments -> isdir;
create_librispeech_ctm_alignments -> set;
create_librispeech_ctm_alignments -> info;
create_librispeech_ctm_alignments -> rmtree;
create_librispeech_ctm_alignments -> mkdir;
create_librispeech_ctm_alignments -> len;
create_librispeech_ctm_alignments -> Exception;
create_librispeech_ctm_alignments -> load_librispeech_alignment;
create_librispeech_ctm_alignments -> split;
create_librispeech_ctm_alignments -> create_new_ctm_entry;
create_librispeech_ctm_alignments -> write_ctm;
create_librispeech_ctm_alignments -> get_unaligned_files;
create_librispeech_ctm_alignments -> Path;
create_librispeech_ctm_alignments -> warning;
create_librispeech_ctm_alignments -> float;
create_librispeech_ctm_alignments -> lower;
create_manifest_with_alignments -> read_manifest;
create_manifest_with_alignments -> info;
create_manifest_with_alignments -> write_manifest;
create_manifest_with_alignments -> len;
create_manifest_with_alignments -> range;
create_manifest_with_alignments -> append;
create_manifest_with_alignments -> split;
create_manifest_with_alignments -> join;
create_manifest_with_alignments -> isfile;
create_manifest_with_alignments -> open;
create_manifest_with_alignments -> readlines;
create_manifest_with_alignments -> get_seg_info_from_ctm_line;
split_into_pairwise_rttm -> get_input_manifest_dict;
split_into_pairwise_rttm -> info;
split_into_pairwise_rttm -> tqdm;
split_into_pairwise_rttm -> items;
split_into_pairwise_rttm -> rttm_to_labels;
split_into_pairwise_rttm -> replace;
split_into_pairwise_rttm -> combinations;
split_into_pairwise_rttm -> len;
split_into_pairwise_rttm -> labels_to_rttmfile;
split_into_pairwise_rttm -> append;
split_into_pairwise_rttm -> deepcopy;
split_into_pairwise_rttm -> split;
generate_manifest_entry -> Path;
generate_manifest_entry -> load;
generate_manifest_entry -> get_duration;
generate_manifest_entry -> read_manifest;
generate_manifest_entry -> join;
generate_manifest_entry -> load_speech_segments_from_rttm;
generate_manifest_entry -> get_frame_labels;
generate_manifest_entry -> str;
generate_manifest_entry -> absolute;
get_pyannote_objs_from_rttms -> strip;
get_pyannote_objs_from_rttms -> exists;
get_pyannote_objs_from_rttms -> get_uniqname_from_filepath;
get_pyannote_objs_from_rttms -> rttm_to_labels;
get_pyannote_objs_from_rttms -> labels_to_pyannote_object;
get_pyannote_objs_from_rttms -> append;
make_meta_dict -> enumerate;
make_meta_dict -> get_uniqname_from_filepath;
make_meta_dict -> strip;
make_meta_dict -> update;
make_trans_info_dict -> strip;
make_trans_info_dict -> get_uniqname_from_filepath;
make_trans_info_dict -> open;
make_trans_info_dict -> load;
read_file_path -> sorted;
read_file_path -> strip;
read_file_path -> read_file;
filter_manifest_line -> get;
filter_manifest_line -> join;
filter_manifest_line -> makedirs;
filter_manifest_line -> splitext;
filter_manifest_line -> dirname;
filter_manifest_line -> min;
filter_manifest_line -> read;
filter_manifest_line -> copy;
filter_manifest_line -> int;
filter_manifest_line -> sum;
filter_manifest_line -> split;
filter_manifest_line -> append;
filter_manifest_line -> mean;
filter_manifest_line -> replace;
filter_manifest_line -> write;
filter_manifest_line -> str;
filter_manifest_line -> float;
filter_manifest_line -> rms;
count_and_consider_only -> unique;
count_and_consider_only -> print;
count_and_consider_only -> enumerate;
count_and_consider_only -> len;
count_and_consider_only -> append;
run_multispeaker_data_analysis -> list;
run_multispeaker_data_analysis -> print;
run_multispeaker_data_analysis -> tqdm;
run_multispeaker_data_analysis -> var;
run_multispeaker_data_analysis -> OrderedDict;
run_multispeaker_data_analysis -> len;
run_multispeaker_data_analysis -> items;
run_multispeaker_data_analysis -> subplots;
run_multispeaker_data_analysis -> suptitle;
run_multispeaker_data_analysis -> histplot;
run_multispeaker_data_analysis -> set_xlabel;
run_multispeaker_data_analysis -> set_title;
run_multispeaker_data_analysis -> fit;
run_multispeaker_data_analysis -> glob;
run_multispeaker_data_analysis -> ValueError;
run_multispeaker_data_analysis -> append;
run_multispeaker_data_analysis -> savefig;
run_multispeaker_data_analysis -> process_sample;
run_multispeaker_data_analysis -> Pool;
run_multispeaker_data_analysis -> Path;
run_multispeaker_data_analysis -> imap;
visualize_multispeaker_data -> list;
visualize_multispeaker_data -> print;
visualize_multispeaker_data -> glob;
visualize_multispeaker_data -> permutation;
visualize_multispeaker_data -> plot_sample_from_rttm;
visualize_multispeaker_data -> len;
visualize_multispeaker_data -> Path;
visualize_multispeaker_data -> str;
estimate_token_buckets -> array;
estimate_token_buckets -> enumerate;
estimate_token_buckets -> MultimodalFixedBucketBatchSizeConstraint2D;
estimate_token_buckets -> MultimodalSamplingConstraint;
estimate_token_buckets -> measure_length;
estimate_token_buckets -> fromarrays;
estimate_token_buckets -> sort;
estimate_token_buckets -> sum;
estimate_token_buckets -> print;
estimate_token_buckets -> max;
estimate_token_buckets -> append;
estimate_token_buckets -> _estimate_output_token_buckets;
estimate_token_buckets -> describe;
estimate_token_buckets -> ceil;
estimate_token_buckets -> Series;
_estimate_output_token_buckets -> sort;
_estimate_output_token_buckets -> append;
_estimate_output_token_buckets -> sum;
_estimate_output_token_buckets -> ceil;
apply_tokenizer -> tokenize_with_prompt;
apply_tokenizer -> tokenize;
apply_tokenizer -> apply_prompt_format_fn;
apply_tokenizer -> TokenizerWrapper;
print_report -> print;
oomptimizer -> command;
oomptimizer -> option;
oomptimizer -> all;
oomptimizer -> setLevel;
oomptimizer -> set_per_process_memory_fraction;
oomptimizer -> range;
oomptimizer -> initialize_model_parallel_for_nemo;
oomptimizer -> init_process_group;
oomptimizer -> initialize_model_parallel;
oomptimizer -> oomptimizer_schema;
oomptimizer -> echo;
oomptimizer -> configure_optimizers;
oomptimizer -> isinstance;
oomptimizer -> get_max_seq_lens;
oomptimizer -> ProfilingBatchGenerator;
oomptimizer -> dict;
oomptimizer -> items;
oomptimizer -> secho;
oomptimizer -> exit;
oomptimizer -> append;
oomptimizer -> hasattr;
oomptimizer -> autocast;
oomptimizer -> reversed;
oomptimizer -> enumerate;
oomptimizer -> Trainer;
oomptimizer -> to;
oomptimizer -> load;
oomptimizer -> create_trainer;
oomptimizer -> rsplit;
oomptimizer -> getattr;
oomptimizer -> zero_grad;
oomptimizer -> training_step;
oomptimizer -> step;
oomptimizer -> any;
oomptimizer -> _determine_lens_for_bucket;
oomptimizer -> list;
oomptimizer -> reset;
oomptimizer -> import_module;
oomptimizer -> gen_;
oomptimizer -> iter;
oomptimizer -> ceil;
oomptimizer -> zip;
oomptimizer -> gen;
oomptimizer -> join;
oomptimizer -> from_pretrained;
oomptimizer -> MegatronLMPPTrainerBuilder;
oomptimizer -> restore_from_pretrained_models;
oomptimizer -> type;
oomptimizer -> len;
oomptimizer -> RuntimeError;
oomptimizer -> reset_max_memory_allocated;
oomptimizer -> advance;
oomptimizer -> compute_num_samples;
oomptimizer -> str;
oomptimizer -> map;
oomptimizer -> memory_allocated;
oomptimizer -> max_memory_allocated;
oomptimizer -> setup_optimization;
oomptimizer -> model_cls;
oomptimizer -> backward;
oomptimizer -> sum;
get_max_seq_lens -> getattr;
get_max_seq_lens -> _determine_lens_for_bucket;
get_max_seq_lens -> ceil;
get_max_seq_lens -> RuntimeError;
get_max_seq_lens -> compute_num_samples;
_determine_lens_for_bucket -> getattr;
_determine_lens_for_bucket -> ceil;
_determine_lens_for_bucket -> RuntimeError;
_determine_lens_for_bucket -> compute_num_samples;
gen -> len;
gen -> append;
gen -> glob;
gen -> open;
gen -> Reader;
gen -> close;
type_cast_value -> isinstance;
type_cast_value -> all;
type_cast_value -> literal_eval;
type_cast_value -> BadParameter;
type_cast_value -> tuple;
prepare_output_dirs -> abspath;
prepare_output_dirs -> join;
prepare_output_dirs -> exists;
prepare_output_dirs -> makedirs;
infer_dataset_segments -> split;
infer_dataset_segments -> insert;
infer_dataset_segments -> index;
prepare_audio_filepath -> exists;
prepare_audio_filepath -> splitext;
prepare_audio_filepath -> split;
prepare_audio_filepath -> makedirs;
prepare_audio_filepath -> remove;
build_map_dataset_to_nemo_func -> abspath;
build_map_dataset_to_nemo_func -> prepare_audio_filepath;
build_map_dataset_to_nemo_func -> write;
build_map_dataset_to_nemo_func -> get_duration;
build_map_dataset_to_nemo_func -> replace;
build_map_dataset_to_nemo_func -> infer_dataset_segments;
build_map_dataset_to_nemo_func -> join;
build_map_dataset_to_nemo_func -> split;
convert_offline_dataset_to_nemo -> map;
convert_offline_dataset_to_nemo -> iter;
convert_offline_dataset_to_nemo -> max;
convert_offline_dataset_to_nemo -> build_map_dataset_to_nemo_func;
convert_offline_dataset_to_nemo -> open;
convert_offline_dataset_to_nemo -> enumerate;
convert_offline_dataset_to_nemo -> tqdm;
convert_offline_dataset_to_nemo -> write;
convert_offline_dataset_to_nemo -> cpu_count;
convert_offline_dataset_to_nemo -> len;
convert_offline_dataset_to_nemo -> dumps;
convert_streaming_dataset_to_nemo -> iter;
convert_streaming_dataset_to_nemo -> open;
convert_streaming_dataset_to_nemo -> enumerate;
convert_streaming_dataset_to_nemo -> tqdm;
convert_streaming_dataset_to_nemo -> replace;
convert_streaming_dataset_to_nemo -> abspath;
convert_streaming_dataset_to_nemo -> prepare_audio_filepath;
convert_streaming_dataset_to_nemo -> write;
convert_streaming_dataset_to_nemo -> update;
convert_streaming_dataset_to_nemo -> join;
convert_streaming_dataset_to_nemo -> get_duration;
convert_streaming_dataset_to_nemo -> split;
convert_streaming_dataset_to_nemo -> dumps;
process_dataset -> cast_column;
process_dataset -> abspath;
process_dataset -> print;
process_dataset -> Audio;
process_dataset -> rename_column;
process_dataset -> join;
process_dataset -> convert_streaming_dataset_to_nemo;
process_dataset -> convert_offline_dataset_to_nemo;
process_dataset -> split;
process_dataset -> exists;
process_dataset -> makedirs;
process_dataset -> replace;
map_dataset_to_nemo -> abspath;
map_dataset_to_nemo -> prepare_audio_filepath;
map_dataset_to_nemo -> write;
map_dataset_to_nemo -> get_duration;
map_dataset_to_nemo -> replace;
map_dataset_to_nemo -> infer_dataset_segments;
map_dataset_to_nemo -> join;
map_dataset_to_nemo -> split;
create_tar_datasets -> ASRTarredDatasetBuilder;
create_tar_datasets -> ASRTarredDatasetMetadata;
create_tar_datasets -> ASRTarredDatasetConfig;
create_tar_datasets -> join;
create_tar_datasets -> save;
create_tar_datasets -> print;
create_tar_datasets -> exit;
create_tar_datasets -> configure;
create_tar_datasets -> create_new_dataset;
create_tar_datasets -> setup_history;
create_tar_datasets -> create_concatenated_dataset;
create_tar_datasets -> DALITarredIndexConfig;
create_tar_datasets -> main;
create_tar_datasets -> len;
create_tar_datasets -> ValueError;
create_tar_datasets -> from_file;
create_tar_datasets -> structured;
configure -> ValueError;
create_new_dataset -> _read_manifest;
create_new_dataset -> print;
create_new_dataset -> range;
create_new_dataset -> split;
create_new_dataset -> join;
create_new_dataset -> ASRTarredDatasetMetadata;
create_new_dataset -> structured;
create_new_dataset -> save;
create_new_dataset -> ValueError;
create_new_dataset -> FileNotFoundError;
create_new_dataset -> exists;
create_new_dataset -> makedirs;
create_new_dataset -> len;
create_new_dataset -> seed;
create_new_dataset -> set;
create_new_dataset -> append;
create_new_dataset -> Parallel;
create_new_dataset -> parallel;
create_new_dataset -> open;
create_new_dataset -> estimate_dynamic_bucketing_duration_bins;
create_new_dataset -> items;
create_new_dataset -> tabulate;
create_new_dataset -> defaultdict;
create_new_dataset -> list;
create_new_dataset -> shuffle;
create_new_dataset -> add;
create_new_dataset -> dump;
create_new_dataset -> write;
create_new_dataset -> setattr;
create_new_dataset -> keys;
create_new_dataset -> delayed;
create_new_dataset -> enumerate;
create_new_dataset -> zip;
setup_history -> keys;
setup_history -> deepcopy;
setup_history -> append;
setup_history -> setup_history;
setup_history -> open_dict;
setup_history -> pop;
create_concatenated_dataset -> ASRTarredDatasetConfig;
create_concatenated_dataset -> _read_manifest;
create_concatenated_dataset -> print;
create_concatenated_dataset -> range;
create_concatenated_dataset -> len;
create_concatenated_dataset -> split;
create_concatenated_dataset -> join;
create_concatenated_dataset -> ASRTarredDatasetMetadata;
create_concatenated_dataset -> get_current_datetime;
create_concatenated_dataset -> structured;
create_concatenated_dataset -> save;
create_concatenated_dataset -> exists;
create_concatenated_dataset -> makedirs;
create_concatenated_dataset -> FileNotFoundError;
create_concatenated_dataset -> extend;
create_concatenated_dataset -> seed;
create_concatenated_dataset -> shuffle;
create_concatenated_dataset -> append;
create_concatenated_dataset -> Parallel;
create_concatenated_dataset -> parallel;
create_concatenated_dataset -> open;
create_concatenated_dataset -> dump;
create_concatenated_dataset -> write;
create_concatenated_dataset -> delayed;
create_concatenated_dataset -> enumerate;
create_concatenated_dataset -> zip;
get_current_datetime -> strftime;
get_current_datetime -> now;
_read_manifest -> open;
_read_manifest -> loads;
_read_manifest -> KeyError;
_read_manifest -> join;
_read_manifest -> append;
_read_manifest -> isfile;
_read_manifest -> isabs;
_read_manifest -> dirname;
_read_manifest -> FileNotFoundError;
estimate_dynamic_bucketing_duration_bins -> CutSet;
estimate_dynamic_bucketing_duration_bins -> estimate_duration_buckets;
estimate_dynamic_bucketing_duration_bins -> print;
estimate_dynamic_bucketing_duration_bins -> dict;
estimate_dynamic_bucketing_duration_bins -> LazyNeMoIterator;
estimate_dynamic_bucketing_duration_bins -> list;
estimate_dynamic_bucketing_duration_bins -> join;
estimate_dynamic_bucketing_duration_bins -> map;
estimate_duration_buckets -> FixedBucketBatchSizeConstraint2D;
estimate_duration_buckets -> array;
estimate_duration_buckets -> sort_two_arrays;
estimate_duration_buckets -> isinf;
estimate_duration_buckets -> enumerate;
estimate_duration_buckets -> _estimate_token_buckets;
estimate_duration_buckets -> measure_length;
estimate_duration_buckets -> append;
estimate_duration_buckets -> sum;
estimate_duration_buckets -> print;
estimate_duration_buckets -> round;
estimate_duration_buckets -> find_non_outliers_z_score;
estimate_duration_buckets -> max;
estimate_duration_buckets -> zip;
estimate_duration_buckets -> describe;
estimate_duration_buckets -> delete;
estimate_duration_buckets -> len;
estimate_duration_buckets -> Series;
estimate_duration_buckets -> min;
_write_to_tar -> int;
_write_to_tar -> read;
_write_to_tar -> BytesIO;
_write_to_tar -> write;
_write_to_tar -> TarInfo;
_write_to_tar -> seek;
_write_to_tar -> len;
_write_to_tar -> addfile;
_write_to_tar -> add;
_write_to_tar -> SoundFile;
_write_to_tar -> lower;
_write_to_tar -> getvalue;
_write_to_tar -> endswith;
_write_to_tar -> split;
_write_to_tar -> info;
_create_shard -> join;
_create_shard -> dict;
_create_shard -> tqdm;
_create_shard -> sort;
_create_shard -> open;
_create_shard -> splitext;
_create_shard -> replace;
_create_shard -> append;
_create_shard -> close;
_create_shard -> exists;
_create_shard -> split;
_create_shard -> FileNotFoundError;
_create_shard -> len;
_create_shard -> _write_to_tar;
_create_shard -> str;
_create_shard -> ValueError;
process_index_path -> split;
process_index_path -> replace;
process_index_path -> join;
process_index_path -> append;
estimate_data_weights -> command;
estimate_data_weights -> argument;
estimate_data_weights -> option;
estimate_data_weights -> ListConfig;
estimate_data_weights -> parse_temperature;
estimate_data_weights -> validate;
estimate_data_weights -> count;
estimate_data_weights -> aggregate_group_weights;
estimate_data_weights -> reweight;
estimate_data_weights -> save;
estimate_data_weights -> extend;
estimate_data_weights -> Path;
estimate_data_weights -> Choice;
estimate_data_weights -> load;
aggregate_group_weights -> isinstance;
aggregate_group_weights -> sum;
aggregate_group_weights -> aggregate_group_weights;
reweight -> isinstance;
reweight -> temperature_reweighting;
reweight -> zip;
reweight -> reweight;
temperature_reweighting -> tolist;
temperature_reweighting -> asarray;
temperature_reweighting -> sum;
duration_ok -> max;
duration_ok -> isinstance;
sort_two_arrays -> fromarrays;
sort_two_arrays -> sort;
_estimate_token_buckets -> find_non_outliers_z_score;
_estimate_token_buckets -> max;
_estimate_token_buckets -> sort_two_arrays;
_estimate_token_buckets -> zip;
_estimate_token_buckets -> append;
_estimate_token_buckets -> delete;
_estimate_token_buckets -> print;
_estimate_token_buckets -> sum;
_estimate_token_buckets -> len;
_estimate_token_buckets -> min;
find_non_outliers_z_score -> where;
find_non_outliers_z_score -> std;
find_non_outliers_z_score -> mean;
filter_tarred -> command;
filter_tarred -> argument;
filter_tarred -> option;
filter_tarred -> set_dill_enabled;
filter_tarred -> read_cutset;
filter_tarred -> bg_load;
filter_tarred -> map;
filter_tarred -> mkdir;
filter_tarred -> to_shar;
filter_tarred -> Path;
filter_tarred -> Choice;
filter_tarred -> partial;
filter_tarred -> export_to_nemo_tarred;
filter_tarred -> RuntimeError;
filter_tarred -> filter;
read_cutset -> merge;
read_cutset -> read_cutset_from_config;
read_cutset -> endswith;
read_cutset -> structured;
read_cutset -> from_dotlist;
read_cutset -> is_dir;
read_cutset -> Path;
bg_load -> CutSet;
bg_load -> DataLoader;
bg_load -> IterableDatasetWrapper;
bg_load -> Identity;
bg_load -> DynamicCutSampler;
export_to_nemo_tarred -> TarWriter;
export_to_nemo_tarred -> JsonlShardWriter;
export_to_nemo_tarred -> BytesIO;
export_to_nemo_tarred -> save_audio;
export_to_nemo_tarred -> seek;
export_to_nemo_tarred -> max;
export_to_nemo_tarred -> write;
export_to_nemo_tarred -> isinstance;
export_to_nemo_tarred -> load_audio;
export_to_nemo_tarred -> update;
export_to_nemo_tarred -> len;
export_to_nemo_tarred -> LibsndfileBackend;
export_to_nemo_tarred -> items;
attach_custom -> update;
select_shards -> open;
select_shards -> tqdm;
select_shards -> map;
select_shards -> list;
select_shards -> loads;
select_shards -> int;
select_shards -> split;
select_shards -> range;
select_shards -> append;
select_shards -> pop;
select_shards -> strip;
select_shards -> KeyError;
create_shards -> select_shards;
create_shards -> ASRTarredDatasetBuilder;
create_shards -> configure;
create_shards -> ValueError;
create_shards -> exists;
create_shards -> FileNotFoundError;
create_shards -> join;
create_shards -> dirname;
create_shards -> from_file;
create_shards -> Parallel;
create_shards -> parallel;
create_shards -> len;
create_shards -> delayed;
combine_manifests -> dirname;
combine_manifests -> open;
combine_manifests -> range;
combine_manifests -> read_manifest;
combine_manifests -> remove;
combine_manifests -> dumps;
combine_manifests -> write;
combine_manifests -> str;
create_cs_data -> open;
create_cs_data -> tqdm;
create_cs_data -> zeros;
create_cs_data -> list;
create_cs_data -> range;
create_cs_data -> write;
create_cs_data -> float;
create_cs_data -> dumps;
create_cs_data -> int;
create_cs_data -> len;
create_cs_data -> load;
create_cs_data -> trim_zeros;
create_cs_data -> append;
create_cs_data -> astype;
create_cs_data -> join;
create_cs_data -> error;
create_cs_data -> str;
create_cs_data -> maximum;
create_cs_data -> array;
create_cs_data -> abs;
create_cs_data -> max;
create_cs_data -> min;
create_cs_manifest -> len;
create_cs_manifest -> append;
create_cs_manifest -> randint;
get_experiment_params -> join;
get_experiment_params -> str;
get_input_manifest -> endswith;
get_input_manifest -> info;
get_input_manifest -> isdir;
get_input_manifest -> isfile;
get_input_manifest -> str;
get_input_manifest -> read_manifest;
get_input_manifest -> ValueError;
get_input_manifest -> get_full_path;
get_input_manifest -> rglob;
get_input_manifest -> len;
get_input_manifest -> as_posix;
get_input_manifest -> Path;
maybe_save_features -> makedirs;
maybe_save_features -> info;
maybe_save_features -> tqdm;
maybe_save_features -> clear;
maybe_save_features -> replace;
maybe_save_features -> join;
maybe_save_features -> save;
maybe_save_features -> len;
maybe_save_features -> str;
extract_features -> info;
extract_features -> load_model;
extract_features -> FeatureExtractor;
extract_features -> device;
extract_features -> to;
extract_features -> NamedTemporaryFile;
extract_features -> get_input_manifest;
extract_features -> write_manifest;
extract_features -> len;
extract_features -> get_char_dataset;
extract_features -> DataLoader;
extract_features -> set;
extract_features -> maybe_save_features;
extract_features -> remove;
extract_features -> autocast;
extract_features -> Path;
extract_features -> inference_mode;
extract_features -> tqdm;
extract_features -> vars;
extract_features -> is_available;
extract_features -> move_data_to_device;
extract_features -> feature_extractor;
extract_features -> size;
extract_features -> range;
extract_features -> numpy;
extract_features -> add;
extract_features -> append;
extract_features -> warning;
extract_features -> cpu;
extract_features -> stack;
segment_wav -> len;
segment_wav -> zeros;
segment_wav -> cat;
segment_wav -> append;
segment_batch -> range;
segment_batch -> len;
segment_batch -> segment_wav;
segment_batch -> append;
segment_batch -> stack;
load_wav -> segment_from_file;
load_wav -> concatenate;
load_wav -> zeros;
load_wav -> process;
load_wav -> cat;
save_pitch_contour -> load_wav;
save_pitch_contour -> join;
save_pitch_contour -> pyin;
save_pitch_contour -> tensor;
save_pitch_contour -> save;
save_pitch_contour -> info;
save_pitch_contour -> format;
save_pitch_contour -> note_to_hz;
compute_pitch_stats -> join;
compute_pitch_stats -> append;
compute_pitch_stats -> open;
compute_pitch_stats -> dump;
compute_pitch_stats -> load;
compute_pitch_stats -> len;
compute_pitch_stats -> cat;
compute_pitch_stats -> item;
compute_pitch_stats -> warning;
compute_pitch_stats -> _is_valid_pitch;
compute_pitch_stats -> format;
compute_pitch_stats -> mean;
compute_pitch_stats -> std;
get_ssl_features_disentangled -> load_wav;
get_ssl_features_disentangled -> tensor;
get_ssl_features_disentangled -> to;
get_ssl_features_disentangled -> forward_for_export;
get_ssl_features_disentangled -> t;
get_ssl_features_disentangled -> exp;
get_ssl_features_disentangled -> ones;
get_ssl_features_disentangled -> argmax;
get_ssl_features_disentangled -> range;
get_ssl_features_disentangled -> stack;
get_ssl_features_disentangled -> float;
get_ssl_features_disentangled -> len;
get_ssl_features_disentangled -> append;
get_ssl_features_disentangled -> item;
get_ssl_features_disentangled -> mean;
get_ssl_features_disentangled -> cat;
get_ssl_features_disentangled -> ValueError;
edit_spt_model -> ArgumentParser;
edit_spt_model -> add_argument;
edit_spt_model -> parse_args;
edit_spt_model -> ModelProto;
edit_spt_model -> ParseFromString;
edit_spt_model -> SentencePieceProcessor;
edit_spt_model -> info;
edit_spt_model -> read;
edit_spt_model -> SentencePiece;
edit_spt_model -> append;
edit_spt_model -> LoadFromSerializedProto;
edit_spt_model -> open;
edit_spt_model -> write;
edit_spt_model -> error;
edit_spt_model -> exit;
edit_spt_model -> SerializeToString;
edit_spt_model -> piece_to_id;
edit_spt_model -> get_piece_size;
worker -> get_nested_dict_value;
worker -> clean_text;
__build_document_from_manifests -> join;
__build_document_from_manifests -> exists;
__build_document_from_manifests -> split;
__build_document_from_manifests -> makedirs;
__build_document_from_manifests -> info;
__build_document_from_manifests -> open;
__build_document_from_manifests -> format;
__build_document_from_manifests -> get;
__build_document_from_manifests -> loads;
__build_document_from_manifests -> write;
__build_document_from_manifests -> flush;
__build_document_from_manifests -> DataStoreObject;
load_image -> exists;
load_image -> open;
load_image -> get;
load_image -> raise_for_status;
load_image -> print;
gemma3_forward_step -> next;
gemma3_forward_step -> get;
gemma3_forward_step -> model;
configure_recipe -> pretrain_recipe;
configure_recipe -> finetune_recipe;
run_pretraining -> configure_recipe;
run_pretraining -> local_executor_torchrun;
run_pretraining -> run;
run_finetuning -> configure_recipe;
run_finetuning -> local_executor_torchrun;
run_finetuning -> run;
run_training -> configure_recipe;
run_training -> local_executor_torchrun;
run_training -> run;
run_training -> TestModel;
run_training -> Trainer;
run_training -> exp_manager;
run_training -> fit;
run_training -> OnesDataset;
run_training -> DataLoader;
run_training -> str;
run_training -> AssertCallback;
run_training -> len;
run_training -> train_dataloader;
legacy_generate -> apply_chat_template;
legacy_generate -> to;
legacy_generate -> cuda;
legacy_generate -> reshape;
legacy_generate -> expand_as;
legacy_generate -> eval;
legacy_generate -> clone;
legacy_generate -> range;
legacy_generate -> batch_decode;
legacy_generate -> info;
legacy_generate -> size;
legacy_generate -> processor;
legacy_generate -> unsqueeze;
legacy_generate -> no_grad;
legacy_generate -> model;
legacy_generate -> argmax;
legacy_generate -> cat;
legacy_generate -> hf_tokenizer;
legacy_generate -> item;
legacy_generate -> arange;
get_top_comments -> enumerate;
get_top_comments -> startswith;
get_top_comments -> append;
pytest_addoption -> addoption;
run_only_on_device_fixture -> fixture;
run_only_on_device_fixture -> get_closest_marker;
run_only_on_device_fixture -> skip;
run_only_on_device_fixture -> format;
downloads_weights -> fixture;
downloads_weights -> get_closest_marker;
downloads_weights -> getoption;
downloads_weights -> skip;
run_nightly_test_for_qa -> fixture;
run_nightly_test_for_qa -> get_closest_marker;
run_nightly_test_for_qa -> getoption;
run_nightly_test_for_qa -> skip;
cleanup_local_folder -> fixture;
cleanup_local_folder -> exists;
cleanup_local_folder -> rmtree;
cleanup_local_folder -> Path;
reset_singletons -> fixture;
reset_env_vars -> fixture;
reset_env_vars -> dict;
reset_env_vars -> clear;
reset_env_vars -> update;
test_data_dir -> fixture;
test_data_dir -> join;
test_data_dir -> dirname;
extract_data_from_tar -> exists;
extract_data_from_tar -> print;
extract_data_from_tar -> open;
extract_data_from_tar -> extractall;
extract_data_from_tar -> close;
extract_data_from_tar -> mkdir;
extract_data_from_tar -> urlretrieve;
extract_data_from_tar -> format;
extract_data_from_tar -> rmtree;
extract_data_from_tar -> TemporaryDirectory;
extract_data_from_tar -> copy2;
extract_data_from_tar -> join;
extract_data_from_tar -> basename;
k2_is_appropriate -> fixture;
k2_is_appropriate -> exception;
k2_cuda_is_enabled -> fixture;
k2_cuda_is_enabled -> is_available;
pytest_configure -> addinivalue_line;
pytest_configure -> join;
pytest_configure -> dirname;
pytest_configure -> getsize;
pytest_configure -> info;
pytest_configure -> int;
pytest_configure -> extract_data_from_tar;
pytest_configure -> print;
pytest_configure -> set_numba_compat_strictness;
pytest_configure -> exit;
pytest_configure -> urlopen;
pytest_configure -> format;
testclass_downloads -> list_available_models;
testclass_downloads -> from_pretrained;
testclass_downloads -> isinstance;
testclass_downloads -> set;
test_test_data_dir -> exists;
test_test_data_dir -> join;
fresh_dummy_dist -> __init__;
test_single_gpu -> delenv;
test_single_gpu -> fresh_dummy_dist;
test_single_gpu -> FirstRankPerNode;
test_auto_bootstrap -> setenv;
test_auto_bootstrap -> delenv;
test_auto_bootstrap -> fresh_dummy_dist;
test_auto_bootstrap -> FirstRankPerNode;
test_preinitialised_rank0 -> setenv;
test_preinitialised_rank0 -> fresh_dummy_dist;
test_preinitialised_rank0 -> FirstRankPerNode;
test_exception_path -> setenv;
test_exception_path -> fresh_dummy_dist;
test_exception_path -> raises;
test_exception_path -> FirstRankPerNode;
test_exception_path -> RuntimeError;
test_count_tail_padding -> parametrize;
test_count_tail_padding -> count_tail_padding;
test_count_tail_padding -> int;
test_count_tail_padding -> tensor;
test_count_tail_padding -> zeros;
test_compute_cross_entropy_basic -> tensor;
test_compute_cross_entropy_basic -> cross_entropy;
test_compute_cross_entropy_basic -> compute_cross_entropy;
test_compute_cross_entropy_basic -> allclose;
test_compute_cross_entropy_basic -> item;
test_compute_cross_entropy_ignore_index -> tensor;
test_compute_cross_entropy_ignore_index -> cross_entropy;
test_compute_cross_entropy_ignore_index -> compute_cross_entropy;
test_compute_cross_entropy_ignore_index -> allclose;
test_compute_cross_entropy_ignore_index -> item;
test_chunked_cross_entropy_matches_compute_cross_entropy -> randn;
test_chunked_cross_entropy_matches_compute_cross_entropy -> randint;
test_chunked_cross_entropy_matches_compute_cross_entropy -> chunked_cross_entropy;
test_chunked_cross_entropy_matches_compute_cross_entropy -> allclose;
test_chunked_cross_entropy_matches_compute_cross_entropy -> compute_cross_entropy;
test_chunked_cross_entropy_matches_compute_cross_entropy -> detach;
test_chunked_cross_entropy_matches_compute_cross_entropy -> item;
test_chunked_cross_entropy_matches_compute_cross_entropy -> sum;
test_chunked_cross_entropy_ignore_index_and_mask -> randn;
test_chunked_cross_entropy_ignore_index_and_mask -> randint;
test_chunked_cross_entropy_ignore_index_and_mask -> clone;
test_chunked_cross_entropy_ignore_index_and_mask -> compute_cross_entropy;
test_chunked_cross_entropy_ignore_index_and_mask -> detach;
test_chunked_cross_entropy_ignore_index_and_mask -> chunked_cross_entropy;
test_chunked_cross_entropy_ignore_index_and_mask -> allclose;
test_chunked_cross_entropy_ignore_index_and_mask -> sum;
test_chunked_cross_entropy_ignore_index_and_mask -> item;
test_fused_cross_entropy -> skipif;
test_fused_cross_entropy -> device;
test_fused_cross_entropy -> randn;
test_fused_cross_entropy -> randint;
test_fused_cross_entropy -> reset_peak_memory_stats;
test_fused_cross_entropy -> max_memory_allocated;
test_fused_cross_entropy -> empty_cache;
test_fused_cross_entropy -> collect;
test_fused_cross_entropy -> print;
test_fused_cross_entropy -> float;
test_fused_cross_entropy -> allclose;
test_fused_cross_entropy -> is_available;
test_fused_cross_entropy -> skip;
test_fused_cross_entropy -> autocast;
test_fused_cross_entropy -> reshape;
test_fused_cross_entropy -> matmul;
test_fused_cross_entropy -> cross_entropy;
test_fused_cross_entropy -> fused_linear_cross_entropy;
test_fused_cross_entropy -> t;
test_fused_cross_entropy -> item;
test_masked_cross_entropy_no_mask -> manual_seed;
test_masked_cross_entropy_no_mask -> randn;
test_masked_cross_entropy_no_mask -> randint;
test_masked_cross_entropy_no_mask -> masked_cross_entropy;
test_masked_cross_entropy_no_mask -> cross_entropy;
test_masked_cross_entropy_no_mask -> allclose;
test_masked_cross_entropy_no_mask -> item;
test_masked_cross_entropy_with_mask -> manual_seed;
test_masked_cross_entropy_with_mask -> randn;
test_masked_cross_entropy_with_mask -> randint;
test_masked_cross_entropy_with_mask -> tensor;
test_masked_cross_entropy_with_mask -> masked_cross_entropy;
test_masked_cross_entropy_with_mask -> clone;
test_masked_cross_entropy_with_mask -> cross_entropy;
test_masked_cross_entropy_with_mask -> allclose;
test_masked_cross_entropy_with_mask -> item;
test_masked_cross_entropy_gpu -> skipif;
test_masked_cross_entropy_gpu -> device;
test_masked_cross_entropy_gpu -> manual_seed;
test_masked_cross_entropy_gpu -> randn;
test_masked_cross_entropy_gpu -> randint;
test_masked_cross_entropy_gpu -> tensor;
test_masked_cross_entropy_gpu -> masked_cross_entropy;
test_masked_cross_entropy_gpu -> is_available;
rnnt_test_helper -> fixture;
rnn_loss_sample_data -> fixture;
fast_conformer_transducer_model -> fixture;
fast_conformer_transducer_model -> from_pretrained;
fast_conformer_ctc_model -> fixture;
fast_conformer_ctc_model -> from_pretrained;
fast_conformer_hybrid_model -> fixture;
fast_conformer_hybrid_model -> from_pretrained;
canary_1b_flash -> fixture;
canary_1b_flash -> restore_from;
wrap_and_call -> LongTensor;
wrap_and_call -> fn;
wrap_and_call -> sum;
wrap_and_call -> backward;
wrap_and_call -> is_tensor;
wrap_and_call -> FloatTensor;
wrap_and_call -> cuda;
wrap_and_call -> synchronize;
wrap_and_call -> numpy;
wrap_and_call -> len;
wrap_and_call -> cpu;
wrap_and_call -> log_softmax;
wrap_and_call -> transpose;
wrap_and_call -> tensor;
get_sample_small -> array;
get_sample_small -> asarray;
get_sample_small -> RnntLossSampleData;
get_sample_small -> to;
get_sample_small -> from_numpy;
get_sample_small -> tensor;
get_sample_small_blank_last -> array;
get_sample_small_blank_last -> RnntLossSampleData;
get_sample_small_blank_last -> to;
get_sample_small_blank_last -> from_numpy;
get_sample_small_blank_last -> tensor;
get_sample_medium -> array;
get_sample_medium -> RnntLossSampleData;
get_sample_medium -> to;
get_sample_medium -> from_numpy;
get_sample_medium -> tensor;
get_sample_small_random -> device;
get_sample_small_random -> to;
get_sample_small_random -> rand;
get_sample_small_random -> tensor;
get_sample_small_random -> RnntLossSampleData;
get_sample_small_random -> asarray;
get_sample_small_random -> unsqueeze;
get_sample_small_random -> from_numpy;
get_sample_medium_random_var_size -> device;
get_sample_medium_random_var_size -> RandomState;
get_sample_medium_random_var_size -> randint;
get_sample_medium_random_var_size -> to;
get_sample_medium_random_var_size -> rand;
get_sample_medium_random_var_size -> long;
get_sample_medium_random_var_size -> tensor;
get_sample_medium_random_var_size -> RnntLossSampleData;
get_sample_medium_random_var_size -> from_numpy;
speech_classification_model -> fixture;
speech_classification_model -> DictConfig;
speech_classification_model -> EncDecClassificationModel;
speech_classification_model -> dict;
speech_classification_model -> ListConfig;
speech_classification_model -> format;
speech_classification_model -> range;
frame_classification_model -> fixture;
frame_classification_model -> DictConfig;
frame_classification_model -> EncDecFrameClassificationModel;
frame_classification_model -> dict;
frame_classification_model -> ListConfig;
frame_classification_model -> format;
frame_classification_model -> range;
test_constructor -> train;
test_constructor -> to_config_dict;
test_constructor -> from_config_dict;
test_constructor -> isinstance;
test_constructor -> with_downloads;
test_constructor -> skipif;
test_constructor -> FusedBatchNorm1d;
test_constructor -> allclose;
test_constructor -> ones;
test_constructor -> zeros;
test_constructor -> CTCDecodingConfig;
test_constructor -> char_vocabulary;
test_constructor -> CTCDecoding;
test_constructor -> RNNTDecodingConfig;
test_constructor -> get_rnnt_decoder;
test_constructor -> get_rnnt_joint;
test_constructor -> RNNTDecoding;
test_constructor -> len;
test_constructor -> DictConfig;
test_constructor -> EncDecSpeakerLabelModel;
test_constructor -> assertTrue;
test_forward -> eval;
test_forward -> randn;
test_forward -> randint;
test_forward -> mean;
test_forward -> max;
test_forward -> no_grad;
test_forward -> range;
test_forward -> cat;
test_forward -> forward;
test_forward -> abs;
test_forward -> size;
test_forward -> append;
test_forward -> print;
test_forward -> len;
test_forward -> with_downloads;
test_forward -> skipif;
test_forward -> parametrize;
test_forward -> update;
test_forward -> tensor;
test_forward -> DictConfig;
test_forward -> model_class;
test_forward -> train;
test_forward -> set_access_enabled;
test_forward -> get_captured_interctc_tensors;
test_forward -> reset_registry;
test_forward -> Trainer;
test_forward -> fit;
test_forward -> test;
test_forward -> jasper_encoder_config;
test_forward -> conformer_encoder_config;
test_forward -> squeezeformer_encoder_config;
test_forward -> raises;
test_forward -> ListConfig;
test_forward -> DataLoader;
test_forward -> allclose;
test_forward -> DummyDataset;
test_forward -> from_pretrained;
test_forward -> change_attention_model;
test_forward -> manual_seed;
test_forward -> change_subsampling_conv_chunking_factor;
test_forward -> ones_like;
test_forward -> sum;
test_forward -> disable_checks;
test_forward -> adapter;
test_forward -> norm;
test_forward -> ones;
test_forward -> long;
test_forward -> set_seed;
test_forward -> CrossAttention;
test_forward -> Tensor;
test_forward -> layer;
test_forward -> configure_model;
test_forward -> MagicMock;
test_forward -> hasattr;
test_forward -> run_only_on;
test_forward -> TensorRTMMExporter;
test_forward -> assert_called_once;
test_vocab_change -> train;
test_vocab_change -> deepcopy;
test_vocab_change -> change_labels;
test_vocab_change -> append;
test_vocab_change -> change_vocabulary;
test_vocab_change -> with_downloads;
test_vocab_change -> TemporaryDirectory;
test_vocab_change -> join;
test_vocab_change -> makedirs;
test_vocab_change -> copy2;
test_vocab_change -> save_to;
test_vocab_change -> exists;
test_vocab_change -> rename;
test_vocab_change -> restore_from;
test_vocab_change -> isinstance;
test_vocab_change -> open;
test_vocab_change -> write;
test_vocab_change -> len;
test_vocab_change -> get_vocab;
test_vocab_change -> skipif;
test_transcription -> eval;
test_transcription -> transcribe;
test_transcription -> join;
test_transcription -> len;
test_transcription -> Size;
test_EncDecClassificationDatasetConfig_for_AudioToSpeechLabelDataset -> assert_dataclass_signature_match;
test_reshape_labels -> parametrize;
test_reshape_labels -> eval;
test_reshape_labels -> ones;
test_reshape_labels -> tensor;
test_reshape_labels -> reshape_labels;
test_reshape_labels -> equal;
test_reshape_labels -> size;
test_EncDecClassificationDatasetConfig_for_AudioToMultiSpeechLabelDataset -> assert_dataclass_signature_match;
conformer_ctc_bpe_model -> fixture;
conformer_ctc_bpe_model -> from_pretrained;
conformer_ctc_bpe_model -> set_trainer;
conformer_ctc_bpe_model -> eval;
conformer_ctc_bpe_model -> Trainer;
test_graph_building -> ContextGraphCTC;
test_graph_building -> add_to_graph;
test_run_word_spotter -> join;
test_run_word_spotter -> text_to_ids;
test_run_word_spotter -> numpy;
test_run_word_spotter -> ContextGraphCTC;
test_run_word_spotter -> add_to_graph;
test_run_word_spotter -> run_word_spotter;
test_run_word_spotter -> len;
test_run_word_spotter -> round;
test_run_word_spotter -> cpu;
test_run_word_spotter -> transcribe;
test_merge_alignment_with_ws_hyps -> array;
test_merge_alignment_with_ws_hyps -> merge_alignment_with_ws_hyps;
test_merge_alignment_with_ws_hyps -> Hypothesis;
test_merge_alignment_with_ws_hyps -> WSHyp;
test_merge_alignment_with_ws_hyps -> tensor;
test_compute_fscore -> NamedTemporaryFile;
test_compute_fscore -> write;
test_compute_fscore -> seek;
test_compute_fscore -> compute_fscore;
test_compute_fscore -> round;
test_predict_step -> eval;
test_predict_step -> DummyManifest;
test_predict_step -> LhotseSpeechToTextBpeDataset;
test_predict_step -> predict_step;
test_predict_step -> isinstance;
test_predict_step -> len;
test_predict_step -> make_parser;
test_predict_step -> PromptedAudioToTextLhotseDataset;
test_predict_step -> print;
test_predict_step -> CanaryPromptFormatter;
test_predict_step -> restore_from_pretrained_models;
test_predict_step -> cuda;
test_predict_step -> train;
test_predict_step -> items;
test_predict_step -> MagicMock;
test_predict_step -> assert_called_once_with;
test_predict_step -> tensor;
test_predict_step -> FSDPPrecision;
test_decoding_change -> isinstance;
test_decoding_change -> CTCDecodingConfig;
test_decoding_change -> change_decoding_strategy;
test_decoding_change -> CTCBPEDecodingConfig;
test_decoding_change -> DictConfig;
test_decoding_change -> with_downloads;
test_decoding_change -> skipif;
test_change_conv_asr_se_context_window -> deepcopy;
test_change_conv_asr_se_context_window -> change_conv_asr_se_context_window;
test_change_conv_asr_se_context_window -> named_modules;
test_change_conv_asr_se_context_window -> type;
test_change_conv_asr_se_context_window -> skipif;
test_change_conv_asr_se_context_window_no_config_update -> deepcopy;
test_change_conv_asr_se_context_window_no_config_update -> change_conv_asr_se_context_window;
test_change_conv_asr_se_context_window_no_config_update -> named_modules;
test_change_conv_asr_se_context_window_no_config_update -> type;
test_change_conv_asr_se_context_window_no_config_update -> skipif;
test_dataclass_instantiation -> EncDecCTCModelConfig;
test_dataclass_instantiation -> create;
test_dataclass_instantiation -> update_model_config;
test_dataclass_instantiation -> EncDecCTCModel;
test_dataclass_instantiation -> JasperEncoderConfig;
test_dataclass_instantiation -> open_dict;
test_dataclass_instantiation -> pop;
test_ASRDatasetConfig_for_AudioToCharDataset -> assert_dataclass_signature_match;
test_ASRDatasetConfig_for_TarredAudioToCharDataset -> assert_dataclass_signature_match;
test_save_restore_artifact -> with_downloads;
test_save_restore_artifact -> TemporaryDirectory;
test_save_restore_artifact -> join;
test_save_restore_artifact -> train;
test_save_restore_artifact -> save_to;
test_save_restore_artifact -> restore_from;
test_save_restore_artifact -> isinstance;
test_save_restore_artifact -> endswith;
test_save_restore_artifact -> type;
test_save_restore_artifact -> len;
test_save_restore_artifact -> get_vocab;
test_save_restore_artifact -> skipif;
test_save_restore_artifact_spe -> with_downloads;
test_save_restore_artifact_spe -> TemporaryDirectory;
test_save_restore_artifact_spe -> join;
test_save_restore_artifact_spe -> change_vocabulary;
test_save_restore_artifact_spe -> train;
test_save_restore_artifact_spe -> save_to;
test_save_restore_artifact_spe -> restore_from;
test_save_restore_artifact_spe -> isinstance;
test_save_restore_artifact_spe -> endswith;
test_save_restore_artifact_spe -> type;
test_save_restore_artifact_spe -> len;
test_save_restore_artifact_spe -> get_vocab;
test_save_restore_artifact_spe -> skipif;
test_save_restore_artifact_agg -> with_downloads;
test_save_restore_artifact_agg -> join;
test_save_restore_artifact_agg -> DictConfig;
test_save_restore_artifact_agg -> TemporaryDirectory;
test_save_restore_artifact_agg -> change_vocabulary;
test_save_restore_artifact_agg -> train;
test_save_restore_artifact_agg -> save_to;
test_save_restore_artifact_agg -> restore_from;
test_save_restore_artifact_agg -> isinstance;
test_save_restore_artifact_agg -> type;
test_save_restore_artifact_agg -> len;
test_save_restore_artifact_agg -> get_vocab;
test_ASRDatasetConfig_for_AudioToBPEDataset -> assert_dataclass_signature_match;
test_ASRDatasetConfig_for_TarredAudioToBPEDataset -> assert_dataclass_signature_match;
decode_chars -> numpy;
decode_chars -> join;
decode_chars -> append;
decode_chars -> cpu;
decode_subwords -> numpy;
decode_subwords -> ids_to_text;
decode_subwords -> cpu;
test_tarred_dataset -> abspath;
test_tarred_dataset -> TarredAudioToCharDataset;
test_tarred_dataset -> join;
test_tarred_dataset -> len;
test_tarred_dataset -> range;
test_tarred_dataset -> WaveformFeaturizer;
test_tarred_dataset -> TarredAudioToClassificationLabelDataset;
test_tarred_dataset_filter -> abspath;
test_tarred_dataset_filter -> TarredAudioToCharDataset;
test_tarred_dataset_filter -> join;
test_tarred_dataset_filter -> len;
test_mismatch_in_model_dataloader_config -> set_level;
test_mismatch_in_model_dataloader_config -> create;
test_mismatch_in_model_dataloader_config -> inject_dataloader_value_from_model_config;
test_mismatch_in_model_dataloader_config -> dict;
test_mismatch_in_model_dataloader_config -> deepcopy;
test_tarred_bpe_dataset -> with_downloads;
test_tarred_bpe_dataset -> abspath;
test_tarred_bpe_dataset -> join;
test_tarred_bpe_dataset -> AutoTokenizer;
test_tarred_bpe_dataset -> TarredAudioToBPEDataset;
test_tarred_bpe_dataset -> len;
test_tarred_bpe_dataset -> range;
test_dali_char_dataset -> skipif;
test_dali_char_dataset -> abspath;
test_dali_char_dataset -> join;
test_dali_char_dataset -> is_available;
test_dali_char_dataset -> NamedTemporaryFile;
test_dali_char_dataset -> seek;
test_dali_char_dataset -> AudioToCharDALIDataset;
test_dali_char_dataset -> zip;
test_dali_char_dataset -> open;
test_dali_char_dataset -> enumerate;
test_dali_char_dataset -> len;
test_dali_char_dataset -> extend;
test_dali_char_dataset -> sorted;
test_dali_char_dataset -> replace;
test_dali_char_dataset -> write;
test_dali_char_dataset -> loads;
test_dali_char_dataset -> append;
test_dali_char_dataset -> decode_chars;
test_dali_bpe_dataset -> skipif;
test_dali_bpe_dataset -> abspath;
test_dali_bpe_dataset -> join;
test_dali_bpe_dataset -> AutoTokenizer;
test_dali_bpe_dataset -> is_available;
test_dali_bpe_dataset -> NamedTemporaryFile;
test_dali_bpe_dataset -> seek;
test_dali_bpe_dataset -> AudioToBPEDALIDataset;
test_dali_bpe_dataset -> zip;
test_dali_bpe_dataset -> open;
test_dali_bpe_dataset -> enumerate;
test_dali_bpe_dataset -> len;
test_dali_bpe_dataset -> extend;
test_dali_bpe_dataset -> sorted;
test_dali_bpe_dataset -> replace;
test_dali_bpe_dataset -> write;
test_dali_bpe_dataset -> loads;
test_dali_bpe_dataset -> append;
test_dali_bpe_dataset -> decode_subwords;
test_dali_char_vs_ref_dataset -> skipif;
test_dali_char_vs_ref_dataset -> abspath;
test_dali_char_vs_ref_dataset -> join;
test_dali_char_vs_ref_dataset -> NamedTemporaryFile;
test_dali_char_vs_ref_dataset -> seek;
test_dali_char_vs_ref_dataset -> DictConfig;
test_dali_char_vs_ref_dataset -> get_dali_char_dataset;
test_dali_char_vs_ref_dataset -> get_char_dataset;
test_dali_char_vs_ref_dataset -> DataLoader;
test_dali_char_vs_ref_dataset -> from_config_dict;
test_dali_char_vs_ref_dataset -> zip;
test_dali_char_vs_ref_dataset -> open;
test_dali_char_vs_ref_dataset -> enumerate;
test_dali_char_vs_ref_dataset -> ref_preprocessor;
test_dali_char_vs_ref_dataset -> abs;
test_dali_char_vs_ref_dataset -> replace;
test_dali_char_vs_ref_dataset -> write;
test_dali_char_vs_ref_dataset -> loads;
test_dali_char_vs_ref_dataset -> append;
test_dali_char_vs_ref_dataset -> numpy;
test_dali_char_vs_ref_dataset -> mean;
test_dali_char_vs_ref_dataset -> max;
test_dali_char_vs_ref_dataset -> cpu;
test_tarred_dali_char_dataset -> skipif;
test_tarred_dali_char_dataset -> abspath;
test_tarred_dali_char_dataset -> join;
test_tarred_dali_char_dataset -> is_available;
test_tarred_dali_char_dataset -> NamedTemporaryFile;
test_tarred_dali_char_dataset -> AudioToCharDALIDataset;
test_tarred_dali_char_dataset -> zip;
test_tarred_dali_char_dataset -> range;
test_tarred_dali_char_dataset -> open;
test_tarred_dali_char_dataset -> len;
test_tarred_dali_char_dataset -> extend;
test_tarred_dali_char_dataset -> sorted;
test_tarred_dali_char_dataset -> readlines;
test_tarred_dali_char_dataset -> decode_chars;
test_dali_tarred_char_vs_ref_dataset -> skipif;
test_dali_tarred_char_vs_ref_dataset -> abspath;
test_dali_tarred_char_vs_ref_dataset -> join;
test_dali_tarred_char_vs_ref_dataset -> NamedTemporaryFile;
test_dali_tarred_char_vs_ref_dataset -> DictConfig;
test_dali_tarred_char_vs_ref_dataset -> get_dali_char_dataset;
test_dali_tarred_char_vs_ref_dataset -> get_tarred_dataset;
test_dali_tarred_char_vs_ref_dataset -> DataLoader;
test_dali_tarred_char_vs_ref_dataset -> from_config_dict;
test_dali_tarred_char_vs_ref_dataset -> zip;
test_dali_tarred_char_vs_ref_dataset -> range;
test_dali_tarred_char_vs_ref_dataset -> open;
test_dali_tarred_char_vs_ref_dataset -> enumerate;
test_dali_tarred_char_vs_ref_dataset -> ref_preprocessor;
test_dali_tarred_char_vs_ref_dataset -> abs;
test_dali_tarred_char_vs_ref_dataset -> loads;
test_dali_tarred_char_vs_ref_dataset -> append;
test_dali_tarred_char_vs_ref_dataset -> numpy;
test_dali_tarred_char_vs_ref_dataset -> mean;
test_dali_tarred_char_vs_ref_dataset -> max;
test_dali_tarred_char_vs_ref_dataset -> cpu;
test_feature_to_text_char_dataset -> TemporaryDirectory;
test_feature_to_text_char_dataset -> join;
test_feature_to_text_char_dataset -> FeatureToCharDataset;
test_feature_to_text_char_dataset -> open;
test_feature_to_text_char_dataset -> range;
test_feature_to_text_char_dataset -> equal;
test_feature_to_text_char_dataset -> save;
test_feature_to_text_char_dataset -> write;
test_feature_to_text_char_dataset -> tensor;
test_feature_to_text_char_dataset -> randn;
test_feature_to_text_char_dataset -> dumps;
test_feature_to_text_bpe_dataset -> join;
test_feature_to_text_bpe_dataset -> AutoTokenizer;
test_feature_to_text_bpe_dataset -> TemporaryDirectory;
test_feature_to_text_bpe_dataset -> FeatureToBPEDataset;
test_feature_to_text_bpe_dataset -> open;
test_feature_to_text_bpe_dataset -> range;
test_feature_to_text_bpe_dataset -> equal;
test_feature_to_text_bpe_dataset -> save;
test_feature_to_text_bpe_dataset -> write;
test_feature_to_text_bpe_dataset -> tensor;
test_feature_to_text_bpe_dataset -> randn;
test_feature_to_text_bpe_dataset -> dumps;
test_feature_with_rttm_to_text_char_dataset -> ones;
test_feature_with_rttm_to_text_char_dataset -> TemporaryDirectory;
test_feature_with_rttm_to_text_char_dataset -> join;
test_feature_with_rttm_to_text_char_dataset -> FeatureToCharDataset;
test_feature_with_rttm_to_text_char_dataset -> open;
test_feature_with_rttm_to_text_char_dataset -> save;
test_feature_with_rttm_to_text_char_dataset -> write;
test_feature_with_rttm_to_text_char_dataset -> equal;
test_feature_with_rttm_to_text_char_dataset -> tensor;
test_feature_with_rttm_to_text_char_dataset -> dumps;
test_feature_with_rttm_to_text_bpe_dataset -> join;
test_feature_with_rttm_to_text_bpe_dataset -> AutoTokenizer;
test_feature_with_rttm_to_text_bpe_dataset -> ones;
test_feature_with_rttm_to_text_bpe_dataset -> TemporaryDirectory;
test_feature_with_rttm_to_text_bpe_dataset -> FeatureToBPEDataset;
test_feature_with_rttm_to_text_bpe_dataset -> open;
test_feature_with_rttm_to_text_bpe_dataset -> save;
test_feature_with_rttm_to_text_bpe_dataset -> write;
test_feature_with_rttm_to_text_bpe_dataset -> equal;
test_feature_with_rttm_to_text_bpe_dataset -> tensor;
test_feature_with_rttm_to_text_bpe_dataset -> dumps;
test_cache_datastore_manifests -> parametrize;
test_cache_datastore_manifests -> default_rng;
test_cache_datastore_manifests -> int;
test_cache_datastore_manifests -> TemporaryDirectory;
test_cache_datastore_manifests -> join;
test_cache_datastore_manifests -> mkdir;
test_cache_datastore_manifests -> range;
test_cache_datastore_manifests -> uniform;
test_cache_datastore_manifests -> write_manifest;
test_cache_datastore_manifests -> append;
test_cache_datastore_manifests -> relpath;
test_cache_datastore_manifests -> makedirs;
test_cache_datastore_manifests -> copy;
test_cache_datastore_manifests -> patch;
test_cache_datastore_manifests -> object;
test_cache_datastore_manifests -> cache_datastore_manifests;
test_cache_datastore_manifests -> cmp;
test_cache_datastore_manifests -> write;
test_cache_datastore_manifests -> dirname;
fake_get -> relpath;
fake_get -> join;
fake_get -> makedirs;
fake_get -> copy;
fake_get -> dirname;
speaker_label_model -> fixture;
speaker_label_model -> DictConfig;
speaker_label_model -> EncDecSpeakerLabelModel;
citrinet_model -> fixture;
citrinet_model -> DictConfig;
citrinet_model -> EncDecCTCModel;
citrinet_model -> dict;
citrinet_model -> list;
citrinet_model -> chr;
citrinet_model -> range;
citrinet_rnnt_model -> fixture;
citrinet_rnnt_model -> list;
citrinet_rnnt_model -> DictConfig;
citrinet_rnnt_model -> EncDecRNNTModel;
citrinet_rnnt_model -> dict;
citrinet_rnnt_model -> chr;
citrinet_rnnt_model -> range;
conformer_model -> fixture;
conformer_model -> DictConfig;
conformer_model -> EncDecCTCModel;
conformer_model -> dict;
conformer_model -> list;
conformer_model -> chr;
conformer_model -> range;
squeezeformer_model -> fixture;
squeezeformer_model -> DictConfig;
squeezeformer_model -> EncDecCTCModel;
squeezeformer_model -> dict;
squeezeformer_model -> list;
squeezeformer_model -> chr;
squeezeformer_model -> range;
test_EncDecCTCModel_export_to_onnx -> run_only_on;
test_EncDecCTCModel_export_to_onnx -> DictConfig;
test_EncDecCTCModel_export_to_onnx -> cuda;
test_EncDecCTCModel_export_to_onnx -> TemporaryDirectory;
test_EncDecCTCModel_export_to_onnx -> join;
test_EncDecCTCModel_export_to_onnx -> export;
test_EncDecCTCModel_export_to_onnx -> load;
test_EncDecCTCModel_export_to_onnx -> check_model;
test_EncDecCTCModel_export_to_onnx -> EncDecCTCModel;
test_EncDecClassificationModel_export_to_onnx -> run_only_on;
test_EncDecClassificationModel_export_to_onnx -> cuda;
test_EncDecClassificationModel_export_to_onnx -> TemporaryDirectory;
test_EncDecClassificationModel_export_to_onnx -> join;
test_EncDecClassificationModel_export_to_onnx -> export;
test_EncDecClassificationModel_export_to_onnx -> load;
test_EncDecClassificationModel_export_to_onnx -> check_model;
test_EncDecSpeakerLabelModel_export_to_onnx -> run_only_on;
test_EncDecSpeakerLabelModel_export_to_onnx -> cuda;
test_EncDecSpeakerLabelModel_export_to_onnx -> TemporaryDirectory;
test_EncDecSpeakerLabelModel_export_to_onnx -> join;
test_EncDecSpeakerLabelModel_export_to_onnx -> export;
test_EncDecSpeakerLabelModel_export_to_onnx -> load;
test_EncDecSpeakerLabelModel_export_to_onnx -> check_model;
test_EncDecCitrinetModel_export_to_onnx -> run_only_on;
test_EncDecCitrinetModel_export_to_onnx -> cuda;
test_EncDecCitrinetModel_export_to_onnx -> TemporaryDirectory;
test_EncDecCitrinetModel_export_to_onnx -> join;
test_EncDecCitrinetModel_export_to_onnx -> export;
test_EncDecCitrinetModel_export_to_onnx -> load;
test_EncDecCitrinetModel_export_to_onnx -> check_model;
test_ConformerModel_export_to_onnx -> run_only_on;
test_ConformerModel_export_to_onnx -> cuda;
test_ConformerModel_export_to_onnx -> TemporaryDirectory;
test_ConformerModel_export_to_onnx -> autocast;
test_ConformerModel_export_to_onnx -> join;
test_ConformerModel_export_to_onnx -> randn;
test_ConformerModel_export_to_onnx -> full;
test_ConformerModel_export_to_onnx -> export;
test_ConformerModel_export_to_onnx -> next;
test_ConformerModel_export_to_onnx -> parameters;
test_ConformerModel_export_to_onnx -> tuple;
test_SqueezeformerModel_export_to_onnx -> run_only_on;
test_SqueezeformerModel_export_to_onnx -> cuda;
test_SqueezeformerModel_export_to_onnx -> TemporaryDirectory;
test_SqueezeformerModel_export_to_onnx -> autocast;
test_SqueezeformerModel_export_to_onnx -> join;
test_SqueezeformerModel_export_to_onnx -> randn;
test_SqueezeformerModel_export_to_onnx -> full;
test_SqueezeformerModel_export_to_onnx -> export;
test_SqueezeformerModel_export_to_onnx -> next;
test_SqueezeformerModel_export_to_onnx -> parameters;
test_SqueezeformerModel_export_to_onnx -> tuple;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> run_only_on;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> cuda;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> change_conv_asr_se_context_window;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> TemporaryDirectory;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> autocast;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> join;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> export;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> load;
test_EncDecCitrinetModel_limited_SE_export_to_onnx -> check_model;
test_EncDecRNNTModel_export_to_onnx -> run_only_on;
test_EncDecRNNTModel_export_to_onnx -> cuda;
test_EncDecRNNTModel_export_to_onnx -> TemporaryDirectory;
test_EncDecRNNTModel_export_to_onnx -> join;
test_EncDecRNNTModel_export_to_onnx -> export;
test_EncDecRNNTModel_export_to_onnx -> exists;
test_EncDecRNNTModel_export_to_onnx -> load;
test_EncDecRNNTModel_export_to_onnx -> check_model;
test_EncDecRNNTModel_export_to_onnx -> input_example;
test_EncDecRNNTModel_export_to_onnx -> len;
test_EncDecRNNTModel_export_to_onnx -> type;
test_EncDecRNNTModel_export_to_onnx -> list;
test_EncDecRNNTModel_export_to_onnx -> enumerate;
test_EncDecRNNTModel_export_to_onnx -> keys;
test_EncDecRNNTModel_export_to_onnx -> str;
test_EncDecRNNTModel_export_to_ts -> run_only_on;
test_EncDecRNNTModel_export_to_ts -> cuda;
test_EncDecRNNTModel_export_to_ts -> TemporaryDirectory;
test_EncDecRNNTModel_export_to_ts -> join;
test_EncDecRNNTModel_export_to_ts -> export;
test_EncDecRNNTModel_export_to_ts -> exists;
test_EncDecRNNTModel_export_to_ts -> load;
test_EncDecRNNTModel_export_to_ts -> input_example;
test_EncDecRNNTModel_export_to_ts -> len;
test_EncDecRNNTModel_export_to_ts -> type;
test_EncDecRNNTModel_export_to_ts -> list;
test_EncDecRNNTModel_export_to_ts -> enumerate;
test_EncDecRNNTModel_export_to_ts -> keys;
test_EncDecRNNTModel_export_to_ts -> str;
test_EncDecCTCModel_adapted_export_to_onnx -> run_only_on;
test_EncDecCTCModel_adapted_export_to_onnx -> DictConfig;
test_EncDecCTCModel_adapted_export_to_onnx -> EncDecCTCModel;
test_EncDecCTCModel_adapted_export_to_onnx -> structured;
test_EncDecCTCModel_adapted_export_to_onnx -> add_adapter;
test_EncDecCTCModel_adapted_export_to_onnx -> cuda;
test_EncDecCTCModel_adapted_export_to_onnx -> LinearAdapterConfig;
test_EncDecCTCModel_adapted_export_to_onnx -> TemporaryDirectory;
test_EncDecCTCModel_adapted_export_to_onnx -> join;
test_EncDecCTCModel_adapted_export_to_onnx -> export;
test_EncDecCTCModel_adapted_export_to_onnx -> load;
test_EncDecCTCModel_adapted_export_to_onnx -> check_model;
setup_method -> dict;
setup_method -> MockModule;
setup_method -> fixture;
test_seq_len -> FilterbankFeatures;
test_seq_len -> randn;
test_seq_len -> tensor;
test_seq_len -> fb_module;
test_seq_len -> stft;
test_seq_len -> squeeze;
test_seq_len -> numpy;
test_seq_len -> detach;
test_seq_len -> cpu;
test_random_stft_sizes -> range;
test_random_stft_sizes -> randint;
test_random_stft_sizes -> FilterbankFeatures;
test_random_stft_sizes -> randn;
test_random_stft_sizes -> tensor;
test_random_stft_sizes -> fb_module;
test_random_stft_sizes -> stft;
test_random_stft_sizes -> squeeze;
test_random_stft_sizes -> numpy;
test_random_stft_sizes -> detach;
test_random_stft_sizes -> cpu;
test_random_stft_sizes_exact_pad -> range;
test_random_stft_sizes_exact_pad -> randint;
test_random_stft_sizes_exact_pad -> FilterbankFeatures;
test_random_stft_sizes_exact_pad -> randn;
test_random_stft_sizes_exact_pad -> tensor;
test_random_stft_sizes_exact_pad -> fb_module;
test_random_stft_sizes_exact_pad -> squeeze;
test_random_stft_sizes_exact_pad -> pad;
test_random_stft_sizes_exact_pad -> stft;
test_random_stft_sizes_exact_pad -> int;
test_random_stft_sizes_exact_pad -> numpy;
test_random_stft_sizes_exact_pad -> detach;
test_random_stft_sizes_exact_pad -> cpu;
hybrid_asr_model -> fixture;
hybrid_asr_model -> DictConfig;
hybrid_asr_model -> EncDecHybridRNNTCTCBPEModel;
hybrid_asr_model -> dict;
hybrid_asr_model -> join;
hybrid_asr_model -> EncDecHybridRNNTCTCModel;
hybrid_asr_model -> len;
hybrid_asr_model -> ListConfig;
test_decoding_type_change -> skipif;
test_decoding_type_change -> isinstance;
test_decoding_type_change -> DictConfig;
test_decoding_type_change -> change_decoding_strategy;
test_GreedyRNNTInferConfig -> assert_dataclass_signature_match;
test_GreedyBatchedRNNTInferConfig -> assert_dataclass_signature_match;
test_BeamRNNTInferConfig -> assert_dataclass_signature_match;
test_greedy_decoding -> skipif;
test_greedy_decoding -> parametrize;
test_greedy_decoding -> len;
test_greedy_decoding -> RNNTDecoder;
test_greedy_decoding -> RNNTJoint;
test_greedy_decoding -> greedy_class;
test_greedy_decoding -> randn;
test_greedy_decoding -> tensor;
test_greedy_decoding -> no_grad;
test_greedy_decoding -> greedy;
test_greedy_decoding -> joint_type;
test_greedy_decoding -> GreedySequenceGenerator;
test_greedy_decoding -> gen;
test_greedy_decoding -> is_tensor;
test_greedy_multi_decoding -> skipif;
test_greedy_multi_decoding -> parametrize;
test_greedy_multi_decoding -> len;
test_greedy_multi_decoding -> RNNTDecoder;
test_greedy_multi_decoding -> RNNTJoint;
test_greedy_multi_decoding -> greedy_class;
test_greedy_multi_decoding -> randn;
test_greedy_multi_decoding -> tensor;
test_greedy_multi_decoding -> no_grad;
test_greedy_multi_decoding -> greedy;
test_greedy_multi_decoding -> joint_type;
test_greedy_decoding_stateless_decoder -> skipif;
test_greedy_decoding_stateless_decoder -> parametrize;
test_greedy_decoding_stateless_decoder -> len;
test_greedy_decoding_stateless_decoder -> StatelessTransducerDecoder;
test_greedy_decoding_stateless_decoder -> RNNTJoint;
test_greedy_decoding_stateless_decoder -> greedy_class;
test_greedy_decoding_stateless_decoder -> randn;
test_greedy_decoding_stateless_decoder -> tensor;
test_greedy_decoding_stateless_decoder -> no_grad;
test_greedy_decoding_stateless_decoder -> greedy;
test_greedy_decoding_stateless_decoder -> joint_type;
test_greedy_multi_decoding_stateless_decoder -> skipif;
test_greedy_multi_decoding_stateless_decoder -> parametrize;
test_greedy_multi_decoding_stateless_decoder -> len;
test_greedy_multi_decoding_stateless_decoder -> StatelessTransducerDecoder;
test_greedy_multi_decoding_stateless_decoder -> RNNTJoint;
test_greedy_multi_decoding_stateless_decoder -> greedy_class;
test_greedy_multi_decoding_stateless_decoder -> randn;
test_greedy_multi_decoding_stateless_decoder -> tensor;
test_greedy_multi_decoding_stateless_decoder -> no_grad;
test_greedy_multi_decoding_stateless_decoder -> greedy;
test_greedy_multi_decoding_stateless_decoder -> joint_type;
test_greedy_decoding_preserve_alignment -> skipif;
test_greedy_decoding_preserve_alignment -> parametrize;
test_greedy_decoding_preserve_alignment -> len;
test_greedy_decoding_preserve_alignment -> RNNTDecoder;
test_greedy_decoding_preserve_alignment -> RNNTJoint;
test_greedy_decoding_preserve_alignment -> greedy_class;
test_greedy_decoding_preserve_alignment -> randn;
test_greedy_decoding_preserve_alignment -> tensor;
test_greedy_decoding_preserve_alignment -> no_grad;
test_greedy_decoding_preserve_alignment -> range;
test_greedy_decoding_preserve_alignment -> greedy;
test_greedy_decoding_preserve_alignment -> is_tensor;
test_greedy_decoding_preserve_alignment -> joint_type;
test_greedy_decoding_preserve_alignment -> item;
test_greedy_decoding_preserve_alignment -> zip;
test_greedy_decoding_preserve_alignment -> unique;
test_beam_decoding -> parametrize;
test_beam_decoding -> len;
test_beam_decoding -> RNNTDecoder;
test_beam_decoding -> RNNTJoint;
test_beam_decoding -> BeamRNNTInfer;
test_beam_decoding -> randn;
test_beam_decoding -> tensor;
test_beam_decoding -> no_grad;
test_beam_decoding -> beam;
test_beam_decoding -> skipif;
test_beam_decoding -> joint_type;
test_beam_decoding_preserve_alignments -> skipif;
test_beam_decoding_preserve_alignments -> parametrize;
test_beam_decoding_preserve_alignments -> len;
test_beam_decoding_preserve_alignments -> RNNTDecoder;
test_beam_decoding_preserve_alignments -> RNNTJoint;
test_beam_decoding_preserve_alignments -> BeamRNNTInfer;
test_beam_decoding_preserve_alignments -> randn;
test_beam_decoding_preserve_alignments -> tensor;
test_beam_decoding_preserve_alignments -> no_grad;
test_beam_decoding_preserve_alignments -> isinstance;
test_beam_decoding_preserve_alignments -> range;
test_beam_decoding_preserve_alignments -> beam;
test_beam_decoding_preserve_alignments -> is_tensor;
test_beam_decoding_preserve_alignments -> joint_type;
test_greedy_decoding_SampledRNNTJoint -> skipif;
test_greedy_decoding_SampledRNNTJoint -> parametrize;
test_greedy_decoding_SampledRNNTJoint -> len;
test_greedy_decoding_SampledRNNTJoint -> RNNTDecoder;
test_greedy_decoding_SampledRNNTJoint -> SampledRNNTJoint;
test_greedy_decoding_SampledRNNTJoint -> greedy_class;
test_greedy_decoding_SampledRNNTJoint -> randn;
test_greedy_decoding_SampledRNNTJoint -> tensor;
test_greedy_decoding_SampledRNNTJoint -> no_grad;
test_greedy_decoding_SampledRNNTJoint -> greedy;
test_beam_decoding_SampledRNNTJoint -> skipif;
test_beam_decoding_SampledRNNTJoint -> parametrize;
test_beam_decoding_SampledRNNTJoint -> len;
test_beam_decoding_SampledRNNTJoint -> RNNTDecoder;
test_beam_decoding_SampledRNNTJoint -> SampledRNNTJoint;
test_beam_decoding_SampledRNNTJoint -> BeamRNNTInfer;
test_beam_decoding_SampledRNNTJoint -> randn;
test_beam_decoding_SampledRNNTJoint -> tensor;
test_beam_decoding_SampledRNNTJoint -> no_grad;
test_beam_decoding_SampledRNNTJoint -> beam;
test_lhotse_asr_dataset -> DummyManifest;
test_lhotse_asr_dataset -> text_to_ids;
test_lhotse_asr_dataset -> LhotseSpeechToTextBpeDataset;
test_lhotse_asr_dataset -> isinstance;
test_lhotse_asr_dataset -> all;
test_lhotse_asr_dataset -> SupervisionSegment;
test_lhotse_asr_dataset -> len;
test_lhotse_asr_dataset -> tolist;
test_lhotse_asr_dataset_metadata -> DummyManifest;
test_lhotse_asr_dataset_metadata -> LhotseSpeechToTextBpeDataset;
test_lhotse_asr_dataset_metadata -> isinstance;
test_lhotse_asr_dataset_metadata -> SupervisionSegment;
test_lhotse_asr_dataset_metadata -> len;
getattr2 -> getattr;
getattr2 -> split;
getattr2 -> getattr2;
getattr2 -> join;
test_change_save_restore -> with_downloads;
test_change_save_restore -> from_pretrained;
test_change_save_restore -> change_attention_model;
test_change_save_restore -> TemporaryDirectory;
test_change_save_restore -> exists;
test_change_save_restore -> restore_from;
test_change_save_restore -> join;
test_change_save_restore -> save_to;
test_change_save_restore -> copy;
test_change_save_restore -> len;
test_change_save_restore -> getattr2;
test_train -> parametrize;
test_train -> DictConfig;
test_train -> randn;
test_train -> tensor;
test_train -> randint;
test_train -> EncDecCTCModel;
test_train -> train;
test_train -> forward;
test_train -> Trainer;
test_train -> fit;
test_train -> test;
test_train -> len;
test_train -> DataLoader;
test_train -> DummyDataset;
build_char_tokenizer_with_vocabulary -> setattr;
build_char_tokenizer_with_vocabulary -> patch;
build_char_tokenizer_with_vocabulary -> CharTokenizer;
build_char_tokenizer_with_vocabulary -> Mock;
build_char_tokenizer_with_vocabulary -> StringIO;
build_char_tokenizer_with_vocabulary -> join;
build_char_tokenizer_with_vocabulary -> repr;
__string_to_ctc_tensor -> unsqueeze;
__string_to_ctc_tensor -> text_to_ids;
__string_to_ctc_tensor -> len;
__string_to_ctc_tensor -> dict;
__string_to_ctc_tensor -> to;
__string_to_ctc_tensor -> one_hot;
__string_to_ctc_tensor -> append;
__string_to_ctc_tensor -> Tensor;
__string_to_ctc_tensor -> range;
__reference_string_to_tensor -> unsqueeze;
__reference_string_to_tensor -> text_to_ids;
__reference_string_to_tensor -> dict;
__reference_string_to_tensor -> Tensor;
__reference_string_to_tensor -> range;
__reference_string_to_tensor -> len;
get_wer -> __string_to_ctc_tensor;
get_wer -> __reference_string_to_tensor;
get_wer -> wer;
get_wer -> compute;
get_wer -> cpu;
get_wer -> item;
get_wer -> transpose_;
get_wer -> tensor;
get_wer -> detach;
get_wer -> len;
test_wer_function -> word_error_rate;
test_wer_function -> word_error_rate_detail;
test_wer_function -> word_error_rate_per_utt;
test_wer_function -> float;
test_wer_metric_simple -> parametrize;
test_wer_metric_simple -> get_wer_ctc;
test_wer_metric_simple -> abs;
get_wer_ctc -> Mock;
get_wer_ctc -> __reference_string_to_tensor;
get_wer_ctc -> wer;
get_wer_ctc -> compute;
get_wer_ctc -> cpu;
get_wer_ctc -> item;
get_wer_ctc -> WER;
get_wer_ctc -> tensor;
get_wer_ctc -> detach;
get_wer_ctc -> Hypothesis;
get_wer_ctc -> deepcopy;
get_wer_ctc -> len;
get_wer_ctc -> copy;
test_wer_metric_randomized -> parametrize;
test_wer_metric_randomized -> range;
test_wer_metric_randomized -> join;
test_wer_metric_randomized -> randint;
test_wer_metric_randomized -> __random_string;
test_wer_metric_randomized -> strip;
test_wer_metric_randomized -> choice;
test_wer_metric_randomized -> abs;
test_wer_metric_randomized -> get_wer_ctc;
test_wer_metric_randomized -> word_error_rate;
__random_string -> join;
__random_string -> choice;
__random_string -> range;
test_wer_metric_decode -> parametrize;
test_wer_metric_decode -> tolist;
test_wer_metric_decode -> decode_ids_to_tokens;
test_wer_metric_decode -> decode_tokens_to_str;
test_wer_metric_decode -> CTCBPEDecoding;
test_wer_metric_decode -> WER;
test_wer_metric_decode -> CTCDecoding;
test_wer_metric_decode -> copy;
test_wer_metric_decode -> numpy;
test_wer_metric_decode -> int;
test_wer_metric_decode -> __string_to_ctc_tensor;
test_wer_metric_return_hypothesis -> parametrize;
test_wer_metric_return_hypothesis -> WER;
test_wer_metric_return_hypothesis -> int;
test_wer_metric_return_hypothesis -> ctc_decoder_predictions_tensor;
test_wer_metric_return_hypothesis -> isinstance;
test_wer_metric_return_hypothesis -> all;
test_wer_metric_return_hypothesis -> tensor;
test_wer_metric_return_hypothesis -> CTCDecoding;
test_wer_metric_return_hypothesis -> transpose_;
test_wer_metric_return_hypothesis -> sum;
test_wer_metric_return_hypothesis -> __string_to_ctc_tensor;
test_wer_metric_subword_return_hypothesis -> parametrize;
test_wer_metric_subword_return_hypothesis -> WER;
test_wer_metric_subword_return_hypothesis -> int;
test_wer_metric_subword_return_hypothesis -> ctc_decoder_predictions_tensor;
test_wer_metric_subword_return_hypothesis -> isinstance;
test_wer_metric_subword_return_hypothesis -> all;
test_wer_metric_subword_return_hypothesis -> tensor;
test_wer_metric_subword_return_hypothesis -> CTCBPEDecoding;
test_wer_metric_subword_return_hypothesis -> transpose_;
test_wer_metric_subword_return_hypothesis -> sum;
test_wer_metric_subword_return_hypothesis -> __string_to_ctc_tensor;
decode_token_to_str_with_vocabulary_mock -> join;
get_wer_rnnt -> Mock;
get_wer_rnnt -> __reference_string_to_tensor;
get_wer_rnnt -> wer;
get_wer_rnnt -> compute;
get_wer_rnnt -> cpu;
get_wer_rnnt -> item;
get_wer_rnnt -> WER;
get_wer_rnnt -> transpose_;
get_wer_rnnt -> tensor;
get_wer_rnnt -> detach;
get_wer_rnnt -> Hypothesis;
get_wer_rnnt -> deepcopy;
get_wer_rnnt -> len;
get_wer_rnnt -> copy;
test_rnnt_wer_metric_simple -> parametrize;
test_rnnt_wer_metric_simple -> get_wer_rnnt;
test_rnnt_wer_metric_simple -> abs;
test_rnnt_wer_metric_randomized -> parametrize;
test_rnnt_wer_metric_randomized -> range;
test_rnnt_wer_metric_randomized -> join;
test_rnnt_wer_metric_randomized -> randint;
test_rnnt_wer_metric_randomized -> __random_string;
test_rnnt_wer_metric_randomized -> strip;
test_rnnt_wer_metric_randomized -> choice;
test_rnnt_wer_metric_randomized -> abs;
test_rnnt_wer_metric_randomized -> get_wer_rnnt;
test_rnnt_wer_metric_randomized -> word_error_rate;
test_char_decoding_logprobs -> manual_seed;
test_char_decoding_logprobs -> randn;
test_char_decoding_logprobs -> randint;
test_char_decoding_logprobs -> CTCDecodingConfig;
test_char_decoding_logprobs -> CTCDecoding;
test_char_decoding_logprobs -> ctc_decoder_predictions_tensor;
test_char_decoding_logprobs -> isinstance;
test_char_decoding_logprobs -> len;
test_char_decoding_logprobs -> tensor;
test_subword_decoding_logprobs -> manual_seed;
test_subword_decoding_logprobs -> randn;
test_subword_decoding_logprobs -> randint;
test_subword_decoding_logprobs -> CTCBPEDecodingConfig;
test_subword_decoding_logprobs -> CTCBPEDecoding;
test_subword_decoding_logprobs -> ctc_decoder_predictions_tensor;
test_subword_decoding_logprobs -> isinstance;
test_subword_decoding_logprobs -> tensor;
test_subword_decoding_logprobs -> len;
test_char_decoding_labels -> manual_seed;
test_char_decoding_labels -> randint;
test_char_decoding_labels -> CTCDecodingConfig;
test_char_decoding_labels -> CTCDecoding;
test_char_decoding_labels -> ctc_decoder_predictions_tensor;
test_char_decoding_labels -> isinstance;
test_char_decoding_labels -> len;
test_char_decoding_labels -> tensor;
test_char_decoding_labels -> raises;
test_subword_decoding_labels -> manual_seed;
test_subword_decoding_labels -> randint;
test_subword_decoding_labels -> CTCBPEDecodingConfig;
test_subword_decoding_labels -> CTCBPEDecoding;
test_subword_decoding_labels -> ctc_decoder_predictions_tensor;
test_subword_decoding_labels -> isinstance;
test_subword_decoding_labels -> tensor;
test_subword_decoding_labels -> len;
test_subword_decoding_labels -> raises;
test_AudioToMelSpectrogramPreprocessor_config -> assert_dataclass_signature_match;
test_AudioToMelSpectrogramPreprocessor_batch -> AudioToMelSpectrogramPreprocessor;
test_AudioToMelSpectrogramPreprocessor_batch -> range;
test_AudioToMelSpectrogramPreprocessor_batch -> input_example;
test_AudioToMelSpectrogramPreprocessor_batch -> mean;
test_AudioToMelSpectrogramPreprocessor_batch -> max;
test_AudioToMelSpectrogramPreprocessor_batch -> no_grad;
test_AudioToMelSpectrogramPreprocessor_batch -> cat;
test_AudioToMelSpectrogramPreprocessor_batch -> instance1;
test_AudioToMelSpectrogramPreprocessor_batch -> abs;
test_AudioToMelSpectrogramPreprocessor_batch -> size;
test_AudioToMelSpectrogramPreprocessor_batch -> append;
test_AudioToMelSpectrogramPreprocessor_gpu -> run_only_on;
test_AudioToMelSpectrogramPreprocessor_gpu -> to;
test_AudioToMelSpectrogramPreprocessor_gpu -> input_example;
test_AudioToMelSpectrogramPreprocessor_gpu -> no_grad;
test_AudioToMelSpectrogramPreprocessor_gpu -> instance0;
test_AudioToMelSpectrogramPreprocessor_gpu -> AudioToMelSpectrogramPreprocessor;
test_SpectrogramAugmentationr_legacy -> SpectrogramAugmentation;
test_SpectrogramAugmentationr_legacy -> isinstance;
test_SpectrogramAugmentationr_legacy -> AudioToMelSpectrogramPreprocessor;
test_SpectrogramAugmentationr_legacy -> input_example;
test_SpectrogramAugmentationr_legacy -> instance0;
test_SpectrogramAugmentationr_legacy -> instance1;
test_SpectrogramAugmentationr_vectorized -> run_only_on;
test_SpectrogramAugmentationr_vectorized -> SpectrogramAugmentation;
test_SpectrogramAugmentationr_vectorized -> isinstance;
test_SpectrogramAugmentationr_vectorized -> AudioToMelSpectrogramPreprocessor;
test_SpectrogramAugmentationr_vectorized -> input_example;
test_SpectrogramAugmentationr_vectorized -> instance0;
test_SpectrogramAugmentationr_vectorized -> instance1;
test_SpectrogramAugmentationr_numba_kernel -> run_only_on;
test_SpectrogramAugmentationr_numba_kernel -> skip_numba_cuda_test_if_unsupported;
test_SpectrogramAugmentationr_numba_kernel -> get_verbosity;
test_SpectrogramAugmentationr_numba_kernel -> set_verbosity;
test_SpectrogramAugmentationr_numba_kernel -> set_level;
test_SpectrogramAugmentationr_numba_kernel -> SpectrogramAugmentation;
test_SpectrogramAugmentationr_numba_kernel -> isinstance;
test_SpectrogramAugmentationr_numba_kernel -> AudioToMelSpectrogramPreprocessor;
test_SpectrogramAugmentationr_numba_kernel -> input_example;
test_SpectrogramAugmentationr_numba_kernel -> instance0;
test_SpectrogramAugmentationr_numba_kernel -> instance1;
test_SpectrogramAugmentationr_config -> assert_dataclass_signature_match;
test_CropOrPadSpectrogramAugmentation -> CropOrPadSpectrogramAugmentation;
test_CropOrPadSpectrogramAugmentation -> isinstance;
test_CropOrPadSpectrogramAugmentation -> AudioToMelSpectrogramPreprocessor;
test_CropOrPadSpectrogramAugmentation -> input_example;
test_CropOrPadSpectrogramAugmentation -> instance0;
test_CropOrPadSpectrogramAugmentation -> instance1;
test_CropOrPadSpectrogramAugmentation -> all;
test_CropOrPadSpectrogramAugmentation -> Size;
test_CropOrPadSpectrogramAugmentation -> tensor;
test_CropOrPadSpectrogramAugmentation_config -> assert_dataclass_signature_match;
test_MaskedPatchAugmentation -> MaskedPatchAugmentation;
test_MaskedPatchAugmentation -> isinstance;
test_MaskedPatchAugmentation -> AudioToMelSpectrogramPreprocessor;
test_MaskedPatchAugmentation -> input_example;
test_MaskedPatchAugmentation -> instance0;
test_MaskedPatchAugmentation -> instance1;
test_MaskedPatchAugmentation_config -> assert_dataclass_signature_match;
test_RNNTDecoder -> list;
test_RNNTDecoder -> len;
test_RNNTDecoder -> create;
test_RNNTDecoder -> from_config_dict;
test_RNNTDecoder -> zeros;
test_RNNTDecoder -> initialize_state;
test_RNNTDecoder -> Hypothesis;
test_RNNTDecoder -> score_hypothesis;
test_RNNTDecoder -> predict;
test_RNNTDecoder -> zip;
test_RNNTDecoder -> full;
test_RNNTDecoder -> range;
test_RNNTDecoder -> str;
test_RNNTDecoder -> Size;
test_RNNTDecoder -> sqrt;
test_RNNTDecoder -> sum;
test_RNNTDecoder -> square;
test_RNNTJoint -> list;
test_RNNTJoint -> len;
test_RNNTJoint -> create;
test_RNNTJoint -> from_config_dict;
test_RNNTJoint -> zeros;
test_RNNTJoint -> jointnet;
test_RNNTJoint -> transpose;
test_RNNTJoint -> joint;
test_RNNTJoint -> range;
test_RNNTJoint -> str;
test_RNNTJoint -> Size;
test_RNNTJoint -> sum;
test_RNNTJoint -> abs;
test_HATJoint -> list;
test_HATJoint -> len;
test_HATJoint -> create;
test_HATJoint -> from_config_dict;
test_HATJoint -> zeros;
test_HATJoint -> jointnet;
test_HATJoint -> transpose;
test_HATJoint -> joint;
test_HATJoint -> range;
test_HATJoint -> str;
test_HATJoint -> Size;
test_HATJoint -> sum;
test_HATJoint -> abs;
test_prompted_dataset -> PromptedAudioToTextLhotseDataset;
test_prompted_dataset -> DummyManifest;
test_prompted_dataset -> isinstance;
test_prompted_dataset -> tolist;
test_prompted_dataset -> ids_to_text;
test_prompted_dataset -> CanaryPromptFormatter;
canary2_tokenizer -> fixture;
canary2_tokenizer -> CanaryTokenizer;
canary2_tokenizer -> build_special_tokenizer;
canary2_tokenizer -> range;
test_prompted_dataset_canary2 -> PromptedAudioToTextLhotseDataset;
test_prompted_dataset_canary2 -> DummyManifest;
test_prompted_dataset_canary2 -> isinstance;
test_prompted_dataset_canary2 -> tolist;
test_prompted_dataset_canary2 -> ids_to_text;
test_prompted_dataset_canary2 -> Canary2PromptFormatter;
test_aed_timestamp_processing -> Hypothesis;
test_aed_timestamp_processing -> process_aed_timestamp_outputs;
test_aed_timestamp_processing -> isinstance;
test_aed_timestamp_processing -> len;
test_training_step -> CutSet;
test_training_step -> PromptedAudioToTextLhotseDataset;
test_training_step -> training_step;
test_training_step -> is_tensor;
test_training_step -> list;
test_training_step -> dummy_cut;
test_training_step -> CanaryPromptFormatter;
test_training_step -> keys;
test_training_step -> SupervisionSegment;
test_training_step -> train;
test_training_step -> islice;
test_training_step -> isinstance;
test_training_step -> forward;
test_training_step -> loss;
test_training_step -> backward;
test_training_step -> get;
test_training_step -> rearrange;
test_training_step -> _step;
test_training_step -> restore_from_pretrained_models;
test_training_step -> cuda;
test_training_step -> on_train_start;
test_training_step -> setup;
test_training_step -> allclose;
test_training_step -> iter;
test_training_step -> numpy;
test_training_step -> detach;
test_training_step -> cpu;
test_training_step -> configure_model;
test_training_step -> device;
test_training_step -> MagicMock;
test_training_step -> randint;
test_training_step -> ones_like;
test_training_step -> randn;
test_training_step -> FSDPPrecision;
test_training_step -> tensor;
test_validation_step -> CutSet;
test_validation_step -> PromptedAudioToTextLhotseDataset;
test_validation_step -> print;
test_validation_step -> no_grad;
test_validation_step -> validation_pass;
test_validation_step -> list;
test_validation_step -> dummy_cut;
test_validation_step -> CanaryPromptFormatter;
test_validation_step -> keys;
test_validation_step -> SupervisionSegment;
test_validation_step -> restore_from_pretrained_models;
test_validation_step -> cuda;
test_validation_step -> train;
test_validation_step -> validation_step;
test_validation_step -> allclose;
test_validation_step -> iter;
test_validation_step -> numpy;
test_validation_step -> items;
test_validation_step -> detach;
test_validation_step -> cpu;
test_validation_step -> configure_model;
test_validation_step -> device;
test_validation_step -> MagicMock;
test_validation_step -> randn;
test_validation_step -> randint;
test_validation_step -> ones;
test_validation_step -> assert_called_once_with;
test_validation_step -> assert_called_once;
test_validation_step -> tensor;
test_validation_step -> FSDPPrecision;
test_prompt_change -> isinstance;
test_prompt_change -> change_prompt;
test_prompt_change -> get_default_dialog_slots;
test_prompt_change_subclass -> isinstance;
test_prompt_change_subclass -> change_prompt;
test_prompt_change_subclass -> get_default_dialog_slots;
test_prompt_change_subclass -> encode_dialog;
test_prompt_change_subclass -> ids_to_text;
test_transcribe_single_file -> join;
test_transcribe_single_file -> transcribe;
test_transcribe_single_file -> isinstance;
test_transcribe_single_file -> len;
test_transcribe_single_file_translation -> join;
test_transcribe_single_file_translation -> transcribe;
test_transcribe_single_file_translation -> isinstance;
test_transcribe_single_file_translation -> len;
test_transcribe_return_hypothesis -> join;
test_transcribe_return_hypothesis -> transcribe;
test_transcribe_return_hypothesis -> isinstance;
test_transcribe_return_hypothesis -> len;
test_transcribe_tensor -> join;
test_transcribe_tensor -> read;
test_transcribe_tensor -> transcribe;
test_transcribe_tensor -> isinstance;
test_transcribe_tensor -> len;
test_transcribe_tensor -> with_downloads;
test_build_tokenizer -> build_special_tokenizer;
test_build_tokenizer -> zip;
test_build_tokenizer -> join;
test_build_tokenizer -> _make_tokenizer;
test_build_tokenizer -> tokens_to_ids;
test_FrameBatchMultiTaskAED -> FrameBatchMultiTaskAED;
test_FrameBatchMultiTaskAED -> join;
test_FrameBatchMultiTaskAED -> read_audio_file;
test_FrameBatchMultiTaskAED -> transcribe;
test_FrameBatchMultiTaskAED -> isinstance;
test_FrameBatchMultiTaskAED_with_timestamps -> with_downloads;
test_FrameBatchMultiTaskAED_with_timestamps -> eval;
test_FrameBatchMultiTaskAED_with_timestamps -> FrameBatchMultiTaskAED;
test_FrameBatchMultiTaskAED_with_timestamps -> read_audio_file;
test_FrameBatchMultiTaskAED_with_timestamps -> transcribe;
test_FrameBatchMultiTaskAED_with_timestamps -> isinstance;
test_FrameBatchMultiTaskAED_with_timestamps -> approx;
test_from_batchnorm -> BatchNorm1d;
test_from_batchnorm -> train;
test_from_batchnorm -> range;
test_from_batchnorm -> from_batchnorm;
test_from_batchnorm -> eval;
test_from_batchnorm -> rand;
test_from_batchnorm -> allclose;
test_from_batchnorm -> bn;
test_from_batchnorm -> fused_bn;
test_replace_bn_with_fused_bn -> Sequential;
test_replace_bn_with_fused_bn -> replace_bn_with_fused_bn;
test_replace_bn_with_fused_bn -> isinstance;
test_replace_bn_with_fused_bn -> OrderedDict;
test_replace_bn_with_fused_bn -> Linear;
test_replace_bn_with_fused_bn -> BatchNorm1d;
test_replace_bn_with_fused_bn -> ReLU;
test_replace_bn_with_fused_bn_all -> Sequential;
test_replace_bn_with_fused_bn_all -> replace_bn_with_fused_bn_all;
test_replace_bn_with_fused_bn_all -> isinstance;
test_replace_bn_with_fused_bn_all -> OrderedDict;
test_replace_bn_with_fused_bn_all -> Linear;
test_replace_bn_with_fused_bn_all -> BatchNorm1d;
test_replace_bn_with_fused_bn_all -> ReLU;
speech_regression_model -> fixture;
speech_regression_model -> DictConfig;
speech_regression_model -> EncDecRegressionModel;
speech_regression_model -> dict;
max_symbols_setup -> fixture;
max_symbols_setup -> DummyRNNTDecoder;
max_symbols_setup -> DummyRNNTJoint;
max_symbols_setup -> transpose;
max_symbols_setup -> tensor;
max_symbols_setup -> zip;
max_symbols_setup -> __init__;
max_symbols_setup -> expand;
max_symbols_setup -> clone;
max_symbols_setup -> where;
max_symbols_setup -> split;
max_symbols_setup -> unsqueeze;
max_symbols_setup -> len;
max_symbols_setup -> list;
max_symbols_setup -> one_hot;
max_symbols_setup -> super;
test_multiblank_rnnt_greedy_decoding -> skipif;
test_multiblank_rnnt_greedy_decoding -> parametrize;
test_multiblank_rnnt_greedy_decoding -> len;
test_multiblank_rnnt_greedy_decoding -> RNNTDecoder;
test_multiblank_rnnt_greedy_decoding -> joint_type;
test_multiblank_rnnt_greedy_decoding -> greedy_class;
test_multiblank_rnnt_greedy_decoding -> randn;
test_multiblank_rnnt_greedy_decoding -> tensor;
test_multiblank_rnnt_greedy_decoding -> no_grad;
test_multiblank_rnnt_greedy_decoding -> greedy;
test_multiblank_rnnt_greedy_decoding -> RNNTJoint;
test_greedy_decoding_preserve_frame_confidence -> skipif;
test_greedy_decoding_preserve_frame_confidence -> parametrize;
test_greedy_decoding_preserve_frame_confidence -> len;
test_greedy_decoding_preserve_frame_confidence -> RNNTDecoder;
test_greedy_decoding_preserve_frame_confidence -> joint_type;
test_greedy_decoding_preserve_frame_confidence -> greedy_class;
test_greedy_decoding_preserve_frame_confidence -> randn;
test_greedy_decoding_preserve_frame_confidence -> tensor;
test_greedy_decoding_preserve_frame_confidence -> no_grad;
test_greedy_decoding_preserve_frame_confidence -> range;
test_greedy_decoding_preserve_frame_confidence -> item;
test_greedy_decoding_preserve_frame_confidence -> greedy;
test_greedy_decoding_preserve_frame_confidence -> zip;
test_greedy_decoding_preserve_frame_confidence -> unique;
test_greedy_decoding_max_symbols_alignment -> skipif;
test_greedy_decoding_max_symbols_alignment -> parametrize;
test_greedy_decoding_max_symbols_alignment -> append;
test_greedy_decoding_max_symbols_alignment -> greedy_class;
test_greedy_decoding_max_symbols_alignment -> no_grad;
test_greedy_decoding_max_symbols_alignment -> range;
test_greedy_decoding_max_symbols_alignment -> item;
test_greedy_decoding_max_symbols_alignment -> len;
test_greedy_decoding_max_symbols_alignment -> greedy;
test_greedy_decoding_max_symbols_alignment -> zip;
test_greedy_decoding_max_symbols_alignment -> unique;
test_greedy_decoding_max_symbols_alignment -> tensor;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols -> skipif;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols -> parametrize;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols -> append;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols -> raises;
test_greedy_decoding_max_symbols_confidence_incorrect_max_symbols -> greedy_class;
test_greedy_decoding_max_symbols_confidence -> skipif;
test_greedy_decoding_max_symbols_confidence -> parametrize;
test_greedy_decoding_max_symbols_confidence -> append;
test_greedy_decoding_max_symbols_confidence -> greedy_class;
test_greedy_decoding_max_symbols_confidence -> no_grad;
test_greedy_decoding_max_symbols_confidence -> range;
test_greedy_decoding_max_symbols_confidence -> item;
test_greedy_decoding_max_symbols_confidence -> len;
test_greedy_decoding_max_symbols_confidence -> greedy;
test_greedy_decoding_max_symbols_confidence -> zip;
test_greedy_decoding_max_symbols_confidence -> unique;
test_greedy_decoding_max_symbols_confidence -> tensor;
test_save_restore_nested_model -> with_downloads;
test_save_restore_nested_model -> skipif;
test_save_restore_nested_model -> TemporaryDirectory;
test_save_restore_nested_model -> NestedRNNTModel;
test_save_restore_nested_model -> join;
test_save_restore_nested_model -> save_to;
test_save_restore_nested_model -> restore_from;
test_save_restore_nested_model -> isinstance;
test_save_restore_nested_model -> endswith;
test_save_restore_nested_model -> _unpack_nemo_file;
test_save_restore_nested_model -> state_dict;
test_save_restore_nested_model -> zip;
test_save_restore_nested_model -> type;
test_save_restore_nested_model -> len;
test_save_restore_nested_model -> getsize;
test_save_restore_nested_model -> items;
test_save_restore_nested_model -> DictConfig;
test_save_restore_nested_model -> get_vocab;
test_save_restore_nested_model -> mean;
test_save_restore_nested_model -> abs;
test_save_restore_nested_model -> float;
test_ssb_sampler -> default_rng;
test_ssb_sampler -> round;
test_ssb_sampler -> astype;
test_ssb_sampler -> TemporaryDirectory;
test_ssb_sampler -> concatenate;
test_ssb_sampler -> uniform;
test_ssb_sampler -> append;
test_ssb_sampler -> generate_samples;
test_ssb_sampler -> enumerate;
test_ssb_sampler -> join;
test_ssb_sampler -> write_manifest;
test_ssb_sampler -> AudioToCharDataset;
test_ssb_sampler -> integers;
test_ssb_sampler -> floor;
test_ssb_sampler -> array;
test_ssb_sampler -> dict;
test_ssb_sampler -> write;
test_ssb_sampler -> int;
test_ssb_sampler -> SemiSortBatchSampler;
test_ssb_sampler -> DataLoader;
test_ssb_sampler -> len;
test_ssb_sampler -> abs;
test_ssb_sampler -> list;
test_ssb_sampler -> _speech_collate_fn;
test_model_creation_2models -> parametrize;
test_model_creation_2models -> get_model_config;
test_model_creation_2models -> dump;
test_model_creation_2models -> ConfidenceConfig;
test_model_creation_2models -> ConfidenceEnsembleModel;
test_model_creation_2models -> ConfidenceMethodConfig;
test_model_creation_2models -> DictConfig;
test_model_creation_2models -> str;
test_model_creation_5models -> dump;
test_model_creation_5models -> ConfidenceConfig;
test_model_creation_5models -> ConfidenceEnsembleModel;
test_model_creation_5models -> get_model_config;
test_model_creation_5models -> range;
test_model_creation_5models -> ConfidenceMethodConfig;
test_model_creation_5models -> DictConfig;
test_model_creation_5models -> str;
test_stochastic_depth_model_creation -> ConformerEncoder;
test_stochastic_depth_model_creation -> raises;
test_stochastic_depth_model_creation -> range;
test_stochastic_depth_forward -> rand;
test_stochastic_depth_forward -> tensor;
test_stochastic_depth_forward -> ConformerEncoder;
test_stochastic_depth_forward -> train;
test_stochastic_depth_forward -> range;
test_stochastic_depth_forward -> eval;
test_stochastic_depth_forward -> model;
test_stochastic_depth_forward -> allclose;
test_bypass_pre_encode_forward -> rand;
test_bypass_pre_encode_forward -> tensor;
test_bypass_pre_encode_forward -> ConformerEncoder;
test_bypass_pre_encode_forward -> train;
test_bypass_pre_encode_forward -> eval;
test_bypass_pre_encode_forward -> model;
test_error_shape_invalid_bypass_pre_encode_forward -> rand;
test_error_shape_invalid_bypass_pre_encode_forward -> tensor;
test_error_shape_invalid_bypass_pre_encode_forward -> ConformerEncoder;
test_error_shape_invalid_bypass_pre_encode_forward -> ceil;
test_error_shape_invalid_bypass_pre_encode_forward -> train;
test_error_shape_invalid_bypass_pre_encode_forward -> eval;
test_error_shape_invalid_bypass_pre_encode_forward -> raises;
test_error_shape_invalid_bypass_pre_encode_forward -> model;
special_tokenizer_path -> fixture;
special_tokenizer_path -> mktemp;
special_tokenizer_path -> build_special_tokenizer;
special_tokenizer_path -> str;
lang_tokenizer_path -> fixture;
lang_tokenizer_path -> mktemp;
lang_tokenizer_path -> write_text;
lang_tokenizer_path -> create_spt_model;
lang_tokenizer_path -> str;
test_canary_tokenizer_build_special_tokenizer -> build_special_tokenizer;
test_canary_tokenizer_build_special_tokenizer -> range;
test_canary_tokenizer_build_special_tokenizer -> print;
test_canary_tokenizer_build_special_tokenizer -> vocab_size;
test_canary_tokenizer_build_special_tokenizer -> append;
test_canary_tokenizer_build_special_tokenizer -> sort;
test_canary_tokenizer_build_special_tokenizer -> IdToPiece;
test_canary_tokenizer_init_from_cfg -> DummyModel;
test_canary_tokenizer_init_from_cfg -> Mock;
test_canary_tokenizer_init_from_cfg -> create;
test_canary_tokenizer_init_from_cfg -> _setup_aggregate_tokenizer;
test_canary_tokenizer_init_from_cfg -> isinstance;
test_canary_tokenizer_init_from_cfg -> len;
test_canary_tokenizer_init_from_cfg -> set;
test_canary_tokenizer_init_from_cfg -> text_to_ids;
test_canary_tokenizer_init_from_cfg -> keys;
fastpitch_model -> fixture;
fastpitch_model -> from_pretrained;
fastpitch_model_path -> fixture;
fastpitch_model_path -> save_to;
fastpitch_model_path -> mktemp;
conformer_ctc_bpe_bn_model -> fixture;
conformer_ctc_bpe_bn_model -> from_pretrained;
conformer_ctc_bpe_bn_model_path -> fixture;
conformer_ctc_bpe_bn_model_path -> save_to;
conformer_ctc_bpe_bn_model_path -> mktemp;
conformer_rnnt_bpe_bn_model -> fixture;
conformer_rnnt_bpe_bn_model -> from_pretrained;
conformer_rnnt_bpe_bn_model_path -> fixture;
conformer_rnnt_bpe_bn_model_path -> save_to;
conformer_rnnt_bpe_bn_model_path -> mktemp;
asr_model_ctc_bpe_config -> DictConfig;
asr_model_ctc_bpe_config -> str;
asr_model_ctc_bpe_config -> Path;
asr_tts_ctc_bpe_model -> from_asr_config;
test_from_pretrained_ctc_model -> from_pretrained_models;
test_from_pretrained_ctc_model -> isinstance;
test_from_pretrained_rnnt_model -> from_pretrained_models;
test_from_pretrained_rnnt_model -> isinstance;
test_from_asr_config -> from_asr_config;
test_from_asr_config -> isinstance;
test_save_restore -> TemporaryDirectory;
test_save_restore -> str;
test_save_restore -> train;
test_save_restore -> save_to;
test_save_restore -> restore_from;
test_save_restore -> isinstance;
test_save_restore -> Path;
test_save_restore_asr -> TemporaryDirectory;
test_save_restore_asr -> str;
test_save_restore_asr -> save_asr_model_to;
test_save_restore_asr -> restore_from;
test_save_restore_asr -> isinstance;
test_save_restore_asr -> Path;
test_from_pretrained_ctc_model_fused_bn -> from_pretrained_models;
test_from_pretrained_ctc_model_fused_bn -> isinstance;
test_from_pretrained_ctc_model_fused_bn -> named_modules;
test_from_pretrained_ctc_model_fused_bn -> TemporaryDirectory;
test_from_pretrained_ctc_model_fused_bn -> str;
test_from_pretrained_ctc_model_fused_bn -> save_to;
test_from_pretrained_ctc_model_fused_bn -> restore_from;
test_from_pretrained_ctc_model_fused_bn -> Path;
jasper_base_config -> dict;
jasper_base_config -> update;
check_module_exists -> apply;
check_module_exists -> isinstance;
test_basic_block -> jasper_base_config;
test_basic_block -> JasperBlock;
test_basic_block -> randn;
test_basic_block -> tensor;
test_basic_block -> block;
test_basic_block -> isinstance;
test_basic_block -> get;
test_basic_block -> Size;
test_basic_block -> pop;
test_residual_block -> jasper_base_config;
test_residual_block -> JasperBlock;
test_residual_block -> randn;
test_residual_block -> tensor;
test_residual_block -> block;
test_residual_block -> isinstance;
test_residual_block -> get;
test_residual_block -> Size;
test_residual_block -> pop;
test_residual_block -> run_only_on;
test_residual_block -> rand;
test_residual_block -> mask_sequence_tensor;
test_residual_block -> ResidualBlock;
test_residual_block -> res_block;
test_residual_block -> all;
test_basic_block_repeat -> jasper_base_config;
test_basic_block_repeat -> JasperBlock;
test_basic_block_repeat -> randn;
test_basic_block_repeat -> tensor;
test_basic_block_repeat -> block;
test_basic_block_repeat -> isinstance;
test_basic_block_repeat -> get;
test_basic_block_repeat -> Size;
test_basic_block_repeat -> len;
test_basic_block_repeat -> pop;
test_basic_block_repeat_stride -> jasper_base_config;
test_basic_block_repeat_stride -> JasperBlock;
test_basic_block_repeat_stride -> randn;
test_basic_block_repeat_stride -> tensor;
test_basic_block_repeat_stride -> block;
test_basic_block_repeat_stride -> isinstance;
test_basic_block_repeat_stride -> get;
test_basic_block_repeat_stride -> Size;
test_basic_block_repeat_stride -> len;
test_basic_block_repeat_stride -> pop;
test_basic_block_repeat_stride_last -> jasper_base_config;
test_basic_block_repeat_stride_last -> JasperBlock;
test_basic_block_repeat_stride_last -> randn;
test_basic_block_repeat_stride_last -> tensor;
test_basic_block_repeat_stride_last -> block;
test_basic_block_repeat_stride_last -> isinstance;
test_basic_block_repeat_stride_last -> get;
test_basic_block_repeat_stride_last -> Size;
test_basic_block_repeat_stride_last -> len;
test_basic_block_repeat_stride_last -> pop;
test_basic_block_repeat_separable -> jasper_base_config;
test_basic_block_repeat_separable -> JasperBlock;
test_basic_block_repeat_separable -> randn;
test_basic_block_repeat_separable -> tensor;
test_basic_block_repeat_separable -> block;
test_basic_block_repeat_separable -> isinstance;
test_basic_block_repeat_separable -> get;
test_basic_block_repeat_separable -> Size;
test_basic_block_repeat_separable -> len;
test_basic_block_repeat_separable -> pop;
test_basic_block_stride -> jasper_base_config;
test_basic_block_stride -> print;
test_basic_block_stride -> JasperBlock;
test_basic_block_stride -> randn;
test_basic_block_stride -> tensor;
test_basic_block_stride -> block;
test_basic_block_stride -> isinstance;
test_basic_block_stride -> get;
test_basic_block_stride -> Size;
test_basic_block_stride -> pop;
test_residual_block_stride -> jasper_base_config;
test_residual_block_stride -> print;
test_residual_block_stride -> JasperBlock;
test_residual_block_stride -> randn;
test_residual_block_stride -> tensor;
test_residual_block_stride -> block;
test_residual_block_stride -> isinstance;
test_residual_block_stride -> get;
test_residual_block_stride -> Size;
test_residual_block_stride -> pop;
test_residual_block_activations -> keys;
test_residual_block_activations -> jasper_base_config;
test_residual_block_activations -> JasperBlock;
test_residual_block_activations -> randn;
test_residual_block_activations -> tensor;
test_residual_block_activations -> block;
test_residual_block_activations -> check_module_exists;
test_residual_block_activations -> isinstance;
test_residual_block_activations -> get;
test_residual_block_activations -> Size;
test_residual_block_activations -> pop;
test_residual_block_normalizations -> jasper_base_config;
test_residual_block_normalizations -> JasperBlock;
test_residual_block_normalizations -> randn;
test_residual_block_normalizations -> tensor;
test_residual_block_normalizations -> block;
test_residual_block_normalizations -> isinstance;
test_residual_block_normalizations -> get;
test_residual_block_normalizations -> Size;
test_residual_block_normalizations -> pop;
test_residual_block_se -> jasper_base_config;
test_residual_block_se -> JasperBlock;
test_residual_block_se -> randn;
test_residual_block_se -> tensor;
test_residual_block_se -> block;
test_residual_block_se -> check_module_exists;
test_residual_block_se -> isinstance;
test_residual_block_se -> get;
test_residual_block_se -> Size;
test_residual_block_se -> pop;
test_residual_block_asymmetric_pad_future_contexts -> print;
test_residual_block_asymmetric_pad_future_contexts -> jasper_base_config;
test_residual_block_asymmetric_pad_future_contexts -> JasperBlock;
test_residual_block_asymmetric_pad_future_contexts -> randn;
test_residual_block_asymmetric_pad_future_contexts -> tensor;
test_residual_block_asymmetric_pad_future_contexts -> block;
test_residual_block_asymmetric_pad_future_contexts -> check_module_exists;
test_residual_block_asymmetric_pad_future_contexts -> isinstance;
test_residual_block_asymmetric_pad_future_contexts -> get;
test_residual_block_asymmetric_pad_future_contexts -> Size;
test_residual_block_asymmetric_pad_future_contexts -> pop;
test_residual_block_asymmetric_pad_future_context_fallback -> print;
test_residual_block_asymmetric_pad_future_context_fallback -> jasper_base_config;
test_residual_block_asymmetric_pad_future_context_fallback -> JasperBlock;
test_residual_block_asymmetric_pad_future_context_fallback -> randn;
test_residual_block_asymmetric_pad_future_context_fallback -> tensor;
test_residual_block_asymmetric_pad_future_context_fallback -> block;
test_residual_block_asymmetric_pad_future_context_fallback -> check_module_exists;
test_residual_block_asymmetric_pad_future_context_fallback -> isinstance;
test_residual_block_asymmetric_pad_future_context_fallback -> get;
test_residual_block_asymmetric_pad_future_context_fallback -> Size;
test_residual_block_asymmetric_pad_future_context_fallback -> pop;
test_padding_size_conv1d -> rand;
test_padding_size_conv1d -> get_same_padding;
test_padding_size_conv1d -> Conv1d;
test_padding_size_conv1d -> conv;
contrust_jasper_block -> jasper_base_config;
contrust_jasper_block -> JasperBlock;
contrust_jasper_block -> get;
contrust_jasper_block -> pop;
test_blocks_with_same_input_output_channels_sum_residual -> range;
test_blocks_with_same_input_output_channels_sum_residual -> ParallelBlock;
test_blocks_with_same_input_output_channels_sum_residual -> randn;
test_blocks_with_same_input_output_channels_sum_residual -> tensor;
test_blocks_with_same_input_output_channels_sum_residual -> block;
test_blocks_with_same_input_output_channels_sum_residual -> append;
test_blocks_with_same_input_output_channels_sum_residual -> Size;
test_blocks_with_same_input_output_channels_sum_residual -> contrust_jasper_block;
test_blocks_with_different_input_output_channels_sum_residual -> range;
test_blocks_with_different_input_output_channels_sum_residual -> ParallelBlock;
test_blocks_with_different_input_output_channels_sum_residual -> randn;
test_blocks_with_different_input_output_channels_sum_residual -> tensor;
test_blocks_with_different_input_output_channels_sum_residual -> append;
test_blocks_with_different_input_output_channels_sum_residual -> raises;
test_blocks_with_different_input_output_channels_sum_residual -> block;
test_blocks_with_different_input_output_channels_sum_residual -> contrust_jasper_block;
test_blocks_with_same_input_output_channels_conv_residual -> range;
test_blocks_with_same_input_output_channels_conv_residual -> ParallelBlock;
test_blocks_with_same_input_output_channels_conv_residual -> randn;
test_blocks_with_same_input_output_channels_conv_residual -> tensor;
test_blocks_with_same_input_output_channels_conv_residual -> block;
test_blocks_with_same_input_output_channels_conv_residual -> append;
test_blocks_with_same_input_output_channels_conv_residual -> Size;
test_blocks_with_same_input_output_channels_conv_residual -> contrust_jasper_block;
test_blocks_with_different_input_output_channels_conv_residual -> range;
test_blocks_with_different_input_output_channels_conv_residual -> ParallelBlock;
test_blocks_with_different_input_output_channels_conv_residual -> randn;
test_blocks_with_different_input_output_channels_conv_residual -> tensor;
test_blocks_with_different_input_output_channels_conv_residual -> block;
test_blocks_with_different_input_output_channels_conv_residual -> append;
test_blocks_with_different_input_output_channels_conv_residual -> Size;
test_blocks_with_different_input_output_channels_conv_residual -> contrust_jasper_block;
test_single_block -> ParallelBlock;
test_single_block -> randn;
test_single_block -> tensor;
test_single_block -> block;
test_single_block -> contrust_jasper_block;
test_single_block -> Size;
test_tower_dropout -> range;
test_tower_dropout -> ParallelBlock;
test_tower_dropout -> randn;
test_tower_dropout -> tensor;
test_tower_dropout -> block;
test_tower_dropout -> assert_close;
test_tower_dropout -> append;
test_tower_dropout -> contrust_jasper_block;
_traverse -> isinstance;
test_tarred_dataset_duplicate_name -> abspath;
test_tarred_dataset_duplicate_name -> WaveformFeaturizer;
test_tarred_dataset_duplicate_name -> TarredAudioToClassificationLabelDataset;
test_tarred_dataset_duplicate_name -> join;
test_tarred_dataset_duplicate_name -> len;
test_tarred_dataset_duplicate_name -> range;
test_feat_seqlabel_dataset -> abspath;
test_feat_seqlabel_dataset -> ExternalFeatureLoader;
test_feat_seqlabel_dataset -> FeatureToSeqSpeakerLabelDataset;
test_feat_seqlabel_dataset -> tensor;
test_feat_seqlabel_dataset -> equal;
test_feat_seqlabel_dataset -> join;
test_feat_label_dataset -> TemporaryDirectory;
test_feat_label_dataset -> join;
test_feat_label_dataset -> FeatureToLabelDataset;
test_feat_label_dataset -> tensor;
test_feat_label_dataset -> equal;
test_feat_label_dataset -> open;
test_feat_label_dataset -> range;
test_feat_label_dataset -> index;
test_feat_label_dataset -> save;
test_feat_label_dataset -> write;
test_feat_label_dataset -> randn;
test_feat_label_dataset -> dumps;
test_audio_multilabel_dataset -> TemporaryDirectory;
test_audio_multilabel_dataset -> join;
test_audio_multilabel_dataset -> AudioToMultiLabelDataset;
test_audio_multilabel_dataset -> tensor;
test_audio_multilabel_dataset -> equal;
test_audio_multilabel_dataset -> open;
test_audio_multilabel_dataset -> range;
test_audio_multilabel_dataset -> normal;
test_audio_multilabel_dataset -> write;
test_audio_multilabel_dataset -> dumps;
n_gpu_lm -> fixture;
n_gpu_lm -> from_arpa;
n_gpu_lm -> Path;
kenlm_wrapper -> fixture;
kenlm_wrapper -> from_file;
kenlm_wrapper -> Path;
test_load -> from_arpa;
test_load -> Path;
test_initial_states -> skipif;
test_initial_states -> parametrize;
test_initial_states -> to;
test_initial_states -> get_init_states;
test_initial_states -> advance;
test_initial_states -> allclose;
test_triton_vs_pytorch_random_states -> skipif;
test_triton_vs_pytorch_random_states -> manual_seed;
test_triton_vs_pytorch_random_states -> device;
test_triton_vs_pytorch_random_states -> to;
test_triton_vs_pytorch_random_states -> tqdm;
test_triton_vs_pytorch_random_states -> range;
test_triton_vs_pytorch_random_states -> randint;
test_triton_vs_pytorch_random_states -> all;
test_triton_vs_pytorch_random_states -> allclose;
test_triton_vs_pytorch_random_states -> is_available;
test_triton_vs_pytorch_random_states -> no_grad;
test_triton_vs_pytorch_random_states -> _advance_pytorch;
test_triton_vs_pytorch_random_states -> _advance_triton;
test_triton_vs_pytorch_random_states -> full;
test_final -> skipif;
test_final -> parametrize;
test_final -> to;
test_final -> get_final;
test_final -> allclose;
test_final -> get_init_state;
test_final -> append;
test_final -> get_init_states;
test_final -> advance_single;
test_final -> advance;
test_final -> unsqueeze;
test_final -> cat;
test_sentences -> skipif;
test_sentences -> parametrize;
test_sentences -> to;
test_sentences -> n_gpu_lm;
test_sentences -> allclose;
test_sentences -> score_sentences;
test_sentences -> pad_sequence;
test_sentences -> LongTensor;
test_sentences -> len;
test_save_load_nemo -> from_arpa;
test_save_load_nemo -> save_to;
test_save_load_nemo -> from_nemo;
test_save_load_nemo -> allclose;
test_save_load_nemo -> all;
test_save_load_nemo -> Path;
test_save_load_from_file -> from_file;
test_save_load_from_file -> save_to;
test_save_load_from_file -> allclose;
test_save_load_from_file -> all;
test_save_load_from_file -> Path;
test_single_channel_input -> parametrize;
test_single_channel_input -> rand;
test_single_channel_input -> select_channels;
test_single_channel_input -> max;
test_single_channel_input -> raises;
test_single_channel_input -> abs;
test_multi_channel_input -> parametrize;
test_multi_channel_input -> rand;
test_multi_channel_input -> select_channels;
test_multi_channel_input -> max;
test_multi_channel_input -> abs;
test_multi_channel_input -> mean;
test_multi_channel_input -> squeeze;
test_select_more_channels_than_available -> parametrize;
test_select_more_channels_than_available -> rand;
test_select_more_channels_than_available -> raises;
test_select_more_channels_than_available -> select_channels;
test_init_single_channel -> parametrize;
test_init_single_channel -> rand;
test_init_single_channel -> AudioSegment;
test_init_single_channel -> select_channels;
test_init_single_channel -> max;
test_init_single_channel -> pad;
test_init_single_channel -> all;
test_init_single_channel -> subsegment;
test_init_single_channel -> int;
test_init_single_channel -> isinstance;
test_init_single_channel -> raises;
test_init_single_channel -> astype;
test_init_single_channel -> abs;
test_init_single_channel -> round;
test_from_file -> parametrize;
test_from_file -> TemporaryDirectory;
test_from_file -> join;
test_from_file -> write;
test_from_file -> from_file;
test_from_file -> select_channels;
test_from_file -> max;
test_from_file -> rand;
test_from_file -> astype;
test_from_file -> abs;
test_noise_perturb_channels -> parametrize;
test_noise_perturb_channels -> TemporaryDirectory;
test_noise_perturb_channels -> join;
test_noise_perturb_channels -> write;
test_noise_perturb_channels -> NoisePerturbation;
test_noise_perturb_channels -> from_file;
test_noise_perturb_channels -> rand;
test_noise_perturb_channels -> open;
test_noise_perturb_channels -> abspath;
test_noise_perturb_channels -> perturb_with_input_noise;
test_noise_perturb_channels -> raises;
test_noise_perturb_channels -> perturb_with_foreground_noise;
test_noise_perturb_channels -> dumps;
test_silence_perturb -> TemporaryDirectory;
test_silence_perturb -> join;
test_silence_perturb -> rand;
test_silence_perturb -> write;
test_silence_perturb -> SilencePerturbation;
test_silence_perturb -> from_file;
test_silence_perturb -> len;
test_silence_perturb -> perturb;
test_audio_segment_from_file -> parametrize;
test_audio_segment_from_file -> range;
test_audio_segment_from_file -> join;
test_audio_segment_from_file -> randn;
test_audio_segment_from_file -> write;
test_audio_segment_from_file -> squeeze;
test_audio_segment_from_file -> from_file;
test_audio_segment_from_file -> allclose;
test_audio_segment_from_file -> int;
test_audio_segment_from_file -> len;
test_audio_segment_from_file -> isinstance;
test_audio_segment_from_file -> rand;
test_audio_segment_from_file -> mean;
test_audio_segment_from_file -> ValueError;
test_audio_segment_multichannel_with_list -> parametrize;
test_audio_segment_multichannel_with_list -> rand;
test_audio_segment_multichannel_with_list -> range;
test_audio_segment_multichannel_with_list -> join;
test_audio_segment_multichannel_with_list -> write;
test_audio_segment_multichannel_with_list -> append;
test_audio_segment_multichannel_with_list -> from_file;
test_audio_segment_multichannel_with_list -> allclose;
test_audio_segment_multichannel_with_list -> raises;
test_audio_segment_trim_match -> parametrize;
test_audio_segment_trim_match -> namedtuple;
test_audio_segment_trim_match -> append;
test_audio_segment_trim_match -> range;
test_audio_segment_trim_match -> TrimSetup;
test_audio_segment_trim_match -> join;
test_audio_segment_trim_match -> randn;
test_audio_segment_trim_match -> write;
test_audio_segment_trim_match -> max;
test_audio_segment_trim_match -> from_file;
test_audio_segment_trim_match -> rand;
test_audio_segment_trim_match -> hanning;
denoise_mlm_ssl_model -> fixture;
denoise_mlm_ssl_model -> DictConfig;
denoise_mlm_ssl_model -> EncDecDenoiseMaskedTokenPredModel;
test_contr_nonquant -> to_config_dict;
test_contr_nonquant -> dict;
test_contr_nonquant -> DictConfig;
test_contr_nonquant -> SpeechEncDecSelfSupervisedModel;
test_contr_nonquant -> randn;
test_contr_nonquant -> randint;
test_contr_nonquant -> no_grad;
test_contr_nonquant -> forward;
test_contr_nonquant -> decoder_loss_step;
test_contr_nonquant -> len;
test_contr_mlm -> randn;
test_contr_mlm -> randint;
test_contr_mlm -> decoder_loss_step;
test_contr_mlm -> no_grad;
test_contr_mlm -> forward;
test_contr_mlm -> len;
test_contr_mlm_multi -> to_config_dict;
test_contr_mlm_multi -> dict;
test_contr_mlm_multi -> DictConfig;
test_contr_mlm_multi -> SpeechEncDecSelfSupervisedModel;
test_contr_mlm_multi -> randn;
test_contr_mlm_multi -> randint;
test_contr_mlm_multi -> no_grad;
test_contr_mlm_multi -> forward;
test_contr_mlm_multi -> decoder_loss_step;
test_contr_mlm_multi -> len;
test_forward_masked -> randn;
test_forward_masked -> randint;
test_forward_masked -> loss;
test_forward_masked -> ones_like;
test_forward_masked -> no_grad;
test_forward_masked -> size;
test_forward_masked -> sum;
test_forward_masked -> isnan;
test_forward_masked -> disable_checks;
test_forward_masked -> forward;
set_multiprocessing_method -> fixture;
set_multiprocessing_method -> get_start_method;
set_multiprocessing_method -> set_start_method;
speakers_path -> fixture;
speakers_path -> mktemp;
speakers_path -> open;
speakers_path -> print;
textonly_manifest_path -> fixture;
textonly_manifest_path -> mktemp;
textonly_manifest_path -> open;
textonly_manifest_path -> print;
textonly_manifest_path -> dumps;
textonly_manifest_path -> dict;
textonly_unnormalized_manifest_path -> fixture;
textonly_unnormalized_manifest_path -> mktemp;
textonly_unnormalized_manifest_path -> open;
textonly_unnormalized_manifest_path -> print;
textonly_unnormalized_manifest_path -> dumps;
textonly_unnormalized_manifest_path -> dict;
tts_normalizer -> fixture;
tts_normalizer -> Normalizer;
asr_tokenizer -> fixture;
asr_tokenizer -> join;
asr_tokenizer -> AutoTokenizer;
tts_tokenizer -> fixture;
tts_tokenizer -> create;
tts_tokenizer -> instantiate;
tts_tokenizer -> str;
tts_tokenizer -> field;
tts_tokenizer -> to_yaml;
tts_tokenizer -> TextTokenizerCfg;
tts_tokenizer -> G2PConfig;
test_text_to_text_dataset -> parametrize;
test_text_to_text_dataset -> TextToTextDataset;
test_text_to_text_dataset -> isinstance;
test_text_to_text_dataset -> len;
test_text_to_text_dataset -> dict;
test_text_to_text_dataset_unnormalized -> TextToTextDataset;
test_text_to_text_dataset_unnormalized -> len;
test_text_to_text_dataset_unnormalized -> dict;
test_text_to_text_iterable_dataset -> parametrize;
test_text_to_text_iterable_dataset -> TextToTextIterableDataset;
test_text_to_text_iterable_dataset -> next;
test_text_to_text_iterable_dataset -> isinstance;
test_text_to_text_iterable_dataset -> len;
test_text_to_text_iterable_dataset -> iter;
test_text_to_text_iterable_dataset -> dict;
conformer_rnnt_bpe_model -> fixture;
conformer_rnnt_bpe_model -> from_pretrained;
conformer_rnnt_bpe_model -> set_trainer;
conformer_rnnt_bpe_model -> eval;
conformer_rnnt_bpe_model -> Trainer;
audio_and_texts -> fixture;
audio_and_texts -> Path;
audio_and_texts -> open;
audio_and_texts -> loads;
audio_and_texts -> append;
audio_and_texts -> replace;
audio_and_texts -> str;
audio_and_texts -> absolute;
test_run_confidence_benchmark -> parametrize;
test_run_confidence_benchmark -> isinstance;
test_run_confidence_benchmark -> change_decoding_strategy;
test_run_confidence_benchmark -> ConfidenceConfig;
test_run_confidence_benchmark -> TemporaryDirectory;
test_run_confidence_benchmark -> allclose;
test_run_confidence_benchmark -> RNNTDecodingConfig;
test_run_confidence_benchmark -> CTCDecodingConfig;
test_run_confidence_benchmark -> array;
test_run_confidence_benchmark -> run_confidence_benchmark;
test_deprecated_config_args -> parametrize;
test_deprecated_config_args -> isinstance;
test_deprecated_config_args -> create;
test_deprecated_config_args -> ConfidenceConfig;
test_deprecated_config_args -> change_decoding_strategy;
test_deprecated_config_args -> RNNTDecodingConfig;
test_deprecated_config_args -> CTCDecodingConfig;
test_deprecated_config_args -> GreedyBatchedRNNTInferConfig;
test_deprecated_config_args -> GreedyCTCInferConfig;
test_metric_main -> parametrize;
test_metric_main -> keys;
test_metric_main -> round;
test_metric_main -> metric;
test_metric_all_correct -> parametrize;
test_metric_all_correct -> keys;
test_metric_all_correct -> round;
test_metric_all_correct -> metric;
test_metric_all_incorrect -> parametrize;
test_metric_all_incorrect -> keys;
test_metric_all_incorrect -> round;
test_metric_all_incorrect -> metric;
test_metric_auc_yc_aux -> auc_yc;
test_metric_auc_yc_aux -> allclose;
test_metric_auc_yc_aux -> round;
test_metric_auc_yc_aux -> array;
test_metric_auc_yc_aux -> range;
test_save_confidence_hist -> TemporaryDirectory;
test_save_confidence_hist -> save_confidence_hist;
test_save_simple_confidence_curve -> parametrize;
test_save_simple_confidence_curve -> TemporaryDirectory;
test_save_simple_confidence_curve -> plot_func;
test_save_custom_confidence_curve -> TemporaryDirectory;
test_save_custom_confidence_curve -> arange;
test_save_custom_confidence_curve -> save_custom_confidence_curve;
get_measure_parametrize_ranges -> get_confidence_measure_bank;
get_aggregation_parametrize_ranges -> get_confidence_aggregation_bank;
test_measure_bank -> isinstance;
test_measure_bank -> len;
test_confidence_measures_one -> parametrize;
test_confidence_measures_one -> allclose;
test_confidence_measures_one -> keys;
test_confidence_measures_one -> measure;
test_confidence_measures_one -> tensor;
test_confidence_measures_zero -> parametrize;
test_confidence_measures_zero -> allclose;
test_confidence_measures_zero -> keys;
test_confidence_measures_zero -> measure;
test_confidence_measures_zero -> tensor;
test_confidence_measures_partial_order -> parametrize;
test_confidence_measures_partial_order -> round;
test_confidence_measures_partial_order -> keys;
test_confidence_measures_partial_order -> float;
test_confidence_measures_partial_order -> measure;
test_aggregation_bank -> isinstance;
test_aggregation_bank -> len;
test_confidence_agregation_simple -> parametrize;
test_confidence_agregation_simple -> keys;
test_confidence_agregation_simple -> skip;
test_confidence_agregation_simple -> aggregation;
an4_val_manifest_corrected -> fixture;
an4_val_manifest_corrected -> read_manifest;
an4_val_manifest_corrected -> write_manifest;
an4_val_manifest_corrected -> Path;
an4_val_manifest_corrected -> mktemp;
an4_val_manifest_corrected -> replace;
an4_val_manifest_corrected -> str;
an4_val_manifest_corrected -> resolve;
an4_train_manifest_corrected -> fixture;
an4_train_manifest_corrected -> read_manifest;
an4_train_manifest_corrected -> write_manifest;
an4_train_manifest_corrected -> Path;
an4_train_manifest_corrected -> mktemp;
an4_train_manifest_corrected -> replace;
an4_train_manifest_corrected -> str;
an4_train_manifest_corrected -> resolve;
assert_nested_lists_approx -> isinstance;
assert_nested_lists_approx -> zip;
assert_nested_lists_approx -> len;
assert_nested_lists_approx -> assert_nested_lists_approx;
assert_nested_lists_approx -> approx;
assert_hyps_sequence_equal -> isinstance;
assert_hyps_sequence_equal -> assert_nested_lists_approx;
assert_hyps_sequence_equal -> tolist;
assert_hyps_sequence_equal -> cpu;
assert_hyps_timestamps_equal -> isinstance;
assert_hyps_timestamps_equal -> assert_nested_lists_approx;
assert_hyps_timestamps_equal -> tolist;
assert_hyps_timestamps_equal -> cpu;
avoid_sync_operations -> set_sync_debug_mode;
test_rnnt_instantiate -> parametrize;
test_rnnt_instantiate -> BatchedBeamHyps;
test_rnnt_instantiate_incorrect_batch_size -> parametrize;
test_rnnt_instantiate_incorrect_batch_size -> raises;
test_rnnt_instantiate_incorrect_batch_size -> BatchedBeamHyps;
test_rnnt_instantiate_incorrect_beam_size -> parametrize;
test_rnnt_instantiate_incorrect_beam_size -> raises;
test_rnnt_instantiate_incorrect_beam_size -> BatchedBeamHyps;
test_rnnt_instantiate_incorrect_init_length -> parametrize;
test_rnnt_instantiate_incorrect_init_length -> raises;
test_rnnt_instantiate_incorrect_init_length -> BatchedBeamHyps;
test_rnnt_add_results -> parametrize;
test_rnnt_add_results -> BatchedBeamHyps;
test_rnnt_add_results -> add_results_;
test_rnnt_add_results -> assert_nested_lists_approx;
test_rnnt_add_results -> tolist;
test_rnnt_add_results -> tensor;
test_rnnt_add_multiple_results -> parametrize;
test_rnnt_add_multiple_results -> BatchedBeamHyps;
test_rnnt_add_multiple_results -> add_results_;
test_rnnt_add_multiple_results -> assert_nested_lists_approx;
test_rnnt_add_multiple_results -> tolist;
test_rnnt_add_multiple_results -> tensor;
test_rnnt_add_with_invalid_results -> parametrize;
test_rnnt_add_with_invalid_results -> BatchedBeamHyps;
test_rnnt_add_with_invalid_results -> add_results_;
test_rnnt_add_with_invalid_results -> assert_nested_lists_approx;
test_rnnt_add_with_invalid_results -> tolist;
test_rnnt_add_with_invalid_results -> tensor;
test_tdt_instantiate -> parametrize;
test_tdt_instantiate -> BatchedBeamHyps;
test_tdt_instantiate_incorrect_batch_size -> parametrize;
test_tdt_instantiate_incorrect_batch_size -> raises;
test_tdt_instantiate_incorrect_batch_size -> BatchedBeamHyps;
test_tdt_instantiate_incorrect_beam_size -> parametrize;
test_tdt_instantiate_incorrect_beam_size -> raises;
test_tdt_instantiate_incorrect_beam_size -> BatchedBeamHyps;
test_tdt_instantiate_incorrect_init_length -> parametrize;
test_tdt_instantiate_incorrect_init_length -> raises;
test_tdt_instantiate_incorrect_init_length -> BatchedBeamHyps;
test_tdt_add_results -> parametrize;
test_tdt_add_results -> BatchedBeamHyps;
test_tdt_add_results -> add_results_;
test_tdt_add_results -> assert_nested_lists_approx;
test_tdt_add_results -> tolist;
test_tdt_add_results -> tensor;
test_tdt_add_multiple_results -> parametrize;
test_tdt_add_multiple_results -> BatchedBeamHyps;
test_tdt_add_multiple_results -> add_results_;
test_tdt_add_multiple_results -> assert_nested_lists_approx;
test_tdt_add_multiple_results -> tolist;
test_tdt_add_multiple_results -> tensor;
test_tdt_add_with_invalid_results -> parametrize;
test_tdt_add_with_invalid_results -> BatchedBeamHyps;
test_tdt_add_with_invalid_results -> add_results_;
test_tdt_add_with_invalid_results -> assert_nested_lists_approx;
test_tdt_add_with_invalid_results -> tolist;
test_tdt_add_with_invalid_results -> tensor;
test_rnnt_flatten_sort -> parametrize;
test_rnnt_flatten_sort -> BatchedBeamHyps;
test_rnnt_flatten_sort -> add_results_;
test_rnnt_flatten_sort -> flatten_sort_;
test_rnnt_flatten_sort -> assert_nested_lists_approx;
test_rnnt_flatten_sort -> tolist;
test_rnnt_flatten_sort -> tensor;
test_rnnt_flatten_sort_norm -> parametrize;
test_rnnt_flatten_sort_norm -> BatchedBeamHyps;
test_rnnt_flatten_sort_norm -> add_results_;
test_rnnt_flatten_sort_norm -> flatten_sort_;
test_rnnt_flatten_sort_norm -> assert_nested_lists_approx;
test_rnnt_flatten_sort_norm -> tolist;
test_rnnt_flatten_sort_norm -> tensor;
test_rnnt_to_hyps_list -> parametrize;
test_rnnt_to_hyps_list -> BatchedBeamHyps;
test_rnnt_to_hyps_list -> add_results_;
test_rnnt_to_hyps_list -> to_hyps_list;
test_rnnt_to_hyps_list -> assert_hyps_sequence_equal;
test_rnnt_to_hyps_list -> assert_hyps_timestamps_equal;
test_rnnt_to_hyps_list -> type;
test_rnnt_to_hyps_list -> len;
test_rnnt_to_hyps_list -> approx;
test_rnnt_to_hyps_list -> tensor;
test_rnnt_to_nbest_hyps_list -> parametrize;
test_rnnt_to_nbest_hyps_list -> BatchedBeamHyps;
test_rnnt_to_nbest_hyps_list -> add_results_;
test_rnnt_to_nbest_hyps_list -> to_nbest_hyps_list;
test_rnnt_to_nbest_hyps_list -> assert_hyps_sequence_equal;
test_rnnt_to_nbest_hyps_list -> assert_hyps_timestamps_equal;
test_rnnt_to_nbest_hyps_list -> type;
test_rnnt_to_nbest_hyps_list -> len;
test_rnnt_to_nbest_hyps_list -> approx;
test_rnnt_to_nbest_hyps_list -> tensor;
test_tdt_flatten_sort -> parametrize;
test_tdt_flatten_sort -> BatchedBeamHyps;
test_tdt_flatten_sort -> add_results_;
test_tdt_flatten_sort -> flatten_sort_;
test_tdt_flatten_sort -> assert_nested_lists_approx;
test_tdt_flatten_sort -> tolist;
test_tdt_flatten_sort -> tensor;
test_tdt_flatten_sort_norm -> parametrize;
test_tdt_flatten_sort_norm -> BatchedBeamHyps;
test_tdt_flatten_sort_norm -> add_results_;
test_tdt_flatten_sort_norm -> flatten_sort_;
test_tdt_flatten_sort_norm -> assert_nested_lists_approx;
test_tdt_flatten_sort_norm -> tolist;
test_tdt_flatten_sort_norm -> tensor;
test_tdt_to_hyps_list -> parametrize;
test_tdt_to_hyps_list -> BatchedBeamHyps;
test_tdt_to_hyps_list -> add_results_;
test_tdt_to_hyps_list -> to_hyps_list;
test_tdt_to_hyps_list -> assert_hyps_sequence_equal;
test_tdt_to_hyps_list -> assert_hyps_timestamps_equal;
test_tdt_to_hyps_list -> type;
test_tdt_to_hyps_list -> len;
test_tdt_to_hyps_list -> approx;
test_tdt_to_hyps_list -> tensor;
test_tdt_to_nbest_hyps_list -> parametrize;
test_tdt_to_nbest_hyps_list -> BatchedBeamHyps;
test_tdt_to_nbest_hyps_list -> add_results_;
test_tdt_to_nbest_hyps_list -> to_nbest_hyps_list;
test_tdt_to_nbest_hyps_list -> assert_hyps_sequence_equal;
test_tdt_to_nbest_hyps_list -> assert_hyps_timestamps_equal;
test_tdt_to_nbest_hyps_list -> type;
test_tdt_to_nbest_hyps_list -> len;
test_tdt_to_nbest_hyps_list -> approx;
test_tdt_to_nbest_hyps_list -> tensor;
test_instantiate -> parametrize;
test_instantiate -> BatchedHyps;
test_instantiate -> is_tensor;
test_instantiate -> BatchedAlignments;
test_instantiate_incorrect_batch_size -> parametrize;
test_instantiate_incorrect_batch_size -> raises;
test_instantiate_incorrect_batch_size -> BatchedHyps;
test_instantiate_incorrect_batch_size -> BatchedAlignments;
test_instantiate_incorrect_init_length -> parametrize;
test_instantiate_incorrect_init_length -> raises;
test_instantiate_incorrect_init_length -> BatchedHyps;
test_instantiate_incorrect_init_length -> BatchedAlignments;
test_add_results -> parametrize;
test_add_results -> BatchedHyps;
test_add_results -> add_results_;
test_add_results -> tolist;
test_add_results -> approx;
test_add_results -> tensor;
test_add_results -> rand;
test_add_results -> BatchedAlignments;
test_add_results -> allclose;
test_add_results -> arange;
test_add_results -> argmax;
test_add_multiple_results -> parametrize;
test_add_multiple_results -> BatchedHyps;
test_add_multiple_results -> add_results_;
test_add_multiple_results -> tolist;
test_add_multiple_results -> approx;
test_add_multiple_results -> tensor;
test_add_multiple_results -> BatchedAlignments;
test_add_multiple_results -> rand;
test_add_multiple_results -> range;
test_add_multiple_results -> all;
test_add_multiple_results -> argmax;
test_add_multiple_results -> sum;
test_add_multiple_results -> arange;
test_add_results_masked -> parametrize;
test_add_results_masked -> BatchedHyps;
test_add_results_masked -> tensor;
test_add_results_masked -> add_results_masked_;
test_add_results_masked -> tolist;
test_add_results_masked -> approx;
test_add_results_masked -> rand;
test_add_results_masked -> BatchedAlignments;
test_add_results_masked -> allclose;
test_add_results_masked -> argmax;
test_add_results_masked_no_checks -> parametrize;
test_add_results_masked_no_checks -> BatchedHyps;
test_add_results_masked_no_checks -> tensor;
test_add_results_masked_no_checks -> avoid_sync_operations;
test_add_results_masked_no_checks -> add_results_masked_no_checks_;
test_add_results_masked_no_checks -> tolist;
test_add_results_masked_no_checks -> approx;
test_add_results_masked_no_checks -> rand;
test_add_results_masked_no_checks -> BatchedAlignments;
test_add_results_masked_no_checks -> argmax;
test_add_results_masked_no_checks -> allclose;
test_add_multiple_results_masked -> parametrize;
test_add_multiple_results_masked -> BatchedHyps;
test_add_multiple_results_masked -> add_results_masked_;
test_add_multiple_results_masked -> tolist;
test_add_multiple_results_masked -> approx;
test_add_multiple_results_masked -> tensor;
test_add_multiple_results_masked -> BatchedAlignments;
test_add_multiple_results_masked -> rand;
test_add_multiple_results_masked -> range;
test_add_multiple_results_masked -> all;
test_add_multiple_results_masked -> argmax;
test_add_multiple_results_masked -> sum;
test_torch_jit_compatibility_add_results -> parametrize;
test_torch_jit_compatibility_add_results -> tensor;
test_torch_jit_compatibility_add_results -> hyps_add_wrapper;
test_torch_jit_compatibility_add_results -> allclose;
test_torch_jit_compatibility_add_results -> BatchedHyps;
test_torch_jit_compatibility_add_results -> add_results_;
hyps_add_wrapper -> BatchedHyps;
hyps_add_wrapper -> add_results_;
hyps_add_wrapper -> add_results_masked_;
test_torch_jit_compatibility_add_results_masked -> parametrize;
test_torch_jit_compatibility_add_results_masked -> tensor;
test_torch_jit_compatibility_add_results_masked -> hyps_add_wrapper;
test_torch_jit_compatibility_add_results_masked -> allclose;
test_torch_jit_compatibility_add_results_masked -> BatchedHyps;
test_torch_jit_compatibility_add_results_masked -> add_results_masked_;
test_torch_jit_compatibility -> parametrize;
test_torch_jit_compatibility -> tensor;
test_torch_jit_compatibility -> alignments_add_wrapper;
test_torch_jit_compatibility -> allclose;
test_torch_jit_compatibility -> BatchedAlignments;
test_torch_jit_compatibility -> add_results_;
alignments_add_wrapper -> BatchedAlignments;
alignments_add_wrapper -> add_results_;
test_convert_to_hypotheses -> parametrize;
test_convert_to_hypotheses -> BatchedHyps;
test_convert_to_hypotheses -> add_results_;
test_convert_to_hypotheses -> batched_hyps_to_hypotheses;
test_convert_to_hypotheses -> all;
test_convert_to_hypotheses -> approx;
test_convert_to_hypotheses -> tensor;
test_convert_to_hypotheses_with_alignments -> parametrize;
test_convert_to_hypotheses_with_alignments -> BatchedHyps;
test_convert_to_hypotheses_with_alignments -> BatchedAlignments;
test_convert_to_hypotheses_with_alignments -> rand;
test_convert_to_hypotheses_with_alignments -> add_results_;
test_convert_to_hypotheses_with_alignments -> batched_hyps_to_hypotheses;
test_convert_to_hypotheses_with_alignments -> all;
test_convert_to_hypotheses_with_alignments -> range;
test_convert_to_hypotheses_with_alignments -> approx;
test_convert_to_hypotheses_with_alignments -> enumerate;
test_convert_to_hypotheses_with_alignments -> tensor;
test_convert_to_hypotheses_with_alignments -> arange;
test_convert_to_hypotheses_with_alignments -> allclose;
test_convert_to_hypotheses_with_alignments -> cpu;
test_audio_filenames -> fixture;
test_audio_filenames -> tuple;
test_audio_filenames -> glob;
test_audio_filenames -> join;
rnnt_model -> fixture;
rnnt_model -> from_pretrained;
rnnt_model -> eval;
rnnt_model -> DictConfig;
rnnt_model -> EncDecRNNTModel;
rnnt_model -> dict;
rnnt_model -> ListConfig;
tdt_model -> fixture;
tdt_model -> from_pretrained;
tdt_model -> eval;
get_rnnt_encoder_output -> fixture;
get_rnnt_encoder_output -> get_model_encoder_output;
get_model_encoder_output -> device;
get_model_encoder_output -> no_grad;
get_model_encoder_output -> eval;
get_model_encoder_output -> tqdm;
get_model_encoder_output -> to;
get_model_encoder_output -> model;
get_model_encoder_output -> load_audio;
get_model_encoder_output -> append;
get_model_encoder_output -> tensor;
get_model_encoder_output -> pad_sequence;
get_model_encoder_output -> lru_cache;
get_model_encoder_output -> join;
get_model_encoder_output -> from_pretrained;
get_model_encoder_output -> load;
get_model_encoder_output -> unsqueeze;
get_model_encoder_output -> len;
get_tdt_encoder_output -> fixture;
get_tdt_encoder_output -> get_model_encoder_output;
kenlm_model_path -> fixture;
kenlm_model_path -> exists;
kenlm_model_path -> save_to;
kenlm_model_path -> Path;
kenlm_model_path -> mktemp;
kenlm_model_path -> from_file;
print_unit_test_info -> print;
check_res_best_hyps -> all;
check_res_best_hyps -> type;
check_res_best_hyps -> len;
check_res_best_hyps -> hasattr;
check_res_best_hyps -> range;
print_res_best_hyps -> enumerate;
print_res_best_hyps -> print;
check_res_nbest_hyps -> range;
check_res_nbest_hyps -> type;
check_res_nbest_hyps -> len;
check_res_nbest_hyps -> all;
check_res_nbest_hyps -> hasattr;
print_res_nbest_hyps -> enumerate;
print_res_nbest_hyps -> print;
decode_text_from_hypotheses -> decode_hypothesis;
decode_text_from_nbest_hypotheses -> decode_hypothesis;
decode_text_from_nbest_hypotheses -> append;
test_rnnt_beam_decoding_return_best_hypothesis -> skipif;
test_rnnt_beam_decoding_return_best_hypothesis -> parametrize;
test_rnnt_beam_decoding_return_best_hypothesis -> min;
test_rnnt_beam_decoding_return_best_hypothesis -> to;
test_rnnt_beam_decoding_return_best_hypothesis -> BeamBatchedRNNTInfer;
test_rnnt_beam_decoding_return_best_hypothesis -> print_unit_test_info;
test_rnnt_beam_decoding_return_best_hypothesis -> len;
test_rnnt_beam_decoding_return_best_hypothesis -> no_grad;
test_rnnt_beam_decoding_return_best_hypothesis -> check_res_best_hyps;
test_rnnt_beam_decoding_return_best_hypothesis -> decode_text_from_hypotheses;
test_rnnt_beam_decoding_return_best_hypothesis -> print_res_best_hyps;
test_rnnt_beam_decoding_return_best_hypothesis -> get;
test_rnnt_beam_decoding_return_best_hypothesis -> decoding;
test_rnnt_beam_decoding_return_nbest -> skipif;
test_rnnt_beam_decoding_return_nbest -> parametrize;
test_rnnt_beam_decoding_return_nbest -> device;
test_rnnt_beam_decoding_return_nbest -> min;
test_rnnt_beam_decoding_return_nbest -> to;
test_rnnt_beam_decoding_return_nbest -> BeamBatchedRNNTInfer;
test_rnnt_beam_decoding_return_nbest -> print_unit_test_info;
test_rnnt_beam_decoding_return_nbest -> len;
test_rnnt_beam_decoding_return_nbest -> no_grad;
test_rnnt_beam_decoding_return_nbest -> check_res_nbest_hyps;
test_rnnt_beam_decoding_return_nbest -> decode_text_from_nbest_hypotheses;
test_rnnt_beam_decoding_return_nbest -> print_res_nbest_hyps;
test_rnnt_beam_decoding_return_nbest -> is_available;
test_rnnt_beam_decoding_return_nbest -> get;
test_rnnt_beam_decoding_return_nbest -> decoding;
test_rnnt_beam_decoding_kenlm -> skipif;
test_rnnt_beam_decoding_kenlm -> parametrize;
test_rnnt_beam_decoding_kenlm -> device;
test_rnnt_beam_decoding_kenlm -> min;
test_rnnt_beam_decoding_kenlm -> to;
test_rnnt_beam_decoding_kenlm -> BeamBatchedRNNTInfer;
test_rnnt_beam_decoding_kenlm -> print_unit_test_info;
test_rnnt_beam_decoding_kenlm -> len;
test_rnnt_beam_decoding_kenlm -> no_grad;
test_rnnt_beam_decoding_kenlm -> check_res_best_hyps;
test_rnnt_beam_decoding_kenlm -> decode_text_from_hypotheses;
test_rnnt_beam_decoding_kenlm -> print_res_best_hyps;
test_rnnt_beam_decoding_kenlm -> is_available;
test_rnnt_beam_decoding_kenlm -> get;
test_rnnt_beam_decoding_kenlm -> decoding;
test_tdt_beam_decoding_return_best_hypothesis -> skipif;
test_tdt_beam_decoding_return_best_hypothesis -> parametrize;
test_tdt_beam_decoding_return_best_hypothesis -> min;
test_tdt_beam_decoding_return_best_hypothesis -> to;
test_tdt_beam_decoding_return_best_hypothesis -> to_config_dict;
test_tdt_beam_decoding_return_best_hypothesis -> list;
test_tdt_beam_decoding_return_best_hypothesis -> BeamBatchedTDTInfer;
test_tdt_beam_decoding_return_best_hypothesis -> print_unit_test_info;
test_tdt_beam_decoding_return_best_hypothesis -> len;
test_tdt_beam_decoding_return_best_hypothesis -> no_grad;
test_tdt_beam_decoding_return_best_hypothesis -> check_res_best_hyps;
test_tdt_beam_decoding_return_best_hypothesis -> decode_text_from_hypotheses;
test_tdt_beam_decoding_return_best_hypothesis -> print_res_best_hyps;
test_tdt_beam_decoding_return_best_hypothesis -> get;
test_tdt_beam_decoding_return_best_hypothesis -> decoding;
test_tdt_beam_decoding_return_nbest -> skipif;
test_tdt_beam_decoding_return_nbest -> parametrize;
test_tdt_beam_decoding_return_nbest -> device;
test_tdt_beam_decoding_return_nbest -> min;
test_tdt_beam_decoding_return_nbest -> to;
test_tdt_beam_decoding_return_nbest -> to_config_dict;
test_tdt_beam_decoding_return_nbest -> list;
test_tdt_beam_decoding_return_nbest -> BeamBatchedTDTInfer;
test_tdt_beam_decoding_return_nbest -> print_unit_test_info;
test_tdt_beam_decoding_return_nbest -> len;
test_tdt_beam_decoding_return_nbest -> no_grad;
test_tdt_beam_decoding_return_nbest -> check_res_nbest_hyps;
test_tdt_beam_decoding_return_nbest -> decode_text_from_nbest_hypotheses;
test_tdt_beam_decoding_return_nbest -> print_res_nbest_hyps;
test_tdt_beam_decoding_return_nbest -> is_available;
test_tdt_beam_decoding_return_nbest -> get;
test_tdt_beam_decoding_return_nbest -> decoding;
test_tdt_beam_decoding_kenlm -> skipif;
test_tdt_beam_decoding_kenlm -> parametrize;
test_tdt_beam_decoding_kenlm -> device;
test_tdt_beam_decoding_kenlm -> min;
test_tdt_beam_decoding_kenlm -> to;
test_tdt_beam_decoding_kenlm -> to_config_dict;
test_tdt_beam_decoding_kenlm -> list;
test_tdt_beam_decoding_kenlm -> BeamBatchedTDTInfer;
test_tdt_beam_decoding_kenlm -> print_unit_test_info;
test_tdt_beam_decoding_kenlm -> len;
test_tdt_beam_decoding_kenlm -> no_grad;
test_tdt_beam_decoding_kenlm -> check_res_best_hyps;
test_tdt_beam_decoding_kenlm -> decode_text_from_hypotheses;
test_tdt_beam_decoding_kenlm -> print_res_best_hyps;
test_tdt_beam_decoding_kenlm -> is_available;
test_tdt_beam_decoding_kenlm -> get;
test_tdt_beam_decoding_kenlm -> decoding;
test_stated_stateless -> skipif;
test_stated_stateless -> parametrize;
test_stated_stateless -> device;
test_stated_stateless -> deepcopy;
test_stated_stateless -> change_decoding_strategy;
test_stated_stateless -> transcribe;
test_stated_stateless -> force_cuda_graphs_mode;
test_stated_stateless -> range;
test_stated_stateless -> skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
test_stated_stateless -> to;
test_stated_stateless -> open_dict;
test_stated_stateless -> min;
test_stated_stateless -> wer;
test_stated_stateless -> zip;
test_stated_stateless -> is_available;
test_stated_stateless -> len;
test_stated_stateless -> approx;
test_stated_stateless -> print;
test_stated_stateless_bf16 -> skipif;
test_stated_stateless_bf16 -> parametrize;
test_stated_stateless_bf16 -> device;
test_stated_stateless_bf16 -> deepcopy;
test_stated_stateless_bf16 -> change_decoding_strategy;
test_stated_stateless_bf16 -> to;
test_stated_stateless_bf16 -> open_dict;
test_stated_stateless_bf16 -> autocast;
test_stated_stateless_bf16 -> transcribe;
test_stated_stateless_bf16 -> force_cuda_graphs_mode;
test_stated_stateless_bf16 -> skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
test_stated_stateless_bf16 -> is_available;
test_stated_stateless_bf16 -> is_bf16_supported;
tmp_tokenizer -> fixture;
tmp_tokenizer -> lru_cache;
tmp_tokenizer -> DictConfig;
tmp_tokenizer -> _TmpASRBPE;
tmp_tokenizer -> _setup_tokenizer;
tmp_tokenizer -> join;
check_char_timestamps -> isinstance;
check_char_timestamps -> split;
check_char_timestamps -> list;
check_char_timestamps -> filter;
check_char_timestamps -> len;
check_char_timestamps -> append;
check_char_timestamps -> join;
check_subword_timestamps -> isinstance;
check_subword_timestamps -> list;
check_subword_timestamps -> sum;
check_subword_timestamps -> filter;
check_subword_timestamps -> len;
check_subword_timestamps -> tokens_to_text;
check_subword_timestamps -> count;
test_constructor_subword -> CTCBPEDecodingConfig;
test_constructor_subword -> CTCBPEDecoding;
test_constructor_subword -> RNNTDecodingConfig;
test_constructor_subword -> get_rnnt_decoder;
test_constructor_subword -> get_rnnt_joint;
test_constructor_subword -> RNNTBPEDecoding;
test_constructor_subword -> len;
test_char_decoding_greedy_forward -> CTCDecodingConfig;
test_char_decoding_greedy_forward -> char_vocabulary;
test_char_decoding_greedy_forward -> CTCDecoding;
test_char_decoding_greedy_forward -> randn;
test_char_decoding_greedy_forward -> randint;
test_char_decoding_greedy_forward -> len;
test_char_decoding_greedy_forward -> no_grad;
test_char_decoding_greedy_forward -> ctc_decoder_predictions_tensor;
test_char_decoding_greedy_forward -> isinstance;
test_char_decoding_greedy_forward_hypotheses -> parametrize;
test_char_decoding_greedy_forward_hypotheses -> CTCDecodingConfig;
test_char_decoding_greedy_forward_hypotheses -> char_vocabulary;
test_char_decoding_greedy_forward_hypotheses -> CTCDecoding;
test_char_decoding_greedy_forward_hypotheses -> randn;
test_char_decoding_greedy_forward_hypotheses -> randint;
test_char_decoding_greedy_forward_hypotheses -> len;
test_char_decoding_greedy_forward_hypotheses -> no_grad;
test_char_decoding_greedy_forward_hypotheses -> ctc_decoder_predictions_tensor;
test_char_decoding_greedy_forward_hypotheses -> enumerate;
test_char_decoding_greedy_forward_hypotheses -> isinstance;
test_char_decoding_greedy_forward_hypotheses -> is_tensor;
test_char_decoding_greedy_forward_hypotheses -> check_char_timestamps;
test_subword_decoding_greedy_forward -> CTCBPEDecodingConfig;
test_subword_decoding_greedy_forward -> CTCBPEDecoding;
test_subword_decoding_greedy_forward -> randn;
test_subword_decoding_greedy_forward -> randint;
test_subword_decoding_greedy_forward -> no_grad;
test_subword_decoding_greedy_forward -> ctc_decoder_predictions_tensor;
test_subword_decoding_greedy_forward -> isinstance;
test_subword_decoding_greedy_forward_hypotheses -> parametrize;
test_subword_decoding_greedy_forward_hypotheses -> CTCBPEDecodingConfig;
test_subword_decoding_greedy_forward_hypotheses -> CTCBPEDecoding;
test_subword_decoding_greedy_forward_hypotheses -> randn;
test_subword_decoding_greedy_forward_hypotheses -> randint;
test_subword_decoding_greedy_forward_hypotheses -> no_grad;
test_subword_decoding_greedy_forward_hypotheses -> ctc_decoder_predictions_tensor;
test_subword_decoding_greedy_forward_hypotheses -> enumerate;
test_subword_decoding_greedy_forward_hypotheses -> isinstance;
test_subword_decoding_greedy_forward_hypotheses -> is_tensor;
test_subword_decoding_greedy_forward_hypotheses -> check_subword_timestamps;
test_subword_decoding_greedy_forward_hypotheses -> len;
test_batched_decoding_logprobs -> parametrize;
test_batched_decoding_logprobs -> CTCBPEDecodingConfig;
test_batched_decoding_logprobs -> CTCBPEDecoding;
test_batched_decoding_logprobs -> manual_seed;
test_batched_decoding_logprobs -> randn;
test_batched_decoding_logprobs -> randint;
test_batched_decoding_logprobs -> inference_mode;
test_batched_decoding_logprobs -> ctc_decoder_predictions_tensor;
test_batched_decoding_logprobs -> zip;
test_batched_decoding_logprobs -> device;
test_batched_decoding_logprobs -> param;
test_batched_decoding_logprobs -> ConfidenceConfig;
test_batched_decoding_logprobs -> len;
test_batched_decoding_logprobs -> all;
test_batched_decoding_logprobs -> abs;
test_batched_decoding_logprobs -> skipif;
test_batched_decoding_logprobs -> is_available;
test_batched_decoding_labels -> parametrize;
test_batched_decoding_labels -> CTCBPEDecodingConfig;
test_batched_decoding_labels -> CTCBPEDecoding;
test_batched_decoding_labels -> manual_seed;
test_batched_decoding_labels -> randint;
test_batched_decoding_labels -> inference_mode;
test_batched_decoding_labels -> ctc_decoder_predictions_tensor;
test_batched_decoding_labels -> zip;
test_batched_decoding_labels -> device;
test_batched_decoding_labels -> param;
test_batched_decoding_labels -> len;
test_batched_decoding_labels -> all;
test_batched_decoding_labels -> abs;
test_batched_decoding_labels -> skipif;
test_batched_decoding_labels -> is_available;
stt_en_fastconformer_transducer_xlarge -> fixture;
stt_en_fastconformer_transducer_xlarge -> eval;
stt_en_fastconformer_transducer_xlarge -> from_pretrained;
stt_en_fastconformer_transducer_xxlarge -> fixture;
stt_en_fastconformer_transducer_xxlarge -> eval;
stt_en_fastconformer_transducer_xxlarge -> from_pretrained;
stt_en_fastconformer_transducer_large -> fixture;
stt_en_fastconformer_transducer_large -> eval;
stt_en_fastconformer_transducer_large -> from_pretrained;
stt_en_fastconformer_tdt_large -> fixture;
stt_en_fastconformer_tdt_large -> eval;
stt_en_fastconformer_tdt_large -> from_pretrained;
test_cuda_graph_rnnt_greedy_decoder -> skipif;
test_cuda_graph_rnnt_greedy_decoder -> parametrize;
test_cuda_graph_rnnt_greedy_decoder -> device;
test_cuda_graph_rnnt_greedy_decoder -> to;
test_cuda_graph_rnnt_greedy_decoder -> deepcopy;
test_cuda_graph_rnnt_greedy_decoder -> change_decoding_strategy;
test_cuda_graph_rnnt_greedy_decoder -> glob;
test_cuda_graph_rnnt_greedy_decoder -> wer;
test_cuda_graph_rnnt_greedy_decoder -> all;
test_cuda_graph_rnnt_greedy_decoder -> zip;
test_cuda_graph_rnnt_greedy_decoder -> skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
test_cuda_graph_rnnt_greedy_decoder -> skip;
test_cuda_graph_rnnt_greedy_decoder -> open_dict;
test_cuda_graph_rnnt_greedy_decoder -> autocast;
test_cuda_graph_rnnt_greedy_decoder -> transcribe;
test_cuda_graph_rnnt_greedy_decoder -> equal;
test_cuda_graph_rnnt_greedy_decoder -> is_available;
test_cuda_graph_rnnt_greedy_decoder -> param;
test_cuda_graph_rnnt_greedy_decoder -> is_bf16_supported;
test_cuda_graph_rnnt_greedy_decoder -> getfixturevalue;
test_cuda_graph_rnnt_greedy_decoder -> print;
test_cuda_graph_rnnt_greedy_decoder -> xfail;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> skipif;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> parametrize;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> device;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> to;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> deepcopy;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> change_decoding_strategy;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> glob;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> force_cuda_graphs_mode;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> wer;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> zip;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> skip;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> open_dict;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> autocast;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> transcribe;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> is_available;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> is_bf16_supported;
test_loop_labels_cuda_graph_rnnt_greedy_decoder_forced_mode -> print;
test_loop_labels_cuda_graph_ddp_mixed_precision -> skipif;
test_loop_labels_cuda_graph_ddp_mixed_precision -> parametrize;
test_loop_labels_cuda_graph_ddp_mixed_precision -> TrainerConfig;
test_loop_labels_cuda_graph_ddp_mixed_precision -> Trainer;
test_loop_labels_cuda_graph_ddp_mixed_precision -> setup_multiple_validation_data;
test_loop_labels_cuda_graph_ddp_mixed_precision -> validate;
test_loop_labels_cuda_graph_ddp_mixed_precision -> _teardown;
test_loop_labels_cuda_graph_ddp_mixed_precision -> destroy_process_group;
test_loop_labels_cuda_graph_ddp_mixed_precision -> open_dict;
test_loop_labels_cuda_graph_ddp_mixed_precision -> DictConfig;
test_loop_labels_cuda_graph_ddp_mixed_precision -> str;
test_loop_labels_cuda_graph_ddp_mixed_precision -> is_available;
test_loop_labels_cuda_graph_ddp_mixed_precision -> is_bf16_supported;
test_change_devices -> skipif;
test_change_devices -> parametrize;
test_change_devices -> device;
test_change_devices -> to;
test_change_devices -> deepcopy;
test_change_devices -> change_decoding_strategy;
test_change_devices -> glob;
test_change_devices -> skip_cuda_python_test_if_cuda_graphs_conditional_nodes_not_supported;
test_change_devices -> open_dict;
test_change_devices -> autocast;
test_change_devices -> transcribe;
test_change_devices -> is_available;
test_change_devices -> device_count;
deterministic_rng -> fixture;
deterministic_rng -> get_rng_state;
deterministic_rng -> manual_seed;
deterministic_rng -> set_rng_state;
decoder_nm -> fixture;
decoder_nm -> eval;
decoder_nm -> TransformerDecoderNM;
nnet -> fixture;
nnet -> tuple;
nnet -> TokenClassifier;
nnet -> eval;
inputs -> fixture;
inputs -> tensor;
inputs -> ones;
test_temperature_sampling_decoding -> GreedySequenceGenerator;
test_temperature_sampling_decoding -> gen;
test_temperature_sampling_decoding -> is_tensor;
test_temperature_sampling_decoding -> isinstance;
test_temperature_sampling_decoding -> any;
test_temperature_sampling_decoding -> len;
test_beam_decoding_beam_scores_false -> BeamSearchSequenceGenerator;
test_beam_decoding_beam_scores_false -> gen;
test_beam_decoding_beam_scores_false -> is_tensor;
test_beam_decoding_beam_scores_false -> len;
test_beam_decoding_beam_scores_true -> BeamSearchSequenceGenerator;
test_beam_decoding_beam_scores_true -> gen;
test_beam_decoding_beam_scores_true -> isinstance;
test_beam_decoding_beam_scores_true -> is_tensor;
test_beam_decoding_beam_scores_true -> len;
test_beam_decoding_beam_scores_true_with_lm -> dummy_unigram_lm;
test_beam_decoding_beam_scores_true_with_lm -> save_to;
test_beam_decoding_beam_scores_true_with_lm -> BeamSearchSequenceGeneratorWithNGramLM;
test_beam_decoding_beam_scores_true_with_lm -> gen;
test_beam_decoding_beam_scores_true_with_lm -> isinstance;
test_beam_decoding_beam_scores_true_with_lm -> is_tensor;
test_beam_decoding_beam_scores_true_with_lm -> len;
prompted_inputs -> fixture;
prompted_inputs -> tensor;
prompted_inputs -> ones;
test_transformer_aed_beam_infer_strips_prompt -> TransformerAEDBeamInfer;
test_transformer_aed_beam_infer_strips_prompt -> gen;
test_transformer_aed_beam_infer_strips_prompt -> is_tensor;
test_transformer_aed_beam_infer_strips_prompt -> beam_search;
test_transformer_aed_beam_infer_strips_prompt -> assert_close;
test_transformer_aed_greedy_infer_strips_prompt -> tensor;
test_transformer_aed_greedy_infer_strips_prompt -> TransformerAEDGreedyInfer;
test_transformer_aed_greedy_infer_strips_prompt -> gen;
test_transformer_aed_greedy_infer_strips_prompt -> is_tensor;
test_transformer_aed_greedy_infer_strips_prompt -> greedy_search;
test_transformer_aed_greedy_infer_strips_prompt -> assert_close;
stt_en_conformer_transducer_small_model -> fixture;
stt_en_conformer_transducer_small_model -> from_pretrained;
get_rnnt_alignments -> structured;
get_rnnt_alignments -> str;
get_rnnt_alignments -> to;
get_rnnt_alignments -> change_decoding_strategy;
get_rnnt_alignments -> transcribe;
get_rnnt_alignments -> TranscriptionConfig;
get_rnnt_alignments -> zip;
get_rnnt_alignments -> prepare_audio_data;
get_rnnt_alignments -> enumerate;
get_rnnt_alignments -> len;
get_rnnt_alignments -> item;
test_rnnt_alignments -> parametrize;
test_rnnt_alignments -> get_rnnt_alignments;
test_rnnt_alignments -> zip;
test_rnnt_alignments -> skip;
test_rnnt_alignments -> len;
test_rnnt_alignments -> item;
get_rnnt_decoder -> lru_cache;
get_rnnt_decoder -> manual_seed;
get_rnnt_decoder -> RNNTDecoder;
get_rnnt_decoder -> freeze;
get_rnnt_joint -> lru_cache;
get_rnnt_joint -> manual_seed;
get_rnnt_joint -> RNNTJoint;
get_rnnt_joint -> freeze;
decode_text_from_greedy_hypotheses -> decode_hypothesis;
check_beam_decoding -> pop;
check_beam_decoding -> get_model_encoder_output;
check_beam_decoding -> to_config_dict;
check_beam_decoding -> list;
check_beam_decoding -> BeamTDTInfer;
check_beam_decoding -> no_grad;
check_beam_decoding -> decode_text_from_nbest_hypotheses;
check_beam_decoding -> print;
check_beam_decoding -> enumerate;
check_beam_decoding -> beam;
check_beam_decoding -> len;
check_tdt_greedy_decoding -> get_model_encoder_output;
check_tdt_greedy_decoding -> to_config_dict;
check_tdt_greedy_decoding -> GreedyBatchedTDTInfer;
check_tdt_greedy_decoding -> no_grad;
check_tdt_greedy_decoding -> decode_text_from_greedy_hypotheses;
check_tdt_greedy_decoding -> print;
check_tdt_greedy_decoding -> enumerate;
check_tdt_greedy_decoding -> list;
check_tdt_greedy_decoding -> decoding_algo;
check_tdt_greedy_decoding -> str;
check_tdt_greedy_decoding -> len;
test_greedy_decoding_preserve_alignments -> skipif;
test_greedy_decoding_preserve_alignments -> get_model_encoder_output;
test_greedy_decoding_preserve_alignments -> GreedyRNNTInfer;
test_greedy_decoding_preserve_alignments -> no_grad;
test_greedy_decoding_preserve_alignments -> decode_text_from_greedy_hypotheses;
test_greedy_decoding_preserve_alignments -> print;
test_greedy_decoding_preserve_alignments -> range;
test_greedy_decoding_preserve_alignments -> beam;
test_greedy_decoding_preserve_alignments -> len;
test_greedy_decoding_preserve_alignments -> is_tensor;
test_greedy_decoding_preserve_alignments -> append;
test_greedy_decoding_preserve_alignments -> int;
test_batched_greedy_decoding_preserve_alignments -> skipif;
test_batched_greedy_decoding_preserve_alignments -> parametrize;
test_batched_greedy_decoding_preserve_alignments -> get_model_encoder_output;
test_batched_greedy_decoding_preserve_alignments -> GreedyBatchedRNNTInfer;
test_batched_greedy_decoding_preserve_alignments -> GreedyRNNTInfer;
test_batched_greedy_decoding_preserve_alignments -> no_grad;
test_batched_greedy_decoding_preserve_alignments -> range;
test_batched_greedy_decoding_preserve_alignments -> search_algo;
test_batched_greedy_decoding_preserve_alignments -> decode_text_from_greedy_hypotheses;
test_batched_greedy_decoding_preserve_alignments -> etalon_search_algo;
test_batched_greedy_decoding_preserve_alignments -> len;
test_batched_greedy_decoding_preserve_alignments -> is_tensor;
test_batched_greedy_decoding_preserve_alignments -> allclose;
test_batched_greedy_decoding_preserve_alignments -> append;
test_batched_greedy_decoding_preserve_alignments -> int;
test_rnnt_beam_decoding_preserve_alignments -> skipif;
test_rnnt_beam_decoding_preserve_alignments -> parametrize;
test_rnnt_beam_decoding_preserve_alignments -> pop;
test_rnnt_beam_decoding_preserve_alignments -> get_model_encoder_output;
test_rnnt_beam_decoding_preserve_alignments -> BeamRNNTInfer;
test_rnnt_beam_decoding_preserve_alignments -> tensor;
test_rnnt_beam_decoding_preserve_alignments -> no_grad;
test_rnnt_beam_decoding_preserve_alignments -> decode_text_from_nbest_hypotheses;
test_rnnt_beam_decoding_preserve_alignments -> print;
test_rnnt_beam_decoding_preserve_alignments -> enumerate;
test_rnnt_beam_decoding_preserve_alignments -> beam;
test_rnnt_beam_decoding_preserve_alignments -> range;
test_rnnt_beam_decoding_preserve_alignments -> len;
test_rnnt_beam_decoding_preserve_alignments -> int;
test_rnnt_beam_decoding_preserve_alignments -> abs;
test_rnnt_beam_decoding_preserve_alignments -> is_tensor;
test_rnnt_beam_decoding_preserve_alignments -> append;
test_rnnt_beam_decoding_preserve_alignments -> float;
test_subword_decoding_compute_timestamps -> skipif;
test_subword_decoding_compute_timestamps -> parametrize;
test_subword_decoding_compute_timestamps -> get_model_encoder_output;
test_subword_decoding_compute_timestamps -> DictConfig;
test_subword_decoding_compute_timestamps -> RNNTBPEDecoding;
test_subword_decoding_compute_timestamps -> rnnt_decoder_predictions_tensor;
test_subword_decoding_compute_timestamps -> isinstance;
test_subword_decoding_compute_timestamps -> check_subword_timestamps;
test_char_decoding_compute_timestamps -> skipif;
test_char_decoding_compute_timestamps -> parametrize;
test_char_decoding_compute_timestamps -> get_model_encoder_output;
test_char_decoding_compute_timestamps -> DictConfig;
test_char_decoding_compute_timestamps -> RNNTDecoding;
test_char_decoding_compute_timestamps -> rnnt_decoder_predictions_tensor;
test_char_decoding_compute_timestamps -> isinstance;
test_char_decoding_compute_timestamps -> check_char_timestamps;
test_tdt_greedy_decoding -> skipif;
test_tdt_greedy_decoding -> parametrize;
test_tdt_greedy_decoding -> check_tdt_greedy_decoding;
test_tdt_greedy_decoding -> Path;
test_tdt_beam_decoding -> skipif;
test_tdt_beam_decoding -> parametrize;
test_tdt_beam_decoding -> check_beam_decoding;
test_tdt_beam_decoding_with_kenlm -> skipif;
test_tdt_beam_decoding_with_kenlm -> parametrize;
test_tdt_beam_decoding_with_kenlm -> importorskip;
test_tdt_beam_decoding_with_kenlm -> join;
test_tdt_beam_decoding_with_kenlm -> check_beam_decoding;
init_k2_ctc -> CtcLoss;
init_k2_ctc -> ctc;
init_k2_ctc -> transpose;
skip_test_if_unsupported -> skip;
skip_test_if_unsupported -> ValueError;
test_case_small -> parametrize;
test_case_small -> skip_test_if_unsupported;
test_case_small -> array;
test_case_small -> init_k2_ctc;
test_case_small -> wrap_and_call;
test_case_small -> allclose;
test_case_small -> init_k2_rnnt;
test_case_small -> astype;
test_case_small -> RNNTLossNumba;
test_case_small -> RNNTLoss_Numpy;
test_case_small -> RNNTLossPytorch;
test_case_small -> skip_numba_cuda_test_if_unsupported;
test_case_small_blank_last -> parametrize;
test_case_small_blank_last -> skip_test_if_unsupported;
test_case_small_blank_last -> array;
test_case_small_blank_last -> init_k2_ctc;
test_case_small_blank_last -> wrap_and_call;
test_case_small_blank_last -> allclose;
test_case_small_blank_last -> init_k2_rnnt;
test_case_small_random -> parametrize;
test_case_small_random -> skip_test_if_unsupported;
test_case_small_random -> RandomState;
test_case_small_random -> randn;
test_case_small_random -> init_k2_ctc;
test_case_small_random -> wrap_and_call;
test_case_small_random -> CTCLoss_Pytorch;
test_case_small_random -> allclose;
test_case_small_random -> init_k2_rnnt;
test_case_small_random -> RNNTLoss_Numpy;
test_case_small_random -> astype;
test_case_small_random -> RNNTLossNumba;
test_case_small_random -> RNNTLossPytorch;
test_case_small_random -> skip_numba_cuda_test_if_unsupported;
test_case_big_tensor -> parametrize;
test_case_big_tensor -> skip_test_if_unsupported;
test_case_big_tensor -> array;
test_case_big_tensor -> init_k2_ctc;
test_case_big_tensor -> wrap_and_call;
test_case_big_tensor -> allclose;
test_case_big_tensor -> init_k2_rnnt;
test_case_big_tensor -> astype;
test_case_big_tensor -> RNNTLossNumba;
test_case_big_tensor -> RNNTLoss_Numpy;
test_case_big_tensor -> RNNTLossPytorch;
test_case_big_tensor -> skip_numba_cuda_test_if_unsupported;
test_case_big_tensor -> sum;
test_case_large_random -> parametrize;
test_case_large_random -> skip_test_if_unsupported;
test_case_large_random -> RandomState;
test_case_large_random -> randn;
test_case_large_random -> init_k2_ctc;
test_case_large_random -> wrap_and_call;
test_case_large_random -> CTCLoss_Pytorch;
test_case_large_random -> allclose;
test_case_large_random -> init_k2_rnnt;
test_case_large_random -> RNNTLoss_Numpy;
test_case_large_random -> astype;
test_case_large_random -> RNNTLossNumba;
test_case_large_random -> RNNTLossPytorch;
test_case_large_random -> skip_numba_cuda_test_if_unsupported;
test_temporal_schema -> parametrize;
test_temporal_schema -> GraphRnntLoss;
test_temporal_schema -> get_temporal_schema;
test_temporal_schema -> range;
test_temporal_schema -> append;
test_temporal_schema -> sorted;
test_temporal_schema -> join;
test_temporal_schema -> from_str;
test_temporal_schema -> is_rand_equivalent;
test_temporal_schema -> invert;
test_temporal_schema -> device;
test_temporal_schema -> map;
test_temporal_schema -> GraphWTransducerLoss;
test_unit_schema -> parametrize;
test_unit_schema -> GraphRnntLoss;
test_unit_schema -> get_unit_schema;
test_unit_schema -> enumerate;
test_unit_schema -> append;
test_unit_schema -> sorted;
test_unit_schema -> join;
test_unit_schema -> from_str;
test_unit_schema -> is_rand_equivalent;
test_unit_schema -> invert;
test_unit_schema -> tensor;
test_unit_schema -> len;
test_unit_schema -> map;
test_unit_schema -> device;
test_unit_schema -> GraphWTransducerLoss;
test_grid_schema -> parametrize;
test_grid_schema -> len;
test_grid_schema -> GraphRnntLoss;
test_grid_schema -> get_grid;
test_grid_schema -> range;
test_grid_schema -> append;
test_grid_schema -> sorted;
test_grid_schema -> join;
test_grid_schema -> from_str;
test_grid_schema -> is_rand_equivalent;
test_grid_schema -> invert;
test_grid_schema -> tensor;
test_grid_schema -> map;
test_grid_schema -> device;
test_grid_schema -> GraphWTransducerLoss;
test_small_compose_transducer -> parametrize;
test_small_compose_transducer -> GraphRnntLoss;
test_small_compose_transducer -> wrap_and_call;
test_small_compose_transducer -> allclose;
test_small_compose_transducer -> get_sample_small;
test_small_compose_transducer -> get_sample_small_blank_last;
test_small_compose_transducer -> numpy;
test_small_grid_transducer -> parametrize;
test_small_grid_transducer -> get_sample_small;
test_small_grid_transducer -> GraphRnntLoss;
test_small_grid_transducer -> wrap_and_call;
test_small_grid_transducer -> allclose;
test_small_grid_transducer -> numpy;
test_medium_grid_transducer -> parametrize;
test_medium_grid_transducer -> get_sample_medium;
test_medium_grid_transducer -> GraphRnntLoss;
test_medium_grid_transducer -> wrap_and_call;
test_medium_grid_transducer -> allclose;
test_medium_grid_transducer -> skip;
test_medium_grid_transducer -> numpy;
test_medium_random_var_size -> parametrize;
test_medium_random_var_size -> get_sample_medium_random_var_size;
test_medium_random_var_size -> GraphRnntLoss;
test_medium_random_var_size -> wrap_and_call;
test_medium_random_var_size -> RNNTLoss_Numpy;
test_medium_random_var_size -> allclose;
test_medium_random_var_size -> skip;
test_medium_random_var_size -> detach;
test_medium_random_var_size -> sum;
test_small_random_grid_compose_equivalent -> parametrize;
test_small_random_grid_compose_equivalent -> get_sample_small_random;
test_small_random_grid_compose_equivalent -> GraphRnntLoss;
test_small_random_grid_compose_equivalent -> get_grid;
test_small_random_grid_compose_equivalent -> get_composed_lattice;
test_small_random_grid_compose_equivalent -> is_rand_equivalent;
test_small_random_grid_compose_equivalent -> GraphWTransducerLoss;
test_rnnt_logprobs_random -> parametrize;
test_rnnt_logprobs_random -> device;
test_rnnt_logprobs_random -> manual_seed;
test_rnnt_logprobs_random -> tensor;
test_rnnt_logprobs_random -> rand;
test_rnnt_logprobs_random -> rnnt_logprobs_torch;
test_rnnt_logprobs_random -> detach;
test_rnnt_logprobs_random -> requires_grad_;
test_rnnt_logprobs_random -> rnnt_logprobs_triton;
test_rnnt_logprobs_random -> allclose;
test_rnnt_logprobs_random -> rand_like;
test_rnnt_logprobs_random -> sum;
test_rnnt_logprobs_random -> backward;
test_rnnt_logprobs_random -> to;
test_rnnt_logprobs_random -> clone;
test_rnnt_logprobs_random -> randrange;
test_rnnt_logprobs_random -> range;
test_rnnt_logprobs_random -> is_available;
test_rnnt_logprobs_random -> is_bf16_supported;
init_k2_rnnt -> RnntLoss;
init_k2_rnnt -> rnnt;
init_k2_rnnt -> log_softmax;
init_k2_rnnt -> to;
test_small_grid_transducer_inf_penalty -> parametrize;
test_small_grid_transducer_inf_penalty -> get_sample_small;
test_small_grid_transducer_inf_penalty -> GraphWTransducerLoss;
test_small_grid_transducer_inf_penalty -> wrap_and_call;
test_small_grid_transducer_inf_penalty -> allclose;
test_small_grid_transducer_inf_penalty -> numpy;
audio_files -> with_downloads;
audio_files -> fixture;
audio_files -> join;
audio_files -> read;
dummy_model -> fixture;
dummy_model -> TranscribableDummy;
dummy_model -> DiarizableDummy;
dummy_model -> HFAutoModelForImageTextToText;
dummy_model -> DummyModel;
test_constructor_non_instance -> DummyModel;
test_constructor_non_instance -> isinstance;
test_constructor_non_instance -> hasattr;
test_transcribe -> eval;
test_transcribe -> fill_;
test_transcribe -> transcribe;
test_transcribe -> len;
test_transcribe_generator -> eval;
test_transcribe_generator -> fill_;
test_transcribe_generator -> TranscribeConfig;
test_transcribe_generator -> transcribe_generator;
test_transcribe_generator -> extend;
test_transcribe_generator -> len;
test_transcribe_generator_explicit_stop_check -> eval;
test_transcribe_generator_explicit_stop_check -> fill_;
test_transcribe_generator_explicit_stop_check -> TranscribeConfig;
test_transcribe_generator_explicit_stop_check -> transcribe_generator;
test_transcribe_generator_explicit_stop_check -> extend;
test_transcribe_generator_explicit_stop_check -> len;
test_transcribe_generator_explicit_stop_check -> next;
test_transcribe_check_flags -> eval;
test_transcribe_check_flags -> transcribe;
test_transribe_override_config_incorrect -> eval;
test_transribe_override_config_incorrect -> OverrideConfig;
test_transribe_override_config_incorrect -> raises;
test_transribe_override_config_incorrect -> transcribe;
test_transribe_override_config_incorrect -> diarize;
test_transribe_override_config_correct -> eval;
test_transribe_override_config_correct -> fill_;
test_transribe_override_config_correct -> OverrideConfig;
test_transribe_override_config_correct -> transcribe;
test_transribe_override_config_correct -> isinstance;
test_transribe_override_config_correct -> len;
test_transribe_override_config_correct -> diarize;
test_transcribe_multiple_tensor -> with_downloads;
test_transcribe_multiple_tensor -> tensor;
test_transcribe_multiple_tensor -> transcribe;
test_transcribe_multiple_tensor -> isinstance;
test_transcribe_multiple_tensor -> len;
test_transcribe_dataloader -> with_downloads;
test_transcribe_dataloader -> DummyDataset;
test_transcribe_dataloader -> DataLoader;
test_transcribe_dataloader -> transcribe;
test_transcribe_dataloader -> isinstance;
test_transcribe_dataloader -> _speech_collate_fn;
test_transcribe_dataloader -> len;
test_transcribe_return_nbest_rnnt -> eval;
test_transcribe_return_nbest_rnnt -> deepcopy;
test_transcribe_return_nbest_rnnt -> change_decoding_strategy;
test_transcribe_return_nbest_rnnt -> transcribe;
test_transcribe_return_nbest_rnnt -> all;
test_transcribe_return_nbest_rnnt -> open_dict;
test_transcribe_return_nbest_rnnt -> len;
test_transcribe_return_nbest_rnnt -> isinstance;
test_transcribe_return_nbest_canary -> eval;
test_transcribe_return_nbest_canary -> deepcopy;
test_transcribe_return_nbest_canary -> change_decoding_strategy;
test_transcribe_return_nbest_canary -> transcribe;
test_transcribe_return_nbest_canary -> all;
test_transcribe_return_nbest_canary -> open_dict;
test_transcribe_return_nbest_canary -> len;
test_transcribe_return_nbest_canary -> isinstance;
test_timestamps_with_transcribe -> with_downloads;
test_timestamps_with_transcribe -> transcribe;
test_timestamps_with_transcribe -> isinstance;
test_timestamps_with_transcribe -> len;
test_timestamps_with_transcribe -> approx;
test_timestamps_with_transcribe_hybrid -> with_downloads;
test_timestamps_with_transcribe_hybrid -> transcribe;
test_timestamps_with_transcribe_hybrid -> isinstance;
test_timestamps_with_transcribe_hybrid -> len;
test_timestamps_with_transcribe_hybrid -> approx;
test_timestamps_with_transcribe_hybrid_ctc_head -> with_downloads;
test_timestamps_with_transcribe_hybrid_ctc_head -> change_decoding_strategy;
test_timestamps_with_transcribe_hybrid_ctc_head -> transcribe;
test_timestamps_with_transcribe_hybrid_ctc_head -> isinstance;
test_timestamps_with_transcribe_hybrid_ctc_head -> len;
test_timestamps_with_transcribe_hybrid_ctc_head -> approx;
test_timestamps_with_transcribe_canary_flash -> with_downloads;
test_timestamps_with_transcribe_canary_flash -> transcribe;
test_timestamps_with_transcribe_canary_flash -> isinstance;
test_timestamps_with_transcribe_canary_flash -> len;
test_timestamps_with_transcribe_canary_flash -> approx;
conformer_ctc_adapter -> fixture;
conformer_ctc_adapter -> DictConfig;
conformer_ctc_adapter -> EncDecCTCModel;
squeezeformer_ctc_adapter -> fixture;
squeezeformer_ctc_adapter -> DictConfig;
squeezeformer_ctc_adapter -> EncDecCTCModel;
multitask_model -> fixture;
multitask_model -> DictConfig;
multitask_model -> EncDecMultiTaskModel;
multitask_model -> replace_adapter_compatible_modules;
multitask_model -> dict;
multitask_model -> int;
multitask_model -> join;
test_class_paths_are_correct -> list;
test_class_paths_are_correct -> dir;
test_class_paths_are_correct -> getattr;
test_class_paths_are_correct -> import_class_by_path;
test_asr_model_constructor -> add_adapter;
test_asr_model_constructor -> get_adapter_cfg;
test_asr_model_constructor_mha_adapter -> raises;
test_asr_model_constructor_mha_adapter -> add_adapter;
test_asr_model_constructor_mha_adapter -> get_adapter_cfg;
test_conformer_constructor_mha_adapter -> add_adapter;
test_conformer_constructor_mha_adapter -> get_adapter_cfg;
test_squeezeformer_constructor_mha_adapter -> add_adapter;
test_squeezeformer_constructor_mha_adapter -> get_adapter_cfg;
test_asr_model_constructor_encoder_module -> add_adapter;
test_asr_model_constructor_encoder_module -> get_adapter_cfg;
test_asr_model_constructor_decoder_module -> add_adapter;
test_asr_model_constructor_decoder_module -> is_adapter_available;
test_asr_model_constructor_decoder_module -> get_adapter_cfg;
test_asr_model_constructor_decoder_module -> get_enabled_adapters;
test_asr_model_constructor_joint_module_ctc_skip -> raises;
test_asr_model_constructor_joint_module_ctc_skip -> add_adapter;
test_asr_model_constructor_joint_module_ctc_skip -> get_adapter_cfg;
test_asr_model_constructor_joint_module_rnnt -> skipif;
test_asr_model_constructor_joint_module_rnnt -> add_adapter;
test_asr_model_constructor_joint_module_rnnt -> is_adapter_available;
test_asr_model_constructor_joint_module_rnnt -> get_adapter_cfg;
test_asr_model_constructor_joint_module_rnnt -> get_enabled_adapters;
test_asr_multiple_adapter -> add_adapter;
test_asr_multiple_adapter -> get_adapter_cfg;
test_asr_forward_linear_pre -> parametrize;
test_asr_forward_linear_pre -> eval;
test_asr_forward_linear_pre -> manual_seed;
test_asr_forward_linear_pre -> randn;
test_asr_forward_linear_pre -> tensor;
test_asr_forward_linear_pre -> add_adapter;
test_asr_forward_linear_pre -> model;
test_asr_forward_linear_pre -> mean;
test_asr_forward_linear_pre -> get_adapter_cfg;
test_asr_forward_linear_pre -> abs;
test_asr_forward_linear_post -> parametrize;
test_asr_forward_linear_post -> eval;
test_asr_forward_linear_post -> manual_seed;
test_asr_forward_linear_post -> randn;
test_asr_forward_linear_post -> tensor;
test_asr_forward_linear_post -> add_adapter;
test_asr_forward_linear_post -> model;
test_asr_forward_linear_post -> mean;
test_asr_forward_linear_post -> get_adapter_cfg;
test_asr_forward_linear_post -> abs;
test_conformer_forward_mha -> parametrize;
test_conformer_forward_mha -> eval;
test_conformer_forward_mha -> manual_seed;
test_conformer_forward_mha -> randn;
test_conformer_forward_mha -> tensor;
test_conformer_forward_mha -> add_adapter;
test_conformer_forward_mha -> conformer_ctc_adapter;
test_conformer_forward_mha -> mean;
test_conformer_forward_mha -> get_adapter_cfg;
test_conformer_forward_mha -> abs;
test_squeezeformer_forward_mha -> parametrize;
test_squeezeformer_forward_mha -> eval;
test_squeezeformer_forward_mha -> manual_seed;
test_squeezeformer_forward_mha -> randn;
test_squeezeformer_forward_mha -> tensor;
test_squeezeformer_forward_mha -> add_adapter;
test_squeezeformer_forward_mha -> squeezeformer_ctc_adapter;
test_squeezeformer_forward_mha -> mean;
test_squeezeformer_forward_mha -> get_adapter_cfg;
test_squeezeformer_forward_mha -> abs;
test_canary_forward_mha -> parametrize;
test_canary_forward_mha -> eval;
test_canary_forward_mha -> manual_seed;
test_canary_forward_mha -> randn;
test_canary_forward_mha -> tensor;
test_canary_forward_mha -> randint;
test_canary_forward_mha -> multitask_model;
test_canary_forward_mha -> add_adapter;
test_canary_forward_mha -> mean;
test_canary_forward_mha -> modules;
test_canary_forward_mha -> raises;
test_canary_forward_mha -> get_adapter_cfg;
test_canary_forward_mha -> abs;
test_canary_forward_mha -> split;
test_canary_forward_mha -> isinstance;
test_canary_forward_mha -> get_adapter_module;
test_canary_forward_mha_decoder_fails_without_support -> parametrize;
test_canary_forward_mha_decoder_fails_without_support -> eval;
test_canary_forward_mha_decoder_fails_without_support -> manual_seed;
test_canary_forward_mha_decoder_fails_without_support -> get_registered_adapter;
test_canary_forward_mha_decoder_fails_without_support -> raises;
test_canary_forward_mha_decoder_fails_without_support -> add_adapter;
test_canary_forward_mha_decoder_fails_without_support -> get_adapter_cfg;
test_asr_multi_adapter_forward -> parametrize;
test_asr_multi_adapter_forward -> eval;
test_asr_multi_adapter_forward -> manual_seed;
test_asr_multi_adapter_forward -> randn;
test_asr_multi_adapter_forward -> tensor;
test_asr_multi_adapter_forward -> add_adapter;
test_asr_multi_adapter_forward -> model;
test_asr_multi_adapter_forward -> resolve_adapter_module_name_;
test_asr_multi_adapter_forward -> get_enabled_adapters;
test_asr_multi_adapter_forward -> mean;
test_asr_multi_adapter_forward -> get_adapter_cfg;
test_asr_multi_adapter_forward -> abs;
test_asr_multi_adapter_forward -> skipif;
test_asr_multi_adapter_forward -> rnnt_model;
test_asr_multi_adapter_partial_forward -> parametrize;
test_asr_multi_adapter_partial_forward -> eval;
test_asr_multi_adapter_partial_forward -> manual_seed;
test_asr_multi_adapter_partial_forward -> randn;
test_asr_multi_adapter_partial_forward -> tensor;
test_asr_multi_adapter_partial_forward -> add_adapter;
test_asr_multi_adapter_partial_forward -> set_enabled_adapters;
test_asr_multi_adapter_partial_forward -> model;
test_asr_multi_adapter_partial_forward -> resolve_adapter_module_name_;
test_asr_multi_adapter_partial_forward -> get_enabled_adapters;
test_asr_multi_adapter_partial_forward -> mean;
test_asr_multi_adapter_partial_forward -> get_adapter_cfg;
test_asr_multi_adapter_partial_forward -> abs;
test_asr_forward_unfrozen_adapters -> parametrize;
test_asr_forward_unfrozen_adapters -> eval;
test_asr_forward_unfrozen_adapters -> add_adapter;
test_asr_forward_unfrozen_adapters -> freeze;
test_asr_forward_unfrozen_adapters -> unfreeze_enabled_adapters;
test_asr_forward_unfrozen_adapters -> named_parameters;
test_asr_forward_unfrozen_adapters -> named_modules;
test_asr_forward_unfrozen_adapters -> isinstance;
test_asr_forward_unfrozen_adapters -> get_adapter_cfg;
test_asr_forward_unfrozen_adapters -> numel;
test_constructor_pretrained -> with_downloads;
test_constructor_pretrained -> from_pretrained;
test_constructor_pretrained -> get_registered_adapter;
test_constructor_pretrained -> isinstance;
test_constructor_pretrained -> hasattr;
test_constructor_pretrained -> add_adapter;
test_constructor_pretrained -> is_adapter_available;
test_constructor_pretrained -> freeze;
test_constructor_pretrained -> unfreeze_enabled_adapters;
test_constructor_pretrained -> get_adapter_cfg;
test_constructor_pretrained_rnnt -> skipif;
test_constructor_pretrained_rnnt -> with_downloads;
test_constructor_pretrained_rnnt -> from_pretrained;
test_constructor_pretrained_rnnt -> get_registered_adapter;
test_constructor_pretrained_rnnt -> isinstance;
test_constructor_pretrained_rnnt -> hasattr;
test_constructor_pretrained_rnnt -> add_adapter;
test_constructor_pretrained_rnnt -> is_adapter_available;
test_constructor_pretrained_rnnt -> freeze;
test_constructor_pretrained_rnnt -> unfreeze_enabled_adapters;
test_constructor_pretrained_rnnt -> get_adapter_cfg;
test_asr_model_adapter_loss -> randn;
test_asr_model_adapter_loss -> tensor;
test_asr_model_adapter_loss -> get_adapter_cfg;
test_asr_model_adapter_loss -> add_adapter;
test_asr_model_adapter_loss -> train;
test_asr_model_adapter_loss -> no_grad;
test_asr_model_adapter_loss -> reset_registry;
test_asr_model_adapter_loss -> update_access_cfg;
test_asr_model_adapter_loss -> model;
test_asr_model_adapter_loss -> get_module_registry;
test_asr_model_adapter_loss -> list;
test_asr_model_adapter_loss -> values;
test_mha_adapter_config -> assert_dataclass_signature_match;
test_relpos_mha_adapter_config -> assert_dataclass_signature_match;
test_abs_pos_encoding_adapter_config -> assert_dataclass_signature_match;
test_rel_pos_encoding_adapter_config -> assert_dataclass_signature_match;
test_transformer_mha_adapter_config -> assert_dataclass_signature_match;
test_mha_adapter_init -> parametrize;
test_mha_adapter_init -> manual_seed;
test_mha_adapter_init -> randn;
test_mha_adapter_init -> randint;
test_mha_adapter_init -> size;
test_mha_adapter_init -> MultiHeadAttentionAdapter;
test_mha_adapter_init -> get_mask;
test_mha_adapter_init -> no_grad;
test_mha_adapter_init -> adapter;
test_mha_adapter_init -> sum;
test_mha_adapter_init -> hasattr;
test_mha_adapter_init -> abs;
test_relmha_adapter_init -> parametrize;
test_relmha_adapter_init -> manual_seed;
test_relmha_adapter_init -> randn;
test_relmha_adapter_init -> randint;
test_relmha_adapter_init -> size;
test_relmha_adapter_init -> RelPositionMultiHeadAttentionAdapter;
test_relmha_adapter_init -> RelPositionalEncodingAdapter;
test_relmha_adapter_init -> get_mask;
test_relmha_adapter_init -> extend_pe;
test_relmha_adapter_init -> max;
test_relmha_adapter_init -> no_grad;
test_relmha_adapter_init -> relpos_enc;
test_relmha_adapter_init -> adapter;
test_relmha_adapter_init -> sum;
test_relmha_adapter_init -> hasattr;
test_relmha_adapter_init -> abs;
test_relmha_adapter_with_torch_sdpa -> manual_seed;
test_relmha_adapter_with_torch_sdpa -> randn;
test_relmha_adapter_with_torch_sdpa -> randint;
test_relmha_adapter_with_torch_sdpa -> size;
test_relmha_adapter_with_torch_sdpa -> RelPositionMultiHeadAttentionAdapter;
test_relmha_adapter_with_torch_sdpa -> Linear;
test_relmha_adapter_with_torch_sdpa -> zip;
test_relmha_adapter_with_torch_sdpa -> RelPositionalEncodingAdapter;
test_relmha_adapter_with_torch_sdpa -> get_mask;
test_relmha_adapter_with_torch_sdpa -> extend_pe;
test_relmha_adapter_with_torch_sdpa -> parameters;
test_relmha_adapter_with_torch_sdpa -> copy_;
test_relmha_adapter_with_torch_sdpa -> max;
test_relmha_adapter_with_torch_sdpa -> no_grad;
test_relmha_adapter_with_torch_sdpa -> relpos_enc;
test_relmha_adapter_with_torch_sdpa -> adapter;
test_relmha_adapter_with_torch_sdpa -> adapter_torch_sdpa;
test_relmha_adapter_with_torch_sdpa -> allclose;
test_mha_adapter_with_torch_sdpa -> manual_seed;
test_mha_adapter_with_torch_sdpa -> randn;
test_mha_adapter_with_torch_sdpa -> randint;
test_mha_adapter_with_torch_sdpa -> size;
test_mha_adapter_with_torch_sdpa -> MultiHeadAttentionAdapter;
test_mha_adapter_with_torch_sdpa -> Linear;
test_mha_adapter_with_torch_sdpa -> zip;
test_mha_adapter_with_torch_sdpa -> get_mask;
test_mha_adapter_with_torch_sdpa -> parameters;
test_mha_adapter_with_torch_sdpa -> copy_;
test_mha_adapter_with_torch_sdpa -> no_grad;
test_mha_adapter_with_torch_sdpa -> adapter;
test_mha_adapter_with_torch_sdpa -> adapter_torch_sdpa;
test_mha_adapter_with_torch_sdpa -> allclose;
test_abspos_encoding_init -> manual_seed;
test_abspos_encoding_init -> randn;
test_abspos_encoding_init -> randint;
test_abspos_encoding_init -> size;
test_abspos_encoding_init -> PositionalEncodingAdapter;
test_abspos_encoding_init -> extend_pe;
test_abspos_encoding_init -> max;
test_abspos_encoding_init -> no_grad;
test_abspos_encoding_init -> relpos_enc;
test_abspos_encoding_init -> abs;
test_abspos_encoding_init -> sum;
test_relpos_encoding_init -> manual_seed;
test_relpos_encoding_init -> randn;
test_relpos_encoding_init -> randint;
test_relpos_encoding_init -> size;
test_relpos_encoding_init -> RelPositionalEncodingAdapter;
test_relpos_encoding_init -> extend_pe;
test_relpos_encoding_init -> max;
test_relpos_encoding_init -> no_grad;
test_relpos_encoding_init -> relpos_enc;
test_relpos_encoding_init -> abs;
test_relpos_encoding_init -> sum;
test_transformer_mha_adapter_init -> parametrize;
test_transformer_mha_adapter_init -> manual_seed;
test_transformer_mha_adapter_init -> randn;
test_transformer_mha_adapter_init -> randint;
test_transformer_mha_adapter_init -> size;
test_transformer_mha_adapter_init -> TransformerMultiHeadAttentionAdapter;
test_transformer_mha_adapter_init -> get_mask;
test_transformer_mha_adapter_init -> unsqueeze;
test_transformer_mha_adapter_init -> no_grad;
test_transformer_mha_adapter_init -> adapter;
test_transformer_mha_adapter_init -> sum;
test_transformer_mha_adapter_init -> hasattr;
test_transformer_mha_adapter_init -> abs;
test_mha_adapter_strategy -> MultiHeadAttentionAdapter;
test_mha_adapter_strategy -> hasattr;
test_mha_adapter_strategy -> isinstance;
test_relpos_mha_adapter_strategy -> RelPositionMultiHeadAttentionAdapter;
test_relpos_mha_adapter_strategy -> hasattr;
test_relpos_mha_adapter_strategy -> isinstance;
test_abspos_encoding_adapter_strategy -> PositionalEncodingAdapter;
test_abspos_encoding_adapter_strategy -> hasattr;
test_abspos_encoding_adapter_strategy -> isinstance;
test_relpos_encoding_adapter_strategy -> RelPositionalEncodingAdapter;
test_relpos_encoding_adapter_strategy -> hasattr;
test_relpos_encoding_adapter_strategy -> isinstance;
test_transformer_mha_adapter_strategy -> TransformerMultiHeadAttentionAdapter;
test_transformer_mha_adapter_strategy -> hasattr;
test_transformer_mha_adapter_strategy -> isinstance;
test_case_small_random_fastemit_reg -> parametrize;
test_case_small_random_fastemit_reg -> RandomState;
test_case_small_random_fastemit_reg -> randn;
test_case_small_random_fastemit_reg -> RNNTLossNumba;
test_case_small_random_fastemit_reg -> wrap_and_call;
test_case_small_random_fastemit_reg -> RNNTLoss_Numpy;
test_case_small_random_fastemit_reg -> allclose;
test_case_small_random_fastemit_reg -> skip_numba_cuda_test_if_unsupported;
test_case_small_clamp -> parametrize;
test_case_small_clamp -> astype;
test_case_small_clamp -> RNNTLossNumba;
test_case_small_clamp -> wrap_and_call;
test_case_small_clamp -> RNNTLoss_Numpy;
test_case_small_clamp -> array;
test_case_small_clamp -> allclose;
test_case_small_clamp -> skip_numba_cuda_test_if_unsupported;
test_case_small_fastemit_clamp -> parametrize;
test_case_small_fastemit_clamp -> astype;
test_case_small_fastemit_clamp -> RNNTLossNumba;
test_case_small_fastemit_clamp -> wrap_and_call;
test_case_small_fastemit_clamp -> RNNTLoss_Numpy;
test_case_small_fastemit_clamp -> allclose;
test_case_small_fastemit_clamp -> skip_numba_cuda_test_if_unsupported;
test_case_small_fastemit_clamp -> array;
test_case_small_random_accumulated -> parametrize;
test_case_small_random_accumulated -> manual_seed;
test_case_small_random_accumulated -> randn;
test_case_small_random_accumulated -> RNNTLossNumba;
test_case_small_random_accumulated -> RNNTLoss_Numpy;
test_case_small_random_accumulated -> matmul;
test_case_small_random_accumulated -> wrap_and_call;
test_case_small_random_accumulated -> numpy;
test_case_small_random_accumulated -> zero_grad;
test_case_small_random_accumulated -> allclose;
test_case_small_random_accumulated -> skip_numba_cuda_test_if_unsupported;
test_case_small_random_accumulated -> cpu;
test_case_small_random_accumulated -> detach;
test_case_small_random_accumulated -> clone;
test_case_randomized_act_label -> parametrize;
test_case_randomized_act_label -> skip_numba_cuda_test_if_unsupported;
test_case_randomized_act_label -> rand;
test_case_randomized_act_label -> MultiblankRNNTLossNumba;
test_case_randomized_act_label -> wrap_and_call;
test_case_randomized_act_label -> MultiblankRNNTLossPytorch;
test_case_randomized_act_label -> allclose;
test_case_randomized_act_label -> randrange;
test_case_randomized_act_label -> range;
test_case_randomized_act_label -> len;
test_case_randomized_act_label -> TDTLossNumba;
test_case_randomized_act_label -> TDTLossPytorch;
test_case_randomized_act_label_no_0_duration -> parametrize;
test_case_randomized_act_label_no_0_duration -> skip_numba_cuda_test_if_unsupported;
test_case_randomized_act_label_no_0_duration -> rand;
test_case_randomized_act_label_no_0_duration -> TDTLossNumba;
test_case_randomized_act_label_no_0_duration -> wrap_and_call;
test_case_randomized_act_label_no_0_duration -> TDTLossPytorch;
test_case_randomized_act_label_no_0_duration -> allclose;
test_case_randomized_act_label_no_0_duration -> randrange;
test_case_randomized_act_label_no_0_duration -> range;
test_case_randomized_act_label_no_0_duration -> len;
test_case_fixed_case_act_label -> parametrize;
test_case_fixed_case_act_label -> skip_numba_cuda_test_if_unsupported;
test_case_fixed_case_act_label -> zeros;
test_case_fixed_case_act_label -> TDTLossNumba;
test_case_fixed_case_act_label -> wrap_and_call;
test_case_fixed_case_act_label -> allclose;
test_case_fixed_case_act_label -> range;
test_case_fixed_case_act_label -> len;
log_softmax_grad -> tensor;
log_softmax_grad -> log_softmax;
log_softmax_grad -> backward;
log_softmax_grad -> numpy;
log_softmax_grad -> sum;
test_compute_alphas_kernel -> skipif;
test_compute_alphas_kernel -> parametrize;
test_compute_alphas_kernel -> skip_numba_cuda_test_if_unsupported;
test_compute_alphas_kernel -> RandomState;
test_compute_alphas_kernel -> randn;
test_compute_alphas_kernel -> array;
test_compute_alphas_kernel -> log_softmax;
test_compute_alphas_kernel -> forward_pass;
test_compute_alphas_kernel -> device;
test_compute_alphas_kernel -> hasattr;
test_compute_alphas_kernel -> tensor;
test_compute_alphas_kernel -> zeros;
test_compute_alphas_kernel -> certify_inputs;
test_compute_alphas_kernel -> view;
test_compute_alphas_kernel -> reduce_max;
test_compute_alphas_kernel -> reduce_exp;
test_compute_alphas_kernel -> synchronize;
test_compute_alphas_kernel -> len;
test_compute_alphas_kernel -> external_stream;
test_compute_alphas_kernel -> default_stream;
test_compute_alphas_kernel -> numpy;
test_compute_alphas_kernel -> mean;
test_compute_alphas_kernel -> is_available;
test_compute_alphas_kernel -> current_stream;
test_compute_alphas_kernel -> cpu;
test_compute_alphas_kernel -> abs;
test_compute_alphas_kernel -> square;
test_compute_alphas_kernel -> TDTLossPytorch;
test_compute_alphas_kernel -> compute_forward_prob;
test_compute_alphas_kernel -> norm;
test_compute_alphas_kernel -> MultiblankRNNTLossPytorch;
test_compute_betas_kernel -> skipif;
test_compute_betas_kernel -> parametrize;
test_compute_betas_kernel -> skip_numba_cuda_test_if_unsupported;
test_compute_betas_kernel -> RandomState;
test_compute_betas_kernel -> randn;
test_compute_betas_kernel -> array;
test_compute_betas_kernel -> log_softmax;
test_compute_betas_kernel -> backward_pass;
test_compute_betas_kernel -> device;
test_compute_betas_kernel -> hasattr;
test_compute_betas_kernel -> tensor;
test_compute_betas_kernel -> zeros;
test_compute_betas_kernel -> certify_inputs;
test_compute_betas_kernel -> view;
test_compute_betas_kernel -> reduce_max;
test_compute_betas_kernel -> reduce_exp;
test_compute_betas_kernel -> synchronize;
test_compute_betas_kernel -> len;
test_compute_betas_kernel -> external_stream;
test_compute_betas_kernel -> default_stream;
test_compute_betas_kernel -> numpy;
test_compute_betas_kernel -> mean;
test_compute_betas_kernel -> is_available;
test_compute_betas_kernel -> current_stream;
test_compute_betas_kernel -> cpu;
test_compute_betas_kernel -> abs;
test_compute_betas_kernel -> square;
test_compute_grads_kernel -> skipif;
test_compute_grads_kernel -> parametrize;
test_compute_grads_kernel -> skip_numba_cuda_test_if_unsupported;
test_compute_grads_kernel -> RandomState;
test_compute_grads_kernel -> randn;
test_compute_grads_kernel -> from_numpy;
test_compute_grads_kernel -> requires_grad_;
test_compute_grads_kernel -> RNNTLoss;
test_compute_grads_kernel -> loss_func;
test_compute_grads_kernel -> backward;
test_compute_grads_kernel -> device;
test_compute_grads_kernel -> hasattr;
test_compute_grads_kernel -> tensor;
test_compute_grads_kernel -> to;
test_compute_grads_kernel -> zeros;
test_compute_grads_kernel -> certify_inputs;
test_compute_grads_kernel -> view;
test_compute_grads_kernel -> zeros_like;
test_compute_grads_kernel -> reduce_max;
test_compute_grads_kernel -> reduce_exp;
test_compute_grads_kernel -> synchronize;
test_compute_grads_kernel -> array;
test_compute_grads_kernel -> external_stream;
test_compute_grads_kernel -> default_stream;
test_compute_grads_kernel -> numpy;
test_compute_grads_kernel -> mean;
test_compute_grads_kernel -> is_available;
test_compute_grads_kernel -> sum;
test_compute_grads_kernel -> clone;
test_compute_grads_kernel -> len;
test_compute_grads_kernel -> current_stream;
test_compute_grads_kernel -> cpu;
test_compute_grads_kernel -> abs;
test_compute_grads_kernel -> square;
test_compute_grads_kernel_fastemit -> skipif;
test_compute_grads_kernel_fastemit -> parametrize;
test_compute_grads_kernel_fastemit -> skip_numba_cuda_test_if_unsupported;
test_compute_grads_kernel_fastemit -> RandomState;
test_compute_grads_kernel_fastemit -> randn;
test_compute_grads_kernel_fastemit -> from_numpy;
test_compute_grads_kernel_fastemit -> requires_grad_;
test_compute_grads_kernel_fastemit -> RNNTLoss;
test_compute_grads_kernel_fastemit -> loss_func;
test_compute_grads_kernel_fastemit -> backward;
test_compute_grads_kernel_fastemit -> device;
test_compute_grads_kernel_fastemit -> hasattr;
test_compute_grads_kernel_fastemit -> tensor;
test_compute_grads_kernel_fastemit -> to;
test_compute_grads_kernel_fastemit -> zeros;
test_compute_grads_kernel_fastemit -> certify_inputs;
test_compute_grads_kernel_fastemit -> view;
test_compute_grads_kernel_fastemit -> zeros_like;
test_compute_grads_kernel_fastemit -> reduce_max;
test_compute_grads_kernel_fastemit -> reduce_exp;
test_compute_grads_kernel_fastemit -> synchronize;
test_compute_grads_kernel_fastemit -> array;
test_compute_grads_kernel_fastemit -> external_stream;
test_compute_grads_kernel_fastemit -> default_stream;
test_compute_grads_kernel_fastemit -> numpy;
test_compute_grads_kernel_fastemit -> mean;
test_compute_grads_kernel_fastemit -> is_available;
test_compute_grads_kernel_fastemit -> sum;
test_compute_grads_kernel_fastemit -> clone;
test_compute_grads_kernel_fastemit -> len;
test_compute_grads_kernel_fastemit -> current_stream;
test_compute_grads_kernel_fastemit -> cpu;
test_compute_grads_kernel_fastemit -> abs;
test_compute_grads_kernel_fastemit -> square;
test_compute_grads_kernel_clamp -> skipif;
test_compute_grads_kernel_clamp -> parametrize;
test_compute_grads_kernel_clamp -> skip_numba_cuda_test_if_unsupported;
test_compute_grads_kernel_clamp -> RandomState;
test_compute_grads_kernel_clamp -> randn;
test_compute_grads_kernel_clamp -> from_numpy;
test_compute_grads_kernel_clamp -> requires_grad_;
test_compute_grads_kernel_clamp -> RNNTLoss;
test_compute_grads_kernel_clamp -> loss_func;
test_compute_grads_kernel_clamp -> backward;
test_compute_grads_kernel_clamp -> device;
test_compute_grads_kernel_clamp -> hasattr;
test_compute_grads_kernel_clamp -> tensor;
test_compute_grads_kernel_clamp -> to;
test_compute_grads_kernel_clamp -> zeros;
test_compute_grads_kernel_clamp -> certify_inputs;
test_compute_grads_kernel_clamp -> view;
test_compute_grads_kernel_clamp -> zeros_like;
test_compute_grads_kernel_clamp -> reduce_max;
test_compute_grads_kernel_clamp -> reduce_exp;
test_compute_grads_kernel_clamp -> synchronize;
test_compute_grads_kernel_clamp -> array;
test_compute_grads_kernel_clamp -> external_stream;
test_compute_grads_kernel_clamp -> default_stream;
test_compute_grads_kernel_clamp -> numpy;
test_compute_grads_kernel_clamp -> mean;
test_compute_grads_kernel_clamp -> is_available;
test_compute_grads_kernel_clamp -> sum;
test_compute_grads_kernel_clamp -> clone;
test_compute_grads_kernel_clamp -> len;
test_compute_grads_kernel_clamp -> current_stream;
test_compute_grads_kernel_clamp -> cpu;
test_compute_grads_kernel_clamp -> abs;
test_compute_grads_kernel_clamp -> square;
test_reduce_max -> skipif;
test_reduce_max -> parametrize;
test_reduce_max -> skip_numba_cuda_test_if_unsupported;
test_reduce_max -> RandomState;
test_reduce_max -> astype;
test_reduce_max -> stream;
test_reduce_max -> to_device;
test_reduce_max -> prod;
test_reduce_max -> reduce_max;
test_reduce_max -> synchronize;
test_reduce_max -> copy_to_host;
test_reduce_max -> sum;
test_reduce_max -> is_available;
test_reduce_max -> reshape;
test_reduce_max -> randn;
test_reduce_max -> abs;
test_reduce_exp -> skipif;
test_reduce_exp -> parametrize;
test_reduce_exp -> skip_numba_cuda_test_if_unsupported;
test_reduce_exp -> RandomState;
test_reduce_exp -> astype;
test_reduce_exp -> stream;
test_reduce_exp -> to_device;
test_reduce_exp -> prod;
test_reduce_exp -> reduce_exp;
test_reduce_exp -> synchronize;
test_reduce_exp -> copy_to_host;
test_reduce_exp -> sum;
test_reduce_exp -> is_available;
test_reduce_exp -> reshape;
test_reduce_exp -> zeros_like;
test_reduce_exp -> abs;
test_reduce_exp -> randn;
test_log_sum_exp -> skipif;
test_log_sum_exp -> parametrize;
test_log_sum_exp -> skip_numba_cuda_test_if_unsupported;
test_log_sum_exp -> astype;
test_log_sum_exp -> stream;
test_log_sum_exp -> to_device;
test_log_sum_exp -> threads_per_block;
test_log_sum_exp -> synchronize;
test_log_sum_exp -> copy_to_host;
test_log_sum_exp -> grid;
test_log_sum_exp -> is_available;
test_log_sum_exp -> log_sum_exp;
test_log_sum_exp -> zeros;
test_log_sum_exp -> ones;
test_log_sum_exp -> sum;
test_log_sum_exp_neg_inf -> skipif;
test_log_sum_exp_neg_inf -> parametrize;
test_log_sum_exp_neg_inf -> skip_numba_cuda_test_if_unsupported;
test_log_sum_exp_neg_inf -> astype;
test_log_sum_exp_neg_inf -> stream;
test_log_sum_exp_neg_inf -> to_device;
test_log_sum_exp_neg_inf -> threads_per_block;
test_log_sum_exp_neg_inf -> synchronize;
test_log_sum_exp_neg_inf -> copy_to_host;
test_log_sum_exp_neg_inf -> allclose;
test_log_sum_exp_neg_inf -> grid;
test_log_sum_exp_neg_inf -> ones_like;
test_log_sum_exp_neg_inf -> is_available;
test_log_sum_exp_neg_inf -> log_sum_exp;
test_log_sum_exp_neg_inf -> asarray;
test_log_sum_exp_neg_inf -> ones;
test_log_sum_exp_neg_inf -> len;
test_div_up -> skipif;
test_div_up -> parametrize;
test_div_up -> skip_numba_cuda_test_if_unsupported;
test_div_up -> astype;
test_div_up -> stream;
test_div_up -> to_device;
test_div_up -> threads_per_block;
test_div_up -> synchronize;
test_div_up -> copy_to_host;
test_div_up -> range;
test_div_up -> grid;
test_div_up -> len;
test_div_up -> is_available;
test_div_up -> div_up;
test_div_up -> full;
test_add -> skipif;
test_add -> parametrize;
test_add -> skip_numba_cuda_test_if_unsupported;
test_add -> astype;
test_add -> stream;
test_add -> to_device;
test_add -> threads_per_block;
test_add -> synchronize;
test_add -> copy_to_host;
test_add -> range;
test_add -> grid;
test_add -> len;
test_add -> is_available;
test_add -> add;
test_add -> full;
test_maximum -> skipif;
test_maximum -> parametrize;
test_maximum -> skip_numba_cuda_test_if_unsupported;
test_maximum -> astype;
test_maximum -> stream;
test_maximum -> to_device;
test_maximum -> threads_per_block;
test_maximum -> synchronize;
test_maximum -> copy_to_host;
test_maximum -> range;
test_maximum -> grid;
test_maximum -> len;
test_maximum -> is_available;
test_maximum -> maximum;
test_maximum -> full;
test_identity -> skipif;
test_identity -> parametrize;
test_identity -> skip_numba_cuda_test_if_unsupported;
test_identity -> astype;
test_identity -> stream;
test_identity -> to_device;
test_identity -> threads_per_block;
test_identity -> synchronize;
test_identity -> copy_to_host;
test_identity -> range;
test_identity -> grid;
test_identity -> len;
test_identity -> is_available;
test_identity -> identity;
test_identity -> full;
test_negate -> skipif;
test_negate -> parametrize;
test_negate -> skip_numba_cuda_test_if_unsupported;
test_negate -> astype;
test_negate -> stream;
test_negate -> to_device;
test_negate -> threads_per_block;
test_negate -> synchronize;
test_negate -> copy_to_host;
test_negate -> range;
test_negate -> grid;
test_negate -> len;
test_negate -> is_available;
test_negate -> negate;
test_negate -> full;
test_exponential -> skipif;
test_exponential -> parametrize;
test_exponential -> skip_numba_cuda_test_if_unsupported;
test_exponential -> astype;
test_exponential -> stream;
test_exponential -> to_device;
test_exponential -> threads_per_block;
test_exponential -> synchronize;
test_exponential -> copy_to_host;
test_exponential -> exp;
test_exponential -> range;
test_exponential -> grid;
test_exponential -> len;
test_exponential -> is_available;
test_exponential -> exponential;
test_exponential -> rand;
test_log_plus -> skipif;
test_log_plus -> parametrize;
test_log_plus -> skip_numba_cuda_test_if_unsupported;
test_log_plus -> astype;
test_log_plus -> stream;
test_log_plus -> to_device;
test_log_plus -> threads_per_block;
test_log_plus -> synchronize;
test_log_plus -> copy_to_host;
test_log_plus -> range;
test_log_plus -> grid;
test_log_plus -> log1p;
test_log_plus -> maximum;
test_log_plus -> len;
test_log_plus -> is_available;
test_log_plus -> log_plus;
test_log_plus -> full;
test_log_plus -> exp;
test_log_plus -> fabs;
test_compute_costs_data -> skipif;
test_compute_costs_data -> parametrize;
test_compute_costs_data -> skip_numba_cuda_test_if_unsupported;
test_compute_costs_data -> seed;
test_compute_costs_data -> full;
test_compute_costs_data -> astype;
test_compute_costs_data -> stream;
test_compute_costs_data -> to_device;
test_compute_costs_data -> min;
test_compute_costs_data -> synchronize;
test_compute_costs_data -> copy_to_host;
test_compute_costs_data -> range;
test_compute_costs_data -> copy;
test_compute_costs_data -> len;
test_compute_costs_data -> is_available;
test_compute_costs_data -> randn;
test_compute_costs_data -> abs;
_kernel -> grid;
_kernel -> log_sum_exp;
_kernel -> div_up;
_kernel -> add;
_kernel -> maximum;
_kernel -> identity;
_kernel -> negate;
_kernel -> exponential;
_kernel -> log_plus;
get_cfg -> dict;
get_cfg -> update;
get_cfg -> create;
launch_kernel -> launch_spec_augment_kernel;
freq_mask_check -> range;
freq_mask_check -> all;
time_mask_check -> range;
time_mask_check -> all;
test_spec_aug_kernel -> run_only_on;
test_spec_aug_kernel -> parametrize;
test_spec_aug_kernel -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel -> get_cfg;
test_spec_aug_kernel -> prepare_data;
test_spec_aug_kernel -> launch_kernel;
test_spec_aug_kernel -> range;
test_spec_aug_kernel -> zip;
test_spec_aug_kernel -> freq_mask_check;
test_spec_aug_kernel_large_batch -> run_only_on;
test_spec_aug_kernel_large_batch -> parametrize;
test_spec_aug_kernel_large_batch -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_large_batch -> get_cfg;
test_spec_aug_kernel_large_batch -> prepare_data;
test_spec_aug_kernel_large_batch -> launch_kernel;
test_spec_aug_kernel_large_batch -> range;
test_spec_aug_kernel_large_batch -> zip;
test_spec_aug_kernel_large_batch -> freq_mask_check;
test_spec_aug_kernel_large_batch -> time_mask_check;
test_spec_aug_kernel_mask_value -> run_only_on;
test_spec_aug_kernel_mask_value -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_mask_value -> get_cfg;
test_spec_aug_kernel_mask_value -> prepare_data;
test_spec_aug_kernel_mask_value -> launch_kernel;
test_spec_aug_kernel_mask_value -> range;
test_spec_aug_kernel_mask_value -> zip;
test_spec_aug_kernel_mask_value -> freq_mask_check;
test_spec_aug_kernel_mask_value -> time_mask_check;
test_spec_aug_kernel_grad -> run_only_on;
test_spec_aug_kernel_grad -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_grad -> get_cfg;
test_spec_aug_kernel_grad -> prepare_data;
test_spec_aug_kernel_grad -> launch_kernel;
test_spec_aug_kernel_grad -> ones_like;
test_spec_aug_kernel_grad -> backward;
test_spec_aug_kernel_grad -> mean;
test_spec_aug_kernel_no_freq_mask -> run_only_on;
test_spec_aug_kernel_no_freq_mask -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_no_freq_mask -> get_cfg;
test_spec_aug_kernel_no_freq_mask -> prepare_data;
test_spec_aug_kernel_no_freq_mask -> launch_kernel;
test_spec_aug_kernel_no_freq_mask -> range;
test_spec_aug_kernel_no_freq_mask -> zip;
test_spec_aug_kernel_no_freq_mask -> time_mask_check;
test_spec_aug_kernel_no_time_mask -> run_only_on;
test_spec_aug_kernel_no_time_mask -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_no_time_mask -> get_cfg;
test_spec_aug_kernel_no_time_mask -> prepare_data;
test_spec_aug_kernel_no_time_mask -> launch_kernel;
test_spec_aug_kernel_no_time_mask -> range;
test_spec_aug_kernel_no_time_mask -> zip;
test_spec_aug_kernel_no_time_mask -> freq_mask_check;
test_spec_aug_kernel_no_freq_time_mask -> run_only_on;
test_spec_aug_kernel_no_freq_time_mask -> skip_numba_cuda_test_if_unsupported;
test_spec_aug_kernel_no_freq_time_mask -> get_cfg;
test_spec_aug_kernel_no_freq_time_mask -> prepare_data;
test_spec_aug_kernel_no_freq_time_mask -> clone;
test_spec_aug_kernel_no_freq_time_mask -> launch_kernel;
test_spec_aug_kernel_no_freq_time_mask -> mean;
test_spec_aug_kernel_no_freq_time_mask -> abs;
annotator -> fixture;
annotator -> get_data_simulation_configs;
annotator -> DataAnnotator;
get_data_simulation_configs -> DictConfig;
generate_words_and_alignments -> ValueError;
test_wrong_type_conf_values -> parametrize;
test_wrong_type_conf_values -> raises;
test_wrong_type_conf_values -> get_ctm_line;
test_valid_conf_values -> parametrize;
test_valid_conf_values -> get_ctm_line;
test_invalid_conf_ranges -> parametrize;
test_invalid_conf_ranges -> raises;
test_invalid_conf_ranges -> get_ctm_line;
test_valid_start_time_duration_with_precision -> parametrize;
test_valid_start_time_duration_with_precision -> get_ctm_line;
test_valid_input -> get_ctm_line;
test_invalid_types_for_time_duration -> parametrize;
test_invalid_types_for_time_duration -> raises;
test_invalid_types_for_time_duration -> get_ctm_line;
test_invalid_conf_values -> parametrize;
test_invalid_conf_values -> raises;
test_invalid_conf_values -> get_ctm_line;
test_default_values -> get_ctm_line;
test_default_values -> dict;
test_default_values -> TritonSettings;
test_default_values -> CompletionRequest;
test_default_values -> RestTritonSettings;
test_default_values -> RestCompletionRequest;
test_binary_search_alignments -> parametrize;
test_binary_search_alignments -> binary_search_alignments;
test_normalize_audio -> parametrize;
test_normalize_audio -> randn;
test_normalize_audio -> from_numpy;
test_normalize_audio -> normalize_audio;
test_normalize_audio -> max;
test_normalize_audio -> min;
test_normalize_audio -> abs;
test_get_cleaned_base_path -> parametrize;
test_get_cleaned_base_path -> get_cleaned_base_path;
test_get_cleaned_base_path -> rmdir;
test_get_cleaned_base_path -> exists;
test_get_cleaned_base_path -> join;
test_get_cleaned_base_path -> isfile;
test_get_cleaned_base_path -> getcwd;
test_get_split_points_in_alignments -> parametrize;
test_get_split_points_in_alignments -> get_split_points_in_alignments;
test_get_split_points_in_alignments -> enumerate;
test_get_split_points_in_alignments -> len;
test_get_split_points_in_alignments -> abs;
test_add_silence_to_alignments -> parametrize;
test_add_silence_to_alignments -> add_silence_to_alignments;
test_init -> isinstance;
test_init -> NemoQueryMultimodal;
test_init -> run_only_on;
test_init -> TensorRTMMExporter;
test_init -> skip;
test_init -> FSDP2Strategy;
test_init -> patch;
test_init -> FSDPStrategy;
test_init -> range;
test_init -> append;
test_init -> len;
test_init -> DummyClass;
test_create_new_rttm_entry -> generate_words_and_alignments;
test_create_new_rttm_entry -> create_new_rttm_entry;
test_create_new_json_entry -> generate_words_and_alignments;
test_create_new_json_entry -> join;
test_create_new_json_entry -> create_new_json_entry;
test_create_new_json_entry -> round;
test_create_new_json_entry -> float;
test_create_new_ctm_entry -> generate_words_and_alignments;
test_create_new_ctm_entry -> create_new_ctm_entry;
test_create_new_ctm_entry -> get_ctm_line;
test_create_new_ctm_entry -> float;
test_init_overlap_params -> _init_overlap_params;
test_init_overlap_params -> type;
test_init_silence_params -> _init_overlap_params;
test_init_silence_params -> type;
test_get_session_silence_mean_pass -> parametrize;
test_get_session_silence_mean_pass -> get_session_silence_mean;
test_get_session_silence_mean_fail -> parametrize;
test_get_session_silence_mean_fail -> raises;
test_get_session_silence_mean_fail -> get_session_silence_mean;
test_get_session_silence_mean_fail -> str;
test_get_session_overlap_mean_pass -> parametrize;
test_get_session_overlap_mean_pass -> get_session_overlap_mean;
test_get_session_overlap_mean_fail -> parametrize;
test_get_session_overlap_mean_fail -> DictConfig;
test_get_session_overlap_mean_fail -> raises;
test_get_session_overlap_mean_fail -> get_session_overlap_mean;
test_get_session_overlap_mean_fail -> str;
test_sample_from_overlap_model -> parametrize;
test_sample_from_overlap_model -> get_session_overlap_mean;
test_sample_from_overlap_model -> sample_from_overlap_model;
test_sample_from_overlap_model -> type;
test_sample_from_silence_model -> parametrize;
test_sample_from_silence_model -> get_session_silence_mean;
test_sample_from_silence_model -> sample_from_silence_model;
test_sample_from_silence_model -> type;
test_sample_noise_manifest -> with_downloads;
test_sample_noise_manifest -> parametrize;
test_sample_noise_manifest -> abspath;
test_sample_noise_manifest -> read_noise_manifest;
test_sample_noise_manifest -> sample_noise_manifest;
test_sample_noise_manifest -> join;
test_sample_noise_manifest -> len;
test_silence_vs_overlap_selector -> parametrize;
test_silence_vs_overlap_selector -> silence_vs_overlap_selector;
test_silence_vs_overlap_selector -> type;
get_simple_rttm_without_overlap -> open;
get_simple_rttm_without_overlap -> write;
get_simple_rttm_with_overlap -> open;
get_simple_rttm_with_overlap -> write;
get_simple_rttm_with_silence -> open;
get_simple_rttm_with_silence -> write;
test_align_label_logits -> parametrize;
test_align_label_logits -> tolist;
test_align_label_logits -> align_labels_to_frames;
test_align_label_logits -> len;
test_align_label_logits -> arange;
test_load_speech_segments_from_rttm -> get_simple_rttm_without_overlap;
test_load_speech_segments_from_rttm -> load_speech_segments_from_rttm;
test_load_speech_overlap_segments_from_rttm -> get_simple_rttm_with_overlap;
test_load_speech_overlap_segments_from_rttm -> load_speech_overlap_segments_from_rttm;
test_get_nonspeech_segments -> get_simple_rttm_with_silence;
test_get_nonspeech_segments -> load_speech_segments_from_rttm;
test_get_nonspeech_segments -> get_nonspeech_segments;
test_get_frame_labels -> get_simple_rttm_without_overlap;
test_get_frame_labels -> load_speech_segments_from_rttm;
test_get_frame_labels -> get_frame_labels;
test_get_frame_labels -> len;
test_convert_labels_to_speech_segments -> get_simple_rttm_without_overlap;
test_convert_labels_to_speech_segments -> load_speech_segments_from_rttm;
test_convert_labels_to_speech_segments -> get_frame_labels;
test_convert_labels_to_speech_segments -> convert_labels_to_speech_segments;
test_read_rttm_as_pyannote_object -> get_simple_rttm_without_overlap;
test_read_rttm_as_pyannote_object -> read_rttm_as_pyannote_object;
test_read_rttm_as_pyannote_object -> Annotation;
test_read_rttm_as_pyannote_object -> Segment;
test_frame_vad_construct_pyannote_object_per_file -> get_simple_rttm_without_overlap;
test_frame_vad_construct_pyannote_object_per_file -> frame_vad_construct_pyannote_object_per_file;
test_frame_vad_construct_pyannote_object_per_file -> Annotation;
test_frame_vad_construct_pyannote_object_per_file -> load_speech_segments_from_rttm;
test_frame_vad_construct_pyannote_object_per_file -> get_frame_labels;
test_frame_vad_construct_pyannote_object_per_file -> convert_labels_to_speech_segments;
test_frame_vad_construct_pyannote_object_per_file -> Segment;
test_list_to_multichannel -> parametrize;
test_list_to_multichannel -> default_rng;
test_list_to_multichannel -> normal;
test_list_to_multichannel -> all;
test_list_to_multichannel -> range;
test_list_to_multichannel -> list_to_multichannel;
test_processor_process_audio -> parametrize;
test_processor_process_audio -> ASRAudioProcessor;
test_processor_process_audio -> range;
test_processor_process_audio -> process_audio;
test_processor_process_audio -> randn;
test_processor_process_audio -> allclose;
test_processor_process_audio -> max;
test_processor_process_audio -> abs;
test_audio_collate_fn -> default_rng;
test_audio_collate_fn -> range;
test_audio_collate_fn -> _audio_collate_fn;
test_audio_collate_fn -> items;
test_audio_collate_fn -> integers;
test_audio_collate_fn -> dict;
test_audio_collate_fn -> append;
test_audio_collate_fn -> numpy;
test_audio_collate_fn -> normal;
test_audio_collate_fn -> squeeze;
test_audio_collate_fn -> tensor;
test_audio_collate_fn -> allclose;
test_audio_collate_fn -> detach;
test_audio_collate_fn -> cpu;
test_audio_to_target_dataset -> default_rng;
test_audio_to_target_dataset -> round;
test_audio_to_target_dataset -> astype;
test_audio_to_target_dataset -> dict;
test_audio_to_target_dataset -> items;
test_audio_to_target_dataset -> uniform;
test_audio_to_target_dataset -> range;
test_audio_to_target_dataset -> TemporaryDirectory;
test_audio_to_target_dataset -> join;
test_audio_to_target_dataset -> write_manifest;
test_audio_to_target_dataset -> AudioToTargetDataset;
test_audio_to_target_dataset -> get_audio_to_target_dataset;
test_audio_to_target_dataset -> replace;
test_audio_to_target_dataset -> convert_manifest_nemo_to_lhotse;
test_audio_to_target_dataset -> get_lhotse_dataloader_from_config;
test_audio_to_target_dataset -> int;
test_audio_to_target_dataset -> floor;
test_audio_to_target_dataset -> append;
test_audio_to_target_dataset -> create;
test_audio_to_target_dataset -> len;
test_audio_to_target_dataset -> __getitem__;
test_audio_to_target_dataset -> enumerate;
test_audio_to_target_dataset -> write;
test_audio_to_target_dataset -> LhotseAudioToTargetDataset;
test_audio_to_target_dataset -> num_channels;
test_audio_to_target_dataset -> numpy;
test_audio_to_target_dataset -> allclose;
test_audio_to_target_dataset -> next;
test_audio_to_target_dataset -> collate_fn;
test_audio_to_target_dataset -> keys;
test_audio_to_target_dataset -> isinstance;
test_audio_to_target_dataset -> all;
test_audio_to_target_dataset -> iter;
test_audio_to_target_dataset -> squeeze;
test_audio_to_target_dataset -> detach;
test_audio_to_target_dataset -> get_segment_start;
test_audio_to_target_dataset -> cpu;
test_audio_to_target_dataset_with_target_list -> default_rng;
test_audio_to_target_dataset_with_target_list -> round;
test_audio_to_target_dataset_with_target_list -> astype;
test_audio_to_target_dataset_with_target_list -> dict;
test_audio_to_target_dataset_with_target_list -> items;
test_audio_to_target_dataset_with_target_list -> uniform;
test_audio_to_target_dataset_with_target_list -> range;
test_audio_to_target_dataset_with_target_list -> TemporaryDirectory;
test_audio_to_target_dataset_with_target_list -> join;
test_audio_to_target_dataset_with_target_list -> write_manifest;
test_audio_to_target_dataset_with_target_list -> AudioToTargetDataset;
test_audio_to_target_dataset_with_target_list -> get_audio_to_target_dataset;
test_audio_to_target_dataset_with_target_list -> replace;
test_audio_to_target_dataset_with_target_list -> convert_manifest_nemo_to_lhotse;
test_audio_to_target_dataset_with_target_list -> get_lhotse_dataloader_from_config;
test_audio_to_target_dataset_with_target_list -> floor;
test_audio_to_target_dataset_with_target_list -> append;
test_audio_to_target_dataset_with_target_list -> create;
test_audio_to_target_dataset_with_target_list -> __getitem__;
test_audio_to_target_dataset_with_target_list -> LhotseAudioToTargetDataset;
test_audio_to_target_dataset_with_target_list -> numpy;
test_audio_to_target_dataset_with_target_list -> allclose;
test_audio_to_target_dataset_with_target_list -> write;
test_audio_to_target_dataset_with_target_list -> concatenate;
test_audio_to_target_dataset_with_target_list -> squeeze;
test_audio_to_target_dataset_with_target_list -> detach;
test_audio_to_target_dataset_with_target_list -> cpu;
test_audio_to_target_dataset_for_inference -> default_rng;
test_audio_to_target_dataset_for_inference -> round;
test_audio_to_target_dataset_for_inference -> astype;
test_audio_to_target_dataset_for_inference -> dict;
test_audio_to_target_dataset_for_inference -> items;
test_audio_to_target_dataset_for_inference -> uniform;
test_audio_to_target_dataset_for_inference -> range;
test_audio_to_target_dataset_for_inference -> TemporaryDirectory;
test_audio_to_target_dataset_for_inference -> join;
test_audio_to_target_dataset_for_inference -> write_manifest;
test_audio_to_target_dataset_for_inference -> AudioToTargetDataset;
test_audio_to_target_dataset_for_inference -> get_audio_to_target_dataset;
test_audio_to_target_dataset_for_inference -> replace;
test_audio_to_target_dataset_for_inference -> convert_manifest_nemo_to_lhotse;
test_audio_to_target_dataset_for_inference -> get_lhotse_dataloader_from_config;
test_audio_to_target_dataset_for_inference -> floor;
test_audio_to_target_dataset_for_inference -> append;
test_audio_to_target_dataset_for_inference -> create;
test_audio_to_target_dataset_for_inference -> write;
test_audio_to_target_dataset_for_inference -> LhotseAudioToTargetDataset;
test_audio_to_target_dataset_for_inference -> __getitem__;
test_audio_to_target_dataset_for_inference -> allclose;
test_audio_to_target_dataset_for_inference -> numel;
test_audio_to_target_dataset_for_inference -> squeeze;
test_audio_to_target_dataset_for_inference -> ValueError;
test_audio_to_target_with_reference_dataset -> default_rng;
test_audio_to_target_with_reference_dataset -> round;
test_audio_to_target_with_reference_dataset -> astype;
test_audio_to_target_with_reference_dataset -> dict;
test_audio_to_target_with_reference_dataset -> items;
test_audio_to_target_with_reference_dataset -> uniform;
test_audio_to_target_with_reference_dataset -> range;
test_audio_to_target_with_reference_dataset -> TemporaryDirectory;
test_audio_to_target_with_reference_dataset -> join;
test_audio_to_target_with_reference_dataset -> write_manifest;
test_audio_to_target_with_reference_dataset -> AudioToTargetWithReferenceDataset;
test_audio_to_target_with_reference_dataset -> get_audio_to_target_with_reference_dataset;
test_audio_to_target_with_reference_dataset -> int;
test_audio_to_target_with_reference_dataset -> collate_fn;
test_audio_to_target_with_reference_dataset -> floor;
test_audio_to_target_with_reference_dataset -> append;
test_audio_to_target_with_reference_dataset -> __getitem__;
test_audio_to_target_with_reference_dataset -> len;
test_audio_to_target_with_reference_dataset -> write;
test_audio_to_target_with_reference_dataset -> numpy;
test_audio_to_target_with_reference_dataset -> allclose;
test_audio_to_target_with_reference_dataset -> enumerate;
test_audio_to_target_with_reference_dataset -> get_segment_start;
test_audio_to_target_with_reference_dataset -> detach;
test_audio_to_target_with_reference_dataset -> cpu;
test_audio_to_target_with_embedding_dataset -> default_rng;
test_audio_to_target_with_embedding_dataset -> round;
test_audio_to_target_with_embedding_dataset -> astype;
test_audio_to_target_with_embedding_dataset -> dict;
test_audio_to_target_with_embedding_dataset -> items;
test_audio_to_target_with_embedding_dataset -> uniform;
test_audio_to_target_with_embedding_dataset -> range;
test_audio_to_target_with_embedding_dataset -> TemporaryDirectory;
test_audio_to_target_with_embedding_dataset -> join;
test_audio_to_target_with_embedding_dataset -> write_manifest;
test_audio_to_target_with_embedding_dataset -> AudioToTargetWithEmbeddingDataset;
test_audio_to_target_with_embedding_dataset -> get_audio_to_target_with_embedding_dataset;
test_audio_to_target_with_embedding_dataset -> collate_fn;
test_audio_to_target_with_embedding_dataset -> floor;
test_audio_to_target_with_embedding_dataset -> append;
test_audio_to_target_with_embedding_dataset -> __getitem__;
test_audio_to_target_with_embedding_dataset -> numpy;
test_audio_to_target_with_embedding_dataset -> allclose;
test_audio_to_target_with_embedding_dataset -> save;
test_audio_to_target_with_embedding_dataset -> write;
test_audio_to_target_with_embedding_dataset -> detach;
test_audio_to_target_with_embedding_dataset -> cpu;
test_check_angle -> default_rng;
test_check_angle -> check_angle;
test_check_angle -> raises;
test_check_angle -> uniform;
test_wrap_to_180 -> append;
test_wrap_to_180 -> wrap_to_180;
test_placement_range -> append;
test_placement_range -> convert_placement_to_range;
test_placement_range -> all;
test_placement_range -> raises;
test_placement_range -> array;
test_convert_rir_to_mc -> parametrize;
test_convert_rir_to_mc -> default_rng;
test_convert_rir_to_mc -> range;
test_convert_rir_to_mc -> convert_rir_to_multichannel;
test_convert_rir_to_mc -> append;
test_convert_rir_to_mc -> randint;
test_convert_rir_to_mc -> all;
test_convert_rir_to_mc -> rand;
test_array_geometry -> parametrize;
test_array_geometry -> default_rng;
test_array_geometry -> zeros;
test_array_geometry -> mean;
test_array_geometry -> ArrayGeometry;
test_array_geometry -> uniform;
test_array_geometry -> translate;
test_array_geometry -> append;
test_array_geometry -> array;
test_array_geometry -> arange;
test_array_geometry -> max;
test_array_geometry -> new_rotated_array;
test_array_geometry -> spherical_relative_to_array;
test_array_geometry -> abs;
test_array_geometry -> norm;
test_array_geometry -> vstack;
test_array_geometry -> wrap_to_180;
test_simulate_room_mix -> join;
test_simulate_room_mix -> rand;
test_simulate_room_mix -> TemporaryDirectory;
test_simulate_room_mix -> simulate_room_mix;
test_simulate_room_mix -> from_file;
test_simulate_room_mix -> max;
test_simulate_room_mix -> abs;
test_calculate_mean -> parametrize;
test_calculate_mean -> Generator;
test_calculate_mean -> manual_seed;
test_calculate_mean -> range;
test_calculate_mean -> randn;
test_calculate_mean -> randint;
test_calculate_mean -> zeros;
test_calculate_mean -> calculate_mean;
test_calculate_mean -> raises;
test_calculate_mean -> mean;
test_calculate_mean -> allclose;
test_calculate_sdr_scale_and_convolution_invariant -> randn;
test_calculate_sdr_scale_and_convolution_invariant -> raises;
test_calculate_sdr_scale_and_convolution_invariant -> calculate_sdr_batch;
test_calculate_mse_input_and_mask -> randn;
test_calculate_mse_input_and_mask -> tensor;
test_calculate_mse_input_and_mask -> ones;
test_calculate_mse_input_and_mask -> raises;
test_calculate_mse_input_and_mask -> calculate_mse_batch;
test_calculate_mse_invalid_dimensions -> randn;
test_calculate_mse_invalid_dimensions -> raises;
test_calculate_mse_invalid_dimensions -> calculate_mse_batch;
test_calculate_mae_input_and_mask -> randn;
test_calculate_mae_input_and_mask -> tensor;
test_calculate_mae_input_and_mask -> ones;
test_calculate_mae_input_and_mask -> raises;
test_calculate_mae_input_and_mask -> calculate_mae_batch;
test_calculate_mae_invalid_dimensions -> randn;
test_calculate_mae_invalid_dimensions -> raises;
test_calculate_mae_invalid_dimensions -> calculate_mae_batch;
test_sdr -> parametrize;
test_sdr -> default_rng;
test_sdr -> SDRLoss;
test_sdr -> range;
test_sdr -> normal;
test_sdr -> uniform;
test_sdr -> tensor;
test_sdr -> zeros;
test_sdr -> calculate_sdr_batch;
test_sdr -> sdr_loss;
test_sdr -> allclose;
test_sdr -> isclose;
test_sdr -> numpy;
test_sdr -> calculate_sdr_numpy;
test_sdr -> mean;
test_sdr -> detach;
test_sdr -> cpu;
test_sdr_weighted -> parametrize;
test_sdr_weighted -> default_rng;
test_sdr_weighted -> uniform;
test_sdr_weighted -> SDRLoss;
test_sdr_weighted -> range;
test_sdr_weighted -> sum;
test_sdr_weighted -> normal;
test_sdr_weighted -> tensor;
test_sdr_weighted -> sdr_loss;
test_sdr_weighted -> allclose;
test_sdr_weighted -> numpy;
test_sdr_weighted -> calculate_sdr_numpy;
test_sdr_weighted -> array;
test_sdr_weighted -> detach;
test_sdr_weighted -> cpu;
test_sdr_input_length -> parametrize;
test_sdr_input_length -> default_rng;
test_sdr_input_length -> SDRLoss;
test_sdr_input_length -> range;
test_sdr_input_length -> normal;
test_sdr_input_length -> integers;
test_sdr_input_length -> tensor;
test_sdr_input_length -> enumerate;
test_sdr_input_length -> sdr_loss;
test_sdr_input_length -> allclose;
test_sdr_input_length -> uniform;
test_sdr_input_length -> mean;
test_sdr_input_length -> numpy;
test_sdr_input_length -> calculate_sdr_numpy;
test_sdr_input_length -> array;
test_sdr_input_length -> detach;
test_sdr_input_length -> cpu;
test_sdr_scale_invariant -> parametrize;
test_sdr_scale_invariant -> default_rng;
test_sdr_scale_invariant -> SDRLoss;
test_sdr_scale_invariant -> range;
test_sdr_scale_invariant -> normal;
test_sdr_scale_invariant -> integers;
test_sdr_scale_invariant -> tensor;
test_sdr_scale_invariant -> enumerate;
test_sdr_scale_invariant -> sdr_loss;
test_sdr_scale_invariant -> allclose;
test_sdr_scale_invariant -> uniform;
test_sdr_scale_invariant -> mean;
test_sdr_scale_invariant -> numpy;
test_sdr_scale_invariant -> calculate_sdr_numpy;
test_sdr_scale_invariant -> array;
test_sdr_scale_invariant -> detach;
test_sdr_scale_invariant -> cpu;
test_sdr_binary_mask -> parametrize;
test_sdr_binary_mask -> default_rng;
test_sdr_binary_mask -> SDRLoss;
test_sdr_binary_mask -> range;
test_sdr_binary_mask -> normal;
test_sdr_binary_mask -> integers;
test_sdr_binary_mask -> tensor;
test_sdr_binary_mask -> sdr_loss;
test_sdr_binary_mask -> allclose;
test_sdr_binary_mask -> uniform;
test_sdr_binary_mask -> mean;
test_sdr_binary_mask -> numpy;
test_sdr_binary_mask -> calculate_sdr_numpy;
test_sdr_binary_mask -> array;
test_sdr_binary_mask -> detach;
test_sdr_binary_mask -> cpu;
test_sdr_max -> parametrize;
test_sdr_max -> default_rng;
test_sdr_max -> SDRLoss;
test_sdr_max -> range;
test_sdr_max -> normal;
test_sdr_max -> integers;
test_sdr_max -> tensor;
test_sdr_max -> enumerate;
test_sdr_max -> sdr_loss;
test_sdr_max -> allclose;
test_sdr_max -> uniform;
test_sdr_max -> mean;
test_sdr_max -> numpy;
test_sdr_max -> calculate_sdr_numpy;
test_sdr_max -> array;
test_sdr_max -> detach;
test_sdr_max -> cpu;
test_target_calculation -> parametrize;
test_target_calculation -> default_rng;
test_target_calculation -> range;
test_target_calculation -> normal;
test_target_calculation -> integers;
test_target_calculation -> zeros;
test_target_calculation -> scale_invariant_target;
test_target_calculation -> convolution_invariant_target;
test_target_calculation -> uniform;
test_target_calculation -> allclose;
test_target_calculation -> raises;
test_target_calculation -> tensor;
test_target_calculation -> scale_invariant_target_numpy;
test_target_calculation -> convolution_invariant_target_numpy;
test_target_calculation -> numpy;
test_target_calculation -> detach;
test_target_calculation -> cpu;
test_sdr_convolution_invariant -> parametrize;
test_sdr_convolution_invariant -> default_rng;
test_sdr_convolution_invariant -> SDRLoss;
test_sdr_convolution_invariant -> range;
test_sdr_convolution_invariant -> normal;
test_sdr_convolution_invariant -> integers;
test_sdr_convolution_invariant -> sdr_loss;
test_sdr_convolution_invariant -> enumerate;
test_sdr_convolution_invariant -> allclose;
test_sdr_convolution_invariant -> uniform;
test_sdr_convolution_invariant -> mean;
test_sdr_convolution_invariant -> numpy;
test_sdr_convolution_invariant -> tensor;
test_sdr_convolution_invariant -> calculate_sdr_numpy;
test_sdr_convolution_invariant -> array;
test_sdr_convolution_invariant -> detach;
test_sdr_convolution_invariant -> cpu;
test_sdr_scale_and_convolution_invariant -> raises;
test_sdr_scale_and_convolution_invariant -> SDRLoss;
test_sdr_length_and_mask -> randn;
test_sdr_length_and_mask -> tensor;
test_sdr_length_and_mask -> ones;
test_sdr_length_and_mask -> SDRLoss;
test_sdr_length_and_mask -> raises;
test_sdr_length_and_mask -> sdr_loss;
test_sdr_invalid_weight -> raises;
test_sdr_invalid_weight -> SDRLoss;
test_sdr_invalid_reduction -> raises;
test_sdr_invalid_reduction -> SDRLoss;
test_mse -> parametrize;
test_mse -> MSELoss;
test_mse -> default_rng;
test_mse -> range;
test_mse -> normal;
test_mse -> uniform;
test_mse -> tensor;
test_mse -> zeros;
test_mse -> calculate_mse_batch;
test_mse -> mse_loss;
test_mse -> allclose;
test_mse -> isclose;
test_mse -> numpy;
test_mse -> mean;
test_mse -> detach;
test_mse -> abs;
test_mse -> cpu;
test_mse_weighted -> parametrize;
test_mse_weighted -> default_rng;
test_mse_weighted -> uniform;
test_mse_weighted -> MSELoss;
test_mse_weighted -> range;
test_mse_weighted -> sum;
test_mse_weighted -> normal;
test_mse_weighted -> tensor;
test_mse_weighted -> mse_loss;
test_mse_weighted -> allclose;
test_mse_weighted -> numpy;
test_mse_weighted -> mean;
test_mse_weighted -> array;
test_mse_weighted -> detach;
test_mse_weighted -> abs;
test_mse_weighted -> cpu;
test_mse_input_length -> parametrize;
test_mse_input_length -> default_rng;
test_mse_input_length -> MSELoss;
test_mse_input_length -> range;
test_mse_input_length -> normal;
test_mse_input_length -> integers;
test_mse_input_length -> tensor;
test_mse_input_length -> enumerate;
test_mse_input_length -> mse_loss;
test_mse_input_length -> allclose;
test_mse_input_length -> uniform;
test_mse_input_length -> mean;
test_mse_input_length -> numpy;
test_mse_input_length -> array;
test_mse_input_length -> detach;
test_mse_input_length -> abs;
test_mse_input_length -> cpu;
test_mse_invalid_weight -> raises;
test_mse_invalid_weight -> MSELoss;
test_mse_invalid_reduction -> raises;
test_mse_invalid_reduction -> MSELoss;
test_mse_invalid_ndim -> raises;
test_mse_invalid_ndim -> MSELoss;
test_mae -> parametrize;
test_mae -> MAELoss;
test_mae -> default_rng;
test_mae -> range;
test_mae -> normal;
test_mae -> uniform;
test_mae -> tensor;
test_mae -> zeros;
test_mae -> mae_loss;
test_mae -> allclose;
test_mae -> numpy;
test_mae -> mean;
test_mae -> abs;
test_mae -> detach;
test_mae -> cpu;
test_mae_weighted -> parametrize;
test_mae_weighted -> default_rng;
test_mae_weighted -> uniform;
test_mae_weighted -> MAELoss;
test_mae_weighted -> range;
test_mae_weighted -> sum;
test_mae_weighted -> normal;
test_mae_weighted -> tensor;
test_mae_weighted -> mae_loss;
test_mae_weighted -> allclose;
test_mae_weighted -> numpy;
test_mae_weighted -> mean;
test_mae_weighted -> abs;
test_mae_weighted -> array;
test_mae_weighted -> detach;
test_mae_weighted -> cpu;
test_mae_input_length -> parametrize;
test_mae_input_length -> default_rng;
test_mae_input_length -> MAELoss;
test_mae_input_length -> range;
test_mae_input_length -> normal;
test_mae_input_length -> integers;
test_mae_input_length -> tensor;
test_mae_input_length -> enumerate;
test_mae_input_length -> mae_loss;
test_mae_input_length -> allclose;
test_mae_input_length -> uniform;
test_mae_input_length -> mean;
test_mae_input_length -> numpy;
test_mae_input_length -> array;
test_mae_input_length -> abs;
test_mae_input_length -> detach;
test_mae_input_length -> cpu;
test_mae_invalid_weight -> raises;
test_mae_invalid_weight -> MAELoss;
test_mae_invalid_reduction -> raises;
test_mae_invalid_reduction -> MAELoss;
test_mae_invalid_ndim -> raises;
test_mae_invalid_ndim -> MAELoss;
test_maxine_combined_loss -> skipif;
test_maxine_combined_loss -> join;
test_maxine_combined_loss -> device;
test_maxine_combined_loss -> to;
test_maxine_combined_loss -> tensor;
test_maxine_combined_loss -> reshape;
test_maxine_combined_loss -> cpu;
test_maxine_combined_loss -> allclose;
test_maxine_combined_loss -> fromfile;
test_maxine_combined_loss -> is_available;
test_maxine_combined_loss -> CombinedLoss;
test_maxine_combined_loss -> repeat;
test_maxine_combined_loss -> forward;
test_maxine_combined_loss -> zeros;
maxine_model_fixture -> fixture;
maxine_model_fixture -> DictConfig;
maxine_model_fixture -> BNR2;
test_forward_infer -> skipif;
test_forward_infer -> parametrize;
test_forward_infer -> eval;
test_forward_infer -> to_config_dict;
test_forward_infer -> randn;
test_forward_infer -> max;
test_forward_infer -> no_grad;
test_forward_infer -> range;
test_forward_infer -> cat;
test_forward_infer -> forward;
test_forward_infer -> abs;
test_forward_infer -> size;
test_forward_infer -> append;
test_forward_infer -> Generator;
test_forward_infer -> manual_seed;
test_forward_infer -> ones;
test_forward_infer -> randint;
test_forward_infer -> mean;
test_forward_infer -> forward_infer;
test_metric_full_batch -> SignalNoiseRatio;
test_metric_full_batch -> AudioMetricWrapper;
test_metric_full_batch -> range;
test_metric_full_batch -> allclose;
test_metric_full_batch -> reset;
test_metric_full_batch -> rand;
test_metric_full_batch -> wrapped_metric;
test_metric_full_batch -> ref_metric;
test_metric_full_batch -> compute;
test_input_length -> SignalNoiseRatio;
test_input_length -> AudioMetricWrapper;
test_input_length -> range;
test_input_length -> allclose;
test_input_length -> reset;
test_input_length -> rand;
test_input_length -> randint;
test_input_length -> wrapped_metric;
test_input_length -> enumerate;
test_input_length -> compute;
test_input_length -> ref_metric;
test_channel -> parametrize;
test_channel -> SignalNoiseRatio;
test_channel -> AudioMetricWrapper;
test_channel -> range;
test_channel -> allclose;
test_channel -> reset;
test_channel -> rand;
test_channel -> randint;
test_channel -> wrapped_metric;
test_channel -> enumerate;
test_channel -> compute;
test_channel -> ref_metric;
test_squim_mos -> parametrize;
test_squim_mos -> SquimMOSMetric;
test_squim_mos -> Resample;
test_squim_mos -> get_model;
test_squim_mos -> tensor;
test_squim_mos -> range;
test_squim_mos -> allclose;
test_squim_mos -> squim_mos_model;
test_squim_mos -> randn;
test_squim_mos -> update;
test_squim_mos -> calculate_squim_mos;
test_squim_mos -> sum;
test_squim_mos -> compute;
test_squim_mos -> raises;
test_squim_mos -> resampler;
calculate_squim_mos -> squim_mos_model;
calculate_squim_mos -> resampler;
test_squim_objective -> parametrize;
test_squim_objective -> SquimObjectiveMetric;
test_squim_objective -> Resample;
test_squim_objective -> get_model;
test_squim_objective -> tensor;
test_squim_objective -> range;
test_squim_objective -> allclose;
test_squim_objective -> squim_objective_model;
test_squim_objective -> randn;
test_squim_objective -> update;
test_squim_objective -> calculate_squim_objective;
test_squim_objective -> sum;
test_squim_objective -> compute;
test_squim_objective -> raises;
test_squim_objective -> resampler;
test_squim_objective -> ValueError;
calculate_squim_objective -> squim_objective_model;
calculate_squim_objective -> resampler;
calculate_squim_objective -> ValueError;
convert_to_dictconfig -> isinstance;
convert_to_dictconfig -> DictConfig;
convert_to_dictconfig -> convert_to_dictconfig;
convert_to_dictconfig -> items;
flow_matching_base_config -> fixture;
test_flow_matching_model_init -> convert_to_dictconfig;
test_flow_matching_model_init -> FlowMatchingAudioToAudioModel;
test_flow_matching_model_init -> isinstance;
mock_dataset_config -> fixture;
mock_dataset_config -> range;
mock_dataset_config -> randn;
mock_dataset_config -> write;
mock_dataset_config -> open_writer;
mock_dataset_config -> NotImplementedError;
mock_dataset_config -> from_file;
mock_dataset_config -> MonoCut;
mock_dataset_config -> str;
mock_dataset_config -> open;
mock_dataset_config -> dumps;
flow_matching_model -> fixture;
flow_matching_model -> fork_rng;
flow_matching_model -> manual_seed;
flow_matching_model -> FlowMatchingAudioToAudioModel;
flow_matching_model -> convert_to_dictconfig;
flow_matching_model_with_trainer_and_mock_dataset -> fixture;
flow_matching_model_with_trainer_and_mock_dataset -> convert_to_dictconfig;
flow_matching_model_with_trainer_and_mock_dataset -> Trainer;
flow_matching_model_with_trainer_and_mock_dataset -> fork_rng;
flow_matching_model_with_trainer_and_mock_dataset -> manual_seed;
flow_matching_model_with_trainer_and_mock_dataset -> FlowMatchingAudioToAudioModel;
test_flow_matching_model_forward -> parametrize;
test_flow_matching_model_forward -> eval;
test_flow_matching_model_forward -> to_config_dict;
test_flow_matching_model_forward -> Generator;
test_flow_matching_model_forward -> manual_seed;
test_flow_matching_model_forward -> randn;
test_flow_matching_model_forward -> all;
test_flow_matching_model_forward -> ones;
test_flow_matching_model_forward -> no_grad;
test_flow_matching_model_forward -> forward_eval;
test_flow_matching_model_forward -> forward;
test_flow_matching_model_step -> train;
test_flow_matching_model_step -> islice;
test_flow_matching_model_step -> isinstance;
test_flow_matching_model_step -> _step;
test_flow_matching_model_step -> backward;
test_flow_matching_model_step -> get;
test_flow_matching_model_step -> rearrange;
test_flow_matching_model_training -> train;
test_flow_matching_model_training -> fit;
mask_model_rnn_params -> fixture;
mask_model_rnn_params -> DictConfig;
mask_model_rnn -> fixture;
mask_model_rnn -> fork_rng;
mask_model_rnn -> manual_seed;
mask_model_rnn -> EncMaskDecAudioToAudioModel;
mask_model_rnn_with_trainer_and_mock_dataset -> fixture;
mask_model_rnn_with_trainer_and_mock_dataset -> Trainer;
mask_model_rnn_with_trainer_and_mock_dataset -> fork_rng;
mask_model_rnn_with_trainer_and_mock_dataset -> manual_seed;
mask_model_rnn_with_trainer_and_mock_dataset -> EncMaskDecAudioToAudioModel;
mask_model_flexarray -> fixture;
mask_model_flexarray -> DictConfig;
mask_model_flexarray -> EncMaskDecAudioToAudioModel;
bf_model_flexarray -> fixture;
bf_model_flexarray -> to_config_dict;
bf_model_flexarray -> EncMaskDecAudioToAudioModel;
test_model_training -> train;
test_model_training -> fit;
predictive_model_ncsn -> fixture;
predictive_model_ncsn -> DictConfig;
predictive_model_ncsn -> fork_rng;
predictive_model_ncsn -> manual_seed;
predictive_model_ncsn -> PredictiveAudioToAudioModel;
predictive_model_conformer -> fixture;
predictive_model_conformer -> DictConfig;
predictive_model_conformer -> fork_rng;
predictive_model_conformer -> manual_seed;
predictive_model_conformer -> PredictiveAudioToAudioModel;
predictive_model_streaming_conformer -> fixture;
predictive_model_streaming_conformer -> DictConfig;
predictive_model_streaming_conformer -> fork_rng;
predictive_model_streaming_conformer -> manual_seed;
predictive_model_streaming_conformer -> PredictiveAudioToAudioModel;
predictive_model_transformer_unet_params_base -> fixture;
predictive_model_transformer_unet_params_base -> DictConfig;
predictive_model_transformer_unet_params -> getattr;
predictive_model_transformer_unet_params -> items;
predictive_model_transformer_unet_params -> isinstance;
predictive_model_transformer_unet -> fixture;
predictive_model_transformer_unet -> fork_rng;
predictive_model_transformer_unet -> manual_seed;
predictive_model_transformer_unet -> PredictiveAudioToAudioModel;
predictive_model_transformer_unet_with_trainer_and_mock_dataset -> fixture;
predictive_model_transformer_unet_with_trainer_and_mock_dataset -> Trainer;
predictive_model_transformer_unet_with_trainer_and_mock_dataset -> fork_rng;
predictive_model_transformer_unet_with_trainer_and_mock_dataset -> manual_seed;
predictive_model_transformer_unet_with_trainer_and_mock_dataset -> PredictiveAudioToAudioModel;
test_adaptive_rms_ebabled_fails -> parametrize;
test_adaptive_rms_ebabled_fails -> eval;
test_adaptive_rms_ebabled_fails -> to_config_dict;
test_adaptive_rms_ebabled_fails -> Generator;
test_adaptive_rms_ebabled_fails -> manual_seed;
test_adaptive_rms_ebabled_fails -> randn;
test_adaptive_rms_ebabled_fails -> ones;
test_adaptive_rms_ebabled_fails -> raises;
test_adaptive_rms_ebabled_fails -> no_grad;
test_adaptive_rms_ebabled_fails -> forward;
schroedinger_bridge_model_ncsn_params -> fixture;
schroedinger_bridge_model_ncsn_params -> DictConfig;
schroedinger_bridge_model_ncsn -> fixture;
schroedinger_bridge_model_ncsn -> fork_rng;
schroedinger_bridge_model_ncsn -> manual_seed;
schroedinger_bridge_model_ncsn -> SchroedingerBridgeAudioToAudioModel;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset -> fixture;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset -> Trainer;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset -> fork_rng;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset -> manual_seed;
schroedinger_bridge_model_ncsn_with_trainer_and_mock_dataset -> SchroedingerBridgeAudioToAudioModel;
test_score_based_model_init -> convert_to_dictconfig;
test_score_based_model_init -> ScoreBasedGenerativeAudioToAudioModel;
test_score_based_model_init -> isinstance;
score_based_model -> fixture;
score_based_model -> fork_rng;
score_based_model -> manual_seed;
score_based_model -> ScoreBasedGenerativeAudioToAudioModel;
score_based_model -> convert_to_dictconfig;
score_based_model_with_trainer_and_mock_dataset -> fixture;
score_based_model_with_trainer_and_mock_dataset -> convert_to_dictconfig;
score_based_model_with_trainer_and_mock_dataset -> Trainer;
score_based_model_with_trainer_and_mock_dataset -> fork_rng;
score_based_model_with_trainer_and_mock_dataset -> manual_seed;
score_based_model_with_trainer_and_mock_dataset -> ScoreBasedGenerativeAudioToAudioModel;
test_score_based_model_forward -> parametrize;
test_score_based_model_forward -> eval;
test_score_based_model_forward -> to_config_dict;
test_score_based_model_forward -> Generator;
test_score_based_model_forward -> manual_seed;
test_score_based_model_forward -> randn;
test_score_based_model_forward -> all;
test_score_based_model_forward -> ones;
test_score_based_model_forward -> no_grad;
test_score_based_model_forward -> forward;
test_score_based_model_step -> train;
test_score_based_model_step -> islice;
test_score_based_model_step -> isinstance;
test_score_based_model_step -> _step;
test_score_based_model_step -> backward;
test_score_based_model_step -> get;
test_score_based_model_step -> rearrange;
test_score_based_model_training -> train;
test_score_based_model_training -> fit;
test_magnitude -> parametrize;
test_magnitude -> default_rng;
test_magnitude -> AudioToSpectrogram;
test_magnitude -> SpectrogramToMultichannelFeatures;
test_magnitude -> range;
test_magnitude -> normal;
test_magnitude -> audio2spec;
test_magnitude -> spec2feat;
test_magnitude -> numpy;
test_magnitude -> allclose;
test_magnitude -> abs;
test_magnitude -> power;
test_magnitude -> Tensor;
test_magnitude -> detach;
test_magnitude -> sqrt;
test_magnitude -> mean;
test_magnitude -> cpu;
test_magnitude -> NotImplementedError;
test_ipd -> parametrize;
test_ipd -> default_rng;
test_ipd -> AudioToSpectrogram;
test_ipd -> SpectrogramToMultichannelFeatures;
test_ipd -> range;
test_ipd -> normal;
test_ipd -> audio2spec;
test_ipd -> spec2feat;
test_ipd -> numpy;
test_ipd -> mean;
test_ipd -> allclose;
test_ipd -> angle;
test_ipd -> remainder;
test_ipd -> Tensor;
test_ipd -> detach;
test_ipd -> sqrt;
test_ipd -> cpu;
test_ipd -> maximum;
test_num_channels -> parametrize;
test_num_channels -> SpectrogramToMultichannelFeatures;
test_num_channels -> raises;
test_num_features -> parametrize;
test_num_features -> SpectrogramToMultichannelFeatures;
test_unsupported_norm -> SpectrogramToMultichannelFeatures;
test_unsupported_norm -> randn;
test_unsupported_norm -> raises;
test_unsupported_norm -> uut;
test_unsupported_norm -> Tensor;
test_mask_reference_channel -> skipif;
test_mask_reference_channel -> parametrize;
test_mask_reference_channel -> default_rng;
test_mask_reference_channel -> AudioToSpectrogram;
test_mask_reference_channel -> MaskReferenceChannel;
test_mask_reference_channel -> range;
test_mask_reference_channel -> normal;
test_mask_reference_channel -> audio2spec;
test_mask_reference_channel -> uniform;
test_mask_reference_channel -> mask_processor;
test_mask_reference_channel -> numpy;
test_mask_reference_channel -> zeros_like;
test_mask_reference_channel -> allclose;
test_mask_reference_channel -> Tensor;
test_mask_reference_channel -> tensor;
test_mask_reference_channel -> detach;
test_mask_reference_channel -> cpu;
test_wpe_convtensor -> parametrize;
test_wpe_convtensor -> default_rng;
test_wpe_convtensor -> range;
test_wpe_convtensor -> zeros;
test_wpe_convtensor -> convtensor;
test_wpe_convtensor -> permute_convtensor;
test_wpe_convtensor -> numpy;
test_wpe_convtensor -> allclose;
test_wpe_convtensor -> normal;
test_wpe_convtensor -> tensor;
test_wpe_convtensor -> convmtx_mc_numpy;
test_wpe_convtensor -> detach;
test_wpe_convtensor -> transpose;
test_wpe_convtensor -> cpu;
test_wpe_filter -> parametrize;
test_wpe_filter -> WPEFilter;
test_wpe_filter -> default_rng;
test_wpe_filter -> range;
test_wpe_filter -> tensor;
test_wpe_filter -> convtensor;
test_wpe_filter -> permute;
test_wpe_filter -> reshape;
test_wpe_filter -> matmul;
test_wpe_filter -> estimate_correlations;
test_wpe_filter -> flatten;
test_wpe_filter -> allclose;
test_wpe_filter -> solve;
test_wpe_filter -> estimate_filter;
test_wpe_filter -> apply_filter;
test_wpe_filter -> uniform;
test_wpe_filter -> conj;
test_wpe_filter -> normal;
test_wpe_filter -> transpose;
test_mask_based_dereverb_init -> parametrize;
test_mask_based_dereverb_init -> MaskBasedDereverbWPE;
test_mask_based_dereverb_init -> range;
test_mask_based_dereverb_init -> randint;
test_mask_based_dereverb_init -> rand;
test_mask_based_dereverb_init -> dereverb;
test_mask_based_dereverb_init -> equal;
test_mask_based_dereverb_init -> randn;
test_flex_channels -> skipif;
test_flex_channels -> parametrize;
test_flex_channels -> debug;
test_flex_channels -> MaskEstimatorFlexChannels;
test_flex_channels -> randn;
test_flex_channels -> randint;
test_flex_channels -> uut;
test_flex_channels -> all;
test_gss -> parametrize;
test_gss -> MaskEstimatorGSS;
test_gss -> debug;
test_gss -> randn;
test_gss -> uut;
test_masking -> parametrize;
test_masking -> SSLPretrainWithMaskedPatch;
test_masking -> Generator;
test_masking -> manual_seed;
test_masking -> randn;
test_masking -> randint;
test_masking -> range;
test_masking -> uut;
test_masking -> train;
test_masking -> eval;
test_masking -> sum;
test_masking -> abs;
test_unsupported_initialization -> raises;
test_unsupported_initialization -> SSLPretrainWithMaskedPatch;
test_mixture_consistency -> parametrize;
test_mixture_consistency -> Generator;
test_mixture_consistency -> manual_seed;
test_mixture_consistency -> MixtureConsistencyProjection;
test_mixture_consistency -> range;
test_mixture_consistency -> randn;
test_mixture_consistency -> uut;
test_mixture_consistency -> sum;
test_mixture_consistency -> allclose;
test_mixture_consistency -> pow;
test_mixture_consistency -> ValueError;
test_mixture_consistency -> abs;
test_unsupported_weighting -> MixtureConsistencyProjection;
test_unsupported_weighting -> raises;
test_unsupported_weighting -> uut;
test_unsupported_weighting -> randn;
test_unsupported_inputs -> MixtureConsistencyProjection;
test_unsupported_inputs -> raises;
test_unsupported_inputs -> uut;
test_unsupported_inputs -> randn;
test_audio_to_spec -> parametrize;
test_audio_to_spec -> default_rng;
test_audio_to_spec -> range;
test_audio_to_spec -> integers;
test_audio_to_spec -> normal;
test_audio_to_spec -> tensor;
test_audio_to_spec -> AudioToSpectrogram;
test_audio_to_spec -> audio2spec;
test_audio_to_spec -> size;
test_audio_to_spec -> allclose;
test_audio_to_spec -> max;
test_spec_to_audio -> parametrize;
test_spec_to_audio -> default_rng;
test_spec_to_audio -> range;
test_spec_to_audio -> integers;
test_spec_to_audio -> tensor;
test_spec_to_audio -> max;
test_spec_to_audio -> normal;
test_spec_to_audio -> SpectrogramToAudio;
test_spec_to_audio -> spec2audio;
test_spec_to_audio -> size;
test_spec_to_audio -> allclose;
test_spec_to_audio -> argmax;
test_spec_to_audio -> abs;
test_audio_to_spectrogram_reconstruction -> parametrize;
test_audio_to_spectrogram_reconstruction -> default_rng;
test_audio_to_spectrogram_reconstruction -> AudioToSpectrogram;
test_audio_to_spectrogram_reconstruction -> SpectrogramToAudio;
test_audio_to_spectrogram_reconstruction -> range;
test_audio_to_spectrogram_reconstruction -> normal;
test_audio_to_spectrogram_reconstruction -> audio2spec;
test_audio_to_spectrogram_reconstruction -> spec2audio;
test_audio_to_spectrogram_reconstruction -> allclose;
test_audio_to_spectrogram_reconstruction -> numpy;
test_audio_to_spectrogram_reconstruction -> Tensor;
test_audio_to_spectrogram_reconstruction -> detach;
test_audio_to_spectrogram_reconstruction -> cpu;
test_match_reference_implementation -> parametrize;
test_match_reference_implementation -> default_rng;
test_match_reference_implementation -> AudioToSpectrogram;
test_match_reference_implementation -> SpectrogramToAudio;
test_match_reference_implementation -> hann_window;
test_match_reference_implementation -> range;
test_match_reference_implementation -> stack;
test_match_reference_implementation -> rearrange;
test_match_reference_implementation -> normal;
test_match_reference_implementation -> audio2spec;
test_match_reference_implementation -> audio2spec_ref;
test_match_reference_implementation -> allclose;
test_match_reference_implementation -> spec2audio;
test_match_reference_implementation -> spec2audio_ref;
test_match_reference_implementation -> Tensor;
test_match_reference_implementation -> stft;
test_match_reference_implementation -> append;
test_match_reference_implementation -> pow;
test_match_reference_implementation -> exp;
test_match_reference_implementation -> istft;
test_match_reference_implementation -> abs;
test_match_reference_implementation -> angle;
audio2spec_ref -> range;
audio2spec_ref -> stack;
audio2spec_ref -> rearrange;
audio2spec_ref -> stft;
audio2spec_ref -> append;
audio2spec_ref -> pow;
audio2spec_ref -> exp;
audio2spec_ref -> abs;
audio2spec_ref -> angle;
spec2audio_ref -> range;
spec2audio_ref -> stack;
spec2audio_ref -> rearrange;
spec2audio_ref -> pow;
spec2audio_ref -> exp;
spec2audio_ref -> istft;
spec2audio_ref -> append;
spec2audio_ref -> abs;
spec2audio_ref -> angle;
test_invalid_length -> parametrize;
test_invalid_length -> raises;
test_invalid_length -> AudioToSpectrogram;
test_invalid_length -> SpectrogramToAudio;
test_invalid_compression -> parametrize;
test_invalid_compression -> raises;
test_invalid_compression -> AudioToSpectrogram;
test_invalid_compression -> SpectrogramToAudio;
test_invalid_spec_to_audio_input -> parametrize;
test_invalid_spec_to_audio_input -> SpectrogramToAudio;
test_invalid_spec_to_audio_input -> s2a;
test_invalid_spec_to_audio_input -> raises;
test_invalid_spec_to_audio_input -> randn;
spectrogram_ncsnpp -> fixture;
spectrogram_ncsnpp -> SpectrogramNoiseConditionalScoreNetworkPlusPlus;
spectrogram_transformerunet -> fixture;
spectrogram_transformerunet -> SpectrogramTransformerUNet;
spectrogram_conformer -> fixture;
spectrogram_conformer -> SpectrogramConformer;
mock_input_3d -> fixture;
mock_input_3d -> fork_rng;
mock_input_3d -> manual_seed;
mock_input_3d -> randn;
mock_input_3d -> randint;
mock_input_3d -> float;
mock_input_3d -> ones;
mock_input_4d -> fixture;
mock_input_4d -> fork_rng;
mock_input_4d -> manual_seed;
mock_input_4d -> randn;
mock_input_4d -> randint;
mock_input_4d -> float;
mock_input_4d -> ones;
test_ncsnpp_forward -> ncsnpp;
test_ncsnpp_forward -> all;
test_transformerunet_forward -> rearrange;
test_transformerunet_forward -> transformerunet;
test_transformerunet_forward -> float;
test_transformerunet_forward -> ones;
test_spectrogram_ncsnpp_forward -> contiguous;
test_spectrogram_ncsnpp_forward -> spectrogram_ncsnpp;
test_spectrogram_ncsnpp_forward -> all;
test_spectrogram_ncsnpp_forward -> view_as_complex;
test_spectrogram_ncsnpp_forward -> stack;
test_spectrogram_transformerunet_forward -> contiguous;
test_spectrogram_transformerunet_forward -> spectrogram_transformerunet;
test_spectrogram_transformerunet_forward -> all;
test_spectrogram_transformerunet_forward -> view_as_complex;
test_spectrogram_transformerunet_forward -> stack;
test_spectrogram_transformerunet_forward -> hasattr;
test_spectrogram_conformer_forward -> contiguous;
test_spectrogram_conformer_forward -> spectrogram_conformer;
test_spectrogram_conformer_forward -> all;
test_spectrogram_conformer_forward -> view_as_complex;
test_spectrogram_conformer_forward -> stack;
test_euler_sampler_nfe -> parametrize;
test_euler_sampler_nfe -> IdentityEstimator;
test_euler_sampler_nfe -> ForwardCounterHook;
test_euler_sampler_nfe -> register_forward_hook;
test_euler_sampler_nfe -> ConditionalFlowMatchingEulerSampler;
test_euler_sampler_nfe -> randn;
test_euler_sampler_nfe -> LongTensor;
test_euler_sampler_nfe -> forward;
test_time_generation_bounds_optimal_transport -> parametrize;
test_time_generation_bounds_optimal_transport -> Generator;
test_time_generation_bounds_optimal_transport -> manual_seed;
test_time_generation_bounds_optimal_transport -> OptimalTransportFlow;
test_time_generation_bounds_optimal_transport -> generate_time;
test_time_generation_bounds_optimal_transport -> item;
test_time_generation_bounds_optimal_transport -> all;
test_time_generation_bounds_optimal_transport_negative_examples -> parametrize;
test_time_generation_bounds_optimal_transport_negative_examples -> Generator;
test_time_generation_bounds_optimal_transport_negative_examples -> manual_seed;
test_time_generation_bounds_optimal_transport_negative_examples -> OptimalTransportFlow;
test_time_generation_bounds_optimal_transport_negative_examples -> generate_time;
test_time_generation_bounds_optimal_transport_negative_examples -> item;
test_time_generation_bounds_optimal_transport_negative_examples -> all;
test_channel_selection -> parametrize;
test_channel_selection -> ChannelAugment;
test_channel_selection -> range;
test_channel_selection -> rand;
test_channel_selection -> uut;
test_channel_selection -> size;
test_channel_selection -> allclose;
test_average -> parametrize;
test_average -> TransformAverageConcatenate;
test_average -> range;
test_average -> rand;
test_average -> uut;
test_average -> allclose;
test_average -> ChannelAveragePool;
test_average -> mean;
test_attend -> parametrize;
test_attend -> TransformAttendConcatenate;
test_attend -> range;
test_attend -> rand;
test_attend -> uut;
test_attention -> parametrize;
test_attention -> ChannelAttentionPool;
test_attention -> range;
test_attention -> rand;
test_attention -> uut;
test_theoretical_coherence_matrix -> parametrize;
test_theoretical_coherence_matrix -> zeros;
test_theoretical_coherence_matrix -> range;
test_theoretical_coherence_matrix -> theoretical_coherence;
test_theoretical_coherence_matrix -> max;
test_theoretical_coherence_matrix -> arange;
test_theoretical_coherence_matrix -> abs;
test_theoretical_coherence_matrix -> sinc;
test_theoretical_coherence_matrix -> NotImplementedError;
test_generate_approximate_noise_field -> parametrize;
test_generate_approximate_noise_field -> rand;
test_generate_approximate_noise_field -> randn;
test_generate_approximate_noise_field -> zeros;
test_generate_approximate_noise_field -> generate_approximate_noise_field;
test_generate_approximate_noise_field -> theoretical_coherence;
test_generate_approximate_noise_field -> stft;
test_generate_approximate_noise_field -> transpose;
test_generate_approximate_noise_field -> estimated_coherence;
test_generate_approximate_noise_field -> mean;
test_generate_approximate_noise_field -> arange;
test_generate_approximate_noise_field -> expanduser;
test_generate_approximate_noise_field -> fft_frequencies;
test_generate_approximate_noise_field -> figure;
test_generate_approximate_noise_field -> range;
test_generate_approximate_noise_field -> tight_layout;
test_generate_approximate_noise_field -> savefig;
test_generate_approximate_noise_field -> close;
test_generate_approximate_noise_field -> exists;
test_generate_approximate_noise_field -> mkdir;
test_generate_approximate_noise_field -> subplot;
test_generate_approximate_noise_field -> plot;
test_generate_approximate_noise_field -> title;
test_generate_approximate_noise_field -> xlabel;
test_generate_approximate_noise_field -> grid;
test_generate_approximate_noise_field -> legend;
test_generate_approximate_noise_field -> join;
test_rms -> rand;
test_rms -> linspace;
test_rms -> rms;
test_rms -> cos;
test_rms -> sqrt;
test_rms -> abs;
test_db_conversion -> rand;
test_db_conversion -> mag2db;
test_db_conversion -> all;
test_db_conversion -> abs;
test_db_conversion -> db2mag;
test_db_conversion -> pow2db;
test_get_segment_start -> default_rng;
test_get_segment_start -> range;
test_get_segment_start -> normal;
test_get_segment_start -> integers;
test_get_segment_start -> get_segment_start;
test_calculate_sdr_numpy -> default_rng;
test_calculate_sdr_numpy -> range;
test_calculate_sdr_numpy -> normal;
test_calculate_sdr_numpy -> integers;
test_calculate_sdr_numpy -> calculate_sdr_numpy;
test_calculate_sdr_numpy -> isclose;
test_calculate_sdr_numpy -> uniform;
test_calculate_sdr_numpy_scale_invariant -> default_rng;
test_calculate_sdr_numpy_scale_invariant -> range;
test_calculate_sdr_numpy_scale_invariant -> normal;
test_calculate_sdr_numpy_scale_invariant -> calculate_sdr_numpy;
test_calculate_sdr_numpy_scale_invariant -> isclose;
test_calculate_sdr_numpy_scale_invariant -> sum;
test_calculate_sdr_numpy_scale_invariant -> uniform;
test_calculate_sdr_numpy_scale_invariant -> norm;
test_convmtx_mc -> parametrize;
test_convmtx_mc -> default_rng;
test_convmtx_mc -> range;
test_convmtx_mc -> normal;
test_convmtx_mc -> convmtx_mc_numpy;
test_convmtx_mc -> squeeze;
test_convmtx_mc -> allclose;
test_convmtx_mc -> reshape;
test_convmtx_mc -> hstack;
test_convmtx_mc -> convolve;
test_convmtx_mc -> transpose;
test_convmtx_mc -> zeros;
test_convmtx_mc -> len;
test_toeplitz -> parametrize;
test_toeplitz -> default_rng;
test_toeplitz -> range;
test_toeplitz -> normal;
test_toeplitz -> toeplitz;
test_toeplitz -> tensor;
test_toeplitz -> allclose;
test_toeplitz -> numpy;
test_toeplitz -> cpu;
test_calculate_covariance_matrix_vs_psd -> skipif;
test_calculate_covariance_matrix_vs_psd -> parametrize;
test_calculate_covariance_matrix_vs_psd -> Generator;
test_calculate_covariance_matrix_vs_psd -> manual_seed;
test_calculate_covariance_matrix_vs_psd -> PSD;
test_calculate_covariance_matrix_vs_psd -> range;
test_calculate_covariance_matrix_vs_psd -> randn;
test_calculate_covariance_matrix_vs_psd -> covariance_matrix;
test_calculate_covariance_matrix_vs_psd -> psd_ref;
test_calculate_covariance_matrix_vs_psd -> allclose;
test_calculate_covariance_matrix_vs_psd -> rand;
test_calculate_covariance_matrix_vs_psd -> randint;
test_calculate_covariance_matrix_vs_psd -> ValueError;
test_calculate_covariance_matrix -> parametrize;
test_calculate_covariance_matrix -> Generator;
test_calculate_covariance_matrix -> manual_seed;
test_calculate_covariance_matrix -> range;
test_calculate_covariance_matrix -> randn;
test_calculate_covariance_matrix -> covariance_matrix;
test_calculate_covariance_matrix -> zeros;
test_calculate_covariance_matrix -> allclose;
test_calculate_covariance_matrix -> rand;
test_calculate_covariance_matrix -> sum;
test_calculate_covariance_matrix -> mean;
test_calculate_covariance_matrix -> randint;
test_calculate_covariance_matrix -> ValueError;
test_calculate_covariance_matrix -> outer;
test_calculate_covariance_matrix -> conj;
test_mismatch_dimensions -> parametrize;
test_mismatch_dimensions -> randn;
test_mismatch_dimensions -> rand;
test_mismatch_dimensions -> raises;
test_mismatch_dimensions -> covariance_matrix;
setup_ddp -> is_available;
setup_ddp -> init_process_group;
_class_test -> metric_class;
_class_test -> dumps;
_class_test -> loads;
_class_test -> range;
_class_test -> compute;
_class_test -> isinstance;
_class_test -> stack;
_class_test -> sk_metric;
_class_test -> allclose;
_class_test -> metric;
_class_test -> numpy;
_functional_test -> partial;
_functional_test -> range;
_functional_test -> metric;
_functional_test -> sk_metric;
_functional_test -> allclose;
_functional_test -> numpy;
reference_perplexity_func -> entropy;
reference_perplexity_func -> exp;
reference_perplexity_func -> mean;
_perplexity_class_test -> Perplexity;
_perplexity_class_test -> dumps;
_perplexity_class_test -> loads;
_perplexity_class_test -> range;
_perplexity_class_test -> compute;
_perplexity_class_test -> isinstance;
_perplexity_class_test -> reference_perplexity_func;
_perplexity_class_test -> allclose;
_perplexity_class_test -> perplexity;
_perplexity_class_test -> logits_to_probs;
_perplexity_class_test -> numpy;
_perplexity_class_test -> raises;
_perplexity_class_test -> stack;
reference_loss_func -> detach;
reference_loss_func -> sum;
reference_loss_func -> eq;
reference_loss_func -> tensor;
reference_loss_func -> clone;
reference_loss_func -> float;
_loss_class_test -> GlobalAverageLossMetric;
_loss_class_test -> dumps;
_loss_class_test -> loads;
_loss_class_test -> range;
_loss_class_test -> compute;
_loss_class_test -> isinstance;
_loss_class_test -> reference_loss_func;
_loss_class_test -> isnan;
_loss_class_test -> loss_metric;
_loss_class_test -> allclose;
_loss_class_test -> numpy;
_loss_class_test -> stack;
setup_class -> Pool;
setup_class -> starmap;
setup_class -> set_start_method;
setup_class -> range;
setup_class -> Tensor;
setup_class -> bool;
setup_class -> unsqueeze;
setup_class -> ones;
setup_class -> from_numpy;
setup_class -> beta_binomial_prior_distribution;
teardown_class -> close;
teardown_class -> join;
run_functional_metric_test -> _functional_test;
run_class_metric_test -> starmap;
run_class_metric_test -> _class_test;
run_class_metric_test -> skip;
run_class_metric_test -> partial;
run_class_metric_test -> range;
run_class_perplexity_test -> starmap;
run_class_perplexity_test -> _perplexity_class_test;
run_class_perplexity_test -> skip;
run_class_perplexity_test -> partial;
run_class_perplexity_test -> range;
run_class_loss_test -> starmap;
run_class_loss_test -> _loss_class_test;
run_class_loss_test -> skip;
run_class_loss_test -> partial;
run_class_loss_test -> range;
make_cut -> SupervisionSegment;
make_cut -> tolist;
make_cut -> dummy_cut;
make_cut -> zeros;
cuts -> CutSet;
cuts -> make_cut;
cuts -> range;
cuts -> MonoCut;
cuts -> dummy_recording;
cuts -> SupervisionSegment;
test_2d_bucketing_expected_bucket_allocation -> DynamicBucketingSampler;
test_2d_bucketing_expected_bucket_allocation -> enumerate;
test_2d_bucketing_expected_bucket_allocation -> repeat;
test_2d_bucketing_expected_bucket_allocation -> FixedBucketBatchSizeConstraint2D;
test_2d_bucketing_expected_bucket_allocation -> len;
test_2d_bucketing_expected_bucket_allocation -> max;
test_2d_bucketing_filter_lenient -> parametrize;
test_2d_bucketing_filter_lenient -> FixedBucketBatchSizeConstraint2D;
test_2d_bucketing_filter_lenient -> BucketingFilter;
test_2d_bucketing_filter_lenient -> make_cut;
test_2d_bucketing_filter_lenient -> filter_2d;
test_2d_bucketing_filter_lenient -> select_bucket;
test_2d_bucketing_filter_strict -> parametrize;
test_2d_bucketing_filter_strict -> FixedBucketBatchSizeConstraint2D;
test_2d_bucketing_filter_strict -> BucketingFilter;
test_2d_bucketing_filter_strict -> make_cut;
test_2d_bucketing_filter_strict -> filter_2d;
test_2d_bucketing_filter_strict -> select_bucket;
test_2d_bucketing_filter_strict_max_ratio -> FixedBucketBatchSizeConstraint2D;
test_2d_bucketing_filter_strict_max_ratio -> BucketingFilter;
test_2d_bucketing_filter_strict_max_ratio -> make_cut;
test_2d_bucketing_filter_strict_max_ratio -> filter_2d;
test_2d_bucketing_filter_strict_max_ratio -> select_bucket;
test_2d_bucketing_strict_mode_flag_works -> to_file;
test_2d_bucketing_strict_mode_flag_works -> get_lhotse_dataloader_from_config;
test_2d_bucketing_strict_mode_flag_works -> len;
test_2d_bucketing_strict_mode_flag_works -> CutSet;
test_2d_bucketing_strict_mode_flag_works -> _Identity;
test_2d_bucketing_strict_mode_flag_works -> make_cut;
test_chat_template -> importorskip;
test_chat_template -> get_tokenizer;
test_chat_template -> from_pretrained;
test_chat_template -> apply_chat_template;
test_throws_chat_template -> get_tokenizer;
test_throws_chat_template -> apply_chat_template;
test_throws_chat_template -> str;
test_move_data_to_device -> skipif;
test_move_data_to_device -> parametrize;
test_move_data_to_device -> move_data_to_device;
test_move_data_to_device -> isinstance;
test_move_data_to_device -> type;
test_move_data_to_device -> is_available;
test_move_data_to_device -> tensor;
test_move_data_to_device -> _Batch;
extract_ema_weights -> swap_model_weights;
extract_ema_weights -> extract_weights;
extract_ema_weights -> isinstance;
extract_weights -> clone;
extract_weights -> parameters;
extract_weights -> detach;
test_ema_value -> raises;
test_ema_value -> EMA;
test_ema_saved_state -> run_only_on;
test_ema_saved_state -> join;
test_ema_saved_state -> ExampleModel;
test_ema_saved_state -> TerminateCallback;
test_ema_saved_state -> Trainer;
test_ema_saved_state -> exp_manager;
test_ema_saved_state -> append;
test_ema_saved_state -> fit;
test_ema_saved_state -> remove;
test_ema_saved_state -> raises;
test_ema_saved_state -> CheckStateCallback;
test_ema_saved_state -> extract_ema_weights;
test_ema_saved_state -> extract_weights;
test_ema_saved_state -> str;
test_ema_saved_state -> zip;
test_ema_saved_state -> allclose;
test_ema_saved_state -> isinstance;
test_ema_saved_state -> cpu;
test_exp_manager_ema_weights -> run_only_on;
test_exp_manager_ema_weights -> ExampleModel;
test_exp_manager_ema_weights -> Trainer;
test_exp_manager_ema_weights -> exp_manager;
test_exp_manager_ema_weights -> any;
test_exp_manager_ema_weights -> fit;
test_exp_manager_ema_weights -> extract_ema_weights;
test_exp_manager_ema_weights -> exists;
test_exp_manager_ema_weights -> load_from_checkpoint;
test_exp_manager_ema_weights -> zip;
test_exp_manager_ema_weights -> str;
test_exp_manager_ema_weights -> values;
test_exp_manager_ema_weights -> allclose;
test_exp_manager_ema_weights -> isinstance;
test_exp_manager_ema_weights -> cpu;
test_exp_manager_ema_weights -> state_dict;
test_exp_manager_ema_weights_topk -> ExampleModel;
test_exp_manager_ema_weights_topk -> Trainer;
test_exp_manager_ema_weights_topk -> exp_manager;
test_exp_manager_ema_weights_topk -> fit;
test_exp_manager_ema_weights_topk -> len;
test_exp_manager_ema_weights_topk -> str;
test_exp_manager_ema_weights_topk -> listdir;
test_exp_manager_ema_weights_topk_resume -> ExampleModel;
test_exp_manager_ema_weights_topk_resume -> Trainer;
test_exp_manager_ema_weights_topk_resume -> exp_manager;
test_exp_manager_ema_weights_topk_resume -> fit;
test_exp_manager_ema_weights_topk_resume -> len;
test_exp_manager_ema_weights_topk_resume -> str;
test_exp_manager_ema_weights_topk_resume -> listdir;
test_ema_run_cuda -> parametrize;
test_ema_run_cuda -> run_only_on;
test_ema_run_cuda -> run_training_test;
test_ema_run_cuda -> param;
test_ema_run_cuda -> skipif;
run_training_test -> seed_everything;
run_training_test -> ExampleModel;
run_training_test -> Trainer;
run_training_test -> exp_manager;
run_training_test -> append;
run_training_test -> insert;
run_training_test -> fit;
run_training_test -> EMAAssertCallback;
run_training_test -> EMAValidationAssertCallback;
run_training_test -> str;
run_training_test -> train_dataloader;
test_ema_run_cpu -> parametrize;
test_ema_run_cpu -> run_training_test;
test_ema_run_with_save_best_model -> ExampleModel;
test_ema_run_with_save_best_model -> Trainer;
test_ema_run_with_save_best_model -> exp_manager;
test_ema_run_with_save_best_model -> fit;
test_ema_run_with_save_best_model -> str;
cutset_path -> fixture;
cutset_path -> DummyManifest;
cutset_path -> mktemp;
cutset_path -> to_file;
cutset_path -> save_audios;
cutset_shar_path -> fixture;
cutset_shar_path -> from_file;
cutset_shar_path -> mkdir;
cutset_shar_path -> to_shar;
cutset_shar_path_other -> fixture;
cutset_shar_path_other -> modify_ids;
cutset_shar_path_other -> mkdir;
cutset_shar_path_other -> to_shar;
cutset_shar_path_other -> from_file;
nemo_manifest_path -> fixture;
nemo_manifest_path -> from_file;
nemo_manifest_path -> save_to_jsonl;
nemo_manifest_path -> append;
nemo_manifest_path -> enumerate;
nemo_manifest_path -> mktemp;
nemo_manifest_path -> save_audios;
nemo_manifest_path -> DummyManifest;
nemo_manifest_with_skipme_path -> fixture;
nemo_manifest_with_skipme_path -> list;
nemo_manifest_with_skipme_path -> save_to_jsonl;
nemo_manifest_with_skipme_path -> load_jsonl;
mc_cutset_path -> fixture;
mc_cutset_path -> DummyManifest;
mc_cutset_path -> range;
mc_cutset_path -> from_cuts;
mc_cutset_path -> mktemp;
mc_cutset_path -> to_file;
mc_cutset_path -> Recording;
mc_cutset_path -> MultiCut;
mc_cutset_path -> append;
mc_cutset_path -> save_audios;
mc_cutset_path -> list;
nemo_tarred_manifest_path -> fixture;
nemo_tarred_manifest_path -> mkdir;
nemo_tarred_manifest_path -> TarWriter;
nemo_tarred_manifest_path -> SequentialJsonlWriter;
nemo_tarred_manifest_path -> enumerate;
nemo_tarred_manifest_path -> load_jsonl;
nemo_tarred_manifest_path -> write;
nemo_tarred_manifest_path -> Path;
nemo_tarred_manifest_path -> open;
nemo_tarred_manifest_path -> BytesIO;
nemo_tarred_manifest_path -> int;
nemo_tarred_manifest_path -> read;
nemo_tarred_manifest_path -> JsonlShardWriter;
nemo_tarred_manifest_with_skipme_path -> fixture;
nemo_tarred_manifest_with_skipme_path -> list;
nemo_tarred_manifest_with_skipme_path -> save_to_jsonl;
nemo_tarred_manifest_with_skipme_path -> load_jsonl;
nemo_tarred_manifest_path_multi -> fixture;
nemo_tarred_manifest_path_multi -> mkdir;
nemo_tarred_manifest_path_multi -> JsonlShardWriter;
nemo_tarred_manifest_path_multi -> load_jsonl;
nemo_tarred_manifest_path_multi -> write;
nemo_tarred_manifest_subset_path -> fixture;
nemo_tarred_manifest_subset_path -> mkdir;
nemo_tarred_manifest_subset_path -> list;
nemo_tarred_manifest_subset_path -> load_jsonl;
nemo_tarred_manifest_subset_path -> JsonlShardWriter;
nemo_tarred_manifest_subset_path -> write;
test_dataloader_from_lhotse_cuts -> create;
test_dataloader_from_lhotse_cuts -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_cuts -> len;
test_dataloader_from_lhotse_cuts -> set;
test_dataloader_from_lhotse_cuts -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_cuts -> keys;
test_dataloader_from_lhotse_cuts_truncate -> create;
test_dataloader_from_lhotse_cuts_truncate -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_cuts_truncate -> len;
test_dataloader_from_lhotse_cuts_truncate -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_cuts_cut_into_windows -> create;
test_dataloader_from_lhotse_cuts_cut_into_windows -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_cuts_cut_into_windows -> len;
test_dataloader_from_lhotse_cuts_cut_into_windows -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_cuts_pad_min_duration -> create;
test_dataloader_from_lhotse_cuts_pad_min_duration -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_cuts_pad_min_duration -> next;
test_dataloader_from_lhotse_cuts_pad_min_duration -> isinstance;
test_dataloader_from_lhotse_cuts_pad_min_duration -> iter;
test_dataloader_from_lhotse_cuts_pad_min_duration -> len;
test_dataloader_from_lhotse_cuts_pad_min_duration -> Identity;
test_dataloader_from_lhotse_cuts_channel_selector -> create;
test_dataloader_from_lhotse_cuts_channel_selector -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_cuts_channel_selector -> len;
test_dataloader_from_lhotse_cuts_channel_selector -> enumerate;
test_dataloader_from_lhotse_cuts_channel_selector -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_cuts_channel_selector -> equal;
test_dataloader_from_lhotse_shar_cuts -> create;
test_dataloader_from_lhotse_shar_cuts -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_shar_cuts -> len;
test_dataloader_from_lhotse_shar_cuts -> set;
test_dataloader_from_lhotse_shar_cuts -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_shar_cuts -> islice;
test_dataloader_from_lhotse_shar_cuts -> keys;
test_dataloader_from_lhotse_shar_cuts_via_fields -> create;
test_dataloader_from_lhotse_shar_cuts_via_fields -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_shar_cuts_via_fields -> next;
test_dataloader_from_lhotse_shar_cuts_via_fields -> load_audio;
test_dataloader_from_lhotse_shar_cuts_via_fields -> isinstance;
test_dataloader_from_lhotse_shar_cuts_via_fields -> iter;
test_dataloader_from_lhotse_shar_cuts_via_fields -> len;
test_dataloader_from_lhotse_shar_cuts_via_fields -> Identity;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> mktemp;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> create;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> next;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> JsonlShardWriter;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> range;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> iter;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> len;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> write;
test_dataloader_from_lhotse_shar_cuts_add_new_field -> Identity;
test_dataloader_from_nemo_manifest -> create;
test_dataloader_from_nemo_manifest -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest -> len;
test_dataloader_from_nemo_manifest -> set;
test_dataloader_from_nemo_manifest -> UnsupervisedAudioDataset;
test_dataloader_from_nemo_manifest -> keys;
test_dataloader_from_nemo_manifest_has_custom_fields -> create;
test_dataloader_from_nemo_manifest_has_custom_fields -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_has_custom_fields -> next;
test_dataloader_from_nemo_manifest_has_custom_fields -> iter;
test_dataloader_from_nemo_manifest_has_custom_fields -> isinstance;
test_dataloader_from_nemo_manifest_has_custom_fields -> _Identity;
test_dataloader_from_tarred_nemo_manifest -> create;
test_dataloader_from_tarred_nemo_manifest -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest -> len;
test_dataloader_from_tarred_nemo_manifest -> set;
test_dataloader_from_tarred_nemo_manifest -> UnsupervisedAudioDataset;
test_dataloader_from_tarred_nemo_manifest -> islice;
test_dataloader_from_tarred_nemo_manifest -> keys;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> create;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> next;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> iter;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> set;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> UnsupervisedAudioDataset;
test_dataloader_from_tarred_nemo_manifest_weighted_combination -> keys;
test_dataloader_from_tarred_nemo_manifest_multi -> create;
test_dataloader_from_tarred_nemo_manifest_multi -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_multi -> len;
test_dataloader_from_tarred_nemo_manifest_multi -> set;
test_dataloader_from_tarred_nemo_manifest_multi -> UnsupervisedAudioDataset;
test_dataloader_from_tarred_nemo_manifest_multi -> islice;
test_dataloader_from_tarred_nemo_manifest_multi -> keys;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams -> create;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams -> next;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams -> iter;
test_dataloader_from_tarred_nemo_manifest_multi_max_open_streams -> UnsupervisedAudioDataset;
test_dataloader_from_tarred_nemo_manifest_concat -> create;
test_dataloader_from_tarred_nemo_manifest_concat -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_concat -> tensor;
test_dataloader_from_tarred_nemo_manifest_concat -> assert_close;
test_dataloader_from_tarred_nemo_manifest_concat -> len;
test_dataloader_from_tarred_nemo_manifest_concat -> set;
test_dataloader_from_tarred_nemo_manifest_concat -> UnsupervisedAudioDataset;
test_dataloader_from_tarred_nemo_manifest_concat -> islice;
test_dataloader_from_tarred_nemo_manifest_concat -> keys;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> create;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> len;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> islice;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_unweighted -> startswith;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> create;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> get_lhotse_dataloader_from_config;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> len;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> UnsupervisedAudioDataset;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> islice;
test_dataloader_from_lhotse_shar_cuts_combine_datasets_weighted -> startswith;
test_dataloader_from_nemo_manifest_with_text_field -> parametrize;
test_dataloader_from_nemo_manifest_with_text_field -> create;
test_dataloader_from_nemo_manifest_with_text_field -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_with_text_field -> next;
test_dataloader_from_nemo_manifest_with_text_field -> iter;
test_dataloader_from_nemo_manifest_with_text_field -> TextDataset;
test_dataloader_from_nemo_manifest_with_lang_field -> parametrize;
test_dataloader_from_nemo_manifest_with_lang_field -> create;
test_dataloader_from_nemo_manifest_with_lang_field -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_with_lang_field -> next;
test_dataloader_from_nemo_manifest_with_lang_field -> iter;
test_dataloader_from_nemo_manifest_with_lang_field -> LangDataset;
test_lazy_nemo_iterator_with_offset_field -> str;
test_lazy_nemo_iterator_with_offset_field -> write;
test_lazy_nemo_iterator_with_offset_field -> save_to_jsonl;
test_lazy_nemo_iterator_with_offset_field -> CutSet;
test_lazy_nemo_iterator_with_offset_field -> isinstance;
test_lazy_nemo_iterator_with_offset_field -> load_audio;
test_lazy_nemo_iterator_with_offset_field -> assert_equal;
test_lazy_nemo_iterator_with_offset_field -> assert_allclose;
test_lazy_nemo_iterator_with_offset_field -> astype;
test_lazy_nemo_iterator_with_offset_field -> LazyNeMoIterator;
test_lazy_nemo_iterator_with_offset_field -> randint;
test_lazy_nemo_iterator_with_relative_paths -> str;
test_lazy_nemo_iterator_with_relative_paths -> write;
test_lazy_nemo_iterator_with_relative_paths -> save_to_jsonl;
test_lazy_nemo_iterator_with_relative_paths -> CutSet;
test_lazy_nemo_iterator_with_relative_paths -> load_audio;
test_lazy_nemo_iterator_with_relative_paths -> isinstance;
test_lazy_nemo_iterator_with_relative_paths -> assert_equal;
test_lazy_nemo_iterator_with_relative_paths -> astype;
test_lazy_nemo_iterator_with_relative_paths -> LazyNeMoIterator;
test_lazy_nemo_iterator_with_relative_paths -> randint;
test_lhotse_cuts_resolve_relative_paths -> save_audio;
test_lhotse_cuts_resolve_relative_paths -> to_cut;
test_lhotse_cuts_resolve_relative_paths -> str;
test_lhotse_cuts_resolve_relative_paths -> to_file;
test_lhotse_cuts_resolve_relative_paths -> create;
test_lhotse_cuts_resolve_relative_paths -> get_lhotse_dataloader_from_config;
test_lhotse_cuts_resolve_relative_paths -> NumpyFilesWriter;
test_lhotse_cuts_resolve_relative_paths -> store_array;
test_lhotse_cuts_resolve_relative_paths -> raises;
test_lhotse_cuts_resolve_relative_paths -> load_audio;
test_lhotse_cuts_resolve_relative_paths -> load_target_recording;
test_lhotse_cuts_resolve_relative_paths -> len;
test_lhotse_cuts_resolve_relative_paths -> has_custom;
test_lhotse_cuts_resolve_relative_paths -> load_some_array;
test_lhotse_cuts_resolve_relative_paths -> rand;
test_lhotse_cuts_resolve_relative_paths -> from_file;
test_lhotse_cuts_resolve_relative_paths -> randn;
test_lhotse_cuts_resolve_relative_paths -> CutSet;
test_lhotse_cuts_resolve_relative_paths -> _Identity;
test_extended_data_input_cfg -> create;
test_extended_data_input_cfg -> get_lhotse_dataloader_from_config;
test_extended_data_input_cfg -> isinstance;
test_extended_data_input_cfg -> all;
test_extended_data_input_cfg -> sum;
test_extended_data_input_cfg -> Identity;
test_extended_data_input_cfg -> islice;
test_extended_data_input_cfg_subgroup -> create;
test_extended_data_input_cfg_subgroup -> get_lhotse_dataloader_from_config;
test_extended_data_input_cfg_subgroup -> Counter;
test_extended_data_input_cfg_subgroup -> islice;
test_extended_data_input_cfg_subgroup -> sum;
test_extended_data_input_cfg_subgroup -> values;
test_extended_data_input_cfg_subgroup -> approx;
test_extended_data_input_cfg_subgroup -> almost;
test_extended_data_input_cfg_subgroup -> Identity;
almost -> approx;
test_extended_data_input_cfg_yaml_path -> save_to_yaml;
test_extended_data_input_cfg_yaml_path -> create;
test_extended_data_input_cfg_yaml_path -> get_lhotse_dataloader_from_config;
test_extended_data_input_cfg_yaml_path -> next;
test_extended_data_input_cfg_yaml_path -> isinstance;
test_extended_data_input_cfg_yaml_path -> iter;
test_extended_data_input_cfg_yaml_path -> str;
test_extended_data_input_cfg_yaml_path -> Identity;
txt_en_path -> fixture;
txt_en_path -> mktemp;
txt_en_path -> write_text;
txt_es_path -> fixture;
txt_es_path -> mktemp;
txt_es_path -> write_text;
questions_path -> fixture;
questions_path -> mktemp;
questions_path -> write_text;
questions_path -> str;
questions_path -> join;
questions_path -> range;
test_text_file_input -> create;
test_text_file_input -> get_lhotse_dataloader_from_config;
test_text_file_input -> isinstance;
test_text_file_input -> all;
test_text_file_input -> Identity;
test_text_file_input -> islice;
test_text_file_pairs_input -> create;
test_text_file_pairs_input -> get_lhotse_dataloader_from_config;
test_text_file_pairs_input -> isinstance;
test_text_file_pairs_input -> all;
test_text_file_pairs_input -> Identity;
test_text_file_pairs_input -> islice;
txt_pair_paths_shards -> fixture;
txt_pair_paths_shards -> mktemp;
txt_pair_paths_shards -> splitlines;
txt_pair_paths_shards -> write_text;
txt_pair_paths_shards -> join;
txt_pair_paths_shards -> read_text;
test_text_file_pairs_shards_input -> create;
test_text_file_pairs_shards_input -> get_lhotse_dataloader_from_config;
test_text_file_pairs_shards_input -> isinstance;
test_text_file_pairs_shards_input -> all;
test_text_file_pairs_shards_input -> Identity;
test_text_file_pairs_shards_input -> islice;
en_es_tokenizer -> fixture;
en_es_tokenizer -> mktemp;
en_es_tokenizer -> write_text;
en_es_tokenizer -> create_spt_model;
en_es_tokenizer -> SentencePieceTokenizer;
en_es_tokenizer -> str;
en_es_tokenizer -> read_text;
test_multimodal_text_audio_dataloading -> create;
test_multimodal_text_audio_dataloading -> get_lhotse_dataloader_from_config;
test_multimodal_text_audio_dataloading -> next;
test_multimodal_text_audio_dataloading -> isinstance;
test_multimodal_text_audio_dataloading -> len;
test_multimodal_text_audio_dataloading -> any;
test_multimodal_text_audio_dataloading -> iter;
test_multimodal_text_audio_dataloading -> sum;
test_multimodal_text_audio_dataloading -> Identity;
test_multimodal_text_audio_dataloading -> is_tensor;
test_multimodal_text_audio_dataloading -> load_audio;
test_multimodal_text_audio_dataloading_zip_strategy -> create;
test_multimodal_text_audio_dataloading_zip_strategy -> get_lhotse_dataloader_from_config;
test_multimodal_text_audio_dataloading_zip_strategy -> isinstance;
test_multimodal_text_audio_dataloading_zip_strategy -> len;
test_multimodal_text_audio_dataloading_zip_strategy -> any;
test_multimodal_text_audio_dataloading_zip_strategy -> sum;
test_multimodal_text_audio_dataloading_zip_strategy -> Identity;
test_multimodal_text_audio_dataloading_zip_strategy -> islice;
test_multimodal_text_audio_dataloading_zip_strategy -> is_tensor;
test_multimodal_text_audio_dataloading_zip_strategy -> load_audio;
test_multimodal_text_audio_dataloading_round_robin_strategy -> create;
test_multimodal_text_audio_dataloading_round_robin_strategy -> get_lhotse_dataloader_from_config;
test_multimodal_text_audio_dataloading_round_robin_strategy -> isinstance;
test_multimodal_text_audio_dataloading_round_robin_strategy -> len;
test_multimodal_text_audio_dataloading_round_robin_strategy -> all;
test_multimodal_text_audio_dataloading_round_robin_strategy -> sum;
test_multimodal_text_audio_dataloading_round_robin_strategy -> is_tensor;
test_multimodal_text_audio_dataloading_round_robin_strategy -> Identity;
test_multimodal_text_audio_dataloading_round_robin_strategy -> islice;
test_multimodal_text_audio_dataloading_round_robin_strategy -> load_audio;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> create;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> get_lhotse_dataloader_from_config;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> isinstance;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> len;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> all;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> sum;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> is_tensor;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> Identity;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> islice;
test_multimodal_text_audio_dataloading_randomized_round_robin_strategy -> load_audio;
test_dataloader_with_noise_nemo_json -> create;
test_dataloader_with_noise_nemo_json -> get_lhotse_dataloader_from_config;
test_dataloader_with_noise_nemo_json -> next;
test_dataloader_with_noise_nemo_json -> isinstance;
test_dataloader_with_noise_nemo_json -> iter;
test_dataloader_with_noise_nemo_json -> len;
test_dataloader_with_noise_nemo_json -> str;
test_dataloader_with_noise_nemo_json -> Identity;
test_dataloader_with_noise_lhotse_jsonl -> create;
test_dataloader_with_noise_lhotse_jsonl -> get_lhotse_dataloader_from_config;
test_dataloader_with_noise_lhotse_jsonl -> next;
test_dataloader_with_noise_lhotse_jsonl -> isinstance;
test_dataloader_with_noise_lhotse_jsonl -> iter;
test_dataloader_with_noise_lhotse_jsonl -> len;
test_dataloader_with_noise_lhotse_jsonl -> str;
test_dataloader_with_noise_lhotse_jsonl -> Identity;
test_dataloader_with_noise_nemo_tar -> create;
test_dataloader_with_noise_nemo_tar -> get_lhotse_dataloader_from_config;
test_dataloader_with_noise_nemo_tar -> next;
test_dataloader_with_noise_nemo_tar -> isinstance;
test_dataloader_with_noise_nemo_tar -> iter;
test_dataloader_with_noise_nemo_tar -> len;
test_dataloader_with_noise_nemo_tar -> str;
test_dataloader_with_noise_nemo_tar -> Identity;
test_dataloader_with_synth_rir -> create;
test_dataloader_with_synth_rir -> get_lhotse_dataloader_from_config;
test_dataloader_with_synth_rir -> next;
test_dataloader_with_synth_rir -> isinstance;
test_dataloader_with_synth_rir -> iter;
test_dataloader_with_synth_rir -> len;
test_dataloader_with_synth_rir -> str;
test_dataloader_with_synth_rir -> Identity;
test_dataloader_bucket_batch_size -> create;
test_dataloader_bucket_batch_size -> get_lhotse_dataloader_from_config;
test_dataloader_bucket_batch_size -> islice;
test_dataloader_bucket_batch_size -> Identity;
test_dataloader_bucket_batch_size -> len;
test_dataloader_2d_bucketing -> create;
test_dataloader_2d_bucketing -> get_lhotse_dataloader_from_config;
test_dataloader_2d_bucketing -> islice;
test_dataloader_2d_bucketing -> Identity;
test_dataloader_2d_bucketing -> len;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> create;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> next;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> isinstance;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> hasattr;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> iter;
test_dataloader_from_nemo_nontarred_manifest_with_extra_questions_field_iter -> Identity;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> create;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> next;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> isinstance;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> hasattr;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> iter;
test_dataloader_from_nemo_manifest_with_extra_questions_field_iter -> Identity;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> create;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> next;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> isinstance;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> hasattr;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> iter;
test_dataloader_from_nemo_manifest_with_extra_questions_field_sample -> Identity;
nemo_tarred_manifest_path_with_offset -> fixture;
nemo_tarred_manifest_path_with_offset -> mktemp;
nemo_tarred_manifest_path_with_offset -> mkdir;
nemo_tarred_manifest_path_with_offset -> dummy_recording;
nemo_tarred_manifest_path_with_offset -> TarWriter;
nemo_tarred_manifest_path_with_offset -> SequentialJsonlWriter;
nemo_tarred_manifest_path_with_offset -> write;
nemo_tarred_manifest_path_with_offset -> audio_path;
nemo_tarred_manifest_path_with_offset -> BytesIO;
test_dataloader_from_tarred_nemo_manifest_with_offset -> create;
test_dataloader_from_tarred_nemo_manifest_with_offset -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_with_offset -> load_audio;
test_dataloader_from_tarred_nemo_manifest_with_offset -> assert_equal;
test_dataloader_from_tarred_nemo_manifest_with_offset -> len;
test_dataloader_from_tarred_nemo_manifest_with_offset -> Identity;
test_dataloader_from_tarred_nemo_manifest_with_offset -> compute_num_samples;
test_force_iterable_dataset -> create;
test_force_iterable_dataset -> get_lhotse_dataloader_from_config;
test_force_iterable_dataset -> len;
test_force_iterable_dataset -> set;
test_force_iterable_dataset -> Identity;
test_force_map_dataset -> create;
test_force_map_dataset -> get_lhotse_dataloader_from_config;
test_force_map_dataset -> len;
test_force_map_dataset -> set;
test_force_map_dataset -> Identity;
test_dataloader_from_tarred_nemo_subset_manifest -> create;
test_dataloader_from_tarred_nemo_subset_manifest -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_subset_manifest -> list;
test_dataloader_from_tarred_nemo_subset_manifest -> set;
test_dataloader_from_tarred_nemo_subset_manifest -> len;
test_dataloader_from_tarred_nemo_subset_manifest -> UnsupervisedAudioDataset;
test_dataloader_from_nemo_manifest_with_skipme -> create;
test_dataloader_from_nemo_manifest_with_skipme -> get_lhotse_dataloader_from_config;
test_dataloader_from_nemo_manifest_with_skipme -> get;
test_dataloader_from_nemo_manifest_with_skipme -> len;
test_dataloader_from_nemo_manifest_with_skipme -> any;
test_dataloader_from_nemo_manifest_with_skipme -> _Identity;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> create;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> get_lhotse_dataloader_from_config;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> get;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> len;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> any;
test_dataloader_from_tarred_nemo_manifest_with_skipme -> _Identity;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme -> create;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme -> get_lhotse_dataloader_from_config;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme -> get;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme -> any;
test_dataloader_from_data_input_cfg_yaml_path_with_skipme -> Identity;
multimodal_conversations_path -> fixture;
multimodal_conversations_path -> mktemp;
multimodal_conversations_path -> save_to_jsonl;
multimodal_conversations_path -> save_audio;
multimodal_conversations_path -> to_cut;
multimodal_conversations_path -> dummy_recording;
test_multimodal_conversation_input -> create;
test_multimodal_conversation_input -> get_lhotse_dataloader_from_config;
test_multimodal_conversation_input -> isinstance;
test_multimodal_conversation_input -> len;
test_multimodal_conversation_input -> Identity;
test_multimodal_conversation_input -> load_audio;
test_multimodal_conversation_input_with_prompt -> create;
test_multimodal_conversation_input_with_prompt -> get_lhotse_dataloader_from_config;
test_multimodal_conversation_input_with_prompt -> isinstance;
test_multimodal_conversation_input_with_prompt -> is_tensor;
test_multimodal_conversation_input_with_prompt -> all;
test_multimodal_conversation_input_with_prompt -> len;
test_multimodal_conversation_input_with_prompt -> ids_to_text;
test_multimodal_conversation_input_with_prompt -> Identity;
test_text_only_conversation_length_measurement -> NeMoMultimodalConversation;
test_text_only_conversation_length_measurement -> apply_prompt_format;
test_text_only_conversation_length_measurement -> MultimodalSamplingConstraint;
test_text_only_conversation_length_measurement -> MultimodalFixedBucketBatchSizeConstraint2D;
test_text_only_conversation_length_measurement -> Llama2PromptFormatter;
test_text_only_conversation_length_measurement -> ids_to_text;
test_text_only_conversation_length_measurement -> len;
test_text_only_conversation_length_measurement -> measure_length;
test_text_only_conversation_length_measurement -> select_bucket;
test_text_only_conversation_length_measurement -> TextTurn;
test_audio_only_conversation_length_measurement -> mktemp;
test_audio_only_conversation_length_measurement -> save_audio;
test_audio_only_conversation_length_measurement -> NeMoMultimodalConversation;
test_audio_only_conversation_length_measurement -> apply_prompt_format;
test_audio_only_conversation_length_measurement -> MultimodalSamplingConstraint;
test_audio_only_conversation_length_measurement -> MultimodalFixedBucketBatchSizeConstraint2D;
test_audio_only_conversation_length_measurement -> Llama2PromptFormatter;
test_audio_only_conversation_length_measurement -> ids_to_text;
test_audio_only_conversation_length_measurement -> len;
test_audio_only_conversation_length_measurement -> measure_length;
test_audio_only_conversation_length_measurement -> select_bucket;
test_audio_only_conversation_length_measurement -> to_cut;
test_audio_only_conversation_length_measurement -> AudioTurn;
test_audio_only_conversation_length_measurement -> dummy_recording;
test_multimodal_conversation_length_measurement -> mktemp;
test_multimodal_conversation_length_measurement -> save_audio;
test_multimodal_conversation_length_measurement -> NeMoMultimodalConversation;
test_multimodal_conversation_length_measurement -> apply_prompt_format;
test_multimodal_conversation_length_measurement -> print;
test_multimodal_conversation_length_measurement -> MultimodalSamplingConstraint;
test_multimodal_conversation_length_measurement -> MultimodalFixedBucketBatchSizeConstraint2D;
test_multimodal_conversation_length_measurement -> Llama2PromptFormatter;
test_multimodal_conversation_length_measurement -> ids_to_text;
test_multimodal_conversation_length_measurement -> len;
test_multimodal_conversation_length_measurement -> measure_length;
test_multimodal_conversation_length_measurement -> select_bucket;
test_multimodal_conversation_length_measurement -> to_cut;
test_multimodal_conversation_length_measurement -> TextTurn;
test_multimodal_conversation_length_measurement -> AudioTurn;
test_multimodal_conversation_length_measurement -> dummy_recording;
test_multimodal_conversation_tarred_format -> list;
test_multimodal_conversation_tarred_format -> mktemp;
test_multimodal_conversation_tarred_format -> zip;
test_multimodal_conversation_tarred_format -> NeMoMultimodalConversationJsonlAdapter;
test_multimodal_conversation_tarred_format -> NeMoMultimodalConversationTarWriter;
test_multimodal_conversation_tarred_format -> write;
test_multimodal_conversation_tarred_format -> len;
test_multimodal_conversation_tarred_format -> isinstance;
test_multimodal_conversation_tarred_format -> type;
test_multimodal_conversation_tarred_format -> assert_allclose;
test_multimodal_conversation_tarred_format -> load_audio;
test_multimodal_conversation_tarred_format_sharding_works -> list;
test_multimodal_conversation_tarred_format_sharding_works -> mktemp;
test_multimodal_conversation_tarred_format_sharding_works -> NeMoMultimodalConversationJsonlAdapter;
test_multimodal_conversation_tarred_format_sharding_works -> all;
test_multimodal_conversation_tarred_format_sharding_works -> NeMoMultimodalConversationTarWriter;
test_multimodal_conversation_tarred_format_sharding_works -> range;
test_multimodal_conversation_tarred_format_sharding_works -> len;
test_multimodal_conversation_tarred_format_sharding_works -> write;
test_dataloader_multiple_ranks_deterministic_rng -> create;
test_dataloader_multiple_ranks_deterministic_rng -> get_lhotse_dataloader_from_config;
test_dataloader_multiple_ranks_deterministic_rng -> copy;
test_dataloader_multiple_ranks_deterministic_rng -> zip;
test_dataloader_multiple_ranks_deterministic_rng -> range;
test_dataloader_multiple_ranks_deterministic_rng -> next;
test_dataloader_multiple_ranks_deterministic_rng -> _Identity;
test_dataloader_multiple_ranks_deterministic_rng -> iter;
test_dataloader_multiple_ranks_trng -> create;
test_dataloader_multiple_ranks_trng -> get_lhotse_dataloader_from_config;
test_dataloader_multiple_ranks_trng -> copy;
test_dataloader_multiple_ranks_trng -> zip;
test_dataloader_multiple_ranks_trng -> range;
test_dataloader_multiple_ranks_trng -> next;
test_dataloader_multiple_ranks_trng -> _Identity;
test_dataloader_multiple_ranks_trng -> iter;
test_lazy_nemo_iterator -> CutSet;
test_lazy_nemo_iterator -> LazyNeMoIterator;
test_lazy_nemo_iterator -> len;
test_lazy_nemo_iterator -> isinstance;
test_lazy_nemo_iterator -> load_audio;
nemo_offset_manifest_path -> mktemp;
nemo_offset_manifest_path -> cut_into_windows;
nemo_offset_manifest_path -> save_to_jsonl;
nemo_offset_manifest_path -> append;
nemo_offset_manifest_path -> save_audios;
nemo_offset_manifest_path -> DummyManifest;
test_lazy_nemo_iterator_with_offset -> CutSet;
test_lazy_nemo_iterator_with_offset -> enumerate;
test_lazy_nemo_iterator_with_offset -> LazyNeMoIterator;
test_lazy_nemo_iterator_with_offset -> len;
test_lazy_nemo_iterator_with_offset -> isinstance;
test_lazy_nemo_iterator_with_offset -> load_audio;
test_lazy_nemo_iterator_with_offset_metadata_only -> CutSet;
test_lazy_nemo_iterator_with_offset_metadata_only -> enumerate;
test_lazy_nemo_iterator_with_offset_metadata_only -> LazyNeMoIterator;
test_lazy_nemo_iterator_with_offset_metadata_only -> len;
test_lazy_nemo_iterator_with_offset_metadata_only -> isinstance;
test_lazy_nemo_iterator_with_offset_metadata_only -> raises;
test_lazy_nemo_iterator_with_offset_metadata_only -> load_audio;
cuts_path -> dummy_cut;
cuts_path -> to_file;
cuts_path -> getbasetemp;
cuts_path -> CutSet;
cuts_path -> SupervisionSegment;
cuts_path -> mktemp;
cuts_path -> save_audios;
src_tgt_example -> mktemp;
src_tgt_example -> write_text;
src_tgt_example -> SourceTargetTextExample;
src_tgt_example -> TextExample;
src_tgt_example -> array;
nemo_sft_example -> save_to_jsonl;
nemo_sft_example -> getbasetemp;
nemo_sft_example -> NeMoSFTExample;
test_prompt_format_cut -> get_lhotse_dataloader_from_config;
test_prompt_format_cut -> next;
test_prompt_format_cut -> isinstance;
test_prompt_format_cut -> iter;
test_prompt_format_cut -> ids_to_text;
test_prompt_format_cut -> Identity;
test_prompt_format_cut_filtered_out -> get_lhotse_dataloader_from_config;
test_prompt_format_cut_filtered_out -> raises;
test_prompt_format_cut_filtered_out -> next;
test_prompt_format_cut_filtered_out -> Identity;
test_prompt_format_cut_filtered_out -> iter;
test_prompt_format_cut_max_tokens_has_no_filtering_effect -> get_lhotse_dataloader_from_config;
test_prompt_format_cut_max_tokens_has_no_filtering_effect -> next;
test_prompt_format_cut_max_tokens_has_no_filtering_effect -> isinstance;
test_prompt_format_cut_max_tokens_has_no_filtering_effect -> iter;
test_prompt_format_cut_max_tokens_has_no_filtering_effect -> Identity;
test_prompt_format_src_tgt -> get_lhotse_dataloader_from_config;
test_prompt_format_src_tgt -> next;
test_prompt_format_src_tgt -> isinstance;
test_prompt_format_src_tgt -> iter;
test_prompt_format_src_tgt -> ids_to_text;
test_prompt_format_src_tgt -> Identity;
test_prompt_format_src_tgt_filtered_out -> get_lhotse_dataloader_from_config;
test_prompt_format_src_tgt_filtered_out -> raises;
test_prompt_format_src_tgt_filtered_out -> next;
test_prompt_format_src_tgt_filtered_out -> Identity;
test_prompt_format_src_tgt_filtered_out -> iter;
test_prompt_format_src_tgt_2d -> get_lhotse_dataloader_from_config;
test_prompt_format_src_tgt_2d -> next;
test_prompt_format_src_tgt_2d -> isinstance;
test_prompt_format_src_tgt_2d -> iter;
test_prompt_format_src_tgt_2d -> ids_to_text;
test_prompt_format_src_tgt_2d -> Identity;
test_prompt_format_nemo_sft -> get_lhotse_dataloader_from_config;
test_prompt_format_nemo_sft -> next;
test_prompt_format_nemo_sft -> isinstance;
test_prompt_format_nemo_sft -> iter;
test_prompt_format_nemo_sft -> ids_to_text;
test_prompt_format_nemo_sft -> Identity;
test_prompt_format_nemo_sft_filtered_out -> get_lhotse_dataloader_from_config;
test_prompt_format_nemo_sft_filtered_out -> raises;
test_prompt_format_nemo_sft_filtered_out -> next;
test_prompt_format_nemo_sft_filtered_out -> Identity;
test_prompt_format_nemo_sft_filtered_out -> iter;
test_cut_duration_filter -> DurationFilter;
test_cut_duration_filter -> f;
test_cut_token_per_second_filter -> TokenPerSecondFilter;
test_cut_token_per_second_filter -> f;
test_cut_passes_by_token_count_and_tpt_filter -> TokenCountFilter;
test_cut_passes_by_token_count_and_tpt_filter -> TokenPerTokenFilter;
test_src_tgt_token_filter_requires_prompt_formatting -> raises;
test_src_tgt_token_filter_requires_prompt_formatting -> TokenCountFilter;
test_src_tgt_passes_by_duration_filter -> DurationFilter;
test_src_tgt_passes_by_duration_filter -> TokenPerSecondFilter;
test_src_tgt_token_filter -> deepcopy;
test_src_tgt_token_filter -> concatenate;
test_src_tgt_token_filter -> TokenCountFilter;
test_src_tgt_token_filter -> f;
test_nemo_sft_token_filter_requires_prompt_formatting -> raises;
test_nemo_sft_token_filter_requires_prompt_formatting -> TokenCountFilter;
test_nemo_sft_passes_by_duration_filter -> DurationFilter;
test_nemo_sft_passes_by_duration_filter -> TokenPerSecondFilter;
test_nemo_sft_token_filter -> deepcopy;
test_nemo_sft_token_filter -> array;
test_nemo_sft_token_filter -> TokenCountFilter;
test_nemo_sft_token_filter -> f;
test_top_1_accuracy -> tensor;
test_top_1_accuracy -> TopKClassificationAccuracy;
test_top_1_accuracy -> accuracy;
test_top_1_accuracy -> Size;
test_top_1_accuracy -> abs;
test_top_1_2_accuracy -> tensor;
test_top_1_2_accuracy -> TopKClassificationAccuracy;
test_top_1_2_accuracy -> accuracy;
test_top_1_2_accuracy -> Size;
test_top_1_2_accuracy -> abs;
test_top_1_accuracy_distributed -> tensor;
test_top_1_accuracy_distributed -> TopKClassificationAccuracy;
test_top_1_accuracy_distributed -> accuracy;
test_top_1_accuracy_distributed -> reset;
test_top_1_accuracy_distributed -> stack;
test_top_1_accuracy_distributed -> compute;
test_top_1_accuracy_distributed -> Size;
test_top_1_accuracy_distributed -> abs;
test_top_1_accuracy_distributed -> flip;
test_top_1_accuracy_distributed -> sum;
test_top_1_accuracy_distributed_uneven_batch -> TopKClassificationAccuracy;
test_top_1_accuracy_distributed_uneven_batch -> accuracy;
test_top_1_accuracy_distributed_uneven_batch -> stack;
test_top_1_accuracy_distributed_uneven_batch -> tensor;
test_top_1_accuracy_distributed_uneven_batch -> compute;
test_top_1_accuracy_distributed_uneven_batch -> Size;
test_top_1_accuracy_distributed_uneven_batch -> abs;
test_top_1_accuracy_distributed_uneven_batch -> sum;
test_top_1_accuracy_distributed_uneven_batch -> flip;
test_loss -> run_class_loss_test;
test_loss -> parametrize;
test_loss -> BCELoss;
test_loss -> loss;
test_loss -> allclose;
test_loss -> tensor;
test_punctuation_error_rate -> punctuation_error_rate;
test_OccurancePunctuationErrorRate -> OccurancePunctuationErrorRate;
test_OccurancePunctuationErrorRate -> compute;
test_DatasetPunctuationErrorRate -> DatasetPunctuationErrorRate;
test_DatasetPunctuationErrorRate -> compute;
test_module_toggle_cuda_graphs -> MockModuleWithCudaGraphs;
test_module_toggle_cuda_graphs -> disable_cuda_graphs_recursive;
test_module_toggle_cuda_graphs -> enable_cuda_graphs_recursive;
test_module_toggle_cuda_graphs_by_path -> MockModuleWithCudaGraphsByPath;
test_module_toggle_cuda_graphs_by_path -> disable_cuda_graphs_recursive;
test_module_toggle_cuda_graphs_by_path -> enable_cuda_graphs_recursive;
test_eval_tflops_per_sec_per_gpu -> parametrize;
test_eval_tflops_per_sec_per_gpu -> isinstance;
test_eval_tflops_per_sec_per_gpu -> FLOPsMeasurementCallback;
test_eval_tflops_per_sec_per_gpu -> eval_tflops_per_sec_per_gpu;
test_eval_tflops_per_sec_per_gpu -> approx;
test_eval_tflops_per_sec_per_gpu -> replace;
test_eval_tflops_per_sec_per_gpu -> raises;
test_add_special_tokens -> SentencePieceTokenizer;
test_add_special_tokens -> add_special_tokens;
test_add_special_tokens -> len;
test_add_special_tokens -> set;
test_add_special_tokens -> values;
test_text_to_tokens -> SentencePieceTokenizer;
test_text_to_tokens -> add_special_tokens;
test_text_to_tokens -> text_to_tokens;
test_text_to_tokens -> len;
test_text_to_tokens -> count;
test_text_to_tokens -> split;
test_text_to_tokens -> assertIsInstance;
test_text_to_tokens -> assertTrue;
test_text_to_tokens -> all;
test_text_to_tokens -> isinstance;
test_tokens_to_text -> SentencePieceTokenizer;
test_tokens_to_text -> text_to_tokens;
test_tokens_to_text -> tokens_to_text;
test_tokens_to_text -> assertIsInstance;
test_tokens_to_text -> assertNotEqual;
test_text_to_ids -> SentencePieceTokenizer;
test_text_to_ids -> add_special_tokens;
test_text_to_ids -> text_to_ids;
test_text_to_ids -> len;
test_text_to_ids -> count;
test_text_to_ids -> split;
test_text_to_ids -> token_to_id;
test_ids_to_text -> SentencePieceTokenizer;
test_ids_to_text -> add_special_tokens;
test_ids_to_text -> text_to_ids;
test_ids_to_text -> ids_to_text;
test_tokens_to_ids -> SentencePieceTokenizer;
test_tokens_to_ids -> add_special_tokens;
test_tokens_to_ids -> text_to_tokens;
test_tokens_to_ids -> tokens_to_ids;
test_tokens_to_ids -> len;
test_tokens_to_ids -> count;
test_tokens_to_ids -> token_to_id;
test_tokens_to_ids -> assertIsInstance;
test_tokens_to_ids -> assertTrue;
test_tokens_to_ids -> all;
test_tokens_to_ids -> isinstance;
test_ids_to_tokens -> SentencePieceTokenizer;
test_ids_to_tokens -> add_special_tokens;
test_ids_to_tokens -> text_to_tokens;
test_ids_to_tokens -> tokens_to_ids;
test_ids_to_tokens -> ids_to_tokens;
test_ids_to_tokens -> range;
test_ids_to_tokens -> len;
test_ids_to_tokens -> encode;
test_ids_to_tokens -> assertIsInstance;
test_ids_to_tokens -> assertTrue;
test_ids_to_tokens -> all;
test_ids_to_tokens -> isinstance;
test_flatten -> append;
test_flatten -> enumerate;
test_flatten -> flatten;
test_mask_sequence_tensor -> parametrize;
test_mask_sequence_tensor -> range;
test_mask_sequence_tensor -> randint;
test_mask_sequence_tensor -> randn;
test_mask_sequence_tensor -> mask_sequence_tensor;
test_mask_sequence_tensor -> enumerate;
test_mask_sequence_tensor -> equal;
test_mask_sequence_tensor -> all;
test_mask_sequence_tensor -> raises;
test_mask_sequence_tensor -> tuple;
test_get_full_path_local -> join;
test_get_full_path_local -> range;
test_get_full_path_local -> dirname;
test_get_full_path_local -> get_full_path;
test_get_full_path_local -> create_files;
test_get_full_path_local -> abspath;
test_get_full_path_local -> touch;
test_get_full_path_local -> unlink;
test_get_full_path_local -> isfile;
test_get_full_path_local -> Path;
create_files -> touch;
create_files -> unlink;
create_files -> Path;
test_get_full_path_ais -> join;
test_get_full_path_ais -> relpath;
test_get_full_path_ais -> patch;
test_get_full_path_ais -> range;
test_get_full_path_ais -> touch;
test_get_full_path_ais -> unlink;
test_get_full_path_ais -> index;
test_get_full_path_ais -> ValueError;
test_get_full_path_ais -> create_files;
test_get_full_path_ais -> dirname;
test_get_full_path_ais -> get_full_path;
test_get_full_path_ais -> Path;
test_get_full_path_ais_no_cache -> join;
test_get_full_path_ais_no_cache -> range;
test_get_full_path_ais_no_cache -> get_full_path;
test_get_full_path_audio_file_len_limit -> list;
test_get_full_path_audio_file_len_limit -> join;
test_get_full_path_audio_file_len_limit -> range;
test_get_full_path_audio_file_len_limit -> choice;
test_get_full_path_audio_file_len_limit -> randint;
test_get_full_path_audio_file_len_limit -> str;
test_get_full_path_audio_file_len_limit -> expanduser;
test_get_full_path_audio_file_len_limit -> Path;
test_get_full_path_audio_file_len_limit -> get_full_path;
test_get_full_path_audio_file_len_limit -> rand_name;
test_get_full_path_invalid_type -> raises;
test_get_full_path_invalid_type -> get_full_path;
test_get_full_path_invalid_relative_path -> raises;
test_get_full_path_invalid_relative_path -> get_full_path;
test_is_tarred_dataset -> is_tarred_dataset;
datastore_path_to_cache_path_in_tmpdir -> relpath;
datastore_path_to_cache_path_in_tmpdir -> index;
datastore_path_to_cache_path_in_tmpdir -> ValueError;
datastore_path_to_cache_path_in_tmpdir -> dirname;
num_params -> parameters;
num_params -> numel;
test_get_accepted_adapter_types -> CommonModuleAdapter;
test_get_accepted_adapter_types -> add_adapter;
test_get_accepted_adapter_types -> hasattr;
test_get_accepted_adapter_types -> get_accepted_adapter_types;
test_get_accepted_adapter_types -> list;
test_get_accepted_adapter_types -> len;
test_get_accepted_adapter_types -> get_adapter_cfg;
test_set_accepted_adapter_types_reset_types -> CommonModuleAdapter;
test_set_accepted_adapter_types_reset_types -> get_accepted_adapter_types;
test_set_accepted_adapter_types_reset_types -> hasattr;
test_set_accepted_adapter_types_reset_types -> list;
test_set_accepted_adapter_types_reset_types -> set_accepted_adapter_types;
test_set_accepted_adapter_types_reset_types -> add_adapter;
test_set_accepted_adapter_types_reset_types -> len;
test_set_accepted_adapter_types_reset_types -> get_adapter_cfg;
test_set_accepted_adapter_types_invalid_class -> CommonModuleAdapter;
test_set_accepted_adapter_types_invalid_class -> set_accepted_adapter_types;
test_set_accepted_adapter_types_invalid_class -> hasattr;
test_set_accepted_adapter_types_invalid_class -> raises;
test_set_accepted_adapter_types_invalid_class -> add_adapter;
test_set_accepted_adapter_types_invalid_class -> get_classpath;
test_set_accepted_adapter_types_invalid_class -> get_adapter_cfg;
test_linear_adapter_config -> assert_dataclass_signature_match;
test_linear_adapter_init -> manual_seed;
test_linear_adapter_init -> randn;
test_linear_adapter_init -> LinearAdapter;
test_linear_adapter_init -> no_grad;
test_linear_adapter_init -> adapter;
test_linear_adapter_init -> sum;
test_linear_adapter_init -> hasattr;
test_linear_adapter_init -> abs;
test_linear_adapter_dropout -> manual_seed;
test_linear_adapter_dropout -> randn;
test_linear_adapter_dropout -> LinearAdapter;
test_linear_adapter_dropout -> no_grad;
test_linear_adapter_dropout -> adapter;
test_linear_adapter_dropout -> sum;
test_linear_adapter_dropout -> hasattr;
test_linear_adapter_dropout -> abs;
test_linear_adapter_norm_position -> parametrize;
test_linear_adapter_norm_position -> manual_seed;
test_linear_adapter_norm_position -> randn;
test_linear_adapter_norm_position -> LinearAdapter;
test_linear_adapter_norm_position -> no_grad;
test_linear_adapter_norm_position -> adapter;
test_linear_adapter_norm_position -> sum;
test_linear_adapter_norm_position -> hasattr;
test_linear_adapter_norm_position -> abs;
test_linear_adapter_strategy -> LinearAdapter;
test_linear_adapter_strategy -> hasattr;
test_linear_adapter_strategy -> isinstance;
bpe_tokenizer -> fixture;
bpe_tokenizer -> mktemp;
bpe_tokenizer -> write_text;
bpe_tokenizer -> create_spt_model;
bpe_tokenizer -> SentencePieceTokenizer;
bpe_tokenizer -> str;
canary_tokenizer -> fixture;
canary_tokenizer -> mktemp;
canary_tokenizer -> build_special_tokenizer;
canary_tokenizer -> CanaryTokenizer;
test_canary_prompt_formatter_training -> CanaryPromptFormatter;
test_canary_prompt_formatter_training -> encode_dialog;
test_canary_prompt_formatter_training -> set;
test_canary_prompt_formatter_training -> ids_to_text;
test_canary_prompt_formatter_training -> tolist;
test_canary_prompt_formatter_inference -> CanaryPromptFormatter;
test_canary_prompt_formatter_inference -> encode_dialog;
test_canary_prompt_formatter_inference -> set;
test_canary_prompt_formatter_inference -> tolist;
test_canary_prompt_formatter_inference -> ids_to_text;
test_gemma_prompt_formatter_training -> GemmaPromptFormatter;
test_gemma_prompt_formatter_training -> encode_dialog;
test_gemma_prompt_formatter_training -> set;
test_gemma_prompt_formatter_training -> ids_to_text;
test_gemma_prompt_formatter_training -> tolist;
test_gemma_prompt_formatter_inference -> GemmaPromptFormatter;
test_gemma_prompt_formatter_inference -> encode_dialog;
test_gemma_prompt_formatter_inference -> set;
test_gemma_prompt_formatter_inference -> tolist;
test_gemma_prompt_formatter_inference -> ids_to_text;
test_gemma_prompt_formatter_training_bos_eos_inserted_only_once_in_multiturn -> GemmaPromptFormatter;
test_gemma_prompt_formatter_training_bos_eos_inserted_only_once_in_multiturn -> encode_dialog;
test_gemma_prompt_formatter_training_bos_eos_inserted_only_once_in_multiturn -> sum;
test_llama2_prompt_formatter_training -> Llama2PromptFormatter;
test_llama2_prompt_formatter_training -> encode_dialog;
test_llama2_prompt_formatter_training -> set;
test_llama2_prompt_formatter_training -> ids_to_text;
test_llama2_prompt_formatter_training -> tolist;
test_llama2_prompt_formatter_inference -> Llama2PromptFormatter;
test_llama2_prompt_formatter_inference -> encode_dialog;
test_llama2_prompt_formatter_inference -> set;
test_llama2_prompt_formatter_inference -> tolist;
test_llama2_prompt_formatter_inference -> ids_to_text;
test_llama2_prompt_formatter_training_with_system -> Llama2PromptFormatter;
test_llama2_prompt_formatter_training_with_system -> encode_dialog;
test_llama2_prompt_formatter_training_with_system -> set;
test_llama2_prompt_formatter_training_with_system -> ids_to_text;
test_llama2_prompt_formatter_training_with_system -> tolist;
test_llama2_prompt_formatter_inference_with_system -> Llama2PromptFormatter;
test_llama2_prompt_formatter_inference_with_system -> encode_dialog;
test_llama2_prompt_formatter_inference_with_system -> set;
test_llama2_prompt_formatter_inference_with_system -> tolist;
test_llama2_prompt_formatter_inference_with_system -> ids_to_text;
test_mistral_prompt_formatter_training -> MistralPromptFormatter;
test_mistral_prompt_formatter_training -> encode_dialog;
test_mistral_prompt_formatter_training -> set;
test_mistral_prompt_formatter_training -> ids_to_text;
test_mistral_prompt_formatter_training -> tolist;
test_mistral_prompt_formatter_inference -> MistralPromptFormatter;
test_mistral_prompt_formatter_inference -> encode_dialog;
test_mistral_prompt_formatter_inference -> set;
test_mistral_prompt_formatter_inference -> tolist;
test_mistral_prompt_formatter_inference -> ids_to_text;
test_prompt_formatter_empty_dialog_exception -> _DummyPromptFormatter;
test_prompt_formatter_empty_dialog_exception -> raises;
test_prompt_formatter_empty_dialog_exception -> encode_dialog;
test_prompt_formatter_inference -> _DummyPromptFormatter;
test_prompt_formatter_inference -> encode_dialog;
test_prompt_formatter_inference -> ids_to_text;
test_prompt_formatter_inference_using_content -> _DummyPromptFormatter;
test_prompt_formatter_inference_using_content -> encode_dialog;
test_prompt_formatter_inference_using_content -> keys;
test_prompt_formatter_inference_using_content -> assert_close;
test_prompt_formatter_training -> _DummyPromptFormatter;
test_prompt_formatter_training -> encode_dialog;
test_prompt_formatter_training -> ids_to_text;
test_prompt_formatter_training_using_content -> _DummyPromptFormatter;
test_prompt_formatter_training_using_content -> encode_dialog;
test_prompt_formatter_training_using_content -> keys;
test_prompt_formatter_training_using_content -> assert_close;
test_prompt_formatter_missing_role -> _DummyPromptFormatter;
test_prompt_formatter_missing_role -> raises;
test_prompt_formatter_missing_role -> encode_dialog;
test_prompt_formatter_missing_slots -> _DummyPromptFormatter;
test_prompt_formatter_missing_slots -> raises;
test_prompt_formatter_missing_slots -> encode_dialog;
test_prompt_formatter_aggregate_tokenizer -> _DummyPromptFormatter;
test_prompt_formatter_aggregate_tokenizer -> encode_dialog;
test_prompt_formatter_aggregate_tokenizer -> ids_to_text;
test_prompt_formatter_aggregate_tokenizer_missing_prompt_language -> _DummyPromptFormatter;
test_prompt_formatter_aggregate_tokenizer_missing_prompt_language -> raises;
test_prompt_formatter_aggregate_tokenizer_missing_prompt_language -> encode_dialog;
test_prompt_formatter_preamble_inference -> _DummyPreamblePromptFormatter;
test_prompt_formatter_preamble_inference -> encode_dialog;
test_prompt_formatter_preamble_inference -> ids_to_text;
test_prompt_formatter_premble_training -> _DummyPreamblePromptFormatter;
test_prompt_formatter_premble_training -> encode_dialog;
test_prompt_formatter_premble_training -> ids_to_text;
test_prompt_formatter_explicit_preamble -> _DummyPreamblePromptFormatter;
test_prompt_formatter_explicit_preamble -> encode_dialog;
test_prompt_formatter_explicit_preamble -> ids_to_text;
test_prompt_formatter_wrong_preamble_excpetions -> _DummyPreamblePromptFormatter;
test_prompt_formatter_wrong_preamble_excpetions -> raises;
test_prompt_formatter_wrong_preamble_excpetions -> encode_dialog;
test_english_word_tokenize -> run_only_on;
test_english_word_tokenize -> _create_expected_output;
test_english_word_tokenize -> english_word_tokenize;
test_english_word_tokenize_with_punctuation -> run_only_on;
test_english_word_tokenize_with_punctuation -> _create_expected_output;
test_english_word_tokenize_with_punctuation -> english_word_tokenize;
test_english_word_tokenize_with_contractions -> run_only_on;
test_english_word_tokenize_with_contractions -> _create_expected_output;
test_english_word_tokenize_with_contractions -> english_word_tokenize;
test_english_word_tokenize_with_compound_words -> run_only_on;
test_english_word_tokenize_with_compound_words -> _create_expected_output;
test_english_word_tokenize_with_compound_words -> english_word_tokenize;
test_english_word_tokenize_with_escaped -> run_only_on;
test_english_word_tokenize_with_escaped -> english_word_tokenize;
test_any_locale_word_tokenize -> run_only_on;
test_any_locale_word_tokenize -> _create_expected_output;
test_any_locale_word_tokenize -> any_locale_word_tokenize;
test_any_locale_word_tokenize_with_accents -> run_only_on;
test_any_locale_word_tokenize_with_accents -> _create_expected_output;
test_any_locale_word_tokenize_with_accents -> any_locale_word_tokenize;
test_any_locale_word_tokenize_with_numbers -> run_only_on;
test_any_locale_word_tokenize_with_numbers -> _create_expected_output;
test_any_locale_word_tokenize_with_numbers -> any_locale_word_tokenize;
test_any_locale_word_tokenize_with_numbers -> print;
test_any_locale_word_tokenize_fr -> run_only_on;
test_any_locale_word_tokenize_fr -> _create_expected_output;
test_any_locale_word_tokenize_fr -> any_locale_word_tokenize;
test_any_locale_word_tokenize_with_accents_fr -> run_only_on;
test_any_locale_word_tokenize_with_accents_fr -> _create_expected_output;
test_any_locale_word_tokenize_with_accents_fr -> any_locale_word_tokenize;
_parse_text -> encode;
_parse_text -> decode;
_parse_text -> replace;
test_english_chars_tokenizer -> run_only_on;
test_english_chars_tokenizer -> EnglishCharsTokenizer;
test_english_chars_tokenizer -> _parse_text;
test_english_chars_tokenizer -> len;
test_english_chars_tokenizer_unknown_token -> run_only_on;
test_english_chars_tokenizer_unknown_token -> EnglishCharsTokenizer;
test_english_chars_tokenizer_unknown_token -> _parse_text;
test_english_chars_tokenizer_unknown_token -> len;
test_english_chars_tokenizer_accented_character -> run_only_on;
test_english_chars_tokenizer_accented_character -> EnglishCharsTokenizer;
test_english_chars_tokenizer_accented_character -> _parse_text;
test_english_chars_tokenizer_accented_character -> len;
test_german_chars_tokenizer -> run_only_on;
test_german_chars_tokenizer -> GermanCharsTokenizer;
test_german_chars_tokenizer -> _parse_text;
test_german_chars_tokenizer -> len;
test_italian_chars_tokenizer -> run_only_on;
test_italian_chars_tokenizer -> ItalianCharsTokenizer;
test_italian_chars_tokenizer -> _parse_text;
test_italian_chars_tokenizer -> len;
test_spanish_chars_tokenizer -> run_only_on;
test_spanish_chars_tokenizer -> SpanishCharsTokenizer;
test_spanish_chars_tokenizer -> _parse_text;
test_spanish_chars_tokenizer -> len;
test_vietnamese_chars_tokenizer -> run_only_on;
test_vietnamese_chars_tokenizer -> VietnameseCharsTokenizer;
test_vietnamese_chars_tokenizer -> _parse_text;
test_vietnamese_chars_tokenizer -> len;
test_french_chars_tokenizer -> run_only_on;
test_french_chars_tokenizer -> FrenchCharsTokenizer;
test_french_chars_tokenizer -> _parse_text;
test_french_chars_tokenizer -> len;
test_ipa_tokenizer -> run_only_on;
test_ipa_tokenizer -> IpaG2p;
test_ipa_tokenizer -> IPATokenizer;
test_ipa_tokenizer -> _parse_text;
test_ipa_tokenizer_unsupported_locale -> run_only_on;
test_ipa_tokenizer_unsupported_locale -> IpaG2p;
test_ipa_tokenizer_unsupported_locale -> raises;
test_ipa_tokenizer_unsupported_locale -> IPATokenizer;
test_ipa_tokenizer_de_de -> run_only_on;
test_ipa_tokenizer_de_de -> IpaG2p;
test_ipa_tokenizer_de_de -> IPATokenizer;
test_ipa_tokenizer_de_de -> _parse_text;
test_ipa_tokenizer_it_it -> run_only_on;
test_ipa_tokenizer_it_it -> IpaG2p;
test_ipa_tokenizer_it_it -> IPATokenizer;
test_ipa_tokenizer_it_it -> _parse_text;
test_ipa_tokenizer_en_us -> run_only_on;
test_ipa_tokenizer_en_us -> IpaG2p;
test_ipa_tokenizer_en_us -> IPATokenizer;
test_ipa_tokenizer_en_us -> extend;
test_ipa_tokenizer_en_us -> _parse_text;
test_ipa_tokenizer_es_es -> run_only_on;
test_ipa_tokenizer_es_es -> IpaG2p;
test_ipa_tokenizer_es_es -> IPATokenizer;
test_ipa_tokenizer_es_es -> _parse_text;
test_ipa_tokenizer_fr_fr -> run_only_on;
test_ipa_tokenizer_fr_fr -> IpaG2p;
test_ipa_tokenizer_fr_fr -> IPATokenizer;
test_ipa_tokenizer_fr_fr -> _parse_text;
test_ipa_tokenizer_fixed_vocab -> run_only_on;
test_ipa_tokenizer_fixed_vocab -> IpaG2p;
test_ipa_tokenizer_fixed_vocab -> IPATokenizer;
test_ipa_tokenizer_fixed_vocab -> _parse_text;
test_ipa_tokenizer_fixed_vocab -> len;
test_ipa_tokenizer_fixed_vocab -> list;
test_japanese_phoneme_tokenizer -> run_only_on;
test_japanese_phoneme_tokenizer -> JapaneseG2p;
test_japanese_phoneme_tokenizer -> JapanesePhonemeTokenizer;
test_japanese_phoneme_tokenizer -> _parse_text;
test_cook_raw_images -> cook_raw_images;
test_flux_12b -> pretrain_recipe;
test_flux_535m -> unit_test_recipe;
train_data -> Config;
small_llama_cfg -> Config;
verify_distcp_dir -> basename;
verify_distcp_dir -> join;
verify_distcp_dir -> isdir;
verify_distcp_dir -> isfile;
verify_distcp_dir -> get_world_size;
verify_distcp_dir -> len;
verify_distcp_dir -> listdir;
verify_distcp_dir -> endswith;
verify_ckpt_dir -> join;
verify_ckpt_dir -> listdir;
verify_ckpt_dir -> any;
verify_ckpt_dir -> len;
verify_ckpt_dir -> endswith;
verify_ckpt_dir -> isdir;
verify_ckpt_dir -> verify_distcp_dir;
verify_ckpt_dir -> isfile;
_check_attrs -> items;
_check_attrs -> hasattr;
_check_attrs -> getattr;
walk_fn -> hasattr;
walk_fn -> _check_attrs;
walk_fn -> isinstance;
walk_fn -> fill_;
mixtral_8x7b -> OrdTokenizer;
mixtral_8x7b -> MixtralModel;
mixtral_8x7b -> MixtralConfig8x7B;
mixtral_8x7b -> get_mixtral_expected_ckpt;
mistral_7b -> OrdTokenizer;
mistral_7b -> MistralModel;
mistral_7b -> MistralConfig7B;
mistral_7b -> get_mistral_expected_ckpt;
make_lora -> LoRA;
load_dcp -> FileSystemReader;
load_dcp -> read_metadata;
load_dcp -> load;
load_dcp -> isinstance;
load_dcp -> Path;
load_dcp -> empty;
load_dcp -> items;
load_dcp -> type;
reset_configs -> LlamaModel;
reset_configs -> MockDataModule;
reset_configs -> Trainer;
reset_configs -> Config;
reset_configs -> MegatronStrategy;
test_model_validation -> reset_configs;
test_model_validation -> _validate_config;
test_model_validation -> raises;
test_data_validation -> reset_configs;
test_data_validation -> _validate_config;
test_data_validation -> raises;
test_trainer_validatiopn -> reset_configs;
test_trainer_validatiopn -> _validate_config;
test_trainer_validatiopn -> raises;
test_output_path_exists_no_overwrite -> raises;
test_output_path_exists_no_overwrite -> TemporaryDirectory;
test_output_path_exists_no_overwrite -> import_ckpt;
test_output_path_exists_no_overwrite -> LlamaModel;
test_output_path_exists_no_overwrite -> Llama32Config1B;
test_output_path_exists_no_overwrite -> export_ckpt;
get_trainer -> Trainer;
get_megatron_strategy -> MegatronStrategy;
get_megatron_strategy -> DistributedDataParallelConfig;
get_my_local_ckpt_node_dir -> str;
get_my_local_ckpt_node_dir -> gethostname;
get_my_local_ckpt_node_dir -> Path;
find_latest_local_ckpt_step -> compile;
find_latest_local_ckpt_step -> iterdir;
find_latest_local_ckpt_step -> is_dir;
find_latest_local_ckpt_step -> warning;
find_latest_local_ckpt_step -> match;
find_latest_local_ckpt_step -> int;
find_latest_local_ckpt_step -> group;
run_test -> Namespace;
run_test -> int;
run_test -> Path;
run_test -> get_my_local_ckpt_node_dir;
run_test -> debug;
run_test -> Llama3Config145M;
run_test -> MockDataModule;
run_test -> MegatronMixedPrecision;
run_test -> get_megatron_strategy;
run_test -> LlamaModel;
run_test -> get_optimizer;
run_test -> ModelCheckpoint;
run_test -> LocalCheckpointCallback;
run_test -> CrashCallback;
run_test -> NeMoLogger;
run_test -> get_trainer;
run_test -> hasattr;
run_test -> update_trainer_local_checkpoint_io;
run_test -> AutoResume;
run_test -> is_initialized;
run_test -> find_latest_local_ckpt_step;
run_test -> CheckResumeStepCallback;
run_test -> train;
run_test -> get;
run_test -> exists;
run_test -> mkdir;
run_test -> is_available;
run_test -> barrier;
run_test -> info;
run_test -> rmtree;
run_test -> upper;
some_first -> ValueError;
get_dtype_device -> ValueError;
get_dtype_device -> some_first;
get_dtype_device -> get_dtype_device;
get_dtype_device -> TypeError;
get_dtype_device -> next;
get_dtype_device -> values;
get_dtype_device -> parameters;
batch_collator -> cat;
batch_collator -> tuple;
batch_collator -> ValueError;
batch_collator -> batch_collator;
batch_collator -> range;
batch_collator -> len;
_reset_megatron_parallel_state -> empty_cache;
_reset_megatron_parallel_state -> is_initialized;
_reset_megatron_parallel_state -> destroy_model_parallel;
_reset_megatron_parallel_state -> destroy_process_group;
reset_megatron_parallel_state -> _reset_megatron_parallel_state;
test_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> run_only_on;
test_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> abspath;
test_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> check_call;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> TemporaryDirectory;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> Path;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> exists;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> is_dir;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> reset_megatron_parallel_state;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> ModelCheckpoint;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> TensorBoardLogger;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> NeMoLogger;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> LitAutoEncoder;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> MegatronStrategy;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> Trainer;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> MNISTDataModule;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> train;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> _teardown;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> replace;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> batch_collator;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> predict;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> set;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> str;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> ExampleConfig;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> AutoResume;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> MegatronDataSampler;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> listdir;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> keys;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> len;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> test_dataloader;
run_train_mnist_litautoencoder_with_megatron_strategy_single_gpu -> track_io;
test_loss_reduction -> MSELossReduction;
predict_loss_reduction -> PassthroughLossReduction;
test_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> run_only_on;
test_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> abspath;
test_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> check_call;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> TemporaryDirectory;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> Path;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> exists;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> is_dir;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> reset_megatron_parallel_state;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> ModelCheckpoint;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> TensorBoardLogger;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> NeMoLogger;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> LitAutoEncoder;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> FSDPStrategy;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> Trainer;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> MNISTDataModule;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> train;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> _teardown;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> replace;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> batch_collator;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> predict;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> set;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> str;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> ExampleConfig;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> AutoResume;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> MegatronDataSampler;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> listdir;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> keys;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> len;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> test_dataloader;
run_train_mnist_litautoencoder_with_fsdp_strategy_single_gpu -> track_io;
align_labels -> float;
align_labels -> contiguous;
align_labels -> view;
align_labels -> ValueError;
align_labels -> str;
test_calculate_model_size -> calculate_model_size;
test_calculate_train_time -> _estimate_training_time;
test_modify_cfg -> modify_cfg;
test_modify_cfg -> partial;
test_calculate_model_size_utils -> round;
test_calculate_model_size_utils -> _calculate_model_size;
test_model_size_params -> items;
test_model_size_params -> ModelSizeParams;
test_model_size_params -> init_params;
test_gpt_grid_search -> GPT3GridSearch;
test_gpt_grid_search -> init_params;
test_gpt_grid_search -> range;
test_bert_grid_search -> BertGridSearch;
test_bert_grid_search -> init_params;
test_t5_grid_search -> T5GridSearch;
test_t5_grid_search -> init_params;
get_auto_configs -> items;
get_auto_configs -> append;
test_llama_model -> AutoConfigurator;
test_llama_model -> generate_configs;
test_llama_model -> zip;
test_llama_model -> get_auto_configs;
test_llama_model -> partial;
test_llama_model -> keys;
test_llama_model -> values;
test_llama_model -> len;
test_mistral_model -> AutoConfigurator;
test_mistral_model -> generate_configs;
test_mistral_model -> zip;
test_mistral_model -> get_auto_configs;
test_mistral_model -> partial;
test_mistral_model -> keys;
test_mistral_model -> values;
test_mistral_model -> len;
test_mixtral_model -> AutoConfigurator;
test_mixtral_model -> generate_configs;
test_mixtral_model -> zip;
test_mixtral_model -> get_auto_configs;
test_mixtral_model -> partial;
test_mixtral_model -> keys;
test_mixtral_model -> values;
test_mixtral_model -> len;
test_gemma_model -> AutoConfigurator;
test_gemma_model -> generate_configs;
test_gemma_model -> zip;
test_gemma_model -> get_auto_configs;
test_gemma_model -> partial;
test_gemma_model -> keys;
test_gemma_model -> values;
test_gemma_model -> len;
test_nemotron_model -> AutoConfigurator;
test_nemotron_model -> generate_configs;
test_nemotron_model -> zip;
test_nemotron_model -> get_auto_configs;
test_nemotron_model -> partial;
test_nemotron_model -> keys;
test_nemotron_model -> values;
test_nemotron_model -> len;
test_nemotron_model -> nemotron_model;
test_nemotron_model -> isinstance;
test_finetune_lora -> AutoConfigurator;
test_finetune_lora -> generate_configs;
test_finetune_lora -> zip;
test_finetune_lora -> get_auto_configs;
test_finetune_lora -> partial;
test_finetune_lora -> keys;
test_finetune_lora -> values;
test_finetune_lora -> len;
test_finetune_dora -> AutoConfigurator;
test_finetune_dora -> generate_configs;
test_finetune_dora -> zip;
test_finetune_dora -> get_auto_configs;
test_finetune_dora -> partial;
test_finetune_dora -> keys;
test_finetune_dora -> values;
test_finetune_dora -> len;
test_finetune -> AutoConfigurator;
test_finetune -> generate_configs;
test_finetune -> zip;
test_finetune -> get_auto_configs;
test_finetune -> partial;
test_finetune -> keys;
test_finetune -> values;
test_finetune -> len;
mock_average_losses -> stack;
mock_average_losses -> repeat;
mock_average_losses -> len;
mock_average_losses -> detach;
mock_average_losses -> mean;
mock_average_losses -> clone;
mock_distributed -> fixture;
mock_distributed -> patch;
mock_distributed -> MagicMock;
mock_distributed -> tensor;
test_hard_negative_ranking_loss -> HardNegativeRankingLoss;
test_hard_negative_ranking_loss -> randn;
test_hard_negative_ranking_loss -> forward;
test_hard_negative_ranking_loss -> isinstance;
test_hard_negative_ranking_loss -> allclose;
test_hard_negative_ranking_loss -> dim;
test_hard_negative_ranking_loss -> detach;
test_average_losses_mock -> mock_average_losses;
test_average_losses_mock -> tensor;
test_average_losses_mock -> allclose;
test_average_losses_mock -> repeat;
test_average_losses_mock -> Size;
test_bert_in_batch_negatives_loss -> BERTInBatchExclusiveHardNegativesRankingLoss;
test_bert_in_batch_negatives_loss -> randn;
test_bert_in_batch_negatives_loss -> forward;
test_bert_in_batch_negatives_loss -> isinstance;
test_bert_in_batch_negatives_loss -> allclose;
test_bert_in_batch_negatives_loss -> dim;
test_bert_in_batch_negatives_loss -> detach;
test_bert_loss_with_sop -> BERTLossReduction;
test_bert_loss_with_sop -> hasattr;
test_bert_loss_forward_with_sop -> BERTLossReduction;
test_bert_loss_forward_with_sop -> patch;
test_bert_loss_forward_with_sop -> forward;
test_bert_loss_forward_with_sop -> isinstance;
test_bert_loss_forward_with_sop -> ones;
test_bert_loss_forward_with_sop -> tensor;
test_bert_loss_forward_with_sop -> randn;
test_bert_loss_forward_with_sop -> raises;
test_bert_in_batch_negatives_init -> BERTInBatchExclusiveHardNegativesRankingLoss;
test_bert_in_batch_forward_validation -> BERTInBatchExclusiveHardNegativesRankingLoss;
test_bert_in_batch_forward_validation -> randn;
test_bert_in_batch_forward_validation -> forward;
test_bert_in_batch_forward_validation -> isinstance;
test_sentence_order_prediction -> parametrize;
test_sentence_order_prediction -> tensor;
test_sentence_order_prediction -> sentence_order_prediction_loss;
test_sentence_order_prediction -> isinstance;
test_sentence_order_prediction -> dim;
create_temp_dataset_files -> join;
create_temp_dataset_files -> open;
create_temp_dataset_files -> write;
temp_dataset_dir -> TemporaryDirectory;
temp_dataset_dir -> Path;
basic_datamodule -> create_temp_dataset_files;
basic_datamodule -> BERTPreTrainingDataModule;
basic_datamodule -> FineTuningDataModule;
basic_datamodule -> PreTrainingDataModule;
test_initialization_with_weighted_paths -> create_temp_dataset_files;
test_initialization_with_weighted_paths -> BERTPreTrainingDataModule;
test_initialization_with_weighted_paths -> PreTrainingDataModule;
test_initialization_with_dict_paths -> create_temp_dataset_files;
test_initialization_with_dict_paths -> BERTPreTrainingDataModule;
test_initialization_with_dict_paths -> PreTrainingDataModule;
test_rampup_batch_size -> create_temp_dataset_files;
test_rampup_batch_size -> BERTPreTrainingDataModule;
test_rampup_batch_size -> PreTrainingDataModule;
test_state_dict_and_load_state_dict -> MagicMock;
test_state_dict_and_load_state_dict -> patch;
test_state_dict_and_load_state_dict -> state_dict;
test_state_dict_and_load_state_dict -> load_state_dict;
test_state_dict_and_load_state_dict -> assert_called_once_with;
test_state_dict_and_load_state_dict -> dict;
test_state_dict_and_load_state_dict -> setup;
test_reconfigure_limit_batches -> MagicMock;
test_reconfigure_limit_batches -> patch;
test_reconfigure_limit_batches -> reconfigure_limit_batches;
test_reconfigure_limit_batches -> raises;
test_reconfigure_limit_batches -> _reconfigure_limit_batches;
temp_jsonl_file -> unlink;
temp_jsonl_file -> NamedTemporaryFile;
temp_jsonl_file -> Path;
temp_jsonl_file -> write;
temp_jsonl_file -> dumps;
test_get_dataset_root -> get_dataset_root;
test_get_dataset_root -> exists;
test_get_dataset_root -> is_dir;
test_bert_embedding_dataset_train -> MockTokenizer;
test_bert_embedding_dataset_train -> BertEmbeddingDataset;
test_bert_embedding_dataset_train -> _collate_fn;
test_bert_embedding_dataset_train -> isinstance;
test_bert_embedding_dataset_train -> len;
test_bert_embedding_dataset_train -> str;
test_bert_embedding_dataset_query -> MockTokenizer;
test_bert_embedding_dataset_query -> BertEmbeddingDataset;
test_bert_embedding_dataset_query -> str;
test_bert_embedding_dataset_doc -> MockTokenizer;
test_bert_embedding_dataset_doc -> BertEmbeddingDataset;
test_bert_embedding_dataset_doc -> str;
test_create_sft_dataset -> MockTokenizer;
test_create_sft_dataset -> create_sft_dataset;
test_create_sft_dataset -> isinstance;
test_create_sft_dataset -> len;
test_truncation_methods -> MockTokenizer;
test_truncation_methods -> BertEmbeddingDataset;
test_truncation_methods -> raises;
test_truncation_methods -> str;
test_truncation_methods -> GPTSFTDataset;
test_truncation_methods -> _truncation;
test_collate_fn_all_data_types -> MockTokenizer;
test_collate_fn_all_data_types -> BertEmbeddingDataset;
test_collate_fn_all_data_types -> _collate_fn;
test_collate_fn_all_data_types -> len;
test_collate_fn_all_data_types -> str;
test_collate_fn_attention_mask -> MockTokenizer;
test_collate_fn_attention_mask -> BertEmbeddingDataset;
test_collate_fn_attention_mask -> _collate_fn;
test_collate_fn_attention_mask -> all;
test_collate_fn_attention_mask -> str;
test_collate_fn_batch_size_handling -> MockTokenizer;
test_collate_fn_batch_size_handling -> BertEmbeddingDataset;
test_collate_fn_batch_size_handling -> _collate_fn;
test_collate_fn_batch_size_handling -> str;
test_collate_fn_metadata_handling -> MockTokenizer;
test_collate_fn_metadata_handling -> BertEmbeddingDataset;
test_collate_fn_metadata_handling -> _collate_fn;
test_collate_fn_metadata_handling -> len;
test_collate_fn_metadata_handling -> str;
dataset_root -> mkdir;
dataset_root -> touch;
mock_tokenizer -> MagicMock;
mock_tokenizer -> ord;
mock_tokenizer -> AutoTokenizer;
mock_tokenizer -> MockTokenizer;
mock_tokenizer -> tensor;
test_init_default_values -> FineTuningDataModule;
test_create_dataset -> patch;
test_create_dataset -> _create_dataset;
test_create_dataset -> assert_called_once;
test_create_dataset -> open;
test_create_dataset -> dump;
test_create_dataset -> str;
test_train_dataloader -> patch;
test_train_dataloader -> MagicMock;
test_train_dataloader -> setup;
test_train_dataloader -> train_dataloader;
test_train_dataloader -> assert_called_once;
test_setup_with_max_train_samples -> MagicMock;
test_setup_with_max_train_samples -> setup;
test_setup_with_max_train_samples -> int;
test_setup_with_max_train_samples -> ceil;
test_consumed_samples_calculation -> MagicMock;
test_consumed_samples_calculation -> setup;
test_consumed_samples_calculation -> state_dict;
test_consumed_samples_calculation -> compute_consumed_samples;
test_tokenizer_initialization -> MagicMock;
test_tokenizer_initialization -> FineTuningDataModule;
test_tokenizer_initialization -> TiktokenTokenizer;
test_val_dataloader -> patch;
test_val_dataloader -> MagicMock;
test_val_dataloader -> setup;
test_val_dataloader -> val_dataloader;
test_val_dataloader -> assert_called_once;
test_test_dataloader -> patch;
test_test_dataloader -> MagicMock;
test_test_dataloader -> setup;
test_test_dataloader -> test_dataloader;
test_test_dataloader -> assert_called_once;
test_extract_tokenizer_model_name -> MagicMock;
test_extract_tokenizer_model_name -> configure_mock;
test_extract_tokenizer_model_name -> _extract_tokenizer_model_name;
test_extract_tokenizer_model_name -> startswith;
test_extract_tokenizer_model_name -> create_mock_tokenizer;
test_extract_tokenizer_model_name -> str;
test_extract_tokenizer_model_name -> hash;
create_mock_tokenizer -> MagicMock;
create_mock_tokenizer -> configure_mock;
mock_data_module -> BERTMockDataModule;
mock_data_module -> setup;
mock_data_module -> HFMockDataModule;
mock_data_module -> MockDataModule;
test_mock_bert_dataset_length -> _MockBERTDataset;
test_mock_bert_dataset_length -> len;
test_mock_bert_dataset_item_shapes -> _MockBERTDataset;
test_mock_bert_dataset_item_shapes -> isinstance;
test_mock_bert_dataset_item_shapes -> set;
test_mock_bert_dataset_item_shapes -> len;
test_mock_bert_dataset_item_shapes -> keys;
test_data_module_train_dataloader -> train_dataloader;
test_data_module_train_dataloader -> next;
test_data_module_train_dataloader -> isinstance;
test_data_module_train_dataloader -> iter;
test_data_module_train_dataloader -> set;
test_data_module_train_dataloader -> Size;
test_data_module_train_dataloader -> keys;
test_data_module_train_dataloader -> issubset;
test_data_module_val_dataloader -> val_dataloader;
test_data_module_val_dataloader -> next;
test_data_module_val_dataloader -> iter;
test_data_module_val_dataloader -> Size;
test_data_module_test_dataloader -> test_dataloader;
test_data_module_test_dataloader -> next;
test_data_module_test_dataloader -> iter;
test_data_module_test_dataloader -> Size;
test_mock_bert_dataset_deterministic -> _MockBERTDataset;
test_mock_bert_dataset_deterministic -> equal;
test_data_module_batch_sizes -> BERTMockDataModule;
mock_trainer -> MagicMock;
mock_sampler -> MagicMock;
sample_specter_dataset -> from_dict;
sample_specter_dataset -> DatasetDict;
specter_data_module -> object;
specter_data_module -> patch;
specter_data_module -> SpecterDataModule;
test_preprocess_and_split_data -> _preprocess_and_split_data;
test_preprocess_and_split_data -> exists;
test_preprocess_and_split_data -> open;
test_preprocess_and_split_data -> readlines;
test_preprocess_and_split_data -> loads;
test_preprocess_and_split_data -> isinstance;
test_preprocess_and_split_data -> len;
test_preprocess_and_split_data -> load;
test_preprocess_and_split_data -> startswith;
test_preprocess_and_split_data -> endswith;
test_force_redownload -> prepare_data;
test_force_redownload -> exists;
test_force_redownload -> stat;
test_force_redownload -> open;
test_force_redownload -> read;
test_delete_raw -> prepare_data;
test_delete_raw -> touch;
test_delete_raw -> _preprocess_and_split_data;
test_delete_raw -> exists;
test_huggingface_bert_base_config -> HuggingFaceBertBaseConfig;
test_huggingface_bert_large_config -> HuggingFaceBertLargeConfig;
test_megatron_bert_base_config -> MegatronBertBaseConfig;
test_megatron_bert_large_config -> MegatronBertLargeConfig;
mock_ctx -> MagicMock;
mock_ctx -> MockConfig;
mock_ctx -> TransformCTX;
mock_ctx -> Module;
test_import_qkv -> randn;
test_import_qkv -> transform_fn;
test_import_qkv_bias -> randn;
test_import_qkv_bias -> transform_fn;
test_import_embedding -> randn;
test_import_embedding -> transform_fn;
test_import_embedding -> int;
test_import_embedding -> assert_close;
test_import_embedding -> all;
test_import_embedding -> ceil;
test_import_embedding -> tensor;
test_import_output_bias -> randn;
test_import_output_bias -> transform;
test_import_output_bias -> int;
test_import_output_bias -> assert_close;
test_import_output_bias -> all;
test_import_output_bias -> ceil;
test_import_output_bias -> tensor;
test_export_qkv -> randn;
test_export_qkv -> transform;
test_export_qkv_bias -> randn;
test_export_qkv_bias -> transform;
test_export_embedding -> randn;
test_export_embedding -> transform;
test_export_embedding -> assert_close;
sample_batch -> randint;
sample_batch -> ones;
sample_batch -> zeros;
sample_packed_batch -> tensor;
basic_config -> BertConfig;
test_get_batch_on_this_cp_rank_no_cp -> patch;
test_get_batch_on_this_cp_rank_no_cp -> get_batch_on_this_cp_rank;
test_get_packed_seq_params -> get_packed_seq_params;
test_bert_model_initialization -> MagicMock;
test_bert_model_initialization -> BertModel;
test_bert_model_initialization -> hasattr;
test_bert_forward_step -> BertModel;
test_bert_forward_step -> MagicMock;
test_bert_forward_step -> bert_forward_step;
test_bert_forward_step -> assert_called_once;
test_bert_forward_step_with_tokentypes -> BertModel;
test_bert_forward_step_with_tokentypes -> MagicMock;
test_bert_forward_step_with_tokentypes -> bert_forward_step;
test_bert_forward_step_with_packed_seqs -> BertModel;
test_bert_forward_step_with_packed_seqs -> MagicMock;
test_bert_forward_step_with_packed_seqs -> tensor;
test_bert_forward_step_with_packed_seqs -> bert_forward_step;
test_bert_model_training_step -> BertModel;
test_bert_model_training_step -> MagicMock;
test_bert_model_training_step -> training_step;
test_bert_model_training_step -> assert_called_once_with;
test_bert_model_validation_step -> BertModel;
test_bert_model_validation_step -> MagicMock;
test_bert_model_validation_step -> validation_step;
test_bert_model_validation_step -> assert_called_once_with;
test_get_batch_with_context_parallel -> patch;
test_get_batch_with_context_parallel -> get_batch_on_this_cp_rank;
test_get_batch_with_context_parallel -> items;
setup_parallel_state -> fixture;
setup_parallel_state -> initialize_model_parallel;
setup_parallel_state -> destroy_model_parallel;
setup_parallel_state -> is_initialized;
setup_parallel_state -> init_process_group;
mock_config -> MagicMock;
mock_submodules_config -> MagicMock;
test_bert_embedding_data_step -> iter;
test_bert_embedding_data_step -> values;
test_bert_embedding_data_step -> assert_called_once;
test_bert_embedding_data_step -> randint;
test_bert_embedding_data_step -> ones;
test_bert_embedding_data_step -> zeros;
test_bert_embedding_data_step -> tensor;
test_bert_embedding_data_step -> ones_like;
test_bert_embedding_data_step -> isinstance;
test_bert_embedding_data_step -> patch;
test_bert_embedding_data_step -> MagicMock;
test_bert_embedding_data_step -> bert_embedding_data_step;
test_bert_embedding_data_step_tuple_input -> iter;
test_bert_embedding_data_step_tuple_input -> values;
test_bert_embedding_data_step_tuple_input -> isinstance;
test_bert_embedding_data_step_tuple_input -> all;
test_bert_embedding_data_step_tuple_input -> randint;
test_bert_embedding_data_step_tuple_input -> ones;
test_bert_embedding_data_step_tuple_input -> zeros;
test_bert_embedding_data_step_tuple_input -> ones_like;
test_bert_embedding_data_step_tuple_input -> patch;
test_bert_embedding_data_step_tuple_input -> MagicMock;
test_bert_embedding_data_step_tuple_input -> bert_embedding_data_step;
test_bert_embedding_forward_step -> MagicMock;
test_bert_embedding_forward_step -> randn;
test_bert_embedding_forward_step -> bert_embedding_forward_step;
test_bert_embedding_forward_step -> randint;
test_bert_embedding_forward_step -> ones;
test_bert_embedding_forward_step -> zeros;
test_training_loss_reduction_initialization -> BertEmbeddingMiniConfig;
test_training_loss_reduction_initialization -> BertEmbeddingModel;
test_training_loss_reduction_initialization -> isinstance;
test_training_loss_reduction_initialization -> MagicMock;
test_validation_loss_reduction_initialization -> BertEmbeddingMiniConfig;
test_validation_loss_reduction_initialization -> BertEmbeddingModel;
test_validation_loss_reduction_initialization -> isinstance;
test_validation_loss_reduction_initialization -> MagicMock;
test_embedding_head_forward -> randn;
test_embedding_head_forward -> ones;
test_embedding_head_forward -> embedding_head;
test_embedding_head_forward -> norm;
test_embedding_head_forward -> allclose;
test_embedding_head_forward -> ones_like;
test_embedding_head_masked_tokens -> randn;
test_embedding_head_masked_tokens -> tensor;
test_embedding_head_masked_tokens -> embedding_head;
test_large_config -> BertEmbeddingLargeConfig;
test_mini_config -> BertEmbeddingMiniConfig;
mock_cuda -> ones_like;
compare_ckpts -> isinstance;
compare_ckpts -> keys;
compare_ckpts -> compare_ckpts;
compare_ckpts -> print;
compare_ckpts -> all;
compare_ckpts -> type;
compare_ckpts -> set;
compare_ckpts -> enumerate;
compare_ckpts -> len;
compare_ckpts -> zip;
compare_ckpts -> join;
compare_ckpts -> ValueError;
compare_ckpts -> str;
remove_module_from_key -> isinstance;
remove_module_from_key -> join;
remove_module_from_key -> filter;
remove_module_from_key -> split;
remove_module_from_dict_keys -> isinstance;
remove_module_from_dict_keys -> remove_module_from_key;
remove_module_from_dict_keys -> items;
count_parameters -> PrettyTable;
count_parameters -> named_parameters;
count_parameters -> print;
count_parameters -> numel;
count_parameters -> add_row;
input_tensor -> tensor;
larger_input_tensor -> randn;
test_openai_gelu -> openai_gelu;
test_openai_gelu -> tensor;
test_openai_gelu -> allclose;
test_openai_gelu -> all;
test_openai_gelu -> zeros_like;
test_quick_gelu -> quick_gelu;
test_quick_gelu -> tensor;
test_quick_gelu -> allclose;
test_quick_gelu -> all;
test_quick_gelu -> zeros_like;
test_squared_relu -> squared_relu;
test_squared_relu -> tensor;
test_squared_relu -> allclose;
test_activation_shapes -> openai_gelu;
test_activation_shapes -> quick_gelu;
test_activation_shapes -> squared_relu;
test_gelu_implementation_equivalence -> linspace;
test_gelu_implementation_equivalence -> paper_gelu;
test_gelu_implementation_equivalence -> openai_gelu;
test_gelu_implementation_equivalence -> allclose;
test_gelu_implementation_equivalence -> tanh;
test_gelu_implementation_equivalence -> sqrt;
test_gelu_implementation_equivalence -> pow;
paper_gelu -> tanh;
paper_gelu -> sqrt;
paper_gelu -> pow;
test_squared_relu_0 -> tensor;
test_squared_relu_0 -> squared_relu;
test_squared_relu_0 -> allclose;
test_gradient_flow -> enable_grad;
test_gradient_flow -> tensor;
test_gradient_flow -> openai_gelu;
test_gradient_flow -> sum;
test_gradient_flow -> backward;
test_gradient_flow -> zero_;
test_gradient_flow -> quick_gelu;
test_gradient_flow -> squared_relu;
test_gradient_flow -> allclose;
test_gradient_flow -> zeros_like;
add_relu -> isinstance;
add_relu -> Sequential;
add_relu -> ReLU;
add_relu_named -> isinstance;
add_relu_named -> Sequential;
add_relu_named -> ReLU;
add_relu_first -> isinstance;
add_relu_first -> Sequential;
add_relu_first -> ReLU;
test_map_identity -> Linear;
test_map_identity -> map;
test_map_transform -> Linear;
test_map_transform -> map;
test_map_transform -> isinstance;
test_walk_custom_module -> CustomMLP;
test_walk_custom_module -> walk;
test_walk_custom_module -> isinstance;
test_walk_shared_module -> Linear;
test_walk_shared_module -> SharedMLP;
test_walk_shared_module -> clone;
test_walk_shared_module -> walk;
test_walk_shared_module -> allclose;
test_walk_shared_module -> isinstance;
test_leaf_only -> walk;
test_leaf_only -> isinstance;
test_leaf_only -> CustomMLP;
test_walk_module_container -> parametrize;
test_walk_module_container -> walk;
test_walk_module_container -> isinstance;
test_walk_module_container -> allclose;
test_walk_module_container -> Linear;
test_walk_module_container -> module_container;
test_walk_module_container -> Sequential;
test_walk_module_container -> len;
test_walk_module_container -> ones_like;
test_walk_module_container -> fill_;
test_walk_module_container_with_kwargs -> parametrize;
test_walk_module_container_with_kwargs -> walk;
test_walk_module_container_with_kwargs -> isinstance;
test_walk_module_container_with_kwargs -> allclose;
test_walk_module_container_with_kwargs -> Linear;
test_walk_module_container_with_kwargs -> module_container;
test_walk_module_container_with_kwargs -> Sequential;
test_walk_module_container_with_kwargs -> len;
test_walk_module_container_with_kwargs -> fill_;
test_walk_module_container_with_kwargs -> ones_like;
test_walk_module_container_with_recursion -> parametrize;
test_walk_module_container_with_recursion -> walk;
test_walk_module_container_with_recursion -> isinstance;
test_walk_module_container_with_recursion -> Sequential;
test_walk_module_container_with_recursion -> module_container;
test_walk_module_container_with_recursion -> len;
test_walk_module_container_with_recursion -> allclose;
test_walk_module_container_with_recursion -> Linear;
test_walk_module_container_with_recursion -> fill_;
test_walk_module_container_with_recursion -> ones_like;
test_walk_module_dict_identity -> ModuleDict;
test_walk_module_dict_identity -> walk;
test_walk_module_dict_identity -> isinstance;
test_walk_module_dict_identity -> Linear;
test_walk_module_dict_identity -> Conv2d;
test_walk_module_dict_transform -> ModuleDict;
test_walk_module_dict_transform -> walk;
test_walk_module_dict_transform -> isinstance;
test_walk_module_dict_transform -> values;
test_walk_module_dict_transform -> Linear;
test_walk_module_dict_transform -> Conv2d;
test_walk_module_dict_transform -> Sequential;
test_walk_module_dict_transform -> ReLU;
double_linear -> isinstance;
is_linear -> isinstance;
test_forall_true -> forall;
test_forall_true -> isinstance;
test_forall_false -> forall;
test_forall_false -> isinstance;
test_map -> map;
test_map -> isinstance;
test_map -> all;
test_map -> fill_;
test_walk -> walk;
test_freeze -> freeze;
test_freeze -> parameters;
test_freeze -> TempModule;
test_unfreeze -> freeze;
test_unfreeze -> unfreeze;
test_unfreeze -> parameters;
test_unfreeze -> TempModule;
sample_alpaca_dataset -> from_dict;
sample_alpaca_dataset -> DatasetDict;
alpaca_data_module -> object;
alpaca_data_module -> patch;
alpaca_data_module -> AlpacaDataModule;
test_prepare_data -> prepare_data;
test_prepare_data -> exists;
test_dataloaders -> prepare_data;
test_dataloaders -> train_dataloader;
test_dataloaders -> val_dataloader;
test_dataloaders -> test_dataloader;
test_dataloaders -> isinstance;
sample_chat_dataset -> from_dict;
chat_data_module -> patch;
chat_data_module -> MagicMock;
chat_data_module -> ChatDataModule;
test_create_dataset_with_hf_template -> create_sft_dataset;
test_create_dataset_with_hf_template -> isinstance;
test_create_dataset_with_hf_template -> collate_fn;
test_create_dataset_with_hf_template -> deepcopy;
test_create_dataset_with_hf_template -> convert_tokens_to_string;
test_create_dataset_with_hf_template -> open;
test_create_dataset_with_hf_template -> dump;
test_create_dataset_with_hf_template -> len;
test_create_dataset_with_hf_template -> text_to_ids;
test_create_dataset_with_hf_template -> ids_to_tokens;
test_create_dataset_with_hf_template -> list;
test_create_dataset_with_hf_template -> range;
test_nemo_format -> _chat_preprocess;
test_nemo_format -> decode;
test_nemo_format -> equal;
test_nemo_format -> cat;
test_nemo_format -> LongTensor;
test_messages_format -> _chat_preprocess;
test_messages_format -> decode;
test_messages_format -> equal;
test_messages_format -> cat;
test_messages_format -> LongTensor;
test_mask_no_assistant -> deepcopy;
test_mask_no_assistant -> _chat_preprocess;
test_mask_no_assistant -> sum;
test_mask_no_assistant -> len;
test_multi_turn -> _chat_preprocess;
test_multi_turn -> decode;
test_multi_turn -> count;
test_multi_turn -> enumerate;
test_tool_calling -> _chat_preprocess;
test_tool_calling -> decode;
test_tool_calling -> count;
test_tool_calling -> enumerate;
test_gpt_sft_dataset_initialization -> GPTSFTDataset;
test_gpt_sft_dataset_initialization -> len;
test_gpt_sft_dataset_initialization -> str;
test_dataset_getitem -> GPTSFTDataset;
test_dataset_getitem -> isinstance;
test_dataset_getitem -> str;
test_dataset_collate_fn -> GPTSFTDataset;
test_dataset_collate_fn -> collate_fn;
test_dataset_collate_fn -> isinstance;
test_dataset_collate_fn -> str;
test_dataset_truncation -> GPTSFTDataset;
test_dataset_truncation -> len;
test_dataset_truncation -> str;
test_dataset_padding -> GPTSFTDataset;
test_dataset_padding -> collate_fn;
test_dataset_padding -> size;
test_dataset_padding -> str;
temp_chat_jsonl_file -> unlink;
temp_chat_jsonl_file -> NamedTemporaryFile;
temp_chat_jsonl_file -> Path;
temp_chat_jsonl_file -> write;
temp_chat_jsonl_file -> dumps;
temp_npy_file -> dtype;
temp_npy_file -> array;
temp_npy_file -> unlink;
temp_npy_file -> NamedTemporaryFile;
temp_npy_file -> save;
temp_npy_file -> Path;
test_multiple_truncation -> GPTSFTDataset;
test_multiple_truncation -> _multiple_truncation;
test_multiple_truncation -> len;
test_multiple_truncation -> str;
test_separate_template -> GPTSFTDataset;
test_separate_template -> _separate_template;
test_separate_template -> len;
test_separate_template -> str;
test_chat_dataset -> create_sft_dataset;
test_chat_dataset -> isinstance;
test_chat_dataset -> collate_fn;
test_packed_dataset -> Path;
test_packed_dataset -> open;
test_packed_dataset -> dump;
test_packed_dataset -> create_sft_dataset;
test_packed_dataset -> isinstance;
test_packed_dataset -> exists;
test_packed_dataset -> unlink;
test_packed_dataset_no_pad_cu_seqlens -> create_sft_dataset;
test_packed_dataset_no_pad_cu_seqlens -> isinstance;
test_packed_dataset_no_pad_cu_seqlens -> collate_fn;
test_packed_dataset_invalid_data -> array;
test_packed_dataset_invalid_data -> NamedTemporaryFile;
test_packed_dataset_invalid_data -> save;
test_packed_dataset_invalid_data -> Path;
test_packed_dataset_invalid_data -> unlink;
test_packed_dataset_invalid_data -> raises;
test_packed_dataset_invalid_data -> create_sft_dataset;
test_packed_dataset_invalid_data -> collate_fn;
test_virtual_tokens -> GPTSFTDataset;
test_virtual_tokens -> len;
test_virtual_tokens -> str;
test_ceil_to_power_2 -> GPTSFTDataset;
test_ceil_to_power_2 -> collate_fn;
test_ceil_to_power_2 -> size;
test_ceil_to_power_2 -> str;
test_attention_mask_from_fusion -> GPTSFTDataset;
test_attention_mask_from_fusion -> collate_fn;
test_attention_mask_from_fusion -> str;
test_output_original_text -> GPTSFTDataset;
test_output_original_text -> str;
test_negative_indexing -> GPTSFTDataset;
test_negative_indexing -> str;
test_special_tokens -> GPTSFTDataset;
test_special_tokens -> str;
sample_dolly_dataset -> from_dict;
sample_dolly_dataset -> DatasetDict;
dolly_data_module -> object;
dolly_data_module -> patch;
dolly_data_module -> DollyDataModule;
test_validate_batch_size_for_packed_sequence -> PackedSequenceSpecs;
test_validate_batch_size_for_packed_sequence -> FineTuningDataModule;
test_validate_batch_size_for_packed_sequence -> raises;
packed_files -> mkdir;
packed_files -> zeros;
packed_files -> save;
packed_files -> str;
packed_files -> open;
packed_files -> write;
packed_files -> absolute;
test_packed_sequence_paths -> exists;
test_packed_sequence_paths -> PackedSequenceSpecs;
test_packed_sequence_paths -> FineTuningDataModule;
test_packed_sequence_paths -> resolve;
test_packed_sequence_paths -> str;
test_create_dataset_with_different_modes -> parametrize;
test_create_dataset_with_different_modes -> patch;
test_create_dataset_with_different_modes -> _create_dataset;
test_create_dataset_with_different_modes -> assert_called_once;
test_default_pack_path -> FineTuningDataModule;
test_default_pack_path -> object;
test_default_pack_path -> exists;
test_default_pack_path -> Path;
test_pack_metadata_paths -> Path;
test_pack_metadata_paths -> PackedSequenceSpecs;
test_pack_metadata_paths -> FineTuningDataModule;
test_pack_metadata_paths -> raises;
test_pad_cu_seqlens_property -> FineTuningDataModule;
test_load_single_split -> HFDatasetDataModule;
test_load_single_split -> isinstance;
test_load_single_split -> len;
test_load_single_split_with_subset -> HFDatasetDataModule;
test_load_single_split_with_subset -> isinstance;
test_load_single_split_with_subset -> len;
test_load_nonexistent_split -> HFDatasetDataModule;
test_load_nonexistent_split -> str;
test_load_multiple_split -> HFDatasetDataModule;
test_load_multiple_split -> isinstance;
test_load_multiple_split -> len;
test_load_multiple_split_with_subset -> HFDatasetDataModule;
test_load_multiple_split_with_subset -> isinstance;
test_load_multiple_split_with_subset -> len;
test_validate_dataset_asset_accessibility_file_does_not_exist -> HFDatasetDataModule;
test_validate_dataset_asset_accessibility_file_does_not_exist -> PreTrainingDataModule;
test_validate_dataset_asset_accessibility_file_is_none -> HFDatasetDataModule;
test_validate_dataset_asset_accessibility_file_is_none -> str;
test_validate_dataset_asset_accessibility_file_is_none -> PreTrainingDataModule;
sample_dataset -> DatasetDict;
sample_dataset -> from_dict;
data_module -> HFDatasetDataModule;
squad_data_module -> SquadHFDataModule;
squad_data_module -> object;
squad_data_module -> patch;
squad_data_module -> SquadDataModule;
test_formatting_prompts_func -> formatting_prompts_func;
test_formatting_prompts_func -> len;
test_make_dataset_splits_single_dataset -> from_dict;
test_make_dataset_splits_single_dataset -> make_dataset_splits;
test_make_dataset_splits_single_dataset -> len;
test_make_dataset_splits_dataset_dict -> from_dict;
test_make_dataset_splits_dataset_dict -> DatasetDict;
test_make_dataset_splits_dataset_dict -> make_dataset_splits;
test_make_dataset_splits_dataset_dict -> len;
test_make_dataset_splits_invalid_split -> from_dict;
test_make_dataset_splits_invalid_split -> raises;
test_make_dataset_splits_invalid_split -> make_dataset_splits;
test_make_dataset_splits_with_list -> from_dict;
test_make_dataset_splits_with_list -> make_dataset_splits;
test_make_dataset_splits_with_list -> len;
test_collate_fn -> HFDatasetDataModule;
test_collate_fn -> collate_fn;
test_collate_fn -> isinstance;
test_collate_fn -> from_dict;
test_batchify -> Tensor;
test_batchify -> batchify;
test_batchify -> isinstance;
test_batchify -> tensor;
test_extract_key_from_dicts -> extract_key_from_dicts;
test_pad_within_micro -> pad_within_micro;
test_pad_within_micro -> all;
test_pad_within_micro -> len;
test_squad_data_module_no_download -> SquadDataModule;
test_squad_data_module_no_download -> prepare_data;
test_squad_data_module_no_download -> setup;
test_squad_data_module_no_download -> str;
test_squad_data_module_with_pth_dataloader_init -> SquadDataModuleWithPthDataloader;
test_squad_data_module_with_pth_dataloader_init -> isinstance;
test_squad_data_module_with_pth_dataloader_init -> prepare_data;
test_squad_data_module_with_pth_dataloader_init -> setup;
test_squad_data_module_with_pth_dataloader_init -> train_dataloader;
test_squad_data_module_with_pth_dataloader_init -> next;
test_squad_data_module_with_pth_dataloader_init -> items;
test_squad_data_module_with_pth_dataloader_init -> str;
test_squad_data_module_with_pth_dataloader_init -> iter;
test_squad_data_module_with_pth_dataloader_init -> pop;
test_squad_data_module_with_pth_dataloader_init -> len;
test_squad_data_module_with_pth_dataloader_init -> DataLoader;
test_squad_data_module_with_pth_dataloader_init -> list;
test_squad_data_module_with_pth_dataloader_init -> size;
sample_hf_dataset -> from_dict;
sample_hf_dataset_dict -> DatasetDict;
test_single_dataset_str_split -> make_dataset_splits;
test_dataset_dict_splits -> make_dataset_splits;
test_list_dataset_splits -> make_dataset_splits;
test_single_dataset_with_plus_sign -> make_dataset_splits;
test_single_dataset_with_bracket -> make_dataset_splits;
test_invalid_split_type_raises -> raises;
test_invalid_split_type_raises -> make_dataset_splits;
test_no_alias_match_raises -> DatasetDict;
test_no_alias_match_raises -> raises;
test_no_alias_match_raises -> make_dataset_splits;
test_basic_packing -> HFDatasetPackedSequenceHelper;
test_basic_packing -> pack;
test_basic_packing -> assertEqual;
test_basic_packing -> len;
test_split_across_pack -> HFDatasetPackedSequenceHelper;
test_split_across_pack -> pack;
test_split_across_pack -> assertEqual;
test_position_ids_padding -> HFDatasetPackedSequenceHelper;
test_position_ids_padding -> pack;
test_position_ids_padding -> assertEqual;
test_position_ids_padding -> select;
test_error_handling -> HFDatasetPackedSequenceHelper;
test_error_handling -> assertRaises;
test_error_handling -> pack;
test_error_handling -> TarPath;
test_error_handling -> raises;
test_error_handling -> open;
test_dataloader_integration -> HFDatasetDataModulePacked;
test_dataloader_integration -> train_dataloader;
test_dataloader_integration -> next;
test_dataloader_integration -> assertIn;
test_dataloader_integration -> assertEqual;
test_dataloader_integration -> iter;
test_preprocess -> parametrize;
test_preprocess -> preprocess;
test_process_doc -> process_doc;
test_process_doc -> startswith;
test_process_doc -> len;
test_preprocess_dataset -> patch;
test_preprocess_dataset -> MagicMock;
test_preprocess_dataset -> preprocess_dataset;
test_preprocess_dataset -> assert_called;
test_mock_gpt_dataset_length -> _MockGPTDataset;
test_mock_gpt_dataset_length -> len;
test_mock_gpt_dataset_item_shapes -> _MockGPTDataset;
test_mock_gpt_dataset_item_shapes -> len;
sample_govreport_dataset -> from_dict;
sample_govreport_dataset -> DatasetDict;
govreport_data_module -> object;
govreport_data_module -> patch;
govreport_data_module -> MagicMock;
govreport_data_module -> MLPerfGovReportDataModule;
test_invalid_packed_sequence_size -> raises;
test_invalid_packed_sequence_size -> MLPerfGovReportDataModule;
test_invalid_packed_sequence_size -> MagicMock;
test_mock_gpt_dataset_with_attention_mask -> _MockGPTDataset;
test_mock_gpt_dataset_with_attention_mask -> len;
sample_data_file -> unlink;
sample_data_file -> NamedTemporaryFile;
sample_data_file -> write;
sample_data_file -> Path;
test_tokenize_dataset -> tokenize_dataset;
test_tokenize_dataset -> isinstance;
test_tokenize_dataset -> len;
test_prepare_packed_sequence_data -> TemporaryDirectory;
test_prepare_packed_sequence_data -> prepare_packed_sequence_data;
test_prepare_packed_sequence_data -> exists;
test_prepare_packed_sequence_data -> Path;
test_packed_sequence_specs -> PackedSequenceSpecs;
test_packed_sequence_specs -> NamedTemporaryFile;
test_packed_sequence_specs -> Path;
test_packed_sequence_specs_invalid_paths -> raises;
test_packed_sequence_specs_invalid_paths -> PackedSequenceSpecs;
test_packed_sequence_specs_invalid_paths -> NamedTemporaryFile;
test_is_number_tryexcept -> is_number_tryexcept;
test_is_zipped_list -> is_zipped_list;
test_validate_dataset_asset_accessibility -> TemporaryDirectory;
test_validate_dataset_asset_accessibility -> create_temp_dataset_files;
test_validate_dataset_asset_accessibility -> validate_dataset_asset_accessibility;
test_validate_dataset_asset_accessibility -> raises;
test_build -> skip;
test_build_with_custom_samples -> raises;
test_build_with_custom_samples -> build;
test_create_dataloader -> MagicMock;
test_create_dataloader -> _create_dataloader;
test_validate_dataset_asset_accessibility_errors -> parametrize;
test_validate_dataset_asset_accessibility_errors -> raises;
test_validate_dataset_asset_accessibility_errors -> validate_dataset_asset_accessibility;
test_build_pretraining_datamodule -> patch;
test_build_pretraining_datamodule -> MagicMock;
test_build_pretraining_datamodule -> build_pretraining_datamodule;
test_build_pretraining_datamodule -> assert_called_once_with;
test_build_pretraining_datamodule -> assert_called_once;
test_build_pretraining_datamodule -> isinstance;
test_build_pretraining_datamodule -> len;
test_single_data_distribution -> PreTrainingDataModule;
test_single_data_distribution -> setup;
test_single_data_distribution -> raises;
test_multiple_data_distributions -> PreTrainingDataModule;
test_multiple_data_distributions -> setup;
temp_data_files -> TemporaryDirectory;
temp_data_files -> Path;
temp_data_files -> open;
temp_data_files -> dump;
temp_data_files -> str;
test_initialization -> CustomRetrievalDataModule;
test_initialization -> _TextMemMapDataset;
test_initialization -> len;
test_initialization -> _JSONLMemMapDataset;
test_initialization -> run_only_on;
test_initialization -> assert_called_once;
test_initialization -> isinstance;
test_initialization -> SentencePieceTokenizer;
test_initialization -> assertIsNotNone;
test_initialization -> assertEqual;
test_initialization -> MagicMock;
test_initialization -> assertRaises;
test_multiple_data_roots -> TemporaryDirectory;
test_multiple_data_roots -> CustomRetrievalDataModule;
test_multiple_data_roots -> prepare_data;
test_multiple_data_roots -> Path;
test_multiple_data_roots -> open;
test_multiple_data_roots -> dump;
test_multiple_data_roots -> readlines;
test_multiple_data_roots -> len;
test_multiple_data_roots -> str;
test_different_split_ratios -> parametrize;
test_different_split_ratios -> CustomRetrievalDataModule;
test_different_split_ratios -> prepare_data;
test_invalid_data_path -> raises;
test_invalid_data_path -> CustomRetrievalDataModule;
sample_squad_dataset -> from_dict;
sample_squad_dataset -> DatasetDict;
sample_squad_dataset -> str;
sample_squad_dataset -> range;
sample_jsonl_file -> str;
sample_jsonl_file -> open;
sample_jsonl_file -> write;
sample_jsonl_file -> dumps;
test_mask_targets -> ones;
test_mask_targets -> _mask_targets;
test_mask_targets -> any;
test_get_header_conversation_type_mask_role -> _get_header_conversation_type_mask_role;
test_get_header_conversation_type_mask_role -> isinstance;
test_add_speaker_and_signal -> _add_speaker_and_signal;
test_add_speaker_and_signal -> isinstance;
test_response_value_formater -> _response_value_formater;
test_response_value_formater -> isinstance;
test_response_value_formater -> startswith;
test_response_value_formater -> endswith;
test_response_value_formater -> raises;
test_build_index_files -> build_index_files;
test_build_index_files -> open;
test_build_index_files -> write;
test_build_index_files -> str;
test_build_memmap_index_files -> _build_memmap_index_files;
test_build_memmap_index_files -> open;
test_build_memmap_index_files -> write;
test_build_memmap_index_files -> str;
test_online_sample_mapping_variations -> parametrize;
test_online_sample_mapping_variations -> _OnlineSampleMapping;
test_online_sample_mapping_variations -> len;
test_online_sample_mapping_variations -> min;
test_online_sample_mapping_cache -> _OnlineSampleMapping;
test_online_sample_mapping_cache -> get_sample_block;
test_online_sample_mapping_cache -> assert_array_equal;
test_getitem -> _TextMemMapDataset;
test_getitem -> isinstance;
test_load_file -> _TextMemMapDataset;
test_load_file -> load_file;
test_load_file -> isinstance;
test_multiple_files -> range;
test_multiple_files -> _TextMemMapDataset;
test_multiple_files -> append;
test_multiple_files -> len;
test_multiple_files -> open;
test_multiple_files -> write;
test_multiple_files -> str;
test_build_data_from_text -> _JSONLMemMapDataset;
test_build_data_from_text -> _build_data_from_text;
test_build_data_from_text -> isinstance;
test_invalid_json -> _JSONLMemMapDataset;
test_invalid_json -> raises;
test_invalid_json -> _build_data_from_text;
change_dir -> getcwd;
change_dir -> expanduser;
change_dir -> str;
change_dir -> chdir;
temp_dataset_config -> TemporaryDirectory;
temp_dataset_config -> NamedTemporaryFile;
temp_dataset_config -> close;
temp_dataset_config -> remove;
temp_dataset_config -> cleanup;
temp_dataset_config -> open;
temp_dataset_config -> dump;
temp_dataset_config -> touch;
temp_dataset_config -> Path;
tmp_dataset -> mkdir;
tmp_dataset -> touch;
test_valid_absolute_path -> Evo2BlendedDatasetConfig;
test_valid_absolute_path -> str;
test_valid_relative_path -> Evo2BlendedDatasetConfig;
test_valid_relative_path -> str;
test_invalid_relative_path_without_base -> raises;
test_invalid_relative_path_without_base -> Evo2BlendedDatasetConfig;
test_invalid_relative_path_without_base -> resolve;
test_invalid_relative_path_without_base -> Path;
test_valid_relative_path_without_base -> change_dir;
test_valid_relative_path_without_base -> Evo2BlendedDatasetConfig;
test_nonexistent_parent_path -> raises;
test_nonexistent_parent_path -> Evo2BlendedDatasetConfig;
test_nonexistent_parent_path -> str;
test_nonexistent_dataset_file -> raises;
test_nonexistent_dataset_file -> Evo2BlendedDatasetConfig;
test_nonexistent_dataset_file -> str;
test_path_resolution -> Path;
test_path_resolution -> Evo2BlendedDatasetConfig;
test_path_resolution -> change_dir;
test_path_resolution -> str;
test_parse_dataset_config -> parse_dataset_config;
test_parse_dataset_config -> print;
test_parse_dataset_config -> defaultdict;
test_parse_dataset_config -> str;
test_parse_dataset_config -> Path;
test_infer_global_batch_size_validation -> raises;
test_infer_global_batch_size_validation -> infer_global_batch_size;
test_infer_global_batch_size_calculation -> infer_global_batch_size;
test_infer_global_batch_size_calculation -> raises;
test_mask_phylogenetic_tags_with_eod -> tensor;
test_mask_phylogenetic_tags_with_eod -> mask_phylogenetic_tags;
test_mask_phylogenetic_tags_with_eod -> equal;
test_mask_phylogenetic_tags_middle -> tensor;
test_mask_phylogenetic_tags_middle -> mask_phylogenetic_tags;
test_mask_phylogenetic_tags_middle -> equal;
test_mask_partial_tag_start -> tensor;
test_mask_partial_tag_start -> mask_phylogenetic_tags;
test_mask_partial_tag_start -> equal;
test_mask_partial_tag_end -> tensor;
test_mask_partial_tag_end -> mask_phylogenetic_tags;
test_mask_partial_tag_end -> equal;
test_standalone_tag -> tensor;
test_standalone_tag -> mask_phylogenetic_tags;
test_standalone_tag -> equal;
test_sequence_starting_with_tag -> tensor;
test_sequence_starting_with_tag -> mask_phylogenetic_tags;
test_sequence_starting_with_tag -> equal;
test_sequence_ending_with_tag -> tensor;
test_sequence_ending_with_tag -> mask_phylogenetic_tags;
test_sequence_ending_with_tag -> equal;
test_mask_multiple_tags -> tensor;
test_mask_multiple_tags -> mask_phylogenetic_tags;
test_mask_multiple_tags -> equal;
test_mask_dna_after_pipe -> tensor;
test_mask_dna_after_pipe -> mask_phylogenetic_tags;
test_mask_dna_after_pipe -> equal;
test_ambiguous_dna_char_followed_by_tag_start -> tensor;
test_ambiguous_dna_char_followed_by_tag_start -> mask_phylogenetic_tags;
test_ambiguous_dna_char_followed_by_tag_start -> equal;
test_dna_followed_by_unambiguous_tag_start -> tensor;
test_dna_followed_by_unambiguous_tag_start -> mask_phylogenetic_tags;
test_dna_followed_by_unambiguous_tag_start -> equal;
test_double_partial_tags_with_dna_middle -> tensor;
test_double_partial_tags_with_dna_middle -> mask_phylogenetic_tags;
test_double_partial_tags_with_dna_middle -> equal;
test_packed_partial_tag_subsequence_predna -> tensor;
test_packed_partial_tag_subsequence_predna -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_predna -> assert_close;
test_packed_partial_tag_subsequence_predna -> ord;
test_packed_partial_tag_subsequence_predna -> len;
test_packed_partial_tag_subsequence_pretag -> tensor;
test_packed_partial_tag_subsequence_pretag -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_pretag -> assert_close;
test_packed_partial_tag_subsequence_pretag -> ord;
test_packed_partial_tag_subsequence_pretag -> len;
test_packed_partial_tag_subsequence_predna_middletag -> tensor;
test_packed_partial_tag_subsequence_predna_middletag -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_predna_middletag -> assert_close;
test_packed_partial_tag_subsequence_predna_middletag -> ord;
test_packed_partial_tag_subsequence_predna_middletag -> len;
test_packed_partial_tag_subsequence_pretag_middletag -> tensor;
test_packed_partial_tag_subsequence_pretag_middletag -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_pretag_middletag -> assert_close;
test_packed_partial_tag_subsequence_pretag_middletag -> ord;
test_packed_partial_tag_subsequence_pretag_middletag -> len;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> tensor;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> stack;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> assert_close;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> ord;
test_packed_partial_tag_subsequence_pretag_middletag_bs2 -> len;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> tensor;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> stack;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> assert_close;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> ord;
test_packed_partial_tag_subsequence_pretag_middletag_bs3 -> len;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> skipif;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> tensor;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> stack;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> assert_close;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> cpu;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> is_available;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> cuda;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> ord;
test_packed_partial_tag_subsequence_pretag_middletag_bs3_cuda -> len;
test_multiple_packed_tags -> tensor;
test_multiple_packed_tags -> mask_phylogenetic_tags;
test_multiple_packed_tags -> assert_close;
test_multiple_packed_tags -> ord;
test_multiple_packed_tags -> len;
test_multiple_eods -> tensor;
test_multiple_eods -> mask_phylogenetic_tags;
test_multiple_eods -> assert_close;
test_multiple_eods -> len;
test_multiple_eods -> ord;
test_multiple_eods_prefix_no_suffix -> tensor;
test_multiple_eods_prefix_no_suffix -> mask_phylogenetic_tags;
test_multiple_eods_prefix_no_suffix -> assert_close;
test_multiple_eods_prefix_no_suffix -> len;
test_multiple_eods_prefix_no_suffix -> ord;
test_no_eods_with_batch -> tensor;
test_no_eods_with_batch -> mask_phylogenetic_tags;
test_no_eods_with_batch -> assert_close;
test_no_eods_with_batch -> stack;
test_no_eods_with_batch -> len;
test_no_eods_with_batch -> ord;
test_no_eods_one_tag_with_batch_bs2 -> tensor;
test_no_eods_one_tag_with_batch_bs2 -> mask_phylogenetic_tags;
test_no_eods_one_tag_with_batch_bs2 -> assert_close;
test_no_eods_one_tag_with_batch_bs2 -> stack;
test_no_eods_one_tag_with_batch_bs2 -> ord;
test_no_eods_one_tag_with_batch_bs2 -> len;
test_packed_partial_tag_subsequence_predna_with_control -> tensor;
test_packed_partial_tag_subsequence_predna_with_control -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_predna_with_control -> assert_close;
test_packed_partial_tag_subsequence_predna_with_control -> ord;
test_packed_partial_tag_subsequence_predna_with_control -> len;
test_packed_partial_tag_subsequence_predna_with_control2 -> tensor;
test_packed_partial_tag_subsequence_predna_with_control2 -> mask_phylogenetic_tags;
test_packed_partial_tag_subsequence_predna_with_control2 -> assert_close;
test_packed_partial_tag_subsequence_predna_with_control2 -> ord;
test_packed_partial_tag_subsequence_predna_with_control2 -> len;
_construct_taxonomy_token -> format;
_construct_taxonomy_token -> random;
mask_phylogenetic_tags_old -> ones_like;
mask_phylogenetic_tags_old -> tensor;
mask_phylogenetic_tags_old -> range;
mask_phylogenetic_tags_old -> list;
mask_phylogenetic_tags_old -> unique;
mask_phylogenetic_tags_old -> where;
mask_phylogenetic_tags_old -> sort;
mask_phylogenetic_tags_old -> sum;
mask_phylogenetic_tags_old -> cat;
mask_phylogenetic_tags_old -> isin;
benchmark_phylo_tag_masking -> _construct_taxonomy_token;
benchmark_phylo_tag_masking -> tensor;
benchmark_phylo_tag_masking -> timeit;
benchmark_phylo_tag_masking -> join;
benchmark_phylo_tag_masking -> mask_phylogenetic_tags;
benchmark_phylo_tag_masking -> mask_phylogenetic_tags_old;
benchmark_phylo_tag_masking -> choice;
benchmark_phylo_tag_masking -> ord;
benchmark_phylo_tag_masking -> unsqueeze;
benchmark_phylo_tag_masking -> range;
test_phylo_tag_masking_speed -> benchmark_phylo_tag_masking;
test_evo2_dataset_getitem -> get_nmt_tokenizer;
test_evo2_dataset_getitem -> replace;
test_evo2_dataset_getitem -> tensor;
test_evo2_dataset_getitem -> MockIndexedDataset;
test_evo2_dataset_getitem -> Evo2Dataset;
test_evo2_dataset_getitem -> assert_close;
test_evo2_dataset_getitem -> ones;
test_evo2_dataset_getitem -> arange;
test_evo2_dataset_getitem -> to;
test_evo2_dataset_getitem -> ord;
test_evo2_dataset_getitem -> len;
test_evo2_dataset_getitem -> MockConfig;
test_evo2_dataset_getitem -> str;
test_baichuan2_config -> Baichuan2Config;
test_baichuan2_config_7b -> Baichuan2Config7B;
test_gpt_config_126m -> GPTConfig126M;
test_gpt_config_5b -> GPTConfig5B;
test_gpt_config_7b -> GPTConfig7B;
test_gpt_config_20b -> GPTConfig20B;
test_gpt_config_40b -> GPTConfig40B;
test_gpt_config_175b -> GPTConfig175B;
test_chatglm_config -> ChatGLMConfig;
test_chatglm2_config_6b -> ChatGLM2Config6B;
test_chatglm3_config_6b -> ChatGLM3Config6B;
test_hyena_base_config -> HyenaConfig;
test_hyena_7b_config -> Hyena7bConfig;
test_hyena_nv_7b_config -> HyenaNV7bConfig;
test_hyena_1b_config -> Hyena1bConfig;
test_hyena_nv_1b_config -> HyenaNV1bConfig;
test_hyena_40b_config -> Hyena40bConfig;
test_hyena_nv_40b_config -> HyenaNV40bConfig;
test_hyena_7b_arc_long_context_config -> Hyena7bARCLongContextConfig;
test_hyena_40b_arc_long_context_config -> Hyena40bARCLongContextConfig;
test_hyena_test_config -> HyenaTestConfig;
test_hyena_nv_test_config -> HyenaNVTestConfig;
test_convert_hyena -> Hyena1bConfig;
test_convert_hyena -> HuggingFaceSavannaHyenaImporter;
test_convert_hyena -> raises;
test_convert_hyena -> apply;
test_gemma_config -> GemmaConfig;
test_gemma_config_2b -> GemmaConfig2B;
test_gemma_config_7b -> GemmaConfig7B;
test_code_gemma_config_2b -> CodeGemmaConfig2B;
test_code_gemma_config_7b -> CodeGemmaConfig7B;
test_gemma3_1b_config -> Gemma3Config1B;
test_gemma3_4b_config -> Gemma3Config4B;
test_gemma3_12b_config -> Gemma3Config12B;
test_gemma3_27b_config -> Gemma3Config27B;
sample_hidden_states -> tensor;
sample_attention_mask -> tensor;
test_pool_avg -> pool;
test_pool_avg -> tensor;
test_pool_avg -> allclose;
test_pool_cls -> pool;
test_pool_cls -> allclose;
test_pool_last -> pool;
test_pool_last -> allclose;
test_pool_invalid -> raises;
test_pool_invalid -> pool;
test_pool_invalid -> randn;
test_pool_invalid -> ones;
test_get_llama_bidirectional_hf_model -> patch;
test_get_llama_bidirectional_hf_model -> Mock;
test_get_llama_bidirectional_hf_model -> get_llama_bidirectional_hf_model;
test_get_llama_bidirectional_hf_model -> isinstance;
test_pooling_avg -> Pooling;
test_pooling_avg -> pooling;
test_pooling_cls -> Pooling;
test_pooling_cls -> pooling;
test_pooling_cls -> allclose;
test_batch_size_one -> parametrize;
test_batch_size_one -> Pooling;
test_batch_size_one -> randn;
test_batch_size_one -> ones;
test_batch_size_one -> pooling;
mock_model -> Mock;
mock_model -> device;
mock_model -> MagicMock;
mock_model -> MockModel;
mock_model -> tensor;
test_model_initialization -> isinstance;
test_forward_classification -> randint;
test_forward_classification -> ones;
test_forward_classification -> model;
test_forward_regression -> LlamaBidirectionalConfig;
test_forward_regression -> LlamaBidirectionalForSequenceClassification;
test_forward_regression -> randint;
test_forward_regression -> ones;
test_forward_regression -> randn;
test_forward_regression -> model;
test_forward_multi_label -> LlamaBidirectionalConfig;
test_forward_multi_label -> LlamaBidirectionalForSequenceClassification;
test_forward_multi_label -> randint;
test_forward_multi_label -> ones;
test_forward_multi_label -> float;
test_forward_multi_label -> model;
test_different_pooling_types -> LlamaBidirectionalForSequenceClassification;
test_different_pooling_types -> randint;
test_different_pooling_types -> ones;
test_different_pooling_types -> model;
test_forward_without_labels -> randint;
test_forward_without_labels -> ones;
test_forward_without_labels -> model;
test_temperature_scaling -> randint;
test_temperature_scaling -> ones;
test_temperature_scaling -> LlamaBidirectionalForSequenceClassification;
test_temperature_scaling -> model;
test_return_dict_option -> parametrize;
test_return_dict_option -> randint;
test_return_dict_option -> ones;
test_return_dict_option -> model;
test_return_dict_option -> hasattr;
test_return_dict_option -> isinstance;
test_return_dict_option -> len;
_munge_sharded_tensor_key_megatron_to_nemo2 -> _munge_key_megatron_to_nemo2;
_key_in_filter -> startswith;
_teardown_apex_megatron_cuda -> empty_cache;
_teardown_apex_megatron_cuda -> _reset_microbatch_calculator;
_teardown_apex_megatron_cuda -> destroy_model_parallel;
_initialize_distributed_parallel_state -> is_initialized;
_initialize_distributed_parallel_state -> info;
_initialize_distributed_parallel_state -> Trainer;
_initialize_distributed_parallel_state -> setup_environment;
_initialize_distributed_parallel_state -> is_unitialized;
_initialize_distributed_parallel_state -> initialize_model_parallel;
_initialize_distributed_parallel_state -> launch;
distributed_model_parallel_state -> _teardown_apex_megatron_cuda;
distributed_model_parallel_state -> _initialize_distributed_parallel_state;
distributed_model_parallel_state -> is_initialized;
distributed_model_parallel_state -> get_states;
distributed_model_parallel_state -> model_parallel_cuda_manual_seed;
distributed_model_parallel_state -> set_states;
distributed_model_parallel_state -> reset;
distributed_model_parallel_state -> get_cuda_rng_tracker;
distributed_model_parallel_state -> ValueError;
load_weights_sharded_inplace_nemo2_to_mcore -> info;
load_weights_sharded_inplace_nemo2_to_mcore -> load_checkpoint;
load_weights_sharded_inplace_nemo2_to_mcore -> _munge_key_megatron_to_nemo2;
load_weights_sharded_inplace_nemo2_to_mcore -> _munge_sharded_tensor_key_megatron_to_nemo2;
load_weights_sharded_inplace_nemo2_to_mcore -> items;
load_weights_sharded_inplace_nemo2_to_mcore -> MegatronCheckpointIO;
load_weights_sharded_inplace_nemo2_to_mcore -> _key_in_filter;
load_weights_sharded_inplace_nemo2_to_mcore -> sharded_state_dict;
test_golden_values -> skip;
test_golden_values -> inference_mode;
test_golden_values -> distributed_model_parallel_state;
test_golden_values -> Hyena7bConfig;
test_golden_values -> get_nmt_tokenizer;
test_golden_values -> cuda;
test_golden_values -> load_weights_sharded_inplace_nemo2_to_mcore;
test_golden_values -> Float16Module;
test_golden_values -> to;
test_golden_values -> model;
test_golden_values -> join;
test_golden_values -> assert_close;
test_golden_values -> __next__;
test_golden_values -> sum;
test_golden_values -> len;
test_golden_values -> eval;
test_golden_values -> unsqueeze;
test_golden_values -> load;
test_golden_values -> chr;
test_golden_values -> range;
test_golden_values -> parameters;
test_golden_values -> tolist;
test_golden_values -> configure_model;
test_golden_values -> int;
test_golden_values -> arange;
test_golden_values -> numpy;
test_golden_values -> tensor;
test_golden_values -> text_to_ids;
test_golden_values -> cpu;
test_golden_values -> detach;
test_golden_values -> flatten;
test_golden_values -> argmax;
test_golden_values -> softmax;
init_parallel_state -> device_count;
init_parallel_state -> int;
init_parallel_state -> set_device;
init_parallel_state -> timedelta;
init_parallel_state -> initialize_model_parallel;
init_parallel_state -> get_context_parallel_rank;
init_parallel_state -> get_context_parallel_world_size;
init_parallel_state -> info;
init_parallel_state -> getenv;
init_parallel_state -> is_initialized;
init_parallel_state -> init_process_group;
zigzag_split_across_group_ranks -> len;
zigzag_split_across_group_ranks -> get_rank;
zigzag_split_across_group_ranks -> list;
zigzag_split_across_group_ranks -> cat;
zigzag_split_across_group_ranks -> contiguous;
zigzag_split_across_group_ranks -> get_process_group_ranks;
zigzag_split_across_group_ranks -> chunk;
zigzag_gather_from_group_ranks -> len;
zigzag_gather_from_group_ranks -> functional_all_gather;
zigzag_gather_from_group_ranks -> range;
zigzag_gather_from_group_ranks -> enumerate;
zigzag_gather_from_group_ranks -> cat;
zigzag_gather_from_group_ranks -> get_process_group_ranks;
zigzag_gather_from_group_ranks -> append;
zigzag_gather_from_group_ranks -> split;
zigzag_gather_from_group_ranks -> size;
test_llama_config -> LlamaConfig;
test_llama3_config -> Llama3Config;
test_llama2_config_7b -> Llama2Config7B;
test_llama2_config_13b -> Llama2Config13B;
test_llama2_config_70b -> Llama2Config70B;
test_llama3_config_8b -> Llama3Config8B;
test_llama3_config_70b -> Llama3Config70B;
test_llama31_config -> Llama31Config;
test_llama31_config_8b -> Llama31Config8B;
test_llama31_config_70b -> Llama31Config70B;
test_llama31_config_405b -> Llama31Config405B;
test_codellama_config_7b -> CodeLlamaConfig7B;
test_codellama_config_13b -> CodeLlamaConfig13B;
test_codellama_config_34b -> CodeLlamaConfig34B;
test_codellama_config_70b -> CodeLlamaConfig70B;
test_llama31_nemotron_nano_8b_config -> Llama31NemotronNano8BConfig;
test_llama31_nemotron_70b_config -> Llama31Nemotron70BConfig;
test_llama33_nemotron_super_49b_config -> Llama33NemotronSuper49BConfig;
test_llama33_nemotron_ultra_253b_config -> Llama31NemotronUltra253BConfig;
test_mistral_config7b -> MistralConfig7B;
test_mistral_nemo_config_12b -> MistralNeMoConfig12B;
test_mistral_nemo_config_123b -> MistralNeMoConfig123B;
test_mixtral_config -> MixtralConfig;
test_mixtral_config_8x3b -> MixtralConfig8x3B;
test_mixtral_config_8x7b -> MixtralConfig8x7B;
test_mixtral_config_8x22b -> MixtralConfig8x22B;
strip_digits_from_end -> list;
strip_digits_from_end -> join;
strip_digits_from_end -> isdigit;
get_modulename_from_config_name -> hasattr;
get_modulename_from_config_name -> ValueError;
get_modulename_from_config_name -> split;
get_modulename_from_config_name -> strip_digits_from_end;
generate_twolayer_checkpoints -> from_pretrained;
generate_twolayer_checkpoints -> hasattr;
generate_twolayer_checkpoints -> to_empty;
generate_twolayer_checkpoints -> state_dict;
generate_twolayer_checkpoints -> len;
generate_twolayer_checkpoints -> enumerate;
generate_twolayer_checkpoints -> load_state_dict;
generate_twolayer_checkpoints -> save_pretrained;
generate_twolayer_checkpoints -> print;
generate_twolayer_checkpoints -> device;
generate_twolayer_checkpoints -> from_config;
generate_twolayer_checkpoints -> items;
generate_twolayer_checkpoints -> keys;
generate_twolayer_checkpoints -> fill_;
generate_twolayer_checkpoints -> ValueError;
generate_twolayer_checkpoints -> empty_like;
import_from_hf -> get_modulename_from_config_name;
import_from_hf -> getattr;
import_from_hf -> model_cls;
import_from_hf -> import_ckpt;
import_from_hf -> config_cls;
test_nemotron_config -> NemotronConfig;
test_nemotron3_config_4b -> Nemotron3Config4B;
test_nemotron3_config_8b -> Nemotron3Config8B;
test_nemotron3_config_22b -> Nemotron3Config22B;
test_nemotron4_config_15b -> Nemotron4Config15B;
test_nemotron4_config_340b -> Nemotron4Config340B;
add_test_args -> add_argument_group;
add_test_args -> add_argument;
megatron_model_provider -> get_args;
megatron_model_provider -> print_rank_0;
megatron_model_provider -> core_transformer_config_from_args;
megatron_model_provider -> MambaModel;
megatron_model_provider -> import_module;
megatron_model_provider -> ValueError;
test_Phi3_config -> Phi3Config;
test_phi3configmini -> Phi3ConfigMini;
test_qwen2_config -> Qwen2Config;
test_qwen2_config_500m -> Qwen2Config500M;
test_qwen2_config_1p5b -> Qwen2Config1P5B;
test_qwen2_config_7b -> Qwen2Config7B;
test_qwen2_config_72b -> Qwen2Config72B;
test_ssm_config -> SSMConfig;
test_base_mamba_config_130m -> BaseMambaConfig130M;
test_base_mamba_config_370m -> BaseMambaConfig370M;
test_base_mamba_config_780m -> BaseMambaConfig780M;
test_base_mamba_config_1_3b -> BaseMambaConfig1_3B;
test_base_mamba_config_2_7b -> BaseMambaConfig2_7B;
test_nvidia_mamba_config_8b -> NVIDIAMambaConfig8B;
test_nvidia_mamba_hybrid_config_8b -> NVIDIAMambaHybridConfig8B;
test_nemotronh_config_8b -> NemotronHConfig8B;
test_nemotronh_config_47b -> NemotronHConfig47B;
test_nemotronh_config_56b -> NemotronHConfig56B;
test_starcoder_config -> StarcoderConfig;
test_starcoder_config_15b -> StarcoderConfig15B;
test_starcoder2_config -> Starcoder2Config;
test_starcoder2_config_3b -> Starcoder2Config3B;
test_starcoder2_config_7b -> Starcoder2Config7B;
test_starcoder2_config_15b -> Starcoder2Config15B;
get_latest_checkpoint -> compile;
get_latest_checkpoint -> walk;
get_latest_checkpoint -> Path;
get_latest_checkpoint -> match;
get_latest_checkpoint -> map;
get_latest_checkpoint -> groups;
get_latest_checkpoint -> int;
get_latest_checkpoint -> join;
verify_peft_checkpoint_structure -> set;
verify_peft_checkpoint_structure -> Path;
verify_peft_checkpoint_structure -> exists;
verify_peft_checkpoint_structure -> str;
verify_peft_checkpoint_structure -> glob;
verify_peft_checkpoint_structure -> remove;
verify_peft_checkpoint_structure -> len;
verify_sft_checkpoint_structure -> Path;
verify_sft_checkpoint_structure -> exists;
verify_sft_checkpoint_structure -> set;
verify_sft_checkpoint_structure -> glob;
verify_sft_checkpoint_structure -> issubset;
verify_sft_checkpoint_structure -> print;
verify_sft_checkpoint_structure -> len;
verify_sft_checkpoint_structure -> sorted;
verify_sft_checkpoint_structure -> startswith;
verify_sft_checkpoint_structure -> endswith;
verify_sft_checkpoint_structure -> append;
verify_sft_checkpoint_structure -> add;
verify_sft_checkpoint_structure -> int;
verify_sft_checkpoint_structure -> range;
verify_sft_checkpoint_structure -> split;
configure_module -> configure_model;
configure_module -> parameters;
configure_module -> fill_;
configure_module -> super;
get_torch_version_str -> hasattr;
get_torch_version_str -> str;
get_torch_version_str -> version;
test_no_mask -> tensor;
test_no_mask -> loss_function;
test_no_mask -> cross_entropy;
test_no_mask -> allclose;
test_no_mask -> clone;
test_with_mask -> tensor;
test_with_mask -> clone;
test_with_mask -> masked_cross_entropy;
test_with_mask -> masked_fill_;
test_with_mask -> cross_entropy;
test_with_mask -> allclose;
test_with_mask -> view;
test_all_masked_out -> tensor;
test_all_masked_out -> clone;
test_all_masked_out -> masked_cross_entropy;
test_all_masked_out -> isnan;
test_valid_config_stays_same -> Config;
test_valid_config_stays_same -> drop_unexpected_params;
test_config_updates -> Config;
test_config_updates -> drop_unexpected_params;
test_config_updates -> hasattr;
test_nested_config_updates -> Config;
test_nested_config_updates -> drop_unexpected_params;
test_nested_config_updates -> hasattr;
test_load_quant_cfg -> parametrize;
test_load_quant_cfg -> NamedTemporaryFile;
test_load_quant_cfg -> dump;
test_load_quant_cfg -> flush;
test_load_quant_cfg -> load_quant_cfg;
recipe_module -> fixture;
test_model -> model;
test_model -> isinstance;
test_trainer -> trainer;
test_trainer -> isinstance;
test_trainer -> any;
test_trainer -> pretrain_recipe;
test_trainer -> gemma3_trainer;
test_trainer -> trainer_recipe;
test_trainer -> starcoder_trainer;
test_pretrain_recipe -> pretrain_recipe;
test_pretrain_recipe -> isinstance;
test_pretrain_recipe -> raises;
test_finetune_recipe -> finetune_recipe;
test_finetune_recipe -> isinstance;
test_pretrain_recipe_with_different_configurations -> parametrize;
test_pretrain_recipe_with_different_configurations -> pretrain_recipe;
test_pretrain_performance_optimizations -> pretrain_recipe_performance;
test_pretrain_performance_optimizations -> any;
test_pretrain_performance_optimizations -> isinstance;
test_pretrain_performance_optimizations -> pretrain_recipe;
test_pretrain_performance_optimizations -> pretrain_performance_optimizations;
test_pretrain_performance_optimizations -> next;
test_pretrain_performance_optimizations -> len;
test_trainer_parallelism_options -> trainer;
test_trainer_parallelism_options -> pretrain_recipe;
test_trainer_parallelism_options -> gemma3_trainer;
test_finetune_recipe_without_peft -> finetune_recipe;
test_finetune_recipe_without_peft -> hasattr;
test_finetune_recipe_with_invalid_peft -> raises;
test_finetune_recipe_with_invalid_peft -> finetune_recipe;
test_bert_embedding_model_110m -> bert_embedding_model;
test_bert_embedding_model_110m -> isinstance;
test_bert_embedding_model_340m -> bert_embedding_model;
test_bert_embedding_model_340m -> isinstance;
test_bert_embedding_model_invalid_version -> raises;
test_bert_embedding_model_invalid_version -> bert_embedding_model;
test_bert_trainer_default_settings -> bert_trainer;
test_bert_trainer_default_settings -> isinstance;
test_bert_trainer_custom_settings -> bert_trainer;
test_bert_trainer_with_callbacks -> bert_trainer;
test_bert_trainer_with_callbacks -> Config;
test_bert_trainer_ddp_settings -> bert_trainer;
test_finetune_recipe_with_custom_values -> finetune_recipe;
test_finetune_recipe_with_different_configurations -> parametrize;
test_finetune_recipe_with_different_configurations -> finetune_recipe;
test_finetune_recipe_with_peft -> raises;
test_finetune_recipe_with_peft -> finetune_recipe;
test_torchrun_with_explicit_devices -> patch;
test_torchrun_with_explicit_devices -> torchrun;
test_torchrun_raises_error_without_cuda -> patch;
test_torchrun_raises_error_without_cuda -> raises;
test_torchrun_raises_error_without_cuda -> torchrun;
test_torchrun_raises_error_without_cuda -> str;
test_finetune_recipe_with_packed_sequence -> finetune_recipe;
test_finetune_recipe_with_packed_sequence -> hasattr;
test_finetune_recipe_with_packed_sequence -> raises;
test_finetune_recipe_with_packed_sequence -> isinstance;
test_trainer_default_settings -> trainer;
test_trainer_default_settings -> isinstance;
test_trainer_custom_settings -> trainer;
test_trainer_with_callbacks -> trainer;
test_trainer_with_callbacks -> Config;
test_pretrain_recipe_default_settings -> pretrain_recipe;
test_pretrain_recipe_default_settings -> isinstance;
test_pretrain_recipe_custom_settings -> pretrain_recipe;
test_pretrain_recipe_with_performance_mode -> pretrain_recipe;
test_pretrain_recipe_with_performance_mode -> any;
test_pretrain_recipe_with_performance_mode -> isinstance;
test_tokenizer -> tokenizer;
test_tokenizer -> isinstance;
test_model_default -> model;
test_model_default -> isinstance;
test_model_with_parameters -> parametrize;
test_model_with_parameters -> model;
test_pretrain_recipe_default -> pretrain_recipe;
test_pretrain_recipe_default -> isinstance;
test_pretrain_recipe_with_parameters -> parametrize;
test_pretrain_recipe_with_parameters -> pretrain_recipe;
test_finetune_recipe_with_parameters -> finetune_recipe;
test_finetune_recipe_with_parameters -> isinstance;
test_tokenizer_recipe -> tokenizer;
test_tokenizer_recipe -> isinstance;
test_invalid_model_size -> raises;
test_invalid_model_size -> model_recipe;
test_wandb_logger -> pretrain_recipe;
test_callbacks -> pretrain_recipe;
test_callbacks -> any;
test_nsys_profiling -> pretrain_recipe;
test_nsys_profiling -> any;
test_finetune_performance_optimizations -> finetune_recipe;
test_finetune_performance_optimizations -> any;
test_finetune_performance_optimizations -> isinstance;
test_finetune_performance_optimizations -> finetune_performance_optimizations;
test_finetune_performance_optimizations_without_peft -> finetune_recipe;
test_finetune_performance_optimizations_without_peft -> any;
test_finetune_performance_optimizations_without_peft -> isinstance;
test_finetune_performance_optimizations_without_peft -> finetune_performance_optimizations;
test_finetune_performance_optimizations_with_peft -> finetune_recipe;
test_finetune_model_types -> parametrize;
test_finetune_model_types -> finetune_recipe;
test_finetune_model_types -> capitalize;
test_invalid_model_type -> raises;
test_invalid_model_type -> finetune_recipe;
test_invalid_peft_scheme -> raises;
test_invalid_peft_scheme -> finetune_recipe;
test_finetune_sequence_length_settings -> finetune_recipe;
test_finetune_sequence_length_settings -> hasattr;
test_valid_peft_schemes -> parametrize;
test_valid_peft_schemes -> finetune_recipe;
test_finetune_recipe_no_peft -> finetune_recipe;
test_finetune_recipe_no_peft -> isinstance;
test_finetune_recipe_lora -> finetune_recipe;
test_finetune_recipe_lora -> isinstance;
test_finetune_recipe_dora -> finetune_recipe;
test_finetune_recipe_dora -> isinstance;
test_finetune_recipe_invalid_peft -> raises;
test_finetune_recipe_invalid_peft -> finetune_recipe;
test_model_config_parameters -> model;
test_model_config_parameters -> isinstance;
test_model_config_parameters -> nemotron_model;
test_valid_trainer_parallelism -> trainer;
test_valid_trainer_parallelism -> isinstance;
test_valid_trainer_parallelism -> pretrain_recipe;
test_finetune_peft_options -> finetune_recipe;
test_finetune_peft_options -> raises;
test_packed_sequence_options -> finetune_recipe;
test_bf16_mixed_config -> bf16_mixed;
test_fp16_mixed_config -> fp16_mixed;
test_bf16_with_fp8_mixed_config -> bf16_with_fp8_mixed;
test_fp16_with_fp8_mixed_config -> fp16_with_fp8_mixed;
test_bf16_with_mxfp8_mixed_config -> bf16_with_mxfp8_mixed;
test_fp16_with_mxfp8_mixed_config -> fp16_with_mxfp8_mixed;
test_bf16_with_fp8_current_scaling_mixed_config -> bf16_with_fp8_current_scaling_mixed;
test_fp16_with_fp8_current_scaling_mixed_config -> fp16_with_fp8_current_scaling_mixed;
test_bf16_with_fp8_subchannel_scaling_mixed_config -> bf16_with_fp8_subchannel_scaling_mixed;
test_fp16_with_fp8_subchannel_scaling_mixed_config -> fp16_with_fp8_subchannel_scaling_mixed;
test_nemotron_trainer -> nemotron_trainer;
test_nemotron_trainer -> isinstance;
test_trainer_with_different_gpu_configs -> parametrize;
test_trainer_with_different_gpu_configs -> nemotron_trainer;
test_trainer_with_different_gpu_configs -> isinstance;
test_trainer_with_different_parallelism_options -> parametrize;
test_trainer_with_different_parallelism_options -> nemotron_trainer;
test_model_config -> model;
test_finetune_recipe_with_dora -> finetune_recipe;
test_finetune_recipe_with_dora -> isinstance;
test_finetune_recipe_insufficient_nodes -> raises;
test_finetune_recipe_insufficient_nodes -> finetune_recipe;
test_audio_example_with_prompt_emmett_t5 -> create;
test_audio_example_with_prompt_emmett_t5 -> get_lhotse_dataloader_from_config;
test_audio_example_with_prompt_emmett_t5 -> isinstance;
test_audio_example_with_prompt_emmett_t5 -> has_custom;
test_audio_example_with_prompt_emmett_t5 -> is_tensor;
test_audio_example_with_prompt_emmett_t5 -> PromptFormatterTextProcessing;
test_audio_example_with_prompt_emmett_t5 -> LhotseAudioQuestionAnswerDataset;
test_audio_example_with_prompt_emmett_t5 -> len;
test_audio_example_with_prompt_emmett_t5 -> ids_to_text;
test_audio_example_with_prompt_emmett_t5 -> Identity;
nmt_paths -> mktemp;
nmt_paths -> write_text;
test_text_example_with_prompt_emmett_t5 -> create;
test_text_example_with_prompt_emmett_t5 -> get_lhotse_dataloader_from_config;
test_text_example_with_prompt_emmett_t5 -> isinstance;
test_text_example_with_prompt_emmett_t5 -> is_tensor;
test_text_example_with_prompt_emmett_t5 -> PromptFormatterTextProcessing;
test_text_example_with_prompt_emmett_t5 -> LhotseAudioQuestionAnswerDataset;
test_text_example_with_prompt_emmett_t5 -> len;
test_text_example_with_prompt_emmett_t5 -> ids_to_text;
test_text_example_with_prompt_emmett_t5 -> Identity;
test_speechllm_dataset -> PromptFormatterTextProcessing;
test_speechllm_dataset -> LhotseAudioQuestionAnswerDataset;
test_speechllm_dataset -> assert_close;
test_speechllm_dataset -> is_tensor;
test_speechllm_dataset -> is_floating_point;
test_speechllm_dataset -> tensor;
test_speechllm_dataset -> set;
test_speechllm_dataset -> ids_to_text;
test_speechllm_dataset -> tolist;
llama_tokenizer -> mktemp;
llama_tokenizer -> write_text;
llama_tokenizer -> SentencePieceTokenizer;
llama_tokenizer -> disabled;
llama_tokenizer -> create_spt_model;
llama_tokenizer -> str;
test_speechllm_dataset_prompt_template -> PromptFormatterTextProcessing;
test_speechllm_dataset_prompt_template -> LhotseAudioQuestionAnswerDataset;
test_speechllm_dataset_prompt_template -> print;
test_speechllm_dataset_prompt_template -> assert_close;
test_speechllm_dataset_prompt_template -> is_tensor;
test_speechllm_dataset_prompt_template -> is_floating_point;
test_speechllm_dataset_prompt_template -> tensor;
test_speechllm_dataset_prompt_template -> set;
test_speechllm_dataset_prompt_template -> ids_to_text;
test_speechllm_dataset_prompt_template -> tolist;
test_speechllm_dataset_tokens_to_generate_increases_seq_len -> PromptFormatterTextProcessing;
test_speechllm_dataset_tokens_to_generate_increases_seq_len -> LhotseAudioQuestionAnswerDataset;
llm_model_config -> dirname;
llm_model_config -> load;
llm_model_config -> abspath;
llm_model_config -> join;
trainer_config -> DictConfig;
trainer_config -> is_available;
trainer_config -> NLPDDPStrategy;
trainer_config -> Trainer;
trainer_config -> set_default_device;
trainer_config -> TorchElasticEnvironment;
perception_model_config -> DictConfig;
test_init_and_train -> restore_from_pretrained_models;
test_init_and_train -> isinstance;
test_init_and_train -> TemporaryDirectory;
test_init_and_train -> str;
test_init_and_train -> train;
test_init_and_train -> save_to;
test_init_and_train -> Path;
test_prepare_llm_input -> restore_from_pretrained_models;
test_prepare_llm_input -> cuda;
test_prepare_llm_input -> train;
test_prepare_llm_input -> prepare_llm_input;
test_prepare_llm_input -> allclose;
test_prepare_llm_input -> numpy;
test_prepare_llm_input -> items;
test_prepare_llm_input -> detach;
test_prepare_llm_input -> cpu;
test_prepare_llm_input -> sum;
test_concat_multi_features -> restore_from_pretrained_models;
test_concat_multi_features -> eval;
test_concat_multi_features -> zeros;
test_concat_multi_features -> LongTensor;
test_concat_multi_features -> _concat_multi_features;
test_concat_multi_features -> allclose;
test_concat_multi_features -> ones;
test_concat_multi_features -> numpy;
test_concat_multi_features -> sum;
test_concat_multi_features -> cpu;
test_shift_tokens_by_multi_audios -> ones;
test_shift_tokens_by_multi_audios -> LongTensor;
test_shift_tokens_by_multi_audios -> shift_tokens_by_multi_audios;
test_shift_tokens_by_multi_audios -> allclose;
test_shift_tokens_by_multi_audios -> zeros;
test_correctness -> skipif;
test_correctness -> parametrize;
test_correctness -> Random;
test_correctness -> seed;
test_correctness -> manual_seed;
test_correctness -> range;
test_correctness -> randint;
test_correctness -> requires_grad_;
test_correctness -> randn;
test_correctness -> geglu;
test_correctness -> geglu_compile;
test_correctness -> item;
test_correctness -> backward;
test_correctness -> is_available;
test_correctness -> clone;
test_correctness -> to;
test_correctness -> max;
test_correctness -> mean;
test_correctness -> detach;
test_correctness -> abs;
setUpClass -> from_pretrained;
setUpClass -> mkdtemp;
setUpClass -> Train;
setUpClass -> join;
setUpClass -> open;
setUpClass -> write;
create_vqa_test_dataset -> mkdir;
create_vqa_test_dataset -> prepare_dataset;
create_vqa_test_dataset -> join;
create_vqa_test_dataset -> ShardWriter;
create_vqa_test_dataset -> range;
create_vqa_test_dataset -> open;
create_vqa_test_dataset -> write;
create_vqa_test_dataset -> BytesIO;
create_vqa_test_dataset -> randint;
create_vqa_test_dataset -> fromarray;
create_vqa_test_dataset -> save;
create_vqa_test_dataset -> getvalue;
create_vqa_test_dataset -> encode;
create_vqa_test_dataset -> dumps;
tearDown -> cleanup;
tearDown -> run_only_on;
tearDown -> exists;
tearDown -> rmdir;
tearDown -> remove;
tearDown -> current_device;
tearDown -> set_device;
tearDown -> walk;
tearDown -> join;
decode_vqa_tokens_to_text -> join;
decode_vqa_tokens_to_text -> append;
decode_vqa_tokens_to_text -> decode;
test_data_module -> print;
test_data_module -> train_dataloader;
test_data_module -> val_dataloader;
test_data_module -> assertIsInstance;
test_data_module -> assertIn;
test_data_module -> decode_vqa_tokens_to_text;
test_data_module -> escape;
test_data_module -> assertRegex;
test_data_module -> tolist;
test_process_image -> rand;
test_process_image -> process_image;
test_process_image -> assertEqual;
test_process_image -> assertIsInstance;
test_process_image -> dim;
test_compute_loss_mask -> tensor;
test_compute_loss_mask -> compute_loss_mask;
test_compute_loss_mask -> assertTrue;
test_compute_loss_mask -> equal;
test_apply_prompt_template -> VQASample;
test_apply_prompt_template -> apply_prompt_template;
test_apply_prompt_template -> escape;
test_apply_prompt_template -> assertRegex;
test_apply_prompt_template -> assertTrue;
test_apply_prompt_template -> endswith;
test_apply_prompt_template -> rand;
test_apply_prompt_template -> strip;
test_tokenize_with_special_token -> tokenize;
test_tokenize_with_special_token -> append;
test_tokenize_with_special_token -> extend;
test_tokenize_with_special_token -> assertTrue;
test_tokenize_with_special_token -> tokenizer;
test_tokenize_with_special_token -> equal;
test_tokenize_with_special_token -> tensor;
test_tokenize_with_special_token -> tolist;
test_tokenize_with_only_special_token -> tokenize;
test_tokenize_with_only_special_token -> append;
test_tokenize_with_only_special_token -> assertTrue;
test_tokenize_with_only_special_token -> equal;
test_tokenize_with_only_special_token -> tensor;
test_tokenize_with_only_special_token -> tolist;
test_compute_labels -> range;
test_compute_labels -> VQASample;
test_compute_labels -> compute_labels;
test_compute_labels -> assertTrue;
test_compute_labels -> encode;
test_compute_labels -> equal;
test_compute_labels -> ones_like;
test_compute_labels -> rand;
test_compute_labels -> len;
test_compute_labels -> tolist;
test_compute_labels -> tensor;
test_encode -> VQASample;
test_encode -> ImageTextSample;
test_encode -> encode;
test_encode -> assertEqual;
test_encode -> assertIsNotNone;
test_encode -> len;
test_encode -> rand;
test_encode -> LlavaNextTextSample;
test_encode -> assertGreater;
test_encode -> assertIsInstance;
test_encode -> assertTrue;
test_encode -> all;
test_encode -> isinstance;
test_tokenize_with_interleaving_images_after_text -> SimilarityInterleavedSample;
test_tokenize_with_interleaving_images_after_text -> tokenize;
test_tokenize_with_interleaving_images_after_text -> assertTrue;
test_tokenize_with_interleaving_images_after_text -> assertEqual;
test_tokenize_with_interleaving_images_after_text -> tokenizer;
test_tokenize_with_interleaving_images_after_text -> equal;
test_tokenize_with_interleaving_images_after_text -> tensor;
test_tokenize_with_interleaving_images_after_text -> rand;
test_tokenize_with_interleaving_images_after_text -> tolist;
test_tokenize_with_interleaving_images_before_text -> SimilarityInterleavedEncoder;
test_tokenize_with_interleaving_images_before_text -> SimilarityInterleavedSample;
test_tokenize_with_interleaving_images_before_text -> tokenize;
test_tokenize_with_interleaving_images_before_text -> assertTrue;
test_tokenize_with_interleaving_images_before_text -> assertEqual;
test_tokenize_with_interleaving_images_before_text -> tokenizer;
test_tokenize_with_interleaving_images_before_text -> equal;
test_tokenize_with_interleaving_images_before_text -> tensor;
test_tokenize_with_interleaving_images_before_text -> rand;
test_tokenize_with_interleaving_images_before_text -> tolist;
test_tokenize_with_text_and_images -> InterleavedSample;
test_tokenize_with_text_and_images -> tokenize;
test_tokenize_with_text_and_images -> assertTrue;
test_tokenize_with_text_and_images -> assertEqual;
test_tokenize_with_text_and_images -> rand;
test_tokenize_with_text_and_images -> tokenizer;
test_tokenize_with_text_and_images -> equal;
test_tokenize_with_text_and_images -> tensor;
test_tokenize_with_text_and_images -> tolist;
test_encode_function -> InterleavedSample;
test_encode_function -> ImageTextSample;
test_encode_function -> encode;
test_encode_function -> assertEqual;
test_encode_function -> assertIsNotNone;
test_encode_function -> tensor;
test_encode_function -> assertTrue;
test_encode_function -> rand;
test_encode_function -> len;
test_encode_function -> tokenizer;
test_encode_function -> equal;
test_encode_function -> tolist;
test_register_encoder -> VQASampleEncoder;
test_register_encoder -> register_encoder;
test_register_encoder -> assertIn;
test_encode_sample_vqa -> VQASample;
test_encode_sample_vqa -> encode_sample;
test_encode_sample_vqa -> assertIsInstance;
test_encode_sample_vqa -> assertIsNotNone;
test_encode_sample_vqa -> rand;
test_encode_sample_interleaved -> InterleavedSample;
test_encode_sample_interleaved -> encode_sample;
test_encode_sample_interleaved -> assertIsInstance;
test_encode_sample_interleaved -> assertIsNotNone;
test_encode_sample_interleaved -> rand;
test_encode_sample_similarity_interleaved -> SimilarityInterleavedSample;
test_encode_sample_similarity_interleaved -> encode_sample;
test_encode_sample_similarity_interleaved -> assertIsInstance;
test_encode_sample_similarity_interleaved -> assertIsNotNone;
test_encode_sample_similarity_interleaved -> rand;
test_encode_batch -> batch;
test_encode_batch -> encode_batch;
test_encode_batch -> assertIsInstance;
test_encode_batch -> assertIn;
test_encode_batch -> assertEqual;
test_encode_batch -> ImageTextSample;
test_encode_batch -> len;
test_encode_batch -> tensor;
test_encode_batch -> rand;
is_rttm_length_too_long -> read_rttm_lines;
is_rttm_length_too_long -> get_vad_out_from_rttm_line;
is_rttm_length_too_long -> max;
test_e2e_speaker_diar_dataset -> abspath;
test_e2e_speaker_diar_dataset -> join;
test_e2e_speaker_diar_dataset -> is_available;
test_e2e_speaker_diar_dataset -> NamedTemporaryFile;
test_e2e_speaker_diar_dataset -> seek;
test_e2e_speaker_diar_dataset -> WaveformFeaturizer;
test_e2e_speaker_diar_dataset -> AudioToSpeechE2ESpkDiarDataset;
test_e2e_speaker_diar_dataset -> DataLoader;
test_e2e_speaker_diar_dataset -> len;
test_e2e_speaker_diar_dataset -> enumerate;
test_e2e_speaker_diar_dataset -> open;
test_e2e_speaker_diar_dataset -> range;
test_e2e_speaker_diar_dataset -> replace;
test_e2e_speaker_diar_dataset -> write;
test_e2e_speaker_diar_dataset -> loads;
test_e2e_speaker_diar_dataset -> append;
test_e2e_speaker_diar_dataset -> item;
test_e2e_speaker_diar_dataset -> abs;
test_e2e_speaker_diar_dataset -> any;
test_e2e_speaker_diar_dataset -> isnan;
msdd_model -> fixture;
msdd_model -> DictConfig;
msdd_model -> EncDecDiarLabelModel;
get_train_ds_config -> DictConfig;
get_validation_ds_config -> DictConfig;
get_test_ds_config -> DictConfig;
test_e2e_speaker_diar_lhotse_dataset -> parametrize;
test_e2e_speaker_diar_lhotse_dataset -> abspath;
test_e2e_speaker_diar_lhotse_dataset -> join;
test_e2e_speaker_diar_lhotse_dataset -> is_available;
test_e2e_speaker_diar_lhotse_dataset -> NamedTemporaryFile;
test_e2e_speaker_diar_lhotse_dataset -> seek;
test_e2e_speaker_diar_lhotse_dataset -> get_lhotse_dataloader_from_config;
test_e2e_speaker_diar_lhotse_dataset -> enumerate;
test_e2e_speaker_diar_lhotse_dataset -> open;
test_e2e_speaker_diar_lhotse_dataset -> get_train_ds_config;
test_e2e_speaker_diar_lhotse_dataset -> range;
test_e2e_speaker_diar_lhotse_dataset -> replace;
test_e2e_speaker_diar_lhotse_dataset -> write;
test_e2e_speaker_diar_lhotse_dataset -> loads;
test_e2e_speaker_diar_lhotse_dataset -> append;
test_e2e_speaker_diar_lhotse_dataset -> LhotseAudioToSpeechE2ESpkDiarDataset;
test_e2e_speaker_diar_lhotse_dataset -> item;
test_e2e_speaker_diar_lhotse_dataset -> abs;
test_e2e_speaker_diar_lhotse_dataset -> any;
test_e2e_speaker_diar_lhotse_dataset -> get_test_ds_config;
test_e2e_speaker_diar_lhotse_dataset -> isnan;
word_count -> sum;
word_count -> len;
word_count -> split;
permuted_input_test -> permutations;
permuted_input_test -> calculate_session_cpWER;
permuted_input_test -> abs;
permuted_input_test -> tensor;
test_cpwer_oneword -> calculate_session_cpWER;
test_cpwer_oneword -> word_count;
test_cpwer_oneword -> calculate_wer_count;
test_cpwer_oneword -> abs;
test_cpwer_oneword -> permuted_input_test;
test_cpwer_oneword -> calculate_session_cpWER_bruteforce;
test_cpwer_oneword -> tensor;
test_cpwer_perfect -> calculate_session_cpWER;
test_cpwer_perfect -> abs;
test_cpwer_perfect -> permuted_input_test;
test_cpwer_perfect -> tensor;
test_cpwer_spk_counfusion_and_asr_error -> calculate_session_cpWER;
test_cpwer_spk_counfusion_and_asr_error -> word_count;
test_cpwer_spk_counfusion_and_asr_error -> calculate_wer_count;
test_cpwer_spk_counfusion_and_asr_error -> abs;
test_cpwer_spk_counfusion_and_asr_error -> permuted_input_test;
test_cpwer_spk_counfusion_and_asr_error -> calculate_session_cpWER_bruteforce;
test_cpwer_spk_counfusion_and_asr_error -> tensor;
test_cpwer_undercount -> calculate_session_cpWER;
test_cpwer_undercount -> word_count;
test_cpwer_undercount -> calculate_wer_count;
test_cpwer_undercount -> abs;
test_cpwer_undercount -> calculate_session_cpWER_bruteforce;
test_cpwer_undercount -> tensor;
test_cpwer_overcount -> calculate_session_cpWER;
test_cpwer_overcount -> word_count;
test_cpwer_overcount -> calculate_wer_count;
test_cpwer_overcount -> abs;
test_cpwer_overcount -> calculate_session_cpWER_bruteforce;
test_cpwer_overcount -> tensor;
test_get_partial_ref_labels -> parametrize;
test_get_partial_ref_labels -> get_partial_ref_labels;
test_get_online_DER_stats -> parametrize;
test_get_online_DER_stats -> get_online_DER_stats;
test_msdd_diar_inference -> parametrize;
test_msdd_diar_inference -> to;
test_msdd_diar_inference -> join;
test_msdd_diar_inference -> diarizer;
test_msdd_diar_inference -> device;
test_msdd_diar_inference -> param;
test_msdd_diar_inference -> from_pretrained;
test_msdd_diar_inference -> len;
test_msdd_diar_inference -> listdir;
test_msdd_diar_inference -> labels;
test_msdd_diar_inference -> list;
test_msdd_diar_inference -> skipif;
test_msdd_diar_inference -> itersegments;
test_msdd_diar_inference -> is_available;
sortformer_model -> fixture;
sortformer_model -> DictConfig;
sortformer_model -> SortformerEncLabelModel;
test_ecapa_enc_dec -> DictConfig;
test_ecapa_enc_dec -> EncDecSpeakerLabelModel;
test_ecapa_enc_dec -> train;
test_ecapa_enc_dec -> to_config_dict;
test_ecapa_enc_dec -> from_config_dict;
test_ecapa_enc_dec -> assertTrue;
test_ecapa_enc_dec -> isinstance;
test_titanet_enc_dec -> DictConfig;
test_titanet_enc_dec -> EncDecSpeakerLabelModel;
test_titanet_enc_dec -> train;
test_titanet_enc_dec -> to_config_dict;
test_titanet_enc_dec -> from_config_dict;
test_titanet_enc_dec -> assertTrue;
test_titanet_enc_dec -> isinstance;
test_pretrained_titanet_embeddings -> from_pretrained;
test_pretrained_titanet_embeddings -> isinstance;
test_pretrained_titanet_embeddings -> join;
test_pretrained_titanet_embeddings -> infer_file;
test_pretrained_titanet_embeddings -> argmax;
test_pretrained_titanet_embeddings -> sum;
test_pretrained_ambernet_logits -> from_pretrained;
test_pretrained_ambernet_logits -> isinstance;
test_pretrained_ambernet_logits -> join;
test_pretrained_ambernet_logits -> get_label;
test_pretrained_ambernet_logits_batched -> from_pretrained;
test_pretrained_ambernet_logits_batched -> join;
test_pretrained_ambernet_logits_batched -> is_available;
test_pretrained_ambernet_logits_batched -> TemporaryDirectory;
test_pretrained_ambernet_logits_batched -> batch_inference;
test_pretrained_ambernet_logits_batched -> open;
test_pretrained_ambernet_logits_batched -> write;
test_pretrained_ambernet_logits_batched -> argmax;
test_pretrained_ambernet_logits_batched -> dumps;
test_diarize -> eval;
test_diarize -> fill_;
test_diarize -> diarize;
test_diarize -> len;
test_diarize_generator -> eval;
test_diarize_generator -> fill_;
test_diarize_generator -> DiarizeConfig;
test_diarize_generator -> diarize_generator;
test_diarize_generator -> extend;
test_diarize_generator -> len;
test_diarize_generator_explicit_stop_check -> eval;
test_diarize_generator_explicit_stop_check -> fill_;
test_diarize_generator_explicit_stop_check -> DiarizeConfig;
test_diarize_generator_explicit_stop_check -> diarize_generator;
test_diarize_generator_explicit_stop_check -> extend;
test_diarize_generator_explicit_stop_check -> len;
test_diarize_generator_explicit_stop_check -> next;
test_diarize_check_flags -> eval;
test_diarize_check_flags -> diarize;
check_range_values -> zip;
check_range_values -> all;
check_range_values -> append;
check_range_values -> abs;
check_labels -> zip;
check_labels -> all;
check_labels -> append;
check_labels -> abs;
matrix -> to;
matrix -> array;
matrix -> Tensor;
generate_orthogonal_embs -> randn;
generate_orthogonal_embs -> svd;
generate_orthogonal_embs -> sum;
generate_orthogonal_embs -> abs;
generate_orthogonal_embs -> getCosAffinityMatrix;
generate_orthogonal_embs -> diag;
generate_orthogonal_embs -> ones;
generate_toy_data -> manual_seed;
generate_toy_data -> generate_orthogonal_embs;
generate_toy_data -> enumerate;
generate_toy_data -> concat;
generate_toy_data -> tensor;
generate_toy_data -> unsqueeze;
generate_toy_data -> zip;
generate_toy_data -> range;
generate_toy_data -> get_subsegments_scriptable;
generate_toy_data -> extend;
generate_toy_data -> append;
generate_toy_data -> ones;
generate_toy_data -> len;
generate_toy_data -> tile;
generate_toy_data -> set_trace;
generate_toy_data -> rand;
test_minimal_index_ex2 -> parametrize;
test_minimal_index_ex2 -> tensor;
test_minimal_index_ex2 -> get_minimal_indices;
test_minimal_index_ex2 -> check_labels;
test_minimal_index_same -> parametrize;
test_minimal_index_same -> matrix;
test_minimal_index_same -> get_minimal_indices;
test_minimal_index_same -> check_labels;
test_stitch_cluster_labels_label_switch -> parametrize;
test_stitch_cluster_labels_label_switch -> matrix;
test_stitch_cluster_labels_label_switch -> stitch_cluster_labels;
test_stitch_cluster_labels_label_switch -> check_labels;
test_stitch_cluster_labels_label_many_to_one -> parametrize;
test_stitch_cluster_labels_label_many_to_one -> matrix;
test_stitch_cluster_labels_label_many_to_one -> stitch_cluster_labels;
test_stitch_cluster_labels_label_many_to_one -> check_labels;
test_stitch_cluster_labels_label_many_to_one -> tolist;
test_stitch_cluster_labels_label_many_to_one -> arange;
test_stitch_cluster_labels_label_one_to_many -> parametrize;
test_stitch_cluster_labels_label_one_to_many -> matrix;
test_stitch_cluster_labels_label_one_to_many -> stitch_cluster_labels;
test_stitch_cluster_labels_label_one_to_many -> check_labels;
test_stitch_cluster_labels_label_one_to_many -> tolist;
test_stitch_cluster_labels_label_one_to_many -> arange;
test_stitch_cluster_labels_label_one_to_many -> range;
test_stitch_cluster_labels_one_label_replaced -> parametrize;
test_stitch_cluster_labels_one_label_replaced -> matrix;
test_stitch_cluster_labels_one_label_replaced -> stitch_cluster_labels;
test_stitch_cluster_labels_one_label_replaced -> check_labels;
test_stitch_cluster_labels_confusion_error -> parametrize;
test_stitch_cluster_labels_confusion_error -> matrix;
test_stitch_cluster_labels_confusion_error -> stitch_cluster_labels;
test_stitch_cluster_labels_confusion_error -> check_labels;
test_stitch_cluster_labels_speaker_more_speakers -> parametrize;
test_stitch_cluster_labels_speaker_more_speakers -> matrix;
test_stitch_cluster_labels_speaker_more_speakers -> stitch_cluster_labels;
test_stitch_cluster_labels_speaker_more_speakers -> check_labels;
test_stitch_cluster_labels_speaker_longer_sequence -> parametrize;
test_stitch_cluster_labels_speaker_longer_sequence -> matrix;
test_stitch_cluster_labels_speaker_longer_sequence -> stitch_cluster_labels;
test_stitch_cluster_labels_speaker_longer_sequence -> check_labels;
test_embedding_merger -> parametrize;
test_embedding_merger -> generate_toy_data;
test_embedding_merger -> split_input_data;
test_embedding_merger -> getCosAffinityMatrix;
test_embedding_merger -> get_closest_embeddings;
test_embedding_merger -> merge_vectors;
test_embedding_merger -> where;
test_embedding_merger -> item;
test_embedding_merger -> max;
test_embedding_merger -> sum;
test_cosine_affinity_calculation -> parametrize;
test_cosine_affinity_calculation -> generate_toy_data;
test_cosine_affinity_calculation -> split_input_data;
test_cosine_affinity_calculation -> getCosAffinityMatrix;
test_cosine_affinity_calculation -> any;
test_cosine_affinity_calculation -> isnan;
test_cosine_affinity_calculation_scale_interpol -> parametrize;
test_cosine_affinity_calculation_scale_interpol -> generate_toy_data;
test_cosine_affinity_calculation_scale_interpol -> split_input_data;
test_cosine_affinity_calculation_scale_interpol -> get_scale_interpolated_embs;
test_cosine_affinity_calculation_scale_interpol -> getCosAffinityMatrix;
test_cosine_affinity_calculation_scale_interpol -> any;
test_cosine_affinity_calculation_scale_interpol -> isnan;
test_embedding_reducer -> parametrize;
test_embedding_reducer -> generate_toy_data;
test_embedding_reducer -> split_input_data;
test_embedding_reducer -> run_reducer;
test_embedding_reducer -> item;
test_embedding_reducer -> sum;
test_merge_scheduler_2clus -> parametrize;
test_merge_scheduler_2clus -> get_merge_quantity;
test_merge_scheduler_2clus -> all;
test_merge_scheduler_2clus -> tensor;
test_merge_scheduler_3clus -> parametrize;
test_merge_scheduler_3clus -> get_merge_quantity;
test_merge_scheduler_3clus -> all;
test_merge_scheduler_3clus -> tensor;
test_merge_scheduler_4clus_shuff -> parametrize;
test_merge_scheduler_4clus_shuff -> get_merge_quantity;
test_merge_scheduler_4clus_shuff -> all;
test_merge_scheduler_4clus_shuff -> tensor;
test_merge_scheduler_3clus_repeat -> parametrize;
test_merge_scheduler_3clus_repeat -> get_merge_quantity;
test_merge_scheduler_3clus_repeat -> all;
test_merge_scheduler_3clus_repeat -> tensor;
test_online_segmentor_class_export -> script;
test_online_segmentor_class_export -> _OnlineSegmentor;
test_online_segmentor_class_export -> isinstance;
test_online_segmentor_instance_export -> OnlineSegmentor;
test_online_segmentor_instance_export -> script;
test_online_segmentor_instance_export -> isinstance;
test_online_speaker_clustering_instance_export -> OnlineSpeakerClustering;
test_online_speaker_clustering_instance_export -> script;
test_online_speaker_clustering_instance_export -> isinstance;
test_online_speaker_clustering_instance_export -> SpeakerClustering;
test_get_subsegments -> parametrize;
test_get_subsegments -> get_subsegments_scriptable;
test_get_subsegments -> get_subsegments;
test_get_subsegments -> append;
test_get_subsegments -> round;
test_min_subsegment_duration_filtering -> get_subsegments;
test_zero_duration -> get_subsegments;
test_edge_case_short_slice -> get_subsegments;
test_merge_int_intervals_ex1 -> parametrize;
test_merge_int_intervals_ex1 -> merge_int_intervals;
test_merge_int_intervals_ex1 -> check_range_values;
test_merge_int_intervals_ex2 -> parametrize;
test_merge_int_intervals_ex2 -> merge_int_intervals;
test_merge_int_intervals_ex2 -> check_range_values;
test_merge_int_intervals_edge_test -> parametrize;
test_merge_int_intervals_edge_test -> merge_int_intervals;
test_merge_int_intervals_edge_test -> check_range_values;
test_is_overlap_true -> parametrize;
test_is_overlap_true -> is_overlap;
test_is_overlap_false -> parametrize;
test_is_overlap_false -> is_overlap;
test_fl2int -> parametrize;
test_fl2int -> fl2int;
test_fl2int -> round;
test_int2fl -> parametrize;
test_int2fl -> abs;
test_int2fl -> int2fl;
test_int2fl -> round;
test_merge_float_intervals_edge_margin_test -> merge_float_intervals;
test_merge_float_intervals_edge_margin_test -> check_range_values;
test_merge_float_overlaps -> parametrize;
test_merge_float_overlaps -> merge_float_intervals;
test_merge_float_overlaps -> check_range_values;
test_get_speech_labels_for_update -> tensor;
test_get_speech_labels_for_update -> get_speech_labels_for_update;
test_get_speech_labels_for_update -> check_ranges;
test_get_speech_labels_for_update -> sum;
test_get_online_subsegments_from_buffer -> manual_seed;
test_get_online_subsegments_from_buffer -> Tensor;
test_get_online_subsegments_from_buffer -> randn;
test_get_online_subsegments_from_buffer -> int;
test_get_online_subsegments_from_buffer -> get_online_subsegments_from_buffer;
test_get_online_subsegments_from_buffer -> check_range_values;
test_get_online_subsegments_from_buffer -> enumerate;
test_get_online_subsegments_from_buffer -> get_target_sig;
test_get_online_subsegments_from_buffer -> sum;
test_get_online_subsegments_from_buffer -> len;
test_get_online_subsegments_from_buffer -> repeat_signal;
test_get_online_subsegments_from_buffer -> abs;
test_get_online_subsegments_from_buffer -> tensor;
test_get_online_subsegments_from_buffer -> arange;
test_get_new_cursor_for_update_mulsegs_ex1 -> parametrize;
test_get_new_cursor_for_update_mulsegs_ex1 -> get_new_cursor_for_update;
test_tensor_to_list -> parametrize;
test_tensor_to_list -> tensor;
test_tensor_to_list -> tensor_to_list;
test_get_online_segments_from_slices -> parametrize;
test_get_online_segments_from_slices -> randn;
test_get_online_segments_from_slices -> get_online_segments_from_slices;
test_get_online_segments_from_slices -> int;
test_get_online_segments_from_slices -> len;
test_get_k_neighbors_connections -> parametrize;
test_get_k_neighbors_connections -> manual_seed;
test_get_k_neighbors_connections -> rand;
test_get_k_neighbors_connections -> getKneighborsConnections;
test_get_k_neighbors_connections -> max;
test_get_k_neighbors_connections -> all;
test_get_k_neighbors_connections -> sum;
test_get_k_neighbors_connections -> float;
test_unpack_labels -> parametrize;
test_unpack_labels -> LongFormSpeakerClustering;
test_unpack_labels -> unpack_labels;
test_unpack_labels -> equal;
test_unpack_labels -> tensor;
test_offline_clus_script_save_load -> parametrize;
test_offline_clus_script_save_load -> SpeakerClustering;
test_offline_clus_script_save_load -> script;
test_offline_clus_script_save_load -> save;
test_offline_clus_script_save_load -> exists;
test_offline_clus_script_save_load -> remove;
test_online_clus_script_save_load -> parametrize;
test_online_clus_script_save_load -> OnlineSpeakerClustering;
test_online_clus_script_save_load -> script;
test_online_clus_script_save_load -> save;
test_online_clus_script_save_load -> exists;
test_online_clus_script_save_load -> remove;
test_offline_speaker_clustering -> run_only_on;
test_offline_speaker_clustering -> parametrize;
test_offline_speaker_clustering -> generate_toy_data;
test_offline_speaker_clustering -> SpeakerClustering;
test_offline_speaker_clustering -> isinstance;
test_offline_speaker_clustering -> forward_infer;
test_offline_speaker_clustering -> stitch_cluster_labels;
test_offline_speaker_clustering -> to;
test_offline_speaker_clustering -> all;
test_offline_speaker_clustering -> script;
test_offline_speaker_clustering -> len;
test_offline_speaker_clustering -> set;
test_offline_speaker_clustering -> tolist;
test_offline_speaker_clustering_cpu -> run_only_on;
test_offline_speaker_clustering_cpu -> parametrize;
test_offline_speaker_clustering_cpu -> test_offline_speaker_clustering;
test_offline_speaker_clustering_very_short_cpu -> run_only_on;
test_offline_speaker_clustering_very_short_cpu -> parametrize;
test_offline_speaker_clustering_very_short_cpu -> generate_toy_data;
test_offline_speaker_clustering_very_short_cpu -> SpeakerClustering;
test_offline_speaker_clustering_very_short_cpu -> isinstance;
test_offline_speaker_clustering_very_short_cpu -> forward_infer;
test_offline_speaker_clustering_very_short_cpu -> stitch_cluster_labels;
test_offline_speaker_clustering_very_short_cpu -> to;
test_offline_speaker_clustering_very_short_cpu -> all;
test_offline_speaker_clustering_very_short_cpu -> len;
test_offline_speaker_clustering_very_short_cpu -> set;
test_offline_speaker_clustering_very_short_cpu -> tolist;
test_offline_speaker_clustering_very_short_gpu -> run_only_on;
test_offline_speaker_clustering_very_short_gpu -> parametrize;
test_offline_speaker_clustering_very_short_gpu -> generate_toy_data;
test_offline_speaker_clustering_very_short_gpu -> SpeakerClustering;
test_offline_speaker_clustering_very_short_gpu -> isinstance;
test_offline_speaker_clustering_very_short_gpu -> forward_infer;
test_offline_speaker_clustering_very_short_gpu -> stitch_cluster_labels;
test_offline_speaker_clustering_very_short_gpu -> to;
test_offline_speaker_clustering_very_short_gpu -> all;
test_longform_speaker_clustering_cpu -> run_only_on;
test_longform_speaker_clustering_cpu -> parametrize;
test_longform_speaker_clustering_cpu -> generate_toy_data;
test_longform_speaker_clustering_cpu -> LongFormSpeakerClustering;
test_longform_speaker_clustering_cpu -> forward_infer;
test_longform_speaker_clustering_cpu -> stitch_cluster_labels;
test_longform_speaker_clustering_cpu -> to;
test_longform_speaker_clustering_cpu -> all;
test_longform_speaker_clustering_cpu -> script;
test_longform_speaker_clustering_cpu -> isinstance;
test_longform_speaker_clustering_gpu -> run_only_on;
test_longform_speaker_clustering_gpu -> parametrize;
test_longform_speaker_clustering_gpu -> generate_toy_data;
test_longform_speaker_clustering_gpu -> LongFormSpeakerClustering;
test_longform_speaker_clustering_gpu -> forward_infer;
test_longform_speaker_clustering_gpu -> stitch_cluster_labels;
test_longform_speaker_clustering_gpu -> to;
test_longform_speaker_clustering_gpu -> all;
test_longform_speaker_clustering_gpu -> script;
test_longform_speaker_clustering_gpu -> isinstance;
test_online_speaker_clustering -> run_only_on;
test_online_speaker_clustering -> parametrize;
test_online_speaker_clustering -> generate_toy_data;
test_online_speaker_clustering -> split_input_data;
test_online_speaker_clustering -> OnlineSpeakerClustering;
test_online_speaker_clustering -> int;
test_online_speaker_clustering -> range;
test_online_speaker_clustering -> current_device;
test_online_speaker_clustering -> script;
test_online_speaker_clustering -> to;
test_online_speaker_clustering -> forward_infer;
test_online_speaker_clustering -> cpu;
test_online_speaker_clustering -> stitch_cluster_labels;
test_online_speaker_clustering -> extend;
test_online_speaker_clustering -> sum;
test_online_speaker_clustering -> len;
test_online_speaker_clustering -> list;
test_online_speaker_clustering -> arange;
test_online_speaker_clustering_cpu -> run_only_on;
test_online_speaker_clustering_cpu -> parametrize;
test_online_speaker_clustering_cpu -> test_online_speaker_clustering;
test_lsa_solver_export_test -> randint;
test_lsa_solver_export_test -> LinearSumAssignmentSolver;
test_lsa_solver_export_test -> script;
test_lsa_solver_export_test -> isinstance;
test_linear_sum_assignment_algorithm_cost_matrix -> parametrize;
test_linear_sum_assignment_algorithm_cost_matrix -> nemo_linear_sum_assignment;
test_linear_sum_assignment_algorithm_cost_matrix -> scipy_linear_sum_assignment;
test_linear_sum_assignment_algorithm_cost_matrix -> sum;
test_linear_sum_assignment_algorithm_cost_matrix -> numpy;
test_linear_sum_assignment_algorithm_cost_matrix -> tensor;
test_linear_sum_assignment_algorithm_cost_matrix -> cpu;
test_linear_sum_assignment_algorithm_random_matrix -> parametrize;
test_linear_sum_assignment_algorithm_random_matrix -> manual_seed;
test_linear_sum_assignment_algorithm_random_matrix -> randint;
test_linear_sum_assignment_algorithm_random_matrix -> test_linear_sum_assignment_algorithm_cost_matrix;
reconstruct_labels_forloop -> expand;
reconstruct_labels_forloop -> gather;
reconstruct_labels_forloop -> unsqueeze;
test_find_first_nonzero -> parametrize;
test_find_first_nonzero -> find_first_nonzero;
test_find_first_nonzero -> equal;
test_find_first_nonzero -> tensor;
test_find_first_nonzero -> cat;
test_find_first_nonzero -> zeros;
test_find_first_nonzero -> ones;
test_find_best_permutation -> parametrize;
test_find_best_permutation -> find_best_permutation;
test_find_best_permutation -> equal;
test_find_best_permutation -> tensor;
test_reconstruct_labels_with_forloop_ver -> parametrize;
test_reconstruct_labels_with_forloop_ver -> rand;
test_reconstruct_labels_with_forloop_ver -> stack;
test_reconstruct_labels_with_forloop_ver -> reconstruct_labels;
test_reconstruct_labels_with_forloop_ver -> reconstruct_labels_forloop;
test_reconstruct_labels_with_forloop_ver -> allclose;
test_reconstruct_labels_with_forloop_ver -> randperm;
test_reconstruct_labels_with_forloop_ver -> range;
test_reconstruct_labels -> parametrize;
test_reconstruct_labels -> reconstruct_labels;
test_reconstruct_labels -> allclose;
test_reconstruct_labels -> tensor;
test_get_ats_targets -> parametrize;
test_get_ats_targets -> list;
test_get_ats_targets -> tensor;
test_get_ats_targets -> get_ats_targets;
test_get_ats_targets -> allclose;
test_get_ats_targets -> range;
test_get_ats_targets -> permutations;
test_get_pil_targets -> parametrize;
test_get_pil_targets -> list;
test_get_pil_targets -> tensor;
test_get_pil_targets -> get_pil_targets;
test_get_pil_targets -> equal;
test_get_pil_targets -> range;
test_get_pil_targets -> permutations;
test_various_cases -> parametrize;
test_various_cases -> get_hidden_length_from_sample_length;
test_default_parameters -> get_hidden_length_from_sample_length;
test_edge_cases -> get_hidden_length_from_sample_length;
test_real_life_examples -> get_hidden_length_from_sample_length;
test_replace_placeholders -> tensor;
test_replace_placeholders -> ones;
test_replace_placeholders -> replace_placeholders_and_build_targets;
test_replace_placeholders -> all;
test_replace_placeholders -> assert_close;
test_replace_placeholders -> full;
test_replace_placeholders -> where;
data_config -> DictConfig;
data_config -> to_file;
data_config -> str;
data_config -> setattr;
data_config -> format;
data_config -> drop_in_memory_data;
data_config -> save_audios;
data_config -> map;
data_config -> _assign;
data_config -> DummyManifest;
_assign -> setattr;
test_datamodule_train_dataloader -> DataModule;
test_datamodule_train_dataloader -> train_dataloader;
test_datamodule_train_dataloader -> isinstance;
test_datamodule_train_dataloader -> iter;
test_datamodule_train_dataloader -> next;
test_datamodule_train_dataloader -> all;
test_datamodule_train_dataloader -> len;
test_datamodule_train_dataloader -> Identity;
test_datamodule_validation_dataloader -> DataModule;
test_datamodule_validation_dataloader -> val_dataloader;
test_datamodule_validation_dataloader -> isinstance;
test_datamodule_validation_dataloader -> iter;
test_datamodule_validation_dataloader -> next;
test_datamodule_validation_dataloader -> keys;
test_datamodule_validation_dataloader -> all;
test_datamodule_validation_dataloader -> Identity;
test_datamodule_validation_dataloader -> len;
_inner -> setattr;
resolve_pretrained_models -> exists;
dataset -> fixture;
dataset -> DuplexS2SDataset;
dataset -> SALMDataset;
training_cutset_batch -> fixture;
training_cutset_batch -> dummy_cut;
training_cutset_batch -> dummy_recording;
training_cutset_batch -> CutSet;
training_cutset_batch -> SupervisionSegment;
training_cutset_batch -> NeMoMultimodalConversation;
training_cutset_batch -> TextTurn;
training_cutset_batch -> AudioTurn;
test_s2s_dataset -> is_tensor;
test_s2s_dataset -> tolist;
test_s2s_training_step -> on_train_epoch_start;
test_s2s_training_step -> move_data_to_device;
test_s2s_training_step -> training_step;
test_s2s_training_step -> is_tensor;
test_s2s_training_step -> isnan;
test_s2s_validation_step -> on_validation_epoch_start;
test_s2s_validation_step -> move_data_to_device;
test_s2s_validation_step -> validation_step;
test_s2s_offline_generation -> offline_inference;
test_s2s_offline_generation -> isinstance;
test_s2s_offline_generation -> all;
test_s2s_offline_generation -> keys;
test_s2s_offline_generation -> randn;
test_s2s_offline_generation -> tensor;
test_s2s_speech_decoder_training_step -> on_train_epoch_start;
test_s2s_speech_decoder_training_step -> move_data_to_device;
test_s2s_speech_decoder_training_step -> training_step;
test_s2s_speech_decoder_training_step -> is_tensor;
test_s2s_speech_decoder_training_step -> isnan;
test_s2s_speech_decoder_validation_step -> on_validation_epoch_start;
test_s2s_speech_decoder_validation_step -> move_data_to_device;
test_s2s_speech_decoder_validation_step -> validation_step;
test_s2s_speech_decoder_offline_generation -> offline_inference;
test_s2s_speech_decoder_offline_generation -> isinstance;
test_s2s_speech_decoder_offline_generation -> all;
test_s2s_speech_decoder_offline_generation -> keys;
test_s2s_speech_decoder_offline_generation -> randn;
test_s2s_speech_decoder_offline_generation -> tensor;
test_freezing_params -> train;
test_freezing_params -> freeze_and_subset;
test_freezing_params -> list;
test_freezing_params -> named_parameters;
test_freezing_params -> DummyModel;
test_keeping_unfrozen_params -> train;
test_keeping_unfrozen_params -> freeze_and_subset;
test_keeping_unfrozen_params -> list;
test_keeping_unfrozen_params -> named_parameters;
test_keeping_unfrozen_params -> DummyModel;
test_configure_optimizers -> DummyModel;
test_configure_optimizers -> DictConfig;
test_configure_optimizers -> configure_optimizers;
test_configure_optimizers -> isinstance;
test_configure_optimizers -> keys;
test_configure_optimizers -> len;
test_configure_optimizers_with_lr_scheduler -> DummyModel;
test_configure_optimizers_with_lr_scheduler -> DictConfig;
test_configure_optimizers_with_lr_scheduler -> configure_optimizers;
test_configure_optimizers_with_lr_scheduler -> isinstance;
test_configure_optimizers_with_lr_scheduler -> keys;
test_bleu -> BLEU;
test_bleu -> update;
test_bleu -> compute;
prompt_formatter -> fixture;
prompt_formatter -> resolve;
test_salm_dataset -> map;
test_salm_dataset -> decode;
test_salm_dataset -> is_tensor;
test_salm_dataset -> apply_prompt_format;
test_salm_training_step -> map;
test_salm_training_step -> move_data_to_device;
test_salm_training_step -> training_step;
test_salm_training_step -> is_tensor;
test_salm_training_step -> isnan;
test_salm_training_step -> apply_prompt_format;
test_salm_validation_step -> on_validation_epoch_start;
test_salm_validation_step -> map;
test_salm_validation_step -> move_data_to_device;
test_salm_validation_step -> validation_step;
test_salm_validation_step -> apply_prompt_format;
test_salm_generation -> generate;
test_salm_generation -> all;
test_salm_generation -> randn;
test_salm_generation -> tensor;
test_salm_generation -> GenerationConfig;
language_specific_text_example -> fixture;
supported_languages -> fixture;
supported_languages -> sorted;
supported_languages -> keys;
get_language_id_from_pretrained_model_name -> fixture;
get_language_id_from_pretrained_model_name -> split;
get_language_id_from_pretrained_model_name -> fail;
mel_spec_example -> fixture;
mel_spec_example -> rand;
audio_text_pair_example_english -> fixture;
audio_text_pair_example_english -> join;
audio_text_pair_example_english -> read_manifest;
audio_text_pair_example_english -> read;
audio_text_pair_example_english -> unsqueeze;
audio_text_pair_example_english -> tensor;
audio_text_pair_example_english -> long;
sample_duration_input -> Generator;
sample_duration_input -> manual_seed;
sample_duration_input -> randint;
sample_duration_input -> ones;
test_sort_unsort -> sample_duration_input;
test_sort_unsort -> print;
test_sort_unsort -> sort_tensor;
test_sort_unsort -> unsort_tensor;
test_sort_unsort -> all;
test_regulate_len -> sample_duration_input;
test_regulate_len -> regulate_len;
test_regulate_len -> mul;
test_regulate_len -> sum;
test_regulate_len -> max;
enhancer_config -> DictConfig;
enhancer -> SpectrogramEnhancerModel;
enhancer_with_fastpitch -> SpectrogramEnhancerModel;
sample_input -> Generator;
sample_input -> manual_seed;
sample_input -> randint;
sample_input -> randn;
sample_input -> mask_sequence_tensor;
test_pad_spectrograms -> pad_spectrograms;
test_pad_spectrograms -> size;
test_spectrogram_norm_unnorm -> unnormalize_spectrograms;
test_spectrogram_norm_unnorm -> allclose;
test_spectrogram_norm_unnorm -> normalize_spectrograms;
test_spectrogram_unnorm_norm -> normalize_spectrograms;
test_spectrogram_unnorm_norm -> allclose;
test_spectrogram_unnorm_norm -> unnormalize_spectrograms;
test_spectrogram_norm_unnorm_dont_look_at_padding -> unnormalize_spectrograms;
test_spectrogram_norm_unnorm_dont_look_at_padding -> enumerate;
test_spectrogram_norm_unnorm_dont_look_at_padding -> normalize_spectrograms;
test_spectrogram_norm_unnorm_dont_look_at_padding -> tolist;
test_spectrogram_norm_unnorm_dont_look_at_padding -> allclose;
test_spectrogram_unnorm_norm_dont_look_at_padding -> normalize_spectrograms;
test_spectrogram_unnorm_norm_dont_look_at_padding -> enumerate;
test_spectrogram_unnorm_norm_dont_look_at_padding -> unnormalize_spectrograms;
test_spectrogram_unnorm_norm_dont_look_at_padding -> tolist;
test_spectrogram_unnorm_norm_dont_look_at_padding -> allclose;
test_generator_pass_keeps_size -> forward;
test_discriminator_pass -> rearrange;
test_discriminator_pass -> discriminator;
test_nemo_save_load -> save_to;
test_nemo_save_load -> restore_from;
test_dataset -> run_only_on;
test_dataset -> join;
test_dataset -> TTSDataset;
test_dataset -> DataLoader;
test_dataset -> next;
test_dataset -> iter;
test_dataset -> EnglishPhonemesTokenizer;
test_dataset -> EnglishG2p;
test_raise_exception_on_not_supported_sup_data_types -> run_only_on;
test_raise_exception_on_not_supported_sup_data_types -> join;
test_raise_exception_on_not_supported_sup_data_types -> raises;
test_raise_exception_on_not_supported_sup_data_types -> TTSDataset;
test_raise_exception_on_not_supported_sup_data_types -> EnglishPhonemesTokenizer;
test_raise_exception_on_not_supported_sup_data_types -> EnglishG2p;
test_raise_exception_on_not_supported_window -> run_only_on;
test_raise_exception_on_not_supported_window -> join;
test_raise_exception_on_not_supported_window -> raises;
test_raise_exception_on_not_supported_window -> TTSDataset;
test_raise_exception_on_not_supported_window -> EnglishPhonemesTokenizer;
test_raise_exception_on_not_supported_window -> EnglishG2p;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> run_only_on;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> parametrize;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> join;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> raises;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> TTSDataset;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> EnglishPhonemesTokenizer;
test_raise_exception_on_missing_pitch_sup_data_type_if_use_voiced -> EnglishG2p;
test_save_voiced_items_if_pt_file_not_exist -> run_only_on;
test_save_voiced_items_if_pt_file_not_exist -> parametrize;
test_save_voiced_items_if_pt_file_not_exist -> join;
test_save_voiced_items_if_pt_file_not_exist -> print;
test_save_voiced_items_if_pt_file_not_exist -> TTSDataset;
test_save_voiced_items_if_pt_file_not_exist -> get_base_dir;
test_save_voiced_items_if_pt_file_not_exist -> DataLoader;
test_save_voiced_items_if_pt_file_not_exist -> zip;
test_save_voiced_items_if_pt_file_not_exist -> open;
test_save_voiced_items_if_pt_file_not_exist -> with_suffix;
test_save_voiced_items_if_pt_file_not_exist -> replace;
test_save_voiced_items_if_pt_file_not_exist -> EnglishPhonemesTokenizer;
test_save_voiced_items_if_pt_file_not_exist -> append;
test_save_voiced_items_if_pt_file_not_exist -> squeeze;
test_save_voiced_items_if_pt_file_not_exist -> equal;
test_save_voiced_items_if_pt_file_not_exist -> len;
test_save_voiced_items_if_pt_file_not_exist -> load;
test_save_voiced_items_if_pt_file_not_exist -> relative_to;
test_save_voiced_items_if_pt_file_not_exist -> str;
test_save_voiced_items_if_pt_file_not_exist -> EnglishG2p;
test_save_voiced_items_if_pt_file_not_exist -> loads;
test_save_voiced_items_if_pt_file_not_exist -> Path;
hifigan_model -> fixture;
hifigan_model -> from_pretrained;
radtts_model -> fixture;
radtts_model -> dirname;
radtts_model -> load;
radtts_model -> AppState;
radtts_model -> RadTTSModel;
radtts_model -> eval;
radtts_model -> set_export_config;
radtts_model -> abspath;
radtts_model -> join;
test_FastPitchModel_export_to_onnx -> run_only_on;
test_FastPitchModel_export_to_onnx -> cuda;
test_FastPitchModel_export_to_onnx -> TemporaryDirectory;
test_FastPitchModel_export_to_onnx -> join;
test_FastPitchModel_export_to_onnx -> export;
test_HifiGanModel_export_to_onnx -> with_downloads;
test_HifiGanModel_export_to_onnx -> run_only_on;
test_HifiGanModel_export_to_onnx -> cuda;
test_HifiGanModel_export_to_onnx -> TemporaryDirectory;
test_HifiGanModel_export_to_onnx -> join;
test_HifiGanModel_export_to_onnx -> export;
test_RadTTSModel_export_to_torchscript -> run_only_on;
test_RadTTSModel_export_to_torchscript -> cuda;
test_RadTTSModel_export_to_torchscript -> TemporaryDirectory;
test_RadTTSModel_export_to_torchscript -> join;
test_RadTTSModel_export_to_torchscript -> autocast;
test_RadTTSModel_export_to_torchscript -> input_example;
test_RadTTSModel_export_to_torchscript -> export;
test_RadTTSModel_export_to_onnx -> run_only_on;
test_RadTTSModel_export_to_onnx -> cuda;
test_RadTTSModel_export_to_onnx -> TemporaryDirectory;
test_RadTTSModel_export_to_onnx -> join;
test_RadTTSModel_export_to_onnx -> autocast;
test_RadTTSModel_export_to_onnx -> input_example;
test_RadTTSModel_export_to_onnx -> export;
taco2wg -> contiguous;
taco2wg -> view;
taco2wg -> permute;
taco2wg -> size;
test_export_to_onnx -> run_only_on;
test_export_to_onnx -> WaveGlowModel;
test_export_to_onnx -> half;
test_export_to_onnx -> set_typecheck_enabled;
test_export_to_onnx -> TemporaryDirectory;
test_export_to_onnx -> nemo_infer;
test_export_to_onnx -> join;
test_export_to_onnx -> input_example;
test_export_to_onnx -> taco2wg;
test_export_to_onnx -> waveglow;
test_export_to_onnx -> allclose;
test_export_to_onnx -> export;
test_export_to_onnx -> cuda;
_create_g2p -> IpaG2p;
test_normalize_dict_with_phonemes -> run_only_on;
test_normalize_dict_with_phonemes -> _create_g2p;
test_normalize_dict_with_phonemes -> len;
test_normalize_dict_with_phonemes -> list;
test_normalize_dict_with_graphemes_and_phonemes -> run_only_on;
test_normalize_dict_with_graphemes_and_phonemes -> union;
test_normalize_dict_with_graphemes_and_phonemes -> _create_g2p;
test_normalize_dict_with_graphemes_and_phonemes -> len;
test_normalize_dict_with_graphemes_and_phonemes -> list;
test_replace_symbols -> run_only_on;
test_replace_symbols -> _create_g2p;
test_replace_symbols -> union;
test_replace_symbols -> replace_symbols;
test_replace_symbols -> len;
test_replace_symbols -> list;
test_forward_call -> run_only_on;
test_forward_call -> _create_g2p;
test_forward_call -> g2p;
test_forward_call_with_file_or_object_dict_type -> run_only_on;
test_forward_call_with_file_or_object_dict_type -> _create_g2p;
test_forward_call_with_file_or_object_dict_type -> g2p_file;
test_forward_call_with_file_or_object_dict_type -> g2p_dict;
test_forward_call_with_oov_word -> run_only_on;
test_forward_call_with_oov_word -> _create_g2p;
test_forward_call_with_oov_word -> g2p;
test_forward_call_with_oov_word -> list;
test_forward_call_with_oov_func -> run_only_on;
test_forward_call_with_oov_func -> _create_g2p;
test_forward_call_with_oov_func -> g2p;
test_forward_call_with_oov_func -> list;
test_forward_call_with_uppercase_grapheme_only -> run_only_on;
test_forward_call_with_uppercase_grapheme_only -> _create_g2p;
test_forward_call_with_uppercase_grapheme_only -> g2p;
test_forward_call_with_uppercase_grapheme_only -> upper;
test_forward_call_with_lowercase_grapheme_only -> run_only_on;
test_forward_call_with_lowercase_grapheme_only -> _create_g2p;
test_forward_call_with_lowercase_grapheme_only -> g2p;
test_forward_call_with_lowercase_grapheme_only -> lower;
test_forward_call_with_mixed_case_grapheme_only -> run_only_on;
test_forward_call_with_mixed_case_grapheme_only -> _create_g2p;
test_forward_call_with_mixed_case_grapheme_only -> g2p;
test_forward_call_with_uppercase_grapheme_and_get_phoneme_only -> run_only_on;
test_forward_call_with_uppercase_grapheme_and_get_phoneme_only -> _create_g2p;
test_forward_call_with_uppercase_grapheme_and_get_phoneme_only -> g2p;
test_forward_call_with_lowercase_grapheme_and_get_phoneme_only -> run_only_on;
test_forward_call_with_lowercase_grapheme_and_get_phoneme_only -> _create_g2p;
test_forward_call_with_lowercase_grapheme_and_get_phoneme_only -> g2p;
test_forward_call_with_mixed_case_grapheme_and_get_phoneme_only -> run_only_on;
test_forward_call_with_mixed_case_grapheme_and_get_phoneme_only -> _create_g2p;
test_forward_call_with_mixed_case_grapheme_and_get_phoneme_only -> g2p;
test_forward_call_with_escaped_characters -> run_only_on;
test_forward_call_with_escaped_characters -> _create_g2p;
test_forward_call_with_escaped_characters -> g2p;
test_instantiate_unsupported_locale -> run_only_on;
test_instantiate_unsupported_locale -> raises;
test_instantiate_unsupported_locale -> _create_g2p;
test_forward_call_de_de -> run_only_on;
test_forward_call_de_de -> _create_g2p;
test_forward_call_de_de -> g2p;
test_forward_call_de_de -> normalize;
test_forward_call_de_de -> list;
test_forward_call_en_us -> run_only_on;
test_forward_call_en_us -> _create_g2p;
test_forward_call_en_us -> zip;
test_forward_call_en_us -> g2p;
test_forward_call_es_es -> run_only_on;
test_forward_call_es_es -> _create_g2p;
test_forward_call_es_es -> g2p;
test_get_heteronym_spans -> run_only_on;
test_get_heteronym_spans -> get_heteronym_spans;
test_masked_loss_l1 -> run_only_on;
test_masked_loss_l1 -> MaskedMAELoss;
test_masked_loss_l1 -> transpose;
test_masked_loss_l1 -> tensor;
test_masked_loss_l1 -> loss_fn;
test_masked_loss_l2 -> run_only_on;
test_masked_loss_l2 -> MaskedMSELoss;
test_masked_loss_l2 -> transpose;
test_masked_loss_l2 -> tensor;
test_masked_loss_l2 -> loss_fn;
test_si_sdr_loss -> run_only_on;
test_si_sdr_loss -> SISDRLoss;
test_si_sdr_loss -> ScaleInvariantSignalDistortionRatio;
test_si_sdr_loss -> manual_seed;
test_si_sdr_loss -> rand;
test_si_sdr_loss -> tensor;
test_si_sdr_loss -> sdr_fn;
test_si_sdr_loss -> loss_fn;
test_si_sdr_loss -> assert_close;
test_si_sdr_loss_batch -> run_only_on;
test_si_sdr_loss_batch -> SISDRLoss;
test_si_sdr_loss_batch -> ScaleInvariantSignalDistortionRatio;
test_si_sdr_loss_batch -> manual_seed;
test_si_sdr_loss_batch -> rand;
test_si_sdr_loss_batch -> tensor;
test_si_sdr_loss_batch -> mask_sequence_tensor;
test_si_sdr_loss_batch -> range;
test_si_sdr_loss_batch -> loss_fn;
test_si_sdr_loss_batch -> assert_close;
test_si_sdr_loss_batch -> si_sdr_fn;
pretrained_model -> fixture;
pretrained_model -> run_only_on;
pretrained_model -> get_language_id_from_pretrained_model_name;
pretrained_model -> from_pretrained;
test_inference -> run_only_on;
test_inference -> preprocessor;
test_inference -> normalize;
test_inference -> tokenizer;
test_inference -> long;
test_inference -> model;
test_inference -> unsqueeze;
test_inference -> tensor;
test_inference -> len;
test_inference -> parse;
test_inference -> hasattr;
test_inference -> generate_spectrogram;
test_inference -> rand;
test_inference -> expand;
test_inference -> randint;
test_inference -> convert_spectrogram_to_audio;
test_inference -> convert_text_to_waveform;
test_conv1d -> run_only_on;
test_conv1d -> rand;
test_conv1d -> tensor;
test_conv1d -> Conv1dNorm;
test_conv1d -> conv;
test_conv1d -> all;
test_conv1d_downsample -> run_only_on;
test_conv1d_downsample -> rand;
test_conv1d_downsample -> tensor;
test_conv1d_downsample -> get_down_sample_padding;
test_conv1d_downsample -> Conv1dNorm;
test_conv1d_downsample -> conv;
test_conv1d_downsample -> all;
test_conv1d_transpose_upsample -> run_only_on;
test_conv1d_transpose_upsample -> rand;
test_conv1d_transpose_upsample -> tensor;
test_conv1d_transpose_upsample -> ConvTranspose1dNorm;
test_conv1d_transpose_upsample -> conv;
test_conv1d_transpose_upsample -> all;
test_hifigan_decoder -> run_only_on;
test_hifigan_decoder -> tensor;
test_hifigan_decoder -> rand;
test_hifigan_decoder -> mask_sequence_tensor;
test_hifigan_decoder -> HiFiGANDecoder;
test_hifigan_decoder -> decoder;
test_hifigan_decoder -> all;
test_resnet_encoder -> run_only_on;
test_resnet_encoder -> tensor;
test_resnet_encoder -> rand;
test_resnet_encoder -> mask_sequence_tensor;
test_resnet_encoder -> ResNetEncoder;
test_resnet_encoder -> res_net;
test_resnet_encoder -> all;
test_multiband_mel_encoder -> run_only_on;
test_multiband_mel_encoder -> tensor;
test_multiband_mel_encoder -> rand;
test_multiband_mel_encoder -> mask_sequence_tensor;
test_multiband_mel_encoder -> MelSpectrogramProcessor;
test_multiband_mel_encoder -> MultiBandMelEncoder;
test_multiband_mel_encoder -> encoder;
test_multiband_mel_encoder -> all;
test_multiband_mel_encoder -> len;
test_rvq_eval -> parametrize;
test_rvq_eval -> ResidualVectorQuantizer;
test_rvq_eval -> eval;
test_rvq_eval -> range;
test_rvq_eval -> randn;
test_rvq_eval -> tensor;
test_rvq_eval -> rvq;
test_rvq_eval -> encode;
test_rvq_eval -> decode;
test_rvq_eval -> assert_close;
test_group_rvq_eval -> parametrize;
test_group_rvq_eval -> GroupResidualVectorQuantizer;
test_group_rvq_eval -> eval;
test_group_rvq_eval -> range;
test_group_rvq_eval -> raises;
test_group_rvq_eval -> randn;
test_group_rvq_eval -> tensor;
test_group_rvq_eval -> grvq;
test_group_rvq_eval -> encode;
test_group_rvq_eval -> decode;
test_group_rvq_eval -> assert_close;
test_group_rvq_eval -> chunk;
test_snake -> run_only_on;
test_snake -> rand;
test_snake -> CodecActivation;
test_snake -> snake;
test_fsq_eval -> parametrize;
test_fsq_eval -> FiniteScalarQuantizer;
test_fsq_eval -> range;
test_fsq_eval -> randn;
test_fsq_eval -> tensor;
test_fsq_eval -> fsq;
test_fsq_eval -> encode;
test_fsq_eval -> decode;
test_fsq_eval -> assert_close;
test_fsq_eval -> max;
test_fsq_eval -> min;
test_fsq_output -> FiniteScalarQuantizer;
test_fsq_output -> tensor;
test_fsq_output -> fsq;
test_fsq_output -> assert_close;
test_group_fsq_eval -> parametrize;
test_group_fsq_eval -> GroupFiniteScalarQuantizer;
test_group_fsq_eval -> range;
test_group_fsq_eval -> randn;
test_group_fsq_eval -> tensor;
test_group_fsq_eval -> gfsq;
test_group_fsq_eval -> encode;
test_group_fsq_eval -> decode;
test_group_fsq_eval -> assert_close;
test_group_fsq_eval -> chunk;
test_conditional_layer_norm -> randn;
test_conditional_layer_norm -> LayerNorm;
test_conditional_layer_norm -> ConditionalLayerNorm;
test_conditional_layer_norm -> all;
test_conditional_layer_norm -> Parameter;
test_conditional_layer_norm -> ln;
test_conditional_layer_norm -> cln;
set_seed -> manual_seed;
set_seed -> manual_seed_all;
set_seed -> seed;
test_non_causal_forward -> set_seed;
test_non_causal_forward -> ConvolutionLayer;
test_non_causal_forward -> Tensor;
test_non_causal_forward -> allclose;
test_non_causal_forward -> no_grad;
test_non_causal_forward -> layer;
test_non_causal_forward -> PositionwiseConvFF;
test_non_causal_forward -> SelfAttention;
test_non_causal_forward -> bool;
test_non_causal_forward -> ones;
test_causal_forward -> set_seed;
test_causal_forward -> ConvolutionLayer;
test_causal_forward -> Tensor;
test_causal_forward -> allclose;
test_causal_forward -> no_grad;
test_causal_forward -> layer;
test_causal_forward -> PositionwiseConvFF;
test_causal_forward -> SelfAttention;
test_causal_forward -> bool;
test_causal_forward -> ones;
test_causal_forward -> float;
test_forward_causal_self_attn_and_has_xattn -> set_seed;
test_forward_causal_self_attn_and_has_xattn -> TransformerLayer;
test_forward_causal_self_attn_and_has_xattn -> allclose;
test_forward_causal_self_attn_and_has_xattn -> range;
test_forward_causal_self_attn_and_has_xattn -> no_grad;
test_forward_causal_self_attn_and_has_xattn -> layer;
test_forward_causal_self_attn_and_has_xattn -> Tensor;
test_forward_causal_self_attn_and_has_xattn -> float;
test_forward_causal_self_attn_and_has_xattn -> Transformer;
test_forward_causal_self_attn_and_has_xattn -> bool;
test_forward_causal_self_attn_and_has_xattn -> model;
test_forward_causal_self_attn_and_has_xattn -> ones;
test_forward_causal_self_attn_and_no_xattn -> set_seed;
test_forward_causal_self_attn_and_no_xattn -> Transformer;
test_forward_causal_self_attn_and_no_xattn -> isclose;
test_forward_causal_self_attn_and_no_xattn -> bool;
test_forward_causal_self_attn_and_no_xattn -> allclose;
test_forward_causal_self_attn_and_no_xattn -> range;
test_forward_causal_self_attn_and_no_xattn -> mean;
test_forward_causal_self_attn_and_no_xattn -> tensor;
test_forward_causal_self_attn_and_no_xattn -> std;
test_forward_causal_self_attn_and_no_xattn -> no_grad;
test_forward_causal_self_attn_and_no_xattn -> model;
test_forward_causal_self_attn_and_no_xattn -> Tensor;
test_forward_causal_self_attn_and_no_xattn -> ones;
test_forward_causal_self_attn_and_no_xattn -> sqrt;
test_forward_causal_self_attn_and_no_xattn -> float;
test_get_start_and_end_of_speech_frames_frames -> run_only_on;
test_get_start_and_end_of_speech_frames_frames -> array;
test_get_start_and_end_of_speech_frames_frames -> get_start_and_end_of_speech_frames;
test_get_start_and_end_of_speech_frames_not_frames_found -> run_only_on;
test_get_start_and_end_of_speech_frames_not_frames_found -> array;
test_get_start_and_end_of_speech_frames_not_frames_found -> get_start_and_end_of_speech_frames;
test_pad_sample_indices -> run_only_on;
test_pad_sample_indices -> pad_sample_indices;
test_pad_sample_indices_boundaries -> run_only_on;
test_pad_sample_indices_boundaries -> pad_sample_indices;
_compute_start_end_frames -> int;
_create_test_dir -> uniform;
_create_test_dir -> TemporaryDirectory;
_create_test_dir -> Path;
_create_test_dir -> write;
_create_test_dir -> cleanup;
test_compute_mel_spectrogram -> run_only_on;
test_compute_mel_spectrogram -> MelSpectrogramFeaturizer;
test_compute_mel_spectrogram -> _create_test_dir;
test_compute_mel_spectrogram -> compute_mel_spec;
test_compute_mel_spectrogram -> len;
test_save_and_load_mel_spectrogram -> run_only_on;
test_save_and_load_mel_spectrogram -> MelSpectrogramFeaturizer;
test_save_and_load_mel_spectrogram -> _create_test_dir;
test_save_and_load_mel_spectrogram -> save;
test_save_and_load_mel_spectrogram -> load;
test_save_and_load_mel_spectrogram -> len;
test_compute_pitch -> run_only_on;
test_compute_pitch -> PitchFeaturizer;
test_compute_pitch -> _create_test_dir;
test_compute_pitch -> compute_pitch;
test_compute_pitch -> len;
test_compute_pitch_batched -> run_only_on;
test_compute_pitch_batched -> PitchFeaturizer;
test_compute_pitch_batched -> compute_pitch;
test_compute_pitch_batched -> assert_close;
test_compute_pitch_batched -> Path;
test_save_and_load_pitch -> run_only_on;
test_save_and_load_pitch -> PitchFeaturizer;
test_save_and_load_pitch -> _create_test_dir;
test_save_and_load_pitch -> save;
test_save_and_load_pitch -> load;
test_save_and_load_pitch -> len;
test_save_and_load_pitch_segments -> run_only_on;
test_save_and_load_pitch_segments -> _compute_start_end_frames;
test_save_and_load_pitch_segments -> PitchFeaturizer;
test_save_and_load_pitch_segments -> assert_close;
test_save_and_load_pitch_segments -> _create_test_dir;
test_save_and_load_pitch_segments -> save;
test_save_and_load_pitch_segments -> load;
test_save_and_load_pitch_segments -> Path;
test_compute_energy -> run_only_on;
test_compute_energy -> MelSpectrogramFeaturizer;
test_compute_energy -> EnergyFeaturizer;
test_compute_energy -> _create_test_dir;
test_compute_energy -> compute_energy;
test_compute_energy -> len;
test_save_and_load_energy -> run_only_on;
test_save_and_load_energy -> MelSpectrogramFeaturizer;
test_save_and_load_energy -> EnergyFeaturizer;
test_save_and_load_energy -> _create_test_dir;
test_save_and_load_energy -> save;
test_save_and_load_energy -> load;
test_save_and_load_energy -> len;
test_save_and_load_energy_segments -> run_only_on;
test_save_and_load_energy_segments -> _compute_start_end_frames;
test_save_and_load_energy_segments -> MelSpectrogramFeaturizer;
test_save_and_load_energy_segments -> EnergyFeaturizer;
test_save_and_load_energy_segments -> assert_close;
test_save_and_load_energy_segments -> _create_test_dir;
test_save_and_load_energy_segments -> save;
test_save_and_load_energy_segments -> load;
_write_test_dict -> TemporaryDirectory;
_write_test_dict -> Path;
_write_test_dict -> cleanup;
_write_test_dict -> open;
_write_test_dict -> dump;
test_feature_scalar -> run_only_on;
test_feature_scalar -> tensor;
test_feature_scalar -> FeatureScaler;
test_feature_scalar -> process;
test_feature_scalar -> assert_close;
test_log_compression -> run_only_on;
test_log_compression -> tensor;
test_log_compression -> LogCompression;
test_log_compression -> process;
test_log_compression -> assert_close;
test_log_compression -> log;
test_log_compression_clamp -> run_only_on;
test_log_compression_clamp -> tensor;
test_log_compression_clamp -> LogCompression;
test_log_compression_clamp -> process;
test_log_compression_clamp -> assert_close;
test_log_compression_clamp -> log;
test_mean_variance_normalization -> run_only_on;
test_mean_variance_normalization -> tensor;
test_mean_variance_normalization -> assert_close;
test_mean_variance_normalization -> _write_test_dict;
test_mean_variance_normalization -> MeanVarianceNormalization;
test_mean_variance_normalization -> process;
test_mean_variance_normalization_masked -> run_only_on;
test_mean_variance_normalization_masked -> tensor;
test_mean_variance_normalization_masked -> assert_close;
test_mean_variance_normalization_masked -> _write_test_dict;
test_mean_variance_normalization_masked -> MeanVarianceNormalization;
test_mean_variance_normalization_masked -> process;
test_mean_variance_speaker_normalization -> run_only_on;
test_mean_variance_speaker_normalization -> tensor;
test_mean_variance_speaker_normalization -> assert_close;
test_mean_variance_speaker_normalization -> _write_test_dict;
test_mean_variance_speaker_normalization -> MeanVarianceSpeakerNormalization;
test_mean_variance_speaker_normalization -> process;
test_mean_variance_speaker_normalization_masked -> run_only_on;
test_mean_variance_speaker_normalization_masked -> tensor;
test_mean_variance_speaker_normalization_masked -> assert_close;
test_mean_variance_speaker_normalization_masked -> _write_test_dict;
test_mean_variance_speaker_normalization_masked -> MeanVarianceSpeakerNormalization;
test_mean_variance_speaker_normalization_masked -> process;
test_get_abs_rel_paths_input_abs -> run_only_on;
test_get_abs_rel_paths_input_abs -> Path;
test_get_abs_rel_paths_input_abs -> get_abs_rel_paths;
test_get_abs_rel_paths_input_rel -> run_only_on;
test_get_abs_rel_paths_input_rel -> Path;
test_get_abs_rel_paths_input_rel -> get_abs_rel_paths;
test_get_audio_paths -> run_only_on;
test_get_audio_paths -> Path;
test_get_audio_paths -> get_audio_filepaths;
test_get_audio_paths -> str;
test_load_audio -> run_only_on;
test_load_audio -> Path;
test_load_audio -> load;
test_load_audio -> load_audio;
test_load_audio -> assert_array_almost_equal;
test_load_audio -> str;
test_load_audio_with_offset -> run_only_on;
test_load_audio_with_offset -> Path;
test_load_audio_with_offset -> load;
test_load_audio_with_offset -> load_audio;
test_load_audio_with_offset -> assert_array_almost_equal;
test_load_audio_with_offset -> str;
test_normalize_volume -> run_only_on;
test_normalize_volume -> array;
test_normalize_volume -> normalize_volume;
test_normalize_volume -> assert_array_almost_equal;
test_normalize_volume_negative_peak -> run_only_on;
test_normalize_volume_negative_peak -> array;
test_normalize_volume_negative_peak -> normalize_volume;
test_normalize_volume_negative_peak -> assert_array_almost_equal;
test_normalize_volume_zero -> run_only_on;
test_normalize_volume_zero -> array;
test_normalize_volume_zero -> normalize_volume;
test_normalize_volume_zero -> assert_array_almost_equal;
test_normalize_volume_max -> run_only_on;
test_normalize_volume_max -> array;
test_normalize_volume_max -> normalize_volume;
test_normalize_volume_max -> assert_array_almost_equal;
test_normalize_volume_zeros -> run_only_on;
test_normalize_volume_zeros -> array;
test_normalize_volume_zeros -> normalize_volume;
test_normalize_volume_zeros -> assert_array_almost_equal;
test_normalize_volume_empty -> run_only_on;
test_normalize_volume_empty -> array;
test_normalize_volume_empty -> normalize_volume;
test_normalize_volume_empty -> assert_array_almost_equal;
test_normalize_volume_out_of_range -> run_only_on;
test_normalize_volume_out_of_range -> array;
test_normalize_volume_out_of_range -> raises;
test_normalize_volume_out_of_range -> normalize_volume;
test_stack_tensors -> run_only_on;
test_stack_tensors -> tensor;
test_stack_tensors -> stack_tensors;
test_stack_tensors -> assert_close;
test_stack_tensors -> ones;
test_stack_tensors_3d -> run_only_on;
test_stack_tensors_3d -> tensor;
test_stack_tensors_3d -> stack_tensors;
test_stack_tensors_3d -> assert_close;
test_stack_tensors_3d -> ones;
test_filter_dataset_by_duration -> run_only_on;
test_filter_dataset_by_duration -> filter_dataset_by_duration;
test_filter_dataset_by_duration -> len;
mock_image_processor -> MagicMock;
test_mock_clip_dataset_length -> _MockClipDataset;
test_mock_clip_dataset_length -> len;
test_mock_clip_dataset_item_shapes -> _MockClipDataset;
test_mock_clip_dataset_item_shapes -> len;
test_data_module_state_dict -> state_dict;
test_data_module_state_dict -> isinstance;
test_data_module_state_dict -> len;
test_data_module_with_task_encoder -> MagicMock;
test_data_module_with_task_encoder -> MockDataModule;
test_data_module_with_task_encoder -> setup;
test_data_module_with_task_encoder -> assert_called_once;
test_data_module_with_task_encoder -> isinstance;
test_data_module_with_task_encoder -> ones;
test_data_module_without_processors -> MockDataModule;
test_data_module_without_processors -> setup;
test_mock_clip_dataset_seed_consistency -> _MockClipDataset;
test_mock_clip_dataset_seed_consistency -> equal;
test_data_module_batch_collation -> train_dataloader;
test_data_module_batch_collation -> next;
test_data_module_batch_collation -> iter;
mock_hf_calls -> patch;
mock_hf_calls -> MagicMock;
test_configure_model -> configure_model;
test_forward_pass -> configure_model;
test_forward_pass -> MagicMock;
test_forward_pass -> forward;
test_forward_pass -> hasattr;
test_forward_pass -> randint;
test_forward_pass -> randn;
test_loading_flags -> parametrize;
test_loading_flags -> configure_model;
test_loading_flags -> fail;
test_save_pretrained -> configure_model;
test_save_pretrained -> MagicMock;
test_save_pretrained -> save_pretrained;
test_save_pretrained -> assert_called_once;
simple_dataset -> from_dict;
simple_dataset_dict -> DatasetDict;
test_clean_split_no_brackets -> clean_split;
test_clean_split_with_brackets -> clean_split;
test_clean_split_with_plus_sign -> clean_split;
test_make_dataset_splits_single_dataset_alias -> make_dataset_splits;
test_make_dataset_splits_single_dataset_plus_sign -> raises;
test_make_dataset_splits_single_dataset_plus_sign -> make_dataset_splits;
test_make_dataset_splits_list_of_splits -> make_dataset_splits;
test_hfdatamodule_init_from_dataset -> HFDatasetDataModule;
test_hfdatamodule_init_from_dataset -> train_dataloader;
test_hfdatamodule_init_from_datasetdict -> HFDatasetDataModule;
test_hfdatamodule_init_from_datasetdict -> train_dataloader;
test_hfdatamodule_collate_fn -> HFDatasetDataModule;
test_hfdatamodule_collate_fn -> collate_fn;
test_hfdatamodule_map -> HFDatasetDataModule;
test_hfdatamodule_map -> map;
test_hfdatamodule_map -> print;
add_one -> print;
compare_parameters -> print;
compare_parameters -> union;
compare_parameters -> sorted;
compare_parameters -> set;
compare_parameters -> len;
compare_parameters -> named_parameters;
compare_parameters -> keys;
compare_parameters -> allclose;
compare_model_outputs -> print;
compare_model_outputs -> rand;
compare_model_outputs -> tokenizer;
compare_model_outputs -> allclose;
compare_model_outputs -> no_grad;
compare_model_outputs -> original_model;
compare_model_outputs -> exported_model;
compare_model_outputs -> abs;
compare_model_outputs -> unsqueeze;
compare_model_outputs -> item;
compare_model_outputs -> max;
compare_model_outputs -> mean;
run_conversion_pipeline -> print;
run_conversion_pipeline -> import_ckpt;
run_conversion_pipeline -> export_ckpt;
run_conversion_pipeline -> from_pretrained;
run_conversion_pipeline -> compare_parameters;
run_conversion_pipeline -> makedirs;
run_conversion_pipeline -> join;
run_conversion_pipeline -> mkdtemp;
run_conversion_pipeline -> getattr;
run_conversion_pipeline -> compare_model_outputs;
run_conversion_pipeline -> Path;
run_conversion_pipeline -> rmtree;
test_encode_image_following_text -> SimilarityInterleavedSample;
test_encode_image_following_text -> LlavaNextTextSample;
test_encode_image_following_text -> encode;
test_encode_image_following_text -> assertEqual;
test_encode_image_following_text -> assertIsNotNone;
test_encode_image_following_text -> assertGreater;
test_encode_image_following_text -> rand;
test_encode_image_following_text -> len;
test_encode_image_before_text -> LlavaNextSimilarityInterleavedSampleEncoder;
test_encode_image_before_text -> SimilarityInterleavedSample;
test_encode_image_before_text -> LlavaNextTextSample;
test_encode_image_before_text -> encode;
test_encode_image_before_text -> assertEqual;
test_encode_image_before_text -> assertIsNotNone;
test_encode_image_before_text -> rand;
test_select_samples_to_pack -> patch;
test_select_samples_to_pack -> LlavaNextTaskEncoder;
test_select_samples_to_pack -> select_samples_to_pack;
test_select_samples_to_pack -> assert_called_once;
test_select_samples_to_pack -> assertEqual;
test_select_samples_to_pack -> LlavaNextTextSample;
test_select_samples_to_pack -> len;
test_select_samples_to_pack -> tensor;
test_select_samples_to_pack -> rand;
test_pack_selected_samples -> patch;
test_pack_selected_samples -> LlavaNextTaskEncoder;
test_pack_selected_samples -> pack_selected_samples;
test_pack_selected_samples -> assertIsInstance;
test_pack_selected_samples -> assertEqual;
test_pack_selected_samples -> assertIsNotNone;
test_pack_selected_samples -> LlavaNextTextSample;
test_pack_selected_samples -> tensor;
test_pack_selected_samples -> Size;
test_pack_selected_samples -> len;
test_pack_selected_samples -> item;
test_pack_selected_samples -> rand;
basic_conversation -> Conversation;
test_conversation_initialization -> Conversation;
test_get_prompt_single_style -> append_message;
test_get_prompt_single_style -> get_prompt;
test_get_prompt_two_style -> Conversation;
test_get_prompt_two_style -> append_message;
test_get_prompt_two_style -> get_prompt;
test_get_prompt_mistral_vila -> copy;
test_get_prompt_mistral_vila -> append_message;
test_get_prompt_mistral_vila -> get_prompt;
test_get_prompt_nvgpt -> copy;
test_get_prompt_nvgpt -> append_message;
test_get_prompt_nvgpt -> get_prompt;
test_get_prompt_plain -> copy;
test_get_prompt_plain -> append_message;
test_get_prompt_plain -> get_prompt;
test_get_prompt_v0 -> copy;
test_get_prompt_v0 -> append_message;
test_get_prompt_v0 -> get_prompt;
test_get_prompt_v1 -> copy;
test_get_prompt_v1 -> append_message;
test_get_prompt_v1 -> get_prompt;
test_get_prompt_mistral_orca -> copy;
test_get_prompt_mistral_orca -> append_message;
test_get_prompt_mistral_orca -> get_prompt;
test_get_prompt_mistral_zephyr -> copy;
test_get_prompt_mistral_zephyr -> append_message;
test_get_prompt_mistral_zephyr -> get_prompt;
test_get_prompt_mistral_direct -> copy;
test_get_prompt_mistral_direct -> append_message;
test_get_prompt_mistral_direct -> get_prompt;
test_get_prompt_chatml_direct -> copy;
test_get_prompt_chatml_direct -> append_message;
test_get_prompt_chatml_direct -> get_prompt;
test_get_prompt_mpt -> copy;
test_get_prompt_mpt -> append_message;
test_get_prompt_mpt -> get_prompt;
test_get_prompt_qwen -> copy;
test_get_prompt_qwen -> append_message;
test_get_prompt_qwen -> get_prompt;
test_get_prompt_gemma -> copy;
test_get_prompt_gemma -> append_message;
test_get_prompt_gemma -> get_prompt;
test_get_prompt_nv_dpo -> copy;
test_get_prompt_nv_dpo -> append_message;
test_get_prompt_nv_dpo -> get_prompt;
test_process_image_pad -> Conversation;
test_process_image_pad -> process_image;
test_process_image_pad -> isinstance;
test_process_image_resize -> Conversation;
test_process_image_resize -> process_image;
test_process_image_resize -> isinstance;
test_process_image_default -> Conversation;
test_process_image_default -> process_image;
test_process_image_default -> isinstance;
test_process_image_base64 -> Conversation;
test_process_image_base64 -> process_image;
test_process_image_base64 -> isinstance;
test_process_image_base64 -> b64decode;
test_process_image_base64 -> fail;
test_get_images -> append_message;
test_get_images -> get_images;
test_get_images -> isinstance;
test_get_images -> len;
test_get_images_return_path -> append_message;
test_get_images_return_path -> get_images;
test_get_images_return_path -> isinstance;
test_get_images_return_path -> len;
test_to_gradio_chatbot -> append_message;
test_to_gradio_chatbot -> to_gradio_chatbot;
test_to_gradio_chatbot -> isinstance;
test_to_gradio_chatbot -> len;
test_copy -> Conversation;
test_copy -> copy;
test_dict -> Conversation;
test_dict -> dict;
test_dict_with_images -> append_message;
test_dict_with_images -> dict;
test_process_chat_template -> Conversation;
test_process_chat_template -> patch;
test_process_chat_template -> process_chat_template;
test_process_chat_template -> assert_called_once_with;
test_invalid_sep_style -> Conversation;
test_invalid_sep_style -> raises;
test_invalid_sep_style -> get_prompt;
test_invalid_image_process_mode -> Conversation;
test_invalid_image_process_mode -> raises;
test_invalid_image_process_mode -> process_image;
test_pretrain_recipe_different_configurations -> parametrize;
test_pretrain_recipe_different_configurations -> pretrain_recipe;
test_finetune_recipe_default -> finetune_recipe;
test_finetune_recipe_default -> isinstance;
test_finetune_recipe_default -> hasattr;
test_finetune_recipe_peft_lora -> finetune_recipe;
test_finetune_recipe_peft_lora -> hasattr;
test_finetune_recipe_peft_lora -> isinstance;
test_finetune_recipe_different_configurations -> parametrize;
test_finetune_recipe_different_configurations -> finetune_recipe;
test_pretrain_recipe_performance_mode -> pretrain_recipe;
test_pretrain_recipe_performance_mode -> any;
test_pretrain_recipe_performance_mode -> isinstance;
test_finetune_recipe_peft_none -> finetune_recipe;
test_finetune_recipe_peft_none -> hasattr;
test_finetune_recipe_configurations -> parametrize;
test_finetune_recipe_configurations -> finetune_recipe;
test_parameterized_configurations -> parametrize;
test_parameterized_configurations -> finetune_recipe;
test_recipe_different_configurations -> parametrize;
test_recipe_different_configurations -> finetune_recipe;
test_recipe_different_configurations -> pretrain_recipe;
test_recipe_different_configurations -> trainer;
test_trainer_config -> trainer;
test_trainer_config -> isinstance;
test_finetune_recipe_performance_mode -> finetune_recipe;
test_finetune_recipe_performance_mode -> any;
test_finetune_recipe_performance_mode -> isinstance;
test_siglip_config_error -> CLIPViTConfig;
test_all_args_exist -> assert_dataclass_signature_match;
test_all_args_dont_exist -> assert_dataclass_signature_match;
test_all_args_dont_exist -> len;
test_extra_args_exist -> assert_dataclass_signature_match;
test_extra_args_exist -> len;
test_extra_args_exist_but_is_ignored -> assert_dataclass_signature_match;
test_args_exist_but_is_remapped -> assert_dataclass_signature_match;
test_ptl_config -> assert_dataclass_signature_match;
test_early_stopping_config -> assert_dataclass_signature_match;
_get_last_checkpoint_dir -> get_world_size;
_get_last_checkpoint_dir -> len;
_get_last_checkpoint_dir -> train_dataloader;
_get_nlp_strategy_without_optimizer_state -> NLPDDPStrategy;
_get_nlp_strategy_without_optimizer_state -> MethodType;
test_dist_ckpt_io_called_for_mcore_models -> run_only_on;
test_dist_ckpt_io_called_for_mcore_models -> _get_nlp_strategy_without_optimizer_state;
test_dist_ckpt_io_called_for_mcore_models -> MockDistributedCheckpointIO;
test_dist_ckpt_io_called_for_mcore_models -> Trainer;
test_dist_ckpt_io_called_for_mcore_models -> ExampleMCoreModel;
test_dist_ckpt_io_called_for_mcore_models -> fit;
test_dist_ckpt_io_called_for_mcore_models -> isinstance;
test_dist_ckpt_io_called_for_mcore_models -> _get_last_checkpoint_dir;
test_dist_ckpt_io_called_for_mcore_models -> set_env;
test_dist_ckpt_io_called_for_mcore_models -> get_model_and_data;
test_dist_ckpt_io_called_for_mcore_models -> listdir;
test_dist_ckpt_io_called_for_mcore_models -> _teardown;
test_dist_ckpt_io_called_for_mcore_models -> reconfigure_num_microbatches_calculator_manager;
test_dist_ckpt_io_called_for_mcore_models -> _get_strategy;
test_dist_ckpt_io_called_for_mcore_models -> Path;
test_dist_ckpt_io_called_for_mcore_models -> len;
test_dist_ckpt_io_called_for_mcore_models -> str;
test_dist_ckpt_path_not_executed_for_non_core_models -> run_only_on;
test_dist_ckpt_path_not_executed_for_non_core_models -> NLPDDPStrategy;
test_dist_ckpt_path_not_executed_for_non_core_models -> MockTorchCheckpointIO;
test_dist_ckpt_path_not_executed_for_non_core_models -> Trainer;
test_dist_ckpt_path_not_executed_for_non_core_models -> ExampleModel;
test_dist_ckpt_path_not_executed_for_non_core_models -> fit;
test_dist_ckpt_path_not_executed_for_non_core_models -> isinstance;
test_dist_ckpt_path_not_executed_for_non_core_models -> basename;
test_dist_ckpt_path_not_executed_for_non_core_models -> _get_last_checkpoint_dir;
test_async_save_produces_same_checkpoints_as_sync -> run_only_on;
test_async_save_produces_same_checkpoints_as_sync -> _get_nlp_strategy_without_optimizer_state;
test_async_save_produces_same_checkpoints_as_sync -> DistributedCheckpointIO;
test_async_save_produces_same_checkpoints_as_sync -> AsyncFinalizableCheckpointIO;
test_async_save_produces_same_checkpoints_as_sync -> ExampleMCoreModel;
test_async_save_produces_same_checkpoints_as_sync -> Trainer;
test_async_save_produces_same_checkpoints_as_sync -> fit;
test_async_save_produces_same_checkpoints_as_sync -> broadcast;
test_async_save_produces_same_checkpoints_as_sync -> load_checkpoint;
test_async_save_produces_same_checkpoints_as_sync -> all;
test_async_save_produces_same_checkpoints_as_sync -> sharded_state_dict;
test_async_save_produces_same_checkpoints_as_sync -> _get_last_checkpoint_dir;
test_async_save_produces_same_checkpoints_as_sync -> AsyncFinalizerCallback;
test_async_save_produces_same_checkpoints_as_sync -> set_env;
test_async_save_produces_same_checkpoints_as_sync -> get_model_and_data;
test_async_save_produces_same_checkpoints_as_sync -> keys;
test_async_save_produces_same_checkpoints_as_sync -> _teardown;
test_async_save_produces_same_checkpoints_as_sync -> reconfigure_num_microbatches_calculator_manager;
test_async_save_produces_same_checkpoints_as_sync -> MegatronCheckpointIO;
test_async_save_produces_same_checkpoints_as_sync -> _get_strategy;
test_async_save_produces_same_checkpoints_as_sync -> Path;
test_async_save_produces_same_checkpoints_as_sync -> isinstance;
test_async_save_produces_same_checkpoints_as_sync -> str;
test_omegaconf -> raises;
test_omegaconf -> exp_manager;
test_omegaconf -> Trainer;
test_trainer_loggers -> Trainer;
test_trainer_loggers -> exp_manager;
test_trainer_loggers -> exists;
test_trainer_loggers -> isinstance;
test_trainer_loggers -> raises;
test_trainer_loggers -> resolve;
test_trainer_loggers -> Path;
test_trainer_loggers -> str;
test_trainer_neptune_logger -> importorskip;
test_trainer_neptune_logger -> Trainer;
test_trainer_neptune_logger -> exp_manager;
test_trainer_neptune_logger -> isinstance;
test_trainer_neptune_logger -> raises;
test_trainer_neptune_logger -> str;
test_checkpoint_configurations -> Trainer;
test_checkpoint_configurations -> exp_manager;
test_checkpoint_configurations -> raises;
test_default_log_dir -> Trainer;
test_default_log_dir -> exp_manager;
test_default_log_dir -> exists;
test_default_log_dir -> match;
test_default_log_dir -> resolve;
test_default_log_dir -> len;
test_default_log_dir -> Path;
test_default_log_dir -> iterdir;
test_default_log_dir -> is_dir;
test_default_log_dir -> NeMoLogger;
test_default_log_dir -> setup;
test_default_log_dir -> get;
test_default_log_dir -> cwd;
test_log_dir_overrides -> Trainer;
test_log_dir_overrides -> exp_manager;
test_log_dir_overrides -> exists;
test_log_dir_overrides -> delenv;
test_log_dir_overrides -> resolve;
test_log_dir_overrides -> str;
test_log_dir_overrides -> Path;
test_resume -> Trainer;
test_resume -> exp_manager;
test_resume -> mkdir;
test_resume -> touch;
test_resume -> unlink;
test_resume -> Path;
test_resume -> exists;
test_resume -> raises;
test_resume -> resolve;
test_resume -> str;
test_resume -> setup;
test_resume -> rmdir;
test_resume -> sleep;
test_resume -> NeMoLogger;
test_resume -> rmtree;
test_resume -> get;
test_resume -> AutoResume;
test_nemo_checkpoint_save_best_model_1 -> Trainer;
test_nemo_checkpoint_save_best_model_1 -> exp_manager;
test_nemo_checkpoint_save_best_model_1 -> ExampleModel;
test_nemo_checkpoint_save_best_model_1 -> fit;
test_nemo_checkpoint_save_best_model_1 -> exists;
test_nemo_checkpoint_save_best_model_1 -> restore_from;
test_nemo_checkpoint_save_best_model_1 -> str;
test_nemo_checkpoint_save_best_model_1 -> float;
test_nemo_checkpoint_save_best_model_1 -> Path;
test_nemo_checkpoint_save_best_model_1 -> model;
test_nemo_checkpoint_save_best_model_1 -> tensor;
test_nemo_checkpoint_save_best_model_2 -> Trainer;
test_nemo_checkpoint_save_best_model_2 -> exp_manager;
test_nemo_checkpoint_save_best_model_2 -> ExampleModel;
test_nemo_checkpoint_save_best_model_2 -> fit;
test_nemo_checkpoint_save_best_model_2 -> exists;
test_nemo_checkpoint_save_best_model_2 -> restore_from;
test_nemo_checkpoint_save_best_model_2 -> str;
test_nemo_checkpoint_save_best_model_2 -> fabs;
test_nemo_checkpoint_save_best_model_2 -> Path;
test_nemo_checkpoint_save_best_model_2 -> float;
test_nemo_checkpoint_save_best_model_2 -> model;
test_nemo_checkpoint_save_best_model_2 -> tensor;
test_nemo_checkpoint_always_save_nemo -> Trainer;
test_nemo_checkpoint_always_save_nemo -> exp_manager;
test_nemo_checkpoint_always_save_nemo -> ExampleModel;
test_nemo_checkpoint_always_save_nemo -> fit;
test_nemo_checkpoint_always_save_nemo -> exists;
test_nemo_checkpoint_always_save_nemo -> restore_from;
test_nemo_checkpoint_always_save_nemo -> str;
test_nemo_checkpoint_always_save_nemo -> float;
test_nemo_checkpoint_always_save_nemo -> Path;
test_nemo_checkpoint_always_save_nemo -> model;
test_nemo_checkpoint_always_save_nemo -> tensor;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> Trainer;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> exp_manager;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> ExampleModel;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> fit;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> exists;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> restore_from;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> len;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> str;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> float;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> Path;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> list;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> model;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> glob;
test_nemo_checkpoint_doesnt_produce_too_many_nemo_ckpts -> tensor;
test_nemo_checkpoint_make_checkpoint_dir -> Trainer;
test_nemo_checkpoint_make_checkpoint_dir -> exp_manager;
test_nemo_checkpoint_make_checkpoint_dir -> ExampleModel;
test_nemo_checkpoint_make_checkpoint_dir -> fit;
test_nemo_checkpoint_make_checkpoint_dir -> exists;
test_nemo_checkpoint_make_checkpoint_dir -> str;
test_nemo_checkpoint_make_checkpoint_dir -> Path;
test_nemo_checkpoint_restore_model -> Trainer;
test_nemo_checkpoint_restore_model -> exp_manager;
test_nemo_checkpoint_restore_model -> ExampleModel;
test_nemo_checkpoint_restore_model -> fit;
test_nemo_checkpoint_restore_model -> list;
test_nemo_checkpoint_restore_model -> DoNothingModel;
test_nemo_checkpoint_restore_model -> Parameter;
test_nemo_checkpoint_restore_model -> glob;
test_nemo_checkpoint_restore_model -> len;
test_nemo_checkpoint_restore_model -> fabs;
test_nemo_checkpoint_restore_model -> unsqueeze;
test_nemo_checkpoint_restore_model -> tensor;
test_nemo_checkpoint_restore_model -> str;
test_nemo_checkpoint_restore_model -> Path;
test_nemo_checkpoint_restore_model -> float;
test_nemo_checkpoint_restore_model -> model;
test_base_checkpoints_are_not_overwritten -> run_only_on;
test_base_checkpoints_are_not_overwritten -> parametrize;
test_base_checkpoints_are_not_overwritten -> Trainer;
test_base_checkpoints_are_not_overwritten -> exp_manager;
test_base_checkpoints_are_not_overwritten -> Path;
test_base_checkpoints_are_not_overwritten -> mkdir;
test_base_checkpoints_are_not_overwritten -> touch;
test_base_checkpoints_are_not_overwritten -> fit;
test_base_checkpoints_are_not_overwritten -> exists;
test_base_checkpoints_are_not_overwritten -> NLPDDPStrategy;
test_base_checkpoints_are_not_overwritten -> ExampleMCoreModel;
test_base_checkpoints_are_not_overwritten -> ExampleModel;
test_base_checkpoints_are_not_overwritten -> with_stem;
test_base_checkpoints_are_not_overwritten -> str;
test_base_checkpoints_are_not_overwritten -> open;
test_base_checkpoints_are_not_overwritten -> dump;
test_base_checkpoints_are_not_overwritten -> glob;
test_base_checkpoints_are_not_overwritten -> with_name;
test_base_checkpoints_are_not_overwritten -> _get_versioned_name;
_get_versioned_name -> with_stem;
_get_versioned_name -> with_name;
test_last_checkpoint_saved -> Trainer;
test_last_checkpoint_saved -> exp_manager;
test_last_checkpoint_saved -> TestModel;
test_last_checkpoint_saved -> fit;
test_last_checkpoint_saved -> Path;
test_last_checkpoint_saved -> load;
test_last_checkpoint_saved -> str;
test_last_checkpoint_saved -> OnesDataset;
test_last_checkpoint_saved -> DataLoader;
test_last_checkpoint_saved -> AssertCallback;
test_resume_checkpoint_skip_validation -> run_training;
test_resume_checkpoint_skip_validation -> TestModel;
test_resume_checkpoint_skip_validation -> Trainer;
test_resume_checkpoint_skip_validation -> exp_manager;
test_resume_checkpoint_skip_validation -> fit;
test_resume_checkpoint_skip_validation -> OnesDataset;
test_resume_checkpoint_skip_validation -> DataLoader;
test_resume_checkpoint_skip_validation -> str;
test_resume_checkpoint_skip_validation -> AssertCallback;
test_resume_checkpoint_skip_validation -> len;
test_resume_checkpoint_skip_validation -> train_dataloader;
test_warning_validation_skipping_when_custom_epoch_loop -> Trainer;
test_warning_validation_skipping_when_custom_epoch_loop -> CustomLoop;
test_warning_validation_skipping_when_custom_epoch_loop -> warns;
test_warning_validation_skipping_when_custom_epoch_loop -> exp_manager;
test_warning_validation_skipping_when_custom_epoch_loop -> str;
_write_fake_checkpoint -> Path;
_write_fake_checkpoint -> mkdir;
_write_fake_checkpoint -> touch;
_write_fake_checkpoint -> set_checkpoint_unfinished_marker;
test_skipped_unfinished_checkpoints_when_restoring -> _write_fake_checkpoint;
test_skipped_unfinished_checkpoints_when_restoring -> Trainer;
test_skipped_unfinished_checkpoints_when_restoring -> exp_manager;
test_skipped_unfinished_checkpoints_when_restoring -> str;
test_skipped_unfinished_checkpoints_when_restoring -> Path;
test_skipped_unfinished_dist_checkpoints_when_restoring -> _write_fake_checkpoint;
test_skipped_unfinished_dist_checkpoints_when_restoring -> Trainer;
test_skipped_unfinished_dist_checkpoints_when_restoring -> exp_manager;
test_skipped_unfinished_dist_checkpoints_when_restoring -> str;
test_skipped_unfinished_dist_checkpoints_when_restoring -> Path;
test_incomplete_checkpoints_cleanup -> touch;
test_incomplete_checkpoints_cleanup -> _write_fake_checkpoint;
test_incomplete_checkpoints_cleanup -> Trainer;
test_incomplete_checkpoints_cleanup -> exp_manager;
test_incomplete_checkpoints_cleanup -> ExampleModel;
test_incomplete_checkpoints_cleanup -> fit;
test_incomplete_checkpoints_cleanup -> list;
test_incomplete_checkpoints_cleanup -> rglob;
test_incomplete_checkpoints_cleanup -> is_file;
test_incomplete_checkpoints_cleanup -> str;
test_incomplete_dist_checkpoints_cleanup -> touch;
test_incomplete_dist_checkpoints_cleanup -> Trainer;
test_incomplete_dist_checkpoints_cleanup -> exp_manager;
test_incomplete_dist_checkpoints_cleanup -> ExampleModel;
test_incomplete_dist_checkpoints_cleanup -> fit;
test_incomplete_dist_checkpoints_cleanup -> list;
test_incomplete_dist_checkpoints_cleanup -> _write_fake_checkpoint;
test_incomplete_dist_checkpoints_cleanup -> rglob;
test_incomplete_dist_checkpoints_cleanup -> glob;
test_incomplete_dist_checkpoints_cleanup -> is_dir;
test_incomplete_dist_checkpoints_cleanup -> str;
test_incomplete_checkpoints_marker_path -> parametrize;
test_incomplete_checkpoints_marker_path -> format_checkpoint_unfinished_marker_path;
test_incomplete_checkpoints_marker_path -> str;
test_invalid_checkpoints_removed_from_topk -> Trainer;
test_invalid_checkpoints_removed_from_topk -> exp_manager;
test_invalid_checkpoints_removed_from_topk -> ExampleModel;
test_invalid_checkpoints_removed_from_topk -> fit;
test_invalid_checkpoints_removed_from_topk -> set_checkpoint_unfinished_marker;
test_invalid_checkpoints_removed_from_topk -> unlink;
test_invalid_checkpoints_removed_from_topk -> len;
test_invalid_checkpoints_removed_from_topk -> str;
test_invalid_checkpoints_removed_from_topk -> rglob;
test_invalid_checkpoints_removed_from_topk -> is_file;
test_doesnt_silently_start_from_scratch -> _write_fake_checkpoint;
test_doesnt_silently_start_from_scratch -> Trainer;
test_doesnt_silently_start_from_scratch -> raises;
test_doesnt_silently_start_from_scratch -> exp_manager;
test_doesnt_silently_start_from_scratch -> str;
test_doesnt_silently_start_from_scratch_dist -> _write_fake_checkpoint;
test_doesnt_silently_start_from_scratch_dist -> Trainer;
test_doesnt_silently_start_from_scratch_dist -> raises;
test_doesnt_silently_start_from_scratch_dist -> exp_manager;
test_doesnt_silently_start_from_scratch_dist -> str;
test_save_nemo_not_comp_with_model_parallel -> AppState;
test_save_nemo_not_comp_with_model_parallel -> Trainer;
test_save_nemo_not_comp_with_model_parallel -> exp_manager;
test_save_nemo_not_comp_with_model_parallel -> raises;
test_save_nemo_not_comp_with_model_parallel -> str;
test_fault_tol_callback_not_created_by_default -> Trainer;
test_fault_tol_callback_not_created_by_default -> exp_manager;
test_fault_tol_callback_not_created_by_default -> isinstance;
test_fault_tol_callback_created -> Trainer;
test_fault_tol_callback_created -> exp_manager;
test_fault_tol_callback_created -> isinstance;
test_to_from_config_file -> NamedTemporaryFile;
test_to_from_config_file -> to_config_file;
test_to_from_config_file -> from_config_file;
test_to_from_config_file -> isinstance;
test_to_from_config_file -> numpy;
test_to_from_config_file -> len;
test_to_from_config_file -> array_equal;
test_to_from_config_file -> cpu;
test_to_from_config_file -> detach;
test_save_restore_from_nemo_file -> NamedTemporaryFile;
test_save_restore_from_nemo_file -> restore_from;
test_save_restore_from_nemo_file -> numpy;
test_save_restore_from_nemo_file -> array_equal;
test_save_restore_from_nemo_file -> register_artifact;
test_save_restore_from_nemo_file -> save_to;
test_save_restore_from_nemo_file -> len;
test_save_restore_from_nemo_file -> cpu;
test_save_restore_from_nemo_file -> detach;
test_eff_save_restore_from_nemo_file_encrypted -> NamedTemporaryFile;
test_eff_save_restore_from_nemo_file_encrypted -> set_encryption_key;
test_eff_save_restore_from_nemo_file_encrypted -> restore_from;
test_eff_save_restore_from_nemo_file_encrypted -> register_artifact;
test_eff_save_restore_from_nemo_file_encrypted -> save_to;
test_eff_save_restore_from_nemo_file_encrypted -> raises;
test_save_restore_from_nemo_file_with_override -> join;
test_save_restore_from_nemo_file_with_override -> getcwd;
test_save_restore_from_nemo_file_with_override -> NamedTemporaryFile;
test_save_restore_from_nemo_file_with_override -> split;
test_save_restore_from_nemo_file_with_override -> register_artifact;
test_save_restore_from_nemo_file_with_override -> save_to;
test_save_restore_from_nemo_file_with_override -> to_yaml;
test_save_restore_from_nemo_file_with_override -> write;
test_save_restore_from_nemo_file_with_override -> seek;
test_save_restore_from_nemo_file_with_override -> restore_from;
test_save_restore_from_nemo_file_with_override -> numpy;
test_save_restore_from_nemo_file_with_override -> array_equal;
test_save_restore_from_nemo_file_with_override -> len;
test_save_restore_from_nemo_file_with_override -> cpu;
test_save_restore_from_nemo_file_with_override -> detach;
test_save_model_level_pt_ckpt -> TemporaryDirectory;
test_save_model_level_pt_ckpt -> join;
test_save_model_level_pt_ckpt -> save_to;
test_save_model_level_pt_ckpt -> extract_state_dict_from;
test_save_model_level_pt_ckpt -> exists;
test_save_model_level_pt_ckpt -> restore_from;
test_save_model_level_pt_ckpt -> numpy;
test_save_model_level_pt_ckpt -> load_state_dict;
test_save_model_level_pt_ckpt -> array_equal;
test_save_model_level_pt_ckpt -> len;
test_save_model_level_pt_ckpt -> load;
test_save_model_level_pt_ckpt -> cpu;
test_save_model_level_pt_ckpt -> detach;
test_save_module_level_pt_ckpt -> TemporaryDirectory;
test_save_module_level_pt_ckpt -> join;
test_save_module_level_pt_ckpt -> save_to;
test_save_module_level_pt_ckpt -> extract_state_dict_from;
test_save_module_level_pt_ckpt -> exists;
test_save_module_level_pt_ckpt -> restore_from;
test_save_module_level_pt_ckpt -> numpy;
test_save_module_level_pt_ckpt -> load_state_dict;
test_save_module_level_pt_ckpt -> array_equal;
test_save_module_level_pt_ckpt -> len;
test_save_module_level_pt_ckpt -> load;
test_save_module_level_pt_ckpt -> cpu;
test_save_module_level_pt_ckpt -> detach;
test_num_weights -> TempModule;
test_as_frozen -> TempModule;
test_as_frozen -> parameters;
test_as_frozen -> as_frozen;
test_partial_unfreeze -> TempModule;
test_partial_unfreeze -> parameters;
test_partial_unfreeze -> freeze;
test_partial_unfreeze -> unfreeze;
test_partial_unfreeze -> len;
test_partial_unfreeze -> hasattr;
test_short_vs_long_version -> NeuralType;
test_short_vs_long_version -> AcousticEncodedRepresentation;
test_short_vs_long_version -> compare;
test_short_vs_long_version -> AxisType;
test_parameterized_type_audio_sampling_frequency -> NeuralType;
test_parameterized_type_audio_sampling_frequency -> compare;
test_parameterized_type_audio_sampling_frequency -> AudioSignal;
test_transpose_same_1 -> NeuralType;
test_transpose_same_1 -> compare;
test_transpose_same_2 -> NeuralType;
test_transpose_same_2 -> compare;
test_transpose_same_2 -> AudioSignal;
test_inheritance_spec_augment_example -> NeuralType;
test_inheritance_spec_augment_example -> SpectrogramType;
test_inheritance_spec_augment_example -> MelSpectrogramType;
test_inheritance_spec_augment_example -> MFCCSpectrogramType;
test_inheritance_spec_augment_example -> compare;
test_singletone -> NeuralType;
test_singletone -> compare;
test_list_of_lists -> NeuralType;
test_list_of_lists -> compare;
test_list_of_lists -> ChannelType;
test_list_of_lists -> AxisType;
test_void -> NeuralType;
test_void -> SpectrogramType;
test_void -> VoidType;
test_void -> compare;
test_big_void -> NeuralType;
test_big_void -> SpectrogramType;
test_big_void -> compare;
test_big_void -> VoidType;
test_big_void -> ChannelType;
test_big_void -> AxisType;
test_unspecified_dimensions -> NeuralType;
test_unspecified_dimensions -> compare;
test_unspecified_dimensions -> SpectrogramType;
test_unspecified_dimensions -> AxisType;
test_any_axis -> NeuralType;
test_any_axis -> VoidType;
test_any_axis -> SpectrogramType;
test_any_axis -> compare;
test_struct -> NeuralType;
test_struct -> compare;
test_struct -> BoundingBox;
test_struct -> BadBoundingBox;
test_struct -> AxisType;
test_get_optimizer -> TempModel;
test_get_optimizer -> is_available;
test_get_optimizer -> keys;
test_get_optimizer -> cuda;
test_get_optimizer -> get_optimizer;
test_get_optimizer -> isinstance;
test_get_optimizer -> opt_cls;
test_get_optimizer -> parameters;
test_register_optimizer -> register_optimizer;
test_register_optimizer -> TempModel;
test_register_optimizer -> get_optimizer;
test_register_optimizer -> opt_cls;
test_register_optimizer -> isinstance;
test_register_optimizer -> parameters;
test_optim_config_parse_bypass -> parse_optimizer_args;
test_optim_config_parse_bypass -> create;
test_optim_config_parse_arg_by_name -> parse_optimizer_args;
test_optim_config_parse_arg_by_name -> create;
test_optim_config_parse_arg_by_name -> raises;
test_optim_config_parse_arg_by_target -> create;
test_optim_config_parse_arg_by_target -> parse_optimizer_args;
test_optim_config_parse_arg_by_target -> vars;
test_optim_config_parse_arg_by_target -> SGDParams;
test_optim_config_parse_arg_by_target -> NovogradParams;
test_optim_config_parse_arg_by_target -> set;
test_optim_config_parse_arg_by_target -> keys;
test_get_scheduler -> TempModel;
test_get_scheduler -> Novograd;
test_get_scheduler -> keys;
test_get_scheduler -> parameters;
test_get_scheduler -> get_scheduler;
test_get_scheduler -> sched_cls;
test_get_scheduler -> isinstance;
test_register_scheduler -> register_scheduler;
test_register_scheduler -> TempModel;
test_register_scheduler -> get_optimizer;
test_register_scheduler -> opt_cls;
test_register_scheduler -> get_scheduler;
test_register_scheduler -> sched_cls;
test_register_scheduler -> isinstance;
test_register_scheduler -> parameters;
test_sched_config_parse_simple -> TempModel;
test_sched_config_parse_simple -> get_optimizer;
test_sched_config_parse_simple -> opt_cls;
test_sched_config_parse_simple -> prepare_lr_scheduler;
test_sched_config_parse_simple -> isinstance;
test_sched_config_parse_simple -> create;
test_sched_config_parse_simple -> parameters;
test_sched_config_parse_from_cls -> TempModel;
test_sched_config_parse_from_cls -> get_optimizer;
test_sched_config_parse_from_cls -> opt_cls;
test_sched_config_parse_from_cls -> prepare_lr_scheduler;
test_sched_config_parse_from_cls -> isinstance;
test_sched_config_parse_from_cls -> create;
test_sched_config_parse_from_cls -> parameters;
test_sched_config_parse_reduce_on_plateau -> TempModel;
test_sched_config_parse_reduce_on_plateau -> get_optimizer;
test_sched_config_parse_reduce_on_plateau -> opt_cls;
test_sched_config_parse_reduce_on_plateau -> update;
test_sched_config_parse_reduce_on_plateau -> prepare_lr_scheduler;
test_sched_config_parse_reduce_on_plateau -> isinstance;
test_sched_config_parse_reduce_on_plateau -> items;
test_sched_config_parse_reduce_on_plateau -> create;
test_sched_config_parse_reduce_on_plateau -> parameters;
test_sched_config_parse_reduce_on_plateau -> getattr;
test_sched_config_parse_reduce_on_plateau -> repr;
test_WarmupPolicy -> TempModel;
test_WarmupPolicy -> get_optimizer;
test_WarmupPolicy -> opt_cls;
test_WarmupPolicy -> WarmupPolicy;
test_WarmupPolicy -> range;
test_WarmupPolicy -> step;
test_WarmupPolicy -> parameters;
test_WarmupPolicy -> get_last_lr;
test_WarmupHoldPolicy -> TempModel;
test_WarmupHoldPolicy -> get_optimizer;
test_WarmupHoldPolicy -> opt_cls;
test_WarmupHoldPolicy -> WarmupHoldPolicy;
test_WarmupHoldPolicy -> range;
test_WarmupHoldPolicy -> step;
test_WarmupHoldPolicy -> parameters;
test_WarmupHoldPolicy -> get_last_lr;
test_WarmupAnnealing -> TempModel;
test_WarmupAnnealing -> get_optimizer;
test_WarmupAnnealing -> opt_cls;
test_WarmupAnnealing -> WarmupAnnealing;
test_WarmupAnnealing -> range;
test_WarmupAnnealing -> step;
test_WarmupAnnealing -> WarmupHoldPolicy;
test_WarmupAnnealing -> parameters;
test_WarmupAnnealing -> get_last_lr;
test_SquareAnnealing -> TempModel;
test_SquareAnnealing -> get_optimizer;
test_SquareAnnealing -> opt_cls;
test_SquareAnnealing -> SquareAnnealing;
test_SquareAnnealing -> range;
test_SquareAnnealing -> step;
test_SquareAnnealing -> parameters;
test_SquareAnnealing -> get_last_lr;
test_SquareRootAnnealing -> TempModel;
test_SquareRootAnnealing -> get_optimizer;
test_SquareRootAnnealing -> opt_cls;
test_SquareRootAnnealing -> SquareRootAnnealing;
test_SquareRootAnnealing -> range;
test_SquareRootAnnealing -> step;
test_SquareRootAnnealing -> parameters;
test_SquareRootAnnealing -> get_last_lr;
test_CosineAnnealing -> TempModel;
test_CosineAnnealing -> get_optimizer;
test_CosineAnnealing -> opt_cls;
test_CosineAnnealing -> CosineAnnealing;
test_CosineAnnealing -> range;
test_CosineAnnealing -> step;
test_CosineAnnealing -> parameters;
test_CosineAnnealing -> get_last_lr;
test_CosineAnnealing -> _get_lr;
test_NoamAnnealing -> TempModel;
test_NoamAnnealing -> get_optimizer;
test_NoamAnnealing -> opt_cls;
test_NoamAnnealing -> NoamAnnealing;
test_NoamAnnealing -> range;
test_NoamAnnealing -> parameters;
test_NoamAnnealing -> get_last_lr;
test_NoamAnnealing -> step;
test_PolynomialDecayAnnealing -> TempModel;
test_PolynomialDecayAnnealing -> get_optimizer;
test_PolynomialDecayAnnealing -> opt_cls;
test_PolynomialDecayAnnealing -> PolynomialDecayAnnealing;
test_PolynomialDecayAnnealing -> range;
test_PolynomialDecayAnnealing -> step;
test_PolynomialDecayAnnealing -> parameters;
test_PolynomialDecayAnnealing -> get_last_lr;
test_PolynomialHoldDecayAnnealing -> TempModel;
test_PolynomialHoldDecayAnnealing -> get_optimizer;
test_PolynomialHoldDecayAnnealing -> opt_cls;
test_PolynomialHoldDecayAnnealing -> PolynomialHoldDecayAnnealing;
test_PolynomialHoldDecayAnnealing -> range;
test_PolynomialHoldDecayAnnealing -> step;
test_PolynomialHoldDecayAnnealing -> parameters;
test_PolynomialHoldDecayAnnealing -> get_last_lr;
test_InverseSquareRootAnnealing -> TempModel;
test_InverseSquareRootAnnealing -> get_optimizer;
test_InverseSquareRootAnnealing -> opt_cls;
test_InverseSquareRootAnnealing -> InverseSquareRootAnnealing;
test_InverseSquareRootAnnealing -> range;
test_InverseSquareRootAnnealing -> step;
test_InverseSquareRootAnnealing -> parameters;
test_InverseSquareRootAnnealing -> get_last_lr;
test_CosineAnnealing_with_noop_steps -> TempModel;
test_CosineAnnealing_with_noop_steps -> get_optimizer;
test_CosineAnnealing_with_noop_steps -> opt_cls;
test_CosineAnnealing_with_noop_steps -> CosineAnnealing;
test_CosineAnnealing_with_noop_steps -> range;
test_CosineAnnealing_with_noop_steps -> step;
test_CosineAnnealing_with_noop_steps -> parameters;
test_CosineAnnealing_with_noop_steps -> get_last_lr;
test_CosineAnnealing_with_noop_steps -> _get_lr;
test_max_step_computation -> run_only_on;
test_max_step_computation -> train;
test_max_step_computation -> range;
test_max_step_computation -> Trainer;
test_max_step_computation -> compute_max_steps;
test_max_step_computation -> ExampleModel;
test_max_step_computation -> append;
test_max_step_computation -> fit;
test_max_step_computation -> bool;
test_max_step_computation -> randint;
test_max_step_computation -> uniform;
test_max_step_computation -> choice;
test_max_step_computation -> Callback;
test_max_step_computation -> ceil;
test_max_step_computation -> min;
test_max_step_computation_with_sched_no_ops -> run_only_on;
test_max_step_computation_with_sched_no_ops -> train;
test_max_step_computation_with_sched_no_ops -> Trainer;
test_max_step_computation_with_sched_no_ops -> ExampleModel;
test_max_step_computation_with_sched_no_ops -> append;
test_max_step_computation_with_sched_no_ops -> fit;
test_max_step_computation_with_sched_no_ops -> SchedulerNoOpCallback;
set_env -> fixture;
get_dir_size -> scandir;
get_dir_size -> is_file;
get_dir_size -> is_dir;
get_dir_size -> stat;
get_dir_size -> get_dir_size;
get_size -> isfile;
get_size -> getsize;
get_size -> isdir;
get_size -> get_dir_size;
_is_json_serializable -> isinstance;
_is_json_serializable -> dumps;
_mock_model_config -> create;
_mock_model_config -> set_struct;
_mock_model_config -> classpath;
_mock_model_with_children_config -> create;
_mock_model_with_children_config -> set_struct;
_mock_model_with_children_config -> classpath;
_mock_model_with_child_encdecctcbpe_config -> create;
_mock_model_with_child_encdecctcbpe_config -> set_struct;
_mock_model_with_child_custom_config_path_config -> create;
_mock_model_with_child_custom_config_path_config -> set_struct;
_mock_model_with_child_custom_config_path_config -> classpath;
_mock_model_with_child_custom_config_path_config -> _mock_model_config;
_mock_model_incorrect_with_nemo_artifact_config -> create;
_mock_model_incorrect_with_nemo_artifact_config -> set_struct;
setup_data_from_file -> register_artifact;
setup_data_from_file -> open_dict;
setup_data_from_file -> open;
setup_data_from_file -> readlines;
__test_restore_elsewhere -> TemporaryDirectory;
__test_restore_elsewhere -> exists;
__test_restore_elsewhere -> restore_from;
__test_restore_elsewhere -> join;
__test_restore_elsewhere -> save_to;
__test_restore_elsewhere -> copy;
__test_restore_elsewhere -> len;
__test_restore_elsewhere -> getattr2;
test_EncDecCTCModel -> with_downloads;
test_EncDecCTCModel -> from_pretrained;
test_EncDecCTCModel -> __test_restore_elsewhere;
test_EncDecCTCModel -> set;
test_EncDecCTCModelBPE -> with_downloads;
test_EncDecCTCModelBPE -> from_pretrained;
test_EncDecCTCModelBPE -> __test_restore_elsewhere;
test_EncDecCTCModelBPE -> set;
test_EncDecCTCModelBPE_v2 -> with_downloads;
test_EncDecCTCModelBPE_v2 -> from_pretrained;
test_EncDecCTCModelBPE_v2 -> __test_restore_elsewhere;
test_EncDecCTCModelBPE_v2 -> set;
test_EncDecCTCModelBPE_v3 -> with_downloads;
test_EncDecCTCModelBPE_v3 -> from_pretrained;
test_EncDecCTCModelBPE_v3 -> __test_restore_elsewhere;
test_EncDecCTCModelBPE_v3 -> set;
test_EncDecCTCModelBPE_HF -> with_downloads;
test_EncDecCTCModelBPE_HF -> from_pretrained;
test_EncDecCTCModelBPE_HF -> __test_restore_elsewhere;
test_EncDecCTCModelBPE_HF -> set;
test_PunctuationCapitalization -> with_downloads;
test_PunctuationCapitalization -> from_pretrained;
test_PunctuationCapitalization -> __test_restore_elsewhere;
test_PunctuationCapitalization -> set;
test_mock_save_to_restore_from -> endswith;
test_mock_save_to_restore_from -> NamedTemporaryFile;
test_mock_save_to_restore_from -> writelines;
test_mock_save_to_restore_from -> flush;
test_mock_save_to_restore_from -> _mock_model_config;
test_mock_save_to_restore_from -> MockModel;
test_mock_save_to_restore_from -> to;
test_mock_save_to_restore_from -> __test_restore_elsewhere;
test_mock_save_to_restore_from -> basename;
test_mock_save_to_restore_from -> mean;
test_mock_restore_from_config_only -> NamedTemporaryFile;
test_mock_restore_from_config_only -> writelines;
test_mock_restore_from_config_only -> flush;
test_mock_restore_from_config_only -> _mock_model_config;
test_mock_restore_from_config_only -> abspath;
test_mock_restore_from_config_only -> MockModel;
test_mock_restore_from_config_only -> to;
test_mock_restore_from_config_only -> __test_restore_elsewhere;
test_mock_restore_from_config_only -> endswith;
test_mock_restore_from_config_only -> open_dict;
test_mock_restore_from_config_only -> basename;
test_mock_restore_from_config_override_with_OmegaConf -> NamedTemporaryFile;
test_mock_restore_from_config_override_with_OmegaConf -> writelines;
test_mock_restore_from_config_override_with_OmegaConf -> flush;
test_mock_restore_from_config_override_with_OmegaConf -> _mock_model_config;
test_mock_restore_from_config_override_with_OmegaConf -> MockModel;
test_mock_restore_from_config_override_with_OmegaConf -> to;
test_mock_restore_from_config_override_with_OmegaConf -> __test_restore_elsewhere;
test_mock_restore_from_config_override_with_OmegaConf -> mean;
test_mock_restore_from_config_override_with_OmegaConf -> open_dict;
test_mock_restore_from_config_override_with_yaml -> NamedTemporaryFile;
test_mock_restore_from_config_override_with_yaml -> writelines;
test_mock_restore_from_config_override_with_yaml -> flush;
test_mock_restore_from_config_override_with_yaml -> _mock_model_config;
test_mock_restore_from_config_override_with_yaml -> MockModel;
test_mock_restore_from_config_override_with_yaml -> to;
test_mock_restore_from_config_override_with_yaml -> save;
test_mock_restore_from_config_override_with_yaml -> __test_restore_elsewhere;
test_mock_restore_from_config_override_with_yaml -> cmp;
test_mock_restore_from_config_override_with_yaml -> open_dict;
test_mock_restore_from_config_override_with_yaml -> mean;
test_mock_save_to_restore_from_with_target_class -> isinstance;
test_mock_save_to_restore_from_with_target_class -> NamedTemporaryFile;
test_mock_save_to_restore_from_with_target_class -> writelines;
test_mock_save_to_restore_from_with_target_class -> flush;
test_mock_save_to_restore_from_with_target_class -> _mock_model_config;
test_mock_save_to_restore_from_with_target_class -> MockModel;
test_mock_save_to_restore_from_with_target_class -> to;
test_mock_save_to_restore_from_with_target_class -> endswith;
test_mock_save_to_restore_from_with_target_class -> mean;
test_mock_save_to_restore_from_with_target_class -> TemporaryDirectory;
test_mock_save_to_restore_from_with_target_class -> join;
test_mock_save_to_restore_from_with_target_class -> save_to;
test_mock_save_to_restore_from_with_target_class -> restore_from;
test_mock_save_to_restore_from_with_target_class -> basename;
test_mock_save_to_restore_from_multiple_models -> NamedTemporaryFile;
test_mock_save_to_restore_from_multiple_models -> writelines;
test_mock_save_to_restore_from_multiple_models -> flush;
test_mock_save_to_restore_from_multiple_models -> _mock_model_config;
test_mock_save_to_restore_from_multiple_models -> MockModel;
test_mock_save_to_restore_from_multiple_models -> to;
test_mock_save_to_restore_from_multiple_models -> __test_restore_elsewhere;
test_mock_save_to_restore_from_multiple_models_inverted_order -> NamedTemporaryFile;
test_mock_save_to_restore_from_multiple_models_inverted_order -> writelines;
test_mock_save_to_restore_from_multiple_models_inverted_order -> flush;
test_mock_save_to_restore_from_multiple_models_inverted_order -> _mock_model_config;
test_mock_save_to_restore_from_multiple_models_inverted_order -> MockModel;
test_mock_save_to_restore_from_multiple_models_inverted_order -> to;
test_mock_save_to_restore_from_multiple_models_inverted_order -> __test_restore_elsewhere;
test_mock_save_to_restore_chained -> AppState;
test_mock_save_to_restore_chained -> get_model_metadata_from_guid;
test_mock_save_to_restore_chained -> NamedTemporaryFile;
test_mock_save_to_restore_chained -> writelines;
test_mock_save_to_restore_chained -> flush;
test_mock_save_to_restore_chained -> _mock_model_config;
test_mock_save_to_restore_chained -> MockModel;
test_mock_save_to_restore_chained -> to;
test_mock_save_to_restore_chained -> join;
test_mock_save_to_restore_chained -> save_to;
test_mock_save_to_restore_chained -> copy;
test_mock_save_to_restore_chained -> TemporaryDirectory;
test_mock_save_to_restore_chained -> restore_from;
test_mock_save_to_restore_chained -> save_copy;
save_copy -> join;
save_copy -> save_to;
save_copy -> copy;
test_mock_save_to_multiple_times -> NamedTemporaryFile;
test_mock_save_to_multiple_times -> TemporaryDirectory;
test_mock_save_to_multiple_times -> writelines;
test_mock_save_to_multiple_times -> flush;
test_mock_save_to_multiple_times -> _mock_model_config;
test_mock_save_to_multiple_times -> MockModel;
test_mock_save_to_multiple_times -> to;
test_mock_save_to_multiple_times -> save_to;
test_mock_save_to_multiple_times -> join;
test_multiple_model_save_restore_connector -> TemporaryDirectory;
test_multiple_model_save_restore_connector -> _mock_model_config;
test_multiple_model_save_restore_connector -> MockModel;
test_multiple_model_save_restore_connector -> MySaveRestoreConnector;
test_multiple_model_save_restore_connector -> save_to;
test_multiple_model_save_restore_connector -> exists;
test_multiple_model_save_restore_connector -> isinstance;
test_multiple_model_save_restore_connector -> replace;
test_multiple_model_save_restore_connector -> join;
test_multiple_model_save_restore_connector -> type;
test_multiple_model_save_restore_connector -> super;
test_restore_from_save_restore_connector -> TemporaryDirectory;
test_restore_from_save_restore_connector -> _mock_model_config;
test_restore_from_save_restore_connector -> join;
test_restore_from_save_restore_connector -> MockModel;
test_restore_from_save_restore_connector -> MySaveRestoreConnector;
test_restore_from_save_restore_connector -> save_to;
test_restore_from_save_restore_connector -> exists;
test_restore_from_save_restore_connector -> restore_from;
test_restore_from_save_restore_connector -> replace;
test_restore_from_save_restore_connector -> type;
test_restore_from_save_restore_connector -> super;
test_restore_from_save_restore_connector_return_config -> TemporaryDirectory;
test_restore_from_save_restore_connector_return_config -> _mock_model_config;
test_restore_from_save_restore_connector_return_config -> join;
test_restore_from_save_restore_connector_return_config -> MockModel;
test_restore_from_save_restore_connector_return_config -> MySaveRestoreConnector;
test_restore_from_save_restore_connector_return_config -> save_to;
test_restore_from_save_restore_connector_return_config -> exists;
test_restore_from_save_restore_connector_return_config -> restore_from;
test_restore_from_save_restore_connector_return_config -> isinstance;
test_restore_from_save_restore_connector_return_config -> replace;
test_restore_from_save_restore_connector_return_config -> super;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> TemporaryDirectory;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> _mock_model_config;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> join;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> MockModel;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> MySaveRestoreConnector;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> save_to;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> exists;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> replace;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> _filtered_tar_info;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> _unpack_nemo_file;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> list;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> endswith;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> listdir;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> len;
test_restore_from_save_restore_connector_return_config_partial_tar_extraction -> super;
test_restore_from_save_restore_connector_unpacked_file -> TemporaryDirectory;
test_restore_from_save_restore_connector_unpacked_file -> _mock_model_config;
test_restore_from_save_restore_connector_unpacked_file -> join;
test_restore_from_save_restore_connector_unpacked_file -> makedirs;
test_restore_from_save_restore_connector_unpacked_file -> MockModel;
test_restore_from_save_restore_connector_unpacked_file -> MySaveRestoreConnector;
test_restore_from_save_restore_connector_unpacked_file -> save_to;
test_restore_from_save_restore_connector_unpacked_file -> isdir;
test_restore_from_save_restore_connector_unpacked_file -> restore_from;
test_restore_from_save_restore_connector_unpacked_file -> __init__;
test_restore_from_save_restore_connector_unpacked_file -> replace;
test_restore_from_save_restore_connector_unpacked_file -> len;
test_restore_from_save_restore_connector_unpacked_file -> type;
test_restore_from_save_restore_connector_unpacked_file -> listdir;
test_restore_from_save_restore_connector_unpacked_file -> super;
test_mock_model_model_collision -> _mock_model_config;
test_mock_model_model_collision -> MockModel;
test_mock_model_model_collision -> to;
test_mock_model_model_collision -> set_struct;
test_mock_model_model_collision -> raises;
test_mock_model_nested -> parametrize;
test_mock_model_nested -> _mock_model_config;
test_mock_model_nested -> _mock_model_with_children_config;
test_mock_model_nested -> MockModel;
test_mock_model_nested -> to;
test_mock_model_nested -> TemporaryDirectory;
test_mock_model_nested -> join;
test_mock_model_nested -> restore_from;
test_mock_model_nested -> __test_restore_elsewhere;
test_mock_model_nested -> save_to;
test_mock_model_nested -> MockModelWithChildren;
test_mock_model_nested -> change_stub_number;
test_mock_model_nested -> get;
test_mock_model_nested_with_resources -> parametrize;
test_mock_model_nested_with_resources -> NamedTemporaryFile;
test_mock_model_nested_with_resources -> writelines;
test_mock_model_nested_with_resources -> flush;
test_mock_model_nested_with_resources -> _mock_model_config;
test_mock_model_nested_with_resources -> _mock_model_with_children_config;
test_mock_model_nested_with_resources -> MockModel;
test_mock_model_nested_with_resources -> to;
test_mock_model_nested_with_resources -> TemporaryDirectory;
test_mock_model_nested_with_resources -> join;
test_mock_model_nested_with_resources -> restore_from;
test_mock_model_nested_with_resources -> __test_restore_elsewhere;
test_mock_model_nested_with_resources -> save_to;
test_mock_model_nested_with_resources -> MockModelWithChildren;
test_mock_model_nested_with_resources -> setup_data_from_file;
test_mock_model_nested_with_resources -> get;
test_mock_model_nested_with_resources_multiple_passes -> NamedTemporaryFile;
test_mock_model_nested_with_resources_multiple_passes -> writelines;
test_mock_model_nested_with_resources_multiple_passes -> flush;
test_mock_model_nested_with_resources_multiple_passes -> _mock_model_config;
test_mock_model_nested_with_resources_multiple_passes -> _mock_model_with_children_config;
test_mock_model_nested_with_resources_multiple_passes -> MockModel;
test_mock_model_nested_with_resources_multiple_passes -> to;
test_mock_model_nested_with_resources_multiple_passes -> MockModelWithChildren;
test_mock_model_nested_with_resources_multiple_passes -> TemporaryDirectory;
test_mock_model_nested_with_resources_multiple_passes -> join;
test_mock_model_nested_with_resources_multiple_passes -> restore_from;
test_mock_model_nested_with_resources_multiple_passes -> save_to;
test_mock_model_nested_double_with_resources -> NamedTemporaryFile;
test_mock_model_nested_double_with_resources -> writelines;
test_mock_model_nested_double_with_resources -> flush;
test_mock_model_nested_double_with_resources -> _mock_model_config;
test_mock_model_nested_double_with_resources -> MockModel;
test_mock_model_nested_double_with_resources -> to;
test_mock_model_nested_double_with_resources -> TemporaryDirectory;
test_mock_model_nested_double_with_resources -> join;
test_mock_model_nested_double_with_resources -> restore_from;
test_mock_model_nested_double_with_resources -> __test_restore_elsewhere;
test_mock_model_nested_double_with_resources -> list;
test_mock_model_nested_double_with_resources -> zip;
test_mock_model_nested_double_with_resources -> _mock_model_with_children_config;
test_mock_model_nested_double_with_resources -> MockModelWithChildren;
test_mock_model_nested_double_with_resources -> save_to;
test_mock_model_nested_double_with_resources -> named_nemo_modules;
test_mock_model_nested_double_with_resources -> len;
test_mock_model_nested_child_from_pretrained -> _mock_model_with_child_encdecctcbpe_config;
test_mock_model_nested_child_from_pretrained -> MockModelWithChildEncDecCTCBPE;
test_mock_model_nested_child_from_pretrained -> TemporaryDirectory;
test_mock_model_nested_child_from_pretrained -> join;
test_mock_model_nested_child_from_pretrained -> save_to;
test_mock_model_nested_child_from_pretrained -> restore_from;
test_mock_model_nested_child_from_pretrained -> __test_restore_elsewhere;
test_mock_model_nested_child_from_pretrained -> isinstance;
test_mock_model_nested_child_from_pretrained -> _is_json_serializable;
test_mock_model_nested_custom_config_field -> NamedTemporaryFile;
test_mock_model_nested_custom_config_field -> writelines;
test_mock_model_nested_custom_config_field -> flush;
test_mock_model_nested_custom_config_field -> _mock_model_with_child_custom_config_path_config;
test_mock_model_nested_custom_config_field -> MockModelWithChildCustomConfigPath;
test_mock_model_nested_custom_config_field -> TemporaryDirectory;
test_mock_model_nested_custom_config_field -> join;
test_mock_model_nested_custom_config_field -> save_to;
test_mock_model_nested_custom_config_field -> restore_from;
test_mock_model_nested_custom_config_field -> __test_restore_elsewhere;
test_mock_model_nested_custom_config_field -> list;
test_mock_model_nested_custom_config_field -> zip;
test_mock_model_nested_custom_config_field -> named_nemo_modules;
test_mock_model_nested_custom_config_field -> len;
test_using_nemo_checkpoint_as_artifact_disallowed -> _mock_model_config;
test_using_nemo_checkpoint_as_artifact_disallowed -> to;
test_using_nemo_checkpoint_as_artifact_disallowed -> TemporaryDirectory;
test_using_nemo_checkpoint_as_artifact_disallowed -> join;
test_using_nemo_checkpoint_as_artifact_disallowed -> save_to;
test_using_nemo_checkpoint_as_artifact_disallowed -> _mock_model_incorrect_with_nemo_artifact_config;
test_using_nemo_checkpoint_as_artifact_disallowed -> MockModel;
test_using_nemo_checkpoint_as_artifact_disallowed -> raises;
test_using_nemo_checkpoint_as_artifact_disallowed -> MockModelIncorrectWithNemoArtifact;
test_restore_from_save_restore_connector_extracted_dir -> AppState;
test_restore_from_save_restore_connector_extracted_dir -> get_model_metadata_from_guid;
test_restore_from_save_restore_connector_extracted_dir -> to;
test_restore_from_save_restore_connector_extracted_dir -> state_dict;
test_restore_from_save_restore_connector_extracted_dir -> zip;
test_restore_from_save_restore_connector_extracted_dir -> TemporaryDirectory;
test_restore_from_save_restore_connector_extracted_dir -> restore_from;
test_restore_from_save_restore_connector_extracted_dir -> type;
test_restore_from_save_restore_connector_extracted_dir -> exists;
test_restore_from_save_restore_connector_extracted_dir -> keys;
test_restore_from_save_restore_connector_extracted_dir -> replace;
test_restore_from_save_restore_connector_extracted_dir -> save_to;
test_restore_from_save_restore_connector_extracted_dir -> _mock_model_config;
test_restore_from_save_restore_connector_extracted_dir -> join;
test_restore_from_save_restore_connector_extracted_dir -> MockModel;
test_restore_from_save_restore_connector_extracted_dir -> MySaveRestoreConnector;
test_restore_from_save_restore_connector_extracted_dir -> _unpack_nemo_file;
test_restore_from_save_restore_connector_extracted_dir -> mean;
test_restore_from_save_restore_connector_extracted_dir -> get_size;
test_restore_from_save_restore_connector_extracted_dir -> super;
test_restore_from_save_restore_connector_extracted_dir -> abs;
test_hf_model_filter -> get_hf_model_filter;
test_hf_model_filter -> isinstance;
test_hf_model_info -> with_downloads;
test_hf_model_info -> get_hf_model_filter;
test_hf_model_info -> search_huggingface_models;
test_hf_model_info -> next;
test_hf_model_info -> len;
test_hf_model_info -> range;
test_hf_model_info_with_card_data -> pleasefixme;
test_hf_model_info_with_card_data -> with_downloads;
test_hf_model_info_with_card_data -> get_hf_model_filter;
test_hf_model_info_with_card_data -> search_huggingface_models;
test_hf_model_info_with_card_data -> next;
test_hf_model_info_with_card_data -> len;
test_hf_model_info_with_card_data -> hasattr;
test_hf_model_info_with_card_data -> range;
test_hf_model_info_with_limited_results -> with_downloads;
test_hf_model_info_with_limited_results -> get_hf_model_filter;
test_hf_model_info_with_limited_results -> search_huggingface_models;
test_hf_model_info_with_limited_results -> list;
test_hf_model_info_with_limited_results -> next;
test_hf_model_info_with_limited_results -> len;
test_hf_model_info_with_limited_results -> range;
test_filtering_methods -> parametrize;
test_filtering_methods -> getcwd;
test_filtering_methods -> chdir;
test_filtering_methods -> open;
test_filtering_methods -> utime;
test_filtering_methods -> isdigit;
test_filtering_methods -> TemporaryDirectory;
test_filtering_methods -> makedirs;
test_filtering_methods -> range;
test_filtering_methods -> set;
test_filtering_methods -> filter_method;
test_filtering_methods -> int;
test_filtering_methods -> touch;
test_filtering_methods -> _make_nemo_file_from_folder;
filter_even_children -> isdigit;
filter_even_children -> int;
test_from_config_dict_with_cls -> DictConfig;
test_from_config_dict_with_cls -> from_config_dict;
test_from_config_dict_with_cls -> isinstance;
test_from_config_dict_without_cls -> DictConfig;
test_from_config_dict_without_cls -> from_config_dict;
test_from_config_dict_without_cls -> isinstance;
test_from_config_dict_without_cls -> dict;
test_config_updated -> DictConfig;
test_config_updated -> from_config_dict;
test_config_updated -> to_config_dict;
test_base_class_instantiation -> DictConfig;
test_base_class_instantiation -> from_config_dict;
test_base_class_instantiation -> to_config_dict;
test_base_class_instantiation -> isinstance;
test_base_class_instantiation -> get_class_path;
test_self_class_instantiation -> DictConfig;
test_self_class_instantiation -> from_config_dict;
test_self_class_instantiation -> to_config_dict;
test_self_class_instantiation -> isinstance;
test_self_class_instantiation -> get_class_path;
test_sub_class_instantiation -> DictConfig;
test_sub_class_instantiation -> from_config_dict;
test_sub_class_instantiation -> to_config_dict;
test_sub_class_instantiation -> isinstance;
test_sub_class_instantiation -> get_class_path;
test_prints_perf_scores -> run_only_on;
test_prints_perf_scores -> print;
test_prints_perf_scores -> Trainer;
test_prints_perf_scores -> exp_manager;
test_prints_perf_scores -> ExampleModel;
test_prints_perf_scores -> fit;
test_prints_perf_scores -> open;
test_prints_perf_scores -> read;
test_prints_perf_scores -> str;
get_all_neural_types -> dir;
get_all_neural_types -> getattr;
get_all_neural_types -> isclass;
get_all_neural_types -> issubclass;
get_all_neural_types -> append;
test_simple_linear -> script;
test_simple_linear -> zeros;
test_simple_linear -> module;
test_simple_linear -> allclose;
test_simple_linear -> SimpleLinear;
test_simple_linear -> zeros_like;
test_simple_linear_exportable -> script;
test_simple_linear_exportable -> zeros;
test_simple_linear_exportable -> module;
test_simple_linear_exportable -> allclose;
test_simple_linear_exportable -> SimpleLinearExportable;
test_simple_linear_exportable -> zeros_like;
test_simple_linear_with_adapter_mixin -> script;
test_simple_linear_with_adapter_mixin -> zeros;
test_simple_linear_with_adapter_mixin -> module;
test_simple_linear_with_adapter_mixin -> allclose;
test_simple_linear_with_adapter_mixin -> SimpleLinearWithAdapterMixin;
test_simple_linear_with_adapter_mixin -> zeros_like;
test_simple_linear_with_types -> script;
test_simple_linear_with_types -> zeros;
test_simple_linear_with_types -> module;
test_simple_linear_with_types -> allclose;
test_simple_linear_with_types -> SimpleLinearWithTypes;
test_simple_linear_with_types -> zeros_like;
test_element_compilable -> parametrize;
test_element_compilable -> identity;
test_element_compilable -> get_all_neural_types;
test_element_compilable -> isinstance;
test_element_compilable -> tensor;
test_element_compilable -> neural_type;
test_dummy_module_with_io_types -> script;
test_dummy_module_with_io_types -> rand;
test_dummy_module_with_io_types -> module;
test_dummy_module_with_io_types -> allclose;
test_dummy_module_with_io_types -> DummyModuleWithIOTypes;
test_chain_with_types -> script;
test_chain_with_types -> zeros;
test_chain_with_types -> module;
test_chain_with_types -> allclose;
test_chain_with_types -> DummyModuleWithIOTypes;
test_chain_with_types -> SimpleLinearWithTypes;
test_chain_with_types -> dummy_module;
test_chain_with_types -> zeros_like;
recursive_assert_shape -> isinstance;
recursive_assert_shape -> recursive_assert_shape;
recursive_assert_homogeneous_type -> isinstance;
recursive_assert_homogeneous_type -> compare;
recursive_assert_homogeneous_type -> recursive_assert_homogeneous_type;
test_no_types_passthrough -> NoTypes;
test_no_types_passthrough -> obj;
test_no_types_passthrough -> typecheck;
test_no_types_passthrough -> tensor;
test_no_types_passthrough -> hasattr;
test_input_output_types -> InputOutputTypes;
test_input_output_types -> obj;
test_input_output_types -> typecheck;
test_input_output_types -> sum;
test_input_output_types -> tensor;
test_input_output_types -> compare;
test_input_output_types -> raises;
test_input_output_types -> zeros;
test_input_output_types -> NeuralType;
test_input_output_types -> ElementType;
test_input_types_only -> InputTypes;
test_input_types_only -> obj;
test_input_types_only -> typecheck;
test_input_types_only -> sum;
test_input_types_only -> tensor;
test_input_types_only -> hasattr;
test_input_types_only -> zeros;
test_input_types_only -> NeuralType;
test_input_types_only -> ElementType;
test_multiple_input_types_only -> InputTypes;
test_multiple_input_types_only -> obj;
test_multiple_input_types_only -> typecheck;
test_multiple_input_types_only -> sum;
test_multiple_input_types_only -> tensor;
test_multiple_input_types_only -> hasattr;
test_multiple_input_types_only -> zeros;
test_multiple_input_types_only -> ones;
test_multiple_input_types_only -> NeuralType;
test_multiple_input_types_only -> ElementType;
test_output_types_only -> OutputTypes;
test_output_types_only -> obj;
test_output_types_only -> typecheck;
test_output_types_only -> sum;
test_output_types_only -> tensor;
test_output_types_only -> compare;
test_output_types_only -> zeros;
test_output_types_only -> NeuralType;
test_output_types_only -> ElementType;
test_multiple_output_types_only -> MultipleOutputTypes;
test_multiple_output_types_only -> obj;
test_multiple_output_types_only -> typecheck;
test_multiple_output_types_only -> sum;
test_multiple_output_types_only -> tensor;
test_multiple_output_types_only -> compare;
test_multiple_output_types_only -> zeros;
test_multiple_output_types_only -> NeuralType;
test_multiple_output_types_only -> ElementType;
test_multiple_output_types_only_namedtuple -> MultipleOutputTypesWithNamedTuple;
test_multiple_output_types_only_namedtuple -> obj;
test_multiple_output_types_only_namedtuple -> typecheck;
test_multiple_output_types_only_namedtuple -> sum;
test_multiple_output_types_only_namedtuple -> tensor;
test_multiple_output_types_only_namedtuple -> compare;
test_multiple_output_types_only_namedtuple -> NamedTupleOutputType;
test_multiple_output_types_only_namedtuple -> zeros;
test_multiple_output_types_only_namedtuple -> NeuralType;
test_multiple_output_types_only_namedtuple -> ElementType;
test_multiple_mixed_output_types_only -> MultipleMixedOutputTypes;
test_multiple_mixed_output_types_only -> obj;
test_multiple_mixed_output_types_only -> typecheck;
test_multiple_mixed_output_types_only -> sum;
test_multiple_mixed_output_types_only -> tensor;
test_multiple_mixed_output_types_only -> compare;
test_multiple_mixed_output_types_only -> zeros;
test_multiple_mixed_output_types_only -> NeuralType;
test_multiple_mixed_output_types_only -> ElementType;
test_multiple_mixed_output_types_only_namedtuple -> MultipleMixedOutputTypes;
test_multiple_mixed_output_types_only_namedtuple -> obj;
test_multiple_mixed_output_types_only_namedtuple -> typecheck;
test_multiple_mixed_output_types_only_namedtuple -> sum;
test_multiple_mixed_output_types_only_namedtuple -> tensor;
test_multiple_mixed_output_types_only_namedtuple -> compare;
test_multiple_mixed_output_types_only_namedtuple -> NamedTupleOutputType;
test_multiple_mixed_output_types_only_namedtuple -> zeros;
test_multiple_mixed_output_types_only_namedtuple -> NeuralType;
test_multiple_mixed_output_types_only_namedtuple -> ElementType;
test_multiple_mixed_output_types_only_mismatched -> MultipleMixedOutputTypes;
test_multiple_mixed_output_types_only_mismatched -> typecheck;
test_multiple_mixed_output_types_only_mismatched -> raises;
test_multiple_mixed_output_types_only_mismatched -> obj;
test_multiple_mixed_output_types_only_mismatched -> NeuralType;
test_multiple_mixed_output_types_only_mismatched -> zeros;
test_multiple_mixed_output_types_only_mismatched -> ElementType;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> MultipleMixedOutputTypes;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> typecheck;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> raises;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> obj;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> NamedTupleOutputType;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> NeuralType;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> zeros;
test_multiple_mixed_output_types_only_namedtuple_mismatched -> ElementType;
test_incorrect_inheritance -> IncorrectInheritance;
test_incorrect_inheritance -> typecheck;
test_incorrect_inheritance -> raises;
test_incorrect_inheritance -> obj;
test_incorrect_inheritance -> NeuralType;
test_incorrect_inheritance -> zeros;
test_incorrect_inheritance -> ElementType;
test_port_definition_rejection -> InputPortDefinitionRejection;
test_port_definition_rejection -> OutputPortDefinitionRejection;
test_port_definition_rejection -> typecheck;
test_port_definition_rejection -> raises;
test_port_definition_rejection -> obj;
test_port_definition_rejection -> NeuralType;
test_port_definition_rejection -> zeros;
test_port_definition_rejection -> ElementType;
test_port_shape_rejection -> InputPortShapeRejection;
test_port_shape_rejection -> OutputPortShapeRejection;
test_port_shape_rejection -> typecheck;
test_port_shape_rejection -> raises;
test_port_shape_rejection -> obj;
test_port_shape_rejection -> NeuralType;
test_port_shape_rejection -> zeros;
test_port_shape_rejection -> ElementType;
test_positional_args -> InputPositional;
test_positional_args -> OutputPositionalPassthrough;
test_positional_args -> obj;
test_positional_args -> typecheck;
test_positional_args -> raises;
test_positional_args -> zeros;
test_positional_args -> sum;
test_positional_args -> tensor;
test_positional_args -> NeuralType;
test_positional_args -> ElementType;
test_optional_types -> InputOptionalTypes;
test_optional_types -> obj;
test_optional_types -> typecheck;
test_optional_types -> sum;
test_optional_types -> tensor;
test_optional_types -> hasattr;
test_optional_types -> zeros;
test_optional_types -> full;
test_optional_types -> NeuralType;
test_optional_types -> ElementType;
test_input_output_neural_types -> NodeA;
test_input_output_neural_types -> NodeB;
test_input_output_neural_types -> nodeA;
test_input_output_neural_types -> nodeB;
test_input_output_neural_types -> typecheck;
test_input_output_neural_types -> Size;
test_input_output_neural_types -> compare;
test_input_output_neural_types -> randn;
test_input_output_neural_types -> max;
test_input_output_neural_types -> zeros;
test_input_output_neural_types -> NeuralType;
test_input_output_neural_types -> LabelsType;
test_input_output_neural_types -> ElementType;
test_input_output_neural_types -> LogitsType;
test_nested_input_output_neural_types -> NestedNodeA;
test_nested_input_output_neural_types -> NestedNodeB;
test_nested_input_output_neural_types -> nodeA;
test_nested_input_output_neural_types -> nodeB;
test_nested_input_output_neural_types -> recursive_assert_shape;
test_nested_input_output_neural_types -> typecheck;
test_nested_input_output_neural_types -> Size;
test_nested_input_output_neural_types -> compare;
test_nested_input_output_neural_types -> randn;
test_nested_input_output_neural_types -> max;
test_nested_input_output_neural_types -> zeros;
test_nested_input_output_neural_types -> NeuralType;
test_nested_input_output_neural_types -> LogprobsType;
test_nested_input_output_neural_types -> LabelsType;
test_nested_input_output_neural_types -> LogitsType;
test_nested_input_output_neural_types -> ElementType;
test_nested_input_output_neural_types_ignore_collections -> NestedNodeA;
test_nested_input_output_neural_types_ignore_collections -> NestedNodeB;
test_nested_input_output_neural_types_ignore_collections -> nodeA;
test_nested_input_output_neural_types_ignore_collections -> nodeB;
test_nested_input_output_neural_types_ignore_collections -> recursive_assert_shape;
test_nested_input_output_neural_types_ignore_collections -> typecheck;
test_nested_input_output_neural_types_ignore_collections -> Size;
test_nested_input_output_neural_types_ignore_collections -> compare;
test_nested_input_output_neural_types_ignore_collections -> randn;
test_nested_input_output_neural_types_ignore_collections -> max;
test_nested_input_output_neural_types_ignore_collections -> zeros;
test_nested_input_output_neural_types_ignore_collections -> NeuralType;
test_nested_input_output_neural_types_ignore_collections -> LogprobsType;
test_nested_input_output_neural_types_ignore_collections -> LabelsType;
test_nested_input_output_neural_types_ignore_collections -> ElementType;
test_nested_input_output_neural_types_ignore_collections -> LogitsType;
test_nested_mixed_input_output_neural_types -> NestedMixedNodeA;
test_nested_mixed_input_output_neural_types -> NestedMixedNodeB;
test_nested_mixed_input_output_neural_types -> nodeA;
test_nested_mixed_input_output_neural_types -> nodeB;
test_nested_mixed_input_output_neural_types -> compare;
test_nested_mixed_input_output_neural_types -> recursive_assert_shape;
test_nested_mixed_input_output_neural_types -> typecheck;
test_nested_mixed_input_output_neural_types -> NeuralType;
test_nested_mixed_input_output_neural_types -> Size;
test_nested_mixed_input_output_neural_types -> randn;
test_nested_mixed_input_output_neural_types -> max;
test_nested_mixed_input_output_neural_types -> zeros;
test_nested_mixed_input_output_neural_types -> LogprobsType;
test_nested_mixed_input_output_neural_types -> LabelsType;
test_nested_mixed_input_output_neural_types -> ElementType;
test_nested_mixed_input_output_neural_types -> LogitsType;
test_multi_forward_type -> AdaptiveTypeCheck;
test_multi_forward_type -> zeros;
test_multi_forward_type -> full;
test_multi_forward_type -> obj;
test_multi_forward_type -> all;
test_multi_forward_type -> typecheck;
test_multi_forward_type -> compare;
test_multi_forward_type -> raises;
test_multi_forward_type -> eval_forward;
test_multi_forward_type -> infer_forward;
test_multi_forward_type -> NeuralType;
test_multi_forward_type -> train_forward;
test_multi_forward_type -> ValueError;
test_multi_forward_type -> ElementType;
test_multi_forward_type -> ChannelType;
eval_forward -> typecheck;
eval_forward -> NeuralType;
eval_forward -> ElementType;
eval_forward -> ChannelType;
infer_forward -> typecheck;
infer_forward -> NeuralType;
infer_forward -> ChannelType;
test_input_type_override -> InputTypesOverride;
test_input_type_override -> obj;
test_input_type_override -> forward;
test_input_type_override -> typecheck;
test_input_type_override -> sum;
test_input_type_override -> tensor;
test_input_type_override -> hasattr;
test_input_type_override -> zeros;
test_input_type_override -> NeuralType;
test_input_type_override -> ElementType;
test_input_type_override -> CategoricalValuesType;
test_output_type_override -> OutputTypes;
test_output_type_override -> obj;
test_output_type_override -> forward;
test_output_type_override -> hasattr;
test_output_type_override -> typecheck;
test_output_type_override -> sum;
test_output_type_override -> tensor;
test_output_type_override -> compare;
test_output_type_override -> zeros;
test_output_type_override -> NeuralType;
test_output_type_override -> ElementType;
test_output_type_override -> CategoricalValuesType;
test_multi_type_override -> AdaptiveTypeCheck;
test_multi_type_override -> zeros;
test_multi_type_override -> full;
test_multi_type_override -> obj;
test_multi_type_override -> all;
test_multi_type_override -> eval_forward;
test_multi_type_override -> train_forward;
test_multi_type_override -> typecheck;
test_multi_type_override -> compare;
test_multi_type_override -> raises;
test_multi_type_override -> infer_forward;
test_multi_type_override -> NeuralType;
test_multi_type_override -> ChannelType;
test_multi_type_override -> ElementType;
test_disable_typecheck -> typecheck;
test_disable_typecheck -> disable_checks;
test_disable_typecheck -> InputOutputTypes;
test_disable_typecheck -> obj;
test_disable_typecheck -> zeros;
test_disable_typecheck -> sum;
test_disable_typecheck -> tensor;
test_disable_typecheck -> hasattr;
test_disable_typecheck -> NeuralType;
test_disable_typecheck -> ElementType;
test_nested_shape_mismatch -> NestedShapeMismatch;
test_nested_shape_mismatch -> obj;
test_nested_shape_mismatch -> recursive_assert_shape;
test_nested_shape_mismatch -> recursive_assert_homogeneous_type;
test_nested_shape_mismatch -> typecheck;
test_nested_shape_mismatch -> zeros;
test_nested_shape_mismatch -> Size;
test_nested_shape_mismatch -> NeuralType;
test_nested_shape_mismatch -> raises;
test_nested_shape_mismatch -> bb;
test_nested_shape_mismatch -> ElementType;
bb -> zeros;
test_nested_mixed_shape_mismatch -> NestedMixedShapeMismatch;
test_nested_mixed_shape_mismatch -> obj;
test_nested_mixed_shape_mismatch -> recursive_assert_shape;
test_nested_mixed_shape_mismatch -> recursive_assert_homogeneous_type;
test_nested_mixed_shape_mismatch -> typecheck;
test_nested_mixed_shape_mismatch -> zeros;
test_nested_mixed_shape_mismatch -> Size;
test_nested_mixed_shape_mismatch -> NeuralType;
test_nested_mixed_shape_mismatch -> raises;
test_nested_mixed_shape_mismatch -> bb;
test_nested_mixed_shape_mismatch -> ElementType;
test_input_container_neural_types -> NodeA;
test_input_container_neural_types -> nodeA;
test_input_container_neural_types -> compare;
test_input_container_neural_types -> typecheck;
test_input_container_neural_types -> NeuralType;
test_input_container_neural_types -> randn;
test_input_container_neural_types -> LogitsType;
test_input_container_neural_types -> list;
test_input_container_neural_types -> zeros;
test_input_container_neural_types -> ElementType;
test_input_container_neural_types_incorrect -> NodeA;
test_input_container_neural_types_incorrect -> typecheck;
test_input_container_neural_types_incorrect -> raises;
test_input_container_neural_types_incorrect -> nodeA;
test_input_container_neural_types_incorrect -> randn;
test_input_container_neural_types_incorrect -> NeuralType;
test_input_container_neural_types_incorrect -> list;
test_input_container_neural_types_incorrect -> LogitsType;
test_input_container_neural_types_incorrect -> zeros;
test_input_container_neural_types_incorrect -> ElementType;
test_output_container_neural_types_incorrect -> NodeA;
test_output_container_neural_types_incorrect -> typecheck;
test_output_container_neural_types_incorrect -> raises;
test_output_container_neural_types_incorrect -> nodeA;
test_output_container_neural_types_incorrect -> randn;
test_output_container_neural_types_incorrect -> NeuralType;
test_output_container_neural_types_incorrect -> zeros;
test_output_container_neural_types_incorrect -> ElementType;
test_output_container_neural_types_incorrect -> LogitsType;
test_output_container_neural_types_no_tuple_wrap -> NodeA;
test_output_container_neural_types_no_tuple_wrap -> nodeA;
test_output_container_neural_types_no_tuple_wrap -> range;
test_output_container_neural_types_no_tuple_wrap -> typecheck;
test_output_container_neural_types_no_tuple_wrap -> len;
test_output_container_neural_types_no_tuple_wrap -> compare;
test_output_container_neural_types_no_tuple_wrap -> randn;
test_output_container_neural_types_no_tuple_wrap -> zeros;
test_output_container_neural_types_no_tuple_wrap -> NeuralType;
test_output_container_neural_types_no_tuple_wrap -> LogitsType;
test_output_container_neural_types_no_tuple_wrap -> ElementType;
test_output_container_neural_types_explicit_tuple_wrap -> NodeA;
test_output_container_neural_types_explicit_tuple_wrap -> nodeA;
test_output_container_neural_types_explicit_tuple_wrap -> range;
test_output_container_neural_types_explicit_tuple_wrap -> typecheck;
test_output_container_neural_types_explicit_tuple_wrap -> len;
test_output_container_neural_types_explicit_tuple_wrap -> compare;
test_output_container_neural_types_explicit_tuple_wrap -> randn;
test_output_container_neural_types_explicit_tuple_wrap -> zeros;
test_output_container_neural_types_explicit_tuple_wrap -> NeuralType;
test_output_container_neural_types_explicit_tuple_wrap -> LogitsType;
test_output_container_neural_types_explicit_tuple_wrap -> ElementType;
test_disable_semantic_types_input_output -> InputOutputTypes;
test_disable_semantic_types_input_output -> obj;
test_disable_semantic_types_input_output -> typecheck;
test_disable_semantic_types_input_output -> sum;
test_disable_semantic_types_input_output -> tensor;
test_disable_semantic_types_input_output -> compare;
test_disable_semantic_types_input_output -> raises;
test_disable_semantic_types_input_output -> zeros;
test_disable_semantic_types_input_output -> NeuralType;
test_disable_semantic_types_input_output -> disable_semantic_checks;
test_disable_semantic_types_input_output -> LabelsType;
test_disable_semantic_types_input_output -> LogprobsType;
test_module_registered_adapter_by_class_path -> get_classpath;
test_module_registered_adapter_by_class_path -> get_registered_adapter;
test_module_registered_adapter_by_class -> get_registered_adapter;
test_module_registered_adapter_by_adapter_class -> get_registered_adapter;
test_single_adapter -> DefaultModuleAdapter;
test_single_adapter -> num_params;
test_single_adapter -> add_adapter;
test_single_adapter -> get_adapter_cfg;
test_single_adapter -> get_model_config;
test_single_adapter -> DefaultAdapterModel;
test_multiple_adapter -> DefaultModuleAdapter;
test_multiple_adapter -> num_params;
test_multiple_adapter -> add_adapter;
test_multiple_adapter -> get_adapter_cfg;
test_multiple_adapter -> parametrize;
test_multiple_adapter -> get_model_config;
test_multiple_adapter -> update_adapter_global_cfg;
test_multiple_adapter -> DefaultAdapterModel;
test_forward_linear_pre -> manual_seed;
test_forward_linear_pre -> randn;
test_forward_linear_pre -> DefaultModuleAdapter;
test_forward_linear_pre -> model;
test_forward_linear_pre -> add_adapter;
test_forward_linear_pre -> mean;
test_forward_linear_pre -> get_adapter_cfg;
test_forward_linear_pre -> abs;
test_forward_linear_pre -> parametrize;
test_forward_linear_pre -> get_model_config;
test_forward_linear_pre -> update_adapter_global_cfg;
test_forward_linear_pre -> DefaultAdapterModel;
test_forward_linear_post -> manual_seed;
test_forward_linear_post -> randn;
test_forward_linear_post -> DefaultModuleAdapter;
test_forward_linear_post -> model;
test_forward_linear_post -> add_adapter;
test_forward_linear_post -> mean;
test_forward_linear_post -> get_adapter_cfg;
test_forward_linear_post -> abs;
test_forward_linear_post -> parametrize;
test_forward_linear_post -> get_model_config;
test_forward_linear_post -> update_adapter_global_cfg;
test_forward_linear_post -> DefaultAdapterModel;
test_multi_adapter_forward -> manual_seed;
test_multi_adapter_forward -> randn;
test_multi_adapter_forward -> DefaultModuleAdapter;
test_multi_adapter_forward -> model;
test_multi_adapter_forward -> add_adapter;
test_multi_adapter_forward -> mean;
test_multi_adapter_forward -> get_adapter_cfg;
test_multi_adapter_forward -> abs;
test_multi_adapter_forward -> parametrize;
test_multi_adapter_forward -> get_model_config;
test_multi_adapter_forward -> update_adapter_global_cfg;
test_multi_adapter_forward -> DefaultAdapterModel;
test_multi_adapter_partial_forward -> manual_seed;
test_multi_adapter_partial_forward -> randn;
test_multi_adapter_partial_forward -> DefaultModuleAdapter;
test_multi_adapter_partial_forward -> model;
test_multi_adapter_partial_forward -> add_adapter;
test_multi_adapter_partial_forward -> set_enabled_adapters;
test_multi_adapter_partial_forward -> mean;
test_multi_adapter_partial_forward -> get_adapter_cfg;
test_multi_adapter_partial_forward -> abs;
test_forward_unfrozen_adapters -> DefaultModuleAdapter;
test_forward_unfrozen_adapters -> num_params;
test_forward_unfrozen_adapters -> add_adapter;
test_forward_unfrozen_adapters -> freeze;
test_forward_unfrozen_adapters -> unfreeze_enabled_adapters;
test_forward_unfrozen_adapters -> named_parameters;
test_forward_unfrozen_adapters -> named_modules;
test_forward_unfrozen_adapters -> isinstance;
test_forward_unfrozen_adapters -> get_adapter_cfg;
test_forward_unfrozen_adapters -> numel;
test_forward_unfrozen_adapters -> parametrize;
test_forward_unfrozen_adapters -> get_model_config;
test_forward_unfrozen_adapters -> update_adapter_global_cfg;
test_forward_unfrozen_adapters -> DefaultAdapterModel;
test_forward_linear_no_strategy -> manual_seed;
test_forward_linear_no_strategy -> randn;
test_forward_linear_no_strategy -> DefaultModuleAdapter;
test_forward_linear_no_strategy -> add_adapter;
test_forward_linear_no_strategy -> raises;
test_forward_linear_no_strategy -> model;
test_forward_linear_no_strategy -> get_adapter_cfg;
test_forward_linear_no_strategy -> get_enabled_adapters;
test_forward_linear_no_strategy -> get_model_config;
test_forward_linear_no_strategy -> update_adapter_global_cfg;
test_forward_linear_no_strategy -> DefaultAdapterModel;
test_forward_linear_replaced_strategy -> manual_seed;
test_forward_linear_replaced_strategy -> randn;
test_forward_linear_replaced_strategy -> DefaultModuleAdapter;
test_forward_linear_replaced_strategy -> add_adapter;
test_forward_linear_replaced_strategy -> MultiplyAdapterStrategy;
test_forward_linear_replaced_strategy -> model;
test_forward_linear_replaced_strategy -> any;
test_forward_linear_replaced_strategy -> tensor;
test_forward_linear_replaced_strategy -> adapter;
test_forward_linear_replaced_strategy -> get_adapter_cfg;
test_forward_linear_replaced_strategy -> get_enabled_adapters;
test_forward_linear_replaced_strategy -> get_model_config;
test_forward_linear_replaced_strategy -> update_adapter_global_cfg;
test_forward_linear_replaced_strategy -> DefaultAdapterModel;
update_adapter_global_cfg -> _prepare_default_adapter_config;
default_adapter_module_name -> _get_global_cfg;
default_adapter_module_name -> get;
default_adapter_module_name -> append;
test_base_model_no_support_for_adapters -> get_verbosity;
test_base_model_no_support_for_adapters -> set_verbosity;
test_base_model_no_support_for_adapters -> set_level;
test_base_model_no_support_for_adapters -> get_model_config;
test_base_model_no_support_for_adapters -> DefaultAdapterModel;
test_base_model_no_support_for_adapters -> clear;
test_base_model_no_support_for_adapters -> get_enabled_adapters;
test_base_model_no_support_for_adapters -> raises;
test_base_model_no_support_for_adapters -> add_adapter;
test_base_model_no_support_for_adapters -> get_adapter_cfg;
test_base_model_replace_adapter_compatible_modules -> get_model_config;
test_base_model_replace_adapter_compatible_modules -> DefaultAdapterModel;
test_base_model_replace_adapter_compatible_modules -> replace_adapter_compatible_modules;
test_base_model_replace_adapter_compatible_modules -> isinstance;
test_base_model_replace_adapter_compatible_modules -> add_adapter;
test_base_model_replace_adapter_compatible_modules -> raises;
test_base_model_replace_adapter_compatible_modules -> is_adapter_available;
test_base_model_replace_adapter_compatible_modules -> get_adapter_cfg;
test_single_encoder_module_adapter -> get_model_config;
test_single_encoder_module_adapter -> DefaultAdapterModel;
test_single_encoder_module_adapter -> add_adapter;
test_single_encoder_module_adapter -> isinstance;
test_single_encoder_module_adapter -> is_adapter_available;
test_single_encoder_module_adapter -> TemporaryDirectory;
test_single_encoder_module_adapter -> join;
test_single_encoder_module_adapter -> restore_from;
test_single_encoder_module_adapter -> len;
test_single_encoder_module_adapter -> get_adapter_cfg;
test_single_encoder_module_adapter -> save_to;
test_single_encoder_module_adapter -> move;
test_single_encoder_module_adapter -> get_enabled_adapters;
test_single_decoder_module_adapter -> get_model_config;
test_single_decoder_module_adapter -> DefaultAdapterModel;
test_single_decoder_module_adapter -> add_adapter;
test_single_decoder_module_adapter -> isinstance;
test_single_decoder_module_adapter -> is_adapter_available;
test_single_decoder_module_adapter -> TemporaryDirectory;
test_single_decoder_module_adapter -> join;
test_single_decoder_module_adapter -> restore_from;
test_single_decoder_module_adapter -> len;
test_single_decoder_module_adapter -> get_adapter_cfg;
test_single_decoder_module_adapter -> save_to;
test_single_decoder_module_adapter -> move;
test_single_decoder_module_adapter -> get_enabled_adapters;
test_single_adapter_default_metaconfig -> get_model_config;
test_single_adapter_default_metaconfig -> DefaultAdapterModel;
test_single_adapter_default_metaconfig -> add_adapter;
test_single_adapter_default_metaconfig -> get_adapter_cfg;
test_single_adapter_default_metaconfig -> get_enabled_adapters;
test_all_disabled_adapters -> get_model_config;
test_all_disabled_adapters -> update_adapter_global_cfg;
test_all_disabled_adapters -> DefaultAdapterModel;
test_all_disabled_adapters -> add_adapter;
test_all_disabled_adapters -> is_adapter_available;
test_all_disabled_adapters -> get_adapter_cfg;
test_set_enabled_all_adapters_with_no_name -> get_model_config;
test_set_enabled_all_adapters_with_no_name -> update_adapter_global_cfg;
test_set_enabled_all_adapters_with_no_name -> DefaultAdapterModel;
test_set_enabled_all_adapters_with_no_name -> add_adapter;
test_set_enabled_all_adapters_with_no_name -> set_enabled_adapters;
test_set_enabled_all_adapters_with_no_name -> is_adapter_available;
test_set_enabled_all_adapters_with_no_name -> len;
test_set_enabled_all_adapters_with_no_name -> get_adapter_cfg;
test_set_enabled_all_adapters_with_no_name -> get_enabled_adapters;
test_set_enabled_all_adapters_with_no_name_only_decoder -> get_model_config;
test_set_enabled_all_adapters_with_no_name_only_decoder -> update_adapter_global_cfg;
test_set_enabled_all_adapters_with_no_name_only_decoder -> DefaultAdapterModel;
test_set_enabled_all_adapters_with_no_name_only_decoder -> add_adapter;
test_set_enabled_all_adapters_with_no_name_only_decoder -> set_enabled_adapters;
test_set_enabled_all_adapters_with_no_name_only_decoder -> is_adapter_available;
test_set_enabled_all_adapters_with_no_name_only_decoder -> len;
test_set_enabled_all_adapters_with_no_name_only_decoder -> get_adapter_cfg;
test_set_enabled_all_adapters_with_no_name_only_decoder -> get_enabled_adapters;
test_enc_dec_enabled_adapters -> get_model_config;
test_enc_dec_enabled_adapters -> update_adapter_global_cfg;
test_enc_dec_enabled_adapters -> DefaultAdapterModel;
test_enc_dec_enabled_adapters -> add_adapter;
test_enc_dec_enabled_adapters -> get_adapter_cfg;
test_multiple_adapter_non_unique_adapter_name -> get_model_config;
test_multiple_adapter_non_unique_adapter_name -> update_adapter_global_cfg;
test_multiple_adapter_non_unique_adapter_name -> DefaultAdapterModel;
test_multiple_adapter_non_unique_adapter_name -> add_adapter;
test_multiple_adapter_non_unique_adapter_name -> raises;
test_multiple_adapter_non_unique_adapter_name -> get_adapter_cfg;
test_multi_adapter_partial_forward_global_module_different -> parametrize;
test_multi_adapter_partial_forward_global_module_different -> manual_seed;
test_multi_adapter_partial_forward_global_module_different -> randn;
test_multi_adapter_partial_forward_global_module_different -> get_model_config;
test_multi_adapter_partial_forward_global_module_different -> update_adapter_global_cfg;
test_multi_adapter_partial_forward_global_module_different -> DefaultAdapterModel;
test_multi_adapter_partial_forward_global_module_different -> model;
test_multi_adapter_partial_forward_global_module_different -> add_adapter;
test_multi_adapter_partial_forward_global_module_different -> set_enabled_adapters;
test_multi_adapter_partial_forward_global_module_different -> mean;
test_multi_adapter_partial_forward_global_module_different -> abs;
test_multi_adapter_partial_forward_global_module_different -> get_adapter_cfg;
test_multi_adapter_partial_forward_global_module_same_output -> parametrize;
test_multi_adapter_partial_forward_global_module_same_output -> manual_seed;
test_multi_adapter_partial_forward_global_module_same_output -> randn;
test_multi_adapter_partial_forward_global_module_same_output -> get_model_config;
test_multi_adapter_partial_forward_global_module_same_output -> update_adapter_global_cfg;
test_multi_adapter_partial_forward_global_module_same_output -> DefaultAdapterModel;
test_multi_adapter_partial_forward_global_module_same_output -> model;
test_multi_adapter_partial_forward_global_module_same_output -> add_adapter;
test_multi_adapter_partial_forward_global_module_same_output -> set_enabled_adapters;
test_multi_adapter_partial_forward_global_module_same_output -> resolve_adapter_module_name_;
test_multi_adapter_partial_forward_global_module_same_output -> get_enabled_adapters;
test_multi_adapter_partial_forward_global_module_same_output -> mean;
test_multi_adapter_partial_forward_global_module_same_output -> get_adapter_cfg;
test_multi_adapter_partial_forward_global_module_same_output -> abs;
test_save_adapter_with_no_adapters_added -> get_model_config;
test_save_adapter_with_no_adapters_added -> DefaultAdapterModel;
test_save_adapter_with_no_adapters_added -> raises;
test_save_adapter_with_no_adapters_added -> save_adapters;
test_single_decoder_save_load_adapter_only_exact_name -> get_model_config;
test_single_decoder_save_load_adapter_only_exact_name -> DefaultAdapterModel;
test_single_decoder_save_load_adapter_only_exact_name -> add_adapter;
test_single_decoder_save_load_adapter_only_exact_name -> isinstance;
test_single_decoder_save_load_adapter_only_exact_name -> state_dict;
test_single_decoder_save_load_adapter_only_exact_name -> zip;
test_single_decoder_save_load_adapter_only_exact_name -> is_adapter_available;
test_single_decoder_save_load_adapter_only_exact_name -> TemporaryDirectory;
test_single_decoder_save_load_adapter_only_exact_name -> join;
test_single_decoder_save_load_adapter_only_exact_name -> getsize;
test_single_decoder_save_load_adapter_only_exact_name -> load_adapters;
test_single_decoder_save_load_adapter_only_exact_name -> len;
test_single_decoder_save_load_adapter_only_exact_name -> keys;
test_single_decoder_save_load_adapter_only_exact_name -> get_adapter_cfg;
test_single_decoder_save_load_adapter_only_exact_name -> save_adapters;
test_single_decoder_save_load_adapter_only_exact_name -> save_to;
test_single_decoder_save_load_adapter_only_exact_name -> move;
test_single_decoder_save_load_adapter_only_exact_name -> get_enabled_adapters;
test_single_decoder_save_load_adapter_only_exact_name -> mean;
test_single_decoder_save_load_adapter_only_exact_name -> abs;
test_single_decoder_save_load_adapter_only_global_name -> parametrize;
test_single_decoder_save_load_adapter_only_global_name -> get_model_config;
test_single_decoder_save_load_adapter_only_global_name -> DefaultAdapterModel;
test_single_decoder_save_load_adapter_only_global_name -> add_adapter;
test_single_decoder_save_load_adapter_only_global_name -> isinstance;
test_single_decoder_save_load_adapter_only_global_name -> state_dict;
test_single_decoder_save_load_adapter_only_global_name -> zip;
test_single_decoder_save_load_adapter_only_global_name -> is_adapter_available;
test_single_decoder_save_load_adapter_only_global_name -> TemporaryDirectory;
test_single_decoder_save_load_adapter_only_global_name -> join;
test_single_decoder_save_load_adapter_only_global_name -> getsize;
test_single_decoder_save_load_adapter_only_global_name -> load_adapters;
test_single_decoder_save_load_adapter_only_global_name -> len;
test_single_decoder_save_load_adapter_only_global_name -> keys;
test_single_decoder_save_load_adapter_only_global_name -> get_adapter_cfg;
test_single_decoder_save_load_adapter_only_global_name -> save_adapters;
test_single_decoder_save_load_adapter_only_global_name -> save_to;
test_single_decoder_save_load_adapter_only_global_name -> move;
test_single_decoder_save_load_adapter_only_global_name -> get_enabled_adapters;
test_single_decoder_save_load_adapter_only_global_name -> mean;
test_single_decoder_save_load_adapter_only_global_name -> abs;
test_multiple_decoder_save_load_adapter_only_exact_name -> get_model_config;
test_multiple_decoder_save_load_adapter_only_exact_name -> DefaultAdapterModel;
test_multiple_decoder_save_load_adapter_only_exact_name -> add_adapter;
test_multiple_decoder_save_load_adapter_only_exact_name -> isinstance;
test_multiple_decoder_save_load_adapter_only_exact_name -> state_dict;
test_multiple_decoder_save_load_adapter_only_exact_name -> zip;
test_multiple_decoder_save_load_adapter_only_exact_name -> TemporaryDirectory;
test_multiple_decoder_save_load_adapter_only_exact_name -> join;
test_multiple_decoder_save_load_adapter_only_exact_name -> getsize;
test_multiple_decoder_save_load_adapter_only_exact_name -> load_adapters;
test_multiple_decoder_save_load_adapter_only_exact_name -> len;
test_multiple_decoder_save_load_adapter_only_exact_name -> is_adapter_available;
test_multiple_decoder_save_load_adapter_only_exact_name -> keys;
test_multiple_decoder_save_load_adapter_only_exact_name -> get_adapter_cfg;
test_multiple_decoder_save_load_adapter_only_exact_name -> save_adapters;
test_multiple_decoder_save_load_adapter_only_exact_name -> save_to;
test_multiple_decoder_save_load_adapter_only_exact_name -> move;
test_multiple_decoder_save_load_adapter_only_exact_name -> get_enabled_adapters;
test_multiple_decoder_save_load_adapter_only_exact_name -> mean;
test_multiple_decoder_save_load_adapter_only_exact_name -> abs;
test_multiple_save_load_adapter_with_multiple_load -> parametrize;
test_multiple_save_load_adapter_with_multiple_load -> get_model_config;
test_multiple_save_load_adapter_with_multiple_load -> DefaultAdapterModel;
test_multiple_save_load_adapter_with_multiple_load -> add_adapter;
test_multiple_save_load_adapter_with_multiple_load -> isinstance;
test_multiple_save_load_adapter_with_multiple_load -> get_enabled_adapters;
test_multiple_save_load_adapter_with_multiple_load -> zip;
test_multiple_save_load_adapter_with_multiple_load -> len;
test_multiple_save_load_adapter_with_multiple_load -> TemporaryDirectory;
test_multiple_save_load_adapter_with_multiple_load -> join;
test_multiple_save_load_adapter_with_multiple_load -> getsize;
test_multiple_save_load_adapter_with_multiple_load -> load_adapters;
test_multiple_save_load_adapter_with_multiple_load -> is_adapter_available;
test_multiple_save_load_adapter_with_multiple_load -> state_dict;
test_multiple_save_load_adapter_with_multiple_load -> keys;
test_multiple_save_load_adapter_with_multiple_load -> get_adapter_cfg;
test_multiple_save_load_adapter_with_multiple_load -> print;
test_multiple_save_load_adapter_with_multiple_load -> save_adapters;
test_multiple_save_load_adapter_with_multiple_load -> save_to;
test_multiple_save_load_adapter_with_multiple_load -> move;
test_multiple_save_load_adapter_with_multiple_load -> mean;
test_multiple_save_load_adapter_with_multiple_load -> abs;
test_multiple_decoder_save_load_adapter_dual_name -> get_model_config;
test_multiple_decoder_save_load_adapter_dual_name -> DefaultAdapterModel;
test_multiple_decoder_save_load_adapter_dual_name -> add_adapter;
test_multiple_decoder_save_load_adapter_dual_name -> isinstance;
test_multiple_decoder_save_load_adapter_dual_name -> state_dict;
test_multiple_decoder_save_load_adapter_dual_name -> zip;
test_multiple_decoder_save_load_adapter_dual_name -> TemporaryDirectory;
test_multiple_decoder_save_load_adapter_dual_name -> join;
test_multiple_decoder_save_load_adapter_dual_name -> getsize;
test_multiple_decoder_save_load_adapter_dual_name -> load_adapters;
test_multiple_decoder_save_load_adapter_dual_name -> len;
test_multiple_decoder_save_load_adapter_dual_name -> is_adapter_available;
test_multiple_decoder_save_load_adapter_dual_name -> keys;
test_multiple_decoder_save_load_adapter_dual_name -> get_adapter_cfg;
test_multiple_decoder_save_load_adapter_dual_name -> save_adapters;
test_multiple_decoder_save_load_adapter_dual_name -> save_to;
test_multiple_decoder_save_load_adapter_dual_name -> move;
test_multiple_decoder_save_load_adapter_dual_name -> get_enabled_adapters;
test_multiple_decoder_save_load_adapter_dual_name -> mean;
test_multiple_decoder_save_load_adapter_dual_name -> abs;
test_single_decoder_save_load_adapter_only_partial_name -> get_model_config;
test_single_decoder_save_load_adapter_only_partial_name -> DefaultAdapterModel;
test_single_decoder_save_load_adapter_only_partial_name -> add_adapter;
test_single_decoder_save_load_adapter_only_partial_name -> isinstance;
test_single_decoder_save_load_adapter_only_partial_name -> state_dict;
test_single_decoder_save_load_adapter_only_partial_name -> zip;
test_single_decoder_save_load_adapter_only_partial_name -> is_adapter_available;
test_single_decoder_save_load_adapter_only_partial_name -> TemporaryDirectory;
test_single_decoder_save_load_adapter_only_partial_name -> join;
test_single_decoder_save_load_adapter_only_partial_name -> getsize;
test_single_decoder_save_load_adapter_only_partial_name -> load_adapters;
test_single_decoder_save_load_adapter_only_partial_name -> len;
test_single_decoder_save_load_adapter_only_partial_name -> keys;
test_single_decoder_save_load_adapter_only_partial_name -> get_adapter_cfg;
test_single_decoder_save_load_adapter_only_partial_name -> save_adapters;
test_single_decoder_save_load_adapter_only_partial_name -> save_to;
test_single_decoder_save_load_adapter_only_partial_name -> move;
test_single_decoder_save_load_adapter_only_partial_name -> get_enabled_adapters;
test_single_decoder_save_load_adapter_only_partial_name -> mean;
test_single_decoder_save_load_adapter_only_partial_name -> abs;
test_ResidualAddAdapterStrategyConfig -> assert_dataclass_signature_match;
test_strategy_default -> manual_seed;
test_strategy_default -> randn;
test_strategy_default -> DefaultModuleAdapter;
test_strategy_default -> add_adapter;
test_strategy_default -> ResidualAddAdapterStrategy;
test_strategy_default -> no_grad;
test_strategy_default -> forward;
test_strategy_default -> get_adapter_cfg;
test_strategy_default -> get_enabled_adapters;
test_strategy_default -> mean;
test_strategy_default -> abs;
test_strategy_stochasic_depth -> parametrize;
test_strategy_stochasic_depth -> manual_seed;
test_strategy_stochasic_depth -> randn;
test_strategy_stochasic_depth -> DefaultModuleAdapter;
test_strategy_stochasic_depth -> add_adapter;
test_strategy_stochasic_depth -> set_enabled_adapters;
test_strategy_stochasic_depth -> module;
test_strategy_stochasic_depth -> ResidualAddAdapterStrategy;
test_strategy_stochasic_depth -> eval;
test_strategy_stochasic_depth -> train;
test_strategy_stochasic_depth -> sum;
test_strategy_stochasic_depth -> inference_mode;
test_strategy_stochasic_depth -> forward;
test_strategy_stochasic_depth -> get_adapter_cfg;
test_strategy_stochasic_depth -> get_enabled_adapters;
test_strategy_stochasic_depth -> mean;
test_strategy_stochasic_depth -> abs;
test_strategy_l2_lambda -> manual_seed;
test_strategy_l2_lambda -> randn;
test_strategy_l2_lambda -> DefaultModuleAdapter;
test_strategy_l2_lambda -> add_adapter;
test_strategy_l2_lambda -> train;
test_strategy_l2_lambda -> ResidualAddAdapterStrategy;
test_strategy_l2_lambda -> no_grad;
test_strategy_l2_lambda -> reset_registry;
test_strategy_l2_lambda -> forward;
test_strategy_l2_lambda -> get_module_registry;
test_strategy_l2_lambda -> get_adapter_cfg;
test_strategy_l2_lambda -> get_enabled_adapters;
test_strategy_l2_lambda -> is_access_enabled;
test_strategy_l2_lambda -> mean;
test_strategy_l2_lambda -> list;
test_strategy_l2_lambda -> tensor;
test_strategy_l2_lambda -> values;
test_strategy_l2_lambda -> abs;
instantiate_multinode_ddp_if_possible -> device_count;
instantiate_multinode_ddp_if_possible -> Trainer;
instantiate_multinode_ddp_if_possible -> ExpManagerConfig;
instantiate_multinode_ddp_if_possible -> exp_manager;
instantiate_multinode_ddp_if_possible -> structured;
get_rank_info -> print;
get_rank_info -> exit;
get_rank_info -> int;
get_rank_info -> split;
check_model_ranks -> join;
check_model_ranks -> device_count;
check_model_ranks -> range;
check_model_ranks -> format;
check_model_ranks -> get_rank_info;
check_model_ranks -> open;
check_model_ranks -> readlines;
check_model_ranks -> print;
check_model_ranks -> exit;
check_model_ranks -> replace;
run_checks -> cleanup;
run_checks -> instantiate_multinode_ddp_if_possible;
run_checks -> setup_model;
run_checks -> check_model_ranks;
run_checks -> print;
run_checks -> process_args;
run_checks -> test_domain;
run_checks -> load_model;
run_checks -> upload_model_as_unpacked_files;
run_checks -> check_repo_exists;
run_checks -> load_model_from_unpacked_hf_dir;
run_checks -> AppState;
run_checks -> get_model_metadata_from_guid;
run_checks -> rmtree;
process_args -> ArgumentParser;
process_args -> add_argument;
process_args -> parse_args;
_build_import_path -> extend;
_build_import_path -> append;
_build_import_path -> join;
_get_class_from_path -> _build_import_path;
_get_class_from_path -> import_class_by_path;
_get_class_from_path -> isclass;
_get_class_from_path -> isinstance;
_get_class_from_path -> issubclass;
_get_class_from_path -> format_exc;
_test_domain_module_imports -> print;
_test_domain_module_imports -> len;
_test_domain_module_imports -> rfind;
_test_domain_module_imports -> replace;
_test_domain_module_imports -> join;
_test_domain_module_imports -> dir;
_test_domain_module_imports -> import_module;
_test_domain_module_imports -> _get_class_from_path;
_test_domain_module_imports -> format_exc;
_test_domain_module_imports -> append;
test_domain_asr -> _test_domain_module_imports;
test_domain_asr -> exit;
test_domain_nlp -> _test_domain_module_imports;
test_domain_nlp -> exit;
test_domain_tts -> _test_domain_module_imports;
test_domain_tts -> exit;
test_domain -> test_domain_asr;
test_domain -> test_domain_nlp;
test_domain -> test_domain_tts;
test_domain -> RuntimeError;
load_model_from_unpacked_hf_dir -> from_pretrained;
load_model_from_unpacked_hf_dir -> eval;
upload_model_as_single_nemo_file -> push_to_hf_hub;
upload_model_as_unpacked_files -> push_to_hf_hub;
check_repo_exists -> HfApi;
check_repo_exists -> repo_info;
test_stateless_timer -> run_only_on;
test_stateless_timer -> cleanup;
test_stateless_timer -> setup_model;
test_stateless_timer -> info;
get_accuracy_with_lambada -> Exception;
get_accuracy_with_lambada -> open;
get_accuracy_with_lambada -> load;
get_accuracy_with_lambada -> perf_counter;
get_accuracy_with_lambada -> len;
get_accuracy_with_lambada -> lower;
get_accuracy_with_lambada -> forward;
get_accuracy_with_lambada -> append;
get_accuracy_with_lambada -> startswith;
get_accuracy_with_lambada -> query_llm;
get_accuracy_with_lambada -> strip;
get_accuracy_with_lambada -> AccuracyResult;
get_accuracy_with_lambada -> monotonic;
get_accuracy_with_lambada -> isinstance;
get_accuracy_with_lambada -> generate;
get_accuracy_with_lambada -> CommonInferenceParams;
run_in_framework_inference -> MegatronLLMDeployable;
run_in_framework_inference -> DeployPyTriton;
run_in_framework_inference -> deploy;
run_in_framework_inference -> run;
run_in_framework_inference -> NemoQueryLLMPyTorch;
run_in_framework_inference -> query_llm;
run_in_framework_inference -> print;
run_in_framework_inference -> stop;
run_in_framework_inference -> exists;
run_in_framework_inference -> get_deployable;
run_in_framework_inference -> list;
run_in_framework_inference -> Exception;
run_in_framework_inference -> Path;
run_in_framework_inference -> get_accuracy_with_lambada;
run_in_framework_inference -> format;
run_trt_llm_inference -> exists;
run_trt_llm_inference -> mkdir;
run_trt_llm_inference -> TensorRTLLM;
run_trt_llm_inference -> export;
run_trt_llm_inference -> forward;
run_trt_llm_inference -> Exception;
run_trt_llm_inference -> Path;
run_trt_llm_inference -> device_count;
run_trt_llm_inference -> print;
run_trt_llm_inference -> add_prompt_table;
run_trt_llm_inference -> test_cpp_runtime;
run_trt_llm_inference -> DeployPyTriton;
run_trt_llm_inference -> deploy;
run_trt_llm_inference -> run;
run_trt_llm_inference -> NemoQueryLLM;
run_trt_llm_inference -> query_llm;
run_trt_llm_inference -> get_accuracy_with_lambada;
run_trt_llm_inference -> stop;
run_trt_llm_inference -> rmtree;
run_trt_llm_inference -> format;
test_cpp_runtime -> TensorRTLLM;
test_cpp_runtime -> forward;
test_cpp_runtime -> print;
run_inference_tests -> print;
run_inference_tests -> items;
run_inference_tests -> Exception;
run_inference_tests -> lower;
run_inference_tests -> run_trt_llm_inference;
run_inference_tests -> run_in_framework_inference;
run_inference_tests -> format;
run_inference_tests -> UsageError;
run_inference_tests -> setLevel;
run_inference_tests -> run_inference;
run_inference_tests -> optional_bool_to_pass_fail;
mock_triton_settings -> patch;
rest_client -> TestClient;
mock_rest_triton_settings -> patch;
test_custom_values -> dict;
test_custom_values -> TritonSettings;
test_custom_values -> RestTritonSettings;
test_greedy_params -> CompletionRequest;
test_health_check -> get;
test_health_check -> json;
test_convert_numpy -> array;
test_convert_numpy -> convert_numpy;
test_dict_to_str -> dict_to_str;
test_dict_to_str -> isinstance;
test_dict_to_str -> loads;
test_helper_fun -> MagicMock;
test_helper_fun -> patch;
test_helper_fun -> _helper_fun;
test_helper_fun -> assert_called_once;
test_query_llm_async -> patch;
test_query_llm_async -> get_event_loop;
test_query_llm_async -> run_until_complete;
test_query_llm_async -> query_llm_async;
test_completions_v1 -> patch;
test_completions_v1 -> post;
test_completions_v1 -> json;
test_chat_completions_v1 -> patch;
test_chat_completions_v1 -> post;
test_chat_completions_v1 -> json;
test_triton_health_success -> patch;
test_triton_health_success -> MagicMock;
test_triton_health_success -> get;
test_triton_health_success -> json;
test_completions_success -> patch;
test_completions_success -> post;
test_completions_success -> json;
test_completions_standard_format -> patch;
test_completions_standard_format -> post;
test_completions_standard_format -> json;
test_completions_error_handling -> patch;
test_completions_error_handling -> Exception;
test_completions_error_handling -> post;
test_completions_error_handling -> json;
deploy_base -> MockDeployable;
test_initialization_with_checkpoint -> patch;
test_initialization_with_checkpoint -> MagicMock;
test_initialization_with_checkpoint -> MockDeployable;
test_initialization_without_model_or_checkpoint -> raises;
test_initialization_without_model_or_checkpoint -> MockDeployable;
test_initialization_without_model_or_checkpoint -> str;
test_get_module_and_class -> get_module_and_class;
test_is_model_deployable_valid -> MockTritonDeployable;
test_is_model_deployable_valid -> patch;
test_is_model_deployable_valid -> _is_model_deployable;
test_is_model_deployable_invalid -> MagicMock;
test_is_model_deployable_invalid -> patch;
test_is_model_deployable_invalid -> raises;
test_is_model_deployable_invalid -> _is_model_deployable;
test_is_model_deployable_invalid -> str;
deploy_pytriton -> DeployPyTriton;
test_deploy_success -> patch;
test_deploy_success -> deploy;
test_deploy_success -> assert_called_once;
test_deploy_streaming_success -> patch;
test_deploy_streaming_success -> DeployPyTriton;
test_deploy_streaming_success -> deploy;
test_deploy_streaming_success -> assert_called_once;
test_deploy_streaming_success -> MockModel;
test_deploy_failure -> patch;
test_deploy_failure -> Exception;
test_deploy_failure -> deploy;
test_serve_success -> MagicMock;
test_serve_success -> serve;
test_serve_success -> assert_called_once;
test_serve_failure -> raises;
test_serve_failure -> serve;
test_run_success -> MagicMock;
test_run_success -> run;
test_run_success -> assert_called_once;
test_run_failure -> raises;
test_run_failure -> run;
test_stop_success -> MagicMock;
test_stop_success -> stop;
test_stop_success -> assert_called_once;
test_stop_failure -> raises;
test_stop_failure -> stop;
test_nemo_deploy_query -> MockModel;
test_nemo_deploy_query -> DeployPyTriton;
test_nemo_deploy_query -> deploy;
test_nemo_deploy_query -> run;
test_nemo_deploy_query -> NemoQueryLLM;
test_nemo_deploy_query -> query_llm;
test_nemo_deploy_query -> stop;
test_typedict2tensor_basic -> typedict2tensor;
test_typedict2tensor_basic -> all;
test_typedict2tensor_basic -> next;
test_typedict2tensor_basic -> len;
test_typedict2tensor_basic -> isinstance;
test_typedict2tensor_with_overwrite -> typedict2tensor;
test_typedict2tensor_with_overwrite -> all;
test_typedict2tensor_list_types -> typedict2tensor;
test_typedict2tensor_list_types -> next;
test_nemo2_checkpoint_dir -> TemporaryDirectory;
test_nemo2_checkpoint_dir -> makedirs;
test_nemo2_checkpoint_dir -> join;
test_nemo2_checkpoint_dir -> nemo_checkpoint_version;
test_nemo1_checkpoint_dir -> TemporaryDirectory;
test_nemo1_checkpoint_dir -> nemo_checkpoint_version;
test_nemo2_checkpoint_tar -> TemporaryDirectory;
test_nemo2_checkpoint_tar -> join;
test_nemo2_checkpoint_tar -> open;
test_nemo2_checkpoint_tar -> TarInfo;
test_nemo2_checkpoint_tar -> addfile;
test_nemo2_checkpoint_tar -> nemo_checkpoint_version;
test_nemo1_checkpoint_tar -> TemporaryDirectory;
test_nemo1_checkpoint_tar -> join;
test_nemo1_checkpoint_tar -> open;
test_nemo1_checkpoint_tar -> nemo_checkpoint_version;
test_str_list2numpy -> str_list2numpy;
test_str_list2numpy -> isinstance;
test_str_list2numpy -> all;
test_str_list2numpy -> flatten;
test_str_ndarray2list -> reshape;
test_str_ndarray2list -> str_ndarray2list;
test_str_ndarray2list -> isinstance;
test_str_ndarray2list -> array;
test_str_conversion_roundtrip -> str_list2numpy;
test_str_conversion_roundtrip -> str_ndarray2list;
test_ndarray2img -> randint;
test_ndarray2img -> ndarray2img;
test_ndarray2img -> isinstance;
test_ndarray2img -> all;
test_ndarray2img -> len;
test_cast_tensor -> tensor;
test_cast_tensor -> cast_output;
test_cast_tensor -> isinstance;
test_cast_numpy -> array;
test_cast_numpy -> cast_output;
test_cast_numpy -> isinstance;
test_cast_string -> cast_output;
test_cast_string -> isinstance;
test_cast_1d_to_2d -> array;
test_cast_1d_to_2d -> cast_output;
test_broadcast_list_no_distributed -> raises;
test_broadcast_list_no_distributed -> broadcast_list;
test_broadcast_list_distributed -> setattr;
test_broadcast_list_distributed -> broadcast_list;
mock_peft_model -> patch;
mock_peft_model -> MagicMock;
mock_torch_cuda -> patch;
mock_torch_cuda -> tensor;
test_initialization_invalid_task -> raises;
test_initialization_invalid_task -> HuggingFaceLLMDeploy;
test_initialization_no_model -> raises;
test_initialization_no_model -> HuggingFaceLLMDeploy;
test_initialization_with_model_and_tokenizer -> MagicMock;
test_initialization_with_model_and_tokenizer -> HuggingFaceLLMDeploy;
test_initialization_with_model_path -> patch;
test_initialization_with_model_path -> HuggingFaceLLMDeploy;
test_initialization_with_peft_model -> patch;
test_initialization_with_peft_model -> HuggingFaceLLMDeploy;
test_triton_input_output_config -> HuggingFaceLLMDeploy;
test_triton_input_output_config -> any;
test_triton_input_output_config -> len;
test_triton_input_output_config -> MagicMock;
test_generate_without_model -> HuggingFaceLLMDeploy;
test_generate_without_model -> raises;
test_generate_without_model -> generate;
test_generate_without_model -> MagicMock;
test_generate_with_model -> HuggingFaceLLMDeploy;
test_generate_with_model -> generate;
test_generate_with_model -> assert_called_once;
test_generate_with_output_logits_and_scores -> HuggingFaceLLMDeploy;
test_generate_with_output_logits_and_scores -> generate;
test_generate_with_output_logits_and_scores -> isinstance;
test_generate_with_output_logits_and_scores -> tensor;
test_triton_infer_fn -> HuggingFaceLLMDeploy;
test_triton_infer_fn -> triton_infer_fn;
test_triton_infer_fn -> isinstance;
test_triton_infer_fn -> array;
test_triton_infer_fn -> MockRequest;
test_triton_infer_fn -> astype;
test_triton_infer_fn -> mean;
test_triton_infer_fn -> allclose;
test_triton_infer_fn -> rand;
test_triton_infer_fn -> skip;
test_triton_infer_fn -> run_only_on;
test_triton_infer_fn -> export;
test_triton_infer_fn -> MagicMock;
test_triton_infer_fn_with_error -> HuggingFaceLLMDeploy;
test_triton_infer_fn_with_error -> Exception;
test_triton_infer_fn_with_error -> triton_infer_fn;
test_triton_infer_fn_with_error -> array;
test_triton_infer_fn_with_error -> MockRequest;
test_triton_infer_fn_with_error -> str;
test_hf_generate -> run_only_on;
test_hf_generate -> HuggingFaceLLMDeploy;
test_hf_generate -> generate;
test_hf_generate -> len;
test_hf_multigpu_generate -> run_only_on;
test_hf_multigpu_generate -> skip;
test_hf_multigpu_generate -> spawn;
_run_generate -> str;
_run_generate -> init_process_group;
_run_generate -> _hf_generate_ranks;
_run_generate -> destroy_process_group;
_hf_generate_ranks -> set_device;
_hf_generate_ranks -> HuggingFaceLLMDeploy;
_hf_generate_ranks -> barrier;
_hf_generate_ranks -> get_rank;
_hf_generate_ranks -> broadcast;
_hf_generate_ranks -> broadcast_list;
_hf_generate_ranks -> generate;
_hf_generate_ranks -> generate_other_ranks;
_hf_generate_ranks -> tensor;
_hf_generate_ranks -> len;
mock_model_and_tokenizer -> patch;
mock_model_and_tokenizer -> MagicMock;
deployable -> MegatronLLMDeployableNemo2;
test_generate -> run_only_on;
test_generate -> CommonInferenceParams;
test_generate -> object;
test_generate -> MagicMock;
test_generate -> generate;
test_generate -> assert_called_once;
test_generate -> len;
test_apply_chat_template -> run_only_on;
test_apply_chat_template -> apply_chat_template;
test_apply_chat_template -> isinstance;
test_remove_eos_token -> run_only_on;
test_remove_eos_token -> remove_eos_token;
test_str_to_dict -> run_only_on;
test_str_to_dict -> str_to_dict;
test_str_to_dict -> isinstance;
test_triton_input_output -> run_only_on;
test_triton_input_output -> len;
test_base_initialization -> NemoQueryLLMBase;
test_query_llm_basic -> patch;
test_query_llm_basic -> MagicMock;
test_query_llm_basic -> query_llm;
test_query_llm_basic -> isinstance;
test_query_llm_basic -> array;
test_query_llm_with_logprobs -> patch;
test_query_llm_with_logprobs -> MagicMock;
test_query_llm_with_logprobs -> query_llm;
test_query_llm_with_logprobs -> array;
test_query_llm_with_logits -> patch;
test_query_llm_with_logits -> MagicMock;
test_query_llm_with_logits -> query_llm;
test_query_llm_with_logits -> array;
test_query_llm_openai_format -> patch;
test_query_llm_openai_format -> MagicMock;
test_query_llm_openai_format -> query_llm;
test_query_llm_openai_format -> isinstance;
test_query_llm_openai_format -> array;
test_query_llm_streaming -> patch;
test_query_llm_streaming -> MagicMock;
test_query_llm_streaming -> list;
test_query_llm_streaming -> query_llm_streaming;
test_query_llm_streaming -> len;
test_query_llm_streaming -> array;
test_query_llm_with_stop_words -> patch;
test_query_llm_with_stop_words -> MagicMock;
test_query_llm_with_stop_words -> query_llm;
test_query_llm_with_stop_words -> isinstance;
test_query_llm_with_stop_words -> array;
test_query_llm_with_bad_words -> patch;
test_query_llm_with_bad_words -> MagicMock;
test_query_llm_with_bad_words -> query_llm;
test_query_llm_with_bad_words -> isinstance;
test_query_llm_with_bad_words -> array;
query_multimodal -> NemoQueryMultimodal;
mock_image -> NamedTemporaryFile;
mock_image -> new;
mock_image -> save;
mock_video -> NamedTemporaryFile;
mock_audio -> NamedTemporaryFile;
test_setup_media_image_local -> setup_media;
test_setup_media_image_local -> isinstance;
test_setup_media_image_local -> unlink;
test_setup_media_image_url -> patch;
test_setup_media_image_url -> MagicMock;
test_setup_media_image_url -> setup_media;
test_setup_media_image_url -> isinstance;
test_frame_len -> frame_len;
test_frame_len -> zeros;
test_frame_len -> range;
test_get_subsampled_frames -> get_subsampled_frames;
test_get_subsampled_frames -> zeros;
test_get_subsampled_frames -> len;
test_get_subsampled_frames -> range;
test_query -> patch;
test_query -> MagicMock;
test_query -> query;
test_query -> isinstance;
test_query -> unlink;
test_query -> array;
test_setup_media_video -> patch;
test_setup_media_video -> NemoQueryMultimodal;
test_setup_media_video -> setup_media;
test_setup_media_video -> isinstance;
test_setup_media_video -> unlink;
test_setup_media_video -> MagicMock;
test_setup_media_video -> range;
test_setup_media_video -> zeros;
test_setup_media_audio -> patch;
test_setup_media_audio -> NemoQueryMultimodal;
test_setup_media_audio -> setup_media;
test_setup_media_audio -> isinstance;
test_setup_media_audio -> unlink;
test_setup_media_audio -> zeros;
mock_deployable -> MockTritonDeployable;
test_get_triton_input -> get_triton_input;
test_get_triton_input -> run_only_on;
test_get_triton_input -> TensorRTMMExporter;
test_get_triton_input -> len;
test_get_triton_input -> skip;
test_get_triton_output -> get_triton_output;
test_get_triton_output -> run_only_on;
test_get_triton_output -> TensorRTMMExporter;
test_get_triton_output -> len;
test_get_triton_output -> skip;
test_abstract_class_instantiation -> raises;
test_abstract_class_instantiation -> ITritonDeployable;
httpserver_listen_address -> fixture;
test_configuration -> parametrize;
test_configuration -> EvaluationConfig;
test_configuration -> isinstance;
test_configuration -> items;
test_configuration -> getattr;
test_default_none_tokenizer -> EvaluationConfig;
test_evaluation -> respond_with_json;
test_evaluation -> EvaluationTarget;
test_evaluation -> EvaluationConfig;
test_evaluation -> evaluate;
test_evaluation -> expect_request;
test_evaluation -> ConfigParams;
test_evaluate_success -> patch;
test_evaluate_success -> evaluate;
test_evaluate_success -> assert_called_once_with;
test_evaluate_nemo_checkpoint_path_none -> patch;
test_evaluate_nemo_checkpoint_path_none -> assert_not_called;
test_evaluate_nemo_checkpoint_path_none -> assertRaises;
test_evaluate_nemo_checkpoint_path_none -> evaluate;
test_evaluate_import_error -> patch;
test_evaluate_import_error -> assert_not_called;
test_evaluate_import_error -> assertRaises;
test_evaluate_import_error -> evaluate;
test_evaluate_import_error -> ImportError;
run_deploy -> Popen;
run_deploy -> str;
check_model_outputs -> range;
check_model_outputs -> len;
export_onnx_trt -> get_llama_bidirectional_hf_model;
export_onnx_trt -> OnnxLLMExporter;
export_onnx_trt -> export;
export_onnx_trt -> export_onnx_to_trt;
export_onnx_trt -> exists;
export_onnx_trt -> get_tokenizer;
export_onnx_trt -> forward;
export_onnx_trt -> warning;
test_mock_import_existing_module -> _mock_import;
test_mock_import_non_existing_module -> _mock_import;
test_mock_import_non_existing_module -> raises;
test_model_loading -> run_only_on;
test_model_loading -> LlamaModel;
test_model_loading -> import_ckpt;
test_model_loading -> exists;
test_model_loading -> Path;
test_model_loading -> mkdir;
test_model_loading -> rmtree;
test_model_loading -> dict;
test_model_loading -> load_nemo_model;
temp_dir -> str;
temp_dir -> mkdtemp;
temp_dir -> rmtree;
dummy_tokenizer -> MagicMock;
test_init_with_model_and_tokenizer -> OnnxLLMExporter;
test_init_with_model_and_model_path_raises_error -> raises;
test_init_with_model_and_model_path_raises_error -> OnnxLLMExporter;
basic_quantization_config -> DictConfig;
basic_export_config -> DictConfig;
test_init_valid_configs -> Quantizer;
test_init_invalid_algorithm -> raises;
test_init_invalid_algorithm -> Quantizer;
test_init_invalid_dtype -> raises;
test_init_invalid_dtype -> Quantizer;
test_null_algorithm -> Quantizer;
test_quantize_method -> patch;
test_quantize_method -> MagicMock;
test_quantize_method -> Quantizer;
test_quantize_method -> quantize;
test_quantize_method -> assert_called_once_with;
test_modify_model_config -> patch;
test_modify_model_config -> DictConfig;
test_modify_model_config -> modify_model_config;
test_export_method -> patch;
test_export_method -> MagicMock;
test_export_method -> Quantizer;
test_export_method -> export;
test_export_method -> assert_called_once;
tearDownClass -> rmtree;
test_batch_decode -> encode;
test_batch_decode -> batch_decode;
test_batch_decode -> assertIsInstance;
test_batch_decode -> array;
test_batch_decode -> tensor;
test_batch_decode -> TiktokenTokenizer;
test_batch_decode -> isinstance;
test_token_to_id -> text_to_tokens;
test_token_to_id -> token_to_id;
test_token_to_id -> assertIsInstance;
test_legacy_mode -> SentencePieceTokenizer;
test_legacy_mode -> assertGreater;
test_legacy_mode -> text_to_tokens;
test_legacy_mode -> assertIn;
test_legacy_mode -> encode;
test_legacy_mode -> batch_decode;
test_properties -> assertIsInstance;
test_vocab_property -> assertIsInstance;
test_vocab_property -> assertTrue;
test_vocab_property -> all;
test_vocab_property -> isinstance;
test_convert_ids_to_tokens -> encode;
test_convert_ids_to_tokens -> convert_ids_to_tokens;
test_convert_ids_to_tokens -> assertIsInstance;
test_convert_ids_to_tokens -> assertTrue;
test_convert_ids_to_tokens -> all;
test_convert_ids_to_tokens -> isinstance;
test_convert_tokens_to_string -> text_to_tokens;
test_convert_tokens_to_string -> convert_tokens_to_string;
test_convert_tokens_to_string -> assertIsInstance;
test_len -> assertEqual;
test_len -> len;
test_is_fast -> assertTrue;
test_get_added_vocab -> assertIsNone;
test_get_added_vocab -> get_added_vocab;
sample_tar -> TemporaryDirectory;
sample_tar -> mkdir;
sample_tar -> write_text;
sample_tar -> Path;
sample_tar -> open;
sample_tar -> add;
sample_tar -> str;
test_tar_path_initialization -> TarPath;
test_tar_path_initialization -> isinstance;
test_tar_path_initialization -> exists;
test_tar_path_initialization -> open;
test_path_operations -> TarPath;
test_path_operations -> str;
test_file_operations -> TarPath;
test_file_operations -> exists;
test_file_operations -> is_file;
test_file_operations -> is_dir;
test_file_operations -> open;
test_file_operations -> read;
test_directory_operations -> TarPath;
test_directory_operations -> list;
test_directory_operations -> all;
test_directory_operations -> iterdir;
test_directory_operations -> len;
test_directory_operations -> glob;
test_directory_operations -> rglob;
test_get_profile_shapes -> run_only_on;
test_get_profile_shapes -> get_profile_shapes;
test_get_profile_shapes -> assertEqual;
test_get_dynamic_axes -> run_only_on;
test_get_dynamic_axes -> get_dynamic_axes;
test_get_dynamic_axes -> assertEqual;
test_trt_compile_basic -> run_only_on;
test_trt_compile_basic -> patch;
test_trt_compile_basic -> trt_compile;
test_trt_compile_basic -> assertEqual;
test_trt_compile_basic -> assertTrue;
test_trt_compile_basic -> hasattr;
test_trt_compile_no_tensorrt -> run_only_on;
test_trt_compile_no_tensorrt -> patch;
test_trt_compile_no_tensorrt -> trt_compile;
test_trt_compile_no_tensorrt -> assertEqual;
test_trt_compile_no_tensorrt -> assertFalse;
test_trt_compile_no_tensorrt -> hasattr;
test_trt_compiler_initialization -> run_only_on;
test_trt_compiler_initialization -> TrtCompiler;
test_trt_compiler_initialization -> assertEqual;
test_trt_compiler_initialization -> MagicMock;
test_trt_compiler_invalid_precision -> run_only_on;
test_trt_compiler_invalid_precision -> assertRaises;
test_trt_compiler_invalid_precision -> TrtCompiler;
test_trt_compiler_invalid_method -> run_only_on;
test_trt_compiler_invalid_method -> assertRaises;
test_trt_compiler_invalid_method -> TrtCompiler;
test_trt_compile_with_submodule -> run_only_on;
test_trt_compile_with_submodule -> patch;
test_trt_compile_with_submodule -> NestedModel;
test_trt_compile_with_submodule -> trt_compile;
test_trt_compile_with_submodule -> assertEqual;
test_trt_compile_with_submodule -> assertTrue;
test_trt_compile_with_submodule -> hasattr;
test_trt_compile_with_submodule -> __init__;
test_trt_compile_with_submodule -> SimpleModel;
test_trt_compile_with_submodule -> super;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> run_only_on;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> object;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> get_nemo_to_trtllm_conversion_dict;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> compile;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> keys;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> match;
test_get_nemo_to_trtllm_conversion_dict_on_nemo_model -> skip;
test_get_nemo_to_trtllm_conversion_dict_on_mcore_model -> run_only_on;
test_get_nemo_to_trtllm_conversion_dict_on_mcore_model -> object;
test_get_nemo_to_trtllm_conversion_dict_on_mcore_model -> get_nemo_to_trtllm_conversion_dict;
test_get_nemo_to_trtllm_conversion_dict_on_mcore_model -> skip;
test_tensorrt_llm_initialization -> run_only_on;
test_tensorrt_llm_initialization -> TensorRTLLM;
test_tensorrt_llm_initialization -> join;
test_tensorrt_llm_initialization -> skip;
test_tensorrt_llm_supported_models -> run_only_on;
test_tensorrt_llm_supported_models -> TensorRTLLM;
test_tensorrt_llm_supported_models -> isinstance;
test_tensorrt_llm_supported_models -> all;
test_tensorrt_llm_supported_models -> len;
test_tensorrt_llm_supported_models -> skip;
test_tensorrt_llm_input_dtype -> run_only_on;
test_tensorrt_llm_input_dtype -> TensorRTLLM;
test_tensorrt_llm_input_dtype -> get_input_dtype;
test_tensorrt_llm_input_dtype -> skip;
test_tensorrt_llm_hidden_size -> run_only_on;
test_tensorrt_llm_hidden_size -> TensorRTLLM;
test_tensorrt_llm_hidden_size -> isinstance;
test_tensorrt_llm_hidden_size -> skip;
test_tensorrt_llm_triton_io -> run_only_on;
test_tensorrt_llm_triton_io -> TensorRTLLM;
test_tensorrt_llm_triton_io -> isinstance;
test_tensorrt_llm_triton_io -> skip;
test_tensorrt_llm_pad_logits -> run_only_on;
test_tensorrt_llm_pad_logits -> TensorRTLLM;
test_tensorrt_llm_pad_logits -> randn;
test_tensorrt_llm_pad_logits -> _pad_logits;
test_tensorrt_llm_pad_logits -> isinstance;
test_tensorrt_llm_pad_logits -> skip;
model_dir -> str;
mock_runner -> Mock;
mock_runner -> zeros;
test_init_invalid_modality -> run_only_on;
test_init_invalid_modality -> raises;
test_init_invalid_modality -> TensorRTMMExporter;
test_export_mllama -> run_only_on;
test_export_mllama -> patch;
test_export_mllama -> TensorRTMMExporter;
test_export_mllama -> export;
test_export_mllama -> assert_called_once;
test_export_neva -> run_only_on;
test_export_neva -> patch;
test_export_neva -> TensorRTMMExporter;
test_export_neva -> export;
test_export_neva -> assert_called_once;
test_forward_without_loading -> run_only_on;
test_forward_without_loading -> TensorRTMMExporter;
test_forward_without_loading -> raises;
test_forward_without_loading -> forward;
test_forward_without_loading -> str;
test_forward_with_all_params -> run_only_on;
test_forward_with_all_params -> TensorRTMMExporter;
test_forward_with_all_params -> forward;
test_forward_with_all_params -> assert_called_once;
test_forward_with_all_params -> assert_called_once_with;
test_get_input_media_tensors_vision -> run_only_on;
test_get_input_media_tensors_vision -> TensorRTMMExporter;
test_get_input_media_tensors_vision -> get_input_media_tensors;
test_get_input_media_tensors_vision -> len;
test_get_input_media_tensors_audio -> run_only_on;
test_get_input_media_tensors_audio -> TensorRTMMExporter;
test_get_input_media_tensors_audio -> get_input_media_tensors;
test_get_input_media_tensors_audio -> len;
test_export_with_invalid_model_type -> run_only_on;
test_export_with_invalid_model_type -> TensorRTMMExporter;
test_export_with_invalid_model_type -> raises;
test_export_with_invalid_model_type -> export;
test_export_with_existing_files -> run_only_on;
test_export_with_existing_files -> makedirs;
test_export_with_existing_files -> TensorRTMMExporter;
test_export_with_existing_files -> open;
test_export_with_existing_files -> write;
test_export_with_existing_files -> raises;
test_export_with_existing_files -> export;
test_export_with_existing_files -> str;
test_export_with_existing_files -> join;
sample_vocab_file -> extend;
sample_vocab_file -> unlink;
sample_vocab_file -> NamedTemporaryFile;
sample_vocab_file -> dump;
sample_vocab_file -> decode;
sample_vocab_file -> range;
sample_vocab_file -> Path;
sample_vocab_file -> b64encode;
sample_vocab_file -> bytes;
test_reload_mergeable_ranks -> reload_mergeable_ranks;
test_reload_mergeable_ranks -> len;
test_encode_decode -> TiktokenTokenizer;
test_encode_decode -> encode;
test_encode_decode -> decode;
test_encode_decode -> isinstance;
test_encode_decode -> all;
test_special_token_handling -> TiktokenTokenizer;
test_special_token_handling -> decode;
test_empty_decode -> TiktokenTokenizer;
test_empty_decode -> decode;
test_batch_decode_numpy_tensor -> TiktokenTokenizer;
test_batch_decode_numpy_tensor -> array;
test_batch_decode_numpy_tensor -> tensor;
test_batch_decode_numpy_tensor -> batch_decode;
test_batch_decode_numpy_tensor -> isinstance;
test_torch_trt -> Sequential;
test_torch_trt -> state_dict;
test_torch_trt -> tensor;
test_torch_trt -> load_state_dict;
test_torch_trt -> cuda;
test_torch_trt -> to;
test_torch_trt -> TemporaryDirectory;
test_torch_trt -> model;
test_torch_trt -> trt_compile;
test_torch_trt -> assertIsNone;
test_torch_trt -> assertIsNotNone;
test_torch_trt -> assert_close;
test_torch_trt -> randn;
test_torch_trt -> PReLU;
test_profiles -> cuda;
test_profiles -> no_grad;
test_profiles -> TemporaryDirectory;
test_profiles -> to;
test_profiles -> model;
test_profiles -> trt_compile;
test_profiles -> assertIsNone;
test_profiles -> assertIsNotNone;
test_profiles -> assert_close;
test_profiles -> ListAdd;
test_profiles -> clone;
test_profiles -> randn;
test_lists -> cuda;
test_lists -> no_grad;
test_lists -> TemporaryDirectory;
test_lists -> to;
test_lists -> model;
test_lists -> trt_compile;
test_lists -> assertIsNone;
test_lists -> assertIsNotNone;
test_lists -> assert_close;
test_lists -> ListAdd;
test_lists -> clone;
test_lists -> randn;
mock_llm -> patch;
mock_llm -> MagicMock;
test_export -> skip;
test_export -> run_only_on;
test_export -> export;
test_export -> assert_called_once_with;
test_export_with_lora -> skip;
test_export_with_lora -> run_only_on;
test_export_with_lora -> export;
test_export_with_lora -> assert_called_once_with;
test_add_lora_models -> skip;
test_add_lora_models -> run_only_on;
test_add_lora_models -> add_lora_models;
test_forward_without_model -> skip;
test_forward_without_model -> run_only_on;
test_forward_without_model -> raises;
test_forward_without_model -> forward;
test_forward_with_lora_not_added -> skip;
test_forward_with_lora_not_added -> run_only_on;
test_forward_with_lora_not_added -> export;
test_forward_with_lora_not_added -> raises;
test_forward_with_lora_not_added -> forward;
test_forward_with_invalid_lora -> skip;
test_forward_with_invalid_lora -> run_only_on;
test_forward_with_invalid_lora -> export;
test_forward_with_invalid_lora -> add_lora_models;
test_forward_with_invalid_lora -> raises;
test_forward_with_invalid_lora -> forward;
test_triton_infer_fn_error_handling -> skip;
test_triton_infer_fn_error_handling -> run_only_on;
test_triton_infer_fn_error_handling -> triton_infer_fn;
test_triton_infer_fn_error_handling -> isinstance;
test_triton_infer_fn_error_handling -> array;
test_build_trtllm_engine -> run_only_on;
test_build_trtllm_engine -> patch;
test_build_trtllm_engine -> MagicMock;
test_build_trtllm_engine -> build_trtllm_engine;
test_build_trtllm_engine -> assert_called_once;
test_build_mllama_trtllm_engine -> run_only_on;
test_build_mllama_trtllm_engine -> patch;
test_build_mllama_trtllm_engine -> MagicMock;
test_build_mllama_trtllm_engine -> build_mllama_trtllm_engine;
test_build_mllama_trtllm_engine -> assert_called_once;
test_split_qkv_weight -> randn;
test_split_qkv_weight -> split_qkv_weight;
test_split_qkv_weight -> len;
test_split_kv_weight -> randn;
test_split_kv_weight -> split_kv_weight;
test_split_kv_weight -> len;
test_split_gate_weight -> randn;
test_split_gate_weight -> split_gate_weight;
test_split_gate_weight -> len;
test_nemo2_convert_to_safe_tensors -> run_only_on;
test_nemo2_convert_to_safe_tensors -> parametrize;
test_nemo2_convert_to_safe_tensors -> TensorRTLLM;
test_nemo2_convert_to_safe_tensors -> convert_to_safe_tensors;
test_nemo2_convert_to_safe_tensors -> exists;
test_nemo2_convert_to_safe_tensors -> rmtree;
test_nemo2_convert_to_safe_tensors -> Path;
test_nemo2_convert_to_export -> run_only_on;
test_nemo2_convert_to_export -> TensorRTLLM;
test_nemo2_convert_to_export -> export;
test_nemo2_convert_to_export -> forward;
test_nemo2_convert_to_export -> print;
test_nemo2_convert_to_export -> exists;
test_nemo2_convert_to_export -> rmtree;
test_nemo2_convert_to_export -> Path;
test_any_word_in_key -> run_only_on;
test_any_word_in_key -> any_word_in_key;
test_get_trt_llm_keyname -> run_only_on;
test_get_trt_llm_keyname -> get_trt_llm_keyname;
test_is_scaling_factor -> run_only_on;
test_is_scaling_factor -> is_scaling_factor;
test_get_scaling_factor_keys -> run_only_on;
test_get_scaling_factor_keys -> get_scaling_factor_keys;
test_get_scaling_factor_keys -> endswith;
test_split -> run_only_on;
test_split -> array;
test_split -> array_equal;
test_split -> tensor;
test_split -> equal;
test_split -> split;
test_generate_int8 -> run_only_on;
test_generate_int8 -> astype;
test_generate_int8 -> generate_int8;
test_generate_int8 -> all;
test_generate_int8 -> tensor;
test_generate_int8 -> randn;
test_determine_quantization_settings -> run_only_on;
test_determine_quantization_settings -> determine_quantization_settings;
test_prompt_convert_task_templates -> run_only_on;
test_prompt_convert_task_templates -> prompt_convert;
test_prompt_convert_task_templates -> isinstance;
test_prompt_convert_task_templates -> ones;
test_prompt_convert_direct_embeddings -> run_only_on;
test_prompt_convert_direct_embeddings -> prompt_convert;
test_prompt_convert_direct_embeddings -> isinstance;
test_prompt_convert_direct_embeddings -> ones;
test_rename_key -> run_only_on;
test_rename_key -> rename_key;
test_rename_key_dist_ckpt -> run_only_on;
test_rename_key_dist_ckpt -> rename_key_dist_ckpt;
test_get_layer_prefix -> run_only_on;
test_get_layer_prefix -> get_layer_prefix;
test_rename_layer_num -> run_only_on;
test_rename_layer_num -> rename_layer_num;
test_get_layer_num -> run_only_on;
test_get_layer_num -> get_layer_num;
test_get_layer_num -> raises;
test_create_export_dir -> run_only_on;
test_create_export_dir -> create_export_dir;
test_create_export_dir -> exists;
test_create_export_dir -> is_dir;
test_is_nemo2_checkpoint -> run_only_on;
test_is_nemo2_checkpoint -> makedirs;
test_is_nemo2_checkpoint -> is_nemo2_checkpoint;
test_is_nemo2_checkpoint -> join;
test_prepare_directory_for_export -> run_only_on;
test_prepare_directory_for_export -> join;
test_prepare_directory_for_export -> prepare_directory_for_export;
test_prepare_directory_for_export -> exists;
test_prepare_directory_for_export -> isdir;
test_prepare_directory_for_export -> open;
test_prepare_directory_for_export -> write;
test_prepare_directory_for_export -> raises;
test_is_nemo_tarfile -> run_only_on;
test_is_nemo_tarfile -> join;
test_is_nemo_tarfile -> is_nemo_tarfile;
test_is_nemo_tarfile -> open;
test_is_nemo_tarfile -> write;
test_torch_dtype_from_precision -> run_only_on;
test_torch_dtype_from_precision -> torch_dtype_from_precision;
test_torch_dtype_from_precision -> raises;
test_get_example_inputs -> run_only_on;
test_get_example_inputs -> MagicMock;
test_get_example_inputs -> get_example_inputs;
test_get_example_inputs -> assert_called_once_with;
test_get_example_inputs -> isinstance;
test_get_example_inputs -> tensor;
test_replace_number_add_offset -> run_only_on;
test_replace_number_add_offset -> replace_number_add_offset;
test_rename_qkv_keys -> run_only_on;
test_rename_qkv_keys -> rename_qkv_keys;
test_rename_qkv_keys -> len;
test_reformat_module_names_to_hf -> run_only_on;
test_reformat_module_names_to_hf -> reformat_module_names_to_hf;
test_reformat_module_names_to_hf -> randn;
test_reformat_module_names_to_hf -> len;
test_reformat_module_names_to_hf -> set;
test_convert_lora_weights_to_canonical -> run_only_on;
test_convert_lora_weights_to_canonical -> convert_lora_weights_to_canonical;
test_convert_lora_weights_to_canonical -> randn;
mock_checkpoint_dir -> mkdir;
mock_checkpoint_dir -> open;
mock_checkpoint_dir -> dump;
test_nemo_to_path -> patch;
test_nemo_to_path -> nemo_to_path;
test_nemo_to_path -> isinstance;
test_nemo_to_path -> str;
test_tar_file_system_reader -> Path;
test_tar_file_system_reader -> TarFileSystemReader;
test_load_sharded_metadata_zarr -> patch;
test_load_sharded_metadata_zarr -> MagicMock;
test_load_sharded_metadata_zarr -> array;
test_load_sharded_metadata_zarr -> load_sharded_metadata_zarr;
test_load_sharded_metadata_zarr -> isinstance;
test_nemo_weights_directory -> nemo_weights_directory;
test_nemo_weights_directory -> rmtree;
test_nemo_weights_directory -> mkdir;
test_nemo_weights_directory -> rmdir;
test_load_model_weights -> patch;
test_load_model_weights -> load_model_weights;
test_load_model_weights -> assert_called_once;
test_load_model_weights -> assert_not_called;
test_load_model_weights -> reset_mock;
test_load_model_weights -> open;
test_load_model_weights -> dump;
test_load_model_weights -> raises;
my_app -> hydra_runner;
my_app -> print;
my_app -> to_yaml;
test_no_config -> raises;
test_no_config -> check_call;
test_config1 -> check_call;
test_config1 -> exists;
test_config1_invalid -> raises;
test_config1_invalid -> check_call;
test_config2 -> check_call;
test_config2 -> exists;
test_config2_invalid -> raises;
test_config2_invalid -> check_call;
test_config2_filepath_schema -> raises;
test_config2_filepath_schema -> check_call;
reconfigure_num_microbatches_calculator_manager -> get_micro_batch_size;
reconfigure_num_microbatches_calculator_manager -> get_current_global_batch_size;
reconfigure_num_microbatches_calculator_manager -> reconfigure_num_microbatches_calculator;
test_finetuning_module -> patch;
test_finetuning_module -> FineTuningDataModule;
test_finetuning_module -> setup;
test_finetuning_module -> train_dataloader;
test_finetuning_module -> assert_called_once;
test_dolly_module -> patch;
test_dolly_module -> DollyDataModule;
test_dolly_module -> setup;
test_dolly_module -> train_dataloader;
test_dolly_module -> assert_called_once;
test_squad_module -> patch;
test_squad_module -> SquadDataModule;
test_squad_module -> setup;
test_squad_module -> train_dataloader;
test_squad_module -> assert_called_once;
wrap_config -> type;
wrap_config -> make_byzantine_model_wrapper;
wrap_config -> configure_model;
wrap_config -> super;
make_byzantine_model_wrapper -> type;
make_byzantine_model_wrapper -> forward;
make_byzantine_model_wrapper -> no_grad;
make_byzantine_model_wrapper -> int;
make_byzantine_model_wrapper -> super;
make_byzantine_model_wrapper -> fill_;
make_byzantine_model_wrapper -> uniform;
test_failing -> skip;
test_failing -> Llama2Config7B;
test_failing -> wrap_config;
test_failing -> LlamaModel;
test_failing -> fit;
test_working -> skip;
test_working -> Llama2Config7B;
test_working -> LlamaModel;
test_working -> fit;
make_trainer_optim -> DdpParityChecker;
make_trainer_optim -> Trainer;
make_trainer_optim -> MegatronOptimizerModule;
make_trainer_optim -> get_nmt_tokenizer;
make_trainer_optim -> PreTrainingDataModule;
make_trainer_optim -> MegatronStrategy;
make_trainer_optim -> MegatronMixedPrecision;
make_trainer_optim -> OptimizerConfig;
_get_strategy -> MegatronStrategy;
get_model_and_data -> MockDataModule;
get_model_and_data -> GPTConfig;
get_model_and_data -> GPTModel;
test_sharded_strategies -> set_env;
test_sharded_strategies -> ModelCheckpoint;
test_sharded_strategies -> MegatronStrategy;
test_sharded_strategies -> Trainer;
test_sharded_strategies -> isinstance;
test_sharded_strategies -> _teardown;
mock_pipeline -> DummyModule;
mock_pipeline -> __init__;
mock_pipeline -> super;
mock_precision_plugin -> MegatronMixedPrecision;
mock_callbacks -> MagicMock;
mock_data_step -> MagicMock;
mock_forward_step -> MagicMock;
mock_loss_reduction -> MagicMock;
test_init_with_defaults -> patch;
test_init_with_defaults -> MegatronParallel;
test_init_with_defaults -> isinstance;
test_init_with_custom_parameters -> patch;
test_init_with_custom_parameters -> MegatronParallel;
test_add_callbacks -> CallbackConnector;
test_add_callbacks -> TestCallback;
test_add_callbacks -> add;
test_event -> CallbackConnector;
test_event -> TestCallback;
test_event -> add;
test_event -> MagicMock;
test_event -> event;
test_add_connector -> CallbackConnector;
test_add_connector -> TestCallback;
test_add_connector -> add;
test_contains -> CallbackConnector;
test_contains -> TestCallback;
test_contains -> add;
test_add_count_callback -> CallbackConnector;
test_add_count_callback -> CountCallback;
test_add_count_callback -> add;
test_event_trigger_with_count_callback -> CallbackConnector;
test_event_trigger_with_count_callback -> CountCallback;
test_event_trigger_with_count_callback -> add;
test_event_trigger_with_count_callback -> event;
test_loggers -> Trainer;
test_loggers -> NeMoLogger;
test_loggers -> setup;
test_loggers -> isinstance;
test_loggers -> endswith;
test_loggers -> len;
test_loggers -> WandbLogger;
test_loggers -> str;
test_explicit_log_dir -> NeMoLogger;
test_explicit_log_dir -> setup;
test_explicit_log_dir -> str;
test_custom_version -> NeMoLogger;
test_custom_version -> setup;
test_file_logging_setup -> NeMoLogger;
test_file_logging_setup -> patch;
test_file_logging_setup -> setup;
test_file_logging_setup -> assert_called_once;
test_model_checkpoint_setup -> PTLModelCheckpoint;
test_model_checkpoint_setup -> NeMoLogger;
test_model_checkpoint_setup -> setup;
test_model_checkpoint_setup -> any;
test_model_checkpoint_setup -> next;
test_model_checkpoint_setup -> endswith;
test_model_checkpoint_setup -> isinstance;
test_model_checkpoint_setup -> str;
setup_data -> get_nmt_tokenizer;
setup_data -> PreTrainingDataModule;
setup_model_optim -> GPTConfig;
setup_model_optim -> GPTModel;
setup_model_optim -> OptimizerConfig;
setup_model_optim -> MegatronOptimizerModule;
setup_trainer_and_logger -> MegatronStrategy;
setup_trainer_and_logger -> ModelCheckpoint;
setup_trainer_and_logger -> Trainer;
setup_trainer_and_logger -> NeMoLogger;
setup_trainer_and_logger -> TimingCallback;
setup_trainer_and_logger -> MegatronMixedPrecision;
replace_first -> startswith;
replace_first -> replace;
extract_model_keys -> list;
extract_model_keys -> isinstance;
extract_model_keys -> filter;
extract_model_keys -> startswith;
prepend_exp_avg -> list;
prepend_exp_avg -> map;
prepend_exp_avg -> replace_first;
prepend_exp_avg_sq -> list;
prepend_exp_avg_sq -> map;
prepend_exp_avg_sq -> replace_first;
has_all_keys -> all;
has_all_keys -> map;
test_resume_optim_state -> run_only_on;
test_resume_optim_state -> set_env;
test_resume_optim_state -> train;
test_resume_optim_state -> exists;
test_resume_optim_state -> all;
test_resume_optim_state -> list;
test_resume_optim_state -> extract_model_keys;
test_resume_optim_state -> compare_ckpts;
test_resume_optim_state -> teardown;
test_resume_optim_state -> makedirs;
test_resume_optim_state -> setup_data;
test_resume_optim_state -> AutoResume;
test_resume_optim_state -> map;
test_resume_optim_state -> keys;
test_resume_optim_state -> len;
test_resume_optim_state -> set;
test_resume_optim_state -> has_all_keys;
test_resume_optim_state -> reconfigure_num_microbatches_calculator_manager;
test_resume_optim_state -> setup_model_optim;
test_resume_optim_state -> setup_trainer_and_logger;
test_resume_optim_state -> _teardown;
test_resume_optim_state -> Path;
test_resume_optim_state -> prepend_exp_avg;
test_resume_optim_state -> prepend_exp_avg_sq;
test_recipes_with_nemo_run -> parametrize;
test_recipes_with_nemo_run -> patch;
test_recipes_with_nemo_run -> setenv;
test_recipes_with_nemo_run -> ConfigValidationPlugin;
test_recipes_with_nemo_run -> append;
test_recipes_with_nemo_run -> str;
test_recipes_with_nemo_run -> getattr;
test_recipes_with_nemo_run -> PreemptionPlugin;
test_recipes_with_nemo_run -> WandbPlugin;
test_recipes_with_nemo_run -> Experiment;
test_recipes_with_nemo_run -> add;
test_recipes_with_nemo_run -> dryrun;
test_recipes_with_nemo_run -> raises;
test_recipes_with_nemo_run -> clone;
test_recipes_with_nemo_run -> NsysPlugin;
test_recipes_with_nemo_run -> partial;
test_recipes_with_nemo_run -> SlurmExecutor;
test_recipes_with_nemo_run -> Packager;
test_precision_plugin_fp8_passed -> run_only_on;
test_precision_plugin_fp8_passed -> TrainerHook;
test_precision_plugin_fp8_passed -> MegatronOptimizerModule;
test_precision_plugin_fp8_passed -> Llama2Config7B;
test_precision_plugin_fp8_passed -> LlamaModel;
test_precision_plugin_fp8_passed -> connect;
test_precision_plugin_fp8_passed -> MegatronStrategy;
test_precision_plugin_fp8_passed -> MegatronMixedPrecision;
test_precision_plugin_fp8_passed -> OptimizerConfig;
test_precision_plugin_fp8_passed -> DummyTokenizer;
test_precision_plugin_fp8_passed -> super;
test_precision_plugin_precision_params_override -> run_only_on;
test_precision_plugin_precision_params_override -> Trainer;
test_precision_plugin_precision_params_override -> MegatronOptimizerModule;
test_precision_plugin_precision_params_override -> Llama2Config7B;
test_precision_plugin_precision_params_override -> LlamaModel;
test_precision_plugin_precision_params_override -> connect;
test_precision_plugin_precision_params_override -> MegatronStrategy;
test_precision_plugin_precision_params_override -> MegatronMixedPrecision;
test_precision_plugin_precision_params_override -> OptimizerConfig;
test_precision_plugin_precision_params_override -> DummyTokenizer;
make_model_optim -> GPTConfig;
make_model_optim -> GPTModel;
make_model_optim -> MegatronOptimizerModule;
make_model_optim -> OptimizerConfig;
make_model_optim -> CosineAnnealingScheduler;
make_model_optim -> int;
make_model_optim -> ceil;
run_train_from_scratch -> setup_data;
run_train_from_scratch -> make_model_optim;
run_train_from_scratch -> reconfigure_num_microbatches_calculator_manager;
run_train_from_scratch -> Trainer;
run_train_from_scratch -> train;
run_train_from_scratch -> _teardown;
run_train_from_scratch -> MegatronStrategy;
run_train_from_scratch -> MegatronMixedPrecision;
run_train_from_scratch -> NeMoLogger;
run_train_from_scratch -> AutoResume;
run_train_from_scratch -> ValidateOptStateScratchInit;
run_train_from_scratch -> ValidateModelScratchInit;
run_resume_train -> setup_data;
run_resume_train -> make_model_optim;
run_resume_train -> reconfigure_num_microbatches_calculator_manager;
run_resume_train -> Trainer;
run_resume_train -> train;
run_resume_train -> _teardown;
run_resume_train -> MegatronStrategy;
run_resume_train -> MegatronMixedPrecision;
run_resume_train -> NeMoLogger;
run_resume_train -> AutoResume;
run_resume_train -> ValidateOptStateRestoration;
run_resume_train -> ValidateModelRestoration;
test_optim_state_restoration -> run_only_on;
test_optim_state_restoration -> run_train_from_scratch;
test_optim_state_restoration -> run_resume_train;
test_optim_state_restoration -> teardown;
test_set_model_parallel_attributes -> MegatronStrategy;
test_set_model_parallel_attributes -> DummyModel;
test_set_model_parallel_attributes -> set_model_parallel_attributes;
test_set_model_parallel_attributes -> TransformerConfig;
test_init_parallel_ranks -> AppState;
test_init_parallel_ranks -> MagicMock;
test_init_parallel_ranks -> init_parallel_ranks;
test_init_parallel_ranks -> items;
test_init_parallel_ranks -> destroy_model_parallel;
test_init_parallel_ranks -> destroy_num_microbatches_calculator;
test_init_parallel_ranks -> hasattr;
test_init_parallel_ranks -> getattr;
test_init_model_parallel -> patch;
test_init_model_parallel -> AppState;
test_init_model_parallel -> _mpu_tp_2;
test_init_model_parallel -> init_model_parallel;
test_init_model_parallel -> assert_called_once_with;
test_init_model_parallel -> Identity;
test_init_model_parallel_with_tp_pp_dp -> patch;
test_init_model_parallel_with_tp_pp_dp -> AppState;
test_init_model_parallel_with_tp_pp_dp -> _mpu_tp_2;
test_init_model_parallel_with_tp_pp_dp -> init_model_parallel;
test_init_model_parallel_with_tp_pp_dp -> assert_called_once_with;
test_init_model_parallel_with_tp_pp_dp -> Identity;
optimizer_module -> PytorchOptimizerModule;
test_optimizer_module_initialization -> callable;
test_optimizer_creation -> optimizers;
test_optimizer_creation -> isinstance;
test_optimizer_creation -> len;
test_connect_method -> connect;
test_simple_conversion -> Trainer;
test_simple_conversion -> to_fabric;
test_simple_conversion -> isinstance;
test_simple_conversion -> MegatronStrategy;
test_simple_conversion -> MegatronMixedPrecision;
test_flops_measurement_callback_bert -> GPTConfig;
test_flops_measurement_callback_bert -> MockDataModule;
test_flops_measurement_callback_bert -> FLOPsMeasurementCallback;
test_flops_measurement_callback_bert -> eval_model_flops;
test_flops_measurement_callback_bert -> eval_tflops_per_sec_per_gpu;
test_flops_measurement_callback_bert -> is_initialized;
test_flops_measurement_callback_bert -> get_world_size;
test_extract_module_attr_name_with_module -> MagicMock;
test_extract_module_attr_name_with_module -> extract_module_attr_name;
test_extract_module_attr_name_with_model -> MagicMock;
test_extract_module_attr_name_with_model -> extract_module_attr_name;
test_extract_module_attr_name_raises -> MagicMock;
test_extract_module_attr_name_raises -> raises;
test_extract_module_attr_name_raises -> extract_module_attr_name;
test_listify_non_list -> listify;
test_listify_list -> listify;
test_get_modules_from_selector_none_selector -> MagicMock;
test_get_modules_from_selector_none_selector -> list;
test_get_modules_from_selector_none_selector -> get_modules_from_selector;
test_get_modules_from_selector_empty_string -> MagicMock;
test_get_modules_from_selector_empty_string -> list;
test_get_modules_from_selector_empty_string -> get_modules_from_selector;
test_get_modules_from_selector_star -> MagicMock;
test_get_modules_from_selector_star -> list;
test_get_modules_from_selector_star -> get_modules_from_selector;
test_get_modules_from_selector_exact_path -> Linear;
test_get_modules_from_selector_exact_path -> Module;
test_get_modules_from_selector_exact_path -> list;
test_get_modules_from_selector_exact_path -> get_modules_from_selector;
test_get_modules_from_selector_non_existent_attr -> Module;
test_get_modules_from_selector_non_existent_attr -> raises;
test_get_modules_from_selector_non_existent_attr -> list;
test_get_modules_from_selector_non_existent_attr -> get_modules_from_selector;
test_get_modules_from_selector_attr_is_not_module -> Module;
test_get_modules_from_selector_attr_is_not_module -> raises;
test_get_modules_from_selector_attr_is_not_module -> list;
test_get_modules_from_selector_attr_is_not_module -> get_modules_from_selector;
test_get_modules_from_selector_wildcard_children -> Module;
test_get_modules_from_selector_wildcard_children -> Linear;
test_get_modules_from_selector_wildcard_children -> list;
test_get_modules_from_selector_wildcard_children -> get_modules_from_selector;
test_get_modules_from_selector_wildcard_children -> len;
test_jit_config_assertion -> raises;
test_jit_config_assertion -> JitConfig;
test_compile_module_torch -> MagicMock;
test_compile_module_torch -> JitConfig;
test_compile_module_torch -> compile_module;
test_compile_module_torch -> assert_called_once_with;
test_compile_module_none -> MagicMock;
test_compile_module_none -> JitConfig;
test_compile_module_none -> compile_module;
test_compile_module_none -> assert_not_called;
test_jit_transform_no_config -> JitTransform;
test_jit_transform_no_config -> MagicMock;
test_jit_transform_no_config -> on_train_epoch_start;
test_jit_transform_no_config -> JitConfig;
test_jit_transform_no_config -> getattr;
test_jit_transform_already_compiled -> JitTransform;
test_jit_transform_already_compiled -> MagicMock;
test_jit_transform_already_compiled -> on_train_epoch_start;
test_jit_transform_already_compiled -> JitConfig;
test_jit_transform_compile_once -> JitTransform;
test_jit_transform_compile_once -> MagicMock;
test_jit_transform_compile_once -> on_train_epoch_start;
test_jit_transform_compile_once -> JitConfig;
setup_test -> ExampleModel;
setup_test -> RandomDataset;
setup_test -> AutoResume;
setup_test -> NeMoLogger;
setup_test -> MegatronStrategy;
setup_test -> Trainer;
setup_test -> setup;
setup_test -> ModelCheckpoint;
get_final_checkpoint -> len;
get_final_checkpoint -> list;
get_final_checkpoint -> is_dir;
get_final_checkpoint -> match;
get_final_checkpoint -> glob;
test_link_ckpt -> run_only_on;
test_link_ckpt -> reset_megatron_parallel_state;
test_link_ckpt -> setup_test;
test_link_ckpt -> fit;
test_link_ckpt -> Path;
test_link_ckpt -> get_final_checkpoint;
test_link_ckpt -> islink;
test_link_ckpt -> resolve;
test_link_ckpt -> len;
test_link_ckpt -> replace;
test_link_ckpt -> str;
test_link_ckpt_async -> run_only_on;
test_link_ckpt_async -> reset_megatron_parallel_state;
test_link_ckpt_async -> setup_test;
test_link_ckpt_async -> fit;
test_link_ckpt_async -> Path;
test_link_ckpt_async -> get_final_checkpoint;
test_link_ckpt_async -> islink;
test_link_ckpt_async -> resolve;
test_link_ckpt_async -> len;
test_link_ckpt_async -> replace;
test_link_ckpt_async -> str;
test_restore_async -> run_only_on;
test_restore_async -> reset_megatron_parallel_state;
test_restore_async -> setup_test;
test_restore_async -> fit;
test_restore_async -> Path;
test_restore_async -> get_final_checkpoint;
test_restore_async -> islink;
test_restore_async -> len;
test_restore_async -> int;
test_restore_async -> split;
test_restore_async -> str;
pl_module -> MockLightningModule;
test_setup_stores_transform -> setup;
test_setup_stores_transform -> hasattr;
setup_mocks -> fixture;
setup_mocks -> patch;
setup_mocks -> start;
setup_mocks -> MagicMock;
setup_mocks -> stop;
mock_pl_module -> MagicMock;
test_init_valid_params -> NsysCallback;
test_init_invalid_params -> raises;
test_init_invalid_params -> NsysCallback;
test_on_train_batch_start_profiling -> patch;
test_on_train_batch_start_profiling -> NsysCallback;
test_on_train_batch_start_profiling -> on_train_batch_start;
test_on_train_batch_start_profiling -> assert_called_once;
test_on_train_batch_start_profiling -> assert_called_once_with;
test_on_train_batch_start_no_profiling -> patch;
test_on_train_batch_start_no_profiling -> NsysCallback;
test_on_train_batch_start_no_profiling -> on_train_batch_start;
test_on_train_batch_start_no_profiling -> assert_not_called;
test_on_train_batch_end_profiling -> patch;
test_on_train_batch_end_profiling -> NsysCallback;
test_on_train_batch_end_profiling -> on_train_batch_end;
test_on_train_batch_end_profiling -> assert_called_once;
test_on_train_batch_end_no_profiling -> patch;
test_on_train_batch_end_no_profiling -> NsysCallback;
test_on_train_batch_end_no_profiling -> on_train_batch_end;
test_on_train_batch_end_no_profiling -> assert_not_called;
test_non_cuda_device -> NsysCallback;
test_non_cuda_device -> on_train_batch_start;
test_non_cuda_device -> on_train_batch_end;
test_rank_not_in_profile_ranks -> patch;
test_rank_not_in_profile_ranks -> NsysCallback;
test_rank_not_in_profile_ranks -> on_train_batch_start;
test_rank_not_in_profile_ranks -> on_train_batch_end;
test_profiling_range -> parametrize;
test_profiling_range -> patch;
test_profiling_range -> NsysCallback;
test_profiling_range -> on_train_batch_start;
test_profiling_range -> assert_called_once;
test_profiling_range -> assert_not_called;
test_single_profile_range -> patch;
test_single_profile_range -> NsysCallback;
test_single_profile_range -> on_train_batch_start;
test_single_profile_range -> on_train_batch_end;
test_peft_call -> DummyModel;
test_peft_call -> DummyPEFT;
test_peft_call -> peft;
test_peft_call -> hasattr;
test_linear_adapter -> Linear;
test_linear_adapter -> LinearAdapter;
test_linear_adapter -> items;
test_linear_adapter -> state_dict;
test_linear_adapter -> equal;
test_linear_adapter_monkey_patch -> Linear;
test_linear_adapter_monkey_patch -> deepcopy;
test_linear_adapter_monkey_patch -> patch_linear_module;
test_linear_adapter_monkey_patch -> items;
test_linear_adapter_monkey_patch -> state_dict;
test_linear_adapter_monkey_patch -> equal;
test_linear_adapter_monkey_patch -> hasattr;
test_linear_adapter_monkey_patch -> getattr;
test_peft_setup -> DummyPEFT;
test_peft_setup -> MagicMock;
test_peft_setup -> setup;
test_peft_setup -> isinstance;
test_peft_on_train_epoch_start_with_adapter -> patch;
test_peft_on_train_epoch_start_with_adapter -> DummyPEFT;
test_peft_on_train_epoch_start_with_adapter -> MagicMock;
test_peft_on_train_epoch_start_with_adapter -> setup;
test_peft_on_train_epoch_start_with_adapter -> on_train_epoch_start;
test_peft_on_train_epoch_start_with_adapter -> assert_has_calls;
test_peft_on_train_epoch_start_with_adapter -> assert_called_once_with;
test_peft_on_train_epoch_start_with_adapter -> assert_called_once;
test_peft_on_train_epoch_start_with_adapter -> call;
test_params_to_save -> DummyModel;
test_params_to_save -> DummyPEFT;
test_params_to_save -> MagicMock;
test_params_to_save -> requires_grad_;
test_params_to_save -> set_params_to_save;
test_params_to_save -> hasattr;
test_params_to_save -> named_parameters;
test_params_to_save_batchnorm -> DummyModel;
test_params_to_save_batchnorm -> BatchNorm2d;
test_params_to_save_batchnorm -> DummyPEFT;
test_params_to_save_batchnorm -> MagicMock;
test_params_to_save_batchnorm -> freeze;
test_params_to_save_batchnorm -> set_params_to_save;
test_params_to_save_batchnorm -> hasattr;
test_params_to_save_batchnorm -> named_parameters;
test_custom_signal -> PreemptionCallback;
test_on_train_batch_start_distributed_init -> parametrize;
test_on_train_batch_start_distributed_init -> object;
test_on_train_batch_start_distributed_init -> on_train_start;
test_on_train_batch_start_distributed_init -> on_train_batch_start;
test_on_train_batch_start_distributed_init -> assert_called_once_with;
test_on_train_batch_start_distributed_init -> assert_not_called;
test_interrupted_property -> parametrize;
test_interrupted_property -> object;
test_interrupted_property -> patch;
test_interrupted_property -> tensor;
test_on_train_start -> object;
test_on_train_start -> on_train_start;
test_on_train_start -> assert_called_once;
test_on_train_start -> reset_mock;
test_on_train_start -> assert_not_called;
test_on_train_end -> MagicMock;
test_on_train_end -> on_train_end;
test_on_train_end -> assert_called_once_with;
test_on_train_batch_end -> parametrize;
test_on_train_batch_end -> object;
test_on_train_batch_end -> on_train_batch_end;
test_on_train_batch_end -> raises;
test_on_train_batch_end -> property;
mock_mixed_precision_policy -> MagicMock;
mock_device_mesh -> MagicMock;
mock_lightning_module -> MagicMock;
mock_lightning_module -> tensor;
mock_lightning_module -> randn;
strategy -> FSDP2Strategy;
strategy -> MagicMock;
strategy -> patch;
strategy -> FSDPStrategy;
test_load_optimizer_state_dict -> load_optimizer_state_dict;
test_setup -> MagicMock;
test_setup -> setup;
test_setup -> assert_called_once_with;
test_setup -> assert_called_once;
test_parallelize -> MagicMock;
test_parallelize -> parallelize;
test_parallelize -> assert_called_once;
test_parallelize -> patch;
test_checkpoint_io -> patch;
test_checkpoint_io -> FSDP2Strategy;
test_checkpoint_io -> assert_called_once;
test_checkpoint_io -> object;
test_checkpoint_io -> Dummy;
test_checkpoint_io -> FSDPStrategy;
test_checkpoint_io -> MegatronStrategy;
test_checkpoint_io -> assert_called;
test_remove_checkpoint -> Path;
test_remove_checkpoint -> patch;
test_remove_checkpoint -> remove_checkpoint;
test_remove_checkpoint -> assert_called_once;
test_remove_checkpoint -> mkdir;
test_remove_checkpoint -> touch;
test_remove_checkpoint -> exists;
test_save_checkpoint -> MagicMock;
test_save_checkpoint -> save_checkpoint;
test_save_checkpoint -> assert_called_once_with;
test_save_checkpoint -> randn;
test_load_checkpoint -> MagicMock;
test_load_checkpoint -> load_checkpoint;
test_load_checkpoint -> assert_called_once_with;
test_test_step -> MagicMock;
test_test_step -> test_step;
test_test_step -> assert_called_once_with;
test_test_step -> assert_called_once;
test_test_step -> tensor;
test_test_step -> FSDPPrecision;
mock_transformer_layer -> MagicMock;
mock_checkpoint_io -> MagicMock;
mock_checkpoint_io -> OrderedDict;
test_process_dataloader -> MagicMock;
test_process_dataloader -> process_dataloader;
test_process_dataloader -> assert_called_once_with;
test_ddp_strategy_conversion -> DDPStrategy;
test_ddp_strategy_conversion -> to_fabric;
test_ddp_strategy_conversion -> isinstance;
test_fsdp_strategy_conversion -> FSDPStrategy;
test_fsdp_strategy_conversion -> to_fabric;
test_fsdp_strategy_conversion -> isinstance;
test_mixed_precision_plugin_conversion -> MixedPrecision;
test_mixed_precision_plugin_conversion -> to_fabric;
test_mixed_precision_plugin_conversion -> isinstance;
test_fsdp_precision_plugin_conversion -> FSDPPrecision;
test_fsdp_precision_plugin_conversion -> to_fabric;
test_fsdp_precision_plugin_conversion -> isinstance;
test_unsupported_object_conversion -> raises;
test_unsupported_object_conversion -> to_fabric;
test_unsupported_object_conversion -> str;
test_unsupported_object_conversion -> UnsupportedObject;
test_megatron_strategy_conversion -> MegatronStrategy;
test_megatron_strategy_conversion -> to_fabric;
test_megatron_strategy_conversion -> isinstance;
test_megatron_precision_conversion -> MegatronMixedPrecision;
test_megatron_precision_conversion -> to_fabric;
test_megatron_precision_conversion -> isinstance;
partial_function_with_pos_and_key_args -> partial;
test_reload_ckpt -> Trainer;
test_reload_ckpt -> get_nmt_tokenizer;
test_reload_ckpt -> GPTModel;
test_reload_ckpt -> TrainerContext;
test_reload_ckpt -> io_dump;
test_reload_ckpt -> load_context;
test_reload_ckpt -> startswith;
test_reload_ckpt -> isinstance;
test_reload_ckpt -> GPTConfig;
test_reload_ckpt -> str;
test_reload_ckpt -> loaded_func;
test_reload_ckpt -> partial_function_with_pos_and_key_args;
test_reload_ckpt -> Partial;
test_reload_ckpt -> MegatronStrategy;
test_reload_ckpt -> TensorBoardLogger;
adapter_checkpoint_io -> HFCheckpointIO;
save_and_load_checkpoint -> save_checkpoint;
save_and_load_checkpoint -> exists;
save_and_load_checkpoint -> load_checkpoint;
save_and_load_checkpoint -> iterdir;
save_and_load_checkpoint -> rmdir;
save_and_load_checkpoint -> mkdir;
save_and_load_checkpoint -> write_text;
save_and_load_checkpoint -> is_dir;
save_and_load_checkpoint -> unlink;
test_save_and_load_checkpoint -> save_and_load_checkpoint;
test_save_and_load_checkpoint -> tensor;
test_save_and_load_checkpoint_adapter_only -> save_and_load_checkpoint;
test_save_and_load_checkpoint_adapter_only -> tensor;
test_reinit -> DummyClass;
test_reinit -> reinit;
single_transform -> state_transform;
multiple_outputs_transform -> state_transform;
mock_multi_target_ctx -> TransformCTX;
mock_multi_target_ctx -> Module;
test_transform_with_single_source_single_target -> StateDictTransform;
test_transform_with_single_source_single_target -> transform;
test_transform_with_multiple_sources -> StateDictTransform;
test_transform_with_multiple_sources -> transform;
test_transform_with_multiple_mapped_sources -> StateDictTransform;
test_transform_with_multiple_mapped_sources -> transform;
test_transform_with_variable_arguments -> StateDictTransform;
test_transform_with_variable_arguments -> transform;
test_transform_with_variable_arguments -> sum;
test_transform_with_no_matching_source -> StateDictTransform;
test_transform_with_no_matching_source -> raises;
test_transform_with_no_matching_source -> transform;
test_transform_with_no_matching_source -> sum;
test_transform_with_multiple_targets -> StateDictTransform;
test_transform_with_multiple_targets -> transform;
test_transform_with_multiple_sources_multiple_wildcards -> StateDictTransform;
test_transform_with_multiple_sources_multiple_wildcards -> transform;
test_transform_with_multiple_targets_multiple_wildcards -> StateDictTransform;
test_transform_with_multiple_targets_multiple_wildcards -> transform;
test_transform_with_no_matching_target -> StateDictTransform;
test_transform_with_no_matching_target -> raises;
test_transform_with_no_matching_target -> transform;
test_transform_with_no_matching_target -> sum;
test_transform_with_invalid_transform_function -> StateDictTransform;
test_transform_with_invalid_transform_function -> raises;
test_transform_with_invalid_transform_function -> transform;
test_single_transform -> single_transform;
test_multiple_outputs_transform -> multiple_outputs_transform;
create_sample_jsonl -> print;
create_sample_jsonl -> makedirs;
create_sample_jsonl -> isfile;
create_sample_jsonl -> dirname;
create_sample_jsonl -> open;
create_sample_jsonl -> abspath;
create_sample_jsonl -> dump;
create_sample_jsonl -> write;
create_sample_jsonl -> len;
create_sample_lambada -> print;
create_sample_lambada -> makedirs;
create_sample_lambada -> isfile;
create_sample_lambada -> dirname;
create_sample_lambada -> open;
create_sample_lambada -> dump;
create_sample_lambada -> abspath;
create_sample_lambada -> len;
get_hf_model_class -> getattr;
get_hf_model_class -> len;
get_hf_model_class -> print;
create_hf_model -> from_pretrained;
create_hf_model -> get_hf_model_class;
create_hf_model -> print;
create_hf_model -> model_class;
create_hf_model -> makedirs;
create_hf_model -> save_pretrained;
create_hf_model -> isdir;
create_hf_model -> update;
test_incorrect_value -> ASRModelType;
test_incorrect_value -> str;
test_correct_value -> ASRModelType;
test_str -> str;
test_str -> ASRModelType;
test_get_envint_returns_int_value -> dict;
test_get_envint_returns_int_value -> get_envint;
test_get_envint_with_default -> get_envint;
test_get_envint_required_missing -> raises;
test_get_envint_required_missing -> get_envint;
test_get_envint_coercion_error -> dict;
test_get_envint_coercion_error -> raises;
test_get_envint_coercion_error -> get_envint;
test_get_envint_negative_value -> dict;
test_get_envint_negative_value -> get_envint;
test_get_envfloat_returns_float_value -> dict;
test_get_envfloat_returns_float_value -> get_envfloat;
test_get_envfloat_with_integer_string -> dict;
test_get_envfloat_with_integer_string -> get_envfloat;
test_get_envfloat_with_integer_string -> isinstance;
test_get_envfloat_with_default -> get_envfloat;
test_get_envfloat_required_missing -> raises;
test_get_envfloat_required_missing -> get_envfloat;
test_get_envfloat_coercion_error -> dict;
test_get_envfloat_coercion_error -> raises;
test_get_envfloat_coercion_error -> get_envfloat;
test_get_envfloat_scientific_notation -> dict;
test_get_envfloat_scientific_notation -> get_envfloat;
test_get_envfloat_negative_value -> dict;
test_get_envfloat_negative_value -> get_envfloat;
test_get_envbool_true_values -> dict;
test_get_envbool_true_values -> get_envbool;
test_get_envbool_false_values -> dict;
test_get_envbool_false_values -> get_envbool;
test_get_envbool_with_default -> get_envbool;
test_get_envbool_required_missing -> raises;
test_get_envbool_required_missing -> get_envbool;
test_get_envbool_non_boolean_value -> dict;
test_get_envbool_non_boolean_value -> get_envbool;
test_get_envdecimal_returns_decimal_value -> dict;
test_get_envdecimal_returns_decimal_value -> get_envdecimal;
test_get_envdecimal_returns_decimal_value -> isinstance;
test_get_envdecimal_returns_decimal_value -> Decimal;
test_get_envdecimal_with_integer_string -> dict;
test_get_envdecimal_with_integer_string -> get_envdecimal;
test_get_envdecimal_with_integer_string -> isinstance;
test_get_envdecimal_with_integer_string -> Decimal;
test_get_envdecimal_with_default -> Decimal;
test_get_envdecimal_with_default -> get_envdecimal;
test_get_envdecimal_required_missing -> raises;
test_get_envdecimal_required_missing -> get_envdecimal;
test_get_envdecimal_coercion_error -> dict;
test_get_envdecimal_coercion_error -> raises;
test_get_envdecimal_coercion_error -> get_envdecimal;
test_get_envdecimal_negative_value -> dict;
test_get_envdecimal_negative_value -> get_envdecimal;
test_get_envdecimal_negative_value -> Decimal;
test_get_envdecimal_high_precision -> dict;
test_get_envdecimal_high_precision -> get_envdecimal;
test_get_envdecimal_high_precision -> Decimal;
test_get_envdate_returns_date_value -> dict;
test_get_envdate_returns_date_value -> get_envdate;
test_get_envdate_returns_date_value -> isinstance;
test_get_envdate_returns_date_value -> date;
test_get_envdate_with_different_formats -> items;
test_get_envdate_with_different_formats -> date;
test_get_envdate_with_different_formats -> dict;
test_get_envdate_with_different_formats -> get_envdate;
test_get_envdate_with_default -> date;
test_get_envdate_with_default -> get_envdate;
test_get_envdate_required_missing -> raises;
test_get_envdate_required_missing -> get_envdate;
test_get_envdate_coercion_error -> dict;
test_get_envdate_coercion_error -> raises;
test_get_envdate_coercion_error -> get_envdate;
test_get_envdatetime_returns_datetime_value -> dict;
test_get_envdatetime_returns_datetime_value -> get_envdatetime;
test_get_envdatetime_returns_datetime_value -> isinstance;
test_get_envdatetime_returns_datetime_value -> datetime;
test_get_envdatetime_with_different_formats -> items;
test_get_envdatetime_with_different_formats -> datetime;
test_get_envdatetime_with_different_formats -> dict;
test_get_envdatetime_with_different_formats -> get_envdatetime;
test_get_envdatetime_with_default -> datetime;
test_get_envdatetime_with_default -> get_envdatetime;
test_get_envdatetime_required_missing -> raises;
test_get_envdatetime_required_missing -> get_envdatetime;
test_get_envdatetime_coercion_error -> dict;
test_get_envdatetime_coercion_error -> raises;
test_get_envdatetime_coercion_error -> get_envdatetime;
test_get_envdatetime_with_timezone -> dict;
test_get_envdatetime_with_timezone -> get_envdatetime;
test_get_envlist_returns_list_value -> dict;
test_get_envlist_returns_list_value -> get_envlist;
test_get_envlist_returns_list_value -> isinstance;
test_get_envlist_with_custom_separator -> dict;
test_get_envlist_with_custom_separator -> get_envlist;
test_get_envlist_with_default -> get_envlist;
test_get_envlist_required_missing -> raises;
test_get_envlist_required_missing -> get_envlist;
test_get_envlist_empty_string -> dict;
test_get_envlist_empty_string -> get_envlist;
test_get_envlist_multiple_words -> dict;
test_get_envlist_multiple_words -> get_envlist;
test_get_envdict_returns_dict_value -> dict;
test_get_envdict_returns_dict_value -> get_envdict;
test_get_envdict_returns_dict_value -> isinstance;
test_get_envdict_returns_dict_value -> dumps;
test_get_envdict_with_default -> get_envdict;
test_get_envdict_required_missing -> raises;
test_get_envdict_required_missing -> get_envdict;
test_get_envdict_coercion_error -> dict;
test_get_envdict_coercion_error -> raises;
test_get_envdict_coercion_error -> get_envdict;
test_get_envdict_complex_dict -> dict;
test_get_envdict_complex_dict -> get_envdict;
test_get_envdict_complex_dict -> dumps;
flops_config -> FLOPSConfig;
test_gpt3 -> gpt3;
test_llama2 -> llama2;
test_llama3 -> llama3;
test_nemotron -> nemotron;
test_mixtral -> mixtral;
test_bert -> bert;
test_hyena -> hyena;
test_transformer -> transformer;
test_transformer_no_moe -> transformer;
test_default_behavior -> is_global_rank_zero;
test_with_pytorch_rank_0 -> is_global_rank_zero;
test_with_pytorch_rank_nonzero -> is_global_rank_zero;
test_with_slurm_rank_0 -> is_global_rank_zero;
test_with_slurm_rank_nonzero -> is_global_rank_zero;
test_with_mpi_rank_0 -> is_global_rank_zero;
test_with_mpi_rank_nonzero -> is_global_rank_zero;
test_with_node_rank_0_local_rank_0 -> is_global_rank_zero;
test_with_node_rank_0_local_rank_nonzero -> is_global_rank_zero;
test_with_node_rank_nonzero -> is_global_rank_zero;
test_with_group_rank_fallback -> is_global_rank_zero;
test_env_var_precedence -> is_global_rank_zero;
test_not_distributed -> patch;
test_not_distributed -> get_rank;
test_not_distributed -> assert_called_once;
test_not_distributed -> get_last_rank;
test_distributed_not_global_rank_zero -> patch;
test_distributed_not_global_rank_zero -> assert_called_once;
test_distributed_not_global_rank_zero -> get_rank;
test_distributed_global_rank_zero -> patch;
test_distributed_global_rank_zero -> assert_not_called;
test_distributed_global_rank_zero -> get_rank;
test_distributed -> patch;
test_distributed -> assert_called_once;
test_distributed -> get_last_rank;
test_metaclass_creation -> UnavailableMeta;
test_custom_error_message -> UnavailableMeta;
test_custom_error_message -> raises;
test_custom_error_message -> TestClass;
test_call_raises_error -> UnavailableMeta;
test_call_raises_error -> raises;
test_call_raises_error -> TestClass;
test_attribute_access_raises_error -> UnavailableMeta;
test_attribute_access_raises_error -> raises;
test_arithmetic_operations_raise_error -> UnavailableMeta;
test_arithmetic_operations_raise_error -> abs;
test_arithmetic_operations_raise_error -> raises;
test_arithmetic_operations_raise_error -> op;
test_comparison_operations_raise_error -> UnavailableMeta;
test_comparison_operations_raise_error -> raises;
test_comparison_operations_raise_error -> comp;
test_container_operations_raise_error -> UnavailableMeta;
test_container_operations_raise_error -> raises;
test_container_operations_raise_error -> len;
test_container_operations_raise_error -> iter;
test_descriptor_operations_raise_error -> UnavailableMeta;
test_descriptor_operations_raise_error -> DummyClass;
test_descriptor_operations_raise_error -> raises;
test_descriptor_operations_raise_error -> __get__;
test_descriptor_operations_raise_error -> __delete__;
test_successful_import -> safe_import;
test_successful_import -> isinstance;
test_failed_import -> safe_import;
test_failed_import -> is_unavailable;
test_failed_import -> type;
test_import_with_custom_message -> safe_import;
test_import_with_custom_message -> is_unavailable;
test_import_with_custom_message -> raises;
test_import_with_custom_message -> module;
test_import_with_alternative -> object;
test_import_with_alternative -> safe_import;
test_unavailable_module_raises_error_when_used -> safe_import;
test_unavailable_module_raises_error_when_used -> raises;
test_unavailable_module_raises_error_when_used -> module;
test_successful_import_from -> safe_import_from;
test_failed_import_from_nonexistent_module -> safe_import_from;
test_failed_import_from_nonexistent_module -> is_unavailable;
test_failed_import_from_nonexistent_symbol -> safe_import_from;
test_failed_import_from_nonexistent_symbol -> is_unavailable;
test_import_from_with_custom_message -> safe_import_from;
test_import_from_with_custom_message -> raises;
test_import_from_with_custom_message -> symbol;
test_import_from_with_alternative -> object;
test_import_from_with_alternative -> safe_import_from;
test_fallback_module -> patch;
test_fallback_module -> safe_import_from;
test_fallback_module -> AttributeError;
test_fallback_module -> MagicMock;
test_fallback_module -> ImportError;
test_fallback_module_both_fail -> safe_import_from;
test_fallback_module_both_fail -> is_unavailable;
side_effect -> AttributeError;
side_effect -> MagicMock;
side_effect -> ImportError;
test_resolve_trainer_cfg_strategy -> create;
test_resolve_trainer_cfg_strategy -> resolve_trainer_cfg;
test_resolve_trainer_cfg_strategy -> isinstance;
test_resolve_cache_dir -> patch;
test_resolve_cache_dir -> items;
test_resolve_cache_dir -> join;
test_resolve_cache_dir -> expanduser;
test_resolve_cache_dir -> as_posix;
test_resolve_cache_dir -> getcwd;
test_resolve_cache_dir -> resolve_cache_dir;
test_is_datastore_path -> is_datastore_path;
test_bucket_and_object_from_uri -> bucket_and_object_from_uri;
test_bucket_and_object_from_uri -> raises;
test_ais_endpoint_to_dir -> ais_endpoint_to_dir;
test_ais_endpoint_to_dir -> join;
test_ais_endpoint_to_dir -> raises;
test_ais_binary -> patch;
test_ais_binary -> ais_binary;
test_ais_binary -> raises;
test_datastore_path_to_webdataset_url -> datastore_path_to_webdataset_url;
cal_target_metadata_wer -> ValueError;
cal_target_metadata_wer -> open;
cal_target_metadata_wer -> len;
cal_target_metadata_wer -> info;
cal_target_metadata_wer -> update;
cal_target_metadata_wer -> loads;
cal_target_metadata_wer -> pop;
cal_target_metadata_wer -> isinstance;
cal_target_metadata_wer -> join;
cal_target_metadata_wer -> str;
run_offline_inference -> set_struct;
run_offline_inference -> NamedTemporaryFile;
run_offline_inference -> save;
run_offline_inference -> seek;
run_offline_inference -> get_hydra_override_from_config;
run_offline_inference -> run;
run_offline_inference -> Path;
run_offline_inference -> open_dict;
run_offline_inference -> get;
run_chunked_inference -> run;
run_chunked_inference -> set_struct;
run_chunked_inference -> Path;
run_chunked_inference -> str;
run_chunked_inference -> open_dict;
run_chunked_inference -> lower;
run_chunked_inference -> ValueError;
process_alignment -> replace;
process_alignment -> read;
process_alignment -> int;
process_alignment -> enumerate;
process_alignment -> exists;
process_alignment -> ValueError;
process_alignment -> open;
process_alignment -> len;
process_alignment -> round;
process_alignment -> basename;
process_alignment -> split;
process_alignment -> append;
process_alignment -> strip;
process_alignment -> float;
process_alignment -> join;
process_alignment -> write;
process_alignment -> dump;
process_alignment -> mean;
process_alignment -> abs;
_calculate -> split;
_calculate -> max;
_calculate -> eval;
_calculate -> len;
_calculate -> abs;
_apply_filters -> info;
_apply_filters -> open;
_apply_filters -> loads;
_apply_filters -> write;
_apply_filters -> round;
_apply_filters -> dumps;
split_text -> print;
split_text -> replace;
split_text -> sub;
split_text -> findall;
split_text -> finditer;
split_text -> append;
split_text -> additional_split;
split_text -> list;
split_text -> set;
split_text -> split;
split_text -> join;
split_text -> translate;
split_text -> open;
split_text -> read;
split_text -> group;
split_text -> start;
split_text -> end;
split_text -> strip;
split_text -> extend;
split_text -> upper;
split_text -> remove;
split_text -> len;
split_text -> range;
split_text -> write;
split_text -> items;
split_text -> Normalizer;
split_text -> normalize_list;
split_text -> compile;
split_text -> enumerate;
split_text -> lower;
split_text -> difference;
split_text -> maketrans;
split_text -> ValueError;
split_text -> _split;
split_text -> str;
split_text -> num2words;
split_text -> dirname;
split_text -> intersection;
additional_split -> split;
additional_split -> len;
additional_split -> extend;
additional_split -> strip;
additional_split -> _split;
additional_split -> append;
_split -> split;
_split -> extend;
_split -> strip;
_split -> append;
_split -> len;
get_segments -> FileHandler;
get_segments -> StreamHandler;
get_segments -> basicConfig;
get_segments -> replace;
get_segments -> CtcSegmentationParameters;
get_segments -> _print;
get_segments -> debug;
get_segments -> ctc_segmentation;
get_segments -> determine_utterance_segments;
get_segments -> write_output;
get_segments -> write_labels_for_audacity;
get_segments -> info;
get_segments -> enumerate;
get_segments -> open;
get_segments -> readlines;
get_segments -> exists;
get_segments -> ValueError;
get_segments -> len;
get_segments -> _prepare_tokenized_text_for_bpe_model;
get_segments -> index;
get_segments -> prepare_text;
get_segments -> zip;
get_segments -> strip;
get_segments -> basename;
_print -> append;
_print -> debug;
_print -> int;
determine_utterance_segments -> float64;
determine_utterance_segments -> tqdm;
determine_utterance_segments -> range;
determine_utterance_segments -> _compute_time;
determine_utterance_segments -> floor;
determine_utterance_segments -> int;
determine_utterance_segments -> append;
determine_utterance_segments -> len;
determine_utterance_segments -> round;
determine_utterance_segments -> mean;
determine_utterance_segments -> min;
write_output -> open;
write_output -> write;
write_output -> enumerate;
write_output -> str;
write_output -> isinstance;
write_labels_for_audacity -> open;
write_labels_for_audacity -> enumerate;
write_labels_for_audacity -> str;
write_labels_for_audacity -> isinstance;
write_labels_for_audacity -> write;
_prepare_tokenized_text_for_bpe_model -> index;
_prepare_tokenized_text_for_bpe_model -> append;
_prepare_tokenized_text_for_bpe_model -> array;
_prepare_tokenized_text_for_bpe_model -> text_to_ids;
_prepare_tokenized_text_for_bpe_model -> len;
_get_blank_spans -> enumerate;
_get_blank_spans -> append;
_compute_time -> max;
_compute_time -> min;
load_file_into_df -> endswith;
load_file_into_df -> isfile;
load_file_into_df -> ValueError;
load_file_into_df -> fillna;
load_file_into_df -> lower;
load_file_into_df -> read_json;
load_file_into_df -> read_excel;
load_file_into_df -> read_csv;
recommend_hyperparameters_human_readable -> items;
recommend_hyperparameters -> min;
recommend_hyperparameters -> apply;
recommend_hyperparameters -> sorted;
recommend_hyperparameters -> ceil;
recommend_hyperparameters -> mean;
recommend_hyperparameters -> std;
recommend_hyperparameters -> max;
recommend_hyperparameters -> len;
recommend_hyperparameters -> list;
estimating_customization_job_time -> sum;
estimating_customization_job_time -> memory_usage;
estimating_customization_job_time -> round;
warn_completion_is_not_empty -> tolist;
warn_completion_is_not_empty -> isnull;
warn_completion_is_not_empty -> len;
warn_completion_is_not_empty -> reset_index;
warn_imbalanced_completion -> tolist;
warn_imbalanced_completion -> Counter;
warn_imbalanced_completion -> len;
warn_imbalanced_completion -> most_common;
warn_imbalanced_completion -> round;
get_common_suffix -> nunique;
get_common_suffix -> len;
warn_missing_suffix -> get_common_suffix;
validate_template -> range;
validate_template -> ValueError;
validate_template -> len;
parse_template -> len;
parse_template -> append;
warn_duplicated_rows -> duplicated;
warn_duplicated_rows -> tolist;
warn_duplicated_rows -> len;
warn_duplicated_rows -> reset_index;
drop_duplicated_rows -> duplicated;
drop_duplicated_rows -> tolist;
drop_duplicated_rows -> len;
drop_duplicated_rows -> drop_duplicates;
drop_duplicated_rows -> reset_index;
template_mapper -> replace;
drop_unrequired_fields -> drop;
convert_into_template -> validate_template;
convert_into_template -> replace;
convert_into_template -> parse_template;
convert_into_template -> apply;
convert_into_template -> ValueError;
convert_into_template -> template_mapper;
convert_into_template -> list;
convert_into_prompt_completion_only -> convert_into_template;
convert_into_prompt_completion_only -> drop_unrequired_fields;
warn_and_drop_long_samples -> apply;
warn_and_drop_long_samples -> tolist;
warn_and_drop_long_samples -> len;
warn_and_drop_long_samples -> reset_index;
warn_and_drop_long_samples -> drop;
warn_low_n_samples -> len;
show_first_example_in_df -> replace;
get_prepared_filename -> Path;
get_prepared_filename -> replace;
get_prepared_filename -> isfile;
split_into_train_validation -> int;
split_into_train_validation -> sample;
split_into_train_validation -> drop;
split_into_train_validation -> len;
write_df_to_jsonl -> to_json;
print_select_messages -> print;
print_select_messages -> enumerate;
print_all_messages -> print_select_messages;
print_all_messages -> startswith;
test_recommend_hyperparameters -> DataFrame;
test_recommend_hyperparameters -> recommend_hyperparameters;
test_warn_completion_is_not_empty -> DataFrame;
test_warn_completion_is_not_empty -> warn_completion_is_not_empty;
test_warn_imbalanced_completion -> DataFrame;
test_warn_imbalanced_completion -> range;
test_warn_imbalanced_completion -> warn_imbalanced_completion;
test_get_common_suffix -> DataFrame;
test_get_common_suffix -> get_common_suffix;
test_get_common_suffix -> range;
test_warn_missing_suffix -> DataFrame;
test_warn_missing_suffix -> warn_missing_suffix;
test_warn_missing_suffix -> range;
test_parse_template -> parse_template;
test_validate_template -> validate_template;
test_validate_template -> raises;
test_warn_duplicated_rows -> DataFrame;
test_warn_duplicated_rows -> warn_duplicated_rows;
test_drop_duplicated_rows -> DataFrame;
test_drop_duplicated_rows -> equals;
test_drop_duplicated_rows -> drop_duplicated_rows;
test_template_mapper -> DataFrame;
test_template_mapper -> template_mapper;
test_drop_unrequired_fields -> DataFrame;
test_drop_unrequired_fields -> equals;
test_drop_unrequired_fields -> drop_unrequired_fields;
test_convert_into_template -> DataFrame;
test_convert_into_template -> equals;
test_convert_into_template -> raises;
test_convert_into_template -> convert_into_template;
test_convert_into_prompt_completion_only -> DataFrame;
test_convert_into_prompt_completion_only -> equals;
test_convert_into_prompt_completion_only -> convert_into_prompt_completion_only;
get_indexes_of_long_examples -> apply;
get_indexes_of_long_examples -> tolist;
get_indexes_of_long_examples -> len;
get_indexes_of_long_examples -> reset_index;
test_warn_and_drop_long_samples -> DataFrame;
test_warn_and_drop_long_samples -> equals;
test_warn_and_drop_long_samples -> warn_and_drop_long_samples;
test_warn_low_n_samples -> DataFrame;
test_warn_low_n_samples -> warn_low_n_samples;
test_show_first_example_in_df -> DataFrame;
test_show_first_example_in_df -> show_first_example_in_df;
test_get_prepared_filename -> get_prepared_filename;
test_split_into_train_validation -> DataFrame;
test_split_into_train_validation -> split_into_train_validation;
test_split_into_train_validation -> len;
get_batch_starts_ends -> pop;
get_batch_starts_ends -> append;
get_batch_starts_ends -> open;
get_batch_starts_ends -> sum;
get_batch_starts_ends -> range;
is_entry_in_all_lines -> open;
is_entry_in_all_lines -> loads;
is_entry_in_any_lines -> open;
is_entry_in_any_lines -> loads;
get_manifest_lines_batch -> open;
get_manifest_lines_batch -> enumerate;
get_manifest_lines_batch -> loads;
get_manifest_lines_batch -> append;
get_manifest_lines_batch -> replace;
get_manifest_lines_batch -> join;
get_manifest_lines_batch -> split;
get_batch_variables -> len;
get_batch_variables -> enumerate;
get_batch_variables -> max;
get_batch_variables -> hasattr;
get_batch_variables -> tensor;
get_batch_variables -> tqdm;
get_batch_variables -> get_utt_obj;
get_batch_variables -> append;
get_batch_variables -> ones;
get_batch_variables -> round;
get_batch_variables -> info;
get_batch_variables -> reset;
get_batch_variables -> read_audio_file;
get_batch_variables -> transcribe;
get_batch_variables -> join;
get_batch_variables -> _get_utt_id;
get_batch_variables -> ValueError;
get_batch_variables -> SoundFile;
get_batch_variables -> no_grad;
get_batch_variables -> transcribe_simulate_cache_aware_streaming;
get_batch_variables -> type;
get_batch_variables -> split;
get_batch_variables -> int;
viterbi_decoding -> to;
viterbi_decoding -> cat;
viterbi_decoding -> gather;
viterbi_decoding -> roll;
viterbi_decoding -> range;
viterbi_decoding -> ones;
viterbi_decoding -> logical_or;
viterbi_decoding -> long;
viterbi_decoding -> masked_fill_;
viterbi_decoding -> max;
viterbi_decoding -> int;
viterbi_decoding -> append;
viterbi_decoding -> unsqueeze;
viterbi_decoding -> insert;
viterbi_decoding -> logical_not;
viterbi_decoding -> logical_and;
viterbi_decoding -> arange;
viterbi_decoding -> argmax;
add_t_start_end_to_utt_obj -> dict;
add_t_start_end_to_utt_obj -> enumerate;
add_t_start_end_to_utt_obj -> len;
add_t_start_end_to_utt_obj -> type;
write_manifest_out_line -> items;
write_manifest_out_line -> dumps;
write_manifest_out_line -> write;
make_ctm_files -> make_ctm;
make_ctm_files -> SoundFile;
make_ass_files -> make_word_level_ass_file;
make_ass_files -> make_token_level_ass_file;
make_ass_files -> resegment_utt_obj;
make_ass_files -> SoundFile;
test_add_t_start_end_to_utt_obj -> parametrize;
test_add_t_start_end_to_utt_obj -> deepcopy;
test_add_t_start_end_to_utt_obj -> add_t_start_end_to_utt_obj;
test_add_t_start_end_to_utt_obj -> type;
get_utt_obj_pp_string -> register_pretty;
get_utt_obj_pp_string -> pformat;
get_utt_obj_pp_string -> pretty_call;
test_token_info -> parametrize;
test_token_info -> from_pretrained;
test_token_info -> get_utt_obj;
test_token_info -> print;
test_token_info -> get_utt_obj_pp_string;
get_utt_obj -> Utterance;
get_utt_obj -> hasattr;
get_utt_obj -> split;
get_utt_obj -> strip;
get_utt_obj -> text_to_ids;
get_utt_obj -> range;
get_utt_obj -> append;
get_utt_obj -> len;
get_utt_obj -> info;
get_utt_obj -> Token;
get_utt_obj -> text_to_tokens;
get_utt_obj -> enumerate;
get_utt_obj -> index;
get_utt_obj -> get_char_tokens;
get_utt_obj -> RuntimeError;
get_utt_obj -> Segment;
get_utt_obj -> restore_token_case;
get_utt_obj -> extend;
get_utt_obj -> Word;
get_utt_obj -> zip;
get_utt_obj -> list;
pretty_utterance -> register_pretty;
pretty_utterance -> pretty_call;
test_restore_token_case -> parametrize;
test_restore_token_case -> restore_token_case;
restore_token_case -> replace;
restore_token_case -> append;
restore_token_case -> is_sub_or_superscript_pair;
restore_token_case -> upper;
restore_token_case -> RuntimeError;
_get_utt_id -> replace;
_get_utt_id -> Path;
_get_utt_id -> join;
get_char_tokens -> append;
get_char_tokens -> index;
get_char_tokens -> len;
seconds_to_ass_format -> float;
seconds_to_ass_format -> divmod;
seconds_to_ass_format -> str;
seconds_to_ass_format -> round;
seconds_to_ass_format -> len;
seconds_to_ass_format -> split;
make_word_level_ass_file -> join;
make_word_level_ass_file -> makedirs;
make_word_level_ass_file -> str;
make_word_level_ass_file -> open;
make_word_level_ass_file -> write;
make_word_level_ass_file -> rgb_list_to_hex_bgr;
make_word_level_ass_file -> rstrip;
make_word_level_ass_file -> ValueError;
make_word_level_ass_file -> keys;
make_word_level_ass_file -> values;
make_word_level_ass_file -> type;
make_word_level_ass_file -> enumerate;
make_word_level_ass_file -> seconds_to_ass_format;
make_word_level_ass_file -> append;
make_word_level_ass_file -> float;
make_word_level_ass_file -> len;
make_word_level_ass_file -> ceil;
make_token_level_ass_file -> join;
make_token_level_ass_file -> makedirs;
make_token_level_ass_file -> str;
make_token_level_ass_file -> open;
make_token_level_ass_file -> write;
make_token_level_ass_file -> rgb_list_to_hex_bgr;
make_token_level_ass_file -> replace;
make_token_level_ass_file -> rstrip;
make_token_level_ass_file -> ValueError;
make_token_level_ass_file -> keys;
make_token_level_ass_file -> values;
make_token_level_ass_file -> type;
make_token_level_ass_file -> enumerate;
make_token_level_ass_file -> seconds_to_ass_format;
make_token_level_ass_file -> float;
make_token_level_ass_file -> append;
make_token_level_ass_file -> len;
make_token_level_ass_file -> ceil;
resegment_utt_obj -> int;
resegment_utt_obj -> append;
resegment_utt_obj -> Segment;
resegment_utt_obj -> len;
resegment_utt_obj -> type;
resegment_utt_obj -> extend;
resegment_utt_obj -> _get_word_n_chars;
resegment_utt_obj -> _get_segment_n_chars;
_get_word_n_chars -> len;
_get_segment_n_chars -> len;
make_ctm -> join;
make_ctm -> makedirs;
make_ctm -> open;
make_ctm -> type;
make_ctm -> append;
make_ctm -> max;
make_ctm -> min;
make_ctm -> replace;
make_ctm -> get_ctm_line;
make_ctm -> write;
listen_print_loop -> TranslateTextRequest;
listen_print_loop -> write;
listen_print_loop -> flush;
listen_print_loop -> print;
listen_print_loop -> append;
listen_print_loop -> len;
listen_print_loop -> TranslateText;
TranslateText -> info;
TranslateText -> batches;
TranslateText -> TranslateTextResponse;
TranslateText -> set_code;
TranslateText -> set_details;
TranslateText -> translate;
TranslateText -> extend;
TranslateText -> add_punctuation_capitalization;
TranslateText -> Translation;
TranslateText -> len;
TranslateText -> NotImplementedError;
TranslateText -> unary_unary;
batches -> range;
batches -> len;
add_RivaTranslateServicer_to_server -> method_handlers_generic_handler;
add_RivaTranslateServicer_to_server -> add_generic_rpc_handlers;
add_RivaTranslateServicer_to_server -> unary_unary_rpc_method_handler;
_load_puncutation_model -> endswith;
_load_puncutation_model -> is_available;
_load_puncutation_model -> restore_from;
_load_puncutation_model -> eval;
_load_puncutation_model -> NotImplemented;
_load_puncutation_model -> cuda;
get_translation -> route;
get_translation -> time;
get_translation -> get;
get_translation -> info;
get_translation -> jsonify;
get_translation -> add;
get_translation -> error;
get_translation -> translate;
get_translation -> str;
get_translation -> split;
split_filter_part -> split;
split_filter_part -> strip;
split_filter_part -> replace;
split_filter_part -> rfind;
split_filter_part -> float;
split_filter_part -> find;
eval_bandwidth -> int;
eval_bandwidth -> mean;
eval_bandwidth -> power_to_db;
eval_bandwidth -> range;
eval_bandwidth -> abs;
eval_bandwidth -> len;
eval_bandwidth -> stft;
append_data -> defaultdict;
append_data -> set;
append_data -> SequenceMatcher;
append_data -> open;
append_data -> tqdm;
append_data -> loads;
append_data -> len;
append_data -> split;
append_data -> append;
append_data -> isinstance;
append_data -> add;
append_data -> compute_measures;
append_data -> eval;
append_data -> set_seqs;
append_data -> get_matching_blocks;
append_data -> round;
append_data -> absolute_audio_filepath;
append_data -> load;
append_data -> eval_bandwidth;
append_data -> int;
append_data -> range;
append_data -> log10;
append_data -> max;
append_data -> error;
append_data -> exit;
append_data -> abs;
absolute_audio_filepath -> Path;
absolute_audio_filepath -> is_file;
absolute_audio_filepath -> expanduser;
absolute_audio_filepath -> is_absolute;
absolute_audio_filepath -> str;
plot_histogram -> histogram;
plot_histogram -> update_layout;
plot_histogram -> dict;
plot_word_accuracy -> Figure;
plot_word_accuracy -> update_layout;
plot_word_accuracy -> dict;
plot_word_accuracy -> Bar;
plot_word_accuracy -> format;
plot_word_accuracy -> sum;
download_vocabulary -> callback;
download_vocabulary -> split;
download_vocabulary -> len;
download_vocabulary -> send_file;
download_vocabulary -> Output;
download_vocabulary -> split_filter_part;
download_vocabulary -> sorted;
download_vocabulary -> open;
download_vocabulary -> writer;
download_vocabulary -> writerow;
download_vocabulary -> Input;
download_vocabulary -> State;
download_vocabulary -> keys;
download_vocabulary -> str;
download_vocabulary -> getattr;
update_wordstable -> callback;
update_wordstable -> split;
update_wordstable -> len;
update_wordstable -> split_filter_part;
update_wordstable -> sorted;
update_wordstable -> ceil;
update_wordstable -> Output;
update_wordstable -> Input;
update_wordstable -> getattr;
update_wordstable -> str;
real_select_click -> callback;
real_select_click -> str;
real_select_click -> range;
real_select_click -> Output;
real_select_click -> Input;
real_select_click -> len;
real_select_click -> ceil;
draw_table_with_metrics -> callback;
draw_table_with_metrics -> from_records;
draw_table_with_metrics -> scatter;
draw_table_with_metrics -> add_shape;
draw_table_with_metrics -> update_layout;
draw_table_with_metrics -> update_traces;
draw_table_with_metrics -> str;
draw_table_with_metrics -> Output;
draw_table_with_metrics -> Input;
draw_table_with_metrics -> dict;
update_datatable -> callback;
update_datatable -> split;
update_datatable -> len;
update_datatable -> split_filter_part;
update_datatable -> sorted;
update_datatable -> ceil;
update_datatable -> Output;
update_datatable -> Input;
update_datatable -> getattr;
update_datatable -> str;
show_item -> callback;
show_item -> len;
show_item -> Output;
show_item -> Input;
show_diff -> callback;
show_diff -> diff_match_patch;
show_diff -> diff_linesToChars;
show_diff -> diff_main;
show_diff -> diff_charsToLines;
show_diff -> diff_prettyHtml;
show_diff -> Output;
show_diff -> len;
show_diff -> join;
show_diff -> append;
show_diff -> Input;
show_diff -> split;
show_diff -> replace;
plot_signal -> callback;
plot_signal -> make_subplots;
plot_signal -> Output;
plot_signal -> len;
plot_signal -> absolute_audio_filepath;
plot_signal -> load;
plot_signal -> int;
plot_signal -> stft;
plot_signal -> power_to_db;
plot_signal -> add_trace;
plot_signal -> update_layout;
plot_signal -> update_xaxes;
plot_signal -> update_yaxes;
plot_signal -> Input;
plot_signal -> Scatter;
plot_signal -> Heatmap;
plot_signal -> error;
plot_signal -> dict;
plot_signal -> abs;
plot_signal -> arange;
update_player -> callback;
update_player -> Output;
update_player -> len;
update_player -> absolute_audio_filepath;
update_player -> load;
update_player -> format;
update_player -> Input;
update_player -> BytesIO;
update_player -> write;
update_player -> seek;
update_player -> b64encode;
update_player -> decode;
update_player -> error;
update_player -> read;
update_player -> int;
_wer_ -> split;
_wer_ -> eval;
_wer_ -> len;
write_metrics -> from_records;
write_metrics -> range;
write_metrics -> Series;
write_metrics -> to_dict;
write_metrics -> len;
write_metrics -> metric;
write_metrics -> append;
draw_vocab -> callback;
draw_vocab -> from_records;
draw_vocab -> prepare_data;
draw_vocab -> copy;
draw_vocab -> scatter;
draw_vocab -> Output;
draw_vocab -> float;
draw_vocab -> add_shape;
draw_vocab -> Input;
draw_vocab -> range;
draw_vocab -> len;
draw_vocab -> append;
draw_vocab -> dict;
draw_vocab -> cos;
draw_vocab -> sin;
draw_vocab -> randrange;
query_input_output -> callback;
query_input_output -> update;
query_input_output -> Output;
query_input_output -> Input;
write_query -> callback;
write_query -> Output;
write_query -> Input;
read_query -> callback;
read_query -> Markdown;
read_query -> Output;
read_query -> Input;
read_query -> format;
display_query -> Details;
display_query -> Summary;
display_query -> Div;
display_query -> Markdown;
display_query -> format;
display_query -> dumps;
show_hide_element -> callback;
show_hide_element -> Output;
show_hide_element -> Input;
nav_click -> callback;
nav_click -> Output;
nav_click -> Input;
get_token_cnt_spm -> glob;
get_token_cnt_spm -> from_generator;
get_token_cnt_spm -> print;
get_token_cnt_spm -> open;
get_token_cnt_spm -> append;
get_token_cnt_spm -> encode;
get_token_cnt_spm -> sum;
get_token_cnt_spm -> Reader;
get_token_cnt_spm -> len;
extend_tokenizer -> extend_tokenizer_llama;
extend_tokenizer -> print;
extend_tokenizer_llama -> glob;
extend_tokenizer_llama -> open;
extend_tokenizer_llama -> load;
extend_tokenizer_llama -> print;
extend_tokenizer_llama -> ModelProto;
extend_tokenizer_llama -> ParseFromString;
extend_tokenizer_llama -> set;
extend_tokenizer_llama -> len;
extend_tokenizer_llama -> range;
extend_tokenizer_llama -> enumerate;
extend_tokenizer_llama -> check_parent_directory_exists;
extend_tokenizer_llama -> SentencePieceProcessor;
extend_tokenizer_llama -> append;
extend_tokenizer_llama -> search;
extend_tokenizer_llama -> read;
extend_tokenizer_llama -> SentencePiece;
extend_tokenizer_llama -> insert;
extend_tokenizer_llama -> dump;
extend_tokenizer_llama -> write;
extend_tokenizer_llama -> sort;
extend_tokenizer_llama -> cat;
extend_tokenizer_llama -> zeros;
extend_tokenizer_llama -> encode_as_ids;
extend_tokenizer_llama -> save;
extend_tokenizer_llama -> Reader;
extend_tokenizer_llama -> replace;
extend_tokenizer_llama -> SerializeToString;
extend_tokenizer_llama -> int;
extend_tokenizer_llama -> mean;
extend_tokenizer_llama -> split;
extend_tokenizer_llama -> str;
extend_tokenizer_high_freq_tokens -> ModelProto;
extend_tokenizer_high_freq_tokens -> ParseFromString;
extend_tokenizer_high_freq_tokens -> len;
extend_tokenizer_high_freq_tokens -> print;
extend_tokenizer_high_freq_tokens -> SentencePieceProcessor;
extend_tokenizer_high_freq_tokens -> load;
extend_tokenizer_high_freq_tokens -> get_token_cnt_spm;
extend_tokenizer_high_freq_tokens -> enumerate;
extend_tokenizer_high_freq_tokens -> range;
extend_tokenizer_high_freq_tokens -> glob;
extend_tokenizer_high_freq_tokens -> sort;
extend_tokenizer_high_freq_tokens -> cat;
extend_tokenizer_high_freq_tokens -> zeros;
extend_tokenizer_high_freq_tokens -> bfloat16;
extend_tokenizer_high_freq_tokens -> read;
extend_tokenizer_high_freq_tokens -> SentencePiece;
extend_tokenizer_high_freq_tokens -> insert;
extend_tokenizer_high_freq_tokens -> append;
extend_tokenizer_high_freq_tokens -> open;
extend_tokenizer_high_freq_tokens -> dump;
extend_tokenizer_high_freq_tokens -> write;
extend_tokenizer_high_freq_tokens -> int;
extend_tokenizer_high_freq_tokens -> encode_as_ids;
extend_tokenizer_high_freq_tokens -> mean;
extend_tokenizer_high_freq_tokens -> save;
extend_tokenizer_high_freq_tokens -> SerializeToString;
extend_tokenizer_high_freq_tokens -> split;
myFunc -> int;
myFunc -> split;
binary_search -> sum;
binary_search -> print;
binary_search -> binary_search;
binary_search2 -> cumsum;
binary_search2 -> sum;
binary_search2 -> int;
binary_search2 -> print;
binary_search2 -> bisect_left;
binary_search2 -> len;
get_high_freq_tokens -> open;
get_high_freq_tokens -> load;
get_high_freq_tokens -> set;
get_high_freq_tokens -> append;
get_high_freq_tokens -> print;
get_high_freq_tokens -> array;
get_high_freq_tokens -> binary_search;
get_high_freq_tokens -> dump;
get_high_freq_tokens -> min;
get_high_freq_tokens -> max;
get_high_freq_tokens -> ValueError;
check_parent_directory_exists -> dirname;
check_parent_directory_exists -> exists;
check_parent_directory_exists -> FileNotFoundError;
check_parent_directory_exists -> print;
get_token_cnt -> glob;
get_token_cnt -> from_generator;
get_token_cnt -> print;
get_token_cnt -> open;
get_token_cnt -> append;
get_token_cnt -> sum;
get_token_cnt -> Reader;
get_token_cnt -> len;
get_token_cnt -> tokenizer;
train_tokenizer -> print;
train_tokenizer -> get_token_cnt;
train_tokenizer -> from_generator;
train_tokenizer -> train_new_from_iterator;
train_tokenizer -> glob;
train_tokenizer -> open;
train_tokenizer -> Reader;
train_tokenizer -> close;
train_tokenizer -> len;
train_tokenizer -> append;
analyze_token_usage -> SentencePieceProcessor;
analyze_token_usage -> load;
analyze_token_usage -> get_piece_size;
analyze_token_usage -> print;
analyze_token_usage -> glob;
analyze_token_usage -> open;
analyze_token_usage -> append;
analyze_token_usage -> from_generator;
analyze_token_usage -> zeros;
analyze_token_usage -> sum;
analyze_token_usage -> flip;
analyze_token_usage -> range;
analyze_token_usage -> close;
analyze_token_usage -> dump;
analyze_token_usage -> Reader;
analyze_token_usage -> encode;
analyze_token_usage -> flatten;
analyze_token_usage -> Counter;
analyze_token_usage -> len;
analyze_token_usage -> int;
analyze_token_usage -> float;
analyze_token_usage -> argsort;
analyze_token_usage -> ravel;
analyze_token_usage -> str;
analyze_token_usage -> id_to_piece;
check_directory_exists -> isdir;
check_directory_exists -> print;
check_directory_exists -> FileNotFoundError;
merge_embed -> range;
merge_embed -> load;
merge_embed -> check_directory_exists;
merge_embed -> save;
docker_executor -> GitArchivePackager;
docker_executor -> DockerExecutor;
run_data_pipeline -> docker_executor;
run_data_pipeline -> Experiment;
run_data_pipeline -> add;
run_data_pipeline -> run;
run_data_pipeline -> download_slimpajama;
run_data_pipeline -> Partial;
run_data_pipeline -> Script;
download_slimpajama -> format;
download_slimpajama -> Script;
approve_source -> rename;
approve_source -> open;
approve_source -> splitlines;
approve_source -> loads;
approve_source -> read;
approve_source -> dump;
approve_source -> write;
_split_shards -> range;
_split_shards -> append;
_split_shards -> len;
_get_shard_list -> rglob;
_get_shard_list -> sorted;
_get_shard_list -> _split_shards;
_get_shard_list -> Path;
_get_shard_list -> str;
_extract_single_zst_file -> makedirs;
_extract_single_zst_file -> join;
_extract_single_zst_file -> exists;
_extract_single_zst_file -> print;
_extract_single_zst_file -> stat;
_extract_single_zst_file -> tqdm;
_extract_single_zst_file -> ZstdDecompressor;
_extract_single_zst_file -> int;
_extract_single_zst_file -> remove;
_extract_single_zst_file -> open;
_extract_single_zst_file -> read_to_iter;
_extract_single_zst_file -> write;
_extract_single_zst_file -> update;
_extract_single_shard -> join;
_extract_single_shard -> _extract_single_zst_file;
_extract_single_shard -> approve_source;
_run_extraction_on_shard -> print;
_run_extraction_on_shard -> Pool;
_run_extraction_on_shard -> map;
_run_extraction_on_shard -> append;
_run_extraction_on_shard -> warning;
_run_extraction_on_shard -> cpu_count;
run_extraction -> _get_shard_list;
run_extraction -> _run_extraction_on_shard;
run_extraction -> print;
run_extraction -> int;
run_extraction -> len;
_execute_cmd -> time;
_execute_cmd -> print;
_execute_cmd -> check_call;
_execute_cmd -> basename;
preprocess_data -> _get_shard_list;
preprocess_data -> makedirs;
preprocess_data -> join;
preprocess_data -> append;
preprocess_data -> _execute_cmd;
preprocess_data -> int;
preprocess_data -> basename;
preprocess_data -> cpu_count;
}
